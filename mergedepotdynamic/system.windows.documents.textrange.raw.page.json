{"content":"    \r\n    <h1 id=\"System_Windows_Documents_TextRange\">\r\n      <span class=\"lang-csharp\">TextRange</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a selection of content between two <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> positions.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class TextRange</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">TextRange</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The TextRange class introduces the following terminology.  </p>\n<ul>\n<li><p><strong>Selection</strong> - A TextRange is a selection of content between two positions indicated by <strong>TextPointers</strong>.  One of these positions a fixed anchor with respect to the selection, while the other position is movable.  This is similar to how a selection made by a user using the mouse or keyboard behaves.  </p>\n</li>\n<li><p><strong>Current Selection</strong> - Because a TextRange always indicates a selection in content, it makes sense to simply refer to the selection indicated by a TextRange as the <em>current selection</em>.  </p>\n</li>\n<li><p><strong>Text Container</strong> - A <em>text container</em> is the element that forms the ultimate border for the flow content at hand; the selection indicated by a TextRange always falls within a text container.  Currently, a text container must be either a <a class=\"xref\" href=\"system.windows.documents.flowdocument\" data-linktype=\"relative-path\">FlowDocument</a> or a <a class=\"xref\" href=\"system.windows.controls.textblock\" data-linktype=\"relative-path\">TextBlock</a>.  </p>\n</li>\n<li><p><strong>Document</strong> - The content collectively contained within a text container is referred to as a <em>document</em>.  </p>\n<p>For more information about other related terms like <em>position</em>, see <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a>.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextRange__ctor_System_Windows_Documents_TextPointer_System_Windows_Documents_TextPointer_\" data-linktype=\"self-bookmark\">TextRange(TextPointer,TextPointer)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.documents.textrange\" data-linktype=\"relative-path\">TextRange</a> class, taking two specified <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> positions as the beginning and end positions for the new range.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextRange_End\" data-linktype=\"self-bookmark\">End</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Get the position that marks the end of the current selection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextRange_IsEmpty\" data-linktype=\"self-bookmark\">IsEmpty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether or not the current selection is empty.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextRange_Start\" data-linktype=\"self-bookmark\">Start</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the position that marks the beginning of the current selection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextRange_Text\" data-linktype=\"self-bookmark\">Text</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the plain text contents of the current selection.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextRange_ApplyPropertyValue_System_Windows_DependencyProperty_System_Object_\" data-linktype=\"self-bookmark\">ApplyPropertyValue(DependencyProperty,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies a specified formatting property and value to the current selection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextRange_CanLoad_System_String_\" data-linktype=\"self-bookmark\">CanLoad(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Checks whether the current selection can be loaded with content in a specified data format.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextRange_CanSave_System_String_\" data-linktype=\"self-bookmark\">CanSave(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Checks whether the current selection can be saved as a specified data format.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextRange_ClearAllProperties\" data-linktype=\"self-bookmark\">ClearAllProperties()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes all formatting properties (represented by <a class=\"xref\" href=\"system.windows.documents.inline\" data-linktype=\"relative-path\">Inline</a> elements) from the current selection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextRange_Contains_System_Windows_Documents_TextPointer_\" data-linktype=\"self-bookmark\">Contains(TextPointer)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Checks whether a position (specified by a <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a>) is located within the current selection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextRange_GetPropertyValue_System_Windows_DependencyProperty_\" data-linktype=\"self-bookmark\">GetPropertyValue(DependencyProperty)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the effective value of a specified formatting property on the current selection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextRange_Load_System_IO_Stream_System_String_\" data-linktype=\"self-bookmark\">Load(Stream,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Loads the current selection in a specified data format from a specified stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextRange_Save_System_IO_Stream_System_String_\" data-linktype=\"self-bookmark\">Save(Stream,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves the current selection to a specified stream in a specified data format.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextRange_Save_System_IO_Stream_System_String_System_Boolean_\" data-linktype=\"self-bookmark\">Save(Stream,String,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves the current selection to a specified stream in a specified data format, with the option of preserving custom <a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a> objects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextRange_Select_System_Windows_Documents_TextPointer_System_Windows_Documents_TextPointer_\" data-linktype=\"self-bookmark\">Select(TextPointer,TextPointer)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates the current selection, taking two <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> positions to indicate the updated selection.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextRange_Changed\" data-linktype=\"self-bookmark\">Changed</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the range is repositioned to cover a new span of content.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextRange__ctor_System_Windows_Documents_TextPointer_System_Windows_Documents_TextPointer_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextRange__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TextRange(TextPointer,TextPointer)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.documents.textrange\" data-linktype=\"relative-path\">TextRange</a> class, taking two specified <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> positions as the beginning and end positions for the new range.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TextRange (System.Windows.Documents.TextPointer position1, System.Windows.Documents.TextPointer position2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>position1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A fixed anchor position that marks one end of the selection used to form the new <a class=\"xref\" href=\"system.windows.documents.textrange\" data-linktype=\"relative-path\">TextRange</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>position2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A movable position that marks the other end of the selection used to form the new <a class=\"xref\" href=\"system.windows.documents.textrange\" data-linktype=\"relative-path\">TextRange</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>Occurs when <code>position1</code> and <code>position2</code> are not positioned within the same document.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>Occurs when <code>position1</code> or <code>position2</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.windows.documents.textrange\" data-linktype=\"relative-path\">TextRange</a> is formed from a selection between two positions indicated by <strong>TextPointers</strong>.  One of these positions (indicated by <code>position1</code>) is fixed with respect to the selection, while the other position (indicated by <code>position2</code>) is movable.  This is similar to how a selection made by a user using the mouse or keyboard behaves.  </p>\n<p> The actual ends of the new <a class=\"xref\" href=\"system.windows.documents.textrange\" data-linktype=\"relative-path\">TextRange</a> may be adjusted to match any selection heuristics that are applicable to the document that contains the new <a class=\"xref\" href=\"system.windows.documents.textrange\" data-linktype=\"relative-path\">TextRange</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the use of the <a class=\"xref\" href=\"system.windows.documents.textrange\" data-linktype=\"relative-path\">TextRange</a> constructor.  </p>\n<pre><code class=\"lang-cs\" name=\"TextPointer_Snippets#_TextRange_Text\">// This method returns a plain text representation of a specified FlowDocument.\nstring GetTextFromFlowDocument(FlowDocument flowDoc)\n{\n     // Create a new TextRanage that takes the entire FlowDocument as the current selection.\n     TextRange flowDocSelection = new TextRange(flowDoc.ContentStart, flowDoc.ContentEnd);\n      \n     // Use the Text property to extract a string that contains the unformatted text contents \n     // of the FlowDocument.\n     return flowDocSelection.Text;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"TextPointer_Snippets#_TextRange_Text\">&#39; This method returns a plain text representation of a specified FlowDocument.\nPrivate Function GetTextFromFlowDocument(ByVal flowDoc As FlowDocument) As String\n    &#39; Create a new TextRanage that takes the entire FlowDocument as the current selection.\n    Dim flowDocSelection As New TextRange(flowDoc.ContentStart, flowDoc.ContentEnd)\n\n    &#39; Use the Text property to extract a string that contains the unformatted text contents \n    &#39; of the FlowDocument.\n    Return flowDocSelection.Text\nEnd Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextRange_End\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextRange_End_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">End</div>        \r\n          </div>\r\n    \r\n            <p>Get the position that marks the end of the current selection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Documents.TextPointer End { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> that points to the end of the current selection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the use of the End property.  </p>\n<pre><code class=\"lang-cs\" name=\"TextPointer_Snippets#_TextRange_StartEnd\">// This method returns true if two specified selections overlap, including when the\n// end of one selection serves as the beginning of the other.\nbool DoSelectionsOverlap(TextRange selection1, TextRange selection2)\n{\n    // Is either end of selection2 contained by selection1?\n    if (selection1.Contains(selection2.Start) || selection1.Contains(selection2.End))\n    {\n        // If so, the selections overlap.\n        return true;\n    }\n    // If not, selection2 may still entirely contain selection1.\n    // Is either end of selection1 contained by seleciotn2?\n    else if (selection2.Contains(selection1.Start) || selection2.Contains(selection1.End))\n    {\n        // If so, the selections overlap.\n        return true;\n    }\n    // If neither selection contains the begging or end of the other selection, \n    //the selections do not overlap.\n    else return false;    \n}\n</code></pre><pre><code class=\"lang-vb\" name=\"TextPointer_Snippets#_TextRange_StartEnd\">&#39; This method returns true if two specified selections overlap, including when the\n&#39; end of one selection serves as the beginning of the other.\nPrivate Function DoSelectionsOverlap(ByVal selection1 As TextRange, ByVal selection2 As TextRange) As Boolean\n    &#39; Is either end of selection2 contained by selection1?\n    If selection1.Contains(selection2.Start) OrElse selection1.Contains(selection2.End) Then\n        &#39; If so, the selections overlap.\n        Return True\n        &#39; If not, selection2 may still entirely contain selection1.\n        &#39; Is either end of selection1 contained by seleciotn2?\n    ElseIf selection2.Contains(selection1.Start) OrElse selection2.Contains(selection1.End) Then\n        &#39; If so, the selections overlap.\n        Return True\n        &#39; If neither selection contains the begging or end of the other selection, \n        &#39;the selections do not overlap.\n    Else\n        Return False\n    End If\nEnd Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextRange_IsEmpty\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextRange_IsEmpty_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsEmpty</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether or not the current selection is empty.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsEmpty { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current selection is empty; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.windows.documents.textrange\" data-linktype=\"relative-path\">TextRange</a> is considered empty if the <a class=\"xref\" href=\"system.windows.documents.textrange#System_Windows_Documents_TextRange_Start_\" data-linktype=\"relative-path\">Start</a> and <a class=\"xref\" href=\"system.windows.documents.textrange#System_Windows_Documents_TextRange_End_\" data-linktype=\"relative-path\">End</a> positions are equal.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the use of the IsEmpty property.  </p>\n<pre><code class=\"lang-cs\" name=\"TextPointer_Snippets#_TextRange_LoadSave\">// This method accepts an input stream and a corresponding data format.  The method\n// will attempt to load the input stream into a TextRange selection, apply Bold formatting\n// to the selection, save the reformatted selection to an alternat stream, and return \n// the reformatted stream.  \nStream BoldFormatStream(Stream inputStream, string dataFormat)\n{\n    // A text container to read the stream into.\n    FlowDocument workDoc = new FlowDocument();\n    TextRange selection = new TextRange(workDoc.ContentStart, workDoc.ContentEnd);\n    Stream outputStream = new MemoryStream();\n\n    try\n    {\n        // Check for a valid data format, and then attempt to load the input stream\n        // into the current selection.  Note that CanLoad ONLY checks whether dataFormat\n        // is a currently supported data format for loading a TextRange.  It does not \n        // verify that the stream actually contains the specified format.  An exception \n        // may be raised when there is a mismatch between the specified data format and \n        // the data in the stream. \n        if (selection.CanLoad(dataFormat))\n            selection.Load(inputStream, dataFormat);\n    }\n    catch (Exception e) { return outputStream; /* Load failure; return a null stream. */ }\n\n    // Apply Bold formatting to the selection, if it is not empty.\n    if (!selection.IsEmpty)\n        selection.ApplyPropertyValue(TextElement.FontWeightProperty, FontWeights.Bold);\n\n    // Save the formatted selection to a stream, and return the stream.\n    if (selection.CanSave(dataFormat))\n        selection.Save(outputStream, dataFormat);\n\n    return outputStream;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"TextPointer_Snippets#_TextRange_LoadSave\">&#39; This method accepts an input stream and a corresponding data format.  The method\n&#39; will attempt to load the input stream into a TextRange selection, apply Bold formatting\n&#39; to the selection, save the reformatted selection to an alternat stream, and return \n&#39; the reformatted stream.  \nPrivate Function BoldFormatStream(ByVal inputStream As Stream, ByVal dataFormat As String) As Stream\n    &#39; A text container to read the stream into.\n    Dim workDoc As New FlowDocument()\n    Dim selection As New TextRange(workDoc.ContentStart, workDoc.ContentEnd)\n    Dim outputStream As Stream = New MemoryStream()\n\n    Try\n        &#39; Check for a valid data format, and then attempt to load the input stream\n        &#39; into the current selection.  Note that CanLoad ONLY checks whether dataFormat\n        &#39; is a currently supported data format for loading a TextRange.  It does not \n        &#39; verify that the stream actually contains the specified format.  An exception \n        &#39; may be raised when there is a mismatch between the specified data format and \n        &#39; the data in the stream. \n        If selection.CanLoad(dataFormat) Then\n            selection.Load(inputStream, dataFormat)\n        End If\n    Catch e As Exception &#39; Load failure return a null stream. \n        Return outputStream\n    End Try\n\n    &#39; Apply Bold formatting to the selection, if it is not empty.\n    If Not selection.IsEmpty Then\n        selection.ApplyPropertyValue(TextElement.FontWeightProperty, FontWeights.Bold)\n    End If\n\n    &#39; Save the formatted selection to a stream, and return the stream.\n    If selection.CanSave(dataFormat) Then\n        selection.Save(outputStream, dataFormat)\n    End If\n\n    Return outputStream\nEnd Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextRange_Start\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextRange_Start_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Start</div>        \r\n          </div>\r\n    \r\n            <p>Gets the position that marks the beginning of the current selection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Documents.TextPointer Start { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> that points to the beginning of the current selection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the use of the Start property.  </p>\n<pre><code class=\"lang-cs\" name=\"TextPointer_Snippets#_TextRange_StartEnd\">// This method returns true if two specified selections overlap, including when the\n// end of one selection serves as the beginning of the other.\nbool DoSelectionsOverlap(TextRange selection1, TextRange selection2)\n{\n    // Is either end of selection2 contained by selection1?\n    if (selection1.Contains(selection2.Start) || selection1.Contains(selection2.End))\n    {\n        // If so, the selections overlap.\n        return true;\n    }\n    // If not, selection2 may still entirely contain selection1.\n    // Is either end of selection1 contained by seleciotn2?\n    else if (selection2.Contains(selection1.Start) || selection2.Contains(selection1.End))\n    {\n        // If so, the selections overlap.\n        return true;\n    }\n    // If neither selection contains the begging or end of the other selection, \n    //the selections do not overlap.\n    else return false;    \n}\n</code></pre><pre><code class=\"lang-vb\" name=\"TextPointer_Snippets#_TextRange_StartEnd\">&#39; This method returns true if two specified selections overlap, including when the\n&#39; end of one selection serves as the beginning of the other.\nPrivate Function DoSelectionsOverlap(ByVal selection1 As TextRange, ByVal selection2 As TextRange) As Boolean\n    &#39; Is either end of selection2 contained by selection1?\n    If selection1.Contains(selection2.Start) OrElse selection1.Contains(selection2.End) Then\n        &#39; If so, the selections overlap.\n        Return True\n        &#39; If not, selection2 may still entirely contain selection1.\n        &#39; Is either end of selection1 contained by seleciotn2?\n    ElseIf selection2.Contains(selection1.Start) OrElse selection2.Contains(selection1.End) Then\n        &#39; If so, the selections overlap.\n        Return True\n        &#39; If neither selection contains the begging or end of the other selection, \n        &#39;the selections do not overlap.\n    Else\n        Return False\n    End If\nEnd Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextRange_Text\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextRange_Text_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Text</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the plain text contents of the current selection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Text { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string containing the plain text contents of the current selection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>Occurs when an attempt is made to set this property to <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this property to extract the plain text content in the current selection, regardless of any formatting that may be present.  </p>\n<p> New line characters and paragraph breaks are treated as equivalent with respect to this property.  Any types of content breaks present in the current selection are converted to new lines when this property is read.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the use of the Text property.  </p>\n<pre><code class=\"lang-cs\" name=\"TextPointer_Snippets#_TextRange_Text\">// This method returns a plain text representation of a specified FlowDocument.\nstring GetTextFromFlowDocument(FlowDocument flowDoc)\n{\n     // Create a new TextRanage that takes the entire FlowDocument as the current selection.\n     TextRange flowDocSelection = new TextRange(flowDoc.ContentStart, flowDoc.ContentEnd);\n      \n     // Use the Text property to extract a string that contains the unformatted text contents \n     // of the FlowDocument.\n     return flowDocSelection.Text;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"TextPointer_Snippets#_TextRange_Text\">&#39; This method returns a plain text representation of a specified FlowDocument.\nPrivate Function GetTextFromFlowDocument(ByVal flowDoc As FlowDocument) As String\n    &#39; Create a new TextRanage that takes the entire FlowDocument as the current selection.\n    Dim flowDocSelection As New TextRange(flowDoc.ContentStart, flowDoc.ContentEnd)\n\n    &#39; Use the Text property to extract a string that contains the unformatted text contents \n    &#39; of the FlowDocument.\n    Return flowDocSelection.Text\nEnd Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextRange_ApplyPropertyValue_System_Windows_DependencyProperty_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextRange_ApplyPropertyValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ApplyPropertyValue(DependencyProperty,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Applies a specified formatting property and value to the current selection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ApplyPropertyValue (System.Windows.DependencyProperty formattingProperty, object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>formattingProperty</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A formatting property to apply.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value for the formatting property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>Occurs when <code>formattingProperty</code> does not specify a valid formatting property, or <code>value</code> specifies an invalid value for <code>formattingProperty</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>Occurs when <code>formattingProperty</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method applies formatting by inserting the appropriate <a class=\"xref\" href=\"system.windows.documents.inline\" data-linktype=\"relative-path\">Inline</a> elements, such as <a class=\"xref\" href=\"system.windows.documents.bold\" data-linktype=\"relative-path\">Bold</a> and <a class=\"xref\" href=\"system.windows.documents.italic\" data-linktype=\"relative-path\">Italic</a>, into the selection indicated by this <a class=\"xref\" href=\"system.windows.documents.textrange\" data-linktype=\"relative-path\">TextRange</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the use of the ApplyPropertyValue method.  </p>\n<pre><code class=\"lang-cs\" name=\"TextPointer_Snippets#_TextRange_LoadSave\">// This method accepts an input stream and a corresponding data format.  The method\n// will attempt to load the input stream into a TextRange selection, apply Bold formatting\n// to the selection, save the reformatted selection to an alternat stream, and return \n// the reformatted stream.  \nStream BoldFormatStream(Stream inputStream, string dataFormat)\n{\n    // A text container to read the stream into.\n    FlowDocument workDoc = new FlowDocument();\n    TextRange selection = new TextRange(workDoc.ContentStart, workDoc.ContentEnd);\n    Stream outputStream = new MemoryStream();\n\n    try\n    {\n        // Check for a valid data format, and then attempt to load the input stream\n        // into the current selection.  Note that CanLoad ONLY checks whether dataFormat\n        // is a currently supported data format for loading a TextRange.  It does not \n        // verify that the stream actually contains the specified format.  An exception \n        // may be raised when there is a mismatch between the specified data format and \n        // the data in the stream. \n        if (selection.CanLoad(dataFormat))\n            selection.Load(inputStream, dataFormat);\n    }\n    catch (Exception e) { return outputStream; /* Load failure; return a null stream. */ }\n\n    // Apply Bold formatting to the selection, if it is not empty.\n    if (!selection.IsEmpty)\n        selection.ApplyPropertyValue(TextElement.FontWeightProperty, FontWeights.Bold);\n\n    // Save the formatted selection to a stream, and return the stream.\n    if (selection.CanSave(dataFormat))\n        selection.Save(outputStream, dataFormat);\n\n    return outputStream;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"TextPointer_Snippets#_TextRange_LoadSave\">&#39; This method accepts an input stream and a corresponding data format.  The method\n&#39; will attempt to load the input stream into a TextRange selection, apply Bold formatting\n&#39; to the selection, save the reformatted selection to an alternat stream, and return \n&#39; the reformatted stream.  \nPrivate Function BoldFormatStream(ByVal inputStream As Stream, ByVal dataFormat As String) As Stream\n    &#39; A text container to read the stream into.\n    Dim workDoc As New FlowDocument()\n    Dim selection As New TextRange(workDoc.ContentStart, workDoc.ContentEnd)\n    Dim outputStream As Stream = New MemoryStream()\n\n    Try\n        &#39; Check for a valid data format, and then attempt to load the input stream\n        &#39; into the current selection.  Note that CanLoad ONLY checks whether dataFormat\n        &#39; is a currently supported data format for loading a TextRange.  It does not \n        &#39; verify that the stream actually contains the specified format.  An exception \n        &#39; may be raised when there is a mismatch between the specified data format and \n        &#39; the data in the stream. \n        If selection.CanLoad(dataFormat) Then\n            selection.Load(inputStream, dataFormat)\n        End If\n    Catch e As Exception &#39; Load failure return a null stream. \n        Return outputStream\n    End Try\n\n    &#39; Apply Bold formatting to the selection, if it is not empty.\n    If Not selection.IsEmpty Then\n        selection.ApplyPropertyValue(TextElement.FontWeightProperty, FontWeights.Bold)\n    End If\n\n    &#39; Save the formatted selection to a stream, and return the stream.\n    If selection.CanSave(dataFormat) Then\n        selection.Save(outputStream, dataFormat)\n    End If\n\n    Return outputStream\nEnd Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextRange_CanLoad_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextRange_CanLoad_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanLoad(String)</div>        \r\n          </div>\r\n    \r\n            <p>Checks whether the current selection can be loaded with content in a specified data format.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CanLoad (string dataFormat);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataFormat</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A data format to check for load-compatibility into the current selection.  See <a class=\"xref\" href=\"system.windows.dataformats\" data-linktype=\"relative-path\">DataFormats</a> for a list of predefined data formats.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current selection can be loaded with content in the specified data format; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the corresponding <a class=\"xref\" href=\"system.windows.documents.textrange#System_Windows_Documents_TextRange_Load_\" data-linktype=\"relative-path\">Load</a> method to actually load content into the current selection in a specified data format.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the use of the CanLoad method.  </p>\n<pre><code class=\"lang-cs\" name=\"TextPointer_Snippets#_TextRange_LoadSave\">// This method accepts an input stream and a corresponding data format.  The method\n// will attempt to load the input stream into a TextRange selection, apply Bold formatting\n// to the selection, save the reformatted selection to an alternat stream, and return \n// the reformatted stream.  \nStream BoldFormatStream(Stream inputStream, string dataFormat)\n{\n    // A text container to read the stream into.\n    FlowDocument workDoc = new FlowDocument();\n    TextRange selection = new TextRange(workDoc.ContentStart, workDoc.ContentEnd);\n    Stream outputStream = new MemoryStream();\n\n    try\n    {\n        // Check for a valid data format, and then attempt to load the input stream\n        // into the current selection.  Note that CanLoad ONLY checks whether dataFormat\n        // is a currently supported data format for loading a TextRange.  It does not \n        // verify that the stream actually contains the specified format.  An exception \n        // may be raised when there is a mismatch between the specified data format and \n        // the data in the stream. \n        if (selection.CanLoad(dataFormat))\n            selection.Load(inputStream, dataFormat);\n    }\n    catch (Exception e) { return outputStream; /* Load failure; return a null stream. */ }\n\n    // Apply Bold formatting to the selection, if it is not empty.\n    if (!selection.IsEmpty)\n        selection.ApplyPropertyValue(TextElement.FontWeightProperty, FontWeights.Bold);\n\n    // Save the formatted selection to a stream, and return the stream.\n    if (selection.CanSave(dataFormat))\n        selection.Save(outputStream, dataFormat);\n\n    return outputStream;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"TextPointer_Snippets#_TextRange_LoadSave\">&#39; This method accepts an input stream and a corresponding data format.  The method\n&#39; will attempt to load the input stream into a TextRange selection, apply Bold formatting\n&#39; to the selection, save the reformatted selection to an alternat stream, and return \n&#39; the reformatted stream.  \nPrivate Function BoldFormatStream(ByVal inputStream As Stream, ByVal dataFormat As String) As Stream\n    &#39; A text container to read the stream into.\n    Dim workDoc As New FlowDocument()\n    Dim selection As New TextRange(workDoc.ContentStart, workDoc.ContentEnd)\n    Dim outputStream As Stream = New MemoryStream()\n\n    Try\n        &#39; Check for a valid data format, and then attempt to load the input stream\n        &#39; into the current selection.  Note that CanLoad ONLY checks whether dataFormat\n        &#39; is a currently supported data format for loading a TextRange.  It does not \n        &#39; verify that the stream actually contains the specified format.  An exception \n        &#39; may be raised when there is a mismatch between the specified data format and \n        &#39; the data in the stream. \n        If selection.CanLoad(dataFormat) Then\n            selection.Load(inputStream, dataFormat)\n        End If\n    Catch e As Exception &#39; Load failure return a null stream. \n        Return outputStream\n    End Try\n\n    &#39; Apply Bold formatting to the selection, if it is not empty.\n    If Not selection.IsEmpty Then\n        selection.ApplyPropertyValue(TextElement.FontWeightProperty, FontWeights.Bold)\n    End If\n\n    &#39; Save the formatted selection to a stream, and return the stream.\n    If selection.CanSave(dataFormat) Then\n        selection.Save(outputStream, dataFormat)\n    End If\n\n    Return outputStream\nEnd Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextRange_CanSave_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextRange_CanSave_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanSave(String)</div>        \r\n          </div>\r\n    \r\n            <p>Checks whether the current selection can be saved as a specified data format.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CanSave (string dataFormat);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataFormat</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A data format to check for save compatibility with the current selection.  See <a class=\"xref\" href=\"system.windows.dataformats\" data-linktype=\"relative-path\">DataFormats</a> for a list of predefined data formats.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current selection can be saved as the specified data format; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the corresponding <a class=\"xref\" href=\"system.windows.documents.textrange#System_Windows_Documents_TextRange_Save_\" data-linktype=\"relative-path\">Save</a> method to actually save the current selection in a specified data format.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the use of the CanSave method.  </p>\n<pre><code class=\"lang-cs\" name=\"TextPointer_Snippets#_TextRange_LoadSave\">// This method accepts an input stream and a corresponding data format.  The method\n// will attempt to load the input stream into a TextRange selection, apply Bold formatting\n// to the selection, save the reformatted selection to an alternat stream, and return \n// the reformatted stream.  \nStream BoldFormatStream(Stream inputStream, string dataFormat)\n{\n    // A text container to read the stream into.\n    FlowDocument workDoc = new FlowDocument();\n    TextRange selection = new TextRange(workDoc.ContentStart, workDoc.ContentEnd);\n    Stream outputStream = new MemoryStream();\n\n    try\n    {\n        // Check for a valid data format, and then attempt to load the input stream\n        // into the current selection.  Note that CanLoad ONLY checks whether dataFormat\n        // is a currently supported data format for loading a TextRange.  It does not \n        // verify that the stream actually contains the specified format.  An exception \n        // may be raised when there is a mismatch between the specified data format and \n        // the data in the stream. \n        if (selection.CanLoad(dataFormat))\n            selection.Load(inputStream, dataFormat);\n    }\n    catch (Exception e) { return outputStream; /* Load failure; return a null stream. */ }\n\n    // Apply Bold formatting to the selection, if it is not empty.\n    if (!selection.IsEmpty)\n        selection.ApplyPropertyValue(TextElement.FontWeightProperty, FontWeights.Bold);\n\n    // Save the formatted selection to a stream, and return the stream.\n    if (selection.CanSave(dataFormat))\n        selection.Save(outputStream, dataFormat);\n\n    return outputStream;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"TextPointer_Snippets#_TextRange_LoadSave\">&#39; This method accepts an input stream and a corresponding data format.  The method\n&#39; will attempt to load the input stream into a TextRange selection, apply Bold formatting\n&#39; to the selection, save the reformatted selection to an alternat stream, and return \n&#39; the reformatted stream.  \nPrivate Function BoldFormatStream(ByVal inputStream As Stream, ByVal dataFormat As String) As Stream\n    &#39; A text container to read the stream into.\n    Dim workDoc As New FlowDocument()\n    Dim selection As New TextRange(workDoc.ContentStart, workDoc.ContentEnd)\n    Dim outputStream As Stream = New MemoryStream()\n\n    Try\n        &#39; Check for a valid data format, and then attempt to load the input stream\n        &#39; into the current selection.  Note that CanLoad ONLY checks whether dataFormat\n        &#39; is a currently supported data format for loading a TextRange.  It does not \n        &#39; verify that the stream actually contains the specified format.  An exception \n        &#39; may be raised when there is a mismatch between the specified data format and \n        &#39; the data in the stream. \n        If selection.CanLoad(dataFormat) Then\n            selection.Load(inputStream, dataFormat)\n        End If\n    Catch e As Exception &#39; Load failure return a null stream. \n        Return outputStream\n    End Try\n\n    &#39; Apply Bold formatting to the selection, if it is not empty.\n    If Not selection.IsEmpty Then\n        selection.ApplyPropertyValue(TextElement.FontWeightProperty, FontWeights.Bold)\n    End If\n\n    &#39; Save the formatted selection to a stream, and return the stream.\n    If selection.CanSave(dataFormat) Then\n        selection.Save(outputStream, dataFormat)\n    End If\n\n    Return outputStream\nEnd Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextRange_ClearAllProperties\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextRange_ClearAllProperties_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClearAllProperties()</div>        \r\n          </div>\r\n    \r\n            <p>Removes all formatting properties (represented by <a class=\"xref\" href=\"system.windows.documents.inline\" data-linktype=\"relative-path\">Inline</a> elements) from the current selection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ClearAllProperties ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method only affects any <a class=\"xref\" href=\"system.windows.documents.inline\" data-linktype=\"relative-path\">Inline</a> formatting elements, such as <a class=\"xref\" href=\"system.windows.documents.bold\" data-linktype=\"relative-path\">Bold</a> or <a class=\"xref\" href=\"system.windows.documents.italic\" data-linktype=\"relative-path\">Italic</a>. Properties set on paragraphs and other enclosing <a class=\"xref\" href=\"system.windows.documents.block\" data-linktype=\"relative-path\">Block</a> elements are not changed.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextRange_Contains_System_Windows_Documents_TextPointer_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextRange_Contains_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Contains(TextPointer)</div>        \r\n          </div>\r\n    \r\n            <p>Checks whether a position (specified by a <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a>) is located within the current selection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Contains (System.Windows.Documents.TextPointer textPointer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>textPointer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A position to test for inclusion in the current selection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified position is located within the current selection; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>Occurs when <em>textPointer</em> is not in the same document as the current selection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Positions at either end of the current selection (indicated by <a class=\"xref\" href=\"system.windows.documents.textrange#System_Windows_Documents_TextRange_Start_\" data-linktype=\"relative-path\">Start</a> and <a class=\"xref\" href=\"system.windows.documents.textrange#System_Windows_Documents_TextRange_End_\" data-linktype=\"relative-path\">End</a>) are considered to be part of the current selection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the use of the Contains method.  </p>\n<pre><code class=\"lang-cs\" name=\"TextPointer_Snippets#_TextRange_StartEnd\">// This method returns true if two specified selections overlap, including when the\n// end of one selection serves as the beginning of the other.\nbool DoSelectionsOverlap(TextRange selection1, TextRange selection2)\n{\n    // Is either end of selection2 contained by selection1?\n    if (selection1.Contains(selection2.Start) || selection1.Contains(selection2.End))\n    {\n        // If so, the selections overlap.\n        return true;\n    }\n    // If not, selection2 may still entirely contain selection1.\n    // Is either end of selection1 contained by seleciotn2?\n    else if (selection2.Contains(selection1.Start) || selection2.Contains(selection1.End))\n    {\n        // If so, the selections overlap.\n        return true;\n    }\n    // If neither selection contains the begging or end of the other selection, \n    //the selections do not overlap.\n    else return false;    \n}\n</code></pre><pre><code class=\"lang-vb\" name=\"TextPointer_Snippets#_TextRange_StartEnd\">&#39; This method returns true if two specified selections overlap, including when the\n&#39; end of one selection serves as the beginning of the other.\nPrivate Function DoSelectionsOverlap(ByVal selection1 As TextRange, ByVal selection2 As TextRange) As Boolean\n    &#39; Is either end of selection2 contained by selection1?\n    If selection1.Contains(selection2.Start) OrElse selection1.Contains(selection2.End) Then\n        &#39; If so, the selections overlap.\n        Return True\n        &#39; If not, selection2 may still entirely contain selection1.\n        &#39; Is either end of selection1 contained by seleciotn2?\n    ElseIf selection2.Contains(selection1.Start) OrElse selection2.Contains(selection1.End) Then\n        &#39; If so, the selections overlap.\n        Return True\n        &#39; If neither selection contains the begging or end of the other selection, \n        &#39;the selections do not overlap.\n    Else\n        Return False\n    End If\nEnd Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextRange_GetPropertyValue_System_Windows_DependencyProperty_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextRange_GetPropertyValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetPropertyValue(DependencyProperty)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the effective value of a specified formatting property on the current selection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object GetPropertyValue (System.Windows.DependencyProperty formattingProperty);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>formattingProperty</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A formatting property to get the value of with respect to the current selection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An object specifying the value of the specified formatting property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>Occurs when <code>formattingProperty</code> does not specify a valid formatting property, or <code>value</code> specifies an invalid value for <code>formattingProperty</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>Occurs when <code>formattingProperty</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In order to return a property value, the entire <a class=\"xref\" href=\"system.windows.documents.textrange\" data-linktype=\"relative-path\">TextRange</a> must extend over text with only one value for the <code>formattingProperty</code>. If the <a class=\"xref\" href=\"system.windows.documents.textrange\" data-linktype=\"relative-path\">TextRange</a> extends over text with two or more different values for the <code>formattingProperty</code>, <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_UnsetValue\" data-linktype=\"relative-path\">UnsetValue</a> is returned.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextRange_Load_System_IO_Stream_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextRange_Load_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Load(Stream,String)</div>        \r\n          </div>\r\n    \r\n            <p>Loads the current selection in a specified data format from a specified stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Load (System.IO.Stream stream, string dataFormat);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A readable stream that contains data to load into the current selection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataFormat</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A data format to load the data as.  Currently supported data formats are <a class=\"xref\" href=\"system.windows.dataformats#System_Windows_DataFormats_Rtf\" data-linktype=\"relative-path\">Rtf</a>, <a class=\"xref\" href=\"system.windows.dataformats#System_Windows_DataFormats_Text\" data-linktype=\"relative-path\">Text</a>, <a class=\"xref\" href=\"system.windows.dataformats#System_Windows_DataFormats_Xaml\" data-linktype=\"relative-path\">Xaml</a>, and <a class=\"xref\" href=\"system.windows.dataformats#System_Windows_DataFormats_XamlPackage\" data-linktype=\"relative-path\">XamlPackage</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>Occurs when <code>stream</code> or <code>dataFormat</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>Occurs when the specified data format is unsupported.  May also be raised if content loaded from <code>stream</code> does not match the specified data format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CanSeek_\" data-linktype=\"relative-path\">CanSeek</a> is <code>true</code> for <code>stream</code>, content will be loaded from the beginning of the stream to the end of the stream.  Otherwise, content will be read from the current <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Position_\" data-linktype=\"relative-path\">Position</a> to the end of the stream.  When this method returns, <code>stream</code> is left open, and the current position within <code>stream</code> is undefined.  </p>\n<p> A load operation replaces the current selection with the newly loaded content.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the use of the Load method.  </p>\n<pre><code class=\"lang-cs\" name=\"TextPointer_Snippets#_TextRange_LoadSave\">// This method accepts an input stream and a corresponding data format.  The method\n// will attempt to load the input stream into a TextRange selection, apply Bold formatting\n// to the selection, save the reformatted selection to an alternat stream, and return \n// the reformatted stream.  \nStream BoldFormatStream(Stream inputStream, string dataFormat)\n{\n    // A text container to read the stream into.\n    FlowDocument workDoc = new FlowDocument();\n    TextRange selection = new TextRange(workDoc.ContentStart, workDoc.ContentEnd);\n    Stream outputStream = new MemoryStream();\n\n    try\n    {\n        // Check for a valid data format, and then attempt to load the input stream\n        // into the current selection.  Note that CanLoad ONLY checks whether dataFormat\n        // is a currently supported data format for loading a TextRange.  It does not \n        // verify that the stream actually contains the specified format.  An exception \n        // may be raised when there is a mismatch between the specified data format and \n        // the data in the stream. \n        if (selection.CanLoad(dataFormat))\n            selection.Load(inputStream, dataFormat);\n    }\n    catch (Exception e) { return outputStream; /* Load failure; return a null stream. */ }\n\n    // Apply Bold formatting to the selection, if it is not empty.\n    if (!selection.IsEmpty)\n        selection.ApplyPropertyValue(TextElement.FontWeightProperty, FontWeights.Bold);\n\n    // Save the formatted selection to a stream, and return the stream.\n    if (selection.CanSave(dataFormat))\n        selection.Save(outputStream, dataFormat);\n\n    return outputStream;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"TextPointer_Snippets#_TextRange_LoadSave\">&#39; This method accepts an input stream and a corresponding data format.  The method\n&#39; will attempt to load the input stream into a TextRange selection, apply Bold formatting\n&#39; to the selection, save the reformatted selection to an alternat stream, and return \n&#39; the reformatted stream.  \nPrivate Function BoldFormatStream(ByVal inputStream As Stream, ByVal dataFormat As String) As Stream\n    &#39; A text container to read the stream into.\n    Dim workDoc As New FlowDocument()\n    Dim selection As New TextRange(workDoc.ContentStart, workDoc.ContentEnd)\n    Dim outputStream As Stream = New MemoryStream()\n\n    Try\n        &#39; Check for a valid data format, and then attempt to load the input stream\n        &#39; into the current selection.  Note that CanLoad ONLY checks whether dataFormat\n        &#39; is a currently supported data format for loading a TextRange.  It does not \n        &#39; verify that the stream actually contains the specified format.  An exception \n        &#39; may be raised when there is a mismatch between the specified data format and \n        &#39; the data in the stream. \n        If selection.CanLoad(dataFormat) Then\n            selection.Load(inputStream, dataFormat)\n        End If\n    Catch e As Exception &#39; Load failure return a null stream. \n        Return outputStream\n    End Try\n\n    &#39; Apply Bold formatting to the selection, if it is not empty.\n    If Not selection.IsEmpty Then\n        selection.ApplyPropertyValue(TextElement.FontWeightProperty, FontWeights.Bold)\n    End If\n\n    &#39; Save the formatted selection to a stream, and return the stream.\n    If selection.CanSave(dataFormat) Then\n        selection.Save(outputStream, dataFormat)\n    End If\n\n    Return outputStream\nEnd Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextRange_Save_System_IO_Stream_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextRange_Save_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Save(Stream,String)</div>        \r\n          </div>\r\n    \r\n            <p>Saves the current selection to a specified stream in a specified data format.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Save (System.IO.Stream stream, string dataFormat);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An empty, writable stream to save the current selection to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataFormat</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A data format to save the current selection as.  Currently supported data formats are <a class=\"xref\" href=\"system.windows.dataformats#System_Windows_DataFormats_Rtf\" data-linktype=\"relative-path\">Rtf</a>, <a class=\"xref\" href=\"system.windows.dataformats#System_Windows_DataFormats_Text\" data-linktype=\"relative-path\">Text</a>, <a class=\"xref\" href=\"system.windows.dataformats#System_Windows_DataFormats_Xaml\" data-linktype=\"relative-path\">Xaml</a>, and <a class=\"xref\" href=\"system.windows.dataformats#System_Windows_DataFormats_XamlPackage\" data-linktype=\"relative-path\">XamlPackage</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>stream</code> or <code>dataFormat</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified data format is unsupported.  </p>\n<p> -or  </p>\n<p> Content loaded from <code>stream</code> does not match the specified data format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When this method returns, <code>stream</code> is left open, and the current position within <code>stream</code> is undefined.  </p>\n<p> As part of the save operation, content in the current selection may be converted to the data format specified by <code>dataFormat</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the use of the Save method.  </p>\n<pre><code class=\"lang-cs\" name=\"TextPointer_Snippets#_TextRange_LoadSave\">// This method accepts an input stream and a corresponding data format.  The method\n// will attempt to load the input stream into a TextRange selection, apply Bold formatting\n// to the selection, save the reformatted selection to an alternat stream, and return \n// the reformatted stream.  \nStream BoldFormatStream(Stream inputStream, string dataFormat)\n{\n    // A text container to read the stream into.\n    FlowDocument workDoc = new FlowDocument();\n    TextRange selection = new TextRange(workDoc.ContentStart, workDoc.ContentEnd);\n    Stream outputStream = new MemoryStream();\n\n    try\n    {\n        // Check for a valid data format, and then attempt to load the input stream\n        // into the current selection.  Note that CanLoad ONLY checks whether dataFormat\n        // is a currently supported data format for loading a TextRange.  It does not \n        // verify that the stream actually contains the specified format.  An exception \n        // may be raised when there is a mismatch between the specified data format and \n        // the data in the stream. \n        if (selection.CanLoad(dataFormat))\n            selection.Load(inputStream, dataFormat);\n    }\n    catch (Exception e) { return outputStream; /* Load failure; return a null stream. */ }\n\n    // Apply Bold formatting to the selection, if it is not empty.\n    if (!selection.IsEmpty)\n        selection.ApplyPropertyValue(TextElement.FontWeightProperty, FontWeights.Bold);\n\n    // Save the formatted selection to a stream, and return the stream.\n    if (selection.CanSave(dataFormat))\n        selection.Save(outputStream, dataFormat);\n\n    return outputStream;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"TextPointer_Snippets#_TextRange_LoadSave\">&#39; This method accepts an input stream and a corresponding data format.  The method\n&#39; will attempt to load the input stream into a TextRange selection, apply Bold formatting\n&#39; to the selection, save the reformatted selection to an alternat stream, and return \n&#39; the reformatted stream.  \nPrivate Function BoldFormatStream(ByVal inputStream As Stream, ByVal dataFormat As String) As Stream\n    &#39; A text container to read the stream into.\n    Dim workDoc As New FlowDocument()\n    Dim selection As New TextRange(workDoc.ContentStart, workDoc.ContentEnd)\n    Dim outputStream As Stream = New MemoryStream()\n\n    Try\n        &#39; Check for a valid data format, and then attempt to load the input stream\n        &#39; into the current selection.  Note that CanLoad ONLY checks whether dataFormat\n        &#39; is a currently supported data format for loading a TextRange.  It does not \n        &#39; verify that the stream actually contains the specified format.  An exception \n        &#39; may be raised when there is a mismatch between the specified data format and \n        &#39; the data in the stream. \n        If selection.CanLoad(dataFormat) Then\n            selection.Load(inputStream, dataFormat)\n        End If\n    Catch e As Exception &#39; Load failure return a null stream. \n        Return outputStream\n    End Try\n\n    &#39; Apply Bold formatting to the selection, if it is not empty.\n    If Not selection.IsEmpty Then\n        selection.ApplyPropertyValue(TextElement.FontWeightProperty, FontWeights.Bold)\n    End If\n\n    &#39; Save the formatted selection to a stream, and return the stream.\n    If selection.CanSave(dataFormat) Then\n        selection.Save(outputStream, dataFormat)\n    End If\n\n    Return outputStream\nEnd Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextRange_Save_System_IO_Stream_System_String_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextRange_Save_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Save(Stream,String,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Saves the current selection to a specified stream in a specified data format, with the option of preserving custom <a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a> objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Save (System.IO.Stream stream, string dataFormat, bool preserveTextElements);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An empty, writable stream to save the current selection to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataFormat</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A data format to save the current selection as.  Currently supported data formats are <a class=\"xref\" href=\"system.windows.dataformats#System_Windows_DataFormats_Rtf\" data-linktype=\"relative-path\">Rtf</a>, <a class=\"xref\" href=\"system.windows.dataformats#System_Windows_DataFormats_Text\" data-linktype=\"relative-path\">Text</a>, <a class=\"xref\" href=\"system.windows.dataformats#System_Windows_DataFormats_Xaml\" data-linktype=\"relative-path\">Xaml</a>, and <a class=\"xref\" href=\"system.windows.dataformats#System_Windows_DataFormats_XamlPackage\" data-linktype=\"relative-path\">XamlPackage</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>preserveTextElements</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to preserve custom <a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a> objects; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>Occurs when <code>stream</code> or <code>dataFormat</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>Occurs when the specified data format is unsupported.  May also be raised if content loaded from <code>stream</code> does not match the specified data format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When <code>preserveTextElements</code> is <code>false</code>, custom <a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a> objects are saved as known <a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a> types.  For example, suppose you create a custom <a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a> called <code>Heading1</code>, which inherits from <a class=\"xref\" href=\"system.windows.documents.paragraph\" data-linktype=\"relative-path\">Paragraph</a>. When you call this method with <code>preserveTextElements</code> set to <code>false</code>, <code>Heading1</code> is converted to a <a class=\"xref\" href=\"system.windows.documents.paragraph\" data-linktype=\"relative-path\">Paragraph</a> when the <a class=\"xref\" href=\"system.windows.documents.textrange\" data-linktype=\"relative-path\">TextRange</a> is saved.  When you call this method with <code>preserveTextElements</code> set to <code>true</code>, <code>Heading1</code> is saved without being converted. To preserve custom text elements, <code>dataFormat</code> must be set to <a class=\"xref\" href=\"system.windows.dataformats#System_Windows_DataFormats_Xaml\" data-linktype=\"relative-path\">System.Windows.DataFormats.Xaml</a>.  </p>\n<p> Save is introduced in the .NET Framework version 3.5.  For more information, see <a href=\"../Topic/.NET%20Framework%20Versions%20and%20Dependencies.md\" data-linktype=\"relative-path\">Versions and Dependencies</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextRange_Select_System_Windows_Documents_TextPointer_System_Windows_Documents_TextPointer_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextRange_Select_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Select(TextPointer,TextPointer)</div>        \r\n          </div>\r\n    \r\n            <p>Updates the current selection, taking two <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> positions to indicate the updated selection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Select (System.Windows.Documents.TextPointer position1, System.Windows.Documents.TextPointer position2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>position1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A fixed anchor position that marks one end of the updated selection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>position2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A movable position that marks the other end of the updated selection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>Occurs when <code>position1</code> and <code>position2</code> are not positioned within the same document.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>Occurs when <code>position1</code> or <code>position2</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.windows.documents.textrange\" data-linktype=\"relative-path\">TextRange</a> is formed from a selection between two positions indicated by <strong>TextPointers</strong>.  One of these positions (indicated by <code>position1</code>) is fixed with respect to the selection, while the other position (indicated by <code>position2</code>) is movable.  This is similar to how a selection made by a user using the mouse or keyboard behaves.  </p>\n<p> The actual ends of the new selection may be adjusted to match any selection heuristics that are applicable to the document that contains the new current selection.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextRange_Changed\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Changed</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the range is repositioned to cover a new span of content.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler Changed;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Documents.TextRange.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Documents.TextRange.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextRange\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextRange..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextRange.ApplyPropertyValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextRange.CanLoad\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextRange.CanSave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextRange.Changed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextRange.add_Changed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextRange.remove_Changed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextRange.ClearAllProperties\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextRange.Contains\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextRange.End\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextRange.GetPropertyValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextRange.IsEmpty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextRange.Load\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextRange.Save\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextRange.Select\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextRange.Start\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextRange.Text\">\r\n<meta name=\"APILocation\" content=\"PresentationFramework.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"325928b5-56ae-8f0f-8c65-253674c46cff\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Documents\\TextRange.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a selection of content between two  positions.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Documents/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Documents.TextRange\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Documents.TextRange.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Documents.TextRange.yml","open_to_public_contributors":true,"api_name":["System.Windows.Documents.TextRange","System.Windows.Documents.TextRange..ctor","System.Windows.Documents.TextRange.ApplyPropertyValue","System.Windows.Documents.TextRange.CanLoad","System.Windows.Documents.TextRange.CanSave","System.Windows.Documents.TextRange.Changed","System.Windows.Documents.TextRange.add_Changed","System.Windows.Documents.TextRange.remove_Changed","System.Windows.Documents.TextRange.ClearAllProperties","System.Windows.Documents.TextRange.Contains","System.Windows.Documents.TextRange.End","System.Windows.Documents.TextRange.GetPropertyValue","System.Windows.Documents.TextRange.IsEmpty","System.Windows.Documents.TextRange.Load","System.Windows.Documents.TextRange.Save","System.Windows.Documents.TextRange.Select","System.Windows.Documents.TextRange.Start","System.Windows.Documents.TextRange.Text"],"api_location":["PresentationFramework.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Documents.TextRange","System::Windows::Documents::TextRange","System.Windows.Documents.TextRange.#ctor","System::Windows::Documents::TextRange::#ctor","System.Windows.Documents.TextRange.ApplyPropertyValue","System::Windows::Documents::TextRange::ApplyPropertyValue","System.Windows.Documents.TextRange.CanLoad","System::Windows::Documents::TextRange::CanLoad","System.Windows.Documents.TextRange.CanSave","System::Windows::Documents::TextRange::CanSave","System.Windows.Documents.TextRange.Changed","System::Windows::Documents::TextRange::Changed","System.Windows.Documents.TextRange.ClearAllProperties","System::Windows::Documents::TextRange::ClearAllProperties","System.Windows.Documents.TextRange.Contains","System::Windows::Documents::TextRange::Contains","System.Windows.Documents.TextRange.End","System::Windows::Documents::TextRange::End","System.Windows.Documents.TextRange.GetPropertyValue","System::Windows::Documents::TextRange::GetPropertyValue","System.Windows.Documents.TextRange.IsEmpty","System::Windows::Documents::TextRange::IsEmpty","System.Windows.Documents.TextRange.Load","System::Windows::Documents::TextRange::Load","System.Windows.Documents.TextRange.Save","System::Windows::Documents::TextRange::Save","System.Windows.Documents.TextRange.Select","System::Windows::Documents::TextRange::Select","System.Windows.Documents.TextRange.Start","System::Windows::Documents::TextRange::Start","System.Windows.Documents.TextRange.Text","System::Windows::Documents::TextRange::Text"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"325928b5-56ae-8f0f-8c65-253674c46cff","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Documents\\TextRange.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Documents/TextRange.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"TextRange class | Microsoft Docs","_op_ogTitle":"TextRange class","description":"Represents a selection of content between two  positions.\n","toc_asset_id":"_splitted/System.Windows.Documents/toc.json","toc_rel":"_splitted/System.Windows.Documents/toc.json","source_url":"","ms.assetid":"System.Windows.Documents.TextRange","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.documents.textrange","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.documents.textrange","fileRelativePath":"System.Windows.Documents.TextRange.html"},"themesRelativePathToOutputRoot":"_themes/"}