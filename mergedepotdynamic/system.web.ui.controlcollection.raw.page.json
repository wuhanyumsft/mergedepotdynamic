{"content":"    \r\n    <h1 id=\"System_Web_UI_ControlCollection\">\r\n      <span class=\"lang-csharp\">ControlCollection</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a collection container that enables ASP.NET server controls to maintain a list of their child controls.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class ControlCollection : System.Collections.ICollection</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ControlCollection</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>You can access any of the properties and methods of the ControlCollection class through the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> property. Since the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> class is the base class for all ASP.NET server controls, all server controls inherit this property.  </p>\n<p> For more information about collections, see <a href=\"../Topic/Collections%20and%20Data%20Structures.md\" data-linktype=\"relative-path\">Collections and Data Structures</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_ControlCollection__ctor_System_Web_UI_Control_\" data-linktype=\"self-bookmark\">ControlCollection(Control)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> class for the specified parent server control.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_ControlCollection_Count\" data-linktype=\"self-bookmark\">Count</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of server controls in the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object for the specified ASP.NET server control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_ControlCollection_IsReadOnly\" data-linktype=\"self-bookmark\">IsReadOnly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_ControlCollection_IsSynchronized\" data-linktype=\"self-bookmark\">IsSynchronized</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object is synchronized.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_ControlCollection_Item_System_Int32_\" data-linktype=\"self-bookmark\">Item(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the server control at the specified index location in the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_ControlCollection_Owner\" data-linktype=\"self-bookmark\">Owner</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the ASP.NET server control to which the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object belongs.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_ControlCollection_SyncRoot\" data-linktype=\"self-bookmark\">SyncRoot</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an object that can be used to synchronize access to the collection of controls.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_ControlCollection_Add_System_Web_UI_Control_\" data-linktype=\"self-bookmark\">Add(Control)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> object to the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_ControlCollection_AddAt_System_Int32_System_Web_UI_Control_\" data-linktype=\"self-bookmark\">AddAt(Int32,Control)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> object to the collection at the specified index location.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_ControlCollection_Clear\" data-linktype=\"self-bookmark\">Clear()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes all controls from the current server control&#39;s <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_ControlCollection_Contains_System_Web_UI_Control_\" data-linktype=\"self-bookmark\">Contains(Control)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified server control is in the parent server control&#39;s <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_ControlCollection_CopyTo_System_Array_System_Int32_\" data-linktype=\"self-bookmark\">CopyTo(Array,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies the child controls stored in the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object to an <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> object, beginning at the specified index location in the <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_ControlCollection_GetEnumerator\" data-linktype=\"self-bookmark\">GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves an enumerator that can iterate through the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_ControlCollection_IndexOf_System_Web_UI_Control_\" data-linktype=\"self-bookmark\">IndexOf(Control)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the index of a specified <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> object in the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_ControlCollection_Remove_System_Web_UI_Control_\" data-linktype=\"self-bookmark\">Remove(Control)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the specified server control from the parent server control&#39;s <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_ControlCollection_RemoveAt_System_Int32_\" data-linktype=\"self-bookmark\">RemoveAt(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes a child control, at the specified index location, from the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_ControlCollection__ctor_System_Web_UI_Control_\">\r\n    \r\n            <a id=\"System_Web_UI_ControlCollection__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ControlCollection(Control)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> class for the specified parent server control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ControlCollection (System.Web.UI.Control owner);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>owner</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The ASP.NET server control that the control collection is created for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>Occurs if the <code>owner</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is a custom <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> class that overrides the constructor to write messages (which include the name of the <a class=\"xref\" href=\"system.web.ui.controlcollection#System_Web_UI_ControlCollection_Owner_\" data-linktype=\"relative-path\">Owner</a> property) to the trace log when an instance of the collection is created. You must enable tracing for the page or application for this example to work.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.ControlCollection_CTor_Owner#1\">\t// Create a custom ControlCollection that writes\n\t// information to the Trace log when an instance\n\t// of the collection is created.\n\t[AspNetHostingPermission(SecurityAction.Demand, Level=AspNetHostingPermissionLevel.Minimal)]\n\tpublic class CustomControlCollection : ControlCollection\n\t{\n\t\tprivate HttpContext context;\n\n\t\tpublic CustomControlCollection(Control owner)\n\t\t\t: base(owner)\n\t\t{\n\n\t\t\tHttpContext.Current.Trace.Write(&quot;The control collection is created.&quot;);\n\t\t\t// Display the Name of the control\n\t\t\t// that uses this collection when tracing is enabled.\n\t\t\tHttpContext.Current.Trace.Write(&quot;The owner is: &quot; + this.Owner.ToString());\n\t\t}\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.ControlCollection_CTor_Owner#1\">    &#39; Create a custom ControlCollection that writes\n    &#39; information to the Trace log when an instance\n    &#39; of the collection is created.\n    &lt;AspNetHostingPermission(SecurityAction.Demand, _\n       Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n    Public NotInheritable Class CustomControlCollection\n        Inherits ControlCollection\n\n        Private context As HttpContext\n\n        Public Sub New(ByVal owner As Control)\n            MyBase.New(owner)\n            HttpContext.Current.Trace.Write(&quot;The control collection is created.&quot;)\n            &#39; Display the Name of the control\n            &#39; that uses this collection when tracing is enabled.\n            HttpContext.Current.Trace.Write(&quot;The owner is: &quot; _\n          &amp; Me.Owner.ToString())\n        End Sub\n\n\n    End Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_ControlCollection_Count\">\r\n    \r\n            <a id=\"System_Web_UI_ControlCollection_Count_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Count</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of server controls in the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object for the specified ASP.NET server control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int Count { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of server controls in the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the Count property to iterate through a control&#39;s <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object. The use of the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_HasControls_\" data-linktype=\"relative-path\">HasControls</a> property verifies that the control has child controls. If <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_HasControls_\" data-linktype=\"relative-path\">HasControls</a> returns <code>false</code>, the remaining code does not run.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic Control.HasControls Example#1\">        If HasControls() Then\n            Dim i As Integer\n            For i = 0 To Controls.Count - 1\n                Controls(i).RenderControl(writer)\n            Next i\n        End If\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Control.HasControls Example#1\">if (HasControls()) {\n                 for (int i=0; i &lt; Controls.Count; i++) {\n                     Controls[i].RenderControl(writer);\n                 }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_ControlCollection_IsReadOnly\">\r\n    \r\n            <a id=\"System_Web_UI_ControlCollection_IsReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsReadOnly</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsReadOnly { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the control is read-only; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a method that enumerates through the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> collection of a <a class=\"xref\" href=\"system.web.ui.webcontrols.button\" data-linktype=\"relative-path\">Button</a> control, <code>myButton</code>. When the enumerator is created, the <a class=\"xref\" href=\"system.web.ui.controlcollection#System_Web_UI_ControlCollection_IsSynchronized_\" data-linktype=\"relative-path\">IsSynchronized</a> property is checked to see if the operation is thread safe, and if it is not, the <a class=\"xref\" href=\"system.web.ui.controlcollection#System_Web_UI_ControlCollection_SyncRoot_\" data-linktype=\"relative-path\">SyncRoot</a> property is used to obtain an object to make the operation thread safe. When the enumeration is complete, the value of the IsReadOnly property is written as the <a class=\"xref\" href=\"system.web.ui.webcontrols.label#System_Web_UI_WebControls_Label_Text_\" data-linktype=\"relative-path\">Text</a> property of a <a class=\"xref\" href=\"system.web.ui.webcontrols.label\" data-linktype=\"relative-path\">Label</a> control on the containing page.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.ControlCollection_NewSamples#2\">    &#39; Create a method that enuberates through a \n    &#39; button&#39;s ControlCollection in a thread-safe manner.  \n    Public Sub ListControlCollection(sender As Object, e As EventArgs)\n       Dim myEnumerator As IEnumerator = myButton.Controls.GetEnumerator()\n\n       &#39; Check the IsSynchronized property. If False,\n       &#39; use the SyncRoot method to get an object that \n       &#39; allows the enumeration of all controls to be \n       &#39; thread safe.\n       If myButton.Controls.IsSynchronized = False Then\n         SyncLock myButton.Controls.SyncRoot\n           While (myEnumerator.MoveNext())\n    \n           Dim myObject As Object  = myEnumerator.Current\n               \n             Dim childControl As LiteralControl = CType(myEnumerator.Current, LiteralControl)\n             Response.Write(&quot;&lt;b&gt;&lt;br /&gt; This is the  text of the child Control  &lt;/b&gt;: &quot; &amp; _\n                            childControl.Text)\n           End While\n          msgReadOnly.Text = myButton.Controls.IsReadOnly.ToString()\n          \n          End SyncLock\n       End If       \n     End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.ControlCollection_NewSamples#2\">    // Create a method that enuberates through a \n    // button//s ControlCollection in a thread-safe manner.  \n    public void ListControlCollection(object sender, EventArgs e)\n    {\n       IEnumerator myEnumerator = myButton.Controls.GetEnumerator();\n\n       // Check the IsSynchronized property. If False,\n       // use the SyncRoot method to get an object that \n       // allows the enumeration of all controls to be \n       // thread safe.\n       if (myButton.Controls.IsSynchronized == false)\n       {\n           lock (myButton.Controls.SyncRoot)\n           {\n               while (myEnumerator.MoveNext())\n               {\n\n                   Object myObject = myEnumerator.Current;\n\n                   LiteralControl childControl = (LiteralControl)myEnumerator.Current;\n                   Response.Write(&quot;&lt;b&gt;&lt;br /&gt; This is the  text of the child Control  &lt;/b&gt;: &quot; +\n                                  childControl.Text);\n               }\n               msgReadOnly.Text = myButton.Controls.IsReadOnly.ToString();\n           }\n       }       \n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_ControlCollection_IsSynchronized\">\r\n    \r\n            <a id=\"System_Web_UI_ControlCollection_IsSynchronized_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsSynchronized</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object is synchronized.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsSynchronized { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>This property is always <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a method that enumerates through the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> collection of a <a class=\"xref\" href=\"system.web.ui.webcontrols.button\" data-linktype=\"relative-path\">Button</a> control, <code>myButton</code>. When the enumerator is created, the IsSynchronized property is checked to see if the operation is thread safe, and if it is not, the <a class=\"xref\" href=\"system.web.ui.controlcollection#System_Web_UI_ControlCollection_SyncRoot_\" data-linktype=\"relative-path\">SyncRoot</a> property is used to obtain an object to make the operation thread safe. When the enumeration is complete, the value of the <a class=\"xref\" href=\"system.web.ui.controlcollection#System_Web_UI_ControlCollection_IsReadOnly_\" data-linktype=\"relative-path\">IsReadOnly</a> property is written as the <a class=\"xref\" href=\"system.web.ui.webcontrols.label#System_Web_UI_WebControls_Label_Text_\" data-linktype=\"relative-path\">Text</a> property of a <a class=\"xref\" href=\"system.web.ui.webcontrols.label\" data-linktype=\"relative-path\">Label</a> control on the containing page.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.ControlCollection_NewSamples#2\">    &#39; Create a method that enuberates through a \n    &#39; button&#39;s ControlCollection in a thread-safe manner.  \n    Public Sub ListControlCollection(sender As Object, e As EventArgs)\n       Dim myEnumerator As IEnumerator = myButton.Controls.GetEnumerator()\n\n       &#39; Check the IsSynchronized property. If False,\n       &#39; use the SyncRoot method to get an object that \n       &#39; allows the enumeration of all controls to be \n       &#39; thread safe.\n       If myButton.Controls.IsSynchronized = False Then\n         SyncLock myButton.Controls.SyncRoot\n           While (myEnumerator.MoveNext())\n    \n           Dim myObject As Object  = myEnumerator.Current\n               \n             Dim childControl As LiteralControl = CType(myEnumerator.Current, LiteralControl)\n             Response.Write(&quot;&lt;b&gt;&lt;br /&gt; This is the  text of the child Control  &lt;/b&gt;: &quot; &amp; _\n                            childControl.Text)\n           End While\n          msgReadOnly.Text = myButton.Controls.IsReadOnly.ToString()\n          \n          End SyncLock\n       End If       \n     End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.ControlCollection_NewSamples#2\">    // Create a method that enuberates through a \n    // button//s ControlCollection in a thread-safe manner.  \n    public void ListControlCollection(object sender, EventArgs e)\n    {\n       IEnumerator myEnumerator = myButton.Controls.GetEnumerator();\n\n       // Check the IsSynchronized property. If False,\n       // use the SyncRoot method to get an object that \n       // allows the enumeration of all controls to be \n       // thread safe.\n       if (myButton.Controls.IsSynchronized == false)\n       {\n           lock (myButton.Controls.SyncRoot)\n           {\n               while (myEnumerator.MoveNext())\n               {\n\n                   Object myObject = myEnumerator.Current;\n\n                   LiteralControl childControl = (LiteralControl)myEnumerator.Current;\n                   Response.Write(&quot;&lt;b&gt;&lt;br /&gt; This is the  text of the child Control  &lt;/b&gt;: &quot; +\n                                  childControl.Text);\n               }\n               msgReadOnly.Text = myButton.Controls.IsReadOnly.ToString();\n           }\n       }       \n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_ControlCollection_Item_System_Int32_\">\r\n    \r\n            <a id=\"System_Web_UI_ControlCollection_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the server control at the specified index location in the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.Control this[int index] { get; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The location of the server control in the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </div>\r\n                  <p>The reference to the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>index</code> parameter is less than zero or greater than or equal to <span class=\"xref\">stem.Web.UI.ControlCollection.Count*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the Item property to specify the index location of a child control that is removed in a <a class=\"xref\" href=\"system.web.ui.controlcollection#System_Web_UI_ControlCollection_Remove_\" data-linktype=\"relative-path\">Remove</a> method call. This is performed by the <code>myButton.Controls.Remove</code> syntax.  </p>\n<pre><code class=\"lang-vb\" name=\"ControlCollection_ReSubmit_2#1\">\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; \n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n    Sub Page_Load(ByVal Sender As Object, ByVal e As EventArgs)\n\n        Response.Write(&quot;&lt;h2&gt;Sample for ControlCollection Class&lt;/h2&gt;&quot;)\n        Dim myLiteralControl As LiteralControl _\n            = New LiteralControl(&quot;ChildControl1&quot;)\n\n        myButton.Controls.Add(myLiteralControl)\n        myButton.Controls.AddAt(1, New LiteralControl(&quot;ChildControl2&quot;))\n\n        Dim myControlCollectionArray As System.Array = _\n            Array.CreateInstance(GetType(Object), _\n                myButton.Controls.Count)\n        myButton.Controls.CopyTo(myControlCollectionArray, 0)\n\n        Dim myEnumerator1 As IEnumerator = _\n            myControlCollectionArray.GetEnumerator()\n\n        While myEnumerator1.MoveNext()\n            Dim myObject As Object = myEnumerator1.Current\n\n            If myObject.GetType().Equals(GetType(LiteralControl)) Then\n                Dim childControl As LiteralControl _\n                    = CType(myEnumerator1.Current, LiteralControl)\n                Response.Write(&quot;&lt;p style=&quot;&quot;font-weight:bold&quot;&quot;&gt;&quot;)\n                Response.Write(&quot;This is the  text of the child Control:&quot; _\n                    &amp; Server.HtmlEncode(childControl.Text))\n            End If\n        End While\n\n        myButton.Controls.Remove(myButton.Controls(0))\n        Response.Write(&quot;&lt;/p&gt;&lt;p style=&quot;&quot;font-weight:bold&quot;&quot;&gt;ChildControl1 is removed&quot;)\n        Response.Write(&quot;&lt;br /&gt;The count of ControlCollection = &quot; _\n            &amp; myButton.Controls.Count.ToString() &amp; &quot;&lt;/p&gt;&quot;)\n        myButton.Controls.Clear()\n\n    End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;Sample for ControlCollection Class&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n\n        &lt;asp:Button ID=&quot;myButton&quot; Text=&quot;Sample ServerControl&quot; \n            Runat=&quot;server&quot;&gt;&lt;/asp:Button&gt;\n    \n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"ControlCollection_ReSubmit_2#1\">\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n   void Page_Load(Object Sender,EventArgs e)\n   {\n       Response.Write(&quot;&lt;h2&gt;Sample for ControlCollection Class&lt;/h2&gt;&quot;);\n\n       LiteralControl myLiteralControl \n           = new LiteralControl(&quot;ChildControl1&quot;);\n\n       myButton.Controls.Add(myLiteralControl);\n       myButton.Controls.AddAt(1,new LiteralControl(&quot;ChildControl2&quot;));\n\n       System.Array myControlCollectionArray \n           = Array.CreateInstance(typeof(object), \n               myButton.Controls.Count);\n       myButton.Controls.CopyTo(myControlCollectionArray,0);\n\n       IEnumerator myEnumerator1 = \n           myControlCollectionArray.GetEnumerator();\n\n       while (myEnumerator1.MoveNext())\n       {\n           object myObject = myEnumerator1.Current;\n\n           if(myObject.GetType().Equals(typeof(LiteralControl)))\n           {\n               LiteralControl childControl = \n                   (LiteralControl)myEnumerator1.Current;\n               Response.Write(&quot;&lt;p style=\\&quot;font-weight:bold\\&quot;&gt;&quot;);\n               Response.Write(&quot;This is the  text of the child Control:&quot; \n                   + Server.HtmlEncode(childControl.Text));\n           }\n       }\n\n       myButton.Controls.Remove(myButton.Controls[0]);\n       Response.Write(&quot;&lt;/p&gt;&lt;p style=\\&quot;font-weight:bold\\&quot;&gt;&quot;);\n       Response.Write(&quot;ChildControl1 is removed&lt;br /&gt;&quot;);\n       Response.Write(&quot;The count of ControlCollection = &quot;\n           + myButton.Controls.Count.ToString() + &quot;&lt;/p&gt;&quot;);\n       myButton.Controls.Clear();\n   }\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;Untitled Page&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n\n        &lt;asp:Button ID=&quot;myButton&quot; Text=&quot;Sample ServerControl&quot; \n            Runat=&quot;server&quot;&gt;&lt;/asp:Button&gt;\n\n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_ControlCollection_Owner\">\r\n    \r\n            <a id=\"System_Web_UI_ControlCollection_Owner_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Owner</div>        \r\n          </div>\r\n    \r\n            <p>Gets the ASP.NET server control to which the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object belongs.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected System.Web.UI.Control Owner { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> to which the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> belongs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is a custom <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> class that overrides the <a class=\"xref\" href=\"system.web.ui.controlcollection#System_Web_UI_ControlCollection__ctor_\" data-linktype=\"relative-path\">ControlCollection</a> method to write messages (which include the name of the Owner property) to the trace log when an instance of the collection is created. You must enable tracing for the page or application for this example to work.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.ControlCollection_CTor_Owner#1\">\t// Create a custom ControlCollection that writes\n\t// information to the Trace log when an instance\n\t// of the collection is created.\n\t[AspNetHostingPermission(SecurityAction.Demand, Level=AspNetHostingPermissionLevel.Minimal)]\n\tpublic class CustomControlCollection : ControlCollection\n\t{\n\t\tprivate HttpContext context;\n\n\t\tpublic CustomControlCollection(Control owner)\n\t\t\t: base(owner)\n\t\t{\n\n\t\t\tHttpContext.Current.Trace.Write(&quot;The control collection is created.&quot;);\n\t\t\t// Display the Name of the control\n\t\t\t// that uses this collection when tracing is enabled.\n\t\t\tHttpContext.Current.Trace.Write(&quot;The owner is: &quot; + this.Owner.ToString());\n\t\t}\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.ControlCollection_CTor_Owner#1\">    &#39; Create a custom ControlCollection that writes\n    &#39; information to the Trace log when an instance\n    &#39; of the collection is created.\n    &lt;AspNetHostingPermission(SecurityAction.Demand, _\n       Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n    Public NotInheritable Class CustomControlCollection\n        Inherits ControlCollection\n\n        Private context As HttpContext\n\n        Public Sub New(ByVal owner As Control)\n            MyBase.New(owner)\n            HttpContext.Current.Trace.Write(&quot;The control collection is created.&quot;)\n            &#39; Display the Name of the control\n            &#39; that uses this collection when tracing is enabled.\n            HttpContext.Current.Trace.Write(&quot;The owner is: &quot; _\n          &amp; Me.Owner.ToString())\n        End Sub\n\n\n    End Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_ControlCollection_SyncRoot\">\r\n    \r\n            <a id=\"System_Web_UI_ControlCollection_SyncRoot_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SyncRoot</div>        \r\n          </div>\r\n    \r\n            <p>Gets an object that can be used to synchronize access to the collection of controls.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object SyncRoot { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> used to synchronize the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a method that enumerates through the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> collection of a <a class=\"xref\" href=\"system.web.ui.webcontrols.button\" data-linktype=\"relative-path\">Button</a> control, <code>myButton</code>. When the enumerator is created, the <a class=\"xref\" href=\"system.web.ui.controlcollection#System_Web_UI_ControlCollection_IsSynchronized_\" data-linktype=\"relative-path\">IsSynchronized</a> property is checked to see if the operation is thread safe, and if it is not, the SyncRoot property is used to obtain an object to make the operation thread safe. When the enumeration is complete, the value of the <a class=\"xref\" href=\"system.web.ui.controlcollection#System_Web_UI_ControlCollection_IsReadOnly_\" data-linktype=\"relative-path\">IsReadOnly</a> property is written as the <a class=\"xref\" href=\"system.web.ui.webcontrols.label#System_Web_UI_WebControls_Label_Text_\" data-linktype=\"relative-path\">Text</a> property of a <a class=\"xref\" href=\"system.web.ui.webcontrols.label\" data-linktype=\"relative-path\">Label</a> control on the containing page.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.ControlCollection_NewSamples#2\">    &#39; Create a method that enuberates through a \n    &#39; button&#39;s ControlCollection in a thread-safe manner.  \n    Public Sub ListControlCollection(sender As Object, e As EventArgs)\n       Dim myEnumerator As IEnumerator = myButton.Controls.GetEnumerator()\n\n       &#39; Check the IsSynchronized property. If False,\n       &#39; use the SyncRoot method to get an object that \n       &#39; allows the enumeration of all controls to be \n       &#39; thread safe.\n       If myButton.Controls.IsSynchronized = False Then\n         SyncLock myButton.Controls.SyncRoot\n           While (myEnumerator.MoveNext())\n    \n           Dim myObject As Object  = myEnumerator.Current\n               \n             Dim childControl As LiteralControl = CType(myEnumerator.Current, LiteralControl)\n             Response.Write(&quot;&lt;b&gt;&lt;br /&gt; This is the  text of the child Control  &lt;/b&gt;: &quot; &amp; _\n                            childControl.Text)\n           End While\n          msgReadOnly.Text = myButton.Controls.IsReadOnly.ToString()\n          \n          End SyncLock\n       End If       \n     End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.ControlCollection_NewSamples#2\">    // Create a method that enuberates through a \n    // button//s ControlCollection in a thread-safe manner.  \n    public void ListControlCollection(object sender, EventArgs e)\n    {\n       IEnumerator myEnumerator = myButton.Controls.GetEnumerator();\n\n       // Check the IsSynchronized property. If False,\n       // use the SyncRoot method to get an object that \n       // allows the enumeration of all controls to be \n       // thread safe.\n       if (myButton.Controls.IsSynchronized == false)\n       {\n           lock (myButton.Controls.SyncRoot)\n           {\n               while (myEnumerator.MoveNext())\n               {\n\n                   Object myObject = myEnumerator.Current;\n\n                   LiteralControl childControl = (LiteralControl)myEnumerator.Current;\n                   Response.Write(&quot;&lt;b&gt;&lt;br /&gt; This is the  text of the child Control  &lt;/b&gt;: &quot; +\n                                  childControl.Text);\n               }\n               msgReadOnly.Text = myButton.Controls.IsReadOnly.ToString();\n           }\n       }       \n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_ControlCollection_Add_System_Web_UI_Control_\">\r\n    \r\n            <a id=\"System_Web_UI_ControlCollection_Add_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Add(Control)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> object to the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void Add (System.Web.UI.Control child);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>child</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> to add to the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>Thrown if the <code>child</code> parameter does not specify a control.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>Thrown if the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> is read-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The new control is added to the end of an ordinal index array. The control can be an instance of any ASP.NET server control, a custom server control you create, or a literal control.  </p>\n<p> To add a control to the collection at a specific index location, use the <a class=\"xref\" href=\"system.web.ui.controlcollection#System_Web_UI_ControlCollection_AddAt_\" data-linktype=\"relative-path\">AddAt</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the Add method to add a series of template items, the number of which are taken from the server control&#39;s view state, to a custom templated control.  </p>\n<pre><code class=\"lang-cs\" name=\"TemplatedDataBoundControl#2\">        // Override to create repeated items.\n        protected override void CreateChildControls() {\n            object o = ViewState[&quot;NumItems&quot;];\n            if (o != null) {\n               // Clear any existing child controls.\n               Controls.Clear();\n\n               int numItems = (int)o;\n               for (int i=0; i &lt; numItems; i++) {\n                  // Create an item.\n                  RepeaterItem item = new RepeaterItem(i, null);\n                  // Initialize the item from the template.\n                  ItemTemplate.InstantiateIn(item);\n                  // Add the item to the ControlCollection.\n                  Controls.Add(item);\n               }\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"TemplatedDataBoundControl#2\">        &#39; Override to create repeated items.\n        Protected Overrides Sub CreateChildControls()\n            Dim O As Object = ViewState(&quot;NumItems&quot;)\n            If Not (O Is Nothing)\n               &#39; Clear any existing child controls.\n               Controls.Clear()\n\n               Dim I As Integer\n               Dim NumItems As Integer = CInt(O)\n               For I = 0 To NumItems - 1\n                  &#39; Create an item.\n                  Dim Item As RepeaterItemVB = New RepeaterItemVB(I, Nothing)\n                  &#39; Initialize the item from the template.\n                  ItemTemplate.InstantiateIn(Item)\n                  &#39; Add the item to the ControlCollection.\n                  Controls.Add(Item)\n               Next\n            End If\n        End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_ControlCollection_AddAt_System_Int32_System_Web_UI_Control_\">\r\n    \r\n            <a id=\"System_Web_UI_ControlCollection_AddAt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddAt(Int32,Control)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> object to the collection at the specified index location.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void AddAt (int index, System.Web.UI.Control child);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The location in the array at which to add the child control.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>child</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> to add to the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>child</code> parameter does not specify a control.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>index</code> parameter is less than zero or greater than the <span class=\"xref\">stem.Web.UI.ControlCollection.Count*</span> property.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> is read-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The added control can be an instance of any ASP.NET server control, a custom server control you create, or a literal control.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the AddAt method to create a new <a class=\"xref\" href=\"system.web.ui.literalcontrol\" data-linktype=\"relative-path\">LiteralControl</a> named <code>ChildControl2</code> and add it to the <code>myButton</code> control&#39;s <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> collection at the index location of 1.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.ControlCollection_NewSamples#1\">       &#39; Create a LiteralControl and use the Add method to add it\n       &#39; to a button&#39;s ControlCollection, then use the AddAt method\n       &#39; to add another LiteralControl to the collection at the\n       &#39; index location of 1.\n       Dim myLiteralControl As LiteralControl =  _\n           new LiteralControl(&quot;ChildControl1&quot;)\n       myButton.Controls.Add(myLiteralControl)\n       myButton.Controls.AddAt(1,new LiteralControl(&quot;ChildControl2&quot;))\n       Response.Write(&quot;&lt;b&gt;ChildControl2 is added at index 1&lt;/b&gt;&quot;)\n       \n       &#39; Get the Index location of the myLiteralControl LiteralControl\n       &#39; and write it to the page.\n       Response.Write(&quot;&lt;br /&gt;&lt;b&gt;Index of the ChildControl myLiteralControl is &lt;/b&gt;&quot; &amp; _\n                        myButton.Controls.IndexOf(myLiteralControl))\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.ControlCollection_NewSamples#1\">       // Create a LiteralControl and use the Add method to add it\n       // to a button&#39;s ControlCollection, then use the AddAt method\n       // to add another LiteralControl to the collection at the\n       // index location of 1.\n       LiteralControl myLiteralControl = new LiteralControl(&quot;ChildControl1&quot;);\n       myButton.Controls.Add(myLiteralControl);\n       myButton.Controls.AddAt(1,new LiteralControl(&quot;ChildControl2&quot;));\n       Response.Write(&quot;&lt;b&gt;ChildControl2 is added at index 1&lt;/b&gt;&quot;);\n       \n       // Get the Index location of the myLiteralControl LiteralControl\n       // and write it to the page.\n       Response.Write(&quot;&lt;br /&gt;&lt;b&gt;Index of the ChildControl myLiteralControl is &quot; +\n           &quot;&lt;/b&gt;&quot; + myButton.Controls.IndexOf(myLiteralControl));\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_ControlCollection_Clear\">\r\n    \r\n            <a id=\"System_Web_UI_ControlCollection_Clear_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clear()</div>        \r\n          </div>\r\n    \r\n            <p>Removes all controls from the current server control&#39;s <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void Clear ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to empty a custom control&#39;s <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> when you override the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_CreateChildControls_\" data-linktype=\"relative-path\">CreateChildControls</a> and <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBind_\" data-linktype=\"relative-path\">DataBind</a> methods. Do this when you develop composite, templated controls or templated data-bound controls.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates overriding the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_CreateChildControls_\" data-linktype=\"relative-path\">CreateChildControls</a> method, and using the Clear method to delete all child controls previously in the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object. In this case, you must do this so that outdated objects in your control&#39;s <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> are not displayed inappropriately.  </p>\n<pre><code class=\"lang-cs\" name=\"TemplatedDataBoundControl#2\">        // Override to create repeated items.\n        protected override void CreateChildControls() {\n            object o = ViewState[&quot;NumItems&quot;];\n            if (o != null) {\n               // Clear any existing child controls.\n               Controls.Clear();\n\n               int numItems = (int)o;\n               for (int i=0; i &lt; numItems; i++) {\n                  // Create an item.\n                  RepeaterItem item = new RepeaterItem(i, null);\n                  // Initialize the item from the template.\n                  ItemTemplate.InstantiateIn(item);\n                  // Add the item to the ControlCollection.\n                  Controls.Add(item);\n               }\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"TemplatedDataBoundControl#2\">        &#39; Override to create repeated items.\n        Protected Overrides Sub CreateChildControls()\n            Dim O As Object = ViewState(&quot;NumItems&quot;)\n            If Not (O Is Nothing)\n               &#39; Clear any existing child controls.\n               Controls.Clear()\n\n               Dim I As Integer\n               Dim NumItems As Integer = CInt(O)\n               For I = 0 To NumItems - 1\n                  &#39; Create an item.\n                  Dim Item As RepeaterItemVB = New RepeaterItemVB(I, Nothing)\n                  &#39; Initialize the item from the template.\n                  ItemTemplate.InstantiateIn(Item)\n                  &#39; Add the item to the ControlCollection.\n                  Controls.Add(Item)\n               Next\n            End If\n        End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_ControlCollection_Contains_System_Web_UI_Control_\">\r\n    \r\n            <a id=\"System_Web_UI_ControlCollection_Contains_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Contains(Control)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified server control is in the parent server control&#39;s <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool Contains (System.Web.UI.Control c);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>c</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The server control to search for in the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified server control exists in the collection; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"System.Web.UI.ctrlCollection_Contains#1\">         // Create an event handler that uses the \n         // ControlCollection.Contains method to verify\n         // the existence of a Radio3 server control in\n         // the ControlCollection of the myForm server control.\n         // When a user clicks the button associated\n         // with this event handler, Radio3 is removed\n         // from the collection.\n         void RemoveBtn_Click(Object sender, EventArgs e){\n             if (myForm.Controls.Contains(Radio3))\n             { \n                myForm.Controls.Remove(Radio3);\n             }\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.ctrlCollection_Contains#1\">         &#39; Create an event handler that uses the \n         &#39; ControlCollection.Contains method to verify\n         &#39; the existence of a Radio3 server control in\n         &#39; the ControlCollection of the myForm server control.\n         &#39; When a user clicks the button associated\n         &#39; with this event handler, Radio3 is removed\n         &#39; from the collection.\n    Sub RemoveBtn_Click(sender As [Object], e As EventArgs)\n          If myForm.Controls.Contains(Radio3) Then\n               myForm.Controls.Remove(Radio3)\n          End If\n    End Sub &#39;RemoveBtn_Click\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_ControlCollection_CopyTo_System_Array_System_Int32_\">\r\n    \r\n            <a id=\"System_Web_UI_ControlCollection_CopyTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyTo(Array,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Copies the child controls stored in the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object to an <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> object, beginning at the specified index location in the <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void CopyTo (Array array, int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> to copy the child controls to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based relative index in <code>array</code> where copying begins.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p><code>array</code> is not <code>null</code> and not one-dimensional.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_ControlCollection_GetEnumerator\">\r\n    \r\n            <a id=\"System_Web_UI_ControlCollection_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves an enumerator that can iterate through the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Collections.IEnumerator GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></div>\r\n                  </div>\r\n                  <p>The enumerator to iterate through the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a method that enumerates through the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> collection of a <a class=\"xref\" href=\"system.web.ui.webcontrols.button\" data-linktype=\"relative-path\">Button</a> control, <code>myButton</code>. When the enumerator is created, the <a class=\"xref\" href=\"system.web.ui.controlcollection#System_Web_UI_ControlCollection_IsSynchronized_\" data-linktype=\"relative-path\">IsSynchronized</a> property is checked to see if the operation is thread safe, and if it is not, the <a class=\"xref\" href=\"system.web.ui.controlcollection#System_Web_UI_ControlCollection_SyncRoot_\" data-linktype=\"relative-path\">SyncRoot</a> property is used to obtain an object to make the operation thread safe. When the enumeration is completed, the value of the <a class=\"xref\" href=\"system.web.ui.controlcollection#System_Web_UI_ControlCollection_IsReadOnly_\" data-linktype=\"relative-path\">IsReadOnly</a> property is written as the <a class=\"xref\" href=\"system.web.ui.webcontrols.label#System_Web_UI_WebControls_Label_Text_\" data-linktype=\"relative-path\">Text</a> property of a <a class=\"xref\" href=\"system.web.ui.webcontrols.label\" data-linktype=\"relative-path\">Label</a> control on the containing page.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.ControlCollection_NewSamples#2\">    &#39; Create a method that enuberates through a \n    &#39; button&#39;s ControlCollection in a thread-safe manner.  \n    Public Sub ListControlCollection(sender As Object, e As EventArgs)\n       Dim myEnumerator As IEnumerator = myButton.Controls.GetEnumerator()\n\n       &#39; Check the IsSynchronized property. If False,\n       &#39; use the SyncRoot method to get an object that \n       &#39; allows the enumeration of all controls to be \n       &#39; thread safe.\n       If myButton.Controls.IsSynchronized = False Then\n         SyncLock myButton.Controls.SyncRoot\n           While (myEnumerator.MoveNext())\n    \n           Dim myObject As Object  = myEnumerator.Current\n               \n             Dim childControl As LiteralControl = CType(myEnumerator.Current, LiteralControl)\n             Response.Write(&quot;&lt;b&gt;&lt;br /&gt; This is the  text of the child Control  &lt;/b&gt;: &quot; &amp; _\n                            childControl.Text)\n           End While\n          msgReadOnly.Text = myButton.Controls.IsReadOnly.ToString()\n          \n          End SyncLock\n       End If       \n     End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.ControlCollection_NewSamples#2\">    // Create a method that enuberates through a \n    // button//s ControlCollection in a thread-safe manner.  \n    public void ListControlCollection(object sender, EventArgs e)\n    {\n       IEnumerator myEnumerator = myButton.Controls.GetEnumerator();\n\n       // Check the IsSynchronized property. If False,\n       // use the SyncRoot method to get an object that \n       // allows the enumeration of all controls to be \n       // thread safe.\n       if (myButton.Controls.IsSynchronized == false)\n       {\n           lock (myButton.Controls.SyncRoot)\n           {\n               while (myEnumerator.MoveNext())\n               {\n\n                   Object myObject = myEnumerator.Current;\n\n                   LiteralControl childControl = (LiteralControl)myEnumerator.Current;\n                   Response.Write(&quot;&lt;b&gt;&lt;br /&gt; This is the  text of the child Control  &lt;/b&gt;: &quot; +\n                                  childControl.Text);\n               }\n               msgReadOnly.Text = myButton.Controls.IsReadOnly.ToString();\n           }\n       }       \n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_ControlCollection_IndexOf_System_Web_UI_Control_\">\r\n    \r\n            <a id=\"System_Web_UI_ControlCollection_IndexOf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IndexOf(Control)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the index of a specified <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> object in the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int IndexOf (System.Web.UI.Control value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> for which the index is returned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The index of the specified server control. If the server control is not currently a member of the collection, it returns -1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to determine the index location of the specified server control in the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the IndexOf method to write the index location of a control, <code>myLiteralControl</code>, in the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> collection of a <a class=\"xref\" href=\"system.web.ui.webcontrols.button\" data-linktype=\"relative-path\">Button</a> control named <code>myButton</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.ControlCollection_NewSamples#1\">       &#39; Create a LiteralControl and use the Add method to add it\n       &#39; to a button&#39;s ControlCollection, then use the AddAt method\n       &#39; to add another LiteralControl to the collection at the\n       &#39; index location of 1.\n       Dim myLiteralControl As LiteralControl =  _\n           new LiteralControl(&quot;ChildControl1&quot;)\n       myButton.Controls.Add(myLiteralControl)\n       myButton.Controls.AddAt(1,new LiteralControl(&quot;ChildControl2&quot;))\n       Response.Write(&quot;&lt;b&gt;ChildControl2 is added at index 1&lt;/b&gt;&quot;)\n       \n       &#39; Get the Index location of the myLiteralControl LiteralControl\n       &#39; and write it to the page.\n       Response.Write(&quot;&lt;br /&gt;&lt;b&gt;Index of the ChildControl myLiteralControl is &lt;/b&gt;&quot; &amp; _\n                        myButton.Controls.IndexOf(myLiteralControl))\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.ControlCollection_NewSamples#1\">       // Create a LiteralControl and use the Add method to add it\n       // to a button&#39;s ControlCollection, then use the AddAt method\n       // to add another LiteralControl to the collection at the\n       // index location of 1.\n       LiteralControl myLiteralControl = new LiteralControl(&quot;ChildControl1&quot;);\n       myButton.Controls.Add(myLiteralControl);\n       myButton.Controls.AddAt(1,new LiteralControl(&quot;ChildControl2&quot;));\n       Response.Write(&quot;&lt;b&gt;ChildControl2 is added at index 1&lt;/b&gt;&quot;);\n       \n       // Get the Index location of the myLiteralControl LiteralControl\n       // and write it to the page.\n       Response.Write(&quot;&lt;br /&gt;&lt;b&gt;Index of the ChildControl myLiteralControl is &quot; +\n           &quot;&lt;/b&gt;&quot; + myButton.Controls.IndexOf(myLiteralControl));\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_ControlCollection_Remove_System_Web_UI_Control_\">\r\n    \r\n            <a id=\"System_Web_UI_ControlCollection_Remove_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Remove(Control)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the specified server control from the parent server control&#39;s <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void Remove (System.Web.UI.Control value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The server control to be removed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To remove a control from an index location, use the <a class=\"xref\" href=\"system.web.ui.controlcollection#System_Web_UI_ControlCollection_RemoveAt_\" data-linktype=\"relative-path\">RemoveAt</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the Remove method to delete a child control from the <code>myButton</code> server control. First the code uses the <a class=\"xref\" href=\"system.web.ui.controlcollection#System_Web_UI_ControlCollection_Contains_\" data-linktype=\"relative-path\">Contains</a> method to determine whether the <code>myChildControl</code> is contained in the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object, and, if it is, removes it.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.ControlCollection_NewSamples#4\">        &#39; Use the Contains method to check whether\n        &#39; a child control exists, and if it does,\n        &#39; use the Remove method to delete it.        \n        If myButton.Controls.Contains(myChildControl)\n           myButton.Controls.Remove(myChildControl)\n           msgRemove.Text = &quot;You removed myLiteralControl.&quot;\n        Else\n           msgRemove.Text=&quot;The control to remove does not exist.&quot; \n        End If\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.ControlCollection_NewSamples#4\">        // Use the Contains method to check whether\n        // a child control exists, and if it does,\n        // use the Remove method to delete it.        \n        if (myButton.Controls.Contains(myChildControl))\n        {\n           myButton.Controls.Remove(myChildControl);\n           msgRemove.Text = &quot;You removed myLiteralControl.&quot;;\n        }\n        else msgRemove.Text=&quot;The control to remove does not exist.&quot; ;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_ControlCollection_RemoveAt_System_Int32_\">\r\n    \r\n            <a id=\"System_Web_UI_ControlCollection_RemoveAt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveAt(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Removes a child control, at the specified index location, from the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void RemoveAt (int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The ordinal index of the server control to be removed from the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>Thrown if the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> is read-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To remove a control from the collection based on its value, use the <a class=\"xref\" href=\"system.web.ui.controlcollection#System_Web_UI_ControlCollection_Remove_\" data-linktype=\"relative-path\">Remove</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the RemoveAt method to delete a child control from the <code>myButton</code> server control. The method call first specifies an index location of 1 from which the control is deleted. The example then writes to the containing page a text message saying that the control at that location has been deleted from the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> collection.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.ControlCollection_NewSamples#5\">        &#39; Use the RemoveAt method to delete the child control\n        &#39; at index location 1.           \n        myButton.Controls.RemoveAt(1)\n        msgRemoveAt.Text = &quot;The control at index location 1 has been removed.&quot;\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.ControlCollection_NewSamples#5\">        // Use the RemoveAt method to delete the child control\n        // at index location 1.           \n        myButton.Controls.RemoveAt(1);\n        msgRemoveAt.Text = &quot;The control at index location 1 has been removed.&quot;;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.ControlCollection.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.ControlCollection.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.ControlCollection\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.ControlCollection..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.ControlCollection.Add\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.ControlCollection.AddAt\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.ControlCollection.Clear\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.ControlCollection.Contains\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.ControlCollection.CopyTo\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.ControlCollection.Count\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.ControlCollection.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.ControlCollection.IndexOf\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.ControlCollection.IsReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.ControlCollection.IsSynchronized\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.ControlCollection.Item\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.ControlCollection.Owner\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.ControlCollection.Remove\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.ControlCollection.RemoveAt\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.ControlCollection.SyncRoot\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"d45f5614-34ad-8c4a-81e1-6c1e9f0159f4\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a collection container that enables ASP.NET server controls to maintain a list of their child controls.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.UI/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.ControlCollection\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.ControlCollection.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.ControlCollection.yml","open_to_public_contributors":true,"api_name":["System.Web.UI.ControlCollection","System.Web.UI.ControlCollection..ctor","System.Web.UI.ControlCollection.Add","System.Web.UI.ControlCollection.AddAt","System.Web.UI.ControlCollection.Clear","System.Web.UI.ControlCollection.Contains","System.Web.UI.ControlCollection.CopyTo","System.Web.UI.ControlCollection.Count","System.Web.UI.ControlCollection.GetEnumerator","System.Web.UI.ControlCollection.IndexOf","System.Web.UI.ControlCollection.IsReadOnly","System.Web.UI.ControlCollection.IsSynchronized","System.Web.UI.ControlCollection.Item","System.Web.UI.ControlCollection.Owner","System.Web.UI.ControlCollection.Remove","System.Web.UI.ControlCollection.RemoveAt","System.Web.UI.ControlCollection.SyncRoot"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.ControlCollection","System::Web::UI::ControlCollection","System.Web.UI.ControlCollection.#ctor","System::Web::UI::ControlCollection::#ctor","System.Web.UI.ControlCollection.Add","System::Web::UI::ControlCollection::Add","System.Web.UI.ControlCollection.AddAt","System::Web::UI::ControlCollection::AddAt","System.Web.UI.ControlCollection.Clear","System::Web::UI::ControlCollection::Clear","System.Web.UI.ControlCollection.Contains","System::Web::UI::ControlCollection::Contains","System.Web.UI.ControlCollection.CopyTo","System::Web::UI::ControlCollection::CopyTo","System.Web.UI.ControlCollection.Count","System::Web::UI::ControlCollection::Count","System.Web.UI.ControlCollection.GetEnumerator","System::Web::UI::ControlCollection::GetEnumerator","System.Web.UI.ControlCollection.IndexOf","System::Web::UI::ControlCollection::IndexOf","System.Web.UI.ControlCollection.IsReadOnly","System::Web::UI::ControlCollection::IsReadOnly","System.Web.UI.ControlCollection.IsSynchronized","System::Web::UI::ControlCollection::IsSynchronized","System.Web.UI.ControlCollection.Item","System::Web::UI::ControlCollection::Item","System.Web.UI.ControlCollection.Owner","System::Web::UI::ControlCollection::Owner","System.Web.UI.ControlCollection.Remove","System::Web::UI::ControlCollection::Remove","System.Web.UI.ControlCollection.RemoveAt","System::Web::UI::ControlCollection::RemoveAt","System.Web.UI.ControlCollection.SyncRoot","System::Web::UI::ControlCollection::SyncRoot"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"d45f5614-34ad-8c4a-81e1-6c1e9f0159f4","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.UI/ControlCollection.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ControlCollection class | Microsoft Docs","_op_ogTitle":"ControlCollection class","description":"Provides a collection container that enables ASP.NET server controls to maintain a list of their child controls.\n","toc_asset_id":"_splitted/System.Web.UI/toc.json","toc_rel":"_splitted/System.Web.UI/toc.json","source_url":"","ms.assetid":"System.Web.UI.ControlCollection","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.controlcollection","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.controlcollection","fileRelativePath":"System.Web.UI.ControlCollection.html"},"themesRelativePathToOutputRoot":"_themes/"}