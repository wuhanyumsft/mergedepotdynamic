{"content":"    \r\n    <h1 id=\"System_Windows_Forms_FolderBrowserDialog\">\r\n      <span class=\"lang-csharp\">FolderBrowserDialog</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Prompts the user to select a folder. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.DefaultEvent(&quot;HelpRequest&quot;)]\n[System.ComponentModel.DefaultProperty(&quot;SelectedPath&quot;)]\n[System.ComponentModel.Designer(&quot;System.Windows.Forms.Design.FolderBrowserDialogDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;)]\npublic sealed class FolderBrowserDialog : System.Windows.Forms.CommonDialog</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l3\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.commondialog\" data-linktype=\"relative-path\">System.Windows.Forms.CommonDialog</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l4\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">FolderBrowserDialog</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_HookProc_System_IntPtr_System_Int32_System_IntPtr_System_IntPtr_\" data-linktype=\"relative-path\">HookProc(IntPtr,Int32,IntPtr,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_OnHelpRequest_System_EventArgs_\" data-linktype=\"relative-path\">OnHelpRequest(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_OwnerWndProc_System_IntPtr_System_Int32_System_IntPtr_System_IntPtr_\" data-linktype=\"relative-path\">OwnerWndProc(IntPtr,Int32,IntPtr,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_ShowDialog\" data-linktype=\"relative-path\">ShowDialog()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_ShowDialog_System_Windows_Forms_IWin32Window_\" data-linktype=\"relative-path\">ShowDialog(IWin32Window)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_Tag\" data-linktype=\"relative-path\">Tag</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class provides a way to prompt the user to browse, create, and eventually select a folder. Use this class when you only want to allow the user to select folders, not files. Browsing of the folders is done through a tree control. Only folders from the file system can be selected; virtual folders cannot.  </p>\n<p> Typically, after creating a new FolderBrowserDialog, you set the <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog#System_Windows_Forms_FolderBrowserDialog_RootFolder_\" data-linktype=\"relative-path\">RootFolder</a> to the location from which to start browsing. Optionally, you can set the <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog#System_Windows_Forms_FolderBrowserDialog_SelectedPath_\" data-linktype=\"relative-path\">SelectedPath</a> to an absolute path of a subfolder of <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog#System_Windows_Forms_FolderBrowserDialog_RootFolder_\" data-linktype=\"relative-path\">RootFolder</a> that will initially be selected. You can also optionally set the <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog#System_Windows_Forms_FolderBrowserDialog_Description_\" data-linktype=\"relative-path\">Description</a> property to provide additional instructions to the user. Finally, call the <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> method to display the dialog box to the user. When the dialog box is closed and the dialog box result from <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> is <a class=\"xref\" href=\"system.windows.forms.dialogresult\" data-linktype=\"relative-path\">System.Windows.Forms.DialogResult</a>, the <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog#System_Windows_Forms_FolderBrowserDialog_SelectedPath_\" data-linktype=\"relative-path\">SelectedPath</a> will be a string containing the path to the selected folder.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog#System_Windows_Forms_FolderBrowserDialog_ShowNewFolderButton_\" data-linktype=\"relative-path\">ShowNewFolderButton</a> property to control if the user is able to create new folders with the <strong>New Folder</strong> button.  </p>\n<p> FolderBrowserDialog is a modal dialog box; therefore, when shown, it blocks the rest of the application until the user has chosen a folder. When a dialog box is displayed modally, no input (keyboard or mouse click) can occur except to objects on the dialog box. The program must hide or close the dialog box (usually in response to some user action) before input to the calling program can occur.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FolderBrowserDialog__ctor\" data-linktype=\"self-bookmark\">FolderBrowserDialog()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog\" data-linktype=\"relative-path\">FolderBrowserDialog</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FolderBrowserDialog_Description\" data-linktype=\"self-bookmark\">Description</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the descriptive text displayed above the tree view control in the dialog box.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FolderBrowserDialog_RootFolder\" data-linktype=\"self-bookmark\">RootFolder</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the root folder where the browsing starts from.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FolderBrowserDialog_SelectedPath\" data-linktype=\"self-bookmark\">SelectedPath</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the path selected by the user.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FolderBrowserDialog_ShowNewFolderButton\" data-linktype=\"self-bookmark\">ShowNewFolderButton</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the <strong>New Folder</strong> button appears in the folder browser dialog box.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FolderBrowserDialog_Reset\" data-linktype=\"self-bookmark\">Reset()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resets properties to their default values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FolderBrowserDialog_RunDialog_System_IntPtr_\" data-linktype=\"self-bookmark\">RunDialog(IntPtr)</a></div>\r\n          </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FolderBrowserDialog_HelpRequest\" data-linktype=\"self-bookmark\">HelpRequest</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user clicks the <strong>Help</strong> button on the dialog box.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FolderBrowserDialog__ctor\">\r\n    \r\n            <a id=\"System_Windows_Forms_FolderBrowserDialog__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FolderBrowserDialog()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog\" data-linktype=\"relative-path\">FolderBrowserDialog</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public FolderBrowserDialog ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default constructor initializes properties to their default values.  </p>\n<p> When a new <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog\" data-linktype=\"relative-path\">FolderBrowserDialog</a> is created, the <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog#System_Windows_Forms_FolderBrowserDialog_RootFolder_\" data-linktype=\"relative-path\">RootFolder</a> property is set to <a class=\"xref\" href=\"system.environment.specialfolder\" data-linktype=\"relative-path\">System.Environment+SpecialFolder</a>, the <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog#System_Windows_Forms_FolderBrowserDialog_Description_\" data-linktype=\"relative-path\">Description</a> property is set to an empty string (&quot;&quot;), the <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog#System_Windows_Forms_FolderBrowserDialog_SelectedPath_\" data-linktype=\"relative-path\">SelectedPath</a> property is set to an empty string, and the <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog#System_Windows_Forms_FolderBrowserDialog_ShowNewFolderButton_\" data-linktype=\"relative-path\">ShowNewFolderButton</a> property is set to <code>true</code>.  </p>\n<p> Typically, after creating a new <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog\" data-linktype=\"relative-path\">FolderBrowserDialog</a>, you set the <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog#System_Windows_Forms_FolderBrowserDialog_RootFolder_\" data-linktype=\"relative-path\">RootFolder</a> to the location from which to start browsing. Optionally, you can set the <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog#System_Windows_Forms_FolderBrowserDialog_SelectedPath_\" data-linktype=\"relative-path\">SelectedPath</a> to the path of a subfolder of <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog#System_Windows_Forms_FolderBrowserDialog_RootFolder_\" data-linktype=\"relative-path\">RootFolder</a> that will initially be selected. You can also optionally set the <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog#System_Windows_Forms_FolderBrowserDialog_Description_\" data-linktype=\"relative-path\">Description</a> property to provide additional instructions to the user. Finally, call the <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> method to display the dialog box to the user. When the dialog box is closed and the dialog result from <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> is <a class=\"xref\" href=\"system.windows.forms.dialogresult\" data-linktype=\"relative-path\">System.Windows.Forms.DialogResult</a>, the <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog#System_Windows_Forms_FolderBrowserDialog_SelectedPath_\" data-linktype=\"relative-path\">SelectedPath</a> will be a string containing the path to the selected folder.  </p>\n<p> <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog\" data-linktype=\"relative-path\">FolderBrowserDialog</a> is a modal dialog box; therefore, when shown, it blocks the rest of the application until the user has chosen a folder. When a dialog box is displayed modally, no input (keyboard or mouse click) can occur except to objects on the dialog box. The program must hide or close the dialog box (usually in response to some user action) before input to the calling program can occur.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates an application that enables the user to open rich text (.rtf) files within the <a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a> control.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.FolderBrowserDialog#1\">// The following example displays an application that provides the ability to\n// open rich text files (rtf) into the RichTextBox. The example demonstrates\n// using the FolderBrowserDialog to set the default directory for opening files.\n// The OpenFileDialog is used to open the file.\n#using &lt;System.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n\nusing namespace System;\nusing namespace System::Drawing;\nusing namespace System::Windows::Forms;\nusing namespace System::IO;\npublic ref class FolderBrowserDialogExampleForm: public System::Windows::Forms::Form\n{\nprivate:\n   FolderBrowserDialog^ folderBrowserDialog1;\n   OpenFileDialog^ openFileDialog1;\n   RichTextBox^ richTextBox1;\n   MainMenu^ mainMenu1;\n   MenuItem^ fileMenuItem;\n   MenuItem^ openMenuItem;\n   MenuItem^ folderMenuItem;\n   MenuItem^ closeMenuItem;\n   String^ openFileName;\n   String^ folderName;\n   bool fileOpened;\n\npublic:\n\n   // Constructor.\n   FolderBrowserDialogExampleForm()\n   {\n      fileOpened = false;\n      this-&gt;mainMenu1 = gcnew System::Windows::Forms::MainMenu;\n      this-&gt;fileMenuItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;openMenuItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;folderMenuItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;closeMenuItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;openFileDialog1 = gcnew System::Windows::Forms::OpenFileDialog;\n      this-&gt;folderBrowserDialog1 = gcnew System::Windows::Forms::FolderBrowserDialog;\n      this-&gt;richTextBox1 = gcnew System::Windows::Forms::RichTextBox;\n      this-&gt;mainMenu1-&gt;MenuItems-&gt;Add( this-&gt;fileMenuItem );\n      array&lt;System::Windows::Forms::MenuItem^&gt;^temp0 = {this-&gt;openMenuItem,this-&gt;closeMenuItem,this-&gt;folderMenuItem};\n      this-&gt;fileMenuItem-&gt;MenuItems-&gt;AddRange( temp0 );\n      this-&gt;fileMenuItem-&gt;Text = &quot;File&quot;;\n      this-&gt;openMenuItem-&gt;Text = &quot;Open...&quot;;\n      this-&gt;openMenuItem-&gt;Click += gcnew System::EventHandler( this, &amp;FolderBrowserDialogExampleForm::openMenuItem_Click );\n      this-&gt;folderMenuItem-&gt;Text = &quot;Select Directory...&quot;;\n      this-&gt;folderMenuItem-&gt;Click += gcnew System::EventHandler( this, &amp;FolderBrowserDialogExampleForm::folderMenuItem_Click );\n      this-&gt;closeMenuItem-&gt;Text = &quot;Close&quot;;\n      this-&gt;closeMenuItem-&gt;Click += gcnew System::EventHandler( this, &amp;FolderBrowserDialogExampleForm::closeMenuItem_Click );\n      this-&gt;closeMenuItem-&gt;Enabled = false;\n      this-&gt;openFileDialog1-&gt;DefaultExt = &quot;rtf&quot;;\n      this-&gt;openFileDialog1-&gt;Filter = &quot;rtf files (*.rtf)|*.rtf&quot;;\n      \n      // Set the help text description for the FolderBrowserDialog.\n      this-&gt;folderBrowserDialog1-&gt;Description = &quot;Select the directory that you want to use as the default.&quot;;\n      \n      // Do not allow the user to create new files via the FolderBrowserDialog.\n      this-&gt;folderBrowserDialog1-&gt;ShowNewFolderButton = false;\n      \n      // Default to the My Documents folder.\n      this-&gt;folderBrowserDialog1-&gt;RootFolder = Environment::SpecialFolder::Personal;\n      this-&gt;richTextBox1-&gt;AcceptsTab = true;\n      this-&gt;richTextBox1-&gt;Location = System::Drawing::Point( 8, 8 );\n      this-&gt;richTextBox1-&gt;Size = System::Drawing::Size( 280, 344 );\n      this-&gt;richTextBox1-&gt;Anchor = static_cast&lt;AnchorStyles&gt;(AnchorStyles::Top | AnchorStyles::Left | AnchorStyles::Bottom | AnchorStyles::Right);\n      this-&gt;ClientSize = System::Drawing::Size( 296, 360 );\n      this-&gt;Controls-&gt;Add( this-&gt;richTextBox1 );\n      this-&gt;Menu = this-&gt;mainMenu1;\n      this-&gt;Text = &quot;RTF Document Browser&quot;;\n   }\n\n\nprivate:\n\n   // Bring up a dialog to open a file.\n   void openMenuItem_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      \n      // If a file is not opened then set the initial directory to the\n      // FolderBrowserDialog::SelectedPath value.\n      if (  !fileOpened )\n      {\n         openFileDialog1-&gt;InitialDirectory = folderBrowserDialog1-&gt;SelectedPath;\n         openFileDialog1-&gt;FileName = nullptr;\n      }\n\n      \n      // Display the openFile Dialog.\n      System::Windows::Forms::DialogResult result = openFileDialog1-&gt;ShowDialog();\n      \n      // OK button was pressed.\n      if ( result == ::DialogResult::OK )\n      {\n         openFileName = openFileDialog1-&gt;FileName;\n         try\n         {\n            \n            // Output the requested file in richTextBox1.\n            Stream^ s = openFileDialog1-&gt;OpenFile();\n            richTextBox1-&gt;LoadFile( s, RichTextBoxStreamType::RichText );\n            s-&gt;Close();\n            fileOpened = true;\n         }\n         catch ( Exception^ exp ) \n         {\n            MessageBox::Show( String::Concat( &quot;An error occurred while attempting to load the file. The error is: &quot;, System::Environment::NewLine, exp, System::Environment::NewLine ) );\n            fileOpened = false;\n         }\n\n         Invalidate();\n         closeMenuItem-&gt;Enabled = fileOpened;\n      }\n      // Cancel button was pressed.\n      else\n      \n      // Cancel button was pressed.\n      if ( result == ::DialogResult::Cancel )\n      {\n         return;\n      }\n   }\n\n\n   // Close the current file.\n   void closeMenuItem_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      richTextBox1-&gt;Text = &quot;&quot;;\n      fileOpened = false;\n      closeMenuItem-&gt;Enabled = false;\n   }\n\n\n   // Bring up a dialog to chose a folder path in which to open/save a file.\n   void folderMenuItem_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      \n      // Show the FolderBrowserDialog.\n      System::Windows::Forms::DialogResult result = folderBrowserDialog1-&gt;ShowDialog();\n      if ( result == ::DialogResult::OK )\n      {\n         folderName = folderBrowserDialog1-&gt;SelectedPath;\n         if (  !fileOpened )\n         {\n            \n            // No file is opened, bring up openFileDialog in selected path.\n            openFileDialog1-&gt;InitialDirectory = folderName;\n            openFileDialog1-&gt;FileName = nullptr;\n            openMenuItem-&gt;PerformClick();\n         }\n      }\n   }\n\n};\n\n\n// The main entry point for the application.\nint main()\n{\n   Application::Run( gcnew FolderBrowserDialogExampleForm );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.FolderBrowserDialog#1\">// The following example displays an application that provides the ability to \n// open rich text files (rtf) into the RichTextBox. The example demonstrates \n// using the FolderBrowserDialog to set the default directory for opening files.\n// The OpenFileDialog class is used to open the file.\nusing System;\nusing System.Drawing;\nusing System.Windows.Forms;\nusing System.IO;\n\npublic class FolderBrowserDialogExampleForm : System.Windows.Forms.Form\n{\n    private FolderBrowserDialog folderBrowserDialog1;\n    private OpenFileDialog openFileDialog1;\n    \n    private RichTextBox richTextBox1;\n\n    private MainMenu mainMenu1;\n    private MenuItem fileMenuItem, openMenuItem;\n    private MenuItem folderMenuItem, closeMenuItem;\n    \n    private string openFileName, folderName;\n\n    private bool fileOpened = false;\n\n    // The main entry point for the application.\n    [STAThreadAttribute]\n    static void Main() \n    {\n        Application.Run(new FolderBrowserDialogExampleForm());\n    }\n\n\n    // Constructor.\n    public FolderBrowserDialogExampleForm()\n    {\n        this.mainMenu1 = new System.Windows.Forms.MainMenu();\n        this.fileMenuItem = new System.Windows.Forms.MenuItem();\n        this.openMenuItem = new System.Windows.Forms.MenuItem();\n        this.folderMenuItem = new System.Windows.Forms.MenuItem();\n        this.closeMenuItem = new System.Windows.Forms.MenuItem();\n\n        this.openFileDialog1 = new System.Windows.Forms.OpenFileDialog();\n        this.folderBrowserDialog1 = new System.Windows.Forms.FolderBrowserDialog();\n        this.richTextBox1 = new System.Windows.Forms.RichTextBox();\n\n        this.mainMenu1.MenuItems.Add(this.fileMenuItem);\n        this.fileMenuItem.MenuItems.AddRange(\n                            new System.Windows.Forms.MenuItem[] {this.openMenuItem,\n                                                                 this.closeMenuItem,\n                                                                 this.folderMenuItem});\n        this.fileMenuItem.Text = &quot;File&quot;;\n\n        this.openMenuItem.Text = &quot;Open...&quot;;\n        this.openMenuItem.Click += new System.EventHandler(this.openMenuItem_Click);\n\n        this.folderMenuItem.Text = &quot;Select Directory...&quot;;\n        this.folderMenuItem.Click += new System.EventHandler(this.folderMenuItem_Click);\n\n        this.closeMenuItem.Text = &quot;Close&quot;;\n        this.closeMenuItem.Click += new System.EventHandler(this.closeMenuItem_Click);\n        this.closeMenuItem.Enabled = false;\n\n        this.openFileDialog1.DefaultExt = &quot;rtf&quot;;\n        this.openFileDialog1.Filter = &quot;rtf files (*.rtf)|*.rtf&quot;;\n\n        // Set the help text description for the FolderBrowserDialog.\n        this.folderBrowserDialog1.Description = \n            &quot;Select the directory that you want to use as the default.&quot;;\n\n        // Do not allow the user to create new files via the FolderBrowserDialog.\n        this.folderBrowserDialog1.ShowNewFolderButton = false;\n\n        // Default to the My Documents folder.\n        this.folderBrowserDialog1.RootFolder = Environment.SpecialFolder.Personal;\n\n        this.richTextBox1.AcceptsTab = true;\n        this.richTextBox1.Location = new System.Drawing.Point(8, 8);\n        this.richTextBox1.Size = new System.Drawing.Size(280, 344);\n        this.richTextBox1.Anchor = AnchorStyles.Top | AnchorStyles.Left | \n                                   AnchorStyles.Bottom | AnchorStyles.Right;\n\n        this.ClientSize = new System.Drawing.Size(296, 360);\n        this.Controls.Add(this.richTextBox1);\n        this.Menu = this.mainMenu1;\n        this.Text = &quot;RTF Document Browser&quot;;\n    }\n\n    // Bring up a dialog to open a file.\n    private void openMenuItem_Click(object sender, System.EventArgs e)\n    {\n        // If a file is not opened, then set the initial directory to the\n        // FolderBrowserDialog.SelectedPath value.\n        if (!fileOpened) {\n            openFileDialog1.InitialDirectory = folderBrowserDialog1.SelectedPath;\n            openFileDialog1.FileName = null;\n        }\n\n        // Display the openFile dialog.\n        DialogResult result = openFileDialog1.ShowDialog();\n\n        // OK button was pressed.\n        if(result == DialogResult.OK) \n        {\n            openFileName = openFileDialog1.FileName;\n            try\n            {\n                // Output the requested file in richTextBox1.\n                Stream s = openFileDialog1.OpenFile();\n                richTextBox1.LoadFile(s, RichTextBoxStreamType.RichText);\n                s.Close();    \n            \n                fileOpened = true;\n\n            } \n            catch(Exception exp)\n            {\n                MessageBox.Show(&quot;An error occurred while attempting to load the file. The error is:&quot; \n                                + System.Environment.NewLine + exp.ToString() + System.Environment.NewLine);\n                fileOpened = false;\n            }\n            Invalidate();\n\n            closeMenuItem.Enabled = fileOpened;\n        }\n\n        // Cancel button was pressed.\n        else if(result == DialogResult.Cancel) \n        {\n            return;\n        }\n    }\n\n\n    // Close the current file.\n    private void closeMenuItem_Click(object sender, System.EventArgs e)\n    {\n        richTextBox1.Text = &quot;&quot;;\n        fileOpened = false;\n\n        closeMenuItem.Enabled = false;\n    }\n\n\n    // Bring up a dialog to chose a folder path in which to open or save a file.\n    private void folderMenuItem_Click(object sender, System.EventArgs e)\n    {\n        // Show the FolderBrowserDialog.\n        DialogResult result = folderBrowserDialog1.ShowDialog();\n        if( result == DialogResult.OK )\n        {\n            folderName = folderBrowserDialog1.SelectedPath;\n            if(!fileOpened)\n            {\n                // No file is opened, bring up openFileDialog in selected path.\n                openFileDialog1.InitialDirectory = folderName;\n                openFileDialog1.FileName = null;\n                openMenuItem.PerformClick();\n            } \n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.FolderBrowserDialog#1\">&#39; The following example displays an application that provides the ability to \n&#39; open rich text files (rtf) into the RichTextBox. The example demonstrates \n&#39; using the FolderBrowserDialog to set the default directory for opening files.\n&#39; The OpenFileDialog class is used to open the file.\nImports System\nImports System.Drawing\nImports System.Windows.Forms\nImports System.IO\n\nPublic Class FolderBrowserDialogExampleForm \n    Inherits Form\n    \n    Private folderBrowserDialog1 As FolderBrowserDialog\n    Private openFileDialog1 As OpenFileDialog \n    \n    Private richTextBox1 As RichTextBox\n\n    Private mainMenu1 As MainMenu\n    Private fileMenuItem As MenuItem\n    Private WithEvents folderMenuItem As MenuItem, _\n                       closeMenuItem As MenuItem, _\n                       openMenuItem As MenuItem\n    \n    Private openFileName As String, folderName As String\n\n    Private fileOpened As Boolean = False\n\n    Public Sub New()\n        Me.mainMenu1 = New System.Windows.Forms.MainMenu() \n        Me.fileMenuItem = New System.Windows.Forms.MenuItem() \n        Me.openMenuItem = New System.Windows.Forms.MenuItem() \n        Me.folderMenuItem = New System.Windows.Forms.MenuItem() \n        Me.closeMenuItem = New System.Windows.Forms.MenuItem() \n\n        Me.openFileDialog1 = New System.Windows.Forms.OpenFileDialog() \n        Me.folderBrowserDialog1 = New System.Windows.Forms.FolderBrowserDialog() \n        Me.richTextBox1 = New System.Windows.Forms.RichTextBox() \n\n        Me.mainMenu1.MenuItems.Add(Me.fileMenuItem) \n        Me.fileMenuItem.MenuItems.AddRange( _\n                    New System.Windows.Forms.MenuItem() {Me.openMenuItem, _\n                                                         Me.closeMenuItem, _\n                                                         Me.folderMenuItem}) \n        Me.fileMenuItem.Text = &quot;File&quot; \n\n        Me.openMenuItem.Text = &quot;Open...&quot; \n\n        Me.folderMenuItem.Text = &quot;Select Directory...&quot; \n\n        Me.closeMenuItem.Text = &quot;Close&quot; \n        Me.closeMenuItem.Enabled = False \n\n        Me.openFileDialog1.DefaultExt = &quot;rtf&quot; \n        Me.openFileDialog1.Filter = &quot;rtf files (*.rtf)|*.rtf&quot; \n\n        &#39; Set the Help text description for the FolderBrowserDialog.\n        Me.folderBrowserDialog1.Description = _\n            &quot;Select the directory that you want to use As the default.&quot; \n\n        &#39; Do not allow the user to create New files via the FolderBrowserDialog.\n        Me.folderBrowserDialog1.ShowNewFolderButton = False \n\n        &#39; Default to the My Documents folder.\n        Me.folderBrowserDialog1.RootFolder = Environment.SpecialFolder.Personal \n\n        Me.richTextBox1.AcceptsTab = True \n        Me.richTextBox1.Location = New System.Drawing.Point(8, 8) \n        Me.richTextBox1.Size = New System.Drawing.Size(280, 344) \n        Me.richTextBox1.Anchor = AnchorStyles.Top Or AnchorStyles.Left Or _\n                                 AnchorStyles.Bottom Or AnchorStyles.Right \n\n        Me.ClientSize = New System.Drawing.Size(296, 360) \n        Me.Controls.Add(Me.richTextBox1) \n        Me.Menu = Me.mainMenu1 \n        Me.Text = &quot;RTF Document Browser&quot; \n    End Sub\n    \n    &lt;STAThread()&gt; _\n    Shared Sub Main()\n        Application.Run(New FolderBrowserDialogExampleForm())\n    End Sub\n\n    &#39; Bring up a dialog to open a file.\n    Private Sub openMenuItem_Click(sender As object, e As System.EventArgs) _\n        Handles openMenuItem.Click\n        &#39; If a file is not opened, then set the initial directory to the\n        &#39; FolderBrowserDialog.SelectedPath value.\n        If (not fileOpened) Then\n            openFileDialog1.InitialDirectory = folderBrowserDialog1.SelectedPath \n            openFileDialog1.FileName = nothing \n        End If\n\n        &#39; Display the openFile dialog.\n        Dim result As DialogResult = openFileDialog1.ShowDialog() \n\n        &#39; OK button was pressed.\n        If (result = DialogResult.OK) Then\n            openFileName = openFileDialog1.FileName \n            Try\n                &#39; Output the requested file in richTextBox1.\n                Dim s As Stream = openFileDialog1.OpenFile() \n                richTextBox1.LoadFile(s, RichTextBoxStreamType.RichText) \n                s.Close()     \n            \n                fileOpened = True \n\n            Catch exp As Exception\n                MessageBox.Show(&quot;An error occurred while attempting to load the file. The error is:&quot; _\n                                + System.Environment.NewLine + exp.ToString() + System.Environment.NewLine) \n                fileOpened = False \n            End Try\n            Invalidate() \n\n            closeMenuItem.Enabled = fileOpened \n\n        &#39; Cancel button was pressed.\n        ElseIf (result = DialogResult.Cancel) Then\n            return \n        End If\n    End Sub\n\n    &#39; Close the current file.\n    Private Sub closeMenuItem_Click(sender As object, e As System.EventArgs) _\n        Handles closeMenuItem.Click\n        richTextBox1.Text = &quot;&quot; \n        fileOpened = False \n\n        closeMenuItem.Enabled = False \n    End Sub\n\n    &#39; Bring up a dialog to chose a folder path in which to open or save a file.\n    Private Sub folderMenuItem_Click(sender As object, e As System.EventArgs) _\n        Handles folderMenuItem.Click\n        &#39; Show the FolderBrowserDialog.\n        Dim result As DialogResult = folderBrowserDialog1.ShowDialog() \n\n        If ( result = DialogResult.OK ) Then\n            folderName = folderBrowserDialog1.SelectedPath \n            If (not fileOpened) Then\n                &#39; No file is opened, bring up openFileDialog in selected path.\n                openFileDialog1.InitialDirectory = folderName \n                openFileDialog1.FileName = nothing\n                openMenuItem.PerformClick() \n            End If\n        End If\n    End Sub\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FolderBrowserDialog_Description\">\r\n    \r\n            <a id=\"System_Windows_Forms_FolderBrowserDialog_Description_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Description</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the descriptive text displayed above the tree view control in the dialog box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Description { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The description to display. The default is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Description property can be used to specify additional information to the user, like instructions.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates an application that enables the user to open rich text (.rtf) files within the <a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a> control.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.FolderBrowserDialog#1\">// The following example displays an application that provides the ability to\n// open rich text files (rtf) into the RichTextBox. The example demonstrates\n// using the FolderBrowserDialog to set the default directory for opening files.\n// The OpenFileDialog is used to open the file.\n#using &lt;System.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n\nusing namespace System;\nusing namespace System::Drawing;\nusing namespace System::Windows::Forms;\nusing namespace System::IO;\npublic ref class FolderBrowserDialogExampleForm: public System::Windows::Forms::Form\n{\nprivate:\n   FolderBrowserDialog^ folderBrowserDialog1;\n   OpenFileDialog^ openFileDialog1;\n   RichTextBox^ richTextBox1;\n   MainMenu^ mainMenu1;\n   MenuItem^ fileMenuItem;\n   MenuItem^ openMenuItem;\n   MenuItem^ folderMenuItem;\n   MenuItem^ closeMenuItem;\n   String^ openFileName;\n   String^ folderName;\n   bool fileOpened;\n\npublic:\n\n   // Constructor.\n   FolderBrowserDialogExampleForm()\n   {\n      fileOpened = false;\n      this-&gt;mainMenu1 = gcnew System::Windows::Forms::MainMenu;\n      this-&gt;fileMenuItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;openMenuItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;folderMenuItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;closeMenuItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;openFileDialog1 = gcnew System::Windows::Forms::OpenFileDialog;\n      this-&gt;folderBrowserDialog1 = gcnew System::Windows::Forms::FolderBrowserDialog;\n      this-&gt;richTextBox1 = gcnew System::Windows::Forms::RichTextBox;\n      this-&gt;mainMenu1-&gt;MenuItems-&gt;Add( this-&gt;fileMenuItem );\n      array&lt;System::Windows::Forms::MenuItem^&gt;^temp0 = {this-&gt;openMenuItem,this-&gt;closeMenuItem,this-&gt;folderMenuItem};\n      this-&gt;fileMenuItem-&gt;MenuItems-&gt;AddRange( temp0 );\n      this-&gt;fileMenuItem-&gt;Text = &quot;File&quot;;\n      this-&gt;openMenuItem-&gt;Text = &quot;Open...&quot;;\n      this-&gt;openMenuItem-&gt;Click += gcnew System::EventHandler( this, &amp;FolderBrowserDialogExampleForm::openMenuItem_Click );\n      this-&gt;folderMenuItem-&gt;Text = &quot;Select Directory...&quot;;\n      this-&gt;folderMenuItem-&gt;Click += gcnew System::EventHandler( this, &amp;FolderBrowserDialogExampleForm::folderMenuItem_Click );\n      this-&gt;closeMenuItem-&gt;Text = &quot;Close&quot;;\n      this-&gt;closeMenuItem-&gt;Click += gcnew System::EventHandler( this, &amp;FolderBrowserDialogExampleForm::closeMenuItem_Click );\n      this-&gt;closeMenuItem-&gt;Enabled = false;\n      this-&gt;openFileDialog1-&gt;DefaultExt = &quot;rtf&quot;;\n      this-&gt;openFileDialog1-&gt;Filter = &quot;rtf files (*.rtf)|*.rtf&quot;;\n      \n      // Set the help text description for the FolderBrowserDialog.\n      this-&gt;folderBrowserDialog1-&gt;Description = &quot;Select the directory that you want to use as the default.&quot;;\n      \n      // Do not allow the user to create new files via the FolderBrowserDialog.\n      this-&gt;folderBrowserDialog1-&gt;ShowNewFolderButton = false;\n      \n      // Default to the My Documents folder.\n      this-&gt;folderBrowserDialog1-&gt;RootFolder = Environment::SpecialFolder::Personal;\n      this-&gt;richTextBox1-&gt;AcceptsTab = true;\n      this-&gt;richTextBox1-&gt;Location = System::Drawing::Point( 8, 8 );\n      this-&gt;richTextBox1-&gt;Size = System::Drawing::Size( 280, 344 );\n      this-&gt;richTextBox1-&gt;Anchor = static_cast&lt;AnchorStyles&gt;(AnchorStyles::Top | AnchorStyles::Left | AnchorStyles::Bottom | AnchorStyles::Right);\n      this-&gt;ClientSize = System::Drawing::Size( 296, 360 );\n      this-&gt;Controls-&gt;Add( this-&gt;richTextBox1 );\n      this-&gt;Menu = this-&gt;mainMenu1;\n      this-&gt;Text = &quot;RTF Document Browser&quot;;\n   }\n\n\nprivate:\n\n   // Bring up a dialog to open a file.\n   void openMenuItem_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      \n      // If a file is not opened then set the initial directory to the\n      // FolderBrowserDialog::SelectedPath value.\n      if (  !fileOpened )\n      {\n         openFileDialog1-&gt;InitialDirectory = folderBrowserDialog1-&gt;SelectedPath;\n         openFileDialog1-&gt;FileName = nullptr;\n      }\n\n      \n      // Display the openFile Dialog.\n      System::Windows::Forms::DialogResult result = openFileDialog1-&gt;ShowDialog();\n      \n      // OK button was pressed.\n      if ( result == ::DialogResult::OK )\n      {\n         openFileName = openFileDialog1-&gt;FileName;\n         try\n         {\n            \n            // Output the requested file in richTextBox1.\n            Stream^ s = openFileDialog1-&gt;OpenFile();\n            richTextBox1-&gt;LoadFile( s, RichTextBoxStreamType::RichText );\n            s-&gt;Close();\n            fileOpened = true;\n         }\n         catch ( Exception^ exp ) \n         {\n            MessageBox::Show( String::Concat( &quot;An error occurred while attempting to load the file. The error is: &quot;, System::Environment::NewLine, exp, System::Environment::NewLine ) );\n            fileOpened = false;\n         }\n\n         Invalidate();\n         closeMenuItem-&gt;Enabled = fileOpened;\n      }\n      // Cancel button was pressed.\n      else\n      \n      // Cancel button was pressed.\n      if ( result == ::DialogResult::Cancel )\n      {\n         return;\n      }\n   }\n\n\n   // Close the current file.\n   void closeMenuItem_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      richTextBox1-&gt;Text = &quot;&quot;;\n      fileOpened = false;\n      closeMenuItem-&gt;Enabled = false;\n   }\n\n\n   // Bring up a dialog to chose a folder path in which to open/save a file.\n   void folderMenuItem_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      \n      // Show the FolderBrowserDialog.\n      System::Windows::Forms::DialogResult result = folderBrowserDialog1-&gt;ShowDialog();\n      if ( result == ::DialogResult::OK )\n      {\n         folderName = folderBrowserDialog1-&gt;SelectedPath;\n         if (  !fileOpened )\n         {\n            \n            // No file is opened, bring up openFileDialog in selected path.\n            openFileDialog1-&gt;InitialDirectory = folderName;\n            openFileDialog1-&gt;FileName = nullptr;\n            openMenuItem-&gt;PerformClick();\n         }\n      }\n   }\n\n};\n\n\n// The main entry point for the application.\nint main()\n{\n   Application::Run( gcnew FolderBrowserDialogExampleForm );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.FolderBrowserDialog#1\">// The following example displays an application that provides the ability to \n// open rich text files (rtf) into the RichTextBox. The example demonstrates \n// using the FolderBrowserDialog to set the default directory for opening files.\n// The OpenFileDialog class is used to open the file.\nusing System;\nusing System.Drawing;\nusing System.Windows.Forms;\nusing System.IO;\n\npublic class FolderBrowserDialogExampleForm : System.Windows.Forms.Form\n{\n    private FolderBrowserDialog folderBrowserDialog1;\n    private OpenFileDialog openFileDialog1;\n    \n    private RichTextBox richTextBox1;\n\n    private MainMenu mainMenu1;\n    private MenuItem fileMenuItem, openMenuItem;\n    private MenuItem folderMenuItem, closeMenuItem;\n    \n    private string openFileName, folderName;\n\n    private bool fileOpened = false;\n\n    // The main entry point for the application.\n    [STAThreadAttribute]\n    static void Main() \n    {\n        Application.Run(new FolderBrowserDialogExampleForm());\n    }\n\n\n    // Constructor.\n    public FolderBrowserDialogExampleForm()\n    {\n        this.mainMenu1 = new System.Windows.Forms.MainMenu();\n        this.fileMenuItem = new System.Windows.Forms.MenuItem();\n        this.openMenuItem = new System.Windows.Forms.MenuItem();\n        this.folderMenuItem = new System.Windows.Forms.MenuItem();\n        this.closeMenuItem = new System.Windows.Forms.MenuItem();\n\n        this.openFileDialog1 = new System.Windows.Forms.OpenFileDialog();\n        this.folderBrowserDialog1 = new System.Windows.Forms.FolderBrowserDialog();\n        this.richTextBox1 = new System.Windows.Forms.RichTextBox();\n\n        this.mainMenu1.MenuItems.Add(this.fileMenuItem);\n        this.fileMenuItem.MenuItems.AddRange(\n                            new System.Windows.Forms.MenuItem[] {this.openMenuItem,\n                                                                 this.closeMenuItem,\n                                                                 this.folderMenuItem});\n        this.fileMenuItem.Text = &quot;File&quot;;\n\n        this.openMenuItem.Text = &quot;Open...&quot;;\n        this.openMenuItem.Click += new System.EventHandler(this.openMenuItem_Click);\n\n        this.folderMenuItem.Text = &quot;Select Directory...&quot;;\n        this.folderMenuItem.Click += new System.EventHandler(this.folderMenuItem_Click);\n\n        this.closeMenuItem.Text = &quot;Close&quot;;\n        this.closeMenuItem.Click += new System.EventHandler(this.closeMenuItem_Click);\n        this.closeMenuItem.Enabled = false;\n\n        this.openFileDialog1.DefaultExt = &quot;rtf&quot;;\n        this.openFileDialog1.Filter = &quot;rtf files (*.rtf)|*.rtf&quot;;\n\n        // Set the help text description for the FolderBrowserDialog.\n        this.folderBrowserDialog1.Description = \n            &quot;Select the directory that you want to use as the default.&quot;;\n\n        // Do not allow the user to create new files via the FolderBrowserDialog.\n        this.folderBrowserDialog1.ShowNewFolderButton = false;\n\n        // Default to the My Documents folder.\n        this.folderBrowserDialog1.RootFolder = Environment.SpecialFolder.Personal;\n\n        this.richTextBox1.AcceptsTab = true;\n        this.richTextBox1.Location = new System.Drawing.Point(8, 8);\n        this.richTextBox1.Size = new System.Drawing.Size(280, 344);\n        this.richTextBox1.Anchor = AnchorStyles.Top | AnchorStyles.Left | \n                                   AnchorStyles.Bottom | AnchorStyles.Right;\n\n        this.ClientSize = new System.Drawing.Size(296, 360);\n        this.Controls.Add(this.richTextBox1);\n        this.Menu = this.mainMenu1;\n        this.Text = &quot;RTF Document Browser&quot;;\n    }\n\n    // Bring up a dialog to open a file.\n    private void openMenuItem_Click(object sender, System.EventArgs e)\n    {\n        // If a file is not opened, then set the initial directory to the\n        // FolderBrowserDialog.SelectedPath value.\n        if (!fileOpened) {\n            openFileDialog1.InitialDirectory = folderBrowserDialog1.SelectedPath;\n            openFileDialog1.FileName = null;\n        }\n\n        // Display the openFile dialog.\n        DialogResult result = openFileDialog1.ShowDialog();\n\n        // OK button was pressed.\n        if(result == DialogResult.OK) \n        {\n            openFileName = openFileDialog1.FileName;\n            try\n            {\n                // Output the requested file in richTextBox1.\n                Stream s = openFileDialog1.OpenFile();\n                richTextBox1.LoadFile(s, RichTextBoxStreamType.RichText);\n                s.Close();    \n            \n                fileOpened = true;\n\n            } \n            catch(Exception exp)\n            {\n                MessageBox.Show(&quot;An error occurred while attempting to load the file. The error is:&quot; \n                                + System.Environment.NewLine + exp.ToString() + System.Environment.NewLine);\n                fileOpened = false;\n            }\n            Invalidate();\n\n            closeMenuItem.Enabled = fileOpened;\n        }\n\n        // Cancel button was pressed.\n        else if(result == DialogResult.Cancel) \n        {\n            return;\n        }\n    }\n\n\n    // Close the current file.\n    private void closeMenuItem_Click(object sender, System.EventArgs e)\n    {\n        richTextBox1.Text = &quot;&quot;;\n        fileOpened = false;\n\n        closeMenuItem.Enabled = false;\n    }\n\n\n    // Bring up a dialog to chose a folder path in which to open or save a file.\n    private void folderMenuItem_Click(object sender, System.EventArgs e)\n    {\n        // Show the FolderBrowserDialog.\n        DialogResult result = folderBrowserDialog1.ShowDialog();\n        if( result == DialogResult.OK )\n        {\n            folderName = folderBrowserDialog1.SelectedPath;\n            if(!fileOpened)\n            {\n                // No file is opened, bring up openFileDialog in selected path.\n                openFileDialog1.InitialDirectory = folderName;\n                openFileDialog1.FileName = null;\n                openMenuItem.PerformClick();\n            } \n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.FolderBrowserDialog#1\">&#39; The following example displays an application that provides the ability to \n&#39; open rich text files (rtf) into the RichTextBox. The example demonstrates \n&#39; using the FolderBrowserDialog to set the default directory for opening files.\n&#39; The OpenFileDialog class is used to open the file.\nImports System\nImports System.Drawing\nImports System.Windows.Forms\nImports System.IO\n\nPublic Class FolderBrowserDialogExampleForm \n    Inherits Form\n    \n    Private folderBrowserDialog1 As FolderBrowserDialog\n    Private openFileDialog1 As OpenFileDialog \n    \n    Private richTextBox1 As RichTextBox\n\n    Private mainMenu1 As MainMenu\n    Private fileMenuItem As MenuItem\n    Private WithEvents folderMenuItem As MenuItem, _\n                       closeMenuItem As MenuItem, _\n                       openMenuItem As MenuItem\n    \n    Private openFileName As String, folderName As String\n\n    Private fileOpened As Boolean = False\n\n    Public Sub New()\n        Me.mainMenu1 = New System.Windows.Forms.MainMenu() \n        Me.fileMenuItem = New System.Windows.Forms.MenuItem() \n        Me.openMenuItem = New System.Windows.Forms.MenuItem() \n        Me.folderMenuItem = New System.Windows.Forms.MenuItem() \n        Me.closeMenuItem = New System.Windows.Forms.MenuItem() \n\n        Me.openFileDialog1 = New System.Windows.Forms.OpenFileDialog() \n        Me.folderBrowserDialog1 = New System.Windows.Forms.FolderBrowserDialog() \n        Me.richTextBox1 = New System.Windows.Forms.RichTextBox() \n\n        Me.mainMenu1.MenuItems.Add(Me.fileMenuItem) \n        Me.fileMenuItem.MenuItems.AddRange( _\n                    New System.Windows.Forms.MenuItem() {Me.openMenuItem, _\n                                                         Me.closeMenuItem, _\n                                                         Me.folderMenuItem}) \n        Me.fileMenuItem.Text = &quot;File&quot; \n\n        Me.openMenuItem.Text = &quot;Open...&quot; \n\n        Me.folderMenuItem.Text = &quot;Select Directory...&quot; \n\n        Me.closeMenuItem.Text = &quot;Close&quot; \n        Me.closeMenuItem.Enabled = False \n\n        Me.openFileDialog1.DefaultExt = &quot;rtf&quot; \n        Me.openFileDialog1.Filter = &quot;rtf files (*.rtf)|*.rtf&quot; \n\n        &#39; Set the Help text description for the FolderBrowserDialog.\n        Me.folderBrowserDialog1.Description = _\n            &quot;Select the directory that you want to use As the default.&quot; \n\n        &#39; Do not allow the user to create New files via the FolderBrowserDialog.\n        Me.folderBrowserDialog1.ShowNewFolderButton = False \n\n        &#39; Default to the My Documents folder.\n        Me.folderBrowserDialog1.RootFolder = Environment.SpecialFolder.Personal \n\n        Me.richTextBox1.AcceptsTab = True \n        Me.richTextBox1.Location = New System.Drawing.Point(8, 8) \n        Me.richTextBox1.Size = New System.Drawing.Size(280, 344) \n        Me.richTextBox1.Anchor = AnchorStyles.Top Or AnchorStyles.Left Or _\n                                 AnchorStyles.Bottom Or AnchorStyles.Right \n\n        Me.ClientSize = New System.Drawing.Size(296, 360) \n        Me.Controls.Add(Me.richTextBox1) \n        Me.Menu = Me.mainMenu1 \n        Me.Text = &quot;RTF Document Browser&quot; \n    End Sub\n    \n    &lt;STAThread()&gt; _\n    Shared Sub Main()\n        Application.Run(New FolderBrowserDialogExampleForm())\n    End Sub\n\n    &#39; Bring up a dialog to open a file.\n    Private Sub openMenuItem_Click(sender As object, e As System.EventArgs) _\n        Handles openMenuItem.Click\n        &#39; If a file is not opened, then set the initial directory to the\n        &#39; FolderBrowserDialog.SelectedPath value.\n        If (not fileOpened) Then\n            openFileDialog1.InitialDirectory = folderBrowserDialog1.SelectedPath \n            openFileDialog1.FileName = nothing \n        End If\n\n        &#39; Display the openFile dialog.\n        Dim result As DialogResult = openFileDialog1.ShowDialog() \n\n        &#39; OK button was pressed.\n        If (result = DialogResult.OK) Then\n            openFileName = openFileDialog1.FileName \n            Try\n                &#39; Output the requested file in richTextBox1.\n                Dim s As Stream = openFileDialog1.OpenFile() \n                richTextBox1.LoadFile(s, RichTextBoxStreamType.RichText) \n                s.Close()     \n            \n                fileOpened = True \n\n            Catch exp As Exception\n                MessageBox.Show(&quot;An error occurred while attempting to load the file. The error is:&quot; _\n                                + System.Environment.NewLine + exp.ToString() + System.Environment.NewLine) \n                fileOpened = False \n            End Try\n            Invalidate() \n\n            closeMenuItem.Enabled = fileOpened \n\n        &#39; Cancel button was pressed.\n        ElseIf (result = DialogResult.Cancel) Then\n            return \n        End If\n    End Sub\n\n    &#39; Close the current file.\n    Private Sub closeMenuItem_Click(sender As object, e As System.EventArgs) _\n        Handles closeMenuItem.Click\n        richTextBox1.Text = &quot;&quot; \n        fileOpened = False \n\n        closeMenuItem.Enabled = False \n    End Sub\n\n    &#39; Bring up a dialog to chose a folder path in which to open or save a file.\n    Private Sub folderMenuItem_Click(sender As object, e As System.EventArgs) _\n        Handles folderMenuItem.Click\n        &#39; Show the FolderBrowserDialog.\n        Dim result As DialogResult = folderBrowserDialog1.ShowDialog() \n\n        If ( result = DialogResult.OK ) Then\n            folderName = folderBrowserDialog1.SelectedPath \n            If (not fileOpened) Then\n                &#39; No file is opened, bring up openFileDialog in selected path.\n                openFileDialog1.InitialDirectory = folderName \n                openFileDialog1.FileName = nothing\n                openMenuItem.PerformClick() \n            End If\n        End If\n    End Sub\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FolderBrowserDialog_RootFolder\">\r\n    \r\n            <a id=\"System_Windows_Forms_FolderBrowserDialog_RootFolder_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RootFolder</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the root folder where the browsing starts from.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Environment.SpecialFolder RootFolder { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.environment.specialfolder\" data-linktype=\"relative-path\">Environment+SpecialFolder</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.environment.specialfolder\" data-linktype=\"relative-path\">Environment+SpecialFolder</a> values. The default is <code>Desktop</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The value assigned is not one of the <a class=\"xref\" href=\"system.environment.specialfolder\" data-linktype=\"relative-path\">Environment+SpecialFolder</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Only the specified folder and any subfolders that are beneath it will appear in the dialog box and be selectable. The <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog#System_Windows_Forms_FolderBrowserDialog_SelectedPath_\" data-linktype=\"relative-path\">SelectedPath</a> property, along with RootFolder, determines what the selected folder will be when the dialog box is displayed, as long as <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog#System_Windows_Forms_FolderBrowserDialog_SelectedPath_\" data-linktype=\"relative-path\">SelectedPath</a> is an absolute path that is a subfolder of RootFolder (or more accurately, points to a subfolder of the shell namespace represented by RootFolder).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates an application that enables the user to open rich text (.rtf) files within the <a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a> control.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.FolderBrowserDialog#1\">// The following example displays an application that provides the ability to\n// open rich text files (rtf) into the RichTextBox. The example demonstrates\n// using the FolderBrowserDialog to set the default directory for opening files.\n// The OpenFileDialog is used to open the file.\n#using &lt;System.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n\nusing namespace System;\nusing namespace System::Drawing;\nusing namespace System::Windows::Forms;\nusing namespace System::IO;\npublic ref class FolderBrowserDialogExampleForm: public System::Windows::Forms::Form\n{\nprivate:\n   FolderBrowserDialog^ folderBrowserDialog1;\n   OpenFileDialog^ openFileDialog1;\n   RichTextBox^ richTextBox1;\n   MainMenu^ mainMenu1;\n   MenuItem^ fileMenuItem;\n   MenuItem^ openMenuItem;\n   MenuItem^ folderMenuItem;\n   MenuItem^ closeMenuItem;\n   String^ openFileName;\n   String^ folderName;\n   bool fileOpened;\n\npublic:\n\n   // Constructor.\n   FolderBrowserDialogExampleForm()\n   {\n      fileOpened = false;\n      this-&gt;mainMenu1 = gcnew System::Windows::Forms::MainMenu;\n      this-&gt;fileMenuItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;openMenuItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;folderMenuItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;closeMenuItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;openFileDialog1 = gcnew System::Windows::Forms::OpenFileDialog;\n      this-&gt;folderBrowserDialog1 = gcnew System::Windows::Forms::FolderBrowserDialog;\n      this-&gt;richTextBox1 = gcnew System::Windows::Forms::RichTextBox;\n      this-&gt;mainMenu1-&gt;MenuItems-&gt;Add( this-&gt;fileMenuItem );\n      array&lt;System::Windows::Forms::MenuItem^&gt;^temp0 = {this-&gt;openMenuItem,this-&gt;closeMenuItem,this-&gt;folderMenuItem};\n      this-&gt;fileMenuItem-&gt;MenuItems-&gt;AddRange( temp0 );\n      this-&gt;fileMenuItem-&gt;Text = &quot;File&quot;;\n      this-&gt;openMenuItem-&gt;Text = &quot;Open...&quot;;\n      this-&gt;openMenuItem-&gt;Click += gcnew System::EventHandler( this, &amp;FolderBrowserDialogExampleForm::openMenuItem_Click );\n      this-&gt;folderMenuItem-&gt;Text = &quot;Select Directory...&quot;;\n      this-&gt;folderMenuItem-&gt;Click += gcnew System::EventHandler( this, &amp;FolderBrowserDialogExampleForm::folderMenuItem_Click );\n      this-&gt;closeMenuItem-&gt;Text = &quot;Close&quot;;\n      this-&gt;closeMenuItem-&gt;Click += gcnew System::EventHandler( this, &amp;FolderBrowserDialogExampleForm::closeMenuItem_Click );\n      this-&gt;closeMenuItem-&gt;Enabled = false;\n      this-&gt;openFileDialog1-&gt;DefaultExt = &quot;rtf&quot;;\n      this-&gt;openFileDialog1-&gt;Filter = &quot;rtf files (*.rtf)|*.rtf&quot;;\n      \n      // Set the help text description for the FolderBrowserDialog.\n      this-&gt;folderBrowserDialog1-&gt;Description = &quot;Select the directory that you want to use as the default.&quot;;\n      \n      // Do not allow the user to create new files via the FolderBrowserDialog.\n      this-&gt;folderBrowserDialog1-&gt;ShowNewFolderButton = false;\n      \n      // Default to the My Documents folder.\n      this-&gt;folderBrowserDialog1-&gt;RootFolder = Environment::SpecialFolder::Personal;\n      this-&gt;richTextBox1-&gt;AcceptsTab = true;\n      this-&gt;richTextBox1-&gt;Location = System::Drawing::Point( 8, 8 );\n      this-&gt;richTextBox1-&gt;Size = System::Drawing::Size( 280, 344 );\n      this-&gt;richTextBox1-&gt;Anchor = static_cast&lt;AnchorStyles&gt;(AnchorStyles::Top | AnchorStyles::Left | AnchorStyles::Bottom | AnchorStyles::Right);\n      this-&gt;ClientSize = System::Drawing::Size( 296, 360 );\n      this-&gt;Controls-&gt;Add( this-&gt;richTextBox1 );\n      this-&gt;Menu = this-&gt;mainMenu1;\n      this-&gt;Text = &quot;RTF Document Browser&quot;;\n   }\n\n\nprivate:\n\n   // Bring up a dialog to open a file.\n   void openMenuItem_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      \n      // If a file is not opened then set the initial directory to the\n      // FolderBrowserDialog::SelectedPath value.\n      if (  !fileOpened )\n      {\n         openFileDialog1-&gt;InitialDirectory = folderBrowserDialog1-&gt;SelectedPath;\n         openFileDialog1-&gt;FileName = nullptr;\n      }\n\n      \n      // Display the openFile Dialog.\n      System::Windows::Forms::DialogResult result = openFileDialog1-&gt;ShowDialog();\n      \n      // OK button was pressed.\n      if ( result == ::DialogResult::OK )\n      {\n         openFileName = openFileDialog1-&gt;FileName;\n         try\n         {\n            \n            // Output the requested file in richTextBox1.\n            Stream^ s = openFileDialog1-&gt;OpenFile();\n            richTextBox1-&gt;LoadFile( s, RichTextBoxStreamType::RichText );\n            s-&gt;Close();\n            fileOpened = true;\n         }\n         catch ( Exception^ exp ) \n         {\n            MessageBox::Show( String::Concat( &quot;An error occurred while attempting to load the file. The error is: &quot;, System::Environment::NewLine, exp, System::Environment::NewLine ) );\n            fileOpened = false;\n         }\n\n         Invalidate();\n         closeMenuItem-&gt;Enabled = fileOpened;\n      }\n      // Cancel button was pressed.\n      else\n      \n      // Cancel button was pressed.\n      if ( result == ::DialogResult::Cancel )\n      {\n         return;\n      }\n   }\n\n\n   // Close the current file.\n   void closeMenuItem_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      richTextBox1-&gt;Text = &quot;&quot;;\n      fileOpened = false;\n      closeMenuItem-&gt;Enabled = false;\n   }\n\n\n   // Bring up a dialog to chose a folder path in which to open/save a file.\n   void folderMenuItem_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      \n      // Show the FolderBrowserDialog.\n      System::Windows::Forms::DialogResult result = folderBrowserDialog1-&gt;ShowDialog();\n      if ( result == ::DialogResult::OK )\n      {\n         folderName = folderBrowserDialog1-&gt;SelectedPath;\n         if (  !fileOpened )\n         {\n            \n            // No file is opened, bring up openFileDialog in selected path.\n            openFileDialog1-&gt;InitialDirectory = folderName;\n            openFileDialog1-&gt;FileName = nullptr;\n            openMenuItem-&gt;PerformClick();\n         }\n      }\n   }\n\n};\n\n\n// The main entry point for the application.\nint main()\n{\n   Application::Run( gcnew FolderBrowserDialogExampleForm );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.FolderBrowserDialog#1\">// The following example displays an application that provides the ability to \n// open rich text files (rtf) into the RichTextBox. The example demonstrates \n// using the FolderBrowserDialog to set the default directory for opening files.\n// The OpenFileDialog class is used to open the file.\nusing System;\nusing System.Drawing;\nusing System.Windows.Forms;\nusing System.IO;\n\npublic class FolderBrowserDialogExampleForm : System.Windows.Forms.Form\n{\n    private FolderBrowserDialog folderBrowserDialog1;\n    private OpenFileDialog openFileDialog1;\n    \n    private RichTextBox richTextBox1;\n\n    private MainMenu mainMenu1;\n    private MenuItem fileMenuItem, openMenuItem;\n    private MenuItem folderMenuItem, closeMenuItem;\n    \n    private string openFileName, folderName;\n\n    private bool fileOpened = false;\n\n    // The main entry point for the application.\n    [STAThreadAttribute]\n    static void Main() \n    {\n        Application.Run(new FolderBrowserDialogExampleForm());\n    }\n\n\n    // Constructor.\n    public FolderBrowserDialogExampleForm()\n    {\n        this.mainMenu1 = new System.Windows.Forms.MainMenu();\n        this.fileMenuItem = new System.Windows.Forms.MenuItem();\n        this.openMenuItem = new System.Windows.Forms.MenuItem();\n        this.folderMenuItem = new System.Windows.Forms.MenuItem();\n        this.closeMenuItem = new System.Windows.Forms.MenuItem();\n\n        this.openFileDialog1 = new System.Windows.Forms.OpenFileDialog();\n        this.folderBrowserDialog1 = new System.Windows.Forms.FolderBrowserDialog();\n        this.richTextBox1 = new System.Windows.Forms.RichTextBox();\n\n        this.mainMenu1.MenuItems.Add(this.fileMenuItem);\n        this.fileMenuItem.MenuItems.AddRange(\n                            new System.Windows.Forms.MenuItem[] {this.openMenuItem,\n                                                                 this.closeMenuItem,\n                                                                 this.folderMenuItem});\n        this.fileMenuItem.Text = &quot;File&quot;;\n\n        this.openMenuItem.Text = &quot;Open...&quot;;\n        this.openMenuItem.Click += new System.EventHandler(this.openMenuItem_Click);\n\n        this.folderMenuItem.Text = &quot;Select Directory...&quot;;\n        this.folderMenuItem.Click += new System.EventHandler(this.folderMenuItem_Click);\n\n        this.closeMenuItem.Text = &quot;Close&quot;;\n        this.closeMenuItem.Click += new System.EventHandler(this.closeMenuItem_Click);\n        this.closeMenuItem.Enabled = false;\n\n        this.openFileDialog1.DefaultExt = &quot;rtf&quot;;\n        this.openFileDialog1.Filter = &quot;rtf files (*.rtf)|*.rtf&quot;;\n\n        // Set the help text description for the FolderBrowserDialog.\n        this.folderBrowserDialog1.Description = \n            &quot;Select the directory that you want to use as the default.&quot;;\n\n        // Do not allow the user to create new files via the FolderBrowserDialog.\n        this.folderBrowserDialog1.ShowNewFolderButton = false;\n\n        // Default to the My Documents folder.\n        this.folderBrowserDialog1.RootFolder = Environment.SpecialFolder.Personal;\n\n        this.richTextBox1.AcceptsTab = true;\n        this.richTextBox1.Location = new System.Drawing.Point(8, 8);\n        this.richTextBox1.Size = new System.Drawing.Size(280, 344);\n        this.richTextBox1.Anchor = AnchorStyles.Top | AnchorStyles.Left | \n                                   AnchorStyles.Bottom | AnchorStyles.Right;\n\n        this.ClientSize = new System.Drawing.Size(296, 360);\n        this.Controls.Add(this.richTextBox1);\n        this.Menu = this.mainMenu1;\n        this.Text = &quot;RTF Document Browser&quot;;\n    }\n\n    // Bring up a dialog to open a file.\n    private void openMenuItem_Click(object sender, System.EventArgs e)\n    {\n        // If a file is not opened, then set the initial directory to the\n        // FolderBrowserDialog.SelectedPath value.\n        if (!fileOpened) {\n            openFileDialog1.InitialDirectory = folderBrowserDialog1.SelectedPath;\n            openFileDialog1.FileName = null;\n        }\n\n        // Display the openFile dialog.\n        DialogResult result = openFileDialog1.ShowDialog();\n\n        // OK button was pressed.\n        if(result == DialogResult.OK) \n        {\n            openFileName = openFileDialog1.FileName;\n            try\n            {\n                // Output the requested file in richTextBox1.\n                Stream s = openFileDialog1.OpenFile();\n                richTextBox1.LoadFile(s, RichTextBoxStreamType.RichText);\n                s.Close();    \n            \n                fileOpened = true;\n\n            } \n            catch(Exception exp)\n            {\n                MessageBox.Show(&quot;An error occurred while attempting to load the file. The error is:&quot; \n                                + System.Environment.NewLine + exp.ToString() + System.Environment.NewLine);\n                fileOpened = false;\n            }\n            Invalidate();\n\n            closeMenuItem.Enabled = fileOpened;\n        }\n\n        // Cancel button was pressed.\n        else if(result == DialogResult.Cancel) \n        {\n            return;\n        }\n    }\n\n\n    // Close the current file.\n    private void closeMenuItem_Click(object sender, System.EventArgs e)\n    {\n        richTextBox1.Text = &quot;&quot;;\n        fileOpened = false;\n\n        closeMenuItem.Enabled = false;\n    }\n\n\n    // Bring up a dialog to chose a folder path in which to open or save a file.\n    private void folderMenuItem_Click(object sender, System.EventArgs e)\n    {\n        // Show the FolderBrowserDialog.\n        DialogResult result = folderBrowserDialog1.ShowDialog();\n        if( result == DialogResult.OK )\n        {\n            folderName = folderBrowserDialog1.SelectedPath;\n            if(!fileOpened)\n            {\n                // No file is opened, bring up openFileDialog in selected path.\n                openFileDialog1.InitialDirectory = folderName;\n                openFileDialog1.FileName = null;\n                openMenuItem.PerformClick();\n            } \n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.FolderBrowserDialog#1\">&#39; The following example displays an application that provides the ability to \n&#39; open rich text files (rtf) into the RichTextBox. The example demonstrates \n&#39; using the FolderBrowserDialog to set the default directory for opening files.\n&#39; The OpenFileDialog class is used to open the file.\nImports System\nImports System.Drawing\nImports System.Windows.Forms\nImports System.IO\n\nPublic Class FolderBrowserDialogExampleForm \n    Inherits Form\n    \n    Private folderBrowserDialog1 As FolderBrowserDialog\n    Private openFileDialog1 As OpenFileDialog \n    \n    Private richTextBox1 As RichTextBox\n\n    Private mainMenu1 As MainMenu\n    Private fileMenuItem As MenuItem\n    Private WithEvents folderMenuItem As MenuItem, _\n                       closeMenuItem As MenuItem, _\n                       openMenuItem As MenuItem\n    \n    Private openFileName As String, folderName As String\n\n    Private fileOpened As Boolean = False\n\n    Public Sub New()\n        Me.mainMenu1 = New System.Windows.Forms.MainMenu() \n        Me.fileMenuItem = New System.Windows.Forms.MenuItem() \n        Me.openMenuItem = New System.Windows.Forms.MenuItem() \n        Me.folderMenuItem = New System.Windows.Forms.MenuItem() \n        Me.closeMenuItem = New System.Windows.Forms.MenuItem() \n\n        Me.openFileDialog1 = New System.Windows.Forms.OpenFileDialog() \n        Me.folderBrowserDialog1 = New System.Windows.Forms.FolderBrowserDialog() \n        Me.richTextBox1 = New System.Windows.Forms.RichTextBox() \n\n        Me.mainMenu1.MenuItems.Add(Me.fileMenuItem) \n        Me.fileMenuItem.MenuItems.AddRange( _\n                    New System.Windows.Forms.MenuItem() {Me.openMenuItem, _\n                                                         Me.closeMenuItem, _\n                                                         Me.folderMenuItem}) \n        Me.fileMenuItem.Text = &quot;File&quot; \n\n        Me.openMenuItem.Text = &quot;Open...&quot; \n\n        Me.folderMenuItem.Text = &quot;Select Directory...&quot; \n\n        Me.closeMenuItem.Text = &quot;Close&quot; \n        Me.closeMenuItem.Enabled = False \n\n        Me.openFileDialog1.DefaultExt = &quot;rtf&quot; \n        Me.openFileDialog1.Filter = &quot;rtf files (*.rtf)|*.rtf&quot; \n\n        &#39; Set the Help text description for the FolderBrowserDialog.\n        Me.folderBrowserDialog1.Description = _\n            &quot;Select the directory that you want to use As the default.&quot; \n\n        &#39; Do not allow the user to create New files via the FolderBrowserDialog.\n        Me.folderBrowserDialog1.ShowNewFolderButton = False \n\n        &#39; Default to the My Documents folder.\n        Me.folderBrowserDialog1.RootFolder = Environment.SpecialFolder.Personal \n\n        Me.richTextBox1.AcceptsTab = True \n        Me.richTextBox1.Location = New System.Drawing.Point(8, 8) \n        Me.richTextBox1.Size = New System.Drawing.Size(280, 344) \n        Me.richTextBox1.Anchor = AnchorStyles.Top Or AnchorStyles.Left Or _\n                                 AnchorStyles.Bottom Or AnchorStyles.Right \n\n        Me.ClientSize = New System.Drawing.Size(296, 360) \n        Me.Controls.Add(Me.richTextBox1) \n        Me.Menu = Me.mainMenu1 \n        Me.Text = &quot;RTF Document Browser&quot; \n    End Sub\n    \n    &lt;STAThread()&gt; _\n    Shared Sub Main()\n        Application.Run(New FolderBrowserDialogExampleForm())\n    End Sub\n\n    &#39; Bring up a dialog to open a file.\n    Private Sub openMenuItem_Click(sender As object, e As System.EventArgs) _\n        Handles openMenuItem.Click\n        &#39; If a file is not opened, then set the initial directory to the\n        &#39; FolderBrowserDialog.SelectedPath value.\n        If (not fileOpened) Then\n            openFileDialog1.InitialDirectory = folderBrowserDialog1.SelectedPath \n            openFileDialog1.FileName = nothing \n        End If\n\n        &#39; Display the openFile dialog.\n        Dim result As DialogResult = openFileDialog1.ShowDialog() \n\n        &#39; OK button was pressed.\n        If (result = DialogResult.OK) Then\n            openFileName = openFileDialog1.FileName \n            Try\n                &#39; Output the requested file in richTextBox1.\n                Dim s As Stream = openFileDialog1.OpenFile() \n                richTextBox1.LoadFile(s, RichTextBoxStreamType.RichText) \n                s.Close()     \n            \n                fileOpened = True \n\n            Catch exp As Exception\n                MessageBox.Show(&quot;An error occurred while attempting to load the file. The error is:&quot; _\n                                + System.Environment.NewLine + exp.ToString() + System.Environment.NewLine) \n                fileOpened = False \n            End Try\n            Invalidate() \n\n            closeMenuItem.Enabled = fileOpened \n\n        &#39; Cancel button was pressed.\n        ElseIf (result = DialogResult.Cancel) Then\n            return \n        End If\n    End Sub\n\n    &#39; Close the current file.\n    Private Sub closeMenuItem_Click(sender As object, e As System.EventArgs) _\n        Handles closeMenuItem.Click\n        richTextBox1.Text = &quot;&quot; \n        fileOpened = False \n\n        closeMenuItem.Enabled = False \n    End Sub\n\n    &#39; Bring up a dialog to chose a folder path in which to open or save a file.\n    Private Sub folderMenuItem_Click(sender As object, e As System.EventArgs) _\n        Handles folderMenuItem.Click\n        &#39; Show the FolderBrowserDialog.\n        Dim result As DialogResult = folderBrowserDialog1.ShowDialog() \n\n        If ( result = DialogResult.OK ) Then\n            folderName = folderBrowserDialog1.SelectedPath \n            If (not fileOpened) Then\n                &#39; No file is opened, bring up openFileDialog in selected path.\n                openFileDialog1.InitialDirectory = folderName \n                openFileDialog1.FileName = nothing\n                openMenuItem.PerformClick() \n            End If\n        End If\n    End Sub\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FolderBrowserDialog_SelectedPath\">\r\n    \r\n            <a id=\"System_Windows_Forms_FolderBrowserDialog_SelectedPath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectedPath</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the path selected by the user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string SelectedPath { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The path of the folder first selected in the dialog box or the last folder selected by the user. The default is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the SelectedPath property is set before showing the dialog box, the folder with this path will be the selected folder, as long as SelectedPath is set to an absolute path that is a subfolder of <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog#System_Windows_Forms_FolderBrowserDialog_RootFolder_\" data-linktype=\"relative-path\">RootFolder</a> (or more accurately, points to a subfolder of the shell namespace represented by <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog#System_Windows_Forms_FolderBrowserDialog_RootFolder_\" data-linktype=\"relative-path\">RootFolder</a>).  </p>\n<p> If the <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> returns <a class=\"xref\" href=\"system.windows.forms.dialogresult\" data-linktype=\"relative-path\">DialogResult</a>, meaning the user clicked the <strong>OK</strong> button, the SelectedPath property will return a string containing the path to the selected folder. If <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> returns <a class=\"xref\" href=\"system.windows.forms.dialogresult\" data-linktype=\"relative-path\">DialogResult</a>, meaning the user canceled out of the dialog box, this property will have the same value that it had prior to displaying the dialog box. If the user selects a folder that does not have a physical path (for example, My Computer), the <strong>OK</strong> button on the dialog box will be disabled.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates an application that enables the user to open rich text (.rtf) files within the <a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a> control.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.FolderBrowserDialog#1\">// The following example displays an application that provides the ability to\n// open rich text files (rtf) into the RichTextBox. The example demonstrates\n// using the FolderBrowserDialog to set the default directory for opening files.\n// The OpenFileDialog is used to open the file.\n#using &lt;System.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n\nusing namespace System;\nusing namespace System::Drawing;\nusing namespace System::Windows::Forms;\nusing namespace System::IO;\npublic ref class FolderBrowserDialogExampleForm: public System::Windows::Forms::Form\n{\nprivate:\n   FolderBrowserDialog^ folderBrowserDialog1;\n   OpenFileDialog^ openFileDialog1;\n   RichTextBox^ richTextBox1;\n   MainMenu^ mainMenu1;\n   MenuItem^ fileMenuItem;\n   MenuItem^ openMenuItem;\n   MenuItem^ folderMenuItem;\n   MenuItem^ closeMenuItem;\n   String^ openFileName;\n   String^ folderName;\n   bool fileOpened;\n\npublic:\n\n   // Constructor.\n   FolderBrowserDialogExampleForm()\n   {\n      fileOpened = false;\n      this-&gt;mainMenu1 = gcnew System::Windows::Forms::MainMenu;\n      this-&gt;fileMenuItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;openMenuItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;folderMenuItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;closeMenuItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;openFileDialog1 = gcnew System::Windows::Forms::OpenFileDialog;\n      this-&gt;folderBrowserDialog1 = gcnew System::Windows::Forms::FolderBrowserDialog;\n      this-&gt;richTextBox1 = gcnew System::Windows::Forms::RichTextBox;\n      this-&gt;mainMenu1-&gt;MenuItems-&gt;Add( this-&gt;fileMenuItem );\n      array&lt;System::Windows::Forms::MenuItem^&gt;^temp0 = {this-&gt;openMenuItem,this-&gt;closeMenuItem,this-&gt;folderMenuItem};\n      this-&gt;fileMenuItem-&gt;MenuItems-&gt;AddRange( temp0 );\n      this-&gt;fileMenuItem-&gt;Text = &quot;File&quot;;\n      this-&gt;openMenuItem-&gt;Text = &quot;Open...&quot;;\n      this-&gt;openMenuItem-&gt;Click += gcnew System::EventHandler( this, &amp;FolderBrowserDialogExampleForm::openMenuItem_Click );\n      this-&gt;folderMenuItem-&gt;Text = &quot;Select Directory...&quot;;\n      this-&gt;folderMenuItem-&gt;Click += gcnew System::EventHandler( this, &amp;FolderBrowserDialogExampleForm::folderMenuItem_Click );\n      this-&gt;closeMenuItem-&gt;Text = &quot;Close&quot;;\n      this-&gt;closeMenuItem-&gt;Click += gcnew System::EventHandler( this, &amp;FolderBrowserDialogExampleForm::closeMenuItem_Click );\n      this-&gt;closeMenuItem-&gt;Enabled = false;\n      this-&gt;openFileDialog1-&gt;DefaultExt = &quot;rtf&quot;;\n      this-&gt;openFileDialog1-&gt;Filter = &quot;rtf files (*.rtf)|*.rtf&quot;;\n      \n      // Set the help text description for the FolderBrowserDialog.\n      this-&gt;folderBrowserDialog1-&gt;Description = &quot;Select the directory that you want to use as the default.&quot;;\n      \n      // Do not allow the user to create new files via the FolderBrowserDialog.\n      this-&gt;folderBrowserDialog1-&gt;ShowNewFolderButton = false;\n      \n      // Default to the My Documents folder.\n      this-&gt;folderBrowserDialog1-&gt;RootFolder = Environment::SpecialFolder::Personal;\n      this-&gt;richTextBox1-&gt;AcceptsTab = true;\n      this-&gt;richTextBox1-&gt;Location = System::Drawing::Point( 8, 8 );\n      this-&gt;richTextBox1-&gt;Size = System::Drawing::Size( 280, 344 );\n      this-&gt;richTextBox1-&gt;Anchor = static_cast&lt;AnchorStyles&gt;(AnchorStyles::Top | AnchorStyles::Left | AnchorStyles::Bottom | AnchorStyles::Right);\n      this-&gt;ClientSize = System::Drawing::Size( 296, 360 );\n      this-&gt;Controls-&gt;Add( this-&gt;richTextBox1 );\n      this-&gt;Menu = this-&gt;mainMenu1;\n      this-&gt;Text = &quot;RTF Document Browser&quot;;\n   }\n\n\nprivate:\n\n   // Bring up a dialog to open a file.\n   void openMenuItem_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      \n      // If a file is not opened then set the initial directory to the\n      // FolderBrowserDialog::SelectedPath value.\n      if (  !fileOpened )\n      {\n         openFileDialog1-&gt;InitialDirectory = folderBrowserDialog1-&gt;SelectedPath;\n         openFileDialog1-&gt;FileName = nullptr;\n      }\n\n      \n      // Display the openFile Dialog.\n      System::Windows::Forms::DialogResult result = openFileDialog1-&gt;ShowDialog();\n      \n      // OK button was pressed.\n      if ( result == ::DialogResult::OK )\n      {\n         openFileName = openFileDialog1-&gt;FileName;\n         try\n         {\n            \n            // Output the requested file in richTextBox1.\n            Stream^ s = openFileDialog1-&gt;OpenFile();\n            richTextBox1-&gt;LoadFile( s, RichTextBoxStreamType::RichText );\n            s-&gt;Close();\n            fileOpened = true;\n         }\n         catch ( Exception^ exp ) \n         {\n            MessageBox::Show( String::Concat( &quot;An error occurred while attempting to load the file. The error is: &quot;, System::Environment::NewLine, exp, System::Environment::NewLine ) );\n            fileOpened = false;\n         }\n\n         Invalidate();\n         closeMenuItem-&gt;Enabled = fileOpened;\n      }\n      // Cancel button was pressed.\n      else\n      \n      // Cancel button was pressed.\n      if ( result == ::DialogResult::Cancel )\n      {\n         return;\n      }\n   }\n\n\n   // Close the current file.\n   void closeMenuItem_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      richTextBox1-&gt;Text = &quot;&quot;;\n      fileOpened = false;\n      closeMenuItem-&gt;Enabled = false;\n   }\n\n\n   // Bring up a dialog to chose a folder path in which to open/save a file.\n   void folderMenuItem_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      \n      // Show the FolderBrowserDialog.\n      System::Windows::Forms::DialogResult result = folderBrowserDialog1-&gt;ShowDialog();\n      if ( result == ::DialogResult::OK )\n      {\n         folderName = folderBrowserDialog1-&gt;SelectedPath;\n         if (  !fileOpened )\n         {\n            \n            // No file is opened, bring up openFileDialog in selected path.\n            openFileDialog1-&gt;InitialDirectory = folderName;\n            openFileDialog1-&gt;FileName = nullptr;\n            openMenuItem-&gt;PerformClick();\n         }\n      }\n   }\n\n};\n\n\n// The main entry point for the application.\nint main()\n{\n   Application::Run( gcnew FolderBrowserDialogExampleForm );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.FolderBrowserDialog#1\">// The following example displays an application that provides the ability to \n// open rich text files (rtf) into the RichTextBox. The example demonstrates \n// using the FolderBrowserDialog to set the default directory for opening files.\n// The OpenFileDialog class is used to open the file.\nusing System;\nusing System.Drawing;\nusing System.Windows.Forms;\nusing System.IO;\n\npublic class FolderBrowserDialogExampleForm : System.Windows.Forms.Form\n{\n    private FolderBrowserDialog folderBrowserDialog1;\n    private OpenFileDialog openFileDialog1;\n    \n    private RichTextBox richTextBox1;\n\n    private MainMenu mainMenu1;\n    private MenuItem fileMenuItem, openMenuItem;\n    private MenuItem folderMenuItem, closeMenuItem;\n    \n    private string openFileName, folderName;\n\n    private bool fileOpened = false;\n\n    // The main entry point for the application.\n    [STAThreadAttribute]\n    static void Main() \n    {\n        Application.Run(new FolderBrowserDialogExampleForm());\n    }\n\n\n    // Constructor.\n    public FolderBrowserDialogExampleForm()\n    {\n        this.mainMenu1 = new System.Windows.Forms.MainMenu();\n        this.fileMenuItem = new System.Windows.Forms.MenuItem();\n        this.openMenuItem = new System.Windows.Forms.MenuItem();\n        this.folderMenuItem = new System.Windows.Forms.MenuItem();\n        this.closeMenuItem = new System.Windows.Forms.MenuItem();\n\n        this.openFileDialog1 = new System.Windows.Forms.OpenFileDialog();\n        this.folderBrowserDialog1 = new System.Windows.Forms.FolderBrowserDialog();\n        this.richTextBox1 = new System.Windows.Forms.RichTextBox();\n\n        this.mainMenu1.MenuItems.Add(this.fileMenuItem);\n        this.fileMenuItem.MenuItems.AddRange(\n                            new System.Windows.Forms.MenuItem[] {this.openMenuItem,\n                                                                 this.closeMenuItem,\n                                                                 this.folderMenuItem});\n        this.fileMenuItem.Text = &quot;File&quot;;\n\n        this.openMenuItem.Text = &quot;Open...&quot;;\n        this.openMenuItem.Click += new System.EventHandler(this.openMenuItem_Click);\n\n        this.folderMenuItem.Text = &quot;Select Directory...&quot;;\n        this.folderMenuItem.Click += new System.EventHandler(this.folderMenuItem_Click);\n\n        this.closeMenuItem.Text = &quot;Close&quot;;\n        this.closeMenuItem.Click += new System.EventHandler(this.closeMenuItem_Click);\n        this.closeMenuItem.Enabled = false;\n\n        this.openFileDialog1.DefaultExt = &quot;rtf&quot;;\n        this.openFileDialog1.Filter = &quot;rtf files (*.rtf)|*.rtf&quot;;\n\n        // Set the help text description for the FolderBrowserDialog.\n        this.folderBrowserDialog1.Description = \n            &quot;Select the directory that you want to use as the default.&quot;;\n\n        // Do not allow the user to create new files via the FolderBrowserDialog.\n        this.folderBrowserDialog1.ShowNewFolderButton = false;\n\n        // Default to the My Documents folder.\n        this.folderBrowserDialog1.RootFolder = Environment.SpecialFolder.Personal;\n\n        this.richTextBox1.AcceptsTab = true;\n        this.richTextBox1.Location = new System.Drawing.Point(8, 8);\n        this.richTextBox1.Size = new System.Drawing.Size(280, 344);\n        this.richTextBox1.Anchor = AnchorStyles.Top | AnchorStyles.Left | \n                                   AnchorStyles.Bottom | AnchorStyles.Right;\n\n        this.ClientSize = new System.Drawing.Size(296, 360);\n        this.Controls.Add(this.richTextBox1);\n        this.Menu = this.mainMenu1;\n        this.Text = &quot;RTF Document Browser&quot;;\n    }\n\n    // Bring up a dialog to open a file.\n    private void openMenuItem_Click(object sender, System.EventArgs e)\n    {\n        // If a file is not opened, then set the initial directory to the\n        // FolderBrowserDialog.SelectedPath value.\n        if (!fileOpened) {\n            openFileDialog1.InitialDirectory = folderBrowserDialog1.SelectedPath;\n            openFileDialog1.FileName = null;\n        }\n\n        // Display the openFile dialog.\n        DialogResult result = openFileDialog1.ShowDialog();\n\n        // OK button was pressed.\n        if(result == DialogResult.OK) \n        {\n            openFileName = openFileDialog1.FileName;\n            try\n            {\n                // Output the requested file in richTextBox1.\n                Stream s = openFileDialog1.OpenFile();\n                richTextBox1.LoadFile(s, RichTextBoxStreamType.RichText);\n                s.Close();    \n            \n                fileOpened = true;\n\n            } \n            catch(Exception exp)\n            {\n                MessageBox.Show(&quot;An error occurred while attempting to load the file. The error is:&quot; \n                                + System.Environment.NewLine + exp.ToString() + System.Environment.NewLine);\n                fileOpened = false;\n            }\n            Invalidate();\n\n            closeMenuItem.Enabled = fileOpened;\n        }\n\n        // Cancel button was pressed.\n        else if(result == DialogResult.Cancel) \n        {\n            return;\n        }\n    }\n\n\n    // Close the current file.\n    private void closeMenuItem_Click(object sender, System.EventArgs e)\n    {\n        richTextBox1.Text = &quot;&quot;;\n        fileOpened = false;\n\n        closeMenuItem.Enabled = false;\n    }\n\n\n    // Bring up a dialog to chose a folder path in which to open or save a file.\n    private void folderMenuItem_Click(object sender, System.EventArgs e)\n    {\n        // Show the FolderBrowserDialog.\n        DialogResult result = folderBrowserDialog1.ShowDialog();\n        if( result == DialogResult.OK )\n        {\n            folderName = folderBrowserDialog1.SelectedPath;\n            if(!fileOpened)\n            {\n                // No file is opened, bring up openFileDialog in selected path.\n                openFileDialog1.InitialDirectory = folderName;\n                openFileDialog1.FileName = null;\n                openMenuItem.PerformClick();\n            } \n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.FolderBrowserDialog#1\">&#39; The following example displays an application that provides the ability to \n&#39; open rich text files (rtf) into the RichTextBox. The example demonstrates \n&#39; using the FolderBrowserDialog to set the default directory for opening files.\n&#39; The OpenFileDialog class is used to open the file.\nImports System\nImports System.Drawing\nImports System.Windows.Forms\nImports System.IO\n\nPublic Class FolderBrowserDialogExampleForm \n    Inherits Form\n    \n    Private folderBrowserDialog1 As FolderBrowserDialog\n    Private openFileDialog1 As OpenFileDialog \n    \n    Private richTextBox1 As RichTextBox\n\n    Private mainMenu1 As MainMenu\n    Private fileMenuItem As MenuItem\n    Private WithEvents folderMenuItem As MenuItem, _\n                       closeMenuItem As MenuItem, _\n                       openMenuItem As MenuItem\n    \n    Private openFileName As String, folderName As String\n\n    Private fileOpened As Boolean = False\n\n    Public Sub New()\n        Me.mainMenu1 = New System.Windows.Forms.MainMenu() \n        Me.fileMenuItem = New System.Windows.Forms.MenuItem() \n        Me.openMenuItem = New System.Windows.Forms.MenuItem() \n        Me.folderMenuItem = New System.Windows.Forms.MenuItem() \n        Me.closeMenuItem = New System.Windows.Forms.MenuItem() \n\n        Me.openFileDialog1 = New System.Windows.Forms.OpenFileDialog() \n        Me.folderBrowserDialog1 = New System.Windows.Forms.FolderBrowserDialog() \n        Me.richTextBox1 = New System.Windows.Forms.RichTextBox() \n\n        Me.mainMenu1.MenuItems.Add(Me.fileMenuItem) \n        Me.fileMenuItem.MenuItems.AddRange( _\n                    New System.Windows.Forms.MenuItem() {Me.openMenuItem, _\n                                                         Me.closeMenuItem, _\n                                                         Me.folderMenuItem}) \n        Me.fileMenuItem.Text = &quot;File&quot; \n\n        Me.openMenuItem.Text = &quot;Open...&quot; \n\n        Me.folderMenuItem.Text = &quot;Select Directory...&quot; \n\n        Me.closeMenuItem.Text = &quot;Close&quot; \n        Me.closeMenuItem.Enabled = False \n\n        Me.openFileDialog1.DefaultExt = &quot;rtf&quot; \n        Me.openFileDialog1.Filter = &quot;rtf files (*.rtf)|*.rtf&quot; \n\n        &#39; Set the Help text description for the FolderBrowserDialog.\n        Me.folderBrowserDialog1.Description = _\n            &quot;Select the directory that you want to use As the default.&quot; \n\n        &#39; Do not allow the user to create New files via the FolderBrowserDialog.\n        Me.folderBrowserDialog1.ShowNewFolderButton = False \n\n        &#39; Default to the My Documents folder.\n        Me.folderBrowserDialog1.RootFolder = Environment.SpecialFolder.Personal \n\n        Me.richTextBox1.AcceptsTab = True \n        Me.richTextBox1.Location = New System.Drawing.Point(8, 8) \n        Me.richTextBox1.Size = New System.Drawing.Size(280, 344) \n        Me.richTextBox1.Anchor = AnchorStyles.Top Or AnchorStyles.Left Or _\n                                 AnchorStyles.Bottom Or AnchorStyles.Right \n\n        Me.ClientSize = New System.Drawing.Size(296, 360) \n        Me.Controls.Add(Me.richTextBox1) \n        Me.Menu = Me.mainMenu1 \n        Me.Text = &quot;RTF Document Browser&quot; \n    End Sub\n    \n    &lt;STAThread()&gt; _\n    Shared Sub Main()\n        Application.Run(New FolderBrowserDialogExampleForm())\n    End Sub\n\n    &#39; Bring up a dialog to open a file.\n    Private Sub openMenuItem_Click(sender As object, e As System.EventArgs) _\n        Handles openMenuItem.Click\n        &#39; If a file is not opened, then set the initial directory to the\n        &#39; FolderBrowserDialog.SelectedPath value.\n        If (not fileOpened) Then\n            openFileDialog1.InitialDirectory = folderBrowserDialog1.SelectedPath \n            openFileDialog1.FileName = nothing \n        End If\n\n        &#39; Display the openFile dialog.\n        Dim result As DialogResult = openFileDialog1.ShowDialog() \n\n        &#39; OK button was pressed.\n        If (result = DialogResult.OK) Then\n            openFileName = openFileDialog1.FileName \n            Try\n                &#39; Output the requested file in richTextBox1.\n                Dim s As Stream = openFileDialog1.OpenFile() \n                richTextBox1.LoadFile(s, RichTextBoxStreamType.RichText) \n                s.Close()     \n            \n                fileOpened = True \n\n            Catch exp As Exception\n                MessageBox.Show(&quot;An error occurred while attempting to load the file. The error is:&quot; _\n                                + System.Environment.NewLine + exp.ToString() + System.Environment.NewLine) \n                fileOpened = False \n            End Try\n            Invalidate() \n\n            closeMenuItem.Enabled = fileOpened \n\n        &#39; Cancel button was pressed.\n        ElseIf (result = DialogResult.Cancel) Then\n            return \n        End If\n    End Sub\n\n    &#39; Close the current file.\n    Private Sub closeMenuItem_Click(sender As object, e As System.EventArgs) _\n        Handles closeMenuItem.Click\n        richTextBox1.Text = &quot;&quot; \n        fileOpened = False \n\n        closeMenuItem.Enabled = False \n    End Sub\n\n    &#39; Bring up a dialog to chose a folder path in which to open or save a file.\n    Private Sub folderMenuItem_Click(sender As object, e As System.EventArgs) _\n        Handles folderMenuItem.Click\n        &#39; Show the FolderBrowserDialog.\n        Dim result As DialogResult = folderBrowserDialog1.ShowDialog() \n\n        If ( result = DialogResult.OK ) Then\n            folderName = folderBrowserDialog1.SelectedPath \n            If (not fileOpened) Then\n                &#39; No file is opened, bring up openFileDialog in selected path.\n                openFileDialog1.InitialDirectory = folderName \n                openFileDialog1.FileName = nothing\n                openMenuItem.PerformClick() \n            End If\n        End If\n    End Sub\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FolderBrowserDialog_ShowNewFolderButton\">\r\n    \r\n            <a id=\"System_Windows_Forms_FolderBrowserDialog_ShowNewFolderButton_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowNewFolderButton</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the <strong>New Folder</strong> button appears in the folder browser dialog box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShowNewFolderButton { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <strong>New Folder</strong> button is shown in the dialog box; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When ShowNewFolderButton is <code>true</code>, the <strong>New Folder</strong> button is visible, giving the user a chance to create a folder. When the user clicks the <strong>New Folder</strong> button, a new folder is created and the user is prompted to specify the folder name. The selected node in the tree becomes the parent of the new folder. The actual caption of the <strong>New Folder</strong> button can vary depending upon the operating system  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Setting ShowNewFolderButton to <code>false</code> does not work on Windows 2000.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates an application that enables the user to open rich text (.rtf) files within the <a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a> control.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.FolderBrowserDialog#1\">// The following example displays an application that provides the ability to\n// open rich text files (rtf) into the RichTextBox. The example demonstrates\n// using the FolderBrowserDialog to set the default directory for opening files.\n// The OpenFileDialog is used to open the file.\n#using &lt;System.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n\nusing namespace System;\nusing namespace System::Drawing;\nusing namespace System::Windows::Forms;\nusing namespace System::IO;\npublic ref class FolderBrowserDialogExampleForm: public System::Windows::Forms::Form\n{\nprivate:\n   FolderBrowserDialog^ folderBrowserDialog1;\n   OpenFileDialog^ openFileDialog1;\n   RichTextBox^ richTextBox1;\n   MainMenu^ mainMenu1;\n   MenuItem^ fileMenuItem;\n   MenuItem^ openMenuItem;\n   MenuItem^ folderMenuItem;\n   MenuItem^ closeMenuItem;\n   String^ openFileName;\n   String^ folderName;\n   bool fileOpened;\n\npublic:\n\n   // Constructor.\n   FolderBrowserDialogExampleForm()\n   {\n      fileOpened = false;\n      this-&gt;mainMenu1 = gcnew System::Windows::Forms::MainMenu;\n      this-&gt;fileMenuItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;openMenuItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;folderMenuItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;closeMenuItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;openFileDialog1 = gcnew System::Windows::Forms::OpenFileDialog;\n      this-&gt;folderBrowserDialog1 = gcnew System::Windows::Forms::FolderBrowserDialog;\n      this-&gt;richTextBox1 = gcnew System::Windows::Forms::RichTextBox;\n      this-&gt;mainMenu1-&gt;MenuItems-&gt;Add( this-&gt;fileMenuItem );\n      array&lt;System::Windows::Forms::MenuItem^&gt;^temp0 = {this-&gt;openMenuItem,this-&gt;closeMenuItem,this-&gt;folderMenuItem};\n      this-&gt;fileMenuItem-&gt;MenuItems-&gt;AddRange( temp0 );\n      this-&gt;fileMenuItem-&gt;Text = &quot;File&quot;;\n      this-&gt;openMenuItem-&gt;Text = &quot;Open...&quot;;\n      this-&gt;openMenuItem-&gt;Click += gcnew System::EventHandler( this, &amp;FolderBrowserDialogExampleForm::openMenuItem_Click );\n      this-&gt;folderMenuItem-&gt;Text = &quot;Select Directory...&quot;;\n      this-&gt;folderMenuItem-&gt;Click += gcnew System::EventHandler( this, &amp;FolderBrowserDialogExampleForm::folderMenuItem_Click );\n      this-&gt;closeMenuItem-&gt;Text = &quot;Close&quot;;\n      this-&gt;closeMenuItem-&gt;Click += gcnew System::EventHandler( this, &amp;FolderBrowserDialogExampleForm::closeMenuItem_Click );\n      this-&gt;closeMenuItem-&gt;Enabled = false;\n      this-&gt;openFileDialog1-&gt;DefaultExt = &quot;rtf&quot;;\n      this-&gt;openFileDialog1-&gt;Filter = &quot;rtf files (*.rtf)|*.rtf&quot;;\n      \n      // Set the help text description for the FolderBrowserDialog.\n      this-&gt;folderBrowserDialog1-&gt;Description = &quot;Select the directory that you want to use as the default.&quot;;\n      \n      // Do not allow the user to create new files via the FolderBrowserDialog.\n      this-&gt;folderBrowserDialog1-&gt;ShowNewFolderButton = false;\n      \n      // Default to the My Documents folder.\n      this-&gt;folderBrowserDialog1-&gt;RootFolder = Environment::SpecialFolder::Personal;\n      this-&gt;richTextBox1-&gt;AcceptsTab = true;\n      this-&gt;richTextBox1-&gt;Location = System::Drawing::Point( 8, 8 );\n      this-&gt;richTextBox1-&gt;Size = System::Drawing::Size( 280, 344 );\n      this-&gt;richTextBox1-&gt;Anchor = static_cast&lt;AnchorStyles&gt;(AnchorStyles::Top | AnchorStyles::Left | AnchorStyles::Bottom | AnchorStyles::Right);\n      this-&gt;ClientSize = System::Drawing::Size( 296, 360 );\n      this-&gt;Controls-&gt;Add( this-&gt;richTextBox1 );\n      this-&gt;Menu = this-&gt;mainMenu1;\n      this-&gt;Text = &quot;RTF Document Browser&quot;;\n   }\n\n\nprivate:\n\n   // Bring up a dialog to open a file.\n   void openMenuItem_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      \n      // If a file is not opened then set the initial directory to the\n      // FolderBrowserDialog::SelectedPath value.\n      if (  !fileOpened )\n      {\n         openFileDialog1-&gt;InitialDirectory = folderBrowserDialog1-&gt;SelectedPath;\n         openFileDialog1-&gt;FileName = nullptr;\n      }\n\n      \n      // Display the openFile Dialog.\n      System::Windows::Forms::DialogResult result = openFileDialog1-&gt;ShowDialog();\n      \n      // OK button was pressed.\n      if ( result == ::DialogResult::OK )\n      {\n         openFileName = openFileDialog1-&gt;FileName;\n         try\n         {\n            \n            // Output the requested file in richTextBox1.\n            Stream^ s = openFileDialog1-&gt;OpenFile();\n            richTextBox1-&gt;LoadFile( s, RichTextBoxStreamType::RichText );\n            s-&gt;Close();\n            fileOpened = true;\n         }\n         catch ( Exception^ exp ) \n         {\n            MessageBox::Show( String::Concat( &quot;An error occurred while attempting to load the file. The error is: &quot;, System::Environment::NewLine, exp, System::Environment::NewLine ) );\n            fileOpened = false;\n         }\n\n         Invalidate();\n         closeMenuItem-&gt;Enabled = fileOpened;\n      }\n      // Cancel button was pressed.\n      else\n      \n      // Cancel button was pressed.\n      if ( result == ::DialogResult::Cancel )\n      {\n         return;\n      }\n   }\n\n\n   // Close the current file.\n   void closeMenuItem_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      richTextBox1-&gt;Text = &quot;&quot;;\n      fileOpened = false;\n      closeMenuItem-&gt;Enabled = false;\n   }\n\n\n   // Bring up a dialog to chose a folder path in which to open/save a file.\n   void folderMenuItem_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      \n      // Show the FolderBrowserDialog.\n      System::Windows::Forms::DialogResult result = folderBrowserDialog1-&gt;ShowDialog();\n      if ( result == ::DialogResult::OK )\n      {\n         folderName = folderBrowserDialog1-&gt;SelectedPath;\n         if (  !fileOpened )\n         {\n            \n            // No file is opened, bring up openFileDialog in selected path.\n            openFileDialog1-&gt;InitialDirectory = folderName;\n            openFileDialog1-&gt;FileName = nullptr;\n            openMenuItem-&gt;PerformClick();\n         }\n      }\n   }\n\n};\n\n\n// The main entry point for the application.\nint main()\n{\n   Application::Run( gcnew FolderBrowserDialogExampleForm );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.FolderBrowserDialog#1\">// The following example displays an application that provides the ability to \n// open rich text files (rtf) into the RichTextBox. The example demonstrates \n// using the FolderBrowserDialog to set the default directory for opening files.\n// The OpenFileDialog class is used to open the file.\nusing System;\nusing System.Drawing;\nusing System.Windows.Forms;\nusing System.IO;\n\npublic class FolderBrowserDialogExampleForm : System.Windows.Forms.Form\n{\n    private FolderBrowserDialog folderBrowserDialog1;\n    private OpenFileDialog openFileDialog1;\n    \n    private RichTextBox richTextBox1;\n\n    private MainMenu mainMenu1;\n    private MenuItem fileMenuItem, openMenuItem;\n    private MenuItem folderMenuItem, closeMenuItem;\n    \n    private string openFileName, folderName;\n\n    private bool fileOpened = false;\n\n    // The main entry point for the application.\n    [STAThreadAttribute]\n    static void Main() \n    {\n        Application.Run(new FolderBrowserDialogExampleForm());\n    }\n\n\n    // Constructor.\n    public FolderBrowserDialogExampleForm()\n    {\n        this.mainMenu1 = new System.Windows.Forms.MainMenu();\n        this.fileMenuItem = new System.Windows.Forms.MenuItem();\n        this.openMenuItem = new System.Windows.Forms.MenuItem();\n        this.folderMenuItem = new System.Windows.Forms.MenuItem();\n        this.closeMenuItem = new System.Windows.Forms.MenuItem();\n\n        this.openFileDialog1 = new System.Windows.Forms.OpenFileDialog();\n        this.folderBrowserDialog1 = new System.Windows.Forms.FolderBrowserDialog();\n        this.richTextBox1 = new System.Windows.Forms.RichTextBox();\n\n        this.mainMenu1.MenuItems.Add(this.fileMenuItem);\n        this.fileMenuItem.MenuItems.AddRange(\n                            new System.Windows.Forms.MenuItem[] {this.openMenuItem,\n                                                                 this.closeMenuItem,\n                                                                 this.folderMenuItem});\n        this.fileMenuItem.Text = &quot;File&quot;;\n\n        this.openMenuItem.Text = &quot;Open...&quot;;\n        this.openMenuItem.Click += new System.EventHandler(this.openMenuItem_Click);\n\n        this.folderMenuItem.Text = &quot;Select Directory...&quot;;\n        this.folderMenuItem.Click += new System.EventHandler(this.folderMenuItem_Click);\n\n        this.closeMenuItem.Text = &quot;Close&quot;;\n        this.closeMenuItem.Click += new System.EventHandler(this.closeMenuItem_Click);\n        this.closeMenuItem.Enabled = false;\n\n        this.openFileDialog1.DefaultExt = &quot;rtf&quot;;\n        this.openFileDialog1.Filter = &quot;rtf files (*.rtf)|*.rtf&quot;;\n\n        // Set the help text description for the FolderBrowserDialog.\n        this.folderBrowserDialog1.Description = \n            &quot;Select the directory that you want to use as the default.&quot;;\n\n        // Do not allow the user to create new files via the FolderBrowserDialog.\n        this.folderBrowserDialog1.ShowNewFolderButton = false;\n\n        // Default to the My Documents folder.\n        this.folderBrowserDialog1.RootFolder = Environment.SpecialFolder.Personal;\n\n        this.richTextBox1.AcceptsTab = true;\n        this.richTextBox1.Location = new System.Drawing.Point(8, 8);\n        this.richTextBox1.Size = new System.Drawing.Size(280, 344);\n        this.richTextBox1.Anchor = AnchorStyles.Top | AnchorStyles.Left | \n                                   AnchorStyles.Bottom | AnchorStyles.Right;\n\n        this.ClientSize = new System.Drawing.Size(296, 360);\n        this.Controls.Add(this.richTextBox1);\n        this.Menu = this.mainMenu1;\n        this.Text = &quot;RTF Document Browser&quot;;\n    }\n\n    // Bring up a dialog to open a file.\n    private void openMenuItem_Click(object sender, System.EventArgs e)\n    {\n        // If a file is not opened, then set the initial directory to the\n        // FolderBrowserDialog.SelectedPath value.\n        if (!fileOpened) {\n            openFileDialog1.InitialDirectory = folderBrowserDialog1.SelectedPath;\n            openFileDialog1.FileName = null;\n        }\n\n        // Display the openFile dialog.\n        DialogResult result = openFileDialog1.ShowDialog();\n\n        // OK button was pressed.\n        if(result == DialogResult.OK) \n        {\n            openFileName = openFileDialog1.FileName;\n            try\n            {\n                // Output the requested file in richTextBox1.\n                Stream s = openFileDialog1.OpenFile();\n                richTextBox1.LoadFile(s, RichTextBoxStreamType.RichText);\n                s.Close();    \n            \n                fileOpened = true;\n\n            } \n            catch(Exception exp)\n            {\n                MessageBox.Show(&quot;An error occurred while attempting to load the file. The error is:&quot; \n                                + System.Environment.NewLine + exp.ToString() + System.Environment.NewLine);\n                fileOpened = false;\n            }\n            Invalidate();\n\n            closeMenuItem.Enabled = fileOpened;\n        }\n\n        // Cancel button was pressed.\n        else if(result == DialogResult.Cancel) \n        {\n            return;\n        }\n    }\n\n\n    // Close the current file.\n    private void closeMenuItem_Click(object sender, System.EventArgs e)\n    {\n        richTextBox1.Text = &quot;&quot;;\n        fileOpened = false;\n\n        closeMenuItem.Enabled = false;\n    }\n\n\n    // Bring up a dialog to chose a folder path in which to open or save a file.\n    private void folderMenuItem_Click(object sender, System.EventArgs e)\n    {\n        // Show the FolderBrowserDialog.\n        DialogResult result = folderBrowserDialog1.ShowDialog();\n        if( result == DialogResult.OK )\n        {\n            folderName = folderBrowserDialog1.SelectedPath;\n            if(!fileOpened)\n            {\n                // No file is opened, bring up openFileDialog in selected path.\n                openFileDialog1.InitialDirectory = folderName;\n                openFileDialog1.FileName = null;\n                openMenuItem.PerformClick();\n            } \n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.FolderBrowserDialog#1\">&#39; The following example displays an application that provides the ability to \n&#39; open rich text files (rtf) into the RichTextBox. The example demonstrates \n&#39; using the FolderBrowserDialog to set the default directory for opening files.\n&#39; The OpenFileDialog class is used to open the file.\nImports System\nImports System.Drawing\nImports System.Windows.Forms\nImports System.IO\n\nPublic Class FolderBrowserDialogExampleForm \n    Inherits Form\n    \n    Private folderBrowserDialog1 As FolderBrowserDialog\n    Private openFileDialog1 As OpenFileDialog \n    \n    Private richTextBox1 As RichTextBox\n\n    Private mainMenu1 As MainMenu\n    Private fileMenuItem As MenuItem\n    Private WithEvents folderMenuItem As MenuItem, _\n                       closeMenuItem As MenuItem, _\n                       openMenuItem As MenuItem\n    \n    Private openFileName As String, folderName As String\n\n    Private fileOpened As Boolean = False\n\n    Public Sub New()\n        Me.mainMenu1 = New System.Windows.Forms.MainMenu() \n        Me.fileMenuItem = New System.Windows.Forms.MenuItem() \n        Me.openMenuItem = New System.Windows.Forms.MenuItem() \n        Me.folderMenuItem = New System.Windows.Forms.MenuItem() \n        Me.closeMenuItem = New System.Windows.Forms.MenuItem() \n\n        Me.openFileDialog1 = New System.Windows.Forms.OpenFileDialog() \n        Me.folderBrowserDialog1 = New System.Windows.Forms.FolderBrowserDialog() \n        Me.richTextBox1 = New System.Windows.Forms.RichTextBox() \n\n        Me.mainMenu1.MenuItems.Add(Me.fileMenuItem) \n        Me.fileMenuItem.MenuItems.AddRange( _\n                    New System.Windows.Forms.MenuItem() {Me.openMenuItem, _\n                                                         Me.closeMenuItem, _\n                                                         Me.folderMenuItem}) \n        Me.fileMenuItem.Text = &quot;File&quot; \n\n        Me.openMenuItem.Text = &quot;Open...&quot; \n\n        Me.folderMenuItem.Text = &quot;Select Directory...&quot; \n\n        Me.closeMenuItem.Text = &quot;Close&quot; \n        Me.closeMenuItem.Enabled = False \n\n        Me.openFileDialog1.DefaultExt = &quot;rtf&quot; \n        Me.openFileDialog1.Filter = &quot;rtf files (*.rtf)|*.rtf&quot; \n\n        &#39; Set the Help text description for the FolderBrowserDialog.\n        Me.folderBrowserDialog1.Description = _\n            &quot;Select the directory that you want to use As the default.&quot; \n\n        &#39; Do not allow the user to create New files via the FolderBrowserDialog.\n        Me.folderBrowserDialog1.ShowNewFolderButton = False \n\n        &#39; Default to the My Documents folder.\n        Me.folderBrowserDialog1.RootFolder = Environment.SpecialFolder.Personal \n\n        Me.richTextBox1.AcceptsTab = True \n        Me.richTextBox1.Location = New System.Drawing.Point(8, 8) \n        Me.richTextBox1.Size = New System.Drawing.Size(280, 344) \n        Me.richTextBox1.Anchor = AnchorStyles.Top Or AnchorStyles.Left Or _\n                                 AnchorStyles.Bottom Or AnchorStyles.Right \n\n        Me.ClientSize = New System.Drawing.Size(296, 360) \n        Me.Controls.Add(Me.richTextBox1) \n        Me.Menu = Me.mainMenu1 \n        Me.Text = &quot;RTF Document Browser&quot; \n    End Sub\n    \n    &lt;STAThread()&gt; _\n    Shared Sub Main()\n        Application.Run(New FolderBrowserDialogExampleForm())\n    End Sub\n\n    &#39; Bring up a dialog to open a file.\n    Private Sub openMenuItem_Click(sender As object, e As System.EventArgs) _\n        Handles openMenuItem.Click\n        &#39; If a file is not opened, then set the initial directory to the\n        &#39; FolderBrowserDialog.SelectedPath value.\n        If (not fileOpened) Then\n            openFileDialog1.InitialDirectory = folderBrowserDialog1.SelectedPath \n            openFileDialog1.FileName = nothing \n        End If\n\n        &#39; Display the openFile dialog.\n        Dim result As DialogResult = openFileDialog1.ShowDialog() \n\n        &#39; OK button was pressed.\n        If (result = DialogResult.OK) Then\n            openFileName = openFileDialog1.FileName \n            Try\n                &#39; Output the requested file in richTextBox1.\n                Dim s As Stream = openFileDialog1.OpenFile() \n                richTextBox1.LoadFile(s, RichTextBoxStreamType.RichText) \n                s.Close()     \n            \n                fileOpened = True \n\n            Catch exp As Exception\n                MessageBox.Show(&quot;An error occurred while attempting to load the file. The error is:&quot; _\n                                + System.Environment.NewLine + exp.ToString() + System.Environment.NewLine) \n                fileOpened = False \n            End Try\n            Invalidate() \n\n            closeMenuItem.Enabled = fileOpened \n\n        &#39; Cancel button was pressed.\n        ElseIf (result = DialogResult.Cancel) Then\n            return \n        End If\n    End Sub\n\n    &#39; Close the current file.\n    Private Sub closeMenuItem_Click(sender As object, e As System.EventArgs) _\n        Handles closeMenuItem.Click\n        richTextBox1.Text = &quot;&quot; \n        fileOpened = False \n\n        closeMenuItem.Enabled = False \n    End Sub\n\n    &#39; Bring up a dialog to chose a folder path in which to open or save a file.\n    Private Sub folderMenuItem_Click(sender As object, e As System.EventArgs) _\n        Handles folderMenuItem.Click\n        &#39; Show the FolderBrowserDialog.\n        Dim result As DialogResult = folderBrowserDialog1.ShowDialog() \n\n        If ( result = DialogResult.OK ) Then\n            folderName = folderBrowserDialog1.SelectedPath \n            If (not fileOpened) Then\n                &#39; No file is opened, bring up openFileDialog in selected path.\n                openFileDialog1.InitialDirectory = folderName \n                openFileDialog1.FileName = nothing\n                openMenuItem.PerformClick() \n            End If\n        End If\n    End Sub\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FolderBrowserDialog_Reset\">\r\n    \r\n            <a id=\"System_Windows_Forms_FolderBrowserDialog_Reset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Reset()</div>        \r\n          </div>\r\n    \r\n            <p>Resets properties to their default values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Reset ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Resets the <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog#System_Windows_Forms_FolderBrowserDialog_Description_\" data-linktype=\"relative-path\">Description</a>, <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog#System_Windows_Forms_FolderBrowserDialog_ShowNewFolderButton_\" data-linktype=\"relative-path\">ShowNewFolderButton</a>, <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog#System_Windows_Forms_FolderBrowserDialog_SelectedPath_\" data-linktype=\"relative-path\">SelectedPath</a> and <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog#System_Windows_Forms_FolderBrowserDialog_RootFolder_\" data-linktype=\"relative-path\">RootFolder</a> properties to their default values. For a list of default values, see the <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog#System_Windows_Forms_FolderBrowserDialog__ctor_\" data-linktype=\"relative-path\">FolderBrowserDialog</a> constructor.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FolderBrowserDialog_RunDialog_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Windows_Forms_FolderBrowserDialog_RunDialog_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RunDialog(IntPtr)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool RunDialog (IntPtr hWndOwner);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hWndOwner</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FolderBrowserDialog_HelpRequest\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HelpRequest</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user clicks the <strong>Help</strong> button on the dialog box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler HelpRequest;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.FolderBrowserDialog.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.FolderBrowserDialog.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FolderBrowserDialog\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FolderBrowserDialog..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FolderBrowserDialog.Description\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FolderBrowserDialog.HelpRequest\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FolderBrowserDialog.add_HelpRequest\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FolderBrowserDialog.remove_HelpRequest\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FolderBrowserDialog.Reset\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FolderBrowserDialog.RootFolder\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FolderBrowserDialog.RunDialog\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FolderBrowserDialog.SelectedPath\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FolderBrowserDialog.ShowNewFolderButton\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"3f1930b1-3c1b-52ec-94b1-dfb472ef1426\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Prompts the user to select a folder. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.FolderBrowserDialog\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.FolderBrowserDialog.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.FolderBrowserDialog.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.FolderBrowserDialog","System.Windows.Forms.FolderBrowserDialog..ctor","System.Windows.Forms.FolderBrowserDialog.Description","System.Windows.Forms.FolderBrowserDialog.HelpRequest","System.Windows.Forms.FolderBrowserDialog.add_HelpRequest","System.Windows.Forms.FolderBrowserDialog.remove_HelpRequest","System.Windows.Forms.FolderBrowserDialog.Reset","System.Windows.Forms.FolderBrowserDialog.RootFolder","System.Windows.Forms.FolderBrowserDialog.RunDialog","System.Windows.Forms.FolderBrowserDialog.SelectedPath","System.Windows.Forms.FolderBrowserDialog.ShowNewFolderButton"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.FolderBrowserDialog","System::Windows::Forms::FolderBrowserDialog","System.Windows.Forms.FolderBrowserDialog.#ctor","System::Windows::Forms::FolderBrowserDialog::#ctor","System.Windows.Forms.FolderBrowserDialog.Description","System::Windows::Forms::FolderBrowserDialog::Description","System.Windows.Forms.FolderBrowserDialog.HelpRequest","System::Windows::Forms::FolderBrowserDialog::HelpRequest","System.Windows.Forms.FolderBrowserDialog.Reset","System::Windows::Forms::FolderBrowserDialog::Reset","System.Windows.Forms.FolderBrowserDialog.RootFolder","System::Windows::Forms::FolderBrowserDialog::RootFolder","System.Windows.Forms.FolderBrowserDialog.RunDialog","System::Windows::Forms::FolderBrowserDialog::RunDialog","System.Windows.Forms.FolderBrowserDialog.SelectedPath","System::Windows::Forms::FolderBrowserDialog::SelectedPath","System.Windows.Forms.FolderBrowserDialog.ShowNewFolderButton","System::Windows::Forms::FolderBrowserDialog::ShowNewFolderButton"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"3f1930b1-3c1b-52ec-94b1-dfb472ef1426","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/FolderBrowserDialog.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"FolderBrowserDialog class | Microsoft Docs","_op_ogTitle":"FolderBrowserDialog class","description":"Prompts the user to select a folder. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.FolderBrowserDialog","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.folderbrowserdialog","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.folderbrowserdialog","fileRelativePath":"System.Windows.Forms.FolderBrowserDialog.html"},"themesRelativePathToOutputRoot":"_themes/"}