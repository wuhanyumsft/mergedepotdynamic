{"content":"    \r\n    <h1 id=\"System_Xml_Serialization_UnreferencedObjectEventArgs\">\r\n      <span class=\"lang-csharp\">UnreferencedObjectEventArgs</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides data for the known, but unreferenced, object found in an encoded SOAP XML stream during deserialization.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class UnreferencedObjectEventArgs : EventArgs</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">System.EventArgs</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">UnreferencedObjectEventArgs</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>For more information about the UnreferencedObjectEventArgs class, see the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_UnreferencedObject\" data-linktype=\"relative-path\">UnreferencedObject</a> event of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a>.  </p>\n<p> The <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_UnreferencedObject\" data-linktype=\"relative-path\">UnreferencedObject</a> event occurs only when you call the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_Deserialize_\" data-linktype=\"relative-path\">Deserialize</a> method.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Events%20Overview%20(Windows%20Forms).md\" data-linktype=\"relative-path\">Events Overview</a></p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_UnreferencedObjectEventArgs__ctor_System_Object_System_String_\" data-linktype=\"self-bookmark\">UnreferencedObjectEventArgs(Object,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.unreferencedobjecteventargs\" data-linktype=\"relative-path\">UnreferencedObjectEventArgs</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_UnreferencedObjectEventArgs_UnreferencedId\" data-linktype=\"self-bookmark\">UnreferencedId</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the ID of the object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_UnreferencedObjectEventArgs_UnreferencedObject\" data-linktype=\"self-bookmark\">UnreferencedObject</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the deserialized, but unreferenced, object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_UnreferencedObjectEventArgs__ctor_System_Object_System_String_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_UnreferencedObjectEventArgs__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UnreferencedObjectEventArgs(Object,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.unreferencedobjecteventargs\" data-linktype=\"relative-path\">UnreferencedObjectEventArgs</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public UnreferencedObjectEventArgs (object o, string id);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>o</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The unreferenced object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>id</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A unique string used to identify the unreferenced object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example adds an <a class=\"xref\" href=\"system.xml.serialization.unreferencedobjecteventhandler\" data-linktype=\"relative-path\">UnreferencedObjectEventHandler</a> to an <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a>. The event is handled by the <code>Serializer_UnreferencedObject</code> method. To run the example, cut and paste the following XML into a file named UnrefObj.xml.  </p>\n<pre><code>&lt;wrapper&gt;  \n  &lt;Group xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; id=&quot;id1&quot; n1:GroupName=&quot;.NET&quot; xmlns:n1=&quot;http://www.cpandl.com&quot;&gt;  \n   &lt;/Group&gt;  \n&lt;Vehicle id=&quot;id2&quot; n1:type=&quot;Vehicle&quot; xmlns:n1=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;  \n    &lt;licenseNumber xmlns:q1=&quot;http://www.w3.org/2001/XMLSchema&quot; n1:type=&quot;q1:string&quot;&gt;ABCD&lt;/licenseNumber&gt;  \n  &lt;/Vehicle&gt;  \n&lt;Vehicle id=&quot;id3&quot; n1:type=&quot;Vehicle&quot; xmlns:n1=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;  \n    &lt;licenseNumber xmlns:q1=&quot;http://www.w3.org/2001/XMLSchema&quot; n1:type=&quot;q1:string&quot;&gt;1234&lt;/licenseNumber&gt;  \n  &lt;/Vehicle&gt;  \n&lt;/wrapper&gt;  \n</code></pre><pre><code class=\"lang-cs\" name=\"UnreferencedObject Event Example#1\">using System;\nusing System.IO;\nusing System.Text;\nusing System.Xml;\nusing System.Xml.Serialization;\nusing System.Xml.Schema;\n\n// You must use the SoapIncludeAttribute to inform the XmlSerializer\n// that the Vehicle type should be recognized when deserializing.\n[SoapInclude(typeof(Vehicle))]\npublic class Group\n{\n   public string GroupName;\n   public Vehicle GroupVehicle;\n}\n [SoapInclude(typeof(Vehicle))]\npublic class Vehicle\n{\n   public string licenseNumber;\n}\n\npublic class Run\n{\n   public static void Main()\n   {\n      Run test = new Run();\n      test.DeserializeObject(&quot;UnrefObj.xml&quot;);\n   }\n   \n   public void DeserializeObject(string filename)\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlTypeMapping myMapping = \n      (new SoapReflectionImporter().ImportTypeMapping(\n      typeof(Group)));\n      XmlSerializer mySerializer =  \n      new XmlSerializer(myMapping);\n \n      mySerializer.UnreferencedObject += \n      new UnreferencedObjectEventHandler\n      (Serializer_UnreferencedObject);\n\n      // Reading the file requires an  XmlTextReader.\n      XmlTextReader reader= \n      new XmlTextReader(filename);\n      reader.ReadStartElement();\n\n      // Deserialize and cast the object.\n      Group myGroup; \n      myGroup = (Group) mySerializer.Deserialize(reader);\n      reader.ReadEndElement();\n      reader.Close();\n   }\n\n   private void Serializer_UnreferencedObject\n   (object sender, UnreferencedObjectEventArgs e){\n      Console.WriteLine(&quot;UnreferencedObject:&quot;);\n      Console.WriteLine(&quot;ID: &quot; + e.UnreferencedId);\n      Console.WriteLine(&quot;UnreferencedObject: &quot; + e.UnreferencedObject);\n      Vehicle myVehicle = (Vehicle) e.UnreferencedObject;\n      Console.WriteLine(&quot;License: &quot; + myVehicle.licenseNumber);\n   }\n}\n\n// The file named &quot;UnrefObj.xml&quot; should contain this XML:\n\n// &lt;wrapper&gt;\n\n//  &lt;Group xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; \n//xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; id=&quot;id1&quot; \n//n1:GroupName=&quot;.NET&quot; xmlns:n1=&quot;http://www.cpandl.com&quot;&gt;\n//   &lt;/Group&gt;\n\n//&lt;Vehicle id=&quot;id2&quot; n1:type=&quot;Vehicle&quot; \n//xmlns:n1=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;\n//   &lt;licenseNumber xmlns:q1=&quot;http://www.w3.org/2001/XMLSchema&quot; \n//n1:type=&quot;q1:string&quot;&gt;ABCD&lt;/licenseNumber&gt;\n//   &lt;/Vehicle&gt;\n\n//&lt;Vehicle id=&quot;id3&quot; n1:type=&quot;Vehicle&quot; \n//xmlns:n1=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;\n//    &lt;licenseNumber xmlns:q1=&quot;http://www.w3.org/2001/XMLSchema&quot; \n//n1:type=&quot;q1:string&quot;&gt;1234&lt;/licenseNumber&gt;\n//  &lt;/Vehicle&gt;\n\n//&lt;/wrapper&gt;\n</code></pre><pre><code class=\"lang-cpp\" name=\"UnreferencedObject Event Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Text;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\nusing namespace System::Xml::Schema;\n\nref class Vehicle;\n\n[SoapInclude(Vehicle::typeid)]\npublic ref class Vehicle\n{\npublic:\n   String^ licenseNumber;\n};\n\n\n// You must use the SoapIncludeAttribute to inform the XmlSerializer\n// that the Vehicle type should be recognized when deserializing.\n\n[SoapInclude(Vehicle::typeid)]\npublic ref class Group\n{\npublic:\n   String^ GroupName;\n   Vehicle^ GroupVehicle;\n};\n\npublic ref class Run\n{\npublic:\n   void DeserializeObject( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlTypeMapping^ myMapping = ((gcnew SoapReflectionImporter)-&gt;ImportTypeMapping( Group::typeid ));\n      XmlSerializer^ mySerializer = gcnew XmlSerializer( myMapping );\n      mySerializer-&gt;UnreferencedObject += gcnew UnreferencedObjectEventHandler( this, &amp;Run::Serializer_UnreferencedObject );\n      \n      // Reading the file requires an  XmlTextReader.\n      XmlTextReader^ reader = gcnew XmlTextReader( filename );\n      reader-&gt;ReadStartElement();\n      \n      // Deserialize and cast the object.\n      Group^ myGroup;\n      myGroup = dynamic_cast&lt;Group^&gt;(mySerializer-&gt;Deserialize( reader ));\n      reader-&gt;ReadEndElement();\n      reader-&gt;Close();\n   }\n\nprivate:\n   void Serializer_UnreferencedObject( Object^ /*sender*/, UnreferencedObjectEventArgs^ e )\n   {\n      Console::WriteLine( &quot;UnreferencedObject:&quot; );\n      Console::WriteLine( &quot;ID: {0}&quot;, e-&gt;UnreferencedId );\n      Console::WriteLine( &quot;UnreferencedObject: {0}&quot;, e-&gt;UnreferencedObject );\n      Vehicle^ myVehicle = dynamic_cast&lt;Vehicle^&gt;(e-&gt;UnreferencedObject);\n      Console::WriteLine( &quot;License: {0}&quot;, myVehicle-&gt;licenseNumber );\n   }\n};\n\nint main()\n{\n   Run^ test = gcnew Run;\n   test-&gt;DeserializeObject( &quot;UnrefObj.xml&quot; );\n}\n\n// The file named S&quot;UnrefObj.xml&quot; should contain this XML:\n// &lt;wrapper&gt;\n//  &lt;Group xmlns:xsi=S&quot;http://www.w3.org/2001/XMLSchema-instance&quot; \n//xmlns:xsd=S&quot;http://www.w3.org/2001/XMLSchema&quot; id=S&quot;id1&quot; \n//n1:GroupName=S&quot;.NET&quot; xmlns:n1=S&quot;http://www.cpandl.com&quot;&gt;\n//   &lt;/Group&gt;\n//&lt;Vehicle id=S&quot;id2&quot; n1:type=S&quot;Vehicle&quot; \n//xmlns:n1=S&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;\n//   &lt;licenseNumber xmlns:q1=S&quot;http://www.w3.org/2001/XMLSchema&quot; \n//n1:type=S&quot;q1:String*&quot;&gt;ABCD&lt;/licenseNumber&gt;\n//   &lt;/Vehicle&gt;\n//&lt;Vehicle id=S&quot;id3&quot; n1:type=S&quot;Vehicle&quot; \n//xmlns:n1=S&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;\n//    &lt;licenseNumber xmlns:q1=S&quot;http://www.w3.org/2001/XMLSchema&quot; \n//n1:type=S&quot;q1:String*&quot;&gt;1234&lt;/licenseNumber&gt;\n//  &lt;/Vehicle&gt;\n//&lt;/wrapper&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"UnreferencedObject Event Example#1\">Imports System\nImports System.IO\nImports System.Text\nImports System.Xml\nImports System.Xml.Serialization\nImports System.Xml.Schema\n\n&#39; You must use the SoapIncludeAttribute to inform the XmlSerializer\n&#39; that the Vehicle type should be recognized when deserializing.\n&lt;SoapInclude(GetType(Vehicle))&gt; _\nPublic Class Group\n    Public GroupName As String \n   public GroupVehicle As Vehicle \nEnd Class\n\nPublic Class Vehicle\n   Public licenseNumber As String \nEnd Class\n\n \nPublic Class Run\n   Shared Sub Main()\n      Dim test As Run = new Run()\n      test.DeserializeObject(&quot;UnrefObj.xml&quot;)\n   End Sub\n   \n   Public Sub DeserializeObject(filename As String)\n      &#39; Create an instance of the XmlSerializer class.\n      Dim myMapping As XmlTypeMapping = _\n      (new SoapReflectionImporter().ImportTypeMapping _\n      (GetType(Group)))\n      Dim mySerializer As XmlSerializer =  _\n      new XmlSerializer(myMapping)\n\n      AddHandler mySerializer.UnreferencedObject, _\n      AddressOf Serializer_UnreferencedObject\n\n      &#39; Reading the file requires an  XmlTextReader.\n      Dim reader As XmlTextReader = _\n      new XmlTextReader(filename)\n      reader.ReadStartElement()\n\n      &#39; Deserialize and cast the object.\n      Dim myGroup As Group  \n      myGroup = CType( mySerializer.Deserialize(reader), Group)\n      reader.ReadEndElement()\n      reader.Close()\n   End Sub\n   \n   Private Sub Serializer_UnreferencedObject _\n   (sender As object , e As UnreferencedObjectEventArgs)\n      Console.WriteLine(&quot;UnreferencedObject:&quot;)\n      Console.WriteLine(&quot;ID: &quot; + e.UnreferencedId)\n      Console.WriteLine(&quot;UnreferencedObject: &quot; + e.UnreferencedObject)\n      Dim myVehicle As Vehicle = CType(e.UnreferencedObject, Vehicle)\n      Console.WriteLine(&quot;License: &quot; + myVehicle.licenseNumber)\n       End Sub\n End Class\n \n&#39; The XML document should contain this information:\n\n&#39;&lt;wrapper&gt;\n\n&#39;  &lt;Group xmlns:xsi=&quot;http:&#39;www.w3.org/2001/XMLSchema-instance&quot; \n&#39;xmlns:xsd=&quot;http:&#39;www.w3.org/2001/XMLSchema&quot; id=&quot;id1&quot; \n&#39;n1:GroupName=&quot;.NET&quot; xmlns:n1=&quot;http:&#39;www.cpandl.com&quot;&gt;\n&#39;   &lt;/Group&gt;\n\n&#39;&lt;Vehicle id=&quot;id2&quot; n1:type=&quot;Vehicle&quot; \n&#39;xmlns:n1=&quot;http:&#39;www.w3.org/2001/XMLSchema-instance&quot;&gt;\n&#39;    &lt;licenseNumber xmlns:q1=&quot;http:&#39;www.w3.org/2001/XMLSchema&quot; \n&#39;n1:type=&quot;q1:string&quot;&gt;ABCD&lt;/licenseNumber&gt;\n&#39;  &lt;/Vehicle&gt;\n\n&#39;&lt;Vehicle id=&quot;id3&quot; n1:type=&quot;Vehicle&quot; \n&#39;xmlns:n1=&quot;http:&#39;www.w3.org/2001/XMLSchema-instance&quot;&gt;\n&#39;    &lt;licenseNumber xmlns:q1=&quot;http:&#39;www.w3.org/2001/XMLSchema&quot; \n&#39;n1:type=&quot;q1:string&quot;&gt;1234&lt;/licenseNumber&gt;\n&#39;  &lt;/Vehicle&gt;\n\n&#39;&lt;/wrapper&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_UnreferencedObjectEventArgs_UnreferencedId\">\r\n    \r\n            <a id=\"System_Xml_Serialization_UnreferencedObjectEventArgs_UnreferencedId_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UnreferencedId</div>        \r\n          </div>\r\n    \r\n            <p>Gets the ID of the object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string UnreferencedId { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The ID of the object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the UnreferencedId property when you need to know when more than one object raises the event. The property allows you to distinguish between multiple instances of unreferenced objects.  </p>\n<p> For more information about the UnreferencedId property, see the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_UnreferencedObject\" data-linktype=\"relative-path\">UnreferencedObject</a> event.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example adds an <a class=\"xref\" href=\"system.xml.serialization.unreferencedobjecteventhandler\" data-linktype=\"relative-path\">UnreferencedObjectEventHandler</a> to an <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a>. The event is handled by the <code>Serializer_UnreferencedObject</code> method. To run the example, cut and paste the following XML into a file named UnrefObj.xml.  </p>\n<pre><code>&lt;wrapper&gt;  \n  &lt;Group xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; id=&quot;id1&quot; n1:GroupName=&quot;.NET&quot; xmlns:n1=&quot;http://www.cpandl.com&quot;&gt;  \n   &lt;/Group&gt;  \n&lt;Vehicle id=&quot;id2&quot; n1:type=&quot;Vehicle&quot; xmlns:n1=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;  \n    &lt;licenseNumber xmlns:q1=&quot;http://www.w3.org/2001/XMLSchema&quot; n1:type=&quot;q1:string&quot;&gt;ABCD&lt;/licenseNumber&gt;  \n  &lt;/Vehicle&gt;  \n&lt;Vehicle id=&quot;id3&quot; n1:type=&quot;Vehicle&quot; xmlns:n1=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;  \n    &lt;licenseNumber xmlns:q1=&quot;http://www.w3.org/2001/XMLSchema&quot; n1:type=&quot;q1:string&quot;&gt;1234&lt;/licenseNumber&gt;  \n  &lt;/Vehicle&gt;  \n&lt;/wrapper&gt;  \n</code></pre><pre><code class=\"lang-cs\" name=\"UnreferencedObject Event Example#1\">using System;\nusing System.IO;\nusing System.Text;\nusing System.Xml;\nusing System.Xml.Serialization;\nusing System.Xml.Schema;\n\n// You must use the SoapIncludeAttribute to inform the XmlSerializer\n// that the Vehicle type should be recognized when deserializing.\n[SoapInclude(typeof(Vehicle))]\npublic class Group\n{\n   public string GroupName;\n   public Vehicle GroupVehicle;\n}\n [SoapInclude(typeof(Vehicle))]\npublic class Vehicle\n{\n   public string licenseNumber;\n}\n\npublic class Run\n{\n   public static void Main()\n   {\n      Run test = new Run();\n      test.DeserializeObject(&quot;UnrefObj.xml&quot;);\n   }\n   \n   public void DeserializeObject(string filename)\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlTypeMapping myMapping = \n      (new SoapReflectionImporter().ImportTypeMapping(\n      typeof(Group)));\n      XmlSerializer mySerializer =  \n      new XmlSerializer(myMapping);\n \n      mySerializer.UnreferencedObject += \n      new UnreferencedObjectEventHandler\n      (Serializer_UnreferencedObject);\n\n      // Reading the file requires an  XmlTextReader.\n      XmlTextReader reader= \n      new XmlTextReader(filename);\n      reader.ReadStartElement();\n\n      // Deserialize and cast the object.\n      Group myGroup; \n      myGroup = (Group) mySerializer.Deserialize(reader);\n      reader.ReadEndElement();\n      reader.Close();\n   }\n\n   private void Serializer_UnreferencedObject\n   (object sender, UnreferencedObjectEventArgs e){\n      Console.WriteLine(&quot;UnreferencedObject:&quot;);\n      Console.WriteLine(&quot;ID: &quot; + e.UnreferencedId);\n      Console.WriteLine(&quot;UnreferencedObject: &quot; + e.UnreferencedObject);\n      Vehicle myVehicle = (Vehicle) e.UnreferencedObject;\n      Console.WriteLine(&quot;License: &quot; + myVehicle.licenseNumber);\n   }\n}\n\n// The file named &quot;UnrefObj.xml&quot; should contain this XML:\n\n// &lt;wrapper&gt;\n\n//  &lt;Group xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; \n//xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; id=&quot;id1&quot; \n//n1:GroupName=&quot;.NET&quot; xmlns:n1=&quot;http://www.cpandl.com&quot;&gt;\n//   &lt;/Group&gt;\n\n//&lt;Vehicle id=&quot;id2&quot; n1:type=&quot;Vehicle&quot; \n//xmlns:n1=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;\n//   &lt;licenseNumber xmlns:q1=&quot;http://www.w3.org/2001/XMLSchema&quot; \n//n1:type=&quot;q1:string&quot;&gt;ABCD&lt;/licenseNumber&gt;\n//   &lt;/Vehicle&gt;\n\n//&lt;Vehicle id=&quot;id3&quot; n1:type=&quot;Vehicle&quot; \n//xmlns:n1=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;\n//    &lt;licenseNumber xmlns:q1=&quot;http://www.w3.org/2001/XMLSchema&quot; \n//n1:type=&quot;q1:string&quot;&gt;1234&lt;/licenseNumber&gt;\n//  &lt;/Vehicle&gt;\n\n//&lt;/wrapper&gt;\n</code></pre><pre><code class=\"lang-cpp\" name=\"UnreferencedObject Event Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Text;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\nusing namespace System::Xml::Schema;\n\nref class Vehicle;\n\n[SoapInclude(Vehicle::typeid)]\npublic ref class Vehicle\n{\npublic:\n   String^ licenseNumber;\n};\n\n\n// You must use the SoapIncludeAttribute to inform the XmlSerializer\n// that the Vehicle type should be recognized when deserializing.\n\n[SoapInclude(Vehicle::typeid)]\npublic ref class Group\n{\npublic:\n   String^ GroupName;\n   Vehicle^ GroupVehicle;\n};\n\npublic ref class Run\n{\npublic:\n   void DeserializeObject( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlTypeMapping^ myMapping = ((gcnew SoapReflectionImporter)-&gt;ImportTypeMapping( Group::typeid ));\n      XmlSerializer^ mySerializer = gcnew XmlSerializer( myMapping );\n      mySerializer-&gt;UnreferencedObject += gcnew UnreferencedObjectEventHandler( this, &amp;Run::Serializer_UnreferencedObject );\n      \n      // Reading the file requires an  XmlTextReader.\n      XmlTextReader^ reader = gcnew XmlTextReader( filename );\n      reader-&gt;ReadStartElement();\n      \n      // Deserialize and cast the object.\n      Group^ myGroup;\n      myGroup = dynamic_cast&lt;Group^&gt;(mySerializer-&gt;Deserialize( reader ));\n      reader-&gt;ReadEndElement();\n      reader-&gt;Close();\n   }\n\nprivate:\n   void Serializer_UnreferencedObject( Object^ /*sender*/, UnreferencedObjectEventArgs^ e )\n   {\n      Console::WriteLine( &quot;UnreferencedObject:&quot; );\n      Console::WriteLine( &quot;ID: {0}&quot;, e-&gt;UnreferencedId );\n      Console::WriteLine( &quot;UnreferencedObject: {0}&quot;, e-&gt;UnreferencedObject );\n      Vehicle^ myVehicle = dynamic_cast&lt;Vehicle^&gt;(e-&gt;UnreferencedObject);\n      Console::WriteLine( &quot;License: {0}&quot;, myVehicle-&gt;licenseNumber );\n   }\n};\n\nint main()\n{\n   Run^ test = gcnew Run;\n   test-&gt;DeserializeObject( &quot;UnrefObj.xml&quot; );\n}\n\n// The file named S&quot;UnrefObj.xml&quot; should contain this XML:\n// &lt;wrapper&gt;\n//  &lt;Group xmlns:xsi=S&quot;http://www.w3.org/2001/XMLSchema-instance&quot; \n//xmlns:xsd=S&quot;http://www.w3.org/2001/XMLSchema&quot; id=S&quot;id1&quot; \n//n1:GroupName=S&quot;.NET&quot; xmlns:n1=S&quot;http://www.cpandl.com&quot;&gt;\n//   &lt;/Group&gt;\n//&lt;Vehicle id=S&quot;id2&quot; n1:type=S&quot;Vehicle&quot; \n//xmlns:n1=S&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;\n//   &lt;licenseNumber xmlns:q1=S&quot;http://www.w3.org/2001/XMLSchema&quot; \n//n1:type=S&quot;q1:String*&quot;&gt;ABCD&lt;/licenseNumber&gt;\n//   &lt;/Vehicle&gt;\n//&lt;Vehicle id=S&quot;id3&quot; n1:type=S&quot;Vehicle&quot; \n//xmlns:n1=S&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;\n//    &lt;licenseNumber xmlns:q1=S&quot;http://www.w3.org/2001/XMLSchema&quot; \n//n1:type=S&quot;q1:String*&quot;&gt;1234&lt;/licenseNumber&gt;\n//  &lt;/Vehicle&gt;\n//&lt;/wrapper&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"UnreferencedObject Event Example#1\">Imports System\nImports System.IO\nImports System.Text\nImports System.Xml\nImports System.Xml.Serialization\nImports System.Xml.Schema\n\n&#39; You must use the SoapIncludeAttribute to inform the XmlSerializer\n&#39; that the Vehicle type should be recognized when deserializing.\n&lt;SoapInclude(GetType(Vehicle))&gt; _\nPublic Class Group\n    Public GroupName As String \n   public GroupVehicle As Vehicle \nEnd Class\n\nPublic Class Vehicle\n   Public licenseNumber As String \nEnd Class\n\n \nPublic Class Run\n   Shared Sub Main()\n      Dim test As Run = new Run()\n      test.DeserializeObject(&quot;UnrefObj.xml&quot;)\n   End Sub\n   \n   Public Sub DeserializeObject(filename As String)\n      &#39; Create an instance of the XmlSerializer class.\n      Dim myMapping As XmlTypeMapping = _\n      (new SoapReflectionImporter().ImportTypeMapping _\n      (GetType(Group)))\n      Dim mySerializer As XmlSerializer =  _\n      new XmlSerializer(myMapping)\n\n      AddHandler mySerializer.UnreferencedObject, _\n      AddressOf Serializer_UnreferencedObject\n\n      &#39; Reading the file requires an  XmlTextReader.\n      Dim reader As XmlTextReader = _\n      new XmlTextReader(filename)\n      reader.ReadStartElement()\n\n      &#39; Deserialize and cast the object.\n      Dim myGroup As Group  \n      myGroup = CType( mySerializer.Deserialize(reader), Group)\n      reader.ReadEndElement()\n      reader.Close()\n   End Sub\n   \n   Private Sub Serializer_UnreferencedObject _\n   (sender As object , e As UnreferencedObjectEventArgs)\n      Console.WriteLine(&quot;UnreferencedObject:&quot;)\n      Console.WriteLine(&quot;ID: &quot; + e.UnreferencedId)\n      Console.WriteLine(&quot;UnreferencedObject: &quot; + e.UnreferencedObject)\n      Dim myVehicle As Vehicle = CType(e.UnreferencedObject, Vehicle)\n      Console.WriteLine(&quot;License: &quot; + myVehicle.licenseNumber)\n       End Sub\n End Class\n \n&#39; The XML document should contain this information:\n\n&#39;&lt;wrapper&gt;\n\n&#39;  &lt;Group xmlns:xsi=&quot;http:&#39;www.w3.org/2001/XMLSchema-instance&quot; \n&#39;xmlns:xsd=&quot;http:&#39;www.w3.org/2001/XMLSchema&quot; id=&quot;id1&quot; \n&#39;n1:GroupName=&quot;.NET&quot; xmlns:n1=&quot;http:&#39;www.cpandl.com&quot;&gt;\n&#39;   &lt;/Group&gt;\n\n&#39;&lt;Vehicle id=&quot;id2&quot; n1:type=&quot;Vehicle&quot; \n&#39;xmlns:n1=&quot;http:&#39;www.w3.org/2001/XMLSchema-instance&quot;&gt;\n&#39;    &lt;licenseNumber xmlns:q1=&quot;http:&#39;www.w3.org/2001/XMLSchema&quot; \n&#39;n1:type=&quot;q1:string&quot;&gt;ABCD&lt;/licenseNumber&gt;\n&#39;  &lt;/Vehicle&gt;\n\n&#39;&lt;Vehicle id=&quot;id3&quot; n1:type=&quot;Vehicle&quot; \n&#39;xmlns:n1=&quot;http:&#39;www.w3.org/2001/XMLSchema-instance&quot;&gt;\n&#39;    &lt;licenseNumber xmlns:q1=&quot;http:&#39;www.w3.org/2001/XMLSchema&quot; \n&#39;n1:type=&quot;q1:string&quot;&gt;1234&lt;/licenseNumber&gt;\n&#39;  &lt;/Vehicle&gt;\n\n&#39;&lt;/wrapper&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_UnreferencedObjectEventArgs_UnreferencedObject\">\r\n    \r\n            <a id=\"System_Xml_Serialization_UnreferencedObjectEventArgs_UnreferencedObject_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UnreferencedObject</div>        \r\n          </div>\r\n    \r\n            <p>Gets the deserialized, but unreferenced, object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object UnreferencedObject { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The deserialized, but unreferenced, object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The UnreferencedObject can be cast to the known type if examining its properties is required.  </p>\n<p> See the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_UnreferencedObject\" data-linktype=\"relative-path\">UnreferencedObject</a> event for more information about the UnreferencedObject property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example adds an <a class=\"xref\" href=\"system.xml.serialization.unreferencedobjecteventhandler\" data-linktype=\"relative-path\">UnreferencedObjectEventHandler</a> to an <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a>. The event is handled by the <code>Serializer_UnreferencedObject</code> method. To run the example, cut and paste the following XML into a file named UnrefObj.xml.  </p>\n<pre><code>&lt;wrapper&gt;  \n  &lt;Group xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; id=&quot;id1&quot; n1:GroupName=&quot;.NET&quot; xmlns:n1=&quot;http://www.cpandl.com&quot;&gt;  \n   &lt;/Group&gt;  \n&lt;Vehicle id=&quot;id2&quot; n1:type=&quot;Vehicle&quot; xmlns:n1=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;  \n    &lt;licenseNumber xmlns:q1=&quot;http://www.w3.org/2001/XMLSchema&quot; n1:type=&quot;q1:string&quot;&gt;ABCD&lt;/licenseNumber&gt;  \n  &lt;/Vehicle&gt;  \n&lt;Vehicle id=&quot;id3&quot; n1:type=&quot;Vehicle&quot; xmlns:n1=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;  \n    &lt;licenseNumber xmlns:q1=&quot;http://www.w3.org/2001/XMLSchema&quot; n1:type=&quot;q1:string&quot;&gt;1234&lt;/licenseNumber&gt;  \n  &lt;/Vehicle&gt;  \n&lt;/wrapper&gt;  \n</code></pre><pre><code class=\"lang-cs\" name=\"UnreferencedObject Event Example#1\">using System;\nusing System.IO;\nusing System.Text;\nusing System.Xml;\nusing System.Xml.Serialization;\nusing System.Xml.Schema;\n\n// You must use the SoapIncludeAttribute to inform the XmlSerializer\n// that the Vehicle type should be recognized when deserializing.\n[SoapInclude(typeof(Vehicle))]\npublic class Group\n{\n   public string GroupName;\n   public Vehicle GroupVehicle;\n}\n [SoapInclude(typeof(Vehicle))]\npublic class Vehicle\n{\n   public string licenseNumber;\n}\n\npublic class Run\n{\n   public static void Main()\n   {\n      Run test = new Run();\n      test.DeserializeObject(&quot;UnrefObj.xml&quot;);\n   }\n   \n   public void DeserializeObject(string filename)\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlTypeMapping myMapping = \n      (new SoapReflectionImporter().ImportTypeMapping(\n      typeof(Group)));\n      XmlSerializer mySerializer =  \n      new XmlSerializer(myMapping);\n \n      mySerializer.UnreferencedObject += \n      new UnreferencedObjectEventHandler\n      (Serializer_UnreferencedObject);\n\n      // Reading the file requires an  XmlTextReader.\n      XmlTextReader reader= \n      new XmlTextReader(filename);\n      reader.ReadStartElement();\n\n      // Deserialize and cast the object.\n      Group myGroup; \n      myGroup = (Group) mySerializer.Deserialize(reader);\n      reader.ReadEndElement();\n      reader.Close();\n   }\n\n   private void Serializer_UnreferencedObject\n   (object sender, UnreferencedObjectEventArgs e){\n      Console.WriteLine(&quot;UnreferencedObject:&quot;);\n      Console.WriteLine(&quot;ID: &quot; + e.UnreferencedId);\n      Console.WriteLine(&quot;UnreferencedObject: &quot; + e.UnreferencedObject);\n      Vehicle myVehicle = (Vehicle) e.UnreferencedObject;\n      Console.WriteLine(&quot;License: &quot; + myVehicle.licenseNumber);\n   }\n}\n\n// The file named &quot;UnrefObj.xml&quot; should contain this XML:\n\n// &lt;wrapper&gt;\n\n//  &lt;Group xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; \n//xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; id=&quot;id1&quot; \n//n1:GroupName=&quot;.NET&quot; xmlns:n1=&quot;http://www.cpandl.com&quot;&gt;\n//   &lt;/Group&gt;\n\n//&lt;Vehicle id=&quot;id2&quot; n1:type=&quot;Vehicle&quot; \n//xmlns:n1=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;\n//   &lt;licenseNumber xmlns:q1=&quot;http://www.w3.org/2001/XMLSchema&quot; \n//n1:type=&quot;q1:string&quot;&gt;ABCD&lt;/licenseNumber&gt;\n//   &lt;/Vehicle&gt;\n\n//&lt;Vehicle id=&quot;id3&quot; n1:type=&quot;Vehicle&quot; \n//xmlns:n1=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;\n//    &lt;licenseNumber xmlns:q1=&quot;http://www.w3.org/2001/XMLSchema&quot; \n//n1:type=&quot;q1:string&quot;&gt;1234&lt;/licenseNumber&gt;\n//  &lt;/Vehicle&gt;\n\n//&lt;/wrapper&gt;\n</code></pre><pre><code class=\"lang-cpp\" name=\"UnreferencedObject Event Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Text;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\nusing namespace System::Xml::Schema;\n\nref class Vehicle;\n\n[SoapInclude(Vehicle::typeid)]\npublic ref class Vehicle\n{\npublic:\n   String^ licenseNumber;\n};\n\n\n// You must use the SoapIncludeAttribute to inform the XmlSerializer\n// that the Vehicle type should be recognized when deserializing.\n\n[SoapInclude(Vehicle::typeid)]\npublic ref class Group\n{\npublic:\n   String^ GroupName;\n   Vehicle^ GroupVehicle;\n};\n\npublic ref class Run\n{\npublic:\n   void DeserializeObject( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlTypeMapping^ myMapping = ((gcnew SoapReflectionImporter)-&gt;ImportTypeMapping( Group::typeid ));\n      XmlSerializer^ mySerializer = gcnew XmlSerializer( myMapping );\n      mySerializer-&gt;UnreferencedObject += gcnew UnreferencedObjectEventHandler( this, &amp;Run::Serializer_UnreferencedObject );\n      \n      // Reading the file requires an  XmlTextReader.\n      XmlTextReader^ reader = gcnew XmlTextReader( filename );\n      reader-&gt;ReadStartElement();\n      \n      // Deserialize and cast the object.\n      Group^ myGroup;\n      myGroup = dynamic_cast&lt;Group^&gt;(mySerializer-&gt;Deserialize( reader ));\n      reader-&gt;ReadEndElement();\n      reader-&gt;Close();\n   }\n\nprivate:\n   void Serializer_UnreferencedObject( Object^ /*sender*/, UnreferencedObjectEventArgs^ e )\n   {\n      Console::WriteLine( &quot;UnreferencedObject:&quot; );\n      Console::WriteLine( &quot;ID: {0}&quot;, e-&gt;UnreferencedId );\n      Console::WriteLine( &quot;UnreferencedObject: {0}&quot;, e-&gt;UnreferencedObject );\n      Vehicle^ myVehicle = dynamic_cast&lt;Vehicle^&gt;(e-&gt;UnreferencedObject);\n      Console::WriteLine( &quot;License: {0}&quot;, myVehicle-&gt;licenseNumber );\n   }\n};\n\nint main()\n{\n   Run^ test = gcnew Run;\n   test-&gt;DeserializeObject( &quot;UnrefObj.xml&quot; );\n}\n\n// The file named S&quot;UnrefObj.xml&quot; should contain this XML:\n// &lt;wrapper&gt;\n//  &lt;Group xmlns:xsi=S&quot;http://www.w3.org/2001/XMLSchema-instance&quot; \n//xmlns:xsd=S&quot;http://www.w3.org/2001/XMLSchema&quot; id=S&quot;id1&quot; \n//n1:GroupName=S&quot;.NET&quot; xmlns:n1=S&quot;http://www.cpandl.com&quot;&gt;\n//   &lt;/Group&gt;\n//&lt;Vehicle id=S&quot;id2&quot; n1:type=S&quot;Vehicle&quot; \n//xmlns:n1=S&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;\n//   &lt;licenseNumber xmlns:q1=S&quot;http://www.w3.org/2001/XMLSchema&quot; \n//n1:type=S&quot;q1:String*&quot;&gt;ABCD&lt;/licenseNumber&gt;\n//   &lt;/Vehicle&gt;\n//&lt;Vehicle id=S&quot;id3&quot; n1:type=S&quot;Vehicle&quot; \n//xmlns:n1=S&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;\n//    &lt;licenseNumber xmlns:q1=S&quot;http://www.w3.org/2001/XMLSchema&quot; \n//n1:type=S&quot;q1:String*&quot;&gt;1234&lt;/licenseNumber&gt;\n//  &lt;/Vehicle&gt;\n//&lt;/wrapper&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"UnreferencedObject Event Example#1\">Imports System\nImports System.IO\nImports System.Text\nImports System.Xml\nImports System.Xml.Serialization\nImports System.Xml.Schema\n\n&#39; You must use the SoapIncludeAttribute to inform the XmlSerializer\n&#39; that the Vehicle type should be recognized when deserializing.\n&lt;SoapInclude(GetType(Vehicle))&gt; _\nPublic Class Group\n    Public GroupName As String \n   public GroupVehicle As Vehicle \nEnd Class\n\nPublic Class Vehicle\n   Public licenseNumber As String \nEnd Class\n\n \nPublic Class Run\n   Shared Sub Main()\n      Dim test As Run = new Run()\n      test.DeserializeObject(&quot;UnrefObj.xml&quot;)\n   End Sub\n   \n   Public Sub DeserializeObject(filename As String)\n      &#39; Create an instance of the XmlSerializer class.\n      Dim myMapping As XmlTypeMapping = _\n      (new SoapReflectionImporter().ImportTypeMapping _\n      (GetType(Group)))\n      Dim mySerializer As XmlSerializer =  _\n      new XmlSerializer(myMapping)\n\n      AddHandler mySerializer.UnreferencedObject, _\n      AddressOf Serializer_UnreferencedObject\n\n      &#39; Reading the file requires an  XmlTextReader.\n      Dim reader As XmlTextReader = _\n      new XmlTextReader(filename)\n      reader.ReadStartElement()\n\n      &#39; Deserialize and cast the object.\n      Dim myGroup As Group  \n      myGroup = CType( mySerializer.Deserialize(reader), Group)\n      reader.ReadEndElement()\n      reader.Close()\n   End Sub\n   \n   Private Sub Serializer_UnreferencedObject _\n   (sender As object , e As UnreferencedObjectEventArgs)\n      Console.WriteLine(&quot;UnreferencedObject:&quot;)\n      Console.WriteLine(&quot;ID: &quot; + e.UnreferencedId)\n      Console.WriteLine(&quot;UnreferencedObject: &quot; + e.UnreferencedObject)\n      Dim myVehicle As Vehicle = CType(e.UnreferencedObject, Vehicle)\n      Console.WriteLine(&quot;License: &quot; + myVehicle.licenseNumber)\n       End Sub\n End Class\n \n&#39; The XML document should contain this information:\n\n&#39;&lt;wrapper&gt;\n\n&#39;  &lt;Group xmlns:xsi=&quot;http:&#39;www.w3.org/2001/XMLSchema-instance&quot; \n&#39;xmlns:xsd=&quot;http:&#39;www.w3.org/2001/XMLSchema&quot; id=&quot;id1&quot; \n&#39;n1:GroupName=&quot;.NET&quot; xmlns:n1=&quot;http:&#39;www.cpandl.com&quot;&gt;\n&#39;   &lt;/Group&gt;\n\n&#39;&lt;Vehicle id=&quot;id2&quot; n1:type=&quot;Vehicle&quot; \n&#39;xmlns:n1=&quot;http:&#39;www.w3.org/2001/XMLSchema-instance&quot;&gt;\n&#39;    &lt;licenseNumber xmlns:q1=&quot;http:&#39;www.w3.org/2001/XMLSchema&quot; \n&#39;n1:type=&quot;q1:string&quot;&gt;ABCD&lt;/licenseNumber&gt;\n&#39;  &lt;/Vehicle&gt;\n\n&#39;&lt;Vehicle id=&quot;id3&quot; n1:type=&quot;Vehicle&quot; \n&#39;xmlns:n1=&quot;http:&#39;www.w3.org/2001/XMLSchema-instance&quot;&gt;\n&#39;    &lt;licenseNumber xmlns:q1=&quot;http:&#39;www.w3.org/2001/XMLSchema&quot; \n&#39;n1:type=&quot;q1:string&quot;&gt;1234&lt;/licenseNumber&gt;\n&#39;  &lt;/Vehicle&gt;\n\n&#39;&lt;/wrapper&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.Serialization.UnreferencedObjectEventArgs.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.Serialization.UnreferencedObjectEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.UnreferencedObjectEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.UnreferencedObjectEventArgs..ctor\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject\">\r\n<meta name=\"APILocation\" content=\"System.Xml.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"37919a0c-9c8a-d94f-3fca-299f3d8904b8\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for the known, but unreferenced, object found in an encoded SOAP XML stream during deserialization.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xml.Serialization/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xml.Serialization.UnreferencedObjectEventArgs\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.Serialization.UnreferencedObjectEventArgs.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.Serialization.UnreferencedObjectEventArgs.yml","open_to_public_contributors":true,"api_name":["System.Xml.Serialization.UnreferencedObjectEventArgs","System.Xml.Serialization.UnreferencedObjectEventArgs..ctor","System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId","System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject"],"api_location":["System.Xml.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xml.Serialization.UnreferencedObjectEventArgs","System::Xml::Serialization::UnreferencedObjectEventArgs","System.Xml.Serialization.UnreferencedObjectEventArgs.#ctor","System::Xml::Serialization::UnreferencedObjectEventArgs::#ctor","System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId","System::Xml::Serialization::UnreferencedObjectEventArgs::UnreferencedId","System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject","System::Xml::Serialization::UnreferencedObjectEventArgs::UnreferencedObject"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"37919a0c-9c8a-d94f-3fca-299f3d8904b8","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xml.Serialization/UnreferencedObjectEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"UnreferencedObjectEventArgs class | Microsoft Docs","_op_ogTitle":"UnreferencedObjectEventArgs class","description":"Provides data for the known, but unreferenced, object found in an encoded SOAP XML stream during deserialization.\n","toc_asset_id":"_splitted/System.Xml.Serialization/toc.json","toc_rel":"_splitted/System.Xml.Serialization/toc.json","source_url":"","ms.assetid":"System.Xml.Serialization.UnreferencedObjectEventArgs","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.serialization.unreferencedobjecteventargs","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.serialization.unreferencedobjecteventargs","fileRelativePath":"System.Xml.Serialization.UnreferencedObjectEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}