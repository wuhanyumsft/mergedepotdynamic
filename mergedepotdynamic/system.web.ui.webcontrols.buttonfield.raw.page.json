{"content":"    \r\n    <h1 id=\"System_Web_UI_WebControls_ButtonField\">\r\n      <span class=\"lang-csharp\">ButtonField</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a field that is displayed as a button in a data-bound control.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class ButtonField : System.Web.UI.WebControls.ButtonFieldBase</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield\" data-linktype=\"relative-path\">DataControlField</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfieldbase\" data-linktype=\"relative-path\">System.Web.UI.WebControls.ButtonFieldBase</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ButtonField</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfieldbase#System_Web_UI_WebControls_ButtonFieldBase_ButtonType\" data-linktype=\"relative-path\">ButtonType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfieldbase#System_Web_UI_WebControls_ButtonFieldBase_CausesValidation\" data-linktype=\"relative-path\">CausesValidation</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfieldbase#System_Web_UI_WebControls_ButtonFieldBase_ShowHeader\" data-linktype=\"relative-path\">ShowHeader</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfieldbase#System_Web_UI_WebControls_ButtonFieldBase_ValidationGroup\" data-linktype=\"relative-path\">ValidationGroup</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_AccessibleHeaderText\" data-linktype=\"relative-path\">AccessibleHeaderText</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_CloneField\" data-linktype=\"relative-path\">CloneField()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_Control\" data-linktype=\"relative-path\">Control</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_ControlStyle\" data-linktype=\"relative-path\">ControlStyle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_ExtractValuesFromCell_System_Collections_Specialized_IOrderedDictionary_System_Web_UI_WebControls_DataControlFieldCell_System_Web_UI_WebControls_DataControlRowState_System_Boolean_\" data-linktype=\"relative-path\">ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_FooterStyle\" data-linktype=\"relative-path\">FooterStyle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_FooterText\" data-linktype=\"relative-path\">FooterText</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_HeaderImageUrl\" data-linktype=\"relative-path\">HeaderImageUrl</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_HeaderStyle\" data-linktype=\"relative-path\">HeaderStyle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_HeaderText\" data-linktype=\"relative-path\">HeaderText</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_InsertVisible\" data-linktype=\"relative-path\">InsertVisible</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_IsTrackingViewState\" data-linktype=\"relative-path\">IsTrackingViewState</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_ItemStyle\" data-linktype=\"relative-path\">ItemStyle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_LoadViewState_System_Object_\" data-linktype=\"relative-path\">LoadViewState(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_OnFieldChanged\" data-linktype=\"relative-path\">OnFieldChanged()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_SaveViewState\" data-linktype=\"relative-path\">SaveViewState()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_SortExpression\" data-linktype=\"relative-path\">SortExpression</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_System_Web_UI_IDataSourceViewSchemaAccessor_DataSourceViewSchema\" data-linktype=\"relative-path\">IDataSourceViewSchemaAccessor.DataSourceViewSchema</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_System_Web_UI_IStateManager_IsTrackingViewState\" data-linktype=\"relative-path\">IStateManager.IsTrackingViewState</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_System_Web_UI_IStateManager_LoadViewState_System_Object_\" data-linktype=\"relative-path\">IStateManager.LoadViewState(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_System_Web_UI_IStateManager_SaveViewState\" data-linktype=\"relative-path\">IStateManager.SaveViewState()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_System_Web_UI_IStateManager_TrackViewState\" data-linktype=\"relative-path\">IStateManager.TrackViewState()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_TrackViewState\" data-linktype=\"relative-path\">TrackViewState()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_ValidateRequestMode\" data-linktype=\"relative-path\">ValidateRequestMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_ViewState\" data-linktype=\"relative-path\">ViewState</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_Visible\" data-linktype=\"relative-path\">Visible</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The ButtonField class is used by data-bound controls (such as <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a>) to display a button for each record that is displayed. The ButtonField object is displayed differently depending on the data-bound control in which it is used. For example, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control displays a ButtonField object as a column, while the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control displays it as a row.  </p>\n<p> Clicking a button in a button field raises the command event of the parent data-bound control. You can provide a custom routine to perform when a command button is clicked by providing an event handler for the command event.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCommand\" data-linktype=\"relative-path\">RowCommand</a> event, while the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemCommand\" data-linktype=\"relative-path\">ItemCommand</a> event.  </p>\n</div>\n<p> To determine the index of the record that raises the command event, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.commandeventargs#System_Web_UI_WebControls_CommandEventArgs_CommandArgument_\" data-linktype=\"relative-path\">CommandArgument</a> property of the event argument that is passed to the command event for the data-bound control. The ButtonField class automatically populates the <a class=\"xref\" href=\"system.web.ui.webcontrols.commandeventargs#System_Web_UI_WebControls_CommandEventArgs_CommandArgument_\" data-linktype=\"relative-path\">CommandArgument</a> property with the appropriate index value.  </p>\n<p> To specify the type of button to display, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfieldbase#System_Web_UI_WebControls_ButtonFieldBase_ButtonType_\" data-linktype=\"relative-path\">ButtonType</a> property. When displaying a link or command button, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield#System_Web_UI_WebControls_ButtonField_Text_\" data-linktype=\"relative-path\">Text</a> property to specify the caption to display in the buttons.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you set the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield#System_Web_UI_WebControls_ButtonField_Text_\" data-linktype=\"relative-path\">Text</a> property, all buttons in a ButtonField share the same caption.  </p>\n</div>\n<p> Alternatively, you can bind the ButtonField object to a field in a data source. This allows you to display different captions for the buttons in the ButtonField object. The values that are in the specified field are used for the text captions of the buttons. Set the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield#System_Web_UI_WebControls_ButtonField_DataTextField_\" data-linktype=\"relative-path\">DataTextField</a> property to bind a ButtonField object to a field in a data source.  </p>\n<p> When displaying an image button, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield#System_Web_UI_WebControls_ButtonField_ImageUrl_\" data-linktype=\"relative-path\">ImageUrl</a> property to specify the image to display for the buttons in the ButtonField object.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> All buttons in a ButtonField object share the same image.  </p>\n</div>\n<p> You can hide a ButtonField object in a data-bound control by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_Visible_\" data-linktype=\"relative-path\">Visible</a> property to <code>false</code>.  </p>\n<p> The ButtonField object allows you to customize its header and footer sections. To display a caption in the header or footer section, set the <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_HeaderText_\" data-linktype=\"relative-path\">HeaderText</a> or <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_FooterText_\" data-linktype=\"relative-path\">FooterText</a> properties, respectively. Instead of displaying text in the header section, you can display an image by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_HeaderImageUrl_\" data-linktype=\"relative-path\">HeaderImageUrl</a> property. To hide the header section in a ButtonField object, set the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfieldbase#System_Web_UI_WebControls_ButtonFieldBase_ShowHeader_\" data-linktype=\"relative-path\">ShowHeader</a> property to <code>false</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Some data-bound controls (such as the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control) can show or hide only the entire header section of the control. These data-bound controls do not support the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfieldbase#System_Web_UI_WebControls_ButtonFieldBase_ShowHeader_\" data-linktype=\"relative-path\">ShowHeader</a> property for an individual button field. To show or hide the entire header section of a data-bound control (if available), use the <code>ShowHeader</code> property for the control.  </p>\n</div>\n<p> You also can customize the appearance of the ButtonField object (font color, background color, and so on) by setting the style properties for the different parts of the field. The following table lists the different style properties.  </p>\n<table>\n<thead>\n<tr>\n<th>Style property</th>\n<th>The style settings for</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_ControlStyle_\" data-linktype=\"relative-path\">ControlStyle</a></td>\n<td>The child Web server controls of the ButtonField.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_FooterStyle_\" data-linktype=\"relative-path\">FooterStyle</a></td>\n<td>The footer section of the ButtonField.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_HeaderStyle_\" data-linktype=\"relative-path\">HeaderStyle</a></td>\n<td>The header section of the ButtonField.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_ItemStyle_\" data-linktype=\"relative-path\">ItemStyle</a></td>\n<td>The data items in the ButtonField.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ButtonField__ctor\" data-linktype=\"self-bookmark\">ButtonField()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ButtonField_CommandName\" data-linktype=\"self-bookmark\">CommandName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a string that represents the action to perform when a button in a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object is clicked.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ButtonField_DataTextField\" data-linktype=\"self-bookmark\">DataTextField</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the data field for which the value is bound to the <span class=\"xref\">stem.Web.UI.WebControls.Button.Text*</span> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.button\" data-linktype=\"relative-path\">Button</a> control that is rendered by the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ButtonField_DataTextFormatString\" data-linktype=\"self-bookmark\">DataTextFormatString</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the string that specifies the display format for the value of the field.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ButtonField_ImageUrl\" data-linktype=\"self-bookmark\">ImageUrl</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the image to display for each button in the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ButtonField_Text\" data-linktype=\"self-bookmark\">Text</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the static caption that is displayed for each button in the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ButtonField_CopyProperties_System_Web_UI_WebControls_DataControlField_\" data-linktype=\"self-bookmark\">CopyProperties(DataControlField)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies the properties of the current <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object to the specified <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield\" data-linktype=\"relative-path\">DataControlField</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ButtonField_CreateField\" data-linktype=\"self-bookmark\">CreateField()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and returns a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ButtonField_FormatDataTextValue_System_Object_\" data-linktype=\"self-bookmark\">FormatDataTextValue(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Formats the specified field value for a cell in the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ButtonField_Initialize_System_Boolean_System_Web_UI_Control_\" data-linktype=\"self-bookmark\">Initialize(Boolean,Control)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes the current <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ButtonField_InitializeCell_System_Web_UI_WebControls_DataControlFieldCell_System_Web_UI_WebControls_DataControlCellType_System_Web_UI_WebControls_DataControlRowState_System_Int32_\" data-linktype=\"self-bookmark\">InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes the specified <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfieldcell\" data-linktype=\"relative-path\">DataControlFieldCell</a> object to the specified row state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ButtonField_ValidateSupportsCallback\" data-linktype=\"self-bookmark\">ValidateSupportsCallback()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the controls that are contained in a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object support callbacks.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ButtonField__ctor\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ButtonField__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ButtonField()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ButtonField ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the ButtonField constructor to initialize a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> class. This constructor is commonly used when adding fields to a dynamically created data-bound control.  </p>\n<p> To add a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object dynamically to a data-bound control, create a new <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object, set its properties, and then add it to the field collection for the data-bound control. For example, if you are using the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control, add the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Columns_\" data-linktype=\"relative-path\">Columns</a> collection.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Although you can add fields dynamically to a data-bound control, fields should be declared statically, and then shown or hidden, as appropriate. Statically declaring all of your fields reduces the size of the view state for the parent data-bound control.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the M:System.Web.UI.WebControls.ButtonField.#ctor constructor to add a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object dynamically to a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"ButtonFieldCtor#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Sub CustomersGridView_RowCommand(ByVal sender As Object, ByVal e As GridViewCommandEventArgs)\n  \n        &#39; If multiple ButtonField column fields are used, use the\n        &#39; CommandName property to determine which button was clicked.\n        If e.CommandName = &quot;Select&quot; Then\n    \n            &#39; Convert the row index stored in the CommandArgument\n            &#39; property to an Integer.\n            Dim index As Integer = Convert.ToInt32(e.CommandArgument)\n    \n            &#39; Get the last name of the selected Customer from the appropriate\n            &#39; cell in the GridView control.\n            Dim selectedRow As GridViewRow = CustomersGridView.Rows(index)\n            Dim contactNameCell As TableCell = selectedRow.Cells(1)\n            Dim contactName As String = contactNameCell.Text\n    \n            &#39; Display the selected Customer.\n            Message.Text = &quot;You selected &quot; &amp; contactName &amp; &quot;.&quot;\n      \n        End If\n    \n    End Sub\n\n    Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n  \n        &#39; The field columns need to be created only the first time\n        &#39; the page is loaded.\n        If Not IsPostBack Then\n      \n            &#39; Dynamically create field columns to display the desired\n            &#39; fields from the data source.\n      \n            &#39; Create a ButtonField object to allow the user to \n            &#39; select an Customer.\n            Dim selectButtonField As New ButtonField\n\n            selectButtonField.ButtonType = ButtonType.Button\n            selectButtonField.CommandName = &quot;Select&quot;\n            selectButtonField.HeaderText = &quot;Select Customer&quot;\n            selectButtonField.Text = &quot;Select&quot;\n\n            &#39; Create a BoundField object to display an Customer&#39;s last name.\n            Dim contactNameBoundField As New BoundField\n\n            contactNameBoundField.DataField = &quot;ContactName&quot;\n            contactNameBoundField.HeaderText = &quot;Contact Name&quot;\n\n            &#39; Create a BoundField object to display an Customer&#39;s first name.\n            Dim contactTitleBoundField As New BoundField\n\n            contactTitleBoundField.DataField = &quot;ContactTitle&quot;\n            contactTitleBoundField.HeaderText = &quot;Contact Title&quot;\n\n            &#39; Add the field columns to the Columns collection of the\n            &#39; GridView control.\n            CustomersGridView.Columns.Add(selectButtonField)\n            CustomersGridView.Columns.Add(contactNameBoundField)\n            CustomersGridView.Columns.Add(contactTitleBoundField)\n      \n        End If\n    \n    End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ButtonField Constructor Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;ButtonField Constructor Example&lt;/h3&gt;\n\n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;\n        AssociatedControlID=&quot;CustomersGridView&quot;/&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;False&quot;\n        onrowcommand=&quot;CustomersGridView_RowCommand&quot;\n        runat=&quot;server&quot;&gt;                \n      &lt;/asp:gridview&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n        &lt;!-- to the Northwind sample database.                   --&gt;\n        &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n          selectcommand=&quot;Select [CustomerID], [CompanyName], [ContactName], [ContactTitle] From [Customers]&quot;\n          connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnection%&gt;&quot;\n          runat=&quot;server&quot;&gt;\n        &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"ButtonFieldCtor#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_RowCommand(Object sender, GridViewCommandEventArgs e)\n  {\n  \n    // If multiple ButtonField column fields are used, use the\n    // CommandName property to determine which button was clicked.\n    if(e.CommandName==&quot;Select&quot;)\n    {\n    \n      // Convert the row index stored in the CommandArgument\n      // property to an Integer.\n      int index = Convert.ToInt32(e.CommandArgument);    \n    \n      // Get the last name of the selected Customer from the appropriate\n      // cell in the GridView control.\n      GridViewRow selectedRow = CustomersGridView.Rows[index];\n      TableCell contactCell = selectedRow.Cells[1];\n      string contact = contactCell.Text;  \n    \n      // Display the selected Customer.\n      Message.Text = &quot;You selected &quot; + contact + &quot;.&quot;;\n      \n    }\n    \n  }\n\n  void Page_Load(Object sender, EventArgs e)\n  {\n  \n    // The field columns need to be created only the first time\n    // the page is loaded.\n    if (!IsPostBack)\n    {\n      \n      // Dynamically create field columns to display the desired\n      // fields from the data source.\n      \n      // Create a ButtonField object to allow the user to \n      // select an Customer.\n      ButtonField selectButtonField = new ButtonField ();\n\n      selectButtonField.ButtonType = ButtonType.Button;\n      selectButtonField.CommandName = &quot;Select&quot;;\n      selectButtonField.HeaderText = &quot;Select Customer&quot;;\n      selectButtonField.Text = &quot;Select&quot;;\n\n      // Create a BoundField object to display an Customer&#39;s last name.\n      BoundField contactNameBoundField = new BoundField();\n\n      contactNameBoundField.DataField = &quot;ContactName&quot;;\n      contactNameBoundField.HeaderText = &quot;Contact Name&quot;;\n\n      // Create a BoundField object to display an Customer&#39;s first name.\n      BoundField contactTitleBoundField = new BoundField();\n\n      contactTitleBoundField.DataField = &quot;ContactTitle&quot;;\n      contactTitleBoundField.HeaderText = &quot;Contact Title&quot;;\n\n      // Add the field columns to the Columns collection of the\n      // GridView control.\n      CustomersGridView.Columns.Add (selectButtonField);\n      CustomersGridView.Columns.Add(contactNameBoundField);\n      CustomersGridView.Columns.Add(contactTitleBoundField);\n      \n    }\n    \n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ButtonField Constructor Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;ButtonField Constructor Example&lt;/h3&gt;\n\n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;\n        AssociatedControlID=&quot;CustomersGridView&quot;/&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;False&quot;\n        onrowcommand=&quot;CustomersGridView_RowCommand&quot;\n        runat=&quot;server&quot;&gt;                \n      &lt;/asp:gridview&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n        &lt;!-- to the Northwind sample database.                   --&gt;\n        &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n          selectcommand=&quot;Select [CustomerID], [CompanyName], [ContactName], [ContactTitle] From [Customers]&quot;\n          connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnection%&gt;&quot;\n          runat=&quot;server&quot;&gt;\n        &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ButtonField_CommandName\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ButtonField_CommandName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CommandName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a string that represents the action to perform when a button in a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object is clicked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string CommandName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the action to perform when a button in the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> is clicked.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the CommandName property to associate a command name, such as <code>&quot;Add&quot;</code> or <code>&quot;Remove&quot;</code>, with the buttons in the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object. You can set the CommandName property to any string that identifies the action to perform when the command button is clicked. You can then programmatically determine the command name in an event handler and perform the appropriate actions.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> All buttons in a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object share the same command name.  </p>\n</div>\n<p> Data-bound controls recognize certain command names and automatically raise and handle the appropriate events for the control. The following command names are recognized:  </p>\n<ul>\n<li><p><code>&quot;Cancel&quot;</code>  </p>\n</li>\n<li><p><code>&quot;Delete&quot;</code>  </p>\n</li>\n<li><p><code>&quot;Edit&quot;</code>  </p>\n</li>\n<li><p><code>&quot;Insert&quot;</code>  </p>\n</li>\n<li><p><code>&quot;New&quot;</code>  </p>\n</li>\n<li><p><code>&quot;Page&quot;</code>  </p>\n</li>\n<li><p><code>&quot;Select&quot;</code>  </p>\n</li>\n<li><p><code>&quot;Sort&quot;</code>  </p>\n</li>\n<li><p><code>&quot;Update&quot;</code>  </p>\n<p>To invoke paging, set the CommandName to <code>&quot;Page&quot;</code> and the <a class=\"xref\" href=\"system.web.ui.webcontrols.button#System_Web_UI_WebControls_Button_CommandArgument_\" data-linktype=\"relative-path\">CommandArgument</a> of the contained <a class=\"xref\" href=\"system.web.ui.webcontrols.button\" data-linktype=\"relative-path\">Button</a> control to <code>&quot;First&quot;</code>, <code>&quot;Last&quot;</code>, <code>&quot;Prev&quot;</code>, <code>&quot;Next&quot;</code>, or a page number. However, since the <a class=\"xref\" href=\"system.web.ui.webcontrols.button#System_Web_UI_WebControls_Button_CommandArgument_\" data-linktype=\"relative-path\">CommandArgument</a> for a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> control is always the integer row index, a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> control is not suitable for invoking paging. Similarly, while you can invoke sorting by setting the CommandName to <code>&quot;Sort&quot;</code>, the <a class=\"xref\" href=\"system.web.ui.webcontrols.button#System_Web_UI_WebControls_Button_CommandArgument_\" data-linktype=\"relative-path\">CommandArgument</a> property for a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> control is always the integer row index. For this reason, a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> control is not suitable for invoking sorting. For custom command names, such as <code>&quot;Add&quot;</code> and <code>&quot;Remove&quot;</code>, you need to write the event code to check the command name and perform some custom action. For more information, see <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolcommands\" data-linktype=\"relative-path\">DataControlCommands</a>.  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> Not all command names are recognized by every data-bound controls. For example, <code>&quot;New&quot;</code> is not recognized by the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control and <code>&quot;Select&quot;</code> is not recognized by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n</div>\n<p> The value of this property is stored in view state.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the CommandName property to specify a command name for the buttons in a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"ButtonField#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Sub CustomersGridView_RowCommand(ByVal sender As Object, ByVal e As GridViewCommandEventArgs)\n  \n        &#39; If multiple ButtonField column fields are used, use the\n        &#39; CommandName property to determine which button was clicked.\n        If e.CommandName = &quot;Select&quot; Then\n    \n            &#39; Convert the row index stored in the CommandArgument\n            &#39; property to an Integer.\n            Dim index As Integer = Convert.ToInt32(e.CommandArgument)\n    \n            &#39; Get the last name of the selected author from the appropriate\n            &#39; cell in the GridView control.\n            Dim selectedRow As GridViewRow = CustomersGridView.Rows(index)\n            Dim contactCell As TableCell = selectedRow.Cells(1)\n            Dim contact As String = contactCell.Text\n    \n            &#39; Display the selected author.\n            Message.Text = &quot;You selected &quot; &amp; contact &amp; &quot;.&quot;\n      \n        End If\n    \n    End Sub\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ButtonField Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;ButtonField Example&lt;/h3&gt;\n      \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;\n        AssociatedControlID=&quot;CustomersGridView&quot;/&gt;\n                    \n      &lt;!-- Populate the Columns collection declaratively. --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;false&quot;\n        onrowcommand=&quot;CustomersGridView_RowCommand&quot;\n        runat=&quot;server&quot;&gt;\n                \n        &lt;columns&gt;\n                \n          &lt;asp:buttonfield buttontype=&quot;Button&quot; \n            commandname=&quot;Select&quot;\n            headertext=&quot;Select Customer&quot; \n            text=&quot;Select&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;CompanyName&quot; \n            headertext=&quot;Company Name&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;ContactName&quot; \n            headertext=&quot;Contact Name&quot;/&gt;\n                \n        &lt;/columns&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n        &lt;!-- to the Northwind sample database.                   --&gt;\n        &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n          selectcommand=&quot;Select [CustomerID], [CompanyName], [ContactName], [ContactTitle] From [Customers]&quot;\n          connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnection%&gt;&quot;\n          runat=&quot;server&quot;&gt;\n        &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"ButtonField#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_RowCommand(Object sender, GridViewCommandEventArgs e)\n  {\n  \n    // If multiple ButtonField column fields are used, use the\n    // CommandName property to determine which button was clicked.\n    if(e.CommandName==&quot;Select&quot;)\n    {\n    \n      // Convert the row index stored in the CommandArgument\n      // property to an Integer.\n      int index = Convert.ToInt32(e.CommandArgument);    \n    \n      // Get the last name of the selected author from the appropriate\n      // cell in the GridView control.\n      GridViewRow selectedRow = CustomersGridView.Rows[index];\n      TableCell contactName = selectedRow.Cells[1];\n      string contact = contactName.Text;  \n    \n      // Display the selected author.\n      Message.Text = &quot;You selected &quot; + contact + &quot;.&quot;;\n      \n    }\n    \n  }\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ButtonField Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;ButtonField Example&lt;/h3&gt;\n      \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;\n        AssociatedControlID=&quot;CustomersGridView&quot;/&gt;\n                    \n      &lt;!-- Populate the Columns collection declaratively. --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;false&quot;\n        onrowcommand=&quot;CustomersGridView_RowCommand&quot;\n        runat=&quot;server&quot;&gt;\n                \n        &lt;columns&gt;\n                \n          &lt;asp:buttonfield buttontype=&quot;Button&quot; \n            commandname=&quot;Select&quot;\n            headertext=&quot;Select Customer&quot; \n            text=&quot;Select&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;CompanyName&quot; \n            headertext=&quot;Company Name&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;ContactName&quot; \n            headertext=&quot;Contact Name&quot;/&gt;\n                \n        &lt;/columns&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n        &lt;!-- to the Northwind sample database.                   --&gt;\n        &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n          selectcommand=&quot;Select [CustomerID], [CompanyName], [ContactName], [ContactTitle] From [Customers]&quot;\n          connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnection%&gt;&quot;\n          runat=&quot;server&quot;&gt;\n        &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ButtonField_DataTextField\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ButtonField_DataTextField_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataTextField</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the data field for which the value is bound to the <span class=\"xref\">stem.Web.UI.WebControls.Button.Text*</span> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.button\" data-linktype=\"relative-path\">Button</a> control that is rendered by the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string DataTextField { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the field to bind to the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a>. The default is an empty string (&quot;&quot;), which indicates that the DataTextField property is not set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfieldbase#System_Web_UI_WebControls_ButtonFieldBase_ButtonType_\" data-linktype=\"relative-path\">ButtonType</a> property of a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object is set to the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttontype\" data-linktype=\"relative-path\">ButtonType</a> or <a class=\"xref\" href=\"system.web.ui.webcontrols.buttontype\" data-linktype=\"relative-path\">ButtonType</a> value, use the DataTextField property to specify the name of the field to bind to the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object. The values of the field are then displayed as the text for the buttons in the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object. Optionally, you can format the displayed text by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield#System_Web_UI_WebControls_ButtonField_DataTextFormatString_\" data-linktype=\"relative-path\">DataTextFormatString</a> property.  </p>\n<p> Instead of using the DataTextField property to bind a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object to a field from a data source, you can use the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield#System_Web_UI_WebControls_ButtonField_Text_\" data-linktype=\"relative-path\">Text</a> property to display static text for the text of the buttons in the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object. When the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield#System_Web_UI_WebControls_ButtonField_Text_\" data-linktype=\"relative-path\">Text</a> property is used, each button shares the same caption.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the DataTextField and <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield#System_Web_UI_WebControls_ButtonField_Text_\" data-linktype=\"relative-path\">Text</a> properties are both set, the DataTextField property takes precedence.  </p>\n</div>\n<p> The value of this property is stored in view state.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the DataTextField property to specify which field to display in a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> column of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"ButtonFieldDataTextField#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void AuthorsGridView_RowCommand(Object sender, GridViewCommandEventArgs e)\n  {\n  \n    // If multiple ButtonField column fields are used, use the\n    // CommandName property to determine which button was clicked.\n    if(e.CommandName==&quot;Select&quot;)\n    {\n    \n      // Convert the row index stored in the CommandArgument\n      // property to an Integer.\n      int index = Convert.ToInt32(e.CommandArgument);    \n    \n      // Get the last name of the selected author from the appropriate\n      // cell in the GridView control.\n      GridViewRow selectedRow = AuthorsGridView.Rows[index];\n      TableCell lastNameCell = selectedRow.Cells[1];\n      string lastName = lastNameCell.Text;  \n    \n      // Display the selected author.\n      Message.Text = &quot;You selected &quot; + lastName + &quot;.&quot;;\n      \n    }\n    \n  }\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ButtonField DataTextField Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;ButtonField DataTextField Example&lt;/h3&gt;\n      \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;\n        AssociatedControlID=&quot;AuthorsGridView&quot;/&gt;\n                    \n      &lt;!-- Set the DataTextField property of the ButtonField --&gt;\n      &lt;!-- declaratively. Set the DataTextFormatString       --&gt;\n      &lt;!-- property to apply special formatting to the text. --&gt;\n      &lt;asp:gridview id=&quot;AuthorsGridView&quot; \n        datasourceid=&quot;AuthorsSqlDataSource&quot; \n        autogeneratecolumns=&quot;false&quot;\n        onrowcommand=&quot;AuthorsGridView_RowCommand&quot; \n        runat=&quot;server&quot;&gt;\n                \n        &lt;columns&gt;\n                \n          &lt;asp:buttonfield buttontype=&quot;Link&quot; \n            commandname=&quot;Select&quot;\n            headertext=&quot;Select Author&quot;\n            datatextfield=&quot;au_lname&quot;\n            datatextformatstring=&quot;[{0}]&quot;    \n            text=&quot;Select&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;au_fname&quot; \n            headertext=&quot;First Name&quot;/&gt;\n                \n        &lt;/columns&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n      &lt;!-- to the Pubs sample database.                        --&gt;\n      &lt;asp:sqldatasource id=&quot;AuthorsSqlDataSource&quot;  \n        selectcommand=&quot;SELECT [au_lname], [au_fname] FROM [authors]&quot;\n        connectionstring=&quot;server=localhost;database=pubs;integrated security=SSPI&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"ButtonFieldDataTextField#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub AuthorsGridView_RowCommand(ByVal sender As Object, ByVal e As GridViewCommandEventArgs)\n  \n    &#39; If multiple ButtonField column fields are used, use the\n    &#39; CommandName property to determine which button was clicked.\n    If e.CommandName = &quot;Select&quot; Then\n    \n      &#39; Convert the row index stored in the CommandArgument\n      &#39; property to an Integer.\n      Dim index As Integer = Convert.ToInt32(e.CommandArgument)\n    \n      &#39; Get the last name of the selected author from the appropriate\n      &#39; cell in the GridView control.\n      Dim selectedRow As GridViewRow = AuthorsGridView.Rows(index)\n      Dim lastNameCell As TableCell = selectedRow.Cells(1)\n      Dim lastName As String = lastNameCell.Text\n    \n      &#39; Display the selected author.\n      Message.Text = &quot;You selected &quot; &amp; lastName &amp; &quot;.&quot;\n      \n    End If\n    \n  End Sub\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ButtonField DataTextField Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;ButtonField DataTextField Example&lt;/h3&gt;\n      \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;\n        AssociatedControlID=&quot;AuthorsGridView&quot;/&gt;\n                    \n      &lt;!-- Set the DataTextField property of the ButtonField --&gt;\n      &lt;!-- declaratively. Set the DataTextFormatString       --&gt;\n      &lt;!-- property to apply special formatting to the text. --&gt;\n      &lt;asp:gridview id=&quot;AuthorsGridView&quot; \n        datasourceid=&quot;AuthorsSqlDataSource&quot; \n        autogeneratecolumns=&quot;false&quot;\n        onrowcommand=&quot;AuthorsGridView_RowCommand&quot;\n        runat=&quot;server&quot;&gt;\n                \n        &lt;columns&gt;\n                \n          &lt;asp:buttonfield buttontype=&quot;Link&quot; \n            commandname=&quot;Select&quot;\n            headertext=&quot;Select Author&quot;\n            datatextfield=&quot;au_lname&quot;\n            datatextformatstring=&quot;[{0}]&quot;    \n            text=&quot;Select&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;au_fname&quot; \n            headertext=&quot;First Name&quot;/&gt;\n                \n        &lt;/columns&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n      &lt;!-- to the Pubs sample database.                        --&gt;\n      &lt;asp:sqldatasource id=&quot;AuthorsSqlDataSource&quot;  \n        selectcommand=&quot;SELECT [au_lname], [au_fname] FROM [authors]&quot;\n        connectionstring=&quot;server=localhost;database=pubs;integrated security=SSPI&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ButtonField_DataTextFormatString\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ButtonField_DataTextFormatString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataTextFormatString</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the string that specifies the display format for the value of the field.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string DataTextFormatString { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A format string that specifies the display format for the value of the field. The default is an empty string (&quot;&quot;), which indicates that no special formatting is applied to the field value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the DataTextFormatString property to specify a custom display format for the values that are displayed in the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object. If the DataTextFormatString property is not set, the value for the field is displayed without any special formatting.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The format string is applied only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield#System_Web_UI_WebControls_ButtonField_DataTextField_\" data-linktype=\"relative-path\">DataTextField</a> property is set.  </p>\n</div>\n<p> The format string can be any literal string and usually includes a placeholder for the value for the field. For example, in the format string <code>&quot;Item Value: {0}&quot;</code>, the <code>{0}</code> placeholder is replaced with the value for the field when it is displayed in the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object. The rest of the format string is displayed as literal text.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the format string does not include a placeholder, the value for the field from the data source is not included in the final display text.  </p>\n</div>\n<p> The placeholder consists of two parts, separated by a colon and wrapped in braces, in the form { <code>A</code> : <code>Bxx</code> }. The value before the colon (<code>A</code> in the general example) specifies the index for the field value in a zero-based list of parameters.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This <code>A</code> parameter is part of the formatting syntax. Because there is only one field value in each cell, this value can only be set to 0.  </p>\n</div>\n<p> The colon and the values after the colon are optional. The character after the colon (<code>B</code> in the general example) specifies the format in which to display the value. The following table lists the common formats.  </p>\n<table>\n<thead>\n<tr>\n<th>Format character</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>C</code></td>\n<td>Displays numeric values in currency format.</td>\n</tr>\n<tr>\n<td><code>D</code></td>\n<td>Displays numeric values in decimal format.</td>\n</tr>\n<tr>\n<td><code>E</code></td>\n<td>Displays numeric values in scientific (exponential) format.</td>\n</tr>\n<tr>\n<td><code>F</code></td>\n<td>Displays numeric values in fixed format.</td>\n</tr>\n<tr>\n<td><code>G</code></td>\n<td>Displays numeric values in general format.</td>\n</tr>\n<tr>\n<td><code>N</code></td>\n<td>Displays numeric values in number format.</td>\n</tr>\n<tr>\n<td><code>X</code></td>\n<td>Displays numeric values in hexadecimal format.</td>\n</tr>\n</tbody>\n</table>\n<div class=\"NOTE\"><h5>Note</h5><p> Except for <code>X</code>, the format characters are not case sensitive. The <code>X</code> format character displays the hexadecimal characters in the case that is specified.  </p>\n</div>\n<p> The value after the format character (<code>xx</code> in the general example) specifies the number of significant digits or decimal places to display. For example, the format string <code>&quot;{0:F2}&quot;</code> displays a fixed-point number with two decimal places.  </p>\n<p> For more information on formatting strings, see <a href=\"../Topic/Formatting%20Types%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Formatting Types</a>.  </p>\n<p> The value of this property is stored in view state.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the DataTextFormatString property to specify a custom display format for the values of a field.  </p>\n<pre><code class=\"lang-cs\" name=\"ButtonFieldDataTextField#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void AuthorsGridView_RowCommand(Object sender, GridViewCommandEventArgs e)\n  {\n  \n    // If multiple ButtonField column fields are used, use the\n    // CommandName property to determine which button was clicked.\n    if(e.CommandName==&quot;Select&quot;)\n    {\n    \n      // Convert the row index stored in the CommandArgument\n      // property to an Integer.\n      int index = Convert.ToInt32(e.CommandArgument);    \n    \n      // Get the last name of the selected author from the appropriate\n      // cell in the GridView control.\n      GridViewRow selectedRow = AuthorsGridView.Rows[index];\n      TableCell lastNameCell = selectedRow.Cells[1];\n      string lastName = lastNameCell.Text;  \n    \n      // Display the selected author.\n      Message.Text = &quot;You selected &quot; + lastName + &quot;.&quot;;\n      \n    }\n    \n  }\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ButtonField DataTextField Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;ButtonField DataTextField Example&lt;/h3&gt;\n      \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;\n        AssociatedControlID=&quot;AuthorsGridView&quot;/&gt;\n                    \n      &lt;!-- Set the DataTextField property of the ButtonField --&gt;\n      &lt;!-- declaratively. Set the DataTextFormatString       --&gt;\n      &lt;!-- property to apply special formatting to the text. --&gt;\n      &lt;asp:gridview id=&quot;AuthorsGridView&quot; \n        datasourceid=&quot;AuthorsSqlDataSource&quot; \n        autogeneratecolumns=&quot;false&quot;\n        onrowcommand=&quot;AuthorsGridView_RowCommand&quot; \n        runat=&quot;server&quot;&gt;\n                \n        &lt;columns&gt;\n                \n          &lt;asp:buttonfield buttontype=&quot;Link&quot; \n            commandname=&quot;Select&quot;\n            headertext=&quot;Select Author&quot;\n            datatextfield=&quot;au_lname&quot;\n            datatextformatstring=&quot;[{0}]&quot;    \n            text=&quot;Select&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;au_fname&quot; \n            headertext=&quot;First Name&quot;/&gt;\n                \n        &lt;/columns&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n      &lt;!-- to the Pubs sample database.                        --&gt;\n      &lt;asp:sqldatasource id=&quot;AuthorsSqlDataSource&quot;  \n        selectcommand=&quot;SELECT [au_lname], [au_fname] FROM [authors]&quot;\n        connectionstring=&quot;server=localhost;database=pubs;integrated security=SSPI&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"ButtonFieldDataTextField#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub AuthorsGridView_RowCommand(ByVal sender As Object, ByVal e As GridViewCommandEventArgs)\n  \n    &#39; If multiple ButtonField column fields are used, use the\n    &#39; CommandName property to determine which button was clicked.\n    If e.CommandName = &quot;Select&quot; Then\n    \n      &#39; Convert the row index stored in the CommandArgument\n      &#39; property to an Integer.\n      Dim index As Integer = Convert.ToInt32(e.CommandArgument)\n    \n      &#39; Get the last name of the selected author from the appropriate\n      &#39; cell in the GridView control.\n      Dim selectedRow As GridViewRow = AuthorsGridView.Rows(index)\n      Dim lastNameCell As TableCell = selectedRow.Cells(1)\n      Dim lastName As String = lastNameCell.Text\n    \n      &#39; Display the selected author.\n      Message.Text = &quot;You selected &quot; &amp; lastName &amp; &quot;.&quot;\n      \n    End If\n    \n  End Sub\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ButtonField DataTextField Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;ButtonField DataTextField Example&lt;/h3&gt;\n      \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;\n        AssociatedControlID=&quot;AuthorsGridView&quot;/&gt;\n                    \n      &lt;!-- Set the DataTextField property of the ButtonField --&gt;\n      &lt;!-- declaratively. Set the DataTextFormatString       --&gt;\n      &lt;!-- property to apply special formatting to the text. --&gt;\n      &lt;asp:gridview id=&quot;AuthorsGridView&quot; \n        datasourceid=&quot;AuthorsSqlDataSource&quot; \n        autogeneratecolumns=&quot;false&quot;\n        onrowcommand=&quot;AuthorsGridView_RowCommand&quot;\n        runat=&quot;server&quot;&gt;\n                \n        &lt;columns&gt;\n                \n          &lt;asp:buttonfield buttontype=&quot;Link&quot; \n            commandname=&quot;Select&quot;\n            headertext=&quot;Select Author&quot;\n            datatextfield=&quot;au_lname&quot;\n            datatextformatstring=&quot;[{0}]&quot;    \n            text=&quot;Select&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;au_fname&quot; \n            headertext=&quot;First Name&quot;/&gt;\n                \n        &lt;/columns&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n      &lt;!-- to the Pubs sample database.                        --&gt;\n      &lt;asp:sqldatasource id=&quot;AuthorsSqlDataSource&quot;  \n        selectcommand=&quot;SELECT [au_lname], [au_fname] FROM [authors]&quot;\n        connectionstring=&quot;server=localhost;database=pubs;integrated security=SSPI&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ButtonField_ImageUrl\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ButtonField_ImageUrl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ImageUrl</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the image to display for each button in the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string ImageUrl { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The image to display for each button in the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a>. The default is an empty string (&quot;&quot;), which indicates that the ImageUrl property is not set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfieldbase#System_Web_UI_WebControls_ButtonFieldBase_ButtonType_\" data-linktype=\"relative-path\">ButtonType</a> property of a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object is set to the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttontype\" data-linktype=\"relative-path\">ButtonType</a> value, use the ImageUrl property to specify the image to display for each button. This image can be in any file format (.jpg, .gif, .bmp, and so on), as long as the client browser supports that format.  </p>\n<p> The value of this property is stored in view state.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the ImageUrl property to specify an image to display for each button in the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object. For this code example to display, you must provide your own image.  </p>\n<pre><code class=\"lang-vb\" name=\"ButtonFieldImageUrl#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_RowCommand(ByVal sender As Object, ByVal e As GridViewCommandEventArgs)\n  \n    &#39; If multiple ButtonField column fields are used, use the\n    &#39; CommandName property to determine which button was clicked.\n    If e.CommandName = &quot;Select&quot; Then\n    \n      &#39; Convert the row index stored in the CommandArgument\n      &#39; property to an Integer.\n      Dim index As Integer = Convert.ToInt32(e.CommandArgument)\n    \n      &#39; Get the last name of the selected author from the appropriate\n      &#39; cell in the GridView control.\n            Dim selectedRow As GridViewRow = CustomersGridView.Rows(index)\n      Dim lastNameCell As TableCell = selectedRow.Cells(1)\n      Dim lastName As String = lastNameCell.Text\n    \n      &#39; Display the selected author.\n      Message.Text = &quot;You selected &quot; &amp; lastName &amp; &quot;.&quot;\n      \n    End If\n    \n  End Sub\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ButtonField ImageUrl Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;ButtonField ImageUrl Example&lt;/h3&gt;\n      \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;\n        AssociatedControlID=&quot;CustomersGridView&quot;/&gt;\n                    \n      &lt;!-- Set the ImageUrl property of the ButtonField declaratively. --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;false&quot;\n        onrowcommand=&quot;CustomersGridView_RowCommand&quot;\n        runat=&quot;server&quot;&gt;\n                \n        &lt;columns&gt;\n                \n          &lt;asp:buttonfield buttontype=&quot;Image&quot; \n            commandname=&quot;Select&quot;\n            headertext=&quot;Select Author&quot;\n            ImageUrl=&quot;~\\images\\ButtonImage.jpg&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;ContactName&quot; \n            headertext=&quot;ContactName&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;ContactTitle&quot; \n            headertext=&quot;ContactTitle&quot;/&gt;\n                \n        &lt;/columns&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n        &lt;!-- to the Northwind sample database.                   --&gt;\n        &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n          selectcommand=&quot;Select [CustomerID], [ContactName], [ContactTitle] From [Customers]&quot;\n          connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnection%&gt;&quot;\n          runat=&quot;server&quot;&gt;\n        &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"ButtonFieldImageUrl#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_RowCommand(Object sender, GridViewCommandEventArgs e)\n  {\n  \n    // If multiple ButtonField column fields are used, use the\n    // CommandName property to determine which button was clicked.\n    if(e.CommandName==&quot;Select&quot;)\n    {\n    \n      // Convert the row index stored in the CommandArgument\n      // property to an Integer.\n      int index = Convert.ToInt32(e.CommandArgument);    \n    \n      // Get the last name of the selected author from the appropriate\n      // cell in the GridView control.\n      GridViewRow selectedRow = CustomersGridView.Rows[index];\n      TableCell lastNameCell = selectedRow.Cells[1];\n      string lastName = lastNameCell.Text;  \n    \n      // Display the selected author.\n      Message.Text = &quot;You selected &quot; + lastName + &quot;.&quot;;\n      \n    }\n    \n  }\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ButtonField ImageUrl Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;ButtonField ImageUrl Example&lt;/h3&gt;\n      \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;\n        AssociatedControlID=&quot;CustomersGridView&quot;/&gt;\n                    \n      &lt;!-- Set the ImageUrl property of the ButtonField declaratively. --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;false&quot;\n        onrowcommand=&quot;CustomersGridView_RowCommand&quot;\n        runat=&quot;server&quot;&gt;\n                \n        &lt;columns&gt;\n                \n          &lt;asp:buttonfield buttontype=&quot;Image&quot; \n            commandname=&quot;Select&quot;\n            headertext=&quot;Select Author&quot;\n            ImageUrl=&quot;~\\images\\ButtonImage.jpg&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;ContactName&quot; \n            headertext=&quot;ContactName&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;ContactTitle&quot; \n            headertext=&quot;ContactTitle&quot;/&gt;\n                \n        &lt;/columns&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n        &lt;!-- to the Northwind sample database.                   --&gt;\n        &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n          selectcommand=&quot;Select [CustomerID], [ContactName], [ContactTitle] From [Customers]&quot;\n          connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnection%&gt;&quot;\n          runat=&quot;server&quot;&gt;\n        &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ButtonField_Text\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ButtonField_Text_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Text</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the static caption that is displayed for each button in the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string Text { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The caption displayed for each button in the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a>. The default is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfieldbase#System_Web_UI_WebControls_ButtonFieldBase_ButtonType_\" data-linktype=\"relative-path\">ButtonType</a> property of a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object is set to the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttontype\" data-linktype=\"relative-path\">ButtonType</a> or <a class=\"xref\" href=\"system.web.ui.webcontrols.buttontype\" data-linktype=\"relative-path\">ButtonType</a> value, use the Text property to display static text for the caption of the buttons in the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a>. Each button shares the same caption.  </p>\n<p> Instead of using the Text property to display static text in a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object, you can use the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield#System_Web_UI_WebControls_ButtonField_DataTextField_\" data-linktype=\"relative-path\">DataTextField</a> property to bind the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> to a field in a data source. The values of the field are then displayed as the caption of the buttons.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield#System_Web_UI_WebControls_ButtonField_DataTextField_\" data-linktype=\"relative-path\">DataTextField</a> and Text properties are both set, the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield#System_Web_UI_WebControls_ButtonField_DataTextField_\" data-linktype=\"relative-path\">DataTextField</a> property takes precedence.  </p>\n</div>\n<p> The value of this property is stored in view state.  </p>\n<p> The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <a class=\"xref\" href=\"system.componentmodel.localizableattribute\" data-linktype=\"relative-path\">LocalizableAttribute</a> and <a href=\"../Topic/ASP.NET%20Globalization%20and%20Localization.md\" data-linktype=\"relative-path\">Globalization and Localization</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the Text property to specify the caption to display for each button in a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"ButtonField#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Sub CustomersGridView_RowCommand(ByVal sender As Object, ByVal e As GridViewCommandEventArgs)\n  \n        &#39; If multiple ButtonField column fields are used, use the\n        &#39; CommandName property to determine which button was clicked.\n        If e.CommandName = &quot;Select&quot; Then\n    \n            &#39; Convert the row index stored in the CommandArgument\n            &#39; property to an Integer.\n            Dim index As Integer = Convert.ToInt32(e.CommandArgument)\n    \n            &#39; Get the last name of the selected author from the appropriate\n            &#39; cell in the GridView control.\n            Dim selectedRow As GridViewRow = CustomersGridView.Rows(index)\n            Dim contactCell As TableCell = selectedRow.Cells(1)\n            Dim contact As String = contactCell.Text\n    \n            &#39; Display the selected author.\n            Message.Text = &quot;You selected &quot; &amp; contact &amp; &quot;.&quot;\n      \n        End If\n    \n    End Sub\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ButtonField Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;ButtonField Example&lt;/h3&gt;\n      \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;\n        AssociatedControlID=&quot;CustomersGridView&quot;/&gt;\n                    \n      &lt;!-- Populate the Columns collection declaratively. --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;false&quot;\n        onrowcommand=&quot;CustomersGridView_RowCommand&quot;\n        runat=&quot;server&quot;&gt;\n                \n        &lt;columns&gt;\n                \n          &lt;asp:buttonfield buttontype=&quot;Button&quot; \n            commandname=&quot;Select&quot;\n            headertext=&quot;Select Customer&quot; \n            text=&quot;Select&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;CompanyName&quot; \n            headertext=&quot;Company Name&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;ContactName&quot; \n            headertext=&quot;Contact Name&quot;/&gt;\n                \n        &lt;/columns&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n        &lt;!-- to the Northwind sample database.                   --&gt;\n        &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n          selectcommand=&quot;Select [CustomerID], [CompanyName], [ContactName], [ContactTitle] From [Customers]&quot;\n          connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnection%&gt;&quot;\n          runat=&quot;server&quot;&gt;\n        &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"ButtonField#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_RowCommand(Object sender, GridViewCommandEventArgs e)\n  {\n  \n    // If multiple ButtonField column fields are used, use the\n    // CommandName property to determine which button was clicked.\n    if(e.CommandName==&quot;Select&quot;)\n    {\n    \n      // Convert the row index stored in the CommandArgument\n      // property to an Integer.\n      int index = Convert.ToInt32(e.CommandArgument);    \n    \n      // Get the last name of the selected author from the appropriate\n      // cell in the GridView control.\n      GridViewRow selectedRow = CustomersGridView.Rows[index];\n      TableCell contactName = selectedRow.Cells[1];\n      string contact = contactName.Text;  \n    \n      // Display the selected author.\n      Message.Text = &quot;You selected &quot; + contact + &quot;.&quot;;\n      \n    }\n    \n  }\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ButtonField Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;ButtonField Example&lt;/h3&gt;\n      \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;\n        AssociatedControlID=&quot;CustomersGridView&quot;/&gt;\n                    \n      &lt;!-- Populate the Columns collection declaratively. --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;false&quot;\n        onrowcommand=&quot;CustomersGridView_RowCommand&quot;\n        runat=&quot;server&quot;&gt;\n                \n        &lt;columns&gt;\n                \n          &lt;asp:buttonfield buttontype=&quot;Button&quot; \n            commandname=&quot;Select&quot;\n            headertext=&quot;Select Customer&quot; \n            text=&quot;Select&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;CompanyName&quot; \n            headertext=&quot;Company Name&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;ContactName&quot; \n            headertext=&quot;Contact Name&quot;/&gt;\n                \n        &lt;/columns&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n        &lt;!-- to the Northwind sample database.                   --&gt;\n        &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n          selectcommand=&quot;Select [CustomerID], [CompanyName], [ContactName], [ContactTitle] From [Customers]&quot;\n          connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnection%&gt;&quot;\n          runat=&quot;server&quot;&gt;\n        &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ButtonField_CopyProperties_System_Web_UI_WebControls_DataControlField_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ButtonField_CopyProperties_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyProperties(DataControlField)</div>        \r\n          </div>\r\n    \r\n            <p>Copies the properties of the current <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object to the specified <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield\" data-linktype=\"relative-path\">DataControlField</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>newField</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield\" data-linktype=\"relative-path\">DataControlField</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield\" data-linktype=\"relative-path\">DataControlField</a> to which to copy the properties of the current <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfieldbase#System_Web_UI_WebControls_ButtonFieldBase_CopyProperties_\" data-linktype=\"relative-path\">CopyProperties</a> method is a helper method that is used by the <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_CloneField_\" data-linktype=\"relative-path\">CloneField</a> method to copy the properties of the current <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfieldbase\" data-linktype=\"relative-path\">ButtonFieldBase</a>-derived object to the <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield\" data-linktype=\"relative-path\">DataControlField</a> object that was created by the <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_CloneField_\" data-linktype=\"relative-path\">CloneField</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ButtonField_CreateField\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ButtonField_CreateField_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateField()</div>        \r\n          </div>\r\n    \r\n            <p>Creates and returns a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Web.UI.WebControls.DataControlField CreateField ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield\" data-linktype=\"relative-path\">DataControlField</a></div>\r\n                  </div>\r\n                  <p>A new instance of the  <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CreateField method is a helper method that is used by the <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_CloneField_\" data-linktype=\"relative-path\">CloneField</a> method of the base class to create an empty <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object to which to copy the properties of the current <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a>-derived object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ButtonField_FormatDataTextValue_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ButtonField_FormatDataTextValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FormatDataTextValue(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Formats the specified field value for a cell in the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual string FormatDataTextValue (object dataTextValue);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataTextValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The field value to format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The field value converted to the format specified by the <span class=\"xref\">stem.Web.UI.WebControls.ButtonField.DataTextFormatString*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The FormatDataTextValue method is a helper method that is used to transform a field value to the format that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield#System_Web_UI_WebControls_ButtonField_DataTextFormatString_\" data-linktype=\"relative-path\">DataTextFormatString</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ButtonField_Initialize_System_Boolean_System_Web_UI_Control_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ButtonField_Initialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Initialize(Boolean,Control)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes the current <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Initialize (bool sortingEnabled, System.Web.UI.Control control);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sortingEnabled</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to enable sorting; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>control</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The data control that owns the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>false</code>, which indicates the control does not need to rebind to the data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Initialize method is called by the data control with which the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object is associated to perform basic object initialization for instances of the field, before the field is ever added to a rows collection. Data controls, such as <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a>, call the <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_Initialize_\" data-linktype=\"relative-path\">Initialize</a> method in their <code>CreateChildControls</code> methods before other methods, such as <code>CreateRow</code>, are called to create specific rows with data.  </p>\n<p> Call The Initialize method when you are writing a custom data-bound control that uses <a class=\"xref\" href=\"system.web.ui.webcontrols.tablecell\" data-linktype=\"relative-path\">TableCell</a> objects to perform basic initialization for a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object. Implement this method if your <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a>-derived type requires any object initialization before it populates <a class=\"xref\" href=\"system.web.ui.webcontrols.tablecell\" data-linktype=\"relative-path\">TableCell</a> objects with data or controls in the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield#System_Web_UI_WebControls_ButtonField_InitializeCell_\" data-linktype=\"relative-path\">InitializeCell</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ButtonField_InitializeCell_System_Web_UI_WebControls_DataControlFieldCell_System_Web_UI_WebControls_DataControlCellType_System_Web_UI_WebControls_DataControlRowState_System_Int32_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ButtonField_InitializeCell_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes the specified <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfieldcell\" data-linktype=\"relative-path\">DataControlFieldCell</a> object to the specified row state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>cell</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfieldcell\" data-linktype=\"relative-path\">DataControlFieldCell</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfieldcell\" data-linktype=\"relative-path\">DataControlFieldCell</a> to initialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cellType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolcelltype\" data-linktype=\"relative-path\">DataControlCellType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolcelltype\" data-linktype=\"relative-path\">DataControlCellType</a> value that indicates the type of row (header, footer, or data).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolrowstate\" data-linktype=\"relative-path\">DataControlRowState</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolrowstate\" data-linktype=\"relative-path\">DataControlRowState</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The InitializeCell method creates the button type that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfieldbase#System_Web_UI_WebControls_ButtonFieldBase_ButtonType_\" data-linktype=\"relative-path\">ButtonType</a> property and adds it to the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> collection of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfieldcell\" data-linktype=\"relative-path\">DataControlFieldCell</a> object. The <a class=\"xref\" href=\"system.web.ui.webcontrols.button#System_Web_UI_WebControls_Button_CommandArgument_\" data-linktype=\"relative-path\">CommandArgument</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.button\" data-linktype=\"relative-path\">Button</a> control is set to <code>rowIndex</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ButtonField_ValidateSupportsCallback\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ButtonField_ValidateSupportsCallback_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidateSupportsCallback()</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the controls that are contained in a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object support callbacks.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void ValidateSupportsCallback ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ValidateSupportsCallback method is a helper method that is used to determine whether the controls that are contained in a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> object support callbacks. This method is implemented as an empty method (a method that does not contain any code) to indicate that callbacks are supported.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The ValidateSupportsCallback method is used primarily by control developers.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.WebControls.ButtonField.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.WebControls.ButtonField.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ButtonField\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ButtonField..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ButtonField.CommandName\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ButtonField.CopyProperties\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ButtonField.CreateField\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ButtonField.DataTextField\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ButtonField.DataTextFormatString\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ButtonField.FormatDataTextValue\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ButtonField.ImageUrl\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ButtonField.Initialize\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ButtonField.InitializeCell\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ButtonField.Text\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"799a2701-9f2b-2a9a-0fa9-23509cb2b5b1\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\o2y0\\s\\fulldocset\\xml\\System.Web.UI.WebControls\\ButtonField.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a field that is displayed as a button in a data-bound control.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.UI.WebControls/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.ButtonField\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.WebControls.ButtonField.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.WebControls.ButtonField.yml","open_to_public_contributors":true,"api_name":["System.Web.UI.WebControls.ButtonField","System.Web.UI.WebControls.ButtonField..ctor","System.Web.UI.WebControls.ButtonField.CommandName","System.Web.UI.WebControls.ButtonField.CopyProperties","System.Web.UI.WebControls.ButtonField.CreateField","System.Web.UI.WebControls.ButtonField.DataTextField","System.Web.UI.WebControls.ButtonField.DataTextFormatString","System.Web.UI.WebControls.ButtonField.FormatDataTextValue","System.Web.UI.WebControls.ButtonField.ImageUrl","System.Web.UI.WebControls.ButtonField.Initialize","System.Web.UI.WebControls.ButtonField.InitializeCell","System.Web.UI.WebControls.ButtonField.Text","System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.ButtonField","System::Web::UI::WebControls::ButtonField","System.Web.UI.WebControls.ButtonField.#ctor","System::Web::UI::WebControls::ButtonField::#ctor","System.Web.UI.WebControls.ButtonField.CommandName","System::Web::UI::WebControls::ButtonField::CommandName","System.Web.UI.WebControls.ButtonField.CopyProperties","System::Web::UI::WebControls::ButtonField::CopyProperties","System.Web.UI.WebControls.ButtonField.CreateField","System::Web::UI::WebControls::ButtonField::CreateField","System.Web.UI.WebControls.ButtonField.DataTextField","System::Web::UI::WebControls::ButtonField::DataTextField","System.Web.UI.WebControls.ButtonField.DataTextFormatString","System::Web::UI::WebControls::ButtonField::DataTextFormatString","System.Web.UI.WebControls.ButtonField.FormatDataTextValue","System::Web::UI::WebControls::ButtonField::FormatDataTextValue","System.Web.UI.WebControls.ButtonField.ImageUrl","System::Web::UI::WebControls::ButtonField::ImageUrl","System.Web.UI.WebControls.ButtonField.Initialize","System::Web::UI::WebControls::ButtonField::Initialize","System.Web.UI.WebControls.ButtonField.InitializeCell","System::Web::UI::WebControls::ButtonField::InitializeCell","System.Web.UI.WebControls.ButtonField.Text","System::Web::UI::WebControls::ButtonField::Text","System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback","System::Web::UI::WebControls::ButtonField::ValidateSupportsCallback"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"799a2701-9f2b-2a9a-0fa9-23509cb2b5b1","original_ecmaxml_local_path":"W:\\o2y0\\s\\fulldocset\\xml\\System.Web.UI.WebControls\\ButtonField.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.UI.WebControls/ButtonField.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ButtonField class | Microsoft Docs","_op_ogTitle":"ButtonField class","description":"Represents a field that is displayed as a button in a data-bound control.\n","toc_asset_id":"_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.ButtonField","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.webcontrols.buttonfield","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.webcontrols.buttonfield","fileRelativePath":"System.Web.UI.WebControls.ButtonField.html"},"themesRelativePathToOutputRoot":"_themes/"}