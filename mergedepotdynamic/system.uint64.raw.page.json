{"content":"    \r\n    <h1 id=\"System_UInt64\">\r\n      <span class=\"lang-csharp\">UInt64</span>\r\n        Struct\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a 64-bit unsigned integer.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.CLSCompliant(false)]\n[System.Runtime.InteropServices.ComVisible(true)]\npublic struct UInt64 : IComparable, IComparable&lt;ulong&gt;, IConvertible, IEquatable&lt;ulong&gt;, IFormattable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">System.ValueType</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">UInt64</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The UInt64 value type represents unsigned integers with values ranging from 0 to 18,446,744,073,709,551,615.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The UInt64 type is not CLS-compliant. The CLS-compliant alternative type is <a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a>. <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> can be used instead to replace a UInt64 value that ranges from zero to <a class=\"xref\" href=\"system.int64#System_Int64_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>. For more information about CLS compliance, see <a href=\"../Topic/Language%20Independence%20and%20Language-Independent%20Components.md\" data-linktype=\"relative-path\">Language Independence and Language-Independent Components</a>.  </p>\n</div>\n<p> UInt64 provides methods to compare instances of this type, convert the value of an instance to its string representation, and convert the string representation of a number to an instance of this type.</p>\n\r\n    \r\n    \r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_MaxValue\" data-linktype=\"self-bookmark\">MaxValue</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Represents the largest possible value of <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a>. This field is constant.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_MinValue\" data-linktype=\"self-bookmark\">MinValue</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Represents the smallest possible value of <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a>. This field is constant.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_CompareTo_System_Object_\" data-linktype=\"self-bookmark\">CompareTo(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares this instance to a specified object and returns an indication of their relative values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_CompareTo_System_UInt64_\" data-linktype=\"self-bookmark\">CompareTo(UInt64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares this instance to a specified 64-bit unsigned integer and returns an indication of their relative values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value indicating whether this instance is equal to a specified object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_Equals_System_UInt64_\" data-linktype=\"self-bookmark\">Equals(UInt64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value indicating whether this instance is equal to a specified <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the hash code for this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_GetTypeCode\" data-linktype=\"self-bookmark\">GetTypeCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the <a class=\"xref\" href=\"system.typecode\" data-linktype=\"relative-path\">TypeCode</a> for value type <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_Parse_System_String_\" data-linktype=\"self-bookmark\">Parse(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the string representation of a number to its 64-bit unsigned integer equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_Parse_System_String_System_Globalization_NumberStyles_\" data-linktype=\"self-bookmark\">Parse(String,NumberStyles)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the string representation of a number in a specified style to its 64-bit unsigned integer equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_Parse_System_String_System_IFormatProvider_\" data-linktype=\"self-bookmark\">Parse(String,IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the string representation of a number in a specified culture-specific format to its 64-bit unsigned integer equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_Parse_System_String_System_Globalization_NumberStyles_System_IFormatProvider_\" data-linktype=\"self-bookmark\">Parse(String,NumberStyles,IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the string representation of a number in a specified style and culture-specific format to its 64-bit unsigned integer equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the numeric value of this instance to its equivalent string representation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_ToString_System_IFormatProvider_\" data-linktype=\"self-bookmark\">ToString(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_ToString_System_String_\" data-linktype=\"self-bookmark\">ToString(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the numeric value of this instance to its equivalent string representation using the specified format.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_ToString_System_String_System_IFormatProvider_\" data-linktype=\"self-bookmark\">ToString(String,IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_TryParse_System_String_System_UInt64__\" data-linktype=\"self-bookmark\">TryParse(String,UInt64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tries to convert the string representation of a number to its 64-bit unsigned integer equivalent. A return value indicates whether the conversion succeeded or failed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_TryParse_System_String_System_Globalization_NumberStyles_System_IFormatProvider_System_UInt64__\" data-linktype=\"self-bookmark\">TryParse(String,NumberStyles,IFormatProvider,UInt64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tries to convert the string representation of a number in a specified style and culture-specific format to its 64-bit unsigned integer equivalent. A return value indicates whether the conversion succeeded or failed.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_System_IConvertible_ToBoolean_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToBoolean(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToBoolean*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_System_IConvertible_ToByte_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToByte(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToByte*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_System_IConvertible_ToChar_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToChar(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToChar*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_System_IConvertible_ToDateTime_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToDateTime(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This conversion is not supported. Attempting to use this method throws an <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_System_IConvertible_ToDecimal_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToDecimal(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToDecimal*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_System_IConvertible_ToDouble_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToDouble(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToDouble*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_System_IConvertible_ToInt16_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToInt16(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToInt16*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_System_IConvertible_ToInt32_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToInt32(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToInt32*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_System_IConvertible_ToInt64_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToInt64(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToInt64*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_System_IConvertible_ToSByte_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToSByte(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToSByte*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_System_IConvertible_ToSingle_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToSingle(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToSingle*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_System_IConvertible_ToType_System_Type_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToType(Type,IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToType*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_System_IConvertible_ToUInt16_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToUInt16(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToUInt16*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_System_IConvertible_ToUInt32_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToUInt32(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToUInt32*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UInt64_System_IConvertible_ToUInt64_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToUInt64(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToUInt64*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_MaxValue\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MaxValue</div>        \r\n          </div>\r\n    \r\n            <p>Represents the largest possible value of <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a>. This field is constant.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const ulong MaxValue = 18446744073709551615;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of this constant is 18,446,744,073,709,551,615; that is, hexadecimal 0xFFFFFFFFFFFFFFFF.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> and MaxValue fields to verify that a <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> value is within the range of the <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> type before it performs a type conversion. This prevents an <a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a> at run time.  </p>\n<pre><code class=\"lang-vb\" name=\"System.UInt64.MaxValue#1\">      Dim decimalValue As Double = -1.5\n      Dim integerValue As ULong \n      \n      &#39; Discard fractional portion of Double value\n      Dim decimalInteger As Double = Math.Floor(decimalValue)\n\n      If decimalInteger &lt;= ULong.MaxValue AndAlso _\n         decimalInteger &gt;= ULong.MinValue Then\n         integerValue = CULng(decimalValue)\n         Console.WriteLine(&quot;Converted {0} to {1}.&quot;, decimalValue, integerValue)\n      Else\n         Dim rangeLimit As ULong\n         Dim relationship As String\n         \n         If decimalInteger &gt; ULong.MaxValue Then\n            rangeLimit = ULong.MaxValue\n            relationship = &quot;greater&quot;\n         Else\n            rangeLimit = ULong.MinValue\n            relationship = &quot;less&quot;\n         End If       \n\n         Console.WriteLine(&quot;Conversion failure: {0} is {1} than {2}&quot;, _ \n                           decimalInteger, _\n                           relationship, _\n                           rangeLimit)\n      End If       \n</code></pre><pre><code class=\"lang-cs\" name=\"System.UInt64.MaxValue#1\">      double decimalValue = -1.5;\n      ulong integerValue; \n      \n      // Discard fractional portion of Double value\n      double decimalInteger = Math.Floor(decimalValue);\n\n      if (decimalInteger &lt;= ulong.MaxValue &amp;&amp; \n          decimalInteger &gt;= ulong.MinValue)\n      {    \n         integerValue = (ulong) decimalValue;\n         Console.WriteLine(&quot;Converted {0} to {1}.&quot;, decimalValue, integerValue);\n      }   \n      else\n      {\n         ulong rangeLimit;\n         string relationship;\n         \n         if (decimalInteger &gt; ulong.MaxValue)\n         {\n            rangeLimit = ulong.MaxValue;\n            relationship = &quot;greater&quot;;\n         }   \n         else\n         {\n            rangeLimit = ulong.MinValue;\n            relationship = &quot;less&quot;;\n         }       \n\n         Console.WriteLine(&quot;Conversion failure: {0} is {1} than {2}.&quot;,  \n                           decimalInteger, \n                           relationship, \n                           rangeLimit);\n      }       \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_MinValue\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MinValue</div>        \r\n          </div>\r\n    \r\n            <p>Represents the smallest possible value of <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a>. This field is constant.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const ulong MinValue = 0;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of this constant is 0.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the MinValue and <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> fields to verify that a <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> value is within the range of the <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> type before it performs a type conversion. This prevents an <a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a> at run time.  </p>\n<pre><code class=\"lang-vb\" name=\"System.UInt64.MaxValue#1\">      Dim decimalValue As Double = -1.5\n      Dim integerValue As ULong \n      \n      &#39; Discard fractional portion of Double value\n      Dim decimalInteger As Double = Math.Floor(decimalValue)\n\n      If decimalInteger &lt;= ULong.MaxValue AndAlso _\n         decimalInteger &gt;= ULong.MinValue Then\n         integerValue = CULng(decimalValue)\n         Console.WriteLine(&quot;Converted {0} to {1}.&quot;, decimalValue, integerValue)\n      Else\n         Dim rangeLimit As ULong\n         Dim relationship As String\n         \n         If decimalInteger &gt; ULong.MaxValue Then\n            rangeLimit = ULong.MaxValue\n            relationship = &quot;greater&quot;\n         Else\n            rangeLimit = ULong.MinValue\n            relationship = &quot;less&quot;\n         End If       \n\n         Console.WriteLine(&quot;Conversion failure: {0} is {1} than {2}&quot;, _ \n                           decimalInteger, _\n                           relationship, _\n                           rangeLimit)\n      End If       \n</code></pre><pre><code class=\"lang-cs\" name=\"System.UInt64.MaxValue#1\">      double decimalValue = -1.5;\n      ulong integerValue; \n      \n      // Discard fractional portion of Double value\n      double decimalInteger = Math.Floor(decimalValue);\n\n      if (decimalInteger &lt;= ulong.MaxValue &amp;&amp; \n          decimalInteger &gt;= ulong.MinValue)\n      {    \n         integerValue = (ulong) decimalValue;\n         Console.WriteLine(&quot;Converted {0} to {1}.&quot;, decimalValue, integerValue);\n      }   \n      else\n      {\n         ulong rangeLimit;\n         string relationship;\n         \n         if (decimalInteger &gt; ulong.MaxValue)\n         {\n            rangeLimit = ulong.MaxValue;\n            relationship = &quot;greater&quot;;\n         }   \n         else\n         {\n            rangeLimit = ulong.MinValue;\n            relationship = &quot;less&quot;;\n         }       \n\n         Console.WriteLine(&quot;Conversion failure: {0} is {1} than {2}.&quot;,  \n                           decimalInteger, \n                           relationship, \n                           rangeLimit);\n      }       \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_CompareTo_System_Object_\">\r\n    \r\n            <a id=\"System_UInt64_CompareTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CompareTo(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Compares this instance to a specified object and returns an indication of their relative values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int CompareTo (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object to compare, or <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A signed number indicating the relative values of this instance and <code>value</code>.  </p>\n <table><thead><tr><th> Return Value<br>\n </th><th> Description<br>\n </th></tr></thead><tbody><tr><td> Less than zero<br>\n </td><td> This instance is less than <code>value</code>.<br>\n </td></tr><tr><td> Zero<br>\n </td><td> This instance is equal to <code>value</code>.<br>\n </td></tr><tr><td> Greater than zero<br>\n </td><td> This instance is greater than <code>value</code>.<br>\n -or-<br>\n <code>value</code> is <code>null</code>.<br>\n </td></tr></tbody></table>\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> is not a <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Any instance of <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a>, regardless of its value, is considered greater than <code>null</code>.  </p>\n<p> <code>value</code> must be <code>null</code> or an instance of <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a>; otherwise, an exception is thrown.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the CompareTo method.  </p>\n<pre><code class=\"lang-cs\" name=\"UInt64 Example#3\">\tpublic class Temperature : IComparable {\n\t\t/// &lt;summary&gt;\n\t\t/// IComparable.CompareTo implementation.\n\t\t/// &lt;/summary&gt;\n\t\tpublic int CompareTo(object obj) {\n\t\t\tif(obj is Temperature) {\n\t\t\t\tTemperature temp = (Temperature) obj;\n\n\t\t\t\treturn m_value.CompareTo(temp.m_value);\n\t\t\t}\n\t\t\t\n\t\t\tthrow new ArgumentException(&quot;object is not a Temperature&quot;);\t\n\t\t}\n\n\t\t// The value holder\n\t\tprotected ulong m_value;\n\n\t\tpublic ulong Value {\n\t\t\tget {\n\t\t\t\treturn m_value;\n\t\t\t}\n\t\t\tset {\n\t\t\t\tm_value = value;\n\t\t\t}\n\t\t}\n\t}\n</code></pre><pre><code class=\"lang-cpp\" name=\"UInt64 Example#3\">   public ref class Temperature: public IComparable\n   {\n   public:\n      /// &lt;summary&gt;\n      /// IComparable.CompareTo implementation.\n      /// &lt;/summary&gt;\n      virtual int CompareTo( Object^ obj )\n      {\n      if ( (Temperature^)( obj ) )\n      {\n         Temperature^ temp = (Temperature^)( obj );\n\n            return m_value.CompareTo( temp-&gt;m_value );\n         }\n\n         throw gcnew ArgumentException( &quot;object is not a Temperature&quot; );\n      }\n\n   protected:\n      // The value holder\n      UInt64 m_value;\n\n   public:\n      property UInt64 Value \n      {\n         UInt64 get()\n         {\n            return m_value;\n         }\n         void set( UInt64 value )\n         {\n            m_value = value;\n         }\n      }\n   };\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UInt64 Example#3\">\tPublic Class Temperature : Implements IComparable \n\t\t&#39; The value holder\n\t\tProtected m_value As ULong\n\n\t\t&#39;&#39;&#39; &lt;summary&gt;\n\t\t&#39;&#39;&#39; IComparable.CompareTo implementation.\n\t\t&#39;&#39;&#39; &lt;/summary&gt;\n\t\tPublic Function CompareTo(obj As Object) As Integer _\n\t\t       Implements IComparable.CompareTo\n\t\t       \n\t\t\tIf TypeOf(obj) Is Temperature Then\n\t\t\t\tDim temp As Temperature = DirectCast(obj, Temperature) \n\n\t\t\t\tReturn m_value.CompareTo(temp.m_value)\n\t\t\tEnd If\n\t\t\t\n\t\t\tThrow New ArgumentException(&quot;object is not a Temperature&quot;)\t\n\t\tEnd Function\n\n\t\tPublic Property Value As ULong\n\t\t\tGet \n\t\t\t\tReturn m_value\n\t\t\tEnd Get\n\t\t\tSet \n\t\t\t\tMe.m_value = value\n\t\t\tEnd Set\n\t\tEnd Property\n\tEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_CompareTo_System_UInt64_\">\r\n    \r\n            <a id=\"System_UInt64_CompareTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CompareTo(UInt64)</div>        \r\n          </div>\r\n    \r\n            <p>Compares this instance to a specified 64-bit unsigned integer and returns an indication of their relative values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int CompareTo (ulong value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An unsigned integer to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A signed number indicating the relative values of this instance and <code>value</code>.  </p>\n <table><thead><tr><th> Return Value<br>\n </th><th> Description<br>\n </th></tr></thead><tbody><tr><td> Less than zero<br>\n </td><td> This instance is less than <code>value</code>.<br>\n </td></tr><tr><td> Zero<br>\n </td><td> This instance is equal to <code>value</code>.<br>\n </td></tr><tr><td> Greater than zero<br>\n </td><td> This instance is greater than <code>value</code>.<br>\n </td></tr></tbody></table>\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method implements the <a class=\"xref\" href=\"system.icomparable-1\" data-linktype=\"relative-path\">System.IComparable&lt;T&gt;</a> interface and performs slightly better than the <a class=\"xref\" href=\"system.uint64#System_UInt64_CompareTo_\" data-linktype=\"relative-path\">CompareTo</a> method because it does not have to convert the <code>value</code> parameter to an object.  </p>\n<p> Depending on your programming language, it might be possible to code a <a class=\"xref\" href=\"system.uint64#System_UInt64_CompareTo_\" data-linktype=\"relative-path\">CompareTo</a> method where the parameter type has fewer bits (is narrower) than the instance type. This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.  </p>\n<p> For example, suppose the instance type is <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> and the parameter type is <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>. The Microsoft C# compiler generates instructions to represent the value of the parameter as an <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> object, then generates a <a class=\"xref\" href=\"system.int32#System_Int32_CompareTo_\" data-linktype=\"relative-path\">CompareTo</a> method that compares the values of the <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> instance and the <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> parameter representation.  </p>\n<p> Consult your programming language&#39;s documentation to determine whether its compiler performs implicit widening conversions on numeric types.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates generic and nongeneric versions of the <a class=\"xref\" href=\"system.uint64#System_UInt64_CompareTo_\" data-linktype=\"relative-path\">CompareTo</a> method for several value and reference types.  </p>\n<pre><code class=\"lang-vb\" name=\"T.CompareTo#1\">&#39; This example demonstrates the generic and non-generic versions of the \n&#39; CompareTo method for several base types.\n&#39; The non-generic version takes a parameter of type Object, while the generic\n&#39; version takes a type-specific parameter, such as Boolean, Int32, or Double.\n\nImports System\n\nClass Sample\n   Public Shared Sub Main()\n      Dim nl As String = Environment.NewLine\n      Dim msg As String = _\n          &quot;{0}The following is the result of using the generic and non-generic{0}&quot; &amp; _\n          &quot;versions of the CompareTo method for several base types:{0}&quot;\n      \n      Dim now As DateTime = DateTime.Now\n      &#39; Time span = 11 days, 22 hours, 33 minutes, 44 seconds\n      Dim tsX As New TimeSpan(11, 22, 33, 44)\n      &#39; Version = 1.2.333.4\n      Dim versX As New Version(&quot;1.2.333.4&quot;)\n      &#39; Guid = CA761232-ED42-11CE-BACD-00AA0057B223\n      Dim guidX As New Guid(&quot;{CA761232-ED42-11CE-BACD-00AA0057B223}&quot;)\n      \n      Dim a1 As [Boolean] = True,    a2 As [Boolean] = True\n      Dim b1 As [Byte] = 1,          b2 As [Byte] = 1\n      Dim c1 As Int16 = -2,          c2 As Int16 = 2\n      Dim d1 As Int32 = 3,           d2 As Int32 = 3\n      Dim e1 As Int64 = 4,           e2 As Int64 = -4\n      Dim f1 As [Decimal] = -5.5D,   f2 As [Decimal] = 5.5D\n      Dim g1 As [Single] = 6.6F,     g2 As [Single] = 6.6F\n      Dim h1 As [Double] = 7.7,      h2 As [Double] = -7.7\n      Dim i1 As [Char] = &quot;A&quot;c,       i2 As [Char] = &quot;A&quot;c\n      Dim j1 As String = &quot;abc&quot;,      j2 As String = &quot;abc&quot;\n      Dim k1 As DateTime = now,      k2 As DateTime = now\n      Dim l1 As TimeSpan = tsX,      l2 As TimeSpan = tsX\n      Dim m1 As Version = versX,     m2 As New Version(&quot;2.0&quot;)\n      Dim n1 As Guid = guidX,        n2 As Guid = guidX\n      \n      &#39; The following types are not CLS-compliant.\n      &#39; SByte, UInt16, UInt32, UInt64\n\n      Console.WriteLine(msg, nl)\n      Try\n         &#39; The second and third Show method call parameters are automatically boxed because\n         &#39; the second and third Show method declaration arguments expect type Object.\n\n         Show(&quot;Boolean:  &quot;, a1, a2, a1.CompareTo(a2), a1.CompareTo(CObj(a2)))\n         Show(&quot;Byte:     &quot;, b1, b2, b1.CompareTo(b2), b1.CompareTo(CObj(b2)))\n         Show(&quot;Int16:    &quot;, c1, c2, c1.CompareTo(c2), c1.CompareTo(CObj(c2)))\n         Show(&quot;Int32:    &quot;, d1, d2, d1.CompareTo(d2), d1.CompareTo(CObj(d2)))\n         Show(&quot;Int64:    &quot;, e1, e2, e1.CompareTo(e2), e1.CompareTo(CObj(e2)))\n         Show(&quot;Decimal:  &quot;, f1, f2, f1.CompareTo(f2), f1.CompareTo(CObj(f2)))\n         Show(&quot;Single:   &quot;, g1, g2, g1.CompareTo(g2), g1.CompareTo(CObj(g2)))\n         Show(&quot;Double:   &quot;, h1, h2, h1.CompareTo(h2), h1.CompareTo(CObj(h2)))\n         Show(&quot;Char:     &quot;, i1, i2, i1.CompareTo(i2), i1.CompareTo(CObj(i2)))\n         Show(&quot;String:   &quot;, j1, j2, j1.CompareTo(j2), j1.CompareTo(CObj(j2)))\n         Show(&quot;DateTime: &quot;, k1, k2, k1.CompareTo(k2), k1.CompareTo(CObj(k2)))\n         Show(&quot;TimeSpan: &quot;, l1, l2, l1.CompareTo(l2), l1.CompareTo(CObj(l2)))\n         Show(&quot;Version:  &quot;, m1, m2, m1.CompareTo(m2), m1.CompareTo(CObj(m2)))\n         Show(&quot;Guid:     &quot;, n1, n2, n1.CompareTo(n2), n1.CompareTo(CObj(n2)))\n         &#39;\n         Console.WriteLine(&quot;{0}The following types are not CLS-compliant:&quot;, nl)\n         Console.WriteLine(&quot;SByte, UInt16, UInt32, UInt64&quot;)\n\n      Catch e As Exception\n         Console.WriteLine(e)\n      End Try\n   End Sub &#39;Main\n   \n   Public Shared Sub Show(caption As String, var1 As [Object], var2 As [Object], _\n                          resultGeneric As Integer, resultNonGeneric As Integer)\n      Dim relation As String\n      \n      Console.Write(caption)\n      If resultGeneric = resultNonGeneric Then\n         If resultGeneric &lt; 0 Then\n            relation = &quot;less than&quot;\n         ElseIf resultGeneric &gt; 0 Then\n            relation = &quot;greater than&quot;\n         Else\n            relation = &quot;equal to&quot;\n         End If\n         Console.WriteLine(&quot;{0} is {1} {2}&quot;, var1, relation, var2)\n      \n      &#39; The following condition will never occur because the generic and non-generic\n      &#39; CompareTo methods are equivalent.\n\n      Else\n         Console.WriteLine(&quot;Generic CompareTo = {0}; non-generic CompareTo = {1}&quot;, _\n                            resultGeneric, resultNonGeneric)\n      End If\n   End Sub &#39;Show\nEnd Class &#39;Sample\n&#39;\n&#39;This example produces the following results:\n&#39;\n&#39;The following is the result of using the generic and non-generic versions of the\n&#39;CompareTo method for several base types:\n&#39;\n&#39;Boolean:  True is equal to True\n&#39;Byte:     1 is equal to 1\n&#39;Int16:    -2 is less than 2\n&#39;Int32:    3 is equal to 3\n&#39;Int64:    4 is greater than -4\n&#39;Decimal:  -5.5 is less than 5.5\n&#39;Single:   6.6 is equal to 6.6\n&#39;Double:   7.7 is greater than -7.7\n&#39;Char:     A is equal to A\n&#39;String:   abc is equal to abc\n&#39;DateTime: 12/1/2003 5:37:46 PM is equal to 12/1/2003 5:37:46 PM\n&#39;TimeSpan: 11.22:33:44 is equal to 11.22:33:44\n&#39;Version:  1.2.333.4 is less than 2.0\n&#39;Guid:     ca761232-ed42-11ce-bacd-00aa0057b223 is equal to ca761232-ed42-11ce-bacd-00\n&#39;aa0057b223\n&#39;\n&#39;The following types are not CLS-compliant:\n&#39;SByte, UInt16, UInt32, UInt64\n&#39;\n</code></pre><pre><code class=\"lang-cpp\" name=\"T.CompareTo#1\">// This example demonstrates the two versions of the \n// CompareTo method for several base types.\n// The general version takes a parameter of type Object, while the specific\n// version takes a type-specific parameter, such as Boolean, Int32, or Double.\nusing namespace System;\n\nvoid Show( String^ caption, Object^ var1, Object^ var2, int resultGeneric, int resultNonGeneric )\n{\n   String^ relation;\n   Console::Write( caption );\n   if ( resultGeneric == resultNonGeneric )\n   {\n      if ( resultGeneric &lt; 0 )\n            relation = &quot;less than&quot;;\n      else\n      if ( resultGeneric &gt; 0 )\n            relation = &quot;greater than&quot;;\n      else\n            relation = &quot;equal to&quot;;\n      Console::WriteLine( &quot;{0} is {1} {2}&quot;, var1, relation, var2 );\n   }\n   // The following condition will never occur because the generic and non-generic\n   // CompareTo methods are equivalent.\n   else\n   {\n      Console::WriteLine( &quot;Generic CompareTo = {0}; non-generic CompareTo = {1}&quot;, resultGeneric, resultNonGeneric );\n   }\n}\n\nint main()\n{\n   String^ nl = Environment::NewLine;\n   String^ msg = &quot;{0}The following is the result of using the generic and non-generic{0}&quot;\n   &quot;versions of the CompareTo method for several base types:{0}&quot;;\n   Object^ obj; // An Object used to insure CompareTo(Object) is called.\n\n   DateTime now = DateTime::Now;\n   \n   // Time span = 11 days, 22 hours, 33 minutes, 44 seconds\n   TimeSpan tsX = TimeSpan(11,22,33,44);\n   \n   // Version = 1.2.333.4\n   Version^ versX = gcnew Version(  &quot;1.2.333.4&quot; );\n   \n   // Guid = CA761232-ED42-11CE-BACD-00AA0057B223\n   Guid guidX = Guid( &quot;{CA761232-ED42-11CE-BACD-00AA0057B223}&quot;);\n   Boolean a1 = true,a2 = true;\n   Byte b1 = 1,b2 = 1;\n   Int16 c1 = -2,c2 = 2;\n   Int32 d1 = 3,d2 = 3;\n   Int64 e1 = 4,e2 = -4;\n   Decimal f1 = Decimal(-5.5), f2 = Decimal(5.5);\n   Single g1 = 6.6f,g2 = 6.6f;\n   Double h1 = 7.7,h2 = -7.7;\n   Char i1 = &#39;A&#39;,i2 = &#39;A&#39;;\n   String^ j1 = &quot;abc&quot;, ^j2 = &quot;abc&quot;;\n   DateTime k1 = now,k2 = now;\n   TimeSpan l1 = tsX,l2 = tsX;\n   Version^ m1 = versX, ^m2 = gcnew Version(  &quot;2.0&quot; );\n   Guid n1 = guidX,n2 = guidX;\n   \n   // The following types are not CLS-compliant.\n   SByte w1 = 8,w2 = 8;\n   UInt16 x1 = 9,x2 = 9;\n   UInt32 y1 = 10,y2 = 10;\n   UInt64 z1 = 11,z2 = 11;\n   \n   //\n   Console::WriteLine( msg, nl );\n   try\n   {\n      Show( &quot;Boolean: &quot;, a1, a2, a1.CompareTo( a2 ), a1.CompareTo( a2 ) );\n      Show( &quot;Byte:    &quot;, b1, b2, b1.CompareTo( b2 ), b1.CompareTo( b2 ) );\n      Show( &quot;Int16:   &quot;, c1, c2, c1.CompareTo( c2 ), c1.CompareTo( c2 ) );\n      Show( &quot;Int32:   &quot;, d1, d2, d1.CompareTo( d2 ), d1.CompareTo( d2 ) );\n      Show( &quot;Int64:   &quot;, e1, e2, e1.CompareTo( e2 ), e1.CompareTo( e2 ) );\n      Show( &quot;Decimal: &quot;, f1, f2, f1.CompareTo( f2 ), f1.CompareTo( f2 ) );\n      Show( &quot;Single:  &quot;, g1, g2, g1.CompareTo( g2 ), g1.CompareTo( g2 ) );\n      Show( &quot;Double:  &quot;, h1, h2, h1.CompareTo( h2 ), h1.CompareTo( h2 ) );\n      Show( &quot;Char:    &quot;, i1, i2, i1.CompareTo( i2 ), i1.CompareTo( i2 ) );\n      \n      // Use an anonymous object to hide the String object.\n      obj = j2;\n      Show( &quot;String:  &quot;, j1, j2, j1-&gt;CompareTo( j2 ), j1-&gt;CompareTo( obj ) );\n      Show( &quot;DateTime:&quot;, k1, k2, k1.CompareTo( k2 ), k1.CompareTo( k2 ) );\n      Show(  &quot;TimeSpan: &quot;, l1, l2, l1.CompareTo( l2 ), l1.CompareTo( l2 ) );\n      \n      // Use an anonymous object to hide the Version object.\n      obj = m2;\n      Show(  &quot;Version:  &quot;, m1, m2, m1-&gt;CompareTo( m2 ), m1-&gt;CompareTo( obj ) );\n      Show(  &quot;Guid:     &quot;, n1, n2, n1.CompareTo( n2 ), n1.CompareTo( n2 ) );\n      \n      //\n      Console::WriteLine( &quot;{0}The following types are not CLS-compliant:&quot;, nl );\n      Show( &quot;SByte:   &quot;, w1, w2, w1.CompareTo( w2 ), w1.CompareTo( w2 ) );\n      Show( &quot;UInt16:  &quot;, x1, x2, x1.CompareTo( x2 ), x1.CompareTo( x2 ) );\n      Show( &quot;UInt32:  &quot;, y1, y2, y1.CompareTo( y2 ), y1.CompareTo( y2 ) );\n      Show( &quot;UInt64:  &quot;, z1, z2, z1.CompareTo( z2 ), z1.CompareTo( z2 ) );\n   }\n   catch ( Exception^ e ) \n   {\n      Console::WriteLine( e );\n   }\n\n}\n//     This example displays the following output:\n//     \n//     The following is the result of using the generic and non-generic versions of the\n//     CompareTo method for several base types:\n//     \n//     Boolean:  True is equal to True\n//     Byte:     1 is equal to 1\n//     Int16:    -2 is less than 2\n//     Int32:    3 is equal to 3\n//     Int64:    4 is greater than -4\n//     Decimal:  -5.5 is less than 5.5\n//     Single:   6.6 is equal to 6.6\n//     Double:   7.7 is greater than -7.7\n//     Char:     A is equal to A\n//     String:   abc is equal to abc\n//     DateTime: 12/1/2003 5:37:46 PM is equal to 12/1/2003 5:37:46 PM\n//     TimeSpan: 11.22:33:44 is equal to 11.22:33:44\n//     Version:  1.2.333.4 is less than 2.0\n//     Guid:     ca761232-ed42-11ce-bacd-00aa0057b223 is equal to ca761232-ed42-11ce-bacd-00\n//     aa0057b223\n//     \n//     The following types are not CLS-compliant:\n//     SByte:    8 is equal to 8\n//     UInt16:   9 is equal to 9\n//     UInt32:   10 is equal to 10\n//     UInt64:   11 is equal to 11\n</code></pre><pre><code class=\"lang-cs\" name=\"T.CompareTo#1\">// This example demonstrates the generic and non-generic versions of the \n// CompareTo method for several base types.\n// The non-generic version takes a parameter of type Object, while the generic\n// version takes a type-specific parameter, such as Boolean, Int32, or Double.\n\nusing System;\n\nclass Sample \n{\n    public static void Main() \n    {\n    string    nl = Environment.NewLine;\n    string    msg = &quot;{0}The following is the result of using the generic and non-generic{0}&quot; +\n                    &quot;versions of the CompareTo method for several base types:{0}&quot;;\n\n    DateTime  now = DateTime.Now;\n// Time span = 11 days, 22 hours, 33 minutes, 44 seconds\n    TimeSpan  tsX = new TimeSpan(11, 22, 33, 44); \n// Version = 1.2.333.4\n    Version   versX = new Version(&quot;1.2.333.4&quot;);  \n// Guid = CA761232-ED42-11CE-BACD-00AA0057B223\n    Guid      guidX = new Guid(&quot;{CA761232-ED42-11CE-BACD-00AA0057B223}&quot;);\n\n    Boolean  a1 = true,  a2 = true;\n    Byte     b1 = 1,     b2 = 1;\n    Int16    c1 = -2,    c2 = 2;\n    Int32    d1 = 3,     d2 = 3;\n    Int64    e1 = 4,     e2 = -4;\n    Decimal  f1 = -5.5m, f2 = 5.5m;\n    Single   g1 = 6.6f,  g2 = 6.6f;\n    Double   h1 = 7.7d,  h2 = -7.7d;\n    Char     i1 = &#39;A&#39;,   i2 = &#39;A&#39;;\n    String   j1 = &quot;abc&quot;, j2 = &quot;abc&quot;;\n    DateTime k1 = now,   k2 = now;\n    TimeSpan l1 = tsX,   l2 = tsX;\n    Version  m1 = versX, m2 = new Version(&quot;2.0&quot;);\n    Guid     n1 = guidX, n2 = guidX;\n\n// The following types are not CLS-compliant.\n    SByte    w1 = 8,     w2 = 8;\n    UInt16   x1 = 9,     x2 = 9;\n    UInt32   y1 = 10,    y2 = 10;\n    UInt64   z1 = 11,    z2 = 11;\n//\n    Console.WriteLine(msg, nl);\n    try \n        {\n// The second and third Show method call parameters are automatically boxed because\n// the second and third Show method declaration arguments expect type Object.\n\n        Show(&quot;Boolean:  &quot;, a1, a2, a1.CompareTo(a2), a1.CompareTo((Object)a2));\n        Show(&quot;Byte:     &quot;, b1, b2, b1.CompareTo(b2), b1.CompareTo((Object)b2));\n        Show(&quot;Int16:    &quot;, c1, c2, c1.CompareTo(c2), c1.CompareTo((Object)c2));\n        Show(&quot;Int32:    &quot;, d1, d2, d1.CompareTo(d2), d1.CompareTo((Object)d2));\n        Show(&quot;Int64:    &quot;, e1, e2, e1.CompareTo(e2), e1.CompareTo((Object)e2));\n        Show(&quot;Decimal:  &quot;, f1, f2, f1.CompareTo(f2), f1.CompareTo((Object)f2));\n        Show(&quot;Single:   &quot;, g1, g2, g1.CompareTo(g2), g1.CompareTo((Object)g2));\n        Show(&quot;Double:   &quot;, h1, h2, h1.CompareTo(h2), h1.CompareTo((Object)h2));\n        Show(&quot;Char:     &quot;, i1, i2, i1.CompareTo(i2), i1.CompareTo((Object)i2));\n        Show(&quot;String:   &quot;, j1, j2, j1.CompareTo(j2), j1.CompareTo((Object)j2));\n        Show(&quot;DateTime: &quot;, k1, k2, k1.CompareTo(k2), k1.CompareTo((Object)k2));\n        Show(&quot;TimeSpan: &quot;, l1, l2, l1.CompareTo(l2), l1.CompareTo((Object)l2));\n        Show(&quot;Version:  &quot;, m1, m2, m1.CompareTo(m2), m1.CompareTo((Object)m2));\n        Show(&quot;Guid:     &quot;, n1, n2, n1.CompareTo(n2), n1.CompareTo((Object)n2));\n//\n        Console.WriteLine(&quot;{0}The following types are not CLS-compliant:&quot;, nl);\n        Show(&quot;SByte:    &quot;, w1, w2, w1.CompareTo(w2), w1.CompareTo((Object)w2));\n        Show(&quot;UInt16:   &quot;, x1, x2, x1.CompareTo(x2), x1.CompareTo((Object)x2));\n        Show(&quot;UInt32:   &quot;, y1, y2, y1.CompareTo(y2), y1.CompareTo((Object)y2));\n        Show(&quot;UInt64:   &quot;, z1, z2, z1.CompareTo(z2), z1.CompareTo((Object)z2));\n        }\n    catch (Exception e)\n        {\n        Console.WriteLine(e);\n        }\n    }\n\n    public static void Show(string caption, Object var1, Object var2, \n                            int resultGeneric, int resultNonGeneric)\n    {\n    string relation;\n\n    Console.Write(caption);\n    if (resultGeneric == resultNonGeneric) \n        {\n        if      (resultGeneric &lt; 0) relation = &quot;less than&quot;;\n        else if (resultGeneric &gt; 0) relation = &quot;greater than&quot;;\n        else                        relation = &quot;equal to&quot;;\n        Console.WriteLine(&quot;{0} is {1} {2}&quot;, var1, relation, var2);\n        }\n\n// The following condition will never occur because the generic and non-generic\n// CompareTo methods are equivalent.\n\n    else\n        {\n        Console.WriteLine(&quot;Generic CompareTo = {0}; non-generic CompareTo = {1}&quot;, \n                           resultGeneric, resultNonGeneric);\n        }\n   }\n}\n/*\nThis example produces the following results:\n\nThe following is the result of using the generic and non-generic versions of the\nCompareTo method for several base types:\n\nBoolean:  True is equal to True\nByte:     1 is equal to 1\nInt16:    -2 is less than 2\nInt32:    3 is equal to 3\nInt64:    4 is greater than -4\nDecimal:  -5.5 is less than 5.5\nSingle:   6.6 is equal to 6.6\nDouble:   7.7 is greater than -7.7\nChar:     A is equal to A\nString:   abc is equal to abc\nDateTime: 12/1/2003 5:37:46 PM is equal to 12/1/2003 5:37:46 PM\nTimeSpan: 11.22:33:44 is equal to 11.22:33:44\nVersion:  1.2.333.4 is less than 2.0\nGuid:     ca761232-ed42-11ce-bacd-00aa0057b223 is equal to ca761232-ed42-11ce-bacd-00\naa0057b223\n\nThe following types are not CLS-compliant:\nSByte:    8 is equal to 8\nUInt16:   9 is equal to 9\nUInt32:   10 is equal to 10\nUInt64:   11 is equal to 11\n*/\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_UInt64_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value indicating whether this instance is equal to a specified object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object to compare to this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>obj</code> is an instance of <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> and equals the value of this instance; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the Equals method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.UInt64.Equals#1\">Module Example\n   Public Sub Main()\n      Dim values() As Object = { 10S, 20S, 10I, 20I, 10L, 20L,\n                                 10R, 20R, 10US, 20US, 10UI, 20UI,\n                                 10UL, 20UL }\n      Dim baseValue As UInt64 = 20\n      Dim baseType As String = baseValue.GetType().Name\n      \n      For Each value In values\n         Console.WriteLine(&quot;{0} ({1}) = {2} ({3}): {4}&quot;,\n                           baseValue, baseType,\n                           value, value.GetType().Name,\n                           baseValue.Equals(value))\n      Next\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       20 (UInt64) = 10 (Int16): False\n&#39;       20 (UInt64) = 20 (Int16): False\n&#39;       20 (UInt64) = 10 (Int32): False\n&#39;       20 (UInt64) = 20 (Int32): False\n&#39;       20 (UInt64) = 10 (Int64): False\n&#39;       20 (UInt64) = 20 (Int64): False\n&#39;       20 (UInt64) = 10 (Double): False\n&#39;       20 (UInt64) = 20 (Double): False\n&#39;       20 (UInt64) = 10 (UInt16): False\n&#39;       20 (UInt64) = 20 (UInt16): False\n&#39;       20 (UInt64) = 10 (UInt32): False\n&#39;       20 (UInt64) = 20 (UInt32): False\n&#39;       20 (UInt64) = 10 (UInt64): False\n&#39;       20 (UInt64) = 20 (UInt64): True\n</code></pre><pre><code class=\"lang-cs\" name=\"System.UInt64.Equals#1\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      object[] values = { (short) 10, (short) 20, 10, 20,\n                          10L, 20L, 10D, 20D, (ushort) 10,\n                          (ushort) 20, 10U, 20U,\n                          10ul, 20ul };\n      UInt64 baseValue = 20;\n      String baseType = baseValue.GetType().Name;\n      \n      foreach (var value in values)\n         Console.WriteLine(&quot;{0} ({1}) = {2} ({3}): {4}&quot;,\n                           baseValue, baseType,\n                           value, value.GetType().Name,\n                           baseValue.Equals(value));\n\n   }\n}\n// The example displays the following output:\n//       20 (UInt64) = 10 (Int16): False\n//       20 (UInt64) = 20 (Int16): False\n//       20 (UInt64) = 10 (Int32): False\n//       20 (UInt64) = 20 (Int32): False\n//       20 (UInt64) = 10 (Int64): False\n//       20 (UInt64) = 20 (Int64): False\n//       20 (UInt64) = 10 (Double): False\n//       20 (UInt64) = 20 (Double): False\n//       20 (UInt64) = 10 (UInt16): False\n//       20 (UInt64) = 20 (UInt16): False\n//       20 (UInt64) = 10 (UInt32): False\n//       20 (UInt64) = 20 (UInt32): False\n//       20 (UInt64) = 10 (UInt64): False\n//       20 (UInt64) = 20 (UInt64): True\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_Equals_System_UInt64_\">\r\n    \r\n            <a id=\"System_UInt64_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(UInt64)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value indicating whether this instance is equal to a specified <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Equals (ulong obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> value to compare to this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>obj</code> has the same value as this instance; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method implements the <a class=\"xref\" href=\"system.iequatable-1\" data-linktype=\"relative-path\">System.IEquatable&lt;T&gt;</a> interface, and performs slightly better than <a class=\"xref\" href=\"system.uint64#System_UInt64_Equals_\" data-linktype=\"relative-path\">Equals</a> because it does not have to convert the <code>obj</code> parameter to an object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the <a class=\"xref\" href=\"system.uint64#System_UInt64_Equals_\" data-linktype=\"relative-path\">Equals</a> method.  </p>\n<pre><code class=\"lang-cpp\" name=\"UInt64_Equals#1\">using namespace System;\n\nint main()\n{\n      UInt64 value1 = 50;\n      UInt64 value2 = 50;\n\n      // Display the values.\n        Console::WriteLine(&quot;value1:   Type: {0}   Value: {1}&quot;,\n                           value1.GetType()-&gt;Name, value1);\n        Console::WriteLine(&quot;value2:   Type: {0}   Value: {1}&quot;,\n                         value2.GetType()-&gt;Name, value2);\n\n        // Compare the two values.\n        Console::WriteLine(&quot;value1 and value2 are equal: {0}&quot;,\n                           value1.Equals(value2));\n}\n// The example displays the following output:\n//       value1:   Type: UInt64   Value: 50\n//       value2:   Type: UInt64   Value: 50\n//       value1 and value2 are equal: True\n</code></pre><pre><code class=\"lang-cs\" name=\"UInt64_Equals#1\">using System;\n\nclass Example\n{\n     public static void Main()\n     {\n         UInt64 value1 = 50;\n         UInt64 value2 = 50;\n\n         // Display the values.\n        Console.WriteLine(&quot;value1:   Type: {0}   Value: {1}&quot;,\n                          value1.GetType().Name, value1);\n        Console.WriteLine(&quot;value2:   Type: {0}   Value: {1}&quot;,\n                        value2.GetType().Name, value2);\n\n        // Compare the two values.\n        Console.WriteLine(&quot;value1 and value2 are equal: {0}&quot;,\n                          value1.Equals(value2));\n     }\n}\n// The example displays the following output:\n//       value1:   Type: UInt64   Value: 50\n//       value2:   Type: UInt64   Value: 50\n//       value1 and value2 are equal: True\n</code></pre><pre><code class=\"lang-vb\" name=\"UInt64_Equals#1\">Class Example\n   Public Shared Sub Main()\n      Dim value1 As UInt64 = 50\n      Dim value2 As UInt64 = 50\n      \n      &#39;Display the values.\n      Console.WriteLine(&quot;value1:   Type: {0}   Value: {1}&quot;,\n                        value1.GetType().Name, value1)\n      Console.WriteLine(&quot;value2:   Type: {0}   Value: {1}&quot;,\n                        value2.GetType().Name, value2)\n\n      &#39; Compare the two values.\n      Console.WriteLine(&quot;value1 and value2 are equal: {0}&quot;,\n                        value1.Equals(value2))\n   End Sub\nEnd Class \n&#39; The example displays the following output:\n&#39;       value1:   Type: UInt64   Value: 50\n&#39;       value2:   Type: UInt64   Value: 50\n&#39;       value1 and value2 are equal: True\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_GetHashCode\">\r\n    \r\n            <a id=\"System_UInt64_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the hash code for this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A 32-bit signed integer hash code.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_GetTypeCode\">\r\n    \r\n            <a id=\"System_UInt64_GetTypeCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetTypeCode()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the <a class=\"xref\" href=\"system.typecode\" data-linktype=\"relative-path\">TypeCode</a> for value type <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TypeCode GetTypeCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.typecode\" data-linktype=\"relative-path\">TypeCode</a></div>\r\n                  </div>\r\n                  <p>The enumerated constant, <a class=\"xref\" href=\"system.typecode\" data-linktype=\"relative-path\">TypeCode</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_Parse_System_String_\">\r\n    \r\n            <a id=\"System_UInt64_Parse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Parse(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the string representation of a number to its 64-bit unsigned integer equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static ulong Parse (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that represents the number to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a></div>\r\n                  </div>\r\n                  <p>A 64-bit unsigned integer equivalent to the number contained in <code>s</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>s</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p>The <code>s</code> parameter is not in the correct format.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a></div>\r\n                  </div>\r\n                  <p>The <code>s</code> parameter represents a number less than <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> or greater than <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>s</code> parameter should be the string representation of a number in the following form.  </p>\n<p> [<em>ws</em>][<em>sign</em>]<em>digits</em>[<em>ws</em>]  </p>\n<p> Elements in square brackets ([ and ]) are optional. The following table describes each element.  </p>\n<table>\n<thead>\n<tr>\n<th>Element</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>ws</em></td>\n<td>Optional white space.</td>\n</tr>\n<tr>\n<td><em>sign</em></td>\n<td>An optional sign. Valid sign characters are determined by the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NegativeSign_\" data-linktype=\"relative-path\">NegativeSign</a> and <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_PositiveSign_\" data-linktype=\"relative-path\">PositiveSign</a> properties of the current culture. However, the negative sign symbol can be used only with zero; otherwise, the method throws an <a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a>.</td>\n</tr>\n<tr>\n<td><em>digits</em></td>\n<td>A sequence of digits ranging from 0 to 9. Any leading zeros are ignored.</td>\n</tr>\n</tbody>\n</table>\n<div class=\"NOTE\"><h5>Note</h5><p> The string specified by the <code>s</code> parameter is interpreted by using the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> style. It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.  </p>\n</div>\n<p> The <code>s</code> parameter is parsed by using the formatting information in a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">System.Globalization.NumberFormatInfo</a> object that is initialized for the current system culture. For more information, see <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrentInfo_\" data-linktype=\"relative-path\">CurrentInfo</a>. To parse a string by using the formatting information of a specific culture, use the <a class=\"xref\" href=\"system.uint64#System_UInt64_Parse_System_String_System_IFormatProvider_\" data-linktype=\"relative-path\">Parse(String,IFormatProvider)</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the Parse method to parse an array of string values.  </p>\n<pre><code class=\"lang-cs\" name=\"System.UInt64.Parse#1\">      string[] values = { &quot;+13230&quot;, &quot;-0&quot;, &quot;1,390,146&quot;, &quot;$190,235,421,127&quot;,\n                          &quot;0xFA1B&quot;, &quot;163042&quot;, &quot;-10&quot;, &quot;14065839182&quot;,\n                          &quot;16e07&quot;, &quot;134985.0&quot;, &quot;-12034&quot; };\n      foreach (string value in values)\n      {\n         try {\n            ulong number = UInt64.Parse(value); \n            Console.WriteLine(&quot;{0} --&gt; {1}&quot;, value, number);\n         }\n         catch (FormatException) {\n            Console.WriteLine(&quot;{0}: Bad Format&quot;, value);\n         }   \n         catch (OverflowException) {\n            Console.WriteLine(&quot;{0}: Overflow&quot;, value);   \n         }  \n      }\n      // The example displays the following output:\n      //       +13230 --&gt; 13230\n      //       -0 --&gt; 0\n      //       1,390,146: Bad Format\n      //       $190,235,421,127: Bad Format\n      //       0xFA1B: Bad Format\n      //       163042 --&gt; 163042\n      //       -10: Overflow\n      //       14065839182 --&gt; 14065839182\n      //       16e07: Bad Format\n      //       134985.0: Bad Format\n      //       -12034: Overflow\n</code></pre><pre><code class=\"lang-vb\" name=\"System.UInt64.Parse#1\">      Dim values() As String = { &quot;+13230&quot;, &quot;-0&quot;, &quot;1,390,146&quot;, &quot;$190,235,421,127&quot;, _\n                                 &quot;0xFA1B&quot;, &quot;163042&quot;, &quot;-10&quot;, &quot;14065839182&quot;, _\n                                 &quot;16e07&quot;, &quot;134985.0&quot;, &quot;-12034&quot; }\n      For Each value As String In values\n         Try\n            Dim number As ULong = UInt64.Parse(value) \n            Console.WriteLine(&quot;{0} --&gt; {1}&quot;, value, number)\n         Catch e As FormatException\n            Console.WriteLine(&quot;{0}: Bad Format&quot;, value)\n         Catch e As OverflowException\n            Console.WriteLine(&quot;{0}: Overflow&quot;, value)   \n         End Try  \n      Next\n      &#39; The example displays the following output:\n      &#39;       +13230 --&gt; 13230\n      &#39;       -0 --&gt; 0\n      &#39;       1,390,146: Bad Format\n      &#39;       $190,235,421,127: Bad Format\n      &#39;       0xFA1B: Bad Format\n      &#39;       163042 --&gt; 163042\n      &#39;       -10: Overflow\n      &#39;       14065839182 --&gt; 14065839182\n      &#39;       16e07: Bad Format\n      &#39;       134985.0: Bad Format\n      &#39;       -12034: Overflow\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_Parse_System_String_System_Globalization_NumberStyles_\">\r\n    \r\n            <a id=\"System_UInt64_Parse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Parse(String,NumberStyles)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the string representation of a number in a specified style to its 64-bit unsigned integer equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static ulong Parse (string s, System.Globalization.NumberStyles style);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that represents the number to convert. The string is interpreted by using the style specified by the <code>style</code> parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>style</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that specifies the permitted format of <code>s</code>. A typical value to specify is <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a></div>\r\n                  </div>\r\n                  <p>A 64-bit unsigned integer equivalent to the number specified in <code>s</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>s</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>style</code> is not a <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> value.  </p>\n<p> -or-  </p>\n<p> <code>style</code> is not a combination of <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> and <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p>The <code>s</code> parameter is not in a format compliant with <code>style</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a></div>\r\n                  </div>\r\n                  <p>The <code>s</code> parameter represents a number less than <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> or greater than <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a>.  </p>\n<p> -or-  </p>\n<p> <code>s</code> includes non-zero, fractional digits.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>style</code> parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the <code>s</code> parameter for the parse operation to succeed. <code>style</code> must be a combination of bit flags from the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> enumeration. The <code>style</code> parameter makes this method overload useful when <code>s</code> contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by <code>s</code> is known only at run time, or when you want to disallow white space or a sign symbol in <code>s</code>.  </p>\n<p> Depending on the value of <code>style</code>, the <code>s</code> parameter may include the following elements:  </p>\n<p> [<em>ws</em>][<em>$</em>][<em>sign</em>][<em>digits</em>,]<em>digits</em>[.<em>fractional_digits</em>][E[<em>sign</em>]<em>exponential_digits</em>][<em>ws</em>]  </p>\n<p> Elements in square brackets ([ and ]) are optional. If <code>style</code> includes <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a>, the <code>s</code> parameter may contain the following elements:  </p>\n<p> [<em>ws</em>]<em>hexdigits</em>[<em>ws</em>]  </p>\n<p> The following table describes each element.  </p>\n<table>\n<thead>\n<tr>\n<th>Element</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>ws</em></td>\n<td>Optional white space. White space can appear at the start of <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag, and it can appear at the end of <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>$</em></td>\n<td>A culture-specific currency symbol. Its position in the string is defined by the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrencyNegativePattern_\" data-linktype=\"relative-path\">CurrencyNegativePattern</a> and <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrencyPositivePattern_\" data-linktype=\"relative-path\">CurrencyPositivePattern</a> properties of the current culture. The current culture&#39;s currency symbol can appear in <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>sign</em></td>\n<td>An optional sign. The sign can appear at the start of <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag, and it can appear at the end of <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag. Parentheses can be used in <code>s</code> to indicate a negative value if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag. However, the negative sign symbol can be used only with zero; otherwise, the method throws an <a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a>.</td>\n</tr>\n<tr>\n<td><em>digits</em><br><br> <em>fractional_digits</em><br><br> <em>exponential_digits</em></td>\n<td>A sequence of digits from 0 through 9. For <em>fractional_digits</em>, only the digit 0 is valid.</td>\n</tr>\n<tr>\n<td><em>,</em></td>\n<td>A culture-specific group separator symbol. The current culture&#39;s group separator can appear in <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>.</em></td>\n<td>A culture-specific decimal point symbol. The current culture&#39;s decimal point symbol can appear in <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag. Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if <em>fractional_digits</em> includes any other digit, a <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a> is thrown.</td>\n</tr>\n<tr>\n<td>E</td>\n<td>The &quot;e&quot; or &quot;E&quot; character, which indicates that the value is represented in exponential (scientific) notation. The <code>s</code> parameter can represent a number in exponential notation if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>hexdigits</em></td>\n<td>A sequence of hexadecimal digits from 0 through f, or 0 through F.</td>\n</tr>\n</tbody>\n</table>\n<p> A string with digits only (which corresponds to the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> style) always parses successfully. Most of the remaining <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> members control elements that may be present, but are not required to be present, in the input string. The following table indicates how individual <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> members affect the elements that may be present in <code>s</code>.  </p>\n<table>\n<thead>\n<tr>\n<th><code>NumberStyles</code> value</th>\n<th>Elements permitted in <code>s</code> in addition to digits</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>The <em>digits</em> element only.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>The decimal point (.) and <em>fractional-digits</em> elements.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>The &quot;e&quot; or &quot;E&quot; character, which indicates exponential notation, along with <em>exponential_digits</em>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>The <em>ws</em> element at the start of <code>s</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>The <em>ws</em> element at the end of <code>s</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>The <em>sign</em> element at the start of <code>s</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>The <em>sign</em> element at the end of <code>s</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>The <em>sign</em> element in the form of parentheses enclosing the numeric value.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>The group separator (,) element.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>The currency ($) element.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>All elements. However, <code>s</code> cannot represent a hexadecimal number or a number in exponential notation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>The <em>ws</em> element at the start or end of <code>s</code>, <em>sign</em> at the start of <code>s</code>, and the decimal point (<em>.</em>) symbol. The <code>s</code> parameter can also use exponential notation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>The <code>ws</code>, <code>sign</code>, group separator (<em>,</em>), and decimal point (<em>.</em>) elements.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>All elements. However, <code>s</code> cannot represent a hexadecimal number.</td>\n</tr>\n</tbody>\n</table>\n<p> Unlike the other <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> values, which allow for, but do not require, the presence of particular style elements in <code>s</code>, the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> style value means that the individual numeric characters in <code>s</code> are always interpreted as hexadecimal characters. Valid hexadecimal characters are 0-9, A-F, and a-f. A prefix such as &quot;0x&quot; is not supported and causes the parse operation to fail. The only other flags that can be combined with the <code>style</code> parameter are <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> and <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a>. (The <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> enumeration includes a composite number style, <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a>, that includes both white-space flags.)  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If <code>s</code> is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as <code>0x</code> or <code>&amp;h</code>) that differentiates it as a hexadecimal number. This causes the conversion to fail.  </p>\n</div>\n<p> The <code>s</code> parameter is parsed by using the formatting information in a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that is initialized for the current system culture. To specify the culture whose formatting information is used for the parse operation, call the <a class=\"xref\" href=\"system.uint64#System_UInt64_Parse_System_String_System_Globalization_NumberStyles_System_IFormatProvider_\" data-linktype=\"relative-path\">Parse(String,NumberStyles,IFormatProvider)</a> overload.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example tries to parse each element in a string array by using a number of <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> values.  </p>\n<pre><code class=\"lang-cs\" name=\"System.UInt64.Parse#2\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      string[] values= { &quot; 214309 &quot;, &quot;1,064,181&quot;, &quot;(0)&quot;, &quot;10241+&quot;, &quot; + 21499 &quot;, \n                         &quot; +21499 &quot;, &quot;122153.00&quot;, &quot;1e03ff&quot;, &quot;91300.0e-2&quot; };\n      NumberStyles whitespace =  NumberStyles.AllowLeadingWhite | NumberStyles.AllowTrailingWhite;\n      NumberStyles[] styles= { NumberStyles.None, whitespace, \n                               NumberStyles.AllowLeadingSign | NumberStyles.AllowTrailingSign | whitespace, \n                               NumberStyles.AllowThousands | NumberStyles.AllowCurrencySymbol, \n                               NumberStyles.AllowExponent | NumberStyles.AllowDecimalPoint };\n\n      // Attempt to convert each number using each style combination.\n      foreach (string value in values)\n      {\n         Console.WriteLine(&quot;Attempting to convert &#39;{0}&#39;:&quot;, value);\n         foreach (NumberStyles style in styles)\n         {\n            try {\n               ulong number = UInt64.Parse(value, style);\n               Console.WriteLine(&quot;   {0}: {1}&quot;, style, number);\n            }   \n            catch (FormatException) {\n               Console.WriteLine(&quot;   {0}: Bad Format&quot;, style);\n            }   \n            catch (OverflowException)\n            {\n               Console.WriteLine(&quot;   {0}: Overflow&quot;, value);         \n            }         \n         }\n         Console.WriteLine();\n      }\n   }\n}\n// The example displays the following output:\n//    Attempting to convert &#39; 214309 &#39;:\n//       None: Bad Format\n//       AllowLeadingWhite, AllowTrailingWhite: 214309\n//       Integer, AllowTrailingSign: 214309\n//       AllowThousands, AllowCurrencySymbol: Bad Format\n//       AllowDecimalPoint, AllowExponent: Bad Format\n//    \n//    Attempting to convert &#39;1,064,181&#39;:\n//       None: Bad Format\n//       AllowLeadingWhite, AllowTrailingWhite: Bad Format\n//       Integer, AllowTrailingSign: Bad Format\n//       AllowThousands, AllowCurrencySymbol: 1064181\n//       AllowDecimalPoint, AllowExponent: Bad Format\n//    \n//    Attempting to convert &#39;(0)&#39;:\n//       None: Bad Format\n//       AllowLeadingWhite, AllowTrailingWhite: Bad Format\n//       Integer, AllowTrailingSign: Bad Format\n//       AllowThousands, AllowCurrencySymbol: Bad Format\n//       AllowDecimalPoint, AllowExponent: Bad Format\n//    \n//    Attempting to convert &#39;10241+&#39;:\n//       None: Bad Format\n//       AllowLeadingWhite, AllowTrailingWhite: Bad Format\n//       Integer, AllowTrailingSign: 10241\n//       AllowThousands, AllowCurrencySymbol: Bad Format\n//       AllowDecimalPoint, AllowExponent: Bad Format\n//    \n//    Attempting to convert &#39; + 21499 &#39;:\n//       None: Bad Format\n//       AllowLeadingWhite, AllowTrailingWhite: Bad Format\n//       Integer, AllowTrailingSign: Bad Format\n//       AllowThousands, AllowCurrencySymbol: Bad Format\n//       AllowDecimalPoint, AllowExponent: Bad Format\n//    \n//    Attempting to convert &#39; +21499 &#39;:\n//       None: Bad Format\n//       AllowLeadingWhite, AllowTrailingWhite: Bad Format\n//       Integer, AllowTrailingSign: 21499\n//       AllowThousands, AllowCurrencySymbol: Bad Format\n//       AllowDecimalPoint, AllowExponent: Bad Format\n//    \n//    Attempting to convert &#39;122153.00&#39;:\n//       None: Bad Format\n//       AllowLeadingWhite, AllowTrailingWhite: Bad Format\n//       Integer, AllowTrailingSign: Bad Format\n//       AllowThousands, AllowCurrencySymbol: Bad Format\n//       AllowDecimalPoint, AllowExponent: 122153\n//    \n//    Attempting to convert &#39;1e03ff&#39;:\n//       None: Bad Format\n//       AllowLeadingWhite, AllowTrailingWhite: Bad Format\n//       Integer, AllowTrailingSign: Bad Format\n//       AllowThousands, AllowCurrencySymbol: Bad Format\n//       AllowDecimalPoint, AllowExponent: Bad Format\n//    \n//    Attempting to convert &#39;91300.0e-2&#39;:\n//       None: Bad Format\n//       AllowLeadingWhite, AllowTrailingWhite: Bad Format\n//       Integer, AllowTrailingSign: Bad Format\n//       AllowThousands, AllowCurrencySymbol: Bad Format\n//       AllowDecimalPoint, AllowExponent: 913\n</code></pre><pre><code class=\"lang-vb\" name=\"System.UInt64.Parse#2\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      Dim values() As String = { &quot; 214309 &quot;, &quot;1,064,181&quot;, &quot;(0)&quot;, &quot;10241+&quot;, _\n                                 &quot; + 21499 &quot;, &quot; +21499 &quot;, &quot;122153.00&quot;, _\n                                 &quot;1e03ff&quot;, &quot;91300.0e-2&quot; }\n      Dim whitespace As NumberStyles =  NumberStyles.AllowLeadingWhite Or NumberStyles.AllowTrailingWhite\n      Dim styles() As NumberStyles = { NumberStyles.None, _\n                                       whitespace, _\n                                       NumberStyles.AllowLeadingSign Or NumberStyles.AllowTrailingSign Or whitespace, _\n                                       NumberStyles.AllowThousands Or NumberStyles.AllowCurrencySymbol, _\n                                       NumberStyles.AllowExponent Or NumberStyles.AllowDecimalPoint }\n\n      &#39; Attempt to convert each number using each style combination.\n      For Each value As String In values\n         Console.WriteLine(&quot;Attempting to convert &#39;{0}&#39;:&quot;, value)\n         For Each style As NumberStyles In styles\n            Try\n               Dim number As ULong = UInt64.Parse(value, style)\n               Console.WriteLine(&quot;   {0}: {1}&quot;, style, number)\n            Catch e As FormatException\n               Console.WriteLine(&quot;   {0}: Bad Format&quot;, style)\n            Catch e As OverflowException\n               Console.WriteLine(&quot;   {0}: Overflow&quot;, value)         \n            End Try         \n         Next\n         Console.WriteLine()\n      Next\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;    Attempting to convert &#39; 214309 &#39;:\n&#39;       None: Bad Format\n&#39;       AllowLeadingWhite, AllowTrailingWhite: 214309\n&#39;       Integer, AllowTrailingSign: 214309\n&#39;       AllowThousands, AllowCurrencySymbol: Bad Format\n&#39;       AllowDecimalPoint, AllowExponent: Bad Format\n&#39;    \n&#39;    Attempting to convert &#39;1,064,181&#39;:\n&#39;       None: Bad Format\n&#39;       AllowLeadingWhite, AllowTrailingWhite: Bad Format\n&#39;       Integer, AllowTrailingSign: Bad Format\n&#39;       AllowThousands, AllowCurrencySymbol: 1064181\n&#39;       AllowDecimalPoint, AllowExponent: Bad Format\n&#39;    \n&#39;    Attempting to convert &#39;(0)&#39;:\n&#39;       None: Bad Format\n&#39;       AllowLeadingWhite, AllowTrailingWhite: Bad Format\n&#39;       Integer, AllowTrailingSign: Bad Format\n&#39;       AllowThousands, AllowCurrencySymbol: Bad Format\n&#39;       AllowDecimalPoint, AllowExponent: Bad Format\n&#39;    \n&#39;    Attempting to convert &#39;10241+&#39;:\n&#39;       None: Bad Format\n&#39;       AllowLeadingWhite, AllowTrailingWhite: Bad Format\n&#39;       Integer, AllowTrailingSign: 10241\n&#39;       AllowThousands, AllowCurrencySymbol: Bad Format\n&#39;       AllowDecimalPoint, AllowExponent: Bad Format\n&#39;    \n&#39;    Attempting to convert &#39; + 21499 &#39;:\n&#39;       None: Bad Format\n&#39;       AllowLeadingWhite, AllowTrailingWhite: Bad Format\n&#39;       Integer, AllowTrailingSign: Bad Format\n&#39;       AllowThousands, AllowCurrencySymbol: Bad Format\n&#39;       AllowDecimalPoint, AllowExponent: Bad Format\n&#39;    \n&#39;    Attempting to convert &#39; +21499 &#39;:\n&#39;       None: Bad Format\n&#39;       AllowLeadingWhite, AllowTrailingWhite: Bad Format\n&#39;       Integer, AllowTrailingSign: 21499\n&#39;       AllowThousands, AllowCurrencySymbol: Bad Format\n&#39;       AllowDecimalPoint, AllowExponent: Bad Format\n&#39;    \n&#39;    Attempting to convert &#39;122153.00&#39;:\n&#39;       None: Bad Format\n&#39;       AllowLeadingWhite, AllowTrailingWhite: Bad Format\n&#39;       Integer, AllowTrailingSign: Bad Format\n&#39;       AllowThousands, AllowCurrencySymbol: Bad Format\n&#39;       AllowDecimalPoint, AllowExponent: 122153\n&#39;    \n&#39;    Attempting to convert &#39;1e03ff&#39;:\n&#39;       None: Bad Format\n&#39;       AllowLeadingWhite, AllowTrailingWhite: Bad Format\n&#39;       Integer, AllowTrailingSign: Bad Format\n&#39;       AllowThousands, AllowCurrencySymbol: Bad Format\n&#39;       AllowDecimalPoint, AllowExponent: Bad Format\n&#39;    \n&#39;    Attempting to convert &#39;91300.0e-2&#39;:\n&#39;       None: Bad Format\n&#39;       AllowLeadingWhite, AllowTrailingWhite: Bad Format\n&#39;       Integer, AllowTrailingSign: Bad Format\n&#39;       AllowThousands, AllowCurrencySymbol: Bad Format\n&#39;       AllowDecimalPoint, AllowExponent: 913\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_Parse_System_String_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_UInt64_Parse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Parse(String,IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the string representation of a number in a specified culture-specific format to its 64-bit unsigned integer equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static ulong Parse (string s, IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that represents the number to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that supplies culture-specific formatting information about <code>s</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a></div>\r\n                  </div>\r\n                  <p>A 64-bit unsigned integer equivalent to the number specified in <code>s</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>s</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p>The <code>s</code> parameter is not in the correct style.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a></div>\r\n                  </div>\r\n                  <p>The <code>s</code> parameter represents a number less than <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> or greater than <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This overload of the Parse method is typically used to convert text that can be formatted in a variety of ways to a <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> value. For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.  </p>\n<p> The <code>s</code> parameter contains a number of the form:  </p>\n<p> [ws][sign]digits[ws]  </p>\n<p> Items in square brackets ([ and ]) are optional. The following table describes each element.  </p>\n<table>\n<thead>\n<tr>\n<th>Element</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>ws</em></td>\n<td>Optional white space.</td>\n</tr>\n<tr>\n<td><em>sign</em></td>\n<td>An optional positive sign, or a negative sign if <code>s</code> represents the value zero.</td>\n</tr>\n<tr>\n<td><em>digits</em></td>\n<td>A sequence of digits ranging from 0 to 9.</td>\n</tr>\n</tbody>\n</table>\n<p> The s parameter is interpreted using the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> style. In addition to the unsigned integer value&#39;s decimal digits, only leading and trailing spaces along with a leading sign is allowed. (If the negative sign is present, <code>s</code> must represent a value of zero, or the method throws an <a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in <code>s</code>, use the <a class=\"xref\" href=\"system.uint64#System_UInt64_Parse_System_String_System_Globalization_NumberStyles_System_IFormatProvider_\" data-linktype=\"relative-path\">Parse(String,NumberStyles,IFormatProvider)</a> method.  </p>\n<p> The <code>provider</code> parameter is an <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation whose <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method returns a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that provides culture-specific information about the format of <code>s</code>. There are three ways to use the <code>provider</code> parameter to supply custom formatting information to the parse operation:  </p>\n<ul>\n<li><p>You can pass the actual <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that provides formatting information. (Its implementation of <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> simply returns itself.)  </p>\n</li>\n<li><p>You can pass a <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that specifies the culture whose formatting is to be used. Its <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_NumberFormat_\" data-linktype=\"relative-path\">NumberFormat</a> property provides formatting information.  </p>\n</li>\n<li><p>You can pass a custom <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation. Its <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method must instantiate and return the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that provides formatting information.  </p>\n<p>If <code>provider</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> for the current culture is used.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example is the button click event handler of a Web form. It uses the array returned by the <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_UserLanguages_\" data-linktype=\"relative-path\">UserLanguages</a> property to determine the user&#39;s locale. It then instantiates a <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that corresponds to that locale. The <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that belongs to that <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object is then passed to the Parse method to convert the user&#39;s input to a <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> value.  </p>\n<pre><code class=\"lang-cs\" name=\"ParseMethod#1\">protected void OkToSingle_Click(object sender, EventArgs e)\n{\n   string locale;\n   float number;\n   CultureInfo culture; \n\n   // Return if string is empty\n   if (String.IsNullOrEmpty(this.inputNumber.Text))\n      return;\n\n   // Get locale of web request to determine possible format of number\n   if (Request.UserLanguages.Length == 0)\n      return;\n   locale = Request.UserLanguages[0];\n   if (String.IsNullOrEmpty(locale))\n      return; \n\n   // Instantiate CultureInfo object for the user&#39;s locale\n   culture = new CultureInfo(locale);\n   \n   // Convert user input from a string to a number\n   try\n   {\n      number = Single.Parse(this.inputNumber.Text, culture.NumberFormat);\n   }\n   catch (FormatException)\n   {\n      return;\n   }\n   catch (Exception)\n   {\n      return;\n   }\n   // Output number to label on web form\n   this.outputNumber.Text = &quot;Number is &quot; + number.ToString();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"ParseMethod#1\">Protected Sub OkToSingle_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles OkToSingle.Click\n   Dim locale As String\n   Dim culture As CultureInfo\n   Dim number As Single\n\n   &#39; Return if string is empty\n   If String.IsNullOrEmpty(Me.inputNumber.Text) Then Exit Sub\n\n   &#39; Get locale of web request to determine possible format of number\n   If Request.UserLanguages.Length = 0 Then Exit Sub\n   locale = Request.UserLanguages(0)\n   If String.IsNullOrEmpty(locale) Then Exit Sub\n\n   &#39; Instantiate CultureInfo object for the user&#39;s locale\n   culture = New CultureInfo(locale)\n\n   &#39; Convert user input from a string to a number\n   Try\n      number = Single.Parse(Me.inputNumber.Text, culture.NumberFormat)\n   Catch ex As FormatException\n      Exit Sub\n   Catch ex As OverflowException\n      Exit Sub\n   End Try\n\n   &#39; Output number to label on web form\n   Me.outputNumber.Text = &quot;Number is &quot; &amp; number.ToString()\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_Parse_System_String_System_Globalization_NumberStyles_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_UInt64_Parse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Parse(String,NumberStyles,IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the string representation of a number in a specified style and culture-specific format to its 64-bit unsigned integer equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static ulong Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that represents the number to convert. The string is interpreted by using the style specified by the <code>style</code> parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>style</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of enumeration values that indicates the style elements that can be present in <code>s</code>. A typical value to specify is <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that supplies culture-specific formatting information about <code>s</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a></div>\r\n                  </div>\r\n                  <p>A 64-bit unsigned integer equivalent to the number specified in <code>s</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>s</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>style</code> is not a <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> value.  </p>\n<p> -or-  </p>\n<p> <code>style</code> is not a combination of <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> and <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p>The <code>s</code> parameter is not in a format compliant with <code>style</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a></div>\r\n                  </div>\r\n                  <p>The <code>s</code> parameter represents a number less than <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> or greater than <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a>.  </p>\n<p> -or-  </p>\n<p> <code>s</code> includes non-zero, fractional digits.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>style</code> parameter defines the style elements (such as white space or the positive or negative sign symbol) that are allowed in the <code>s</code> parameter for the parse operation to succeed. It must be a combination of bit flags from the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> enumeration.  </p>\n<p> Depending on the value of <code>style</code>, the <code>s</code> parameter may include the following elements:  </p>\n<p> [<em>ws</em>][<em>$</em>][<em>sign</em>]<em>digits</em>[.<em>fractional_digits</em>][E[<em>sign</em>]<em>exponential_digits</em>][<em>ws</em>]  </p>\n<p> Elements in square brackets ([ and ]) are optional. If <code>style</code> includes <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a>, the <code>s</code> parameter may include the following elements:  </p>\n<p> [<em>ws</em>]<em>hexdigits</em>[<em>ws</em>]  </p>\n<p> The following table describes each element.  </p>\n<table>\n<thead>\n<tr>\n<th>Element</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>ws</em></td>\n<td>Optional white space. White space can appear at the beginning of <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag, and it can appear at the end of <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>$</em></td>\n<td>A culture-specific currency symbol. Its position in the string is defined by the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrencyPositivePattern_\" data-linktype=\"relative-path\">CurrencyPositivePattern</a> property of the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that is returned by the <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method of the <code>provider</code> parameter. The currency symbol can appear in <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>sign</em></td>\n<td>An optional sign. (The method throws an <a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a> if <code>s</code> includes a negative sign and represents a non-zero number.) The sign can appear at the beginning of <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag, and it can appear the end of <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag. Parentheses can be used in <code>s</code> to indicate a negative value if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>digits</em></td>\n<td>A sequence of digits from 0 through 9.</td>\n</tr>\n<tr>\n<td><em>.</em></td>\n<td>A culture-specific decimal point symbol. The current culture&#39;s decimal point symbol can appear in <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>fractional_digits</em></td>\n<td>One or more occurrences of the digit 0-9 if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag, or one or more occurrences of the digit 0 if it does not. Fractional digits can appear in <code>s</code> only if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td>E</td>\n<td>The &quot;e&quot; or &quot;E&quot; character, which indicates that the value is represented in exponential (scientific) notation. The <code>s</code> parameter can represent a number in exponential notation if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>exponential_digits</em></td>\n<td>A sequence of digits from 0 through 9. The <code>s</code> parameter can represent a number in exponential notation if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>hexdigits</em></td>\n<td>A sequence of hexadecimal digits from 0 through f, or 0 through F.</td>\n</tr>\n</tbody>\n</table>\n<p> A string with decimal digits only (which corresponds to the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> style) always parses successfully. Most of the remaining <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> members control elements that may be present, but are not required to be present, in this input string. The following table indicates how individual <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> members affect the elements that may be present in <code>s</code>.  </p>\n<table>\n<thead>\n<tr>\n<th>Non-composite <code>NumberStyles</code> values</th>\n<th>Elements permitted in <code>s</code> in addition to digits</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>Decimal digits only.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The decimal point (<em>.</em>) and <em>fractional_digits</em> elements. However, if style does not include the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag, <em>fractional_digits</em> must consist of only one or more 0 digits; otherwise, an <a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a> is thrown.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The &quot;e&quot; or &quot;E&quot; character, which indicates exponential notation, along with <em>exponential_digits</em>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <em>ws</em> element at the beginning of <code>s</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <em>ws</em> element at the end of <code>s</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>A sign before <em>digits</em>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>A sign after <em>digits</em>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>Parentheses before and after <em>digits</em> to indicate a negative value.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The group separator (<em>,</em>) element.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The currency (<em>$</em>) element.</td>\n</tr>\n</tbody>\n</table>\n<p> If the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag is used, <code>s</code> must be a hexadecimal value. Valid hexadecimal characters are 0-9, A-F, and a-f. A prefix such as &quot;0x&quot; is not supported and causes the parse operation to fail. The only other flags that can be combined with it are <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> and <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a>. (The <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> enumeration includes a composite number style, <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a>, that includes both white-space flags.)  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the <code>s</code> parameter is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as <code>0x</code> or <code>&amp;h</code>) that differentiates it as a hexadecimal number. This causes the parse operation to throw an exception.  </p>\n</div>\n<p> The <code>provider</code> parameter is an <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation whose <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method returns a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that provides culture-specific information about the format of <code>s</code>. There are three ways to use the <code>provider</code> parameter to supply custom formatting information to the parse operation:  </p>\n<ul>\n<li><p>You can pass the actual <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that provides formatting information. (Its implementation of <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> simply returns itself.)  </p>\n</li>\n<li><p>You can pass a <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that specifies the culture whose formatting is to be used. Its <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_NumberFormat_\" data-linktype=\"relative-path\">NumberFormat</a> property provides formatting information.  </p>\n</li>\n<li><p>You can pass a custom <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation. Its <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method must instantiate and return the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that provides formatting information.  </p>\n<p>If <code>provider</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object for the current culture is used.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the Parse method to convert various string representations of numbers to 64-bit unsigned integer values.  </p>\n<pre><code class=\"lang-cs\" name=\"System.UInt64.Parse#4\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      string[] cultureNames= { &quot;en-US&quot;, &quot;fr-FR&quot; };\n      NumberStyles[] styles= { NumberStyles.Integer,\n                               NumberStyles.Integer | NumberStyles.AllowDecimalPoint };\n      string[] values = { &quot;170209&quot;, &quot;+170209.0&quot;, &quot;+170209,0&quot;, &quot;-103214.00&quot;,\n                                 &quot;-103214,00&quot;, &quot;104561.1&quot;, &quot;104561,1&quot; };\n      \n      // Parse strings using each culture\n      foreach (string cultureName in cultureNames)\n      {\n         CultureInfo ci = new CultureInfo(cultureName);\n         Console.WriteLine(&quot;Parsing strings using the {0} culture&quot;, \n                           ci.DisplayName);\n         // Use each style.\n         foreach (NumberStyles style in styles)\n         {\n            Console.WriteLine(&quot;   Style: {0}&quot;, style.ToString());\n            // Parse each numeric string.\n            foreach (string value in values)\n            {\n               try {\n                  Console.WriteLine(&quot;      Converted &#39;{0}&#39; to {1}.&quot;, value,\n                                    UInt64.Parse(value, style, ci));\n               }\n               catch (FormatException) {\n                  Console.WriteLine(&quot;      Unable to parse &#39;{0}&#39;.&quot;, value);\n               }      \n               catch (OverflowException) {\n                  Console.WriteLine(&quot;      &#39;{0}&#39; is out of range of the UInt64 type.&quot;,\n                                    value);\n               }\n            }\n         }\n      }                                    \n   }\n}\n// The example displays the following output:\n//       Style: Integer\n//          Converted &#39;170209&#39; to 170209.\n//          Unable to parse &#39;+170209.0&#39;.\n//          Unable to parse &#39;+170209,0&#39;.\n//          Unable to parse &#39;-103214.00&#39;.\n//          Unable to parse &#39;-103214,00&#39;.\n//          Unable to parse &#39;104561.1&#39;.\n//          Unable to parse &#39;104561,1&#39;.\n//       Style: Integer, AllowDecimalPoint\n//          Converted &#39;170209&#39; to 170209.\n//          Converted &#39;+170209.0&#39; to 170209.\n//          Unable to parse &#39;+170209,0&#39;.\n//          &#39;-103214.00&#39; is out of range of the UInt64 type.\n//          Unable to parse &#39;-103214,00&#39;.\n//          &#39;104561.1&#39; is out of range of the UInt64 type.\n//          Unable to parse &#39;104561,1&#39;.\n//    Parsing strings using the French (France) culture\n//       Style: Integer\n//          Converted &#39;170209&#39; to 170209.\n//          Unable to parse &#39;+170209.0&#39;.\n//          Unable to parse &#39;+170209,0&#39;.\n//          Unable to parse &#39;-103214.00&#39;.\n//          Unable to parse &#39;-103214,00&#39;.\n//          Unable to parse &#39;104561.1&#39;.\n//          Unable to parse &#39;104561,1&#39;.\n//       Style: Integer, AllowDecimalPoint\n//          Converted &#39;170209&#39; to 170209.\n//          Unable to parse &#39;+170209.0&#39;.\n//          Converted &#39;+170209,0&#39; to 170209.\n//          Unable to parse &#39;-103214.00&#39;.\n//          &#39;-103214,00&#39; is out of range of the UInt64 type.\n//          Unable to parse &#39;104561.1&#39;.\n//          &#39;104561,1&#39; is out of range of the UInt64 type.\n</code></pre><pre><code class=\"lang-vb\" name=\"System.UInt64.Parse#4\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      Dim cultureNames() As String = { &quot;en-US&quot;, &quot;fr-FR&quot; }\n      Dim styles() As NumberStyles = { NumberStyles.Integer, _\n                                       NumberStyles.Integer Or NumberStyles.AllowDecimalPoint }\n      Dim values() As String = { &quot;170209&quot;, &quot;+170209.0&quot;, &quot;+170209,0&quot;, &quot;-103214.00&quot;, _\n                                 &quot;-103214,00&quot;, &quot;104561.1&quot;, &quot;104561,1&quot; }\n      \n      &#39; Parse strings using each culture\n      For Each cultureName As String In cultureNames\n         Dim ci As New CultureInfo(cultureName)\n         Console.WriteLine(&quot;Parsing strings using the {0} culture&quot;, ci.DisplayName)\n         &#39; Use each style.\n         For Each style As NumberStyles In styles\n            Console.WriteLine(&quot;   Style: {0}&quot;, style.ToString())\n            &#39; Parse each numeric string.\n            For Each value As String In values\n               Try\n                  Console.WriteLine(&quot;      Converted &#39;{0}&#39; to {1}.&quot;, value, _\n                                    UInt64.Parse(value, style, ci))\n               Catch e As FormatException\n                  Console.WriteLine(&quot;      Unable to parse &#39;{0}&#39;.&quot;, value)   \n               Catch e As OverflowException\n                  Console.WriteLine(&quot;      &#39;{0}&#39; is out of range of the UInt64 type.&quot;, _\n                                    value)         \n               End Try\n            Next\n         Next\n      Next                                    \n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       Style: Integer\n&#39;          Converted &#39;170209&#39; to 170209.\n&#39;          Unable to parse &#39;+170209.0&#39;.\n&#39;          Unable to parse &#39;+170209,0&#39;.\n&#39;          Unable to parse &#39;-103214.00&#39;.\n&#39;          Unable to parse &#39;-103214,00&#39;.\n&#39;          Unable to parse &#39;104561.1&#39;.\n&#39;          Unable to parse &#39;104561,1&#39;.\n&#39;       Style: Integer, AllowDecimalPoint\n&#39;          Converted &#39;170209&#39; to 170209.\n&#39;          Converted &#39;+170209.0&#39; to 170209.\n&#39;          Unable to parse &#39;+170209,0&#39;.\n&#39;          &#39;-103214.00&#39; is out of range of the UInt64 type.\n&#39;          Unable to parse &#39;-103214,00&#39;.\n&#39;          &#39;104561.1&#39; is out of range of the UInt64 type.\n&#39;          Unable to parse &#39;104561,1&#39;.\n&#39;    Parsing strings using the French (France) culture\n&#39;       Style: Integer\n&#39;          Converted &#39;170209&#39; to 170209.\n&#39;          Unable to parse &#39;+170209.0&#39;.\n&#39;          Unable to parse &#39;+170209,0&#39;.\n&#39;          Unable to parse &#39;-103214.00&#39;.\n&#39;          Unable to parse &#39;-103214,00&#39;.\n&#39;          Unable to parse &#39;104561.1&#39;.\n&#39;          Unable to parse &#39;104561,1&#39;.\n&#39;       Style: Integer, AllowDecimalPoint\n&#39;          Converted &#39;170209&#39; to 170209.\n&#39;          Unable to parse &#39;+170209.0&#39;.\n&#39;          Converted &#39;+170209,0&#39; to 170209.\n&#39;          Unable to parse &#39;-103214.00&#39;.\n&#39;          &#39;-103214,00&#39; is out of range of the UInt64 type.\n&#39;          Unable to parse &#39;104561.1&#39;.\n&#39;          &#39;104561,1&#39; is out of range of the UInt64 type.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_ToString\">\r\n    \r\n            <a id=\"System_UInt64_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Converts the numeric value of this instance to its equivalent string representation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeroes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ToString method formats a <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> value in the default (&quot;G&quot;, or general) format by using the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object of the current culture. If you want to specify a different format or culture, use the other overloads of the <a class=\"xref\" href=\"system.uint64#System_UInt64_ToString_\" data-linktype=\"relative-path\">ToString</a> method, as follows:  </p>\n<table>\n<thead>\n<tr>\n<th>To use format</th>\n<th>For culture</th>\n<th>Use the overload</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Default (&quot;G&quot;) format</td>\n<td>A specific culture</td>\n<td><a class=\"xref\" href=\"system.uint64#System_UInt64_ToString_System_IFormatProvider_\" data-linktype=\"relative-path\">ToString(IFormatProvider)</a></td>\n</tr>\n<tr>\n<td>A specific format</td>\n<td>Default (current) culture</td>\n<td><a class=\"xref\" href=\"system.uint64#System_UInt64_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a></td>\n</tr>\n<tr>\n<td>A specific format</td>\n<td>A specific culture</td>\n<td><a class=\"xref\" href=\"system.uint64#System_UInt64_ToString_System_String_System_IFormatProvider_\" data-linktype=\"relative-path\">ToString(String,IFormatProvider)</a></td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays a <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> value by using the default ToString method. It also displays the string representations of the <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> value that results from using some standard format specifiers. The examples are displayed using the formatting conventions of the en-US culture.  </p>\n<pre><code class=\"lang-cs\" name=\"System.UInt64.ToString#1\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      ulong value = 163249057;\n      // Display value using default ToString method.\n      Console.WriteLine(value.ToString());      \n      Console.WriteLine();\n      \n      // Define an array of format specifiers.\n      string[] formats = { &quot;G&quot;, &quot;C&quot;, &quot;D&quot;, &quot;F&quot;, &quot;N&quot;, &quot;X&quot; };\n      // Display value using the standard format specifiers.\n      foreach (string format in formats)\n         Console.WriteLine(&quot;{0} format specifier: {1,16}&quot;, \n                           format, value.ToString(format));         \n   }\n}\n// The example displays the following output:\n//       163249057\n//       \n//       G format specifier:        163249057\n//       C format specifier:  $163,249,057.00\n//       D format specifier:        163249057\n//       F format specifier:     163249057.00\n//       N format specifier:   163,249,057.00\n//       X format specifier:          9BAFBA1\n</code></pre><pre><code class=\"lang-vb\" name=\"System.UInt64.ToString#1\">Module Example\n   Public Sub Main()\n      Dim value As ULong = 163249057\n      &#39; Display value using default ToString method.\n      Console.WriteLine(value.ToString())            \n      Console.WriteLine()\n      \n      &#39; Define an array of format specifiers.\n      Dim formats() As String = { &quot;G&quot;, &quot;C&quot;, &quot;D&quot;, &quot;F&quot;, &quot;N&quot;, &quot;X&quot; }\n      &#39; Display value using the standard format specifiers.\n      For Each format As String In formats\n         Console.WriteLine(&quot;{0} format specifier: {1,16}&quot;, _\n                           format, value.ToString(format))         \n      Next\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       163249057\n&#39;       \n&#39;       G format specifier:        163249057\n&#39;       C format specifier:  $163,249,057.00\n&#39;       D format specifier:        163249057\n&#39;       F format specifier:     163249057.00\n&#39;       N format specifier:   163,249,057.00\n&#39;       X format specifier:          9BAFBA1\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_ToString_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_UInt64_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ToString (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that supplies culture-specific formatting information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeros.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ToString method formats a <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> value in the default (&quot;G&quot;, or general) format by using the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object of a specified culture. If you want to specify a different format or the current culture, use the other overloads of the <a class=\"xref\" href=\"system.uint64#System_UInt64_ToString_\" data-linktype=\"relative-path\">ToString</a> method, as follows:  </p>\n<table>\n<thead>\n<tr>\n<th>To use format</th>\n<th>For culture</th>\n<th>Use the overload</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Default (&quot;G&quot;) format</td>\n<td>Default (current) culture</td>\n<td><a class=\"xref\" href=\"system.uint64#System_UInt64_ToString\" data-linktype=\"relative-path\">ToString()</a></td>\n</tr>\n<tr>\n<td>A specific format</td>\n<td>Default (current) culture</td>\n<td><a class=\"xref\" href=\"system.uint64#System_UInt64_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a></td>\n</tr>\n<tr>\n<td>A specific format</td>\n<td>A specific culture</td>\n<td><a class=\"xref\" href=\"system.uint64#System_UInt64_ToString_System_String_System_IFormatProvider_\" data-linktype=\"relative-path\">ToString(String,IFormatProvider)</a></td>\n</tr>\n</tbody>\n</table>\n<p> The <code>provider</code> parameter is an <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation. Its <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method returns a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that provides culture-specific formatting information. However, none of the properties of the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> are used when formatting with the general numeric format specifier (&quot;G&quot;).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example formats a 64-bit signed integer value by using several format providers, including one for the invariant culture. The output from the example illustrates that the formatted string returned by the ToString method is the same regardless of the format provider.  </p>\n<pre><code class=\"lang-vb\" name=\"System.UInt64.ToString#2\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      &#39; Define an array of CultureInfo objects.\n      Dim ci() As CultureInfo = { New CultureInfo(&quot;en-US&quot;), _\n                                  New CultureInfo(&quot;fr-FR&quot;), _\n                                  CultureInfo.InvariantCulture } \n      Dim value As ULong = 18709243\n      Console.WriteLine(&quot;  {0,12}   {1,12}   {2,12}&quot;, _\n                        GetName(ci(0)), GetName(ci(1)), GetName(ci(2))) \n      Console.WriteLine(&quot;  {0,12}   {1,12}   {2,12}&quot;, _\n                        value.ToString(ci(0)), value.ToString(ci(1)), value.ToString(ci(2)))            \n      \n   End Sub\n   \n   Private Function GetName(ci As CultureInfo) As String\n      If ci.Equals(CultureInfo.InvariantCulture) Then\n         Return &quot;Invariant&quot;\n      Else\n         Return ci.Name\n      End If   \n   End Function\nEnd Module\n&#39; The example displays the following output:\n&#39;             en-US          fr-FR      Invariant\n&#39;          18709243       18709243       18709243\n</code></pre><pre><code class=\"lang-cs\" name=\"System.UInt64.ToString#2\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      // Define an array of CultureInfo objects.\n      CultureInfo[] ci = { new CultureInfo(&quot;en-US&quot;), \n                           new CultureInfo(&quot;fr-FR&quot;), \n                           CultureInfo.InvariantCulture }; \n      ulong value = 18709243;\n      Console.WriteLine(&quot;  {0,12}   {1,12}   {2,12}&quot;, \n                        GetName(ci[0]), GetName(ci[1]), GetName(ci[2])); \n      Console.WriteLine(&quot;  {0,12}   {1,12}   {2,12}&quot;, \n                        value.ToString(ci[0]), value.ToString(ci[1]), value.ToString(ci[2]));   \n   }\n\n   private static string GetName(CultureInfo ci)\n   {\n      if (ci.Equals(CultureInfo.InvariantCulture))\n         return &quot;Invariant&quot;;\n      else\n         return ci.Name;         \n   }\n}\n// The example displays the following output:\n//             en-US          fr-FR      Invariant\n//          18709243       18709243       18709243\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_ToString_System_String_\">\r\n    \r\n            <a id=\"System_UInt64_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the numeric value of this instance to its equivalent string representation using the specified format.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ToString (string format);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A numeric format string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The string representation of the value of this instance as specified by <code>format</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p>The <code>format</code> parameter is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ToString method formats a <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> value in a specified format by using a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that represents the conventions of the current culture. If you want to use the default (&quot;G&quot;, or general) format or specify a different culture, use the other overloads of the ToString method, as follows:  </p>\n<table>\n<thead>\n<tr>\n<th>To use format</th>\n<th>For culture</th>\n<th>Use the overload</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Default (&quot;G&quot;) format</td>\n<td>Default (current) culture</td>\n<td><a class=\"xref\" href=\"system.uint64#System_UInt64_ToString\" data-linktype=\"relative-path\">ToString()</a></td>\n</tr>\n<tr>\n<td>Default (&quot;G&quot;) format</td>\n<td>A specific culture</td>\n<td><a class=\"xref\" href=\"system.uint64#System_UInt64_ToString_System_IFormatProvider_\" data-linktype=\"relative-path\">ToString(IFormatProvider)</a></td>\n</tr>\n<tr>\n<td>A specific format</td>\n<td>A specific culture</td>\n<td><a class=\"xref\" href=\"system.uint64#System_UInt64_ToString_System_String_System_IFormatProvider_\" data-linktype=\"relative-path\">ToString(String,IFormatProvider)</a></td>\n</tr>\n</tbody>\n</table>\n<p> The <code>format</code> parameter can be any valid <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a>, or any combination of <a href=\"../Topic/Custom%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Numeric Format Strings</a>. If <code>format</code> is equal to <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">System.String.Empty</a> or is <code>null</code>, the return value of the current <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> object is formatted with the general format specifier (&quot;G&quot;). If <code>format</code> is any other value, the method throws a <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.  </p>\n<p> The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:  </p>\n<ul>\n<li><p>For more information about numeric format specifiers, see <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a> and <a href=\"../Topic/Custom%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Numeric Format Strings</a>.  </p>\n</li>\n<li><p>For more information about support for formatting in the .NET Framework, see <a href=\"../Topic/Formatting%20Types%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Formatting Types</a>.  </p>\n<p>The format of the returned string is determined by the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object for the current culture. Depending on the <code>format</code> parameter, this object controls symbols such as the group separator and the decimal point symbol in the output string. To provide formatting information for cultures other than the current culture, call the <a class=\"xref\" href=\"system.uint64#System_UInt64_ToString_System_String_System_IFormatProvider_\" data-linktype=\"relative-path\">ToString(String,IFormatProvider)</a> overload.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays a 64-bit unsigned integer value by using each standard format string and some custom format strings.  </p>\n<pre><code class=\"lang-cs\" name=\"System.UInt64.ToString#3\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      ulong value = 217960834;\n      string[] specifiers = { &quot;G&quot;, &quot;C&quot;, &quot;D3&quot;, &quot;E2&quot;, &quot;e3&quot;, &quot;F&quot;, \n                              &quot;N&quot;, &quot;P&quot;, &quot;X&quot;, &quot;000000.0&quot;, &quot;#.0&quot;, \n                              &quot;00000000;(0);**Zero**&quot; };\n      \n      foreach (string specifier in specifiers)\n         Console.WriteLine(&quot;{0}: {1}&quot;, specifier, value.ToString(specifier));\n   }\n}\n// The example displays the following output:\n//       G: 217960834\n//       C: $217,960,834.00\n//       D3: 217960834\n//       E2: 2.18E+008\n//       e3: 2.180e+008\n//       F: 217960834.00\n//       N: 217,960,834.00\n//       P: 21,796,083,400.00 %\n//       X: CFDD182\n//       000000.0: 217960834.0\n//       #.0: 217960834.0\n//       00000000;(0);**Zero**: 217960834\n</code></pre><pre><code class=\"lang-vb\" name=\"System.UInt64.ToString#3\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      Dim value As ULong = 217960834 \n      Dim specifiers() As String = { &quot;G&quot;, &quot;C&quot;, &quot;D3&quot;, &quot;E2&quot;, &quot;e3&quot;, &quot;F&quot;, _\n                                     &quot;N&quot;, &quot;P&quot;, &quot;X&quot;, &quot;000000.0&quot;, &quot;#.0&quot;, _\n                                     &quot;00000000;(0);**Zero**&quot; }\n      \n      For Each specifier As String In specifiers\n         Console.WriteLine(&quot;{0}: {1}&quot;, specifier, value.ToString(specifier))\n      Next\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       G: 217960834\n&#39;       C: $217,960,834.00\n&#39;       D3: 217960834\n&#39;       E2: 2.18E+008\n&#39;       e3: 2.180e+008\n&#39;       F: 217960834.00\n&#39;       N: 217,960,834.00\n&#39;       P: 21,796,083,400.00 %\n&#39;       X: CFDD182\n&#39;       000000.0: 217960834.0\n&#39;       #.0: 217960834.0\n&#39;       00000000;(0);**Zero**: 217960834\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_ToString_System_String_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_UInt64_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(String,IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ToString (string format, IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A numeric format string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that supplies culture-specific formatting information about this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The string representation of the value of this instance as specified by <code>format</code> and <code>provider</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p>The <code>format</code> parameter is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ToString method formats a <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> value in a specified format by using the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object of a specified culture. If you want to use default format or culture settings, use the other overloads of the <a class=\"xref\" href=\"system.uint64#System_UInt64_ToString_\" data-linktype=\"relative-path\">ToString</a> method, as follows:  </p>\n<table>\n<thead>\n<tr>\n<th>To use format</th>\n<th>For culture</th>\n<th>Use the overload</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Default (&quot;G&quot;) format</td>\n<td>Default (current) culture</td>\n<td><a class=\"xref\" href=\"system.uint64#System_UInt64_ToString\" data-linktype=\"relative-path\">ToString()</a></td>\n</tr>\n<tr>\n<td>Default (&quot;G&quot;) format</td>\n<td>A specific culture</td>\n<td><a class=\"xref\" href=\"system.uint64#System_UInt64_ToString_System_IFormatProvider_\" data-linktype=\"relative-path\">ToString(IFormatProvider)</a></td>\n</tr>\n<tr>\n<td>A specific format</td>\n<td>Default (current) culture</td>\n<td><a class=\"xref\" href=\"system.uint64#System_UInt64_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a></td>\n</tr>\n</tbody>\n</table>\n<p> The <code>format</code> parameter can be any valid <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a>, or any combination of <a href=\"../Topic/Custom%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Numeric Format Strings</a>. If <code>format</code> is equal to <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">System.String.Empty</a> or is <code>null</code>, the return value of the current <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> object is formatted with the general format specifier (&quot;G&quot;). If <code>format</code> is any other value, the method throws a <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.  </p>\n<p> The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:  </p>\n<ul>\n<li><p>For more information about numeric format specifiers, see <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a> and <a href=\"../Topic/Custom%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Numeric Format Strings</a>.  </p>\n</li>\n<li><p>For more information about formatting, see <a href=\"../Topic/Formatting%20Types%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Formatting Types</a>.  </p>\n<p>The <code>provider</code> parameter is an <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation. Its <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method returns a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that provides culture-specific information about the format of the string returned by this method. When the ToString method is invoked, it calls the <code>provider</code> parameter&#39;s <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method and passes it a <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> object that represents the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> type. The <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method then returns the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that provides information for formatting the current <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> value, such as the group separator symbol or the decimal point symbol. There are three ways to use the <code>provider</code> parameter to supply formatting information to the ToString method:  </p>\n</li>\n<li><p>You can pass a <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the culture that supplies formatting information. Its <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method returns the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that provides numeric formatting information for that culture.  </p>\n</li>\n<li><p>You can pass the actual <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that provides numeric formatting information. (Its implementation of <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> just returns itself.)  </p>\n</li>\n<li><p>You can pass a custom object that implements <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a>. Its <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method instantiates and returns the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that provides formatting information.  </p>\n<p>If <code>provider</code> is <code>null</code>, the formatting of the returned string is based on the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object of the current culture.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays a 32-bit unsigned integer value by using the standard numeric format specifiers and a number of specific <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> objects.  </p>\n<pre><code class=\"lang-vb\" name=\"System.UInt64.ToString#4\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      &#39; Define cultures whose formatting conventions are to be used.\n      Dim cultures() As CultureInfo = {CultureInfo.CreateSpecificCulture(&quot;en-US&quot;), _\n                                       CultureInfo.CreateSpecificCulture(&quot;fr-FR&quot;), _\n                                       CultureInfo.CreateSpecificCulture(&quot;es-ES&quot;) }\n      Dim specifiers() As String = {&quot;G&quot;, &quot;C&quot;, &quot;D4&quot;, &quot;E2&quot;, &quot;F&quot;, &quot;N&quot;, &quot;P&quot;, &quot;X2&quot;} \n      Dim value As ULong = 22224021\n      \n      For Each specifier As String In specifiers\n         For Each culture As CultureInfo In Cultures\n            Console.WriteLine(&quot;{0,2} format using {1} culture: {2, 18}&quot;, _ \n                              specifier, culture.Name, _\n                              value.ToString(specifier, culture))\n\n         Next\n         Console.WriteLine()\n      Next\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;        G format using en-US culture:           22224021\n&#39;        G format using fr-FR culture:           22224021\n&#39;        G format using es-ES culture:           22224021\n&#39;       \n&#39;        C format using en-US culture:     $22,224,021.00\n&#39;        C format using fr-FR culture:    22&#160;224&#160;021,00 ?\n&#39;        C format using es-ES culture:    22.224.021,00 ?\n&#39;       \n&#39;       D4 format using en-US culture:           22224021\n&#39;       D4 format using fr-FR culture:           22224021\n&#39;       D4 format using es-ES culture:           22224021\n&#39;       \n&#39;       E2 format using en-US culture:          2.22E+007\n&#39;       E2 format using fr-FR culture:          2,22E+007\n&#39;       E2 format using es-ES culture:          2,22E+007\n&#39;       \n&#39;        F format using en-US culture:        22224021.00\n&#39;        F format using fr-FR culture:        22224021,00\n&#39;        F format using es-ES culture:        22224021,00\n&#39;       \n&#39;        N format using en-US culture:      22,224,021.00\n&#39;        N format using fr-FR culture:      22&#160;224&#160;021,00\n&#39;        N format using es-ES culture:      22.224.021,00\n&#39;       \n&#39;        P format using en-US culture: 2,222,402,100.00 %\n&#39;        P format using fr-FR culture: 2&#160;222&#160;402&#160;100,00 %\n&#39;        P format using es-ES culture: 2.222.402.100,00 %\n&#39;       \n&#39;       X2 format using en-US culture:            1531C95\n&#39;       X2 format using fr-FR culture:            1531C95\n&#39;       X2 format using es-ES culture:            1531C95\n</code></pre><pre><code class=\"lang-cs\" name=\"System.UInt64.ToString#4\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      // Define cultures whose formatting conventions are to be used.\n      CultureInfo[] cultures = { CultureInfo.CreateSpecificCulture(&quot;en-US&quot;), \n                                 CultureInfo.CreateSpecificCulture(&quot;fr-FR&quot;), \n                                 CultureInfo.CreateSpecificCulture(&quot;es-ES&quot;) };\n      string[] specifiers = {&quot;G&quot;, &quot;C&quot;, &quot;D4&quot;, &quot;E2&quot;, &quot;F&quot;, &quot;N&quot;, &quot;P&quot;, &quot;X2&quot;}; \n      ulong value = 22224021;\n      \n      foreach (string specifier in specifiers)\n      {\n         foreach (CultureInfo culture in cultures)\n            Console.WriteLine(&quot;{0,2} format using {1} culture: {2, 18}&quot;,  \n                              specifier, culture.Name, \n                              value.ToString(specifier, culture));\n         Console.WriteLine();\n      }\n   }\n}\n// The example displays the following output:\n//        G format using en-US culture:           22224021\n//        G format using fr-FR culture:           22224021\n//        G format using es-ES culture:           22224021\n//       \n//        C format using en-US culture:     $22,224,021.00\n//        C format using fr-FR culture:    22&#160;224&#160;021,00 ?\n//        C format using es-ES culture:    22.224.021,00 ?\n//       \n//       D4 format using en-US culture:           22224021\n//       D4 format using fr-FR culture:           22224021\n//       D4 format using es-ES culture:           22224021\n//       \n//       E2 format using en-US culture:          2.22E+007\n//       E2 format using fr-FR culture:          2,22E+007\n//       E2 format using es-ES culture:          2,22E+007\n//       \n//        F format using en-US culture:        22224021.00\n//        F format using fr-FR culture:        22224021,00\n//        F format using es-ES culture:        22224021,00\n//       \n//        N format using en-US culture:      22,224,021.00\n//        N format using fr-FR culture:      22&#160;224&#160;021,00\n//        N format using es-ES culture:      22.224.021,00\n//       \n//        P format using en-US culture: 2,222,402,100.00 %\n//        P format using fr-FR culture: 2&#160;222&#160;402&#160;100,00 %\n//        P format using es-ES culture: 2.222.402.100,00 %\n//       \n//       X2 format using en-US culture:            1531C95\n//       X2 format using fr-FR culture:            1531C95\n//       X2 format using es-ES culture:            1531C95\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_TryParse_System_String_System_UInt64__\">\r\n    \r\n            <a id=\"System_UInt64_TryParse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TryParse(String,UInt64)</div>        \r\n          </div>\r\n    \r\n            <p>Tries to convert the string representation of a number to its 64-bit unsigned integer equivalent. A return value indicates whether the conversion succeeded or failed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool TryParse (string s, out ulong result);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that represents the number to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>result</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, contains the 64-bit unsigned integer value that is equivalent to the number contained in <code>s</code>, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <code>s</code> parameter is <code>null</code> or <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>, is not of the correct format, or represents a number less than <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> or greater than <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a>. This parameter is passed uninitialized; any value originally supplied in <code>result</code> will be overwritten.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>s</code> was converted successfully; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The TryParse method is like the <a class=\"xref\" href=\"system.uint64#System_UInt64_Parse_System_String_\" data-linktype=\"relative-path\">Parse(String)</a> method, except that it does not throw an exception if the conversion fails. This method eliminates the need to use exception handling to test for a <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a> if <code>s</code> is invalid and cannot be successfully parsed.  </p>\n<p> The <code>s</code> parameter should be the string representation of a decimal number in the following form:  </p>\n<p> [<em>ws</em>][<em>sign</em>]<em>digits</em>[<em>ws</em>]  </p>\n<p> Elements in square brackets ([ and ]) are optional. The following table describes each element.  </p>\n<table>\n<thead>\n<tr>\n<th>Element</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>ws</em></td>\n<td>Optional white space.</td>\n</tr>\n<tr>\n<td><em>sign</em></td>\n<td>An optional sign. Valid sign characters are determined by the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NegativeSign_\" data-linktype=\"relative-path\">NegativeSign</a> and <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_PositiveSign_\" data-linktype=\"relative-path\">PositiveSign</a> properties of the current culture.</td>\n</tr>\n<tr>\n<td><em>digits</em></td>\n<td>A sequence of decimal digits ranging from 0 to 9.</td>\n</tr>\n</tbody>\n</table>\n<p> The <code>s</code> parameter is interpreted by using the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> style. In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed. To explicitly define the style elements with the culture-specific formatting information that can be present in <code>s</code>, call the <a class=\"xref\" href=\"system.uint64#System_UInt64_TryParse_System_String_System_Globalization_NumberStyles_System_IFormatProvider_System_UInt64__\" data-linktype=\"relative-path\">TryParse(String,NumberStyles,IFormatProvider,UInt64)</a> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The string specified by the <code>s</code> parameter cannot contain any group separators or decimal separator, and it cannot have a fractional portion.  </p>\n</div>\n<p> The <code>s</code> parameter is parsed using the formatting information in a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object initialized for the current system culture. For more information, see <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrentInfo_\" data-linktype=\"relative-path\">CurrentInfo</a>.  </p>\n<p> This overload interprets all digits in the <code>s</code> parameter as decimal digits. To parse the string representation of a hexadecimal number, call the <a class=\"xref\" href=\"system.uint64#System_UInt64_TryParse_System_String_System_Globalization_NumberStyles_System_IFormatProvider_System_UInt64__\" data-linktype=\"relative-path\">TryParse(String,NumberStyles,IFormatProvider,UInt64)</a> overload instead.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls the TryParse method once for each element in a string array.  </p>\n<pre><code class=\"lang-cs\" name=\"System.UInt64.TryParse#1\">      string[] numericStrings = { &quot;1293.8&quot;, &quot;+1671.7&quot;, &quot;28347.&quot;, \n                                  &quot;   33113684  &quot;, &quot;(0)&quot;, &quot;-0&quot;, &quot;+1293617&quot;, \n                                  &quot;18-&quot;, &quot;119870&quot;, &quot;31,024&quot;, &quot;  3127094 &quot;,  \n                                  &quot;00700000&quot; };\n      ulong number;\n      foreach (string numericString in numericStrings)\n      {\n         if (UInt64.TryParse(numericString, out number)) \n            Console.WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, numericString, number);\n         else\n            Console.WriteLine(&quot;Cannot convert &#39;{0}&#39; to a UInt64.&quot;, numericString);\n      }\n      // The example displays the following output:\n      //       Cannot convert &#39;1293.8&#39; to a UInt64.\n      //       Cannot convert &#39;+1671.7&#39; to a UInt64.\n      //       Cannot convert &#39;28347.&#39; to a UInt64.\n      //       Converted &#39;   33113684  &#39; to 33113684.\n      //       Cannot convert &#39;(0)&#39; to a UInt64.\n      //       Converted &#39;-0&#39; to 0.\n      //       Converted &#39;+1293617&#39; to 1293617.\n      //       Cannot convert &#39;18-&#39; to a UInt64.\n      //       Converted &#39;119870&#39; to 119870.\n      //       Cannot convert &#39;31,024&#39; to a UInt64.\n      //       Converted &#39;  3127094 &#39; to 3127094.\n      //       Converted &#39;0070000&#39; to 70000.\n</code></pre><pre><code class=\"lang-vb\" name=\"System.UInt64.TryParse#1\">      Dim numericStrings() As String = {&quot;1293.8&quot;, &quot;+1671.7&quot;, &quot;28347.&quot;, _\n                                        &quot;   33113684  &quot;, &quot;(0)&quot;, &quot;-0&quot;, &quot;+1293617&quot;, _\n                                        &quot;18-&quot;, &quot;119870&quot;, &quot;31,024&quot;, &quot;  3127094 &quot;, _ \n                                        &quot;0070000&quot; }\n      Dim number As ULong\n      For Each numericString As String In numericStrings\n         If UInt64.TryParse(numericString, number) Then\n            Console.WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, numericString, number)\n         Else\n            Console.WriteLine(&quot;Cannot convert &#39;{0}&#39; to a UInt64.&quot;, numericString)\n         End If      \n      Next\n      &#39; The example displays the following output:\n      &#39;       Cannot convert &#39;1293.8&#39; to a UInt64.\n      &#39;       Cannot convert &#39;+1671.7&#39; to a UInt64.\n      &#39;       Cannot convert &#39;28347.&#39; to a UInt64.\n      &#39;       Converted &#39;   33113684  &#39; to 33113684.\n      &#39;       Cannot convert &#39;(0)&#39; to a UInt64.\n      &#39;       Converted &#39;-0&#39; to 0.\n      &#39;       Converted &#39;+1293617&#39; to 1293617.\n      &#39;       Cannot convert &#39;18-&#39; to a UInt64.\n      &#39;       Converted &#39;119870&#39; to 119870.\n      &#39;       Cannot convert &#39;31,024&#39; to a UInt64.\n      &#39;       Converted &#39;  3127094 &#39; to 3127094.\n      &#39;       Converted &#39;0070000&#39; to 70000.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_TryParse_System_String_System_Globalization_NumberStyles_System_IFormatProvider_System_UInt64__\">\r\n    \r\n            <a id=\"System_UInt64_TryParse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TryParse(String,NumberStyles,IFormatProvider,UInt64)</div>        \r\n          </div>\r\n    \r\n            <p>Tries to convert the string representation of a number in a specified style and culture-specific format to its 64-bit unsigned integer equivalent. A return value indicates whether the conversion succeeded or failed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out ulong result);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that represents the number to convert. The string is interpreted by using the style specified by the <code>style</code> parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>style</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of enumeration values that indicates the permitted format of <code>s</code>. A typical value to specify is <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that supplies culture-specific formatting information about <code>s</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>result</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, contains the 64-bit unsigned integer value equivalent to the number contained in <code>s</code>, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <code>s</code> parameter is <code>null</code> or <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, is not in a format compliant with <code>style</code>, or represents a number less than <a class=\"xref\" href=\"system.uint64#System_UInt64_MinValue\" data-linktype=\"relative-path\">MinValue</a> or greater than <a class=\"xref\" href=\"system.uint64#System_UInt64_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>. This parameter is passed uninitialized; any value originally supplied in <code>result</code> will be overwritten.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>s</code> was converted successfully; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>style</code> is not a <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> value.  </p>\n<p> -or-  </p>\n<p> <code>style</code> is not a combination of <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> and <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The TryParse method is like the <a class=\"xref\" href=\"system.uint64#System_UInt64_Parse_System_String_System_Globalization_NumberStyles_System_IFormatProvider_\" data-linktype=\"relative-path\">Parse(String,NumberStyles,IFormatProvider)</a> method, except that it does not throw an exception if the conversion fails. This method eliminates the need to use exception handling to test for a <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a> if <code>s</code> is invalid and cannot be parsed successfully.  </p>\n<p> The <code>style</code> parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the <code>s</code> parameter for the parse operation to succeed. It must be a combination of bit flags from the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> enumeration. Depending on the value of <code>style</code>, the <code>s</code> parameter may include the following elements:  </p>\n<p> [<em>ws</em>][<em>$</em>][<em>sign</em>][<em>digits</em>,]<em>digits</em>[.<em>fractional_digits</em>][E[<em>sign</em>]<em>exponential_digits</em>][<em>ws</em>]  </p>\n<p> Items in square brackets ([ and ]) are optional. Or, if the <code>style</code> parameter includes <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a>, the <code>s</code> parameter may include the following elements:  </p>\n<p> [<em>ws</em>]<em>hexdigits</em>[<em>ws</em>]  </p>\n<p> The following table describes each element.  </p>\n<table>\n<thead>\n<tr>\n<th>Element</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>ws</em></td>\n<td>Optional white space. White space can appear at the start of <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag, or at the end of <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>$</em></td>\n<td>A culture-specific currency symbol. Its position in the string is defined by the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrencyPositivePattern_\" data-linktype=\"relative-path\">CurrencyPositivePattern</a> property of the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object returned by the <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method of the <code>provider</code> parameter. The currency symbol can appear in <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>sign</em></td>\n<td>An optional sign. The sign can appear at the start of <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag, and it can appear at the end of <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag. Parentheses can be used in <code>s</code> to indicate a negative value if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag. However, if the negative sign is present, <code>s</code> can only represent the value zero for the parse operation to succeed.</td>\n</tr>\n<tr>\n<td><em>digits</em></td>\n<td>A sequence of digits from 0 through 9.</td>\n</tr>\n<tr>\n<td><em>,</em></td>\n<td>A culture-specific group separator. The group separator of the culture specified by <code>provider</code> can appear in <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>.</em></td>\n<td>A culture-specific decimal point symbol. The decimal point symbol of the culture specified by <code>provider</code> can appear in <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>fractional_digits</em></td>\n<td>One or more occurrences of the digit 0. Fractional digits can appear in <code>s</code> only if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td>E</td>\n<td>The &quot;e&quot; or &quot;E&quot; character, which indicates that the value is represented in exponential (scientific) notation. The <code>s</code> parameter can represent a number in exponential notation if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>exponential_digits</em></td>\n<td>A sequence of digits from 0 through 9. The <code>s</code> parameter can represent a number in exponential notation if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>hexdigits</em></td>\n<td>A sequence of hexadecimal digits from 0 through f, or 0 through F.</td>\n</tr>\n</tbody>\n</table>\n<p> A string with decimal digits only (which corresponds to the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag) always parses successfully. Most of the remaining <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> members control elements that may be present, but are not required to be present, in this input string. The following table indicates how individual <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> members affect the elements that may be present in <code>s</code>.  </p>\n<table>\n<thead>\n<tr>\n<th>Non-composite <code>NumberStyles</code> values</th>\n<th>Elements permitted in value in addition to digits</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>Decimal digits only.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>The decimal point (<em>.</em>) and <em>fractional_digits</em> elements. However, <em>fractional_digits</em> must consist of only one or more 0 digits, or the method returns <code>false</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>The &quot;e&quot; or &quot;E&quot; character, which indicates exponential notation, along with <em>exponential_digits</em>. If <code>s</code> represents a number in exponential notation, it cannot have a non-zero, fractional component.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>The <em>ws</em> element at the start of <code>s</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>The <em>ws</em> element at the end of <code>s</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>The <em>sign</em> element before <em>digits</em>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>The <em>sign</em> element after <em>digits</em>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>The <em>sign</em> element in the form of parentheses enclosing a zero numeric value.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>The group separator (<em>,</em>) element.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>The currency (<em>$</em>) element.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>All elements. However, <code>s</code> cannot represent a hexadecimal number or a number in exponential notation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>The <em>ws</em> element at the start or end of <code>s</code>, <em>sign</em> at the start of <code>s</code>, and the decimal point (<em>.</em>) symbol. The <code>s</code> parameter can also use exponential notation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>The <em>ws</em>, <em>sign</em>, group separator (<em>,</em>), and decimal point (<em>.</em>) elements.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></td>\n<td>All elements. However, <code>s</code> cannot represent a hexadecimal number.</td>\n</tr>\n</tbody>\n</table>\n<p> If the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag is used, <code>s</code> must be a hexadecimal value. Valid hexadecimal characters are 0-9, A-F, and a-f. A prefix such as &quot;0x&quot; is not supported and causes the parse operation to fail. The only other flags that can be present in <code>style</code> are <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> and <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a>. (The <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> enumeration has a composite style, <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a>, that includes both white-space flags.)  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If <code>s</code> is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as <code>0x</code> or <code>&amp;h</code>) that differentiates it as a hexadecimal number. This causes the conversion to fail.  </p>\n</div>\n<p> The <code>provider</code> parameter is an <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation. Its <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method returns a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that provides culture-specific information about the format of <code>s</code>. The <code>provider</code> parameter can be any one of the following:  </p>\n<ul>\n<li><p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the culture that supplies formatting information. Its <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method returns the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that provides numeric formatting information for that culture.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that provides numeric formatting information. (Its implementation of <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> just returns itself.)  </p>\n</li>\n<li><p>A custom object that implements <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a>. Its <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method instantiates and returns the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that provides formatting information.  </p>\n<p>If <code>provider</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object for the current culture is used.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls the TryParse method with a number of different strings and <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> values.  </p>\n<pre><code class=\"lang-cs\" name=\"System.UInt64.TryParse#2\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      string numericString;\n      NumberStyles styles;\n      \n      numericString = &quot;2106034&quot;;\n      styles = NumberStyles.Integer;\n      CallTryParse(numericString, styles);\n      \n      numericString = &quot;-10603&quot;;\n      styles = NumberStyles.None;\n      CallTryParse(numericString, styles);\n      \n      numericString = &quot;29103674.00&quot;;\n      styles = NumberStyles.Integer | NumberStyles.AllowDecimalPoint;\n      CallTryParse(numericString, styles);\n      \n      numericString = &quot;10345.72&quot;;\n      styles = NumberStyles.Integer | NumberStyles.AllowDecimalPoint;\n      CallTryParse(numericString, styles);\n\n      numericString = &quot;41792210E-01&quot;;\n      styles = NumberStyles.Integer | NumberStyles.AllowExponent;\n      CallTryParse(numericString, styles); \n      \n      numericString = &quot;9112E-01&quot;;\n      CallTryParse(numericString, styles);\n          \n      numericString = &quot;312E01&quot;;\n      CallTryParse(numericString, styles); \n      \n      numericString = &quot;FFC86DA1&quot;;\n      CallTryParse(numericString, NumberStyles.HexNumber);\n      \n      numericString = &quot;0x8F8C&quot;;\n      CallTryParse(numericString, NumberStyles.HexNumber);\n   }\n   \n   private static void CallTryParse(string stringToConvert, NumberStyles styles)\n   {\n      ulong number;\n      bool result = UInt64.TryParse(stringToConvert, styles, \n                                   CultureInfo.InvariantCulture, out number);\n      if (result)\n         Console.WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, stringToConvert, number);\n      else\n         Console.WriteLine(&quot;Attempted conversion of &#39;{0}&#39; failed.&quot;, \n                           Convert.ToString(stringToConvert));\n   }\n}\n// The example displays the following output:\n//       Converted &#39;2106034&#39; to 2106034.\n//       Attempted conversion of &#39;-10603&#39; failed.\n//       Converted &#39;29103674.00&#39; to 29103674.\n//       Attempted conversion of &#39;10345.72&#39; failed.\n//       Converted &#39;41792210E-01&#39; to 4179221.\n//       Attempted conversion of &#39;9112E-01&#39; failed.\n//       Converted &#39;312E01&#39; to 3120.\n//       Converted &#39;FFC86DA1&#39; to 4291325345.\n//       Attempted conversion of &#39;0x8F8C&#39; failed.\n</code></pre><pre><code class=\"lang-vb\" name=\"System.UInt64.TryParse#2\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      Dim numericString As String\n      Dim styles As NumberStyles\n      \n      numericString = &quot;2106034&quot;\n      styles = NumberStyles.Integer\n      CallTryParse(numericString, styles)\n      \n      numericString = &quot;-10603&quot;\n      styles = NumberStyles.None\n      CallTryParse(numericString, styles)\n      \n      numericString = &quot;29103674.00&quot;\n      styles = NumberStyles.Integer Or NumberStyles.AllowDecimalPoint\n      CallTryParse(numericString, styles)\n      \n      numericString = &quot;10345.72&quot;\n      styles = NumberStyles.Integer Or NumberStyles.AllowDecimalPoint\n      CallTryParse(numericString, styles)\n\n      numericString = &quot;41792210E-01&quot;\n      styles = NumberStyles.Integer Or NumberStyles.AllowExponent\n      CallTryParse(numericString, styles) \n      \n      numericString = &quot;9112E-01&quot;\n      CallTryParse(numericString, styles)\n          \n      numericString = &quot;312E01&quot;\n      CallTryParse(numericString, styles) \n      \n      numericString = &quot;FFC86DA1&quot;\n      CallTryParse(numericString, NumberStyles.HexNumber)\n      \n      numericString = &quot;0x8F8C&quot;\n      CallTryParse(numericString, NumberStyles.HexNumber)\n   End Sub\n   \n   Private Sub CallTryParse(stringToConvert As String, styles AS NumberStyles)\n      Dim number As ULong\n      Dim result As Boolean = UInt64.TryParse(stringToConvert, styles, _\n                                              CultureInfo.InvariantCulture, number)\n      If result Then\n         Console.WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, stringToConvert, number)\n      Else\n         Console.WriteLine(&quot;Attempted conversion of &#39;{0}&#39; failed.&quot;, _\n                           Convert.ToString(stringToConvert))\n      End If                                                                           \n   End Sub\nEnd Module\n&#39; The example displays the following output to the console:\n&#39;       Converted &#39;2106034&#39; to 2106034.\n&#39;       Attempted conversion of &#39;-10603&#39; failed.\n&#39;       Converted &#39;29103674.00&#39; to 29103674.\n&#39;       Attempted conversion of &#39;10345.72&#39; failed.\n&#39;       Converted &#39;41792210E-01&#39; to 4179221.\n&#39;       Attempted conversion of &#39;9112E-01&#39; failed.\n&#39;       Converted &#39;312E01&#39; to 3120.\n&#39;       Converted &#39;FFC86DA1&#39; to 4291325345.\n&#39;       Attempted conversion of &#39;0x8F8C&#39; failed.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_System_IConvertible_ToBoolean_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_UInt64_System_IConvertible_ToBoolean_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToBoolean(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToBoolean*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool IConvertible.ToBoolean (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the value of the current instance is not zero; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <a class=\"xref\" href=\"system.convert#System_Convert_ToBoolean_System_UInt64_\" data-linktype=\"relative-path\">System.Convert.ToBoolean(UInt64)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_System_IConvertible_ToByte_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_UInt64_System_IConvertible_ToByte_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToByte(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToByte*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">byte IConvertible.ToByte (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, converted to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <a class=\"xref\" href=\"system.convert#System_Convert_ToByte_System_UInt64_\" data-linktype=\"relative-path\">System.Convert.ToByte(UInt64)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_System_IConvertible_ToChar_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_UInt64_System_IConvertible_ToChar_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToChar(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToChar*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">char IConvertible.ToChar (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, converted to a <a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <a class=\"xref\" href=\"system.convert#System_Convert_ToChar_System_UInt64_\" data-linktype=\"relative-path\">System.Convert.ToChar(UInt64)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_System_IConvertible_ToDateTime_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_UInt64_System_IConvertible_ToDateTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToDateTime(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>This conversion is not supported. Attempting to use this method throws an <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">DateTime IConvertible.ToDateTime (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>This conversion is not supported. No value is returned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>In all cases.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_System_IConvertible_ToDecimal_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_UInt64_System_IConvertible_ToDecimal_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToDecimal(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToDecimal*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">decimal IConvertible.ToDecimal (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, converted to a <a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <a class=\"xref\" href=\"system.convert#System_Convert_ToDecimal_System_UInt64_\" data-linktype=\"relative-path\">System.Convert.ToDecimal(UInt64)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_System_IConvertible_ToDouble_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_UInt64_System_IConvertible_ToDouble_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToDouble(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToDouble*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">double IConvertible.ToDouble (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, converted to a <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <a class=\"xref\" href=\"system.convert#System_Convert_ToDouble_System_UInt64_\" data-linktype=\"relative-path\">System.Convert.ToDouble(UInt64)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_System_IConvertible_ToInt16_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_UInt64_System_IConvertible_ToInt16_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToInt16(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToInt16*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">short IConvertible.ToInt16 (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, converted to an <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <a class=\"xref\" href=\"system.convert#System_Convert_ToInt16_System_UInt64_\" data-linktype=\"relative-path\">System.Convert.ToInt16(UInt64)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_System_IConvertible_ToInt32_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_UInt64_System_IConvertible_ToInt32_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToInt32(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToInt32*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">int IConvertible.ToInt32 (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, converted to an <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <a class=\"xref\" href=\"system.convert#System_Convert_ToInt32_System_UInt64_\" data-linktype=\"relative-path\">System.Convert.ToInt32(UInt64)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_System_IConvertible_ToInt64_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_UInt64_System_IConvertible_ToInt64_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToInt64(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToInt64*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">long IConvertible.ToInt64 (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, converted to an <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <a class=\"xref\" href=\"system.convert#System_Convert_ToInt64_System_UInt64_\" data-linktype=\"relative-path\">System.Convert.ToInt64(UInt64)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_System_IConvertible_ToSByte_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_UInt64_System_IConvertible_ToSByte_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToSByte(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToSByte*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">sbyte IConvertible.ToSByte (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.sbyte\" data-linktype=\"relative-path\">SByte</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, converted to an <a class=\"xref\" href=\"system.sbyte\" data-linktype=\"relative-path\">SByte</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <a class=\"xref\" href=\"system.convert#System_Convert_ToSByte_System_UInt64_\" data-linktype=\"relative-path\">System.Convert.ToSByte(UInt64)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_System_IConvertible_ToSingle_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_UInt64_System_IConvertible_ToSingle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToSingle(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToSingle*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">float IConvertible.ToSingle (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, converted to a <a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <a class=\"xref\" href=\"system.convert#System_Convert_ToSingle_System_UInt64_\" data-linktype=\"relative-path\">System.Convert.ToSingle(UInt64)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_System_IConvertible_ToType_System_Type_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_UInt64_System_IConvertible_ToType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToType(Type,IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToType*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object IConvertible.ToType (Type type, IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type to which to convert this <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation that supplies information about the format of the returned value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, converted to <code>type</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <code>static</code> (<code>Shared</code> in Visual Basic) <a class=\"xref\" href=\"system.convert#System_Convert_ChangeType_\" data-linktype=\"relative-path\">ChangeType</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_System_IConvertible_ToUInt16_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_UInt64_System_IConvertible_ToUInt16_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToUInt16(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToUInt16*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">ushort IConvertible.ToUInt16 (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">UInt16</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, converted to a <a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">UInt16</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <a class=\"xref\" href=\"system.convert#System_Convert_ToUInt16_System_UInt64_\" data-linktype=\"relative-path\">System.Convert.ToUInt16(UInt64)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_System_IConvertible_ToUInt32_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_UInt64_System_IConvertible_ToUInt32_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToUInt32(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToUInt32*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">uint IConvertible.ToUInt32 (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, converted to a <a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <a class=\"xref\" href=\"system.convert#System_Convert_ToUInt32_System_UInt64_\" data-linktype=\"relative-path\">System.Convert.ToUInt32(UInt64)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UInt64_System_IConvertible_ToUInt64_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_UInt64_System_IConvertible_ToUInt64_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToUInt64(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToUInt64*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">ulong IConvertible.ToUInt64 (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, unchanged.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.UInt64.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.UInt64.yml\">\r\n<meta name=\"APIName\" content=\"System.UInt64\">\r\n<meta name=\"APIName\" content=\"System.UInt64.CompareTo\">\r\n<meta name=\"APIName\" content=\"System.UInt64.Equals\">\r\n<meta name=\"APIName\" content=\"System.UInt64.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.UInt64.GetTypeCode\">\r\n<meta name=\"APIName\" content=\"System.UInt64.MaxValue\">\r\n<meta name=\"APIName\" content=\"System.UInt64.MinValue\">\r\n<meta name=\"APIName\" content=\"System.UInt64.Parse\">\r\n<meta name=\"APIName\" content=\"System.UInt64.IConvertible.ToBoolean\">\r\n<meta name=\"APIName\" content=\"System.UInt64.IConvertible.ToByte\">\r\n<meta name=\"APIName\" content=\"System.UInt64.IConvertible.ToChar\">\r\n<meta name=\"APIName\" content=\"System.UInt64.IConvertible.ToDateTime\">\r\n<meta name=\"APIName\" content=\"System.UInt64.IConvertible.ToDecimal\">\r\n<meta name=\"APIName\" content=\"System.UInt64.IConvertible.ToDouble\">\r\n<meta name=\"APIName\" content=\"System.UInt64.IConvertible.ToInt16\">\r\n<meta name=\"APIName\" content=\"System.UInt64.IConvertible.ToInt32\">\r\n<meta name=\"APIName\" content=\"System.UInt64.IConvertible.ToInt64\">\r\n<meta name=\"APIName\" content=\"System.UInt64.IConvertible.ToSByte\">\r\n<meta name=\"APIName\" content=\"System.UInt64.IConvertible.ToSingle\">\r\n<meta name=\"APIName\" content=\"System.UInt64.IConvertible.ToType\">\r\n<meta name=\"APIName\" content=\"System.UInt64.IConvertible.ToUInt16\">\r\n<meta name=\"APIName\" content=\"System.UInt64.IConvertible.ToUInt32\">\r\n<meta name=\"APIName\" content=\"System.UInt64.IConvertible.ToUInt64\">\r\n<meta name=\"APIName\" content=\"System.UInt64.ToString\">\r\n<meta name=\"APIName\" content=\"System.UInt64.TryParse\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"ae465027-6665-1bc5-8416-64f2de5e156e\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a 64-bit unsigned integer.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.UInt64\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.UInt64.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.UInt64.yml","open_to_public_contributors":true,"api_name":["System.UInt64","System.UInt64.CompareTo","System.UInt64.Equals","System.UInt64.GetHashCode","System.UInt64.GetTypeCode","System.UInt64.MaxValue","System.UInt64.MinValue","System.UInt64.Parse","System.UInt64.IConvertible.ToBoolean","System.UInt64.IConvertible.ToByte","System.UInt64.IConvertible.ToChar","System.UInt64.IConvertible.ToDateTime","System.UInt64.IConvertible.ToDecimal","System.UInt64.IConvertible.ToDouble","System.UInt64.IConvertible.ToInt16","System.UInt64.IConvertible.ToInt32","System.UInt64.IConvertible.ToInt64","System.UInt64.IConvertible.ToSByte","System.UInt64.IConvertible.ToSingle","System.UInt64.IConvertible.ToType","System.UInt64.IConvertible.ToUInt16","System.UInt64.IConvertible.ToUInt32","System.UInt64.IConvertible.ToUInt64","System.UInt64.ToString","System.UInt64.TryParse"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.UInt64","System::UInt64","System.UInt64.CompareTo","System::UInt64::CompareTo","System.UInt64.Equals","System::UInt64::Equals","System.UInt64.GetHashCode","System::UInt64::GetHashCode","System.UInt64.GetTypeCode","System::UInt64::GetTypeCode","System.UInt64.MaxValue","System::UInt64::MaxValue","System.UInt64.MinValue","System::UInt64::MinValue","System.UInt64.Parse","System::UInt64::Parse","System.UInt64.System#IConvertible#ToBoolean","System::UInt64::System#IConvertible#ToBoolean","System.UInt64.System#IConvertible#ToByte","System::UInt64::System#IConvertible#ToByte","System.UInt64.System#IConvertible#ToChar","System::UInt64::System#IConvertible#ToChar","System.UInt64.System#IConvertible#ToDateTime","System::UInt64::System#IConvertible#ToDateTime","System.UInt64.System#IConvertible#ToDecimal","System::UInt64::System#IConvertible#ToDecimal","System.UInt64.System#IConvertible#ToDouble","System::UInt64::System#IConvertible#ToDouble","System.UInt64.System#IConvertible#ToInt16","System::UInt64::System#IConvertible#ToInt16","System.UInt64.System#IConvertible#ToInt32","System::UInt64::System#IConvertible#ToInt32","System.UInt64.System#IConvertible#ToInt64","System::UInt64::System#IConvertible#ToInt64","System.UInt64.System#IConvertible#ToSByte","System::UInt64::System#IConvertible#ToSByte","System.UInt64.System#IConvertible#ToSingle","System::UInt64::System#IConvertible#ToSingle","System.UInt64.System#IConvertible#ToType","System::UInt64::System#IConvertible#ToType","System.UInt64.System#IConvertible#ToUInt16","System::UInt64::System#IConvertible#ToUInt16","System.UInt64.System#IConvertible#ToUInt32","System::UInt64::System#IConvertible#ToUInt32","System.UInt64.System#IConvertible#ToUInt64","System::UInt64::System#IConvertible#ToUInt64","System.UInt64.ToString","System::UInt64::ToString","System.UInt64.TryParse","System::UInt64::TryParse"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"ae465027-6665-1bc5-8416-64f2de5e156e","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System/UInt64.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"UInt64 struct | Microsoft Docs","_op_ogTitle":"UInt64 struct","description":"Represents a 64-bit unsigned integer.\n","toc_asset_id":"_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.UInt64","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.uint64","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.uint64","fileRelativePath":"System.UInt64.html"},"themesRelativePathToOutputRoot":"_themes/"}