{"content":"    \r\n    <h1 id=\"System_Net_Mime_ContentDisposition\">\r\n      <span class=\"lang-csharp\">ContentDisposition</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a MIME protocol Content-Disposition header.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class ContentDisposition</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ContentDisposition</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The information in the ContentDisposition class accompanies an e-mail message that contains attachments when the e-mail message is sent to its destination. The information in ContentDisposition can be used by software that displays e-mail to present the e-mail attachments in the manner intended by the sender.  </p>\n<p> E-mail messages are created using instances of the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> class. Instances of the <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a> class are used to add attachments to e-mail messages. To modify the ContentDisposition for an attachment, get the instance from the <a class=\"xref\" href=\"system.net.mail.attachment#System_Net_Mail_Attachment_ContentDisposition_\" data-linktype=\"relative-path\">ContentDisposition</a> property.  </p>\n<p> Content to be displayed as part of the message body has the disposition type of <a class=\"xref\" href=\"system.net.mime.contentdisposition#System_Net_Mime_ContentDisposition_Inline_\" data-linktype=\"relative-path\">Inline</a>. Content that is not displayed but is attached in a separate file has the disposition type of <a class=\"xref\" href=\"system.net.mime.dispositiontypenames#System_Net_Mime_DispositionTypeNames_Attachment\" data-linktype=\"relative-path\">Attachment</a>. Use the <a class=\"xref\" href=\"system.net.mime.contentdisposition#System_Net_Mime_ContentDisposition_Inline_\" data-linktype=\"relative-path\">Inline</a> property to control the disposition type for the attachment associated with an instance of ContentDisposition.  </p>\n<p> For file attachments, you can use the properties of the ContentDisposition to set the file size, as well as the date the file was created, last read, and last modified. For all attachments, you can set a recommended file name in the event that the attachment is stored on the receiving computer.  </p>\n<p> The <a class=\"xref\" href=\"system.net.mime.contentdisposition#System_Net_Mime_ContentDisposition_ToString_\" data-linktype=\"relative-path\">ToString</a> method returns the Content-Disposition header. The Content-Disposition header is described in RFC 2183 available at <a href=\"http://www.ietf.org/\" data-linktype=\"external\">http://www.ietf.org</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mime_ContentDisposition__ctor\" data-linktype=\"self-bookmark\">ContentDisposition()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mime.contentdisposition\" data-linktype=\"relative-path\">ContentDisposition</a> class with a <span class=\"xref\">stem.Net.Mime.ContentDisposition.DispositionType*</span> of <a class=\"xref\" href=\"system.net.mime.dispositiontypenames#System_Net_Mime_DispositionTypeNames_Attachment\" data-linktype=\"relative-path\">Attachment</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mime_ContentDisposition__ctor_System_String_\" data-linktype=\"self-bookmark\">ContentDisposition(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mime.contentdisposition\" data-linktype=\"relative-path\">ContentDisposition</a> class with the specified disposition information.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mime_ContentDisposition_CreationDate\" data-linktype=\"self-bookmark\">CreationDate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the creation date for a file attachment.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mime_ContentDisposition_DispositionType\" data-linktype=\"self-bookmark\">DispositionType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the disposition type for an e-mail attachment.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mime_ContentDisposition_FileName\" data-linktype=\"self-bookmark\">FileName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the suggested file name for an e-mail attachment.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mime_ContentDisposition_Inline\" data-linktype=\"self-bookmark\">Inline</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that determines the disposition type (Inline or Attachment) for an e-mail attachment.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mime_ContentDisposition_ModificationDate\" data-linktype=\"self-bookmark\">ModificationDate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the modification date for a file attachment.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mime_ContentDisposition_Parameters\" data-linktype=\"self-bookmark\">Parameters</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the parameters included in the Content-Disposition header represented by this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mime_ContentDisposition_ReadDate\" data-linktype=\"self-bookmark\">ReadDate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the read date for a file attachment.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mime_ContentDisposition_Size\" data-linktype=\"self-bookmark\">Size</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the size of a file attachment.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mime_ContentDisposition_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the content-disposition header of the specified <a class=\"xref\" href=\"system.net.mime.contentdisposition\" data-linktype=\"relative-path\">ContentDisposition</a> object is equal to the content-disposition header of this object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mime_ContentDisposition_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines the hash code of the specified <a class=\"xref\" href=\"system.net.mime.contentdisposition\" data-linktype=\"relative-path\">ContentDisposition</a> object</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mime_ContentDisposition_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> representation of this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mime_ContentDisposition__ctor\">\r\n    \r\n            <a id=\"System_Net_Mime_ContentDisposition__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContentDisposition()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mime.contentdisposition\" data-linktype=\"relative-path\">ContentDisposition</a> class with a <span class=\"xref\">stem.Net.Mime.ContentDisposition.DispositionType*</span> of <a class=\"xref\" href=\"system.net.mime.dispositiontypenames#System_Net_Mime_DispositionTypeNames_Attachment\" data-linktype=\"relative-path\">Attachment</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ContentDisposition ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The instance returned by this constructor has the <a class=\"xref\" href=\"system.net.mime.contentdisposition#System_Net_Mime_ContentDisposition_DispositionType_\" data-linktype=\"relative-path\">DispositionType</a> property set to <a class=\"xref\" href=\"system.net.mime.dispositiontypenames#System_Net_Mime_DispositionTypeNames_Attachment\" data-linktype=\"relative-path\">Attachment</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call this constructor.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#33\">      ContentDisposition^ c1 = gcnew ContentDisposition;\n      Console::WriteLine( c1 );\n      \n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#33\">\t\t\tContentDisposition c1 = new ContentDisposition();\n\t\t\tConsole.WriteLine(c1.ToString());\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mime_ContentDisposition__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Net_Mime_ContentDisposition__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContentDisposition(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mime.contentdisposition\" data-linktype=\"relative-path\">ContentDisposition</a> class with the specified disposition information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ContentDisposition (string disposition);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposition</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.mime.dispositiontypenames\" data-linktype=\"relative-path\">DispositionTypeNames</a> value that contains the disposition.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>disposition</code> is <code>null</code> or equal to <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a> (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call this constructor.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#34\">      ContentDisposition^ c2 = gcnew ContentDisposition( L&quot;attachment&quot; );\n      Console::WriteLine( c2 );\n      \n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#34\">\t\t\tContentDisposition c2 = new ContentDisposition(&quot;attachment&quot;);\n\t\t\tConsole.WriteLine(c2.ToString());\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mime_ContentDisposition_CreationDate\">\r\n    \r\n            <a id=\"System_Net_Mime_ContentDisposition_CreationDate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreationDate</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the creation date for a file attachment.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTime CreationDate { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value that indicates the file creation date; otherwise, <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> if no date was specified.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CreationDate property is used to send time stamp information with a file being sent in an e-mail message. This value sets the Creation-Date parameter in the Content-Disposition header sent with the email.  </p>\n<p> The <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> class is used to compose an e-mail message. The <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a> class is used to attach a file to an e-mail message. To set CreationDate, get the <a class=\"xref\" href=\"system.net.mime.contentdisposition\" data-linktype=\"relative-path\">ContentDisposition</a> for the attachment from the <a class=\"xref\" href=\"system.net.mail.attachment#System_Net_Mail_Attachment_ContentDisposition_\" data-linktype=\"relative-path\">ContentDisposition</a> property.  </p>\n<p> The Content-Disposition header is described in RFC 2183 available at <a href=\"http://www.ietf.org/\" data-linktype=\"external\">http://www.ietf.org</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to set this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#6\">   static void CreateMessageWithAttachment( String^ server )\n   {\n      \n      // Specify the file to be attached and sent.\n      // This example assumes that a file named Data.xls exists in the\n      // current working directory.\n      String^ file = L&quot;data.xls&quot;;\n      \n      // Create a message and set up the recipients.\n      MailMessage^ message = gcnew MailMessage( L&quot;jane@contoso.com&quot;,L&quot;ben@contoso.com&quot;,L&quot;Quarterly data report.&quot;,L&quot;See the attached spreadsheet.&quot; );\n      \n      // Create  the file attachment for this e-mail message.\n      Attachment^ data = gcnew Attachment(file, MediaTypeNames::Application::Octet);\n      \n      // Add time stamp information for the file.\n      ContentDisposition^ disposition = data-&gt;ContentDisposition;\n      disposition-&gt;CreationDate = System::IO::File::GetCreationTime( file );\n      disposition-&gt;ModificationDate = System::IO::File::GetLastWriteTime( file );\n      disposition-&gt;ReadDate = System::IO::File::GetLastAccessTime( file );\n      \n      // Add the file attachment to this e-mail message.\n      message-&gt;Attachments-&gt;Add( data );\n      \n      //Send the message.\n      SmtpClient^ client = gcnew SmtpClient( server );\n      \n      // Add credentials if the SMTP server requires them.\n      client-&gt;Credentials = CredentialCache::DefaultNetworkCredentials;\n      client-&gt;Send( message );\n      \n      // Display the values in the ContentDisposition for the attachment.\n      ContentDisposition^ cd = data-&gt;ContentDisposition;\n      Console::WriteLine( L&quot;Content disposition&quot; );\n      Console::WriteLine( cd );\n      Console::WriteLine( L&quot;File {0}&quot;, cd-&gt;FileName );\n      Console::WriteLine( L&quot;Size {0}&quot;, cd-&gt;Size );\n      Console::WriteLine( L&quot;Creation {0}&quot;, cd-&gt;CreationDate );\n      Console::WriteLine( L&quot;Modification {0}&quot;, cd-&gt;ModificationDate );\n      Console::WriteLine( L&quot;Read {0}&quot;, cd-&gt;ReadDate );\n      Console::WriteLine( L&quot;Inline {0}&quot;, cd-&gt;Inline );\n      Console::WriteLine( L&quot;Parameters: {0}&quot;, cd-&gt;Parameters-&gt;Count );\n      IEnumerator^ myEnum1 = cd-&gt;Parameters-&gt;GetEnumerator();\n      while ( myEnum1-&gt;MoveNext() )\n      {\n         DictionaryEntry^ d = safe_cast&lt;DictionaryEntry^&gt;(myEnum1-&gt;Current);\n         Console::WriteLine( L&quot;{0} = {1}&quot;, d-&gt;Key, d-&gt;Value );\n      }\n\n      data-&gt;~Attachment();\n      client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#6\">\t\tpublic static void CreateMessageWithAttachment(string server)\n\t\t{\n\t\t\t// Specify the file to be attached and sent.\n\t\t\t// This example assumes that a file named Data.xls exists in the\n\t\t\t// current working directory.\n\t\t\tstring file = &quot;data.xls&quot;;\n\t\t\t// Create a message and set up the recipients.\n\t\t\tMailMessage message = new MailMessage(\n\t\t\t   &quot;jane@contoso.com&quot;,\n\t\t\t   &quot;ben@contoso.com&quot;,\n\t\t\t   &quot;Quarterly data report.&quot;,\n\t\t\t   &quot;See the attached spreadsheet.&quot;);\n\n\t\t\t// Create  the file attachment for this e-mail message.\n\t\t\tAttachment data = new Attachment(file, MediaTypeNames.Application.Octet);\n\t\t\t// Add time stamp information for the file.\n\t\t\tContentDisposition disposition = data.ContentDisposition;\n\t\t\tdisposition.CreationDate = System.IO.File.GetCreationTime(file);\n\t\t\tdisposition.ModificationDate = System.IO.File.GetLastWriteTime(file);\n\t\t\tdisposition.ReadDate = System.IO.File.GetLastAccessTime(file);\n\t\t\t// Add the file attachment to this e-mail message.\n\t\t\tmessage.Attachments.Add(data);\n\n\t\t\t//Send the message.\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\t// Add credentials if the SMTP server requires them.\n\t\t\tclient.Credentials = CredentialCache.DefaultNetworkCredentials;\n\n      try {\n\t\t\t  client.Send(message);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t  Console.WriteLine(&quot;Exception caught in CreateMessageWithAttachment(): {0}&quot;, \n                    ex.ToString() );\t\t\t  \n\t\t\t}\n\t\t\t// Display the values in the ContentDisposition for the attachment.\n\t\t\tContentDisposition cd = data.ContentDisposition;\n\t\t\tConsole.WriteLine(&quot;Content disposition&quot;);\n\t\t\tConsole.WriteLine(cd.ToString());\n\t\t\tConsole.WriteLine(&quot;File {0}&quot;, cd.FileName);\n\t\t\tConsole.WriteLine(&quot;Size {0}&quot;, cd.Size);\n\t\t\tConsole.WriteLine(&quot;Creation {0}&quot;, cd.CreationDate);\n\t\t\tConsole.WriteLine(&quot;Modification {0}&quot;, cd.ModificationDate);\n\t\t\tConsole.WriteLine(&quot;Read {0}&quot;, cd.ReadDate);\n\t\t\tConsole.WriteLine(&quot;Inline {0}&quot;, cd.Inline);\n\t\t\tConsole.WriteLine(&quot;Parameters: {0}&quot;, cd.Parameters.Count);\n\t\t\tforeach (DictionaryEntry d in cd.Parameters)\n\t\t\t{\n\t\t\t\tConsole.WriteLine(&quot;{0} = {1}&quot;, d.Key, d.Value);\n\t\t\t}\n\t\t\tdata.Dispose();\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mime_ContentDisposition_DispositionType\">\r\n    \r\n            <a id=\"System_Net_Mime_ContentDisposition_DispositionType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DispositionType</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the disposition type for an e-mail attachment.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string DispositionType { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the disposition type. The value is not restricted but is typically one of the DispositionType values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The value specified for a set operation is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The value specified for a set operation is equal to <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The DispositionType property value can be used by software that displays e-mail to determine the correct way to present the e-mail attachments. <a class=\"xref\" href=\"system.net.mime.dispositiontypenames#System_Net_Mime_DispositionTypeNames_Inline\" data-linktype=\"relative-path\">Inline</a> attachments are usually displayed when the user opens the e-mail. <a class=\"xref\" href=\"system.net.mime.dispositiontypenames#System_Net_Mime_DispositionTypeNames_Attachment\" data-linktype=\"relative-path\">Attachment</a> attachments are usually not opened until the user performs some action, such as clicking an icon that represents the attachment.  </p>\n<p> The Content-Disposition header is described in RFC 2183 available at <a href=\"http://www.ietf.org/\" data-linktype=\"external\">http://www.ietf.org</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to set the value of this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#24\">   static void CreateMessageWithAttachment4( String^ server, String^ to )\n   {\n      \n      // Specify the file to be attached and sent.\n      // This example uses a file on a UNC share.\n      String^ file = L&quot;\\\\\\\\share3\\\\c$\\\\reports\\\\data.xls&quot;;\n      \n      // Create a message and set up the recipients.\n      MailMessage^ message = gcnew MailMessage( L&quot;ReportMailer@contoso.com&quot;,to,L&quot;Quarterly data report&quot;,L&quot;See the attached spreadsheet.&quot; );\n      \n      // Create  the file attachment for this e-mail message.\n      Attachment^ data = gcnew Attachment(&quot;qtr3.xls&quot;, MediaTypeNames::Application::Octet);\n      \n      // Add time stamp information for the file.\n      ContentDisposition^ disposition = data-&gt;ContentDisposition;\n      disposition-&gt;CreationDate = System::IO::File::GetCreationTime( file );\n      disposition-&gt;ModificationDate = System::IO::File::GetLastWriteTime( file );\n      disposition-&gt;ReadDate = System::IO::File::GetLastAccessTime( file );\n      disposition-&gt;DispositionType = DispositionTypeNames::Attachment;\n      \n      // Add the file attachment to this e-mail message.\n      message-&gt;Attachments-&gt;Add( data );\n      \n      //Send the message.\n      SmtpClient^ client = gcnew SmtpClient( server );\n      \n      // Add credentials if the SMTP server requires them.\n      client-&gt;Credentials = dynamic_cast&lt;ICredentialsByHost^&gt;(CredentialCache::DefaultNetworkCredentials);\n      client-&gt;Send( message );\n      \n      // Display the message headers.\n      array&lt;String^&gt;^keys = message-&gt;Headers-&gt;AllKeys;\n      Console::WriteLine( L&quot;Headers&quot; );\n      IEnumerator^ myEnum3 = keys-&gt;GetEnumerator();\n      while ( myEnum3-&gt;MoveNext() )\n      {\n         String^ s = safe_cast&lt;String^&gt;(myEnum3-&gt;Current);\n         Console::WriteLine( L&quot;{0}:&quot;, s );\n         Console::WriteLine( L&quot;    {0}&quot;, message-&gt;Headers[ s ] );\n      }\n\n      data-&gt;~Attachment();\n      client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#24\">\t\tpublic static void CreateMessageWithAttachment4(string server, string to)\n\t\t{\n\t\t\t// Specify the file to be attached and sent.\n\t\t\t// This example uses a file on a UNC share.\n\t\t\tstring file = @&quot;\\\\share3\\c$\\reports\\data.xls&quot;;\n\t\t\t// Create a message and set up the recipients.\n\t\t\tMailMessage message = new MailMessage(\n\t\t\t   &quot;ReportMailer@contoso.com&quot;,\n\t\t\t   to,\n\t\t\t   &quot;Quarterly data report&quot;,\n\t\t\t   &quot;See the attached spreadsheet.&quot;);\n\n\t\t\t// Create  the file attachment for this e-mail message.\n\t\t\tAttachment data = new Attachment(&quot;qtr3.xls&quot;, MediaTypeNames.Application.Octet);\n\t\t\t// Add time stamp information for the file.\n\t\t\tContentDisposition disposition = data.ContentDisposition;\n\t\t\tdisposition.CreationDate = System.IO.File.GetCreationTime(file);\n\t\t\tdisposition.ModificationDate = System.IO.File.GetLastWriteTime(file);\n\t\t\tdisposition.ReadDate = System.IO.File.GetLastAccessTime(file);\n\t\t\tdisposition.DispositionType = DispositionTypeNames.Attachment;\n\t\t\t// Add the file attachment to this e-mail message.\n\t\t\tmessage.Attachments.Add(data);\n\t\t\t//Send the message.\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\t// Add credentials if the SMTP server requires them.\n\t\t\tclient.Credentials = (ICredentialsByHost)CredentialCache.DefaultNetworkCredentials;\n\t\t\tclient.Send(message);\n\t\t\t// Display the message headers.\n\t\t\tstring[] keys = message.Headers.AllKeys;\n\t\t\tConsole.WriteLine(&quot;Headers&quot;);\n\t\t\tforeach (string s in keys)\n\t\t\t{\n\t\t\t\tConsole.WriteLine(&quot;{0}:&quot;, s);\n\t\t\t\tConsole.WriteLine(&quot;    {0}&quot;, message.Headers[s]);\n\t\t\t}\n\t\t\tdata.Dispose();\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mime_ContentDisposition_FileName\">\r\n    \r\n            <a id=\"System_Net_Mime_ContentDisposition_FileName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FileName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the suggested file name for an e-mail attachment.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string FileName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the file name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The FileName property allows the sender to suggest the name to be used to store an e-mail attachment on the recipient&#39;s computer. This name is a suggestion only; the receiving system can ignore it. The name must not include path information; any such information is ignored by the receiving computer.  </p>\n<p> To remove file name information, you can set this property to <code>null</code> or the empty string (&quot;&quot;).  </p>\n<p> The Content-Disposition header is described in RFC 2183 available at <a href=\"http://www.ietf.org/\" data-linktype=\"external\">http://www.ietf.org</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to set the value of this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#11\">   static void CreateMessageAttachment1( String^ server, String^ textMessage )\n   {\n      \n      // Create a message and set up the recipients.\n      MailMessage^ message = gcnew MailMessage( L&quot;jane@contoso.com&quot;,L&quot;ben@contoso.com&quot;,L&quot;A text message for you.&quot;,L&quot;Message: &quot; );\n      \n      // Attach the message string to this e-mail message.\n      Attachment^ data = gcnew Attachment( textMessage,MediaTypeNames::Text::Plain );\n      ContentDisposition^ disposition = data-&gt;ContentDisposition;\n      \n      // Suggest a file name for the attachment.\n      disposition-&gt;FileName = String::Format( L&quot;message{0}&quot;, DateTime::Now );\n      message-&gt;Attachments-&gt;Add( data );\n      \n      //Send the message.\n      SmtpClient^ client = gcnew SmtpClient( server );\n      client-&gt;Credentials = CredentialCache::DefaultNetworkCredentials;\n      client-&gt;Send( message );\n      \n      // Display the values in the ContentDisposition for the attachment.\n      Console::WriteLine( L&quot;Content disposition&quot; );\n      Console::WriteLine( disposition );\n      Console::WriteLine( L&quot;File {0}&quot;, disposition-&gt;FileName );\n      Console::WriteLine( L&quot;Size {0}&quot;, disposition-&gt;Size );\n      Console::WriteLine( L&quot;Creation {0}&quot;, disposition-&gt;CreationDate );\n      Console::WriteLine( L&quot;Modification {0}&quot;, disposition-&gt;ModificationDate );\n      Console::WriteLine( L&quot;Read {0}&quot;, disposition-&gt;ReadDate );\n      Console::WriteLine( L&quot;Inline {0}&quot;, disposition-&gt;Inline );\n      Console::WriteLine( L&quot;Parameters: {0}&quot;, disposition-&gt;Parameters-&gt;Count );\n      IEnumerator^ myEnum2 = disposition-&gt;Parameters-&gt;GetEnumerator();\n      while ( myEnum2-&gt;MoveNext() )\n      {\n         DictionaryEntry^ d = safe_cast&lt;DictionaryEntry^&gt;(myEnum2-&gt;Current);\n         Console::WriteLine( L&quot;{0} = {1}&quot;, d-&gt;Key, d-&gt;Value );\n      }\n\n      data-&gt;~Attachment();\n      client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#11\">\t\tpublic static void CreateMessageAttachment1(string server, string textMessage)\n\t\t{\n\t\t\t// Create a message and set up the recipients.\n\t\t\tMailMessage message = new MailMessage(\n\t\t\t   &quot;jane@contoso.com&quot;,\n\t\t\t   &quot;ben@contoso.com&quot;,\n\t\t\t   &quot;A text message for you.&quot;,\n\t\t\t   &quot;Message: &quot;);\n\n\t\t\t// Attach the message string to this e-mail message.\n\t\t\tAttachment data = new Attachment(textMessage, MediaTypeNames.Text.Plain);\n\t\t\tContentDisposition disposition = data.ContentDisposition;\n\t\t\t// Suggest a file name for the attachment.\n\t\t\tdisposition.FileName = &quot;message&quot; + DateTime.Now.ToString();\n\t\t\tmessage.Attachments.Add(data);\n\t\t\t//Send the message.\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\tclient.Credentials = CredentialCache.DefaultNetworkCredentials;\n\n\t    try {\n        client.Send(message);\n      }\n      catch (Exception ex) {\n        Console.WriteLine(&quot;Exception caught in CreateMessageAttachment1(): {0}&quot;, \n                    ex.ToString() );\n\t\t\t}\n\t\t\t// Display the values in the ContentDisposition for the attachment.\n\t\t\tConsole.WriteLine(&quot;Content disposition&quot;);\n\t\t\tConsole.WriteLine(disposition.ToString());\n\t\t\tConsole.WriteLine(&quot;File {0}&quot;, disposition.FileName);\n\t\t\tConsole.WriteLine(&quot;Size {0}&quot;, disposition.Size);\n\t\t\tConsole.WriteLine(&quot;Creation {0}&quot;, disposition.CreationDate);\n\t\t\tConsole.WriteLine(&quot;Modification {0}&quot;, disposition.ModificationDate);\n\t\t\tConsole.WriteLine(&quot;Read {0}&quot;, disposition.ReadDate);\n\t\t\tConsole.WriteLine(&quot;Inline {0}&quot;, disposition.Inline);\n\t\t\tConsole.WriteLine(&quot;Parameters: {0}&quot;, disposition.Parameters.Count);\n\t\t\tforeach (DictionaryEntry d in disposition.Parameters)\n\t\t\t{\n\t\t\t\tConsole.WriteLine(&quot;{0} = {1}&quot;, d.Key, d.Value);\n\t\t\t}\n\t\t\tdata.Dispose();\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mime_ContentDisposition_Inline\">\r\n    \r\n            <a id=\"System_Net_Mime_ContentDisposition_Inline_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Inline</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that determines the disposition type (Inline or Attachment) for an e-mail attachment.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Inline { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if content in the attachment is presented inline as part of the e-mail body; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Inline property sets the disposition type in the Content-Disposition header sent with the e-mail message. The disposition type can be used by software that displays e-mail to determine the correct way to present the e-mail attachments. Attachments with a disposition type of <a class=\"xref\" href=\"system.net.mime.dispositiontypenames#System_Net_Mime_DispositionTypeNames_Inline\" data-linktype=\"relative-path\">System.Net.Mime.DispositionTypeNames.Inline</a> are usually displayed when the user opens the e-mail. Attachments with a disposition type of <a class=\"xref\" href=\"system.net.mime.dispositiontypenames#System_Net_Mime_DispositionTypeNames_Attachment\" data-linktype=\"relative-path\">System.Net.Mime.DispositionTypeNames.Attachment</a> are usually not opened until the user performs some additional action, such as clicking an icon that represents the attachment.  </p>\n<p> The Content-Disposition header is described in RFC 2183 available at <a href=\"http://www.ietf.org/\" data-linktype=\"external\">http://www.ietf.org</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to set the value of this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#12\">   static void CreateMessageInlineAttachment( String^ server, String^ textMessage )\n   {\n      \n      // Create a message and set up the recipients.\n      MailMessage^ message = gcnew MailMessage( L&quot;jane@contoso.com&quot;,L&quot;ben@contoso.com&quot;,L&quot;An inline text message for you.&quot;,L&quot;Message: &quot; );\n      \n      // Attach the message string to this e-mail message.\n      Attachment^ data = gcnew Attachment( textMessage,MediaTypeNames::Text::Plain );\n      \n      // Send textMessage as part of the e-mail body.\n      message-&gt;Attachments-&gt;Add( data );\n      ContentDisposition^ disposition = data-&gt;ContentDisposition;\n      disposition-&gt;Inline = true;\n      \n      //Send the message.\n      // Include credentials if the server requires them.\n      SmtpClient^ client = gcnew SmtpClient( server );\n      client-&gt;Credentials = CredentialCache::DefaultNetworkCredentials;\n      client-&gt;Send( message );\n      data-&gt;~Attachment();\n      client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#12\">\t\tpublic static void CreateMessageInlineAttachment(string server, string\n\t\ttextMessage)\n\t\t{\n\t\t\t// Create a message and set up the recipients.\n\t\t\tMailMessage message = new MailMessage(\n\t\t\t   &quot;jane@contoso.com&quot;,\n\t\t\t   &quot;ben@contoso.com&quot;,\n\t\t\t   &quot;An inline text message for you.&quot;,\n\t\t\t   &quot;Message: &quot;);\n\n\t\t\t// Attach the message string to this e-mail message.\n\t\t\tAttachment data = new Attachment(textMessage, MediaTypeNames.Text.Plain);\n\t\t\t// Send textMessage as part of the e-mail body.\n\t\t\tmessage.Attachments.Add(data);\n\t\t\tContentDisposition disposition = data.ContentDisposition;\n\t\t\tdisposition.Inline = true;\n\t\t\t//Send the message.\n\t\t\t// Include credentials if the server requires them.\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\tclient.Credentials = CredentialCache.DefaultNetworkCredentials;\n\n\t    try {\n        client.Send(message);\n      }\n      catch (Exception ex) {\n        Console.WriteLine(&quot;Exception caught in CreateMessageInlineAttachment: {0}&quot;, \n                    ex.ToString() );\n      }\n\t\t\tdata.Dispose();\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mime_ContentDisposition_ModificationDate\">\r\n    \r\n            <a id=\"System_Net_Mime_ContentDisposition_ModificationDate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ModificationDate</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the modification date for a file attachment.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTime ModificationDate { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value that indicates the file modification date; otherwise, <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> if no date was specified.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ModificationDate property is used to send time stamp information with a file being sent in an e-mail message. This value sets the Modification-Date parameter in the Content-Disposition header sent with the e-mail message.  </p>\n<p> The <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> class is used to compose an e-mail message. The <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a> class is used to attach a file to an e-mail message. To set the ModificationDate property, get the <a class=\"xref\" href=\"system.net.mime.contentdisposition\" data-linktype=\"relative-path\">ContentDisposition</a> for the attachment using the <a class=\"xref\" href=\"system.net.mail.attachment#System_Net_Mail_Attachment_ContentDisposition_\" data-linktype=\"relative-path\">ContentDisposition</a> property.  </p>\n<p> The Content-Disposition header is described in RFC 2183 available at <a href=\"http://www.ietf.org/\" data-linktype=\"external\">http://www.ietf.org</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to set this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#6\">   static void CreateMessageWithAttachment( String^ server )\n   {\n      \n      // Specify the file to be attached and sent.\n      // This example assumes that a file named Data.xls exists in the\n      // current working directory.\n      String^ file = L&quot;data.xls&quot;;\n      \n      // Create a message and set up the recipients.\n      MailMessage^ message = gcnew MailMessage( L&quot;jane@contoso.com&quot;,L&quot;ben@contoso.com&quot;,L&quot;Quarterly data report.&quot;,L&quot;See the attached spreadsheet.&quot; );\n      \n      // Create  the file attachment for this e-mail message.\n      Attachment^ data = gcnew Attachment(file, MediaTypeNames::Application::Octet);\n      \n      // Add time stamp information for the file.\n      ContentDisposition^ disposition = data-&gt;ContentDisposition;\n      disposition-&gt;CreationDate = System::IO::File::GetCreationTime( file );\n      disposition-&gt;ModificationDate = System::IO::File::GetLastWriteTime( file );\n      disposition-&gt;ReadDate = System::IO::File::GetLastAccessTime( file );\n      \n      // Add the file attachment to this e-mail message.\n      message-&gt;Attachments-&gt;Add( data );\n      \n      //Send the message.\n      SmtpClient^ client = gcnew SmtpClient( server );\n      \n      // Add credentials if the SMTP server requires them.\n      client-&gt;Credentials = CredentialCache::DefaultNetworkCredentials;\n      client-&gt;Send( message );\n      \n      // Display the values in the ContentDisposition for the attachment.\n      ContentDisposition^ cd = data-&gt;ContentDisposition;\n      Console::WriteLine( L&quot;Content disposition&quot; );\n      Console::WriteLine( cd );\n      Console::WriteLine( L&quot;File {0}&quot;, cd-&gt;FileName );\n      Console::WriteLine( L&quot;Size {0}&quot;, cd-&gt;Size );\n      Console::WriteLine( L&quot;Creation {0}&quot;, cd-&gt;CreationDate );\n      Console::WriteLine( L&quot;Modification {0}&quot;, cd-&gt;ModificationDate );\n      Console::WriteLine( L&quot;Read {0}&quot;, cd-&gt;ReadDate );\n      Console::WriteLine( L&quot;Inline {0}&quot;, cd-&gt;Inline );\n      Console::WriteLine( L&quot;Parameters: {0}&quot;, cd-&gt;Parameters-&gt;Count );\n      IEnumerator^ myEnum1 = cd-&gt;Parameters-&gt;GetEnumerator();\n      while ( myEnum1-&gt;MoveNext() )\n      {\n         DictionaryEntry^ d = safe_cast&lt;DictionaryEntry^&gt;(myEnum1-&gt;Current);\n         Console::WriteLine( L&quot;{0} = {1}&quot;, d-&gt;Key, d-&gt;Value );\n      }\n\n      data-&gt;~Attachment();\n      client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#6\">\t\tpublic static void CreateMessageWithAttachment(string server)\n\t\t{\n\t\t\t// Specify the file to be attached and sent.\n\t\t\t// This example assumes that a file named Data.xls exists in the\n\t\t\t// current working directory.\n\t\t\tstring file = &quot;data.xls&quot;;\n\t\t\t// Create a message and set up the recipients.\n\t\t\tMailMessage message = new MailMessage(\n\t\t\t   &quot;jane@contoso.com&quot;,\n\t\t\t   &quot;ben@contoso.com&quot;,\n\t\t\t   &quot;Quarterly data report.&quot;,\n\t\t\t   &quot;See the attached spreadsheet.&quot;);\n\n\t\t\t// Create  the file attachment for this e-mail message.\n\t\t\tAttachment data = new Attachment(file, MediaTypeNames.Application.Octet);\n\t\t\t// Add time stamp information for the file.\n\t\t\tContentDisposition disposition = data.ContentDisposition;\n\t\t\tdisposition.CreationDate = System.IO.File.GetCreationTime(file);\n\t\t\tdisposition.ModificationDate = System.IO.File.GetLastWriteTime(file);\n\t\t\tdisposition.ReadDate = System.IO.File.GetLastAccessTime(file);\n\t\t\t// Add the file attachment to this e-mail message.\n\t\t\tmessage.Attachments.Add(data);\n\n\t\t\t//Send the message.\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\t// Add credentials if the SMTP server requires them.\n\t\t\tclient.Credentials = CredentialCache.DefaultNetworkCredentials;\n\n      try {\n\t\t\t  client.Send(message);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t  Console.WriteLine(&quot;Exception caught in CreateMessageWithAttachment(): {0}&quot;, \n                    ex.ToString() );\t\t\t  \n\t\t\t}\n\t\t\t// Display the values in the ContentDisposition for the attachment.\n\t\t\tContentDisposition cd = data.ContentDisposition;\n\t\t\tConsole.WriteLine(&quot;Content disposition&quot;);\n\t\t\tConsole.WriteLine(cd.ToString());\n\t\t\tConsole.WriteLine(&quot;File {0}&quot;, cd.FileName);\n\t\t\tConsole.WriteLine(&quot;Size {0}&quot;, cd.Size);\n\t\t\tConsole.WriteLine(&quot;Creation {0}&quot;, cd.CreationDate);\n\t\t\tConsole.WriteLine(&quot;Modification {0}&quot;, cd.ModificationDate);\n\t\t\tConsole.WriteLine(&quot;Read {0}&quot;, cd.ReadDate);\n\t\t\tConsole.WriteLine(&quot;Inline {0}&quot;, cd.Inline);\n\t\t\tConsole.WriteLine(&quot;Parameters: {0}&quot;, cd.Parameters.Count);\n\t\t\tforeach (DictionaryEntry d in cd.Parameters)\n\t\t\t{\n\t\t\t\tConsole.WriteLine(&quot;{0} = {1}&quot;, d.Key, d.Value);\n\t\t\t}\n\t\t\tdata.Dispose();\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mime_ContentDisposition_Parameters\">\r\n    \r\n            <a id=\"System_Net_Mime_ContentDisposition_Parameters_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Parameters</div>        \r\n          </div>\r\n    \r\n            <p>Gets the parameters included in the Content-Disposition header represented by this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Specialized.StringDictionary Parameters { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.stringdictionary\" data-linktype=\"relative-path\">StringDictionary</a></div>\r\n                  </div>\r\n                  <p>A writable <a class=\"xref\" href=\"system.collections.specialized.stringdictionary\" data-linktype=\"relative-path\">StringDictionary</a> that contains parameter name/value pairs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Typically, the parameters are determined by the property values so you do not need to access them. If you need to add or change parameter information, modify the dictionary returned by the Parameters property.  </p>\n<p> The Content-Disposition header is described in RFC 2183, available at <a href=\"http://www.ietf.org/\" data-linktype=\"external\">http://www.ietf.org</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the parameters that are sent to the Content-Disposition header.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#6\">   static void CreateMessageWithAttachment( String^ server )\n   {\n      \n      // Specify the file to be attached and sent.\n      // This example assumes that a file named Data.xls exists in the\n      // current working directory.\n      String^ file = L&quot;data.xls&quot;;\n      \n      // Create a message and set up the recipients.\n      MailMessage^ message = gcnew MailMessage( L&quot;jane@contoso.com&quot;,L&quot;ben@contoso.com&quot;,L&quot;Quarterly data report.&quot;,L&quot;See the attached spreadsheet.&quot; );\n      \n      // Create  the file attachment for this e-mail message.\n      Attachment^ data = gcnew Attachment(file, MediaTypeNames::Application::Octet);\n      \n      // Add time stamp information for the file.\n      ContentDisposition^ disposition = data-&gt;ContentDisposition;\n      disposition-&gt;CreationDate = System::IO::File::GetCreationTime( file );\n      disposition-&gt;ModificationDate = System::IO::File::GetLastWriteTime( file );\n      disposition-&gt;ReadDate = System::IO::File::GetLastAccessTime( file );\n      \n      // Add the file attachment to this e-mail message.\n      message-&gt;Attachments-&gt;Add( data );\n      \n      //Send the message.\n      SmtpClient^ client = gcnew SmtpClient( server );\n      \n      // Add credentials if the SMTP server requires them.\n      client-&gt;Credentials = CredentialCache::DefaultNetworkCredentials;\n      client-&gt;Send( message );\n      \n      // Display the values in the ContentDisposition for the attachment.\n      ContentDisposition^ cd = data-&gt;ContentDisposition;\n      Console::WriteLine( L&quot;Content disposition&quot; );\n      Console::WriteLine( cd );\n      Console::WriteLine( L&quot;File {0}&quot;, cd-&gt;FileName );\n      Console::WriteLine( L&quot;Size {0}&quot;, cd-&gt;Size );\n      Console::WriteLine( L&quot;Creation {0}&quot;, cd-&gt;CreationDate );\n      Console::WriteLine( L&quot;Modification {0}&quot;, cd-&gt;ModificationDate );\n      Console::WriteLine( L&quot;Read {0}&quot;, cd-&gt;ReadDate );\n      Console::WriteLine( L&quot;Inline {0}&quot;, cd-&gt;Inline );\n      Console::WriteLine( L&quot;Parameters: {0}&quot;, cd-&gt;Parameters-&gt;Count );\n      IEnumerator^ myEnum1 = cd-&gt;Parameters-&gt;GetEnumerator();\n      while ( myEnum1-&gt;MoveNext() )\n      {\n         DictionaryEntry^ d = safe_cast&lt;DictionaryEntry^&gt;(myEnum1-&gt;Current);\n         Console::WriteLine( L&quot;{0} = {1}&quot;, d-&gt;Key, d-&gt;Value );\n      }\n\n      data-&gt;~Attachment();\n      client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#6\">\t\tpublic static void CreateMessageWithAttachment(string server)\n\t\t{\n\t\t\t// Specify the file to be attached and sent.\n\t\t\t// This example assumes that a file named Data.xls exists in the\n\t\t\t// current working directory.\n\t\t\tstring file = &quot;data.xls&quot;;\n\t\t\t// Create a message and set up the recipients.\n\t\t\tMailMessage message = new MailMessage(\n\t\t\t   &quot;jane@contoso.com&quot;,\n\t\t\t   &quot;ben@contoso.com&quot;,\n\t\t\t   &quot;Quarterly data report.&quot;,\n\t\t\t   &quot;See the attached spreadsheet.&quot;);\n\n\t\t\t// Create  the file attachment for this e-mail message.\n\t\t\tAttachment data = new Attachment(file, MediaTypeNames.Application.Octet);\n\t\t\t// Add time stamp information for the file.\n\t\t\tContentDisposition disposition = data.ContentDisposition;\n\t\t\tdisposition.CreationDate = System.IO.File.GetCreationTime(file);\n\t\t\tdisposition.ModificationDate = System.IO.File.GetLastWriteTime(file);\n\t\t\tdisposition.ReadDate = System.IO.File.GetLastAccessTime(file);\n\t\t\t// Add the file attachment to this e-mail message.\n\t\t\tmessage.Attachments.Add(data);\n\n\t\t\t//Send the message.\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\t// Add credentials if the SMTP server requires them.\n\t\t\tclient.Credentials = CredentialCache.DefaultNetworkCredentials;\n\n      try {\n\t\t\t  client.Send(message);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t  Console.WriteLine(&quot;Exception caught in CreateMessageWithAttachment(): {0}&quot;, \n                    ex.ToString() );\t\t\t  \n\t\t\t}\n\t\t\t// Display the values in the ContentDisposition for the attachment.\n\t\t\tContentDisposition cd = data.ContentDisposition;\n\t\t\tConsole.WriteLine(&quot;Content disposition&quot;);\n\t\t\tConsole.WriteLine(cd.ToString());\n\t\t\tConsole.WriteLine(&quot;File {0}&quot;, cd.FileName);\n\t\t\tConsole.WriteLine(&quot;Size {0}&quot;, cd.Size);\n\t\t\tConsole.WriteLine(&quot;Creation {0}&quot;, cd.CreationDate);\n\t\t\tConsole.WriteLine(&quot;Modification {0}&quot;, cd.ModificationDate);\n\t\t\tConsole.WriteLine(&quot;Read {0}&quot;, cd.ReadDate);\n\t\t\tConsole.WriteLine(&quot;Inline {0}&quot;, cd.Inline);\n\t\t\tConsole.WriteLine(&quot;Parameters: {0}&quot;, cd.Parameters.Count);\n\t\t\tforeach (DictionaryEntry d in cd.Parameters)\n\t\t\t{\n\t\t\t\tConsole.WriteLine(&quot;{0} = {1}&quot;, d.Key, d.Value);\n\t\t\t}\n\t\t\tdata.Dispose();\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mime_ContentDisposition_ReadDate\">\r\n    \r\n            <a id=\"System_Net_Mime_ContentDisposition_ReadDate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadDate</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the read date for a file attachment.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTime ReadDate { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value that indicates the file read date; otherwise, <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> if no date was specified.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ReadDate property is used to send time stamp information with a file being sent in an e-mail message. This value sets the Read-Date parameter in the Content-Disposition header sent with the e-mail message.  </p>\n<p> The <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> class is used to compose an e-mail message. The <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a> class is used to attach a file to an e-mail message. To set ReadDate, get the <a class=\"xref\" href=\"system.net.mime.contentdisposition\" data-linktype=\"relative-path\">ContentDisposition</a> for the attachment by using the <a class=\"xref\" href=\"system.net.mail.attachment#System_Net_Mail_Attachment_ContentDisposition_\" data-linktype=\"relative-path\">ContentDisposition</a> property.  </p>\n<p> The Content-Disposition header is described in RFC 2183 available at <a href=\"http://www.ietf.org/\" data-linktype=\"external\">http://www.ietf.org</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to set this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#6\">   static void CreateMessageWithAttachment( String^ server )\n   {\n      \n      // Specify the file to be attached and sent.\n      // This example assumes that a file named Data.xls exists in the\n      // current working directory.\n      String^ file = L&quot;data.xls&quot;;\n      \n      // Create a message and set up the recipients.\n      MailMessage^ message = gcnew MailMessage( L&quot;jane@contoso.com&quot;,L&quot;ben@contoso.com&quot;,L&quot;Quarterly data report.&quot;,L&quot;See the attached spreadsheet.&quot; );\n      \n      // Create  the file attachment for this e-mail message.\n      Attachment^ data = gcnew Attachment(file, MediaTypeNames::Application::Octet);\n      \n      // Add time stamp information for the file.\n      ContentDisposition^ disposition = data-&gt;ContentDisposition;\n      disposition-&gt;CreationDate = System::IO::File::GetCreationTime( file );\n      disposition-&gt;ModificationDate = System::IO::File::GetLastWriteTime( file );\n      disposition-&gt;ReadDate = System::IO::File::GetLastAccessTime( file );\n      \n      // Add the file attachment to this e-mail message.\n      message-&gt;Attachments-&gt;Add( data );\n      \n      //Send the message.\n      SmtpClient^ client = gcnew SmtpClient( server );\n      \n      // Add credentials if the SMTP server requires them.\n      client-&gt;Credentials = CredentialCache::DefaultNetworkCredentials;\n      client-&gt;Send( message );\n      \n      // Display the values in the ContentDisposition for the attachment.\n      ContentDisposition^ cd = data-&gt;ContentDisposition;\n      Console::WriteLine( L&quot;Content disposition&quot; );\n      Console::WriteLine( cd );\n      Console::WriteLine( L&quot;File {0}&quot;, cd-&gt;FileName );\n      Console::WriteLine( L&quot;Size {0}&quot;, cd-&gt;Size );\n      Console::WriteLine( L&quot;Creation {0}&quot;, cd-&gt;CreationDate );\n      Console::WriteLine( L&quot;Modification {0}&quot;, cd-&gt;ModificationDate );\n      Console::WriteLine( L&quot;Read {0}&quot;, cd-&gt;ReadDate );\n      Console::WriteLine( L&quot;Inline {0}&quot;, cd-&gt;Inline );\n      Console::WriteLine( L&quot;Parameters: {0}&quot;, cd-&gt;Parameters-&gt;Count );\n      IEnumerator^ myEnum1 = cd-&gt;Parameters-&gt;GetEnumerator();\n      while ( myEnum1-&gt;MoveNext() )\n      {\n         DictionaryEntry^ d = safe_cast&lt;DictionaryEntry^&gt;(myEnum1-&gt;Current);\n         Console::WriteLine( L&quot;{0} = {1}&quot;, d-&gt;Key, d-&gt;Value );\n      }\n\n      data-&gt;~Attachment();\n      client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#6\">\t\tpublic static void CreateMessageWithAttachment(string server)\n\t\t{\n\t\t\t// Specify the file to be attached and sent.\n\t\t\t// This example assumes that a file named Data.xls exists in the\n\t\t\t// current working directory.\n\t\t\tstring file = &quot;data.xls&quot;;\n\t\t\t// Create a message and set up the recipients.\n\t\t\tMailMessage message = new MailMessage(\n\t\t\t   &quot;jane@contoso.com&quot;,\n\t\t\t   &quot;ben@contoso.com&quot;,\n\t\t\t   &quot;Quarterly data report.&quot;,\n\t\t\t   &quot;See the attached spreadsheet.&quot;);\n\n\t\t\t// Create  the file attachment for this e-mail message.\n\t\t\tAttachment data = new Attachment(file, MediaTypeNames.Application.Octet);\n\t\t\t// Add time stamp information for the file.\n\t\t\tContentDisposition disposition = data.ContentDisposition;\n\t\t\tdisposition.CreationDate = System.IO.File.GetCreationTime(file);\n\t\t\tdisposition.ModificationDate = System.IO.File.GetLastWriteTime(file);\n\t\t\tdisposition.ReadDate = System.IO.File.GetLastAccessTime(file);\n\t\t\t// Add the file attachment to this e-mail message.\n\t\t\tmessage.Attachments.Add(data);\n\n\t\t\t//Send the message.\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\t// Add credentials if the SMTP server requires them.\n\t\t\tclient.Credentials = CredentialCache.DefaultNetworkCredentials;\n\n      try {\n\t\t\t  client.Send(message);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t  Console.WriteLine(&quot;Exception caught in CreateMessageWithAttachment(): {0}&quot;, \n                    ex.ToString() );\t\t\t  \n\t\t\t}\n\t\t\t// Display the values in the ContentDisposition for the attachment.\n\t\t\tContentDisposition cd = data.ContentDisposition;\n\t\t\tConsole.WriteLine(&quot;Content disposition&quot;);\n\t\t\tConsole.WriteLine(cd.ToString());\n\t\t\tConsole.WriteLine(&quot;File {0}&quot;, cd.FileName);\n\t\t\tConsole.WriteLine(&quot;Size {0}&quot;, cd.Size);\n\t\t\tConsole.WriteLine(&quot;Creation {0}&quot;, cd.CreationDate);\n\t\t\tConsole.WriteLine(&quot;Modification {0}&quot;, cd.ModificationDate);\n\t\t\tConsole.WriteLine(&quot;Read {0}&quot;, cd.ReadDate);\n\t\t\tConsole.WriteLine(&quot;Inline {0}&quot;, cd.Inline);\n\t\t\tConsole.WriteLine(&quot;Parameters: {0}&quot;, cd.Parameters.Count);\n\t\t\tforeach (DictionaryEntry d in cd.Parameters)\n\t\t\t{\n\t\t\t\tConsole.WriteLine(&quot;{0} = {1}&quot;, d.Key, d.Value);\n\t\t\t}\n\t\t\tdata.Dispose();\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mime_ContentDisposition_Size\">\r\n    \r\n            <a id=\"System_Net_Mime_ContentDisposition_Size_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Size</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the size of a file attachment.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public long Size { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> that specifies the number of bytes in the file attachment. The default value is -1, which indicates that the file size is unknown.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Size property is used to send time stamp information with a file being sent in an e-mail message. The <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> class is used to compose the message. The <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a> class is used to attach a file to an e-mail message.  </p>\n<p> The Content-Disposition header is described in RFC 2183 available at <a href=\"http://www.ietf.org/\" data-linktype=\"external\">http://www.ietf.org</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to get this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#6\">   static void CreateMessageWithAttachment( String^ server )\n   {\n      \n      // Specify the file to be attached and sent.\n      // This example assumes that a file named Data.xls exists in the\n      // current working directory.\n      String^ file = L&quot;data.xls&quot;;\n      \n      // Create a message and set up the recipients.\n      MailMessage^ message = gcnew MailMessage( L&quot;jane@contoso.com&quot;,L&quot;ben@contoso.com&quot;,L&quot;Quarterly data report.&quot;,L&quot;See the attached spreadsheet.&quot; );\n      \n      // Create  the file attachment for this e-mail message.\n      Attachment^ data = gcnew Attachment(file, MediaTypeNames::Application::Octet);\n      \n      // Add time stamp information for the file.\n      ContentDisposition^ disposition = data-&gt;ContentDisposition;\n      disposition-&gt;CreationDate = System::IO::File::GetCreationTime( file );\n      disposition-&gt;ModificationDate = System::IO::File::GetLastWriteTime( file );\n      disposition-&gt;ReadDate = System::IO::File::GetLastAccessTime( file );\n      \n      // Add the file attachment to this e-mail message.\n      message-&gt;Attachments-&gt;Add( data );\n      \n      //Send the message.\n      SmtpClient^ client = gcnew SmtpClient( server );\n      \n      // Add credentials if the SMTP server requires them.\n      client-&gt;Credentials = CredentialCache::DefaultNetworkCredentials;\n      client-&gt;Send( message );\n      \n      // Display the values in the ContentDisposition for the attachment.\n      ContentDisposition^ cd = data-&gt;ContentDisposition;\n      Console::WriteLine( L&quot;Content disposition&quot; );\n      Console::WriteLine( cd );\n      Console::WriteLine( L&quot;File {0}&quot;, cd-&gt;FileName );\n      Console::WriteLine( L&quot;Size {0}&quot;, cd-&gt;Size );\n      Console::WriteLine( L&quot;Creation {0}&quot;, cd-&gt;CreationDate );\n      Console::WriteLine( L&quot;Modification {0}&quot;, cd-&gt;ModificationDate );\n      Console::WriteLine( L&quot;Read {0}&quot;, cd-&gt;ReadDate );\n      Console::WriteLine( L&quot;Inline {0}&quot;, cd-&gt;Inline );\n      Console::WriteLine( L&quot;Parameters: {0}&quot;, cd-&gt;Parameters-&gt;Count );\n      IEnumerator^ myEnum1 = cd-&gt;Parameters-&gt;GetEnumerator();\n      while ( myEnum1-&gt;MoveNext() )\n      {\n         DictionaryEntry^ d = safe_cast&lt;DictionaryEntry^&gt;(myEnum1-&gt;Current);\n         Console::WriteLine( L&quot;{0} = {1}&quot;, d-&gt;Key, d-&gt;Value );\n      }\n\n      data-&gt;~Attachment();\n      client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#6\">\t\tpublic static void CreateMessageWithAttachment(string server)\n\t\t{\n\t\t\t// Specify the file to be attached and sent.\n\t\t\t// This example assumes that a file named Data.xls exists in the\n\t\t\t// current working directory.\n\t\t\tstring file = &quot;data.xls&quot;;\n\t\t\t// Create a message and set up the recipients.\n\t\t\tMailMessage message = new MailMessage(\n\t\t\t   &quot;jane@contoso.com&quot;,\n\t\t\t   &quot;ben@contoso.com&quot;,\n\t\t\t   &quot;Quarterly data report.&quot;,\n\t\t\t   &quot;See the attached spreadsheet.&quot;);\n\n\t\t\t// Create  the file attachment for this e-mail message.\n\t\t\tAttachment data = new Attachment(file, MediaTypeNames.Application.Octet);\n\t\t\t// Add time stamp information for the file.\n\t\t\tContentDisposition disposition = data.ContentDisposition;\n\t\t\tdisposition.CreationDate = System.IO.File.GetCreationTime(file);\n\t\t\tdisposition.ModificationDate = System.IO.File.GetLastWriteTime(file);\n\t\t\tdisposition.ReadDate = System.IO.File.GetLastAccessTime(file);\n\t\t\t// Add the file attachment to this e-mail message.\n\t\t\tmessage.Attachments.Add(data);\n\n\t\t\t//Send the message.\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\t// Add credentials if the SMTP server requires them.\n\t\t\tclient.Credentials = CredentialCache.DefaultNetworkCredentials;\n\n      try {\n\t\t\t  client.Send(message);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t  Console.WriteLine(&quot;Exception caught in CreateMessageWithAttachment(): {0}&quot;, \n                    ex.ToString() );\t\t\t  \n\t\t\t}\n\t\t\t// Display the values in the ContentDisposition for the attachment.\n\t\t\tContentDisposition cd = data.ContentDisposition;\n\t\t\tConsole.WriteLine(&quot;Content disposition&quot;);\n\t\t\tConsole.WriteLine(cd.ToString());\n\t\t\tConsole.WriteLine(&quot;File {0}&quot;, cd.FileName);\n\t\t\tConsole.WriteLine(&quot;Size {0}&quot;, cd.Size);\n\t\t\tConsole.WriteLine(&quot;Creation {0}&quot;, cd.CreationDate);\n\t\t\tConsole.WriteLine(&quot;Modification {0}&quot;, cd.ModificationDate);\n\t\t\tConsole.WriteLine(&quot;Read {0}&quot;, cd.ReadDate);\n\t\t\tConsole.WriteLine(&quot;Inline {0}&quot;, cd.Inline);\n\t\t\tConsole.WriteLine(&quot;Parameters: {0}&quot;, cd.Parameters.Count);\n\t\t\tforeach (DictionaryEntry d in cd.Parameters)\n\t\t\t{\n\t\t\t\tConsole.WriteLine(&quot;{0} = {1}&quot;, d.Key, d.Value);\n\t\t\t}\n\t\t\tdata.Dispose();\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mime_ContentDisposition_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Net_Mime_ContentDisposition_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the content-disposition header of the specified <a class=\"xref\" href=\"system.net.mime.contentdisposition\" data-linktype=\"relative-path\">ContentDisposition</a> object is equal to the content-disposition header of this object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object rparam);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rparam</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.net.mime.contentdisposition\" data-linktype=\"relative-path\">ContentDisposition</a> object to compare with this object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the content-disposition headers are the same; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mime_ContentDisposition_GetHashCode\">\r\n    \r\n            <a id=\"System_Net_Mime_ContentDisposition_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Determines the hash code of the specified <a class=\"xref\" href=\"system.net.mime.contentdisposition\" data-linktype=\"relative-path\">ContentDisposition</a> object</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An integer hash value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mime_ContentDisposition_ToString\">\r\n    \r\n            <a id=\"System_Net_Mime_ContentDisposition_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> representation of this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the property values for this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The string returned by the ToString method is the Content-Disposition header.  </p>\n<p> The Content-Disposition header is described in RFC 2183 available at <a href=\"http://www.ietf.org/\" data-linktype=\"external\">http://www.ietf.org</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates calling this method.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#6\">   static void CreateMessageWithAttachment( String^ server )\n   {\n      \n      // Specify the file to be attached and sent.\n      // This example assumes that a file named Data.xls exists in the\n      // current working directory.\n      String^ file = L&quot;data.xls&quot;;\n      \n      // Create a message and set up the recipients.\n      MailMessage^ message = gcnew MailMessage( L&quot;jane@contoso.com&quot;,L&quot;ben@contoso.com&quot;,L&quot;Quarterly data report.&quot;,L&quot;See the attached spreadsheet.&quot; );\n      \n      // Create  the file attachment for this e-mail message.\n      Attachment^ data = gcnew Attachment(file, MediaTypeNames::Application::Octet);\n      \n      // Add time stamp information for the file.\n      ContentDisposition^ disposition = data-&gt;ContentDisposition;\n      disposition-&gt;CreationDate = System::IO::File::GetCreationTime( file );\n      disposition-&gt;ModificationDate = System::IO::File::GetLastWriteTime( file );\n      disposition-&gt;ReadDate = System::IO::File::GetLastAccessTime( file );\n      \n      // Add the file attachment to this e-mail message.\n      message-&gt;Attachments-&gt;Add( data );\n      \n      //Send the message.\n      SmtpClient^ client = gcnew SmtpClient( server );\n      \n      // Add credentials if the SMTP server requires them.\n      client-&gt;Credentials = CredentialCache::DefaultNetworkCredentials;\n      client-&gt;Send( message );\n      \n      // Display the values in the ContentDisposition for the attachment.\n      ContentDisposition^ cd = data-&gt;ContentDisposition;\n      Console::WriteLine( L&quot;Content disposition&quot; );\n      Console::WriteLine( cd );\n      Console::WriteLine( L&quot;File {0}&quot;, cd-&gt;FileName );\n      Console::WriteLine( L&quot;Size {0}&quot;, cd-&gt;Size );\n      Console::WriteLine( L&quot;Creation {0}&quot;, cd-&gt;CreationDate );\n      Console::WriteLine( L&quot;Modification {0}&quot;, cd-&gt;ModificationDate );\n      Console::WriteLine( L&quot;Read {0}&quot;, cd-&gt;ReadDate );\n      Console::WriteLine( L&quot;Inline {0}&quot;, cd-&gt;Inline );\n      Console::WriteLine( L&quot;Parameters: {0}&quot;, cd-&gt;Parameters-&gt;Count );\n      IEnumerator^ myEnum1 = cd-&gt;Parameters-&gt;GetEnumerator();\n      while ( myEnum1-&gt;MoveNext() )\n      {\n         DictionaryEntry^ d = safe_cast&lt;DictionaryEntry^&gt;(myEnum1-&gt;Current);\n         Console::WriteLine( L&quot;{0} = {1}&quot;, d-&gt;Key, d-&gt;Value );\n      }\n\n      data-&gt;~Attachment();\n      client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#6\">\t\tpublic static void CreateMessageWithAttachment(string server)\n\t\t{\n\t\t\t// Specify the file to be attached and sent.\n\t\t\t// This example assumes that a file named Data.xls exists in the\n\t\t\t// current working directory.\n\t\t\tstring file = &quot;data.xls&quot;;\n\t\t\t// Create a message and set up the recipients.\n\t\t\tMailMessage message = new MailMessage(\n\t\t\t   &quot;jane@contoso.com&quot;,\n\t\t\t   &quot;ben@contoso.com&quot;,\n\t\t\t   &quot;Quarterly data report.&quot;,\n\t\t\t   &quot;See the attached spreadsheet.&quot;);\n\n\t\t\t// Create  the file attachment for this e-mail message.\n\t\t\tAttachment data = new Attachment(file, MediaTypeNames.Application.Octet);\n\t\t\t// Add time stamp information for the file.\n\t\t\tContentDisposition disposition = data.ContentDisposition;\n\t\t\tdisposition.CreationDate = System.IO.File.GetCreationTime(file);\n\t\t\tdisposition.ModificationDate = System.IO.File.GetLastWriteTime(file);\n\t\t\tdisposition.ReadDate = System.IO.File.GetLastAccessTime(file);\n\t\t\t// Add the file attachment to this e-mail message.\n\t\t\tmessage.Attachments.Add(data);\n\n\t\t\t//Send the message.\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\t// Add credentials if the SMTP server requires them.\n\t\t\tclient.Credentials = CredentialCache.DefaultNetworkCredentials;\n\n      try {\n\t\t\t  client.Send(message);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t  Console.WriteLine(&quot;Exception caught in CreateMessageWithAttachment(): {0}&quot;, \n                    ex.ToString() );\t\t\t  \n\t\t\t}\n\t\t\t// Display the values in the ContentDisposition for the attachment.\n\t\t\tContentDisposition cd = data.ContentDisposition;\n\t\t\tConsole.WriteLine(&quot;Content disposition&quot;);\n\t\t\tConsole.WriteLine(cd.ToString());\n\t\t\tConsole.WriteLine(&quot;File {0}&quot;, cd.FileName);\n\t\t\tConsole.WriteLine(&quot;Size {0}&quot;, cd.Size);\n\t\t\tConsole.WriteLine(&quot;Creation {0}&quot;, cd.CreationDate);\n\t\t\tConsole.WriteLine(&quot;Modification {0}&quot;, cd.ModificationDate);\n\t\t\tConsole.WriteLine(&quot;Read {0}&quot;, cd.ReadDate);\n\t\t\tConsole.WriteLine(&quot;Inline {0}&quot;, cd.Inline);\n\t\t\tConsole.WriteLine(&quot;Parameters: {0}&quot;, cd.Parameters.Count);\n\t\t\tforeach (DictionaryEntry d in cd.Parameters)\n\t\t\t{\n\t\t\t\tConsole.WriteLine(&quot;{0} = {1}&quot;, d.Key, d.Value);\n\t\t\t}\n\t\t\tdata.Dispose();\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.Mime.ContentDisposition.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.Mime.ContentDisposition.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.Mime.ContentDisposition\">\r\n<meta name=\"APIName\" content=\"System.Net.Mime.ContentDisposition..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.Mime.ContentDisposition.CreationDate\">\r\n<meta name=\"APIName\" content=\"System.Net.Mime.ContentDisposition.DispositionType\">\r\n<meta name=\"APIName\" content=\"System.Net.Mime.ContentDisposition.Equals\">\r\n<meta name=\"APIName\" content=\"System.Net.Mime.ContentDisposition.FileName\">\r\n<meta name=\"APIName\" content=\"System.Net.Mime.ContentDisposition.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Net.Mime.ContentDisposition.Inline\">\r\n<meta name=\"APIName\" content=\"System.Net.Mime.ContentDisposition.ModificationDate\">\r\n<meta name=\"APIName\" content=\"System.Net.Mime.ContentDisposition.Parameters\">\r\n<meta name=\"APIName\" content=\"System.Net.Mime.ContentDisposition.ReadDate\">\r\n<meta name=\"APIName\" content=\"System.Net.Mime.ContentDisposition.Size\">\r\n<meta name=\"APIName\" content=\"System.Net.Mime.ContentDisposition.ToString\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"a565c082-bd65-6ef2-91ff-769c66254456\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a MIME protocol Content-Disposition header.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net.Mime/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.Mime.ContentDisposition\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.Mime.ContentDisposition.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.Mime.ContentDisposition.yml","open_to_public_contributors":true,"api_name":["System.Net.Mime.ContentDisposition","System.Net.Mime.ContentDisposition..ctor","System.Net.Mime.ContentDisposition.CreationDate","System.Net.Mime.ContentDisposition.DispositionType","System.Net.Mime.ContentDisposition.Equals","System.Net.Mime.ContentDisposition.FileName","System.Net.Mime.ContentDisposition.GetHashCode","System.Net.Mime.ContentDisposition.Inline","System.Net.Mime.ContentDisposition.ModificationDate","System.Net.Mime.ContentDisposition.Parameters","System.Net.Mime.ContentDisposition.ReadDate","System.Net.Mime.ContentDisposition.Size","System.Net.Mime.ContentDisposition.ToString"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.Mime.ContentDisposition","System::Net::Mime::ContentDisposition","System.Net.Mime.ContentDisposition.#ctor","System::Net::Mime::ContentDisposition::#ctor","System.Net.Mime.ContentDisposition.CreationDate","System::Net::Mime::ContentDisposition::CreationDate","System.Net.Mime.ContentDisposition.DispositionType","System::Net::Mime::ContentDisposition::DispositionType","System.Net.Mime.ContentDisposition.Equals","System::Net::Mime::ContentDisposition::Equals","System.Net.Mime.ContentDisposition.FileName","System::Net::Mime::ContentDisposition::FileName","System.Net.Mime.ContentDisposition.GetHashCode","System::Net::Mime::ContentDisposition::GetHashCode","System.Net.Mime.ContentDisposition.Inline","System::Net::Mime::ContentDisposition::Inline","System.Net.Mime.ContentDisposition.ModificationDate","System::Net::Mime::ContentDisposition::ModificationDate","System.Net.Mime.ContentDisposition.Parameters","System::Net::Mime::ContentDisposition::Parameters","System.Net.Mime.ContentDisposition.ReadDate","System::Net::Mime::ContentDisposition::ReadDate","System.Net.Mime.ContentDisposition.Size","System::Net::Mime::ContentDisposition::Size","System.Net.Mime.ContentDisposition.ToString","System::Net::Mime::ContentDisposition::ToString"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"a565c082-bd65-6ef2-91ff-769c66254456","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net.Mime/ContentDisposition.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ContentDisposition class | Microsoft Docs","_op_ogTitle":"ContentDisposition class","description":"Represents a MIME protocol Content-Disposition header.\n","toc_asset_id":"_splitted/System.Net.Mime/toc.json","toc_rel":"_splitted/System.Net.Mime/toc.json","source_url":"","ms.assetid":"System.Net.Mime.ContentDisposition","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.mime.contentdisposition","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.mime.contentdisposition","fileRelativePath":"System.Net.Mime.ContentDisposition.html"},"themesRelativePathToOutputRoot":"_themes/"}