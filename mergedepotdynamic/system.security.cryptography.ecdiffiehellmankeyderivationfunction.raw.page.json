{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ECDiffieHellmanKeyDerivationFunction</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Specifies the key derivation function that the <a class=\"xref\" href=\"system.security.cryptography.ecdiffiehellmancng\" data-linktype=\"relative-path\">ECDiffieHellmanCng</a> class will use to convert secret agreements into key material.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public enum ECDiffieHellmanKeyDerivationFunction</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">System.Enum</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">ECDiffieHellmanKeyDerivationFunction</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The ECDiffieHellmanKeyDerivationFunction enumeration defines the type of algorithm that will be used to transform a raw secret agreement into key material. The secret agreement is the value that is generated from a private key and the other partyâ€™s public key, as part of the key exchange. It is the seed value for the key material that is generated by the <a class=\"xref\" href=\"system.security.cryptography.ecdiffiehellmancng#System_Security_Cryptography_ECDiffieHellmanCng_DeriveKeyMaterial_\" data-linktype=\"relative-path\">DeriveKeyMaterial</a> method.  </p>\n<p> The <a class=\"xref\" href=\"system.security.cryptography.ecdiffiehellmancng#System_Security_Cryptography_ECDiffieHellmanCng_KeyDerivationFunction_\" data-linktype=\"relative-path\">KeyDerivationFunction</a> property uses this enumeration to get the key derivation function for the <a class=\"xref\" href=\"system.security.cryptography.ecdiffiehellmancng\" data-linktype=\"relative-path\">ECDiffieHellmanCng</a> class.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Security_Cryptography_ECDiffieHellmanKeyDerivationFunction_Hash\">\r\n      \t\t\t<span class=\"lang-csharp\">Hash</span>\r\n      \t</td>\r\n      \t<td><p>A hash algorithm is used to generate key material. The <span class=\"xref\">stem.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm*</span> property specifies the name of the algorithm to use. If the algorithm name is not specified, <a class=\"xref\" href=\"system.security.cryptography.sha256\" data-linktype=\"relative-path\">SHA256</a> is used as the default algorithm.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Cryptography_ECDiffieHellmanKeyDerivationFunction_Hmac\">\r\n      \t\t\t<span class=\"lang-csharp\">Hmac</span>\r\n      \t</td>\r\n      \t<td><p>A Hash-based Message Authentication Code (HMAC) algorithm is used to generate key material. The <span class=\"xref\">stem.Security.Cryptography.ECDiffieHellmanCng.HmacKey*</span> property specifies the key to use. Either this property must be set or the <span class=\"xref\">stem.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey*</span> property must be set to <code>true</code>; otherwise, a <a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a> is thrown when you use Hmac. If both properties are set, the secret agreement is used as the HMAC key.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Security_Cryptography_ECDiffieHellmanKeyDerivationFunction_Tls\">\r\n      \t\t\t<span class=\"lang-csharp\">Tls</span>\r\n      \t</td>\r\n      \t<td><p>The Transport Layer Security (TLS) protocol is used to generate key material. The <span class=\"xref\">stem.Security.Cryptography.ECDiffieHellmanCng.Seed*</span> and <span class=\"xref\">stem.Security.Cryptography.ECDiffieHellmanCng.Label*</span> properties must be set; otherwise, a <a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a> is thrown when you use Tls.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/417c04fd1daf0cb211ec4909020356fc1fe69260/fulldocset/System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls\">\r\n<meta name=\"APILocation\" content=\"System.Core.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-02-28 06:06 AM\">\r\n<meta name=\"document_id\" content=\"d4e2f91b-9034-feb7-808c-efe57df457d8\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies the key derivation function that the  class will use to convert secret agreements into key material.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Cryptography/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/417c04fd1daf0cb211ec4909020356fc1fe69260/fulldocset/System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.yml","open_to_public_contributors":true,"api_name":["System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction","System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash","System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac","System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls"],"api_location":["System.Core.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction","System::Security::Cryptography::ECDiffieHellmanKeyDerivationFunction","System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash","System::Security::Cryptography::ECDiffieHellmanKeyDerivationFunction::Hash","System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac","System::Security::Cryptography::ECDiffieHellmanKeyDerivationFunction::Hmac","System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls","System::Security::Cryptography::ECDiffieHellmanKeyDerivationFunction::Tls"],"dev_langs":["csharp"],"updated_at":"2017-02-28 06:06 AM","document_id":"d4e2f91b-9034-feb7-808c-efe57df457d8","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Cryptography/ECDiffieHellmanKeyDerivationFunction.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ECDiffieHellmanKeyDerivationFunction enum | Microsoft Docs","_op_ogTitle":"ECDiffieHellmanKeyDerivationFunction enum","description":"Specifies the key derivation function that the  class will use to convert secret agreements into key material.\n","toc_asset_id":"_splitted/System.Security.Cryptography/toc.json","toc_rel":"_splitted/System.Security.Cryptography/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.ecdiffiehellmankeyderivationfunction","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.ecdiffiehellmankeyderivationfunction","fileRelativePath":"System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.html"},"themesRelativePathToOutputRoot":"_themes/"}