{"content":"    \r\n    <h1 id=\"System_Windows_Forms_DataGridViewCellErrorTextNeededEventArgs\">\r\n      <span class=\"lang-csharp\">DataGridViewCellErrorTextNeededEventArgs</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides data for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellErrorTextNeeded\" data-linktype=\"relative-path\">CellErrorTextNeeded</a> event of a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class DataGridViewCellErrorTextNeededEventArgs : System.Windows.Forms.DataGridViewCellEventArgs</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridViewCellEventArgs</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DataGridViewCellErrorTextNeededEventArgs</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs#System_Windows_Forms_DataGridViewCellEventArgs_ColumnIndex\" data-linktype=\"relative-path\">ColumnIndex</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs#System_Windows_Forms_DataGridViewCellEventArgs_RowIndex\" data-linktype=\"relative-path\">RowIndex</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellErrorTextNeeded\" data-linktype=\"relative-path\">CellErrorTextNeeded</a> event occurs only when the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property is set or its <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> property is <code>true</code>. Handling the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellErrorTextNeeded\" data-linktype=\"relative-path\">CellErrorTextNeeded</a> event is useful when you want to determine the error for a cell depending on its value or state.  </p>\n<p> When you handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellErrorTextNeeded\" data-linktype=\"relative-path\">CellErrorTextNeeded</a> event and specify error text in the handler, an error glyph appears in the cell unless the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ShowCellErrors_\" data-linktype=\"relative-path\">ShowCellErrors</a> property is set to <code>false</code> or the cell is in edit mode. When the user moves the mouse pointer over the error glyph, the error text appears in a ToolTip.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellErrorTextNeeded\" data-linktype=\"relative-path\">CellErrorTextNeeded</a> event also occurs whenever the value of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> property is retrieved.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs#System_Windows_Forms_DataGridViewCellEventArgs_RowIndex_\" data-linktype=\"relative-path\">RowIndex</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs#System_Windows_Forms_DataGridViewCellEventArgs_ColumnIndex_\" data-linktype=\"relative-path\">ColumnIndex</a> property to determine the state or value of a cell, and use this information to change or modify the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellerrortextneededeventargs#System_Windows_Forms_DataGridViewCellErrorTextNeededEventArgs_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> property. This property is initialized with the value of the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> property, which the event value overrides.  </p>\n<p> Handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellErrorTextNeeded\" data-linktype=\"relative-path\">CellErrorTextNeeded</a> event when working with large amounts of data to avoid the performance penalties of setting the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> value for multiple cells. For more information, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCellErrorTextNeededEventArgs_ErrorText\" data-linktype=\"self-bookmark\">ErrorText</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the message that is displayed when the cell is selected.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCellErrorTextNeededEventArgs_ErrorText\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCellErrorTextNeededEventArgs_ErrorText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ErrorText</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the message that is displayed when the cell is selected.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ErrorText { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The error message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property initially contains the value of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> property if it has been set for a row.  </p>\n<p> The ErrorText property value displays as a ToolTip for the error glyph in the cell.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates an event handler that uses the ErrorText property to set the error text of a cell.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView_SharedRowScenarios#24\">    private ToolStripMenuItem wholeTable = new ToolStripMenuItem();\n    private ToolStripMenuItem lookUp = new ToolStripMenuItem();\n    private ContextMenuStrip strip;\n    private string cellErrorText;\n\n    private void dataGridView1_CellContextMenuStripNeeded(object sender,\n        DataGridViewCellContextMenuStripNeededEventArgs e)\n    {\n        cellErrorText = String.Empty;\n\n        if (strip == null)\n        {\n            strip = new ContextMenuStrip();\n            lookUp.Text = &quot;Look Up&quot;;\n            wholeTable.Text = &quot;See Whole Table&quot;;\n            strip.Items.Add(lookUp);\n            strip.Items.Add(wholeTable);\n        }\n        e.ContextMenuStrip = strip;\n    }\n\n    private void wholeTable_Click(object sender, EventArgs e)\n    {\n        dataGridView1.DataSource = Populate(&quot;Select * from employees&quot;, true);\n    }\n\n    private DataGridViewCellEventArgs theCellImHoveringOver;\n\n    private void dataGridView1_CellMouseEnter(object sender, DataGridViewCellEventArgs e)\n    {\n        theCellImHoveringOver = e;\n    }\n\n    private DataGridViewCellEventArgs cellErrorLocation;\n\n    private void lookUp_Click(object sender, EventArgs e)\n    {\n        try\n        {\n            dataGridView1.DataSource = Populate(&quot;Select * from employees where &quot; +\n                dataGridView1.Columns[theCellImHoveringOver.ColumnIndex].Name + &quot; = &#39;&quot; +\n                dataGridView1.Rows[theCellImHoveringOver.RowIndex].\n                Cells[theCellImHoveringOver.ColumnIndex].Value + &quot;&#39;&quot;,\n                true);\n        }\n        catch (SqlException)\n        {\n            cellErrorText = &quot;Can&#39;t look this cell up&quot;;\n            cellErrorLocation = theCellImHoveringOver;\n        }\n    }\n\n    private void dataGridView1_CellErrorTextNeeded(object sender,\n        DataGridViewCellErrorTextNeededEventArgs e)\n    {\n        if (cellErrorLocation != null)\n        {\n            if (e.ColumnIndex == cellErrorLocation.ColumnIndex &amp;&amp;\n                e.RowIndex == cellErrorLocation.RowIndex)\n            {\n                e.ErrorText = cellErrorText;\n            }\n        }\n    }\n\n    private DataTable Populate(string query, bool resetUnsharedCounter)\n    {\n        if (resetUnsharedCounter)\n        {\n            ResetCounter();\n        }\n\n        // Alter the data source as necessary\n        SqlDataAdapter adapter = new SqlDataAdapter(query,\n            new SqlConnection(&quot;Integrated Security=SSPI;Persist Security Info=False;&quot; +\n            &quot;Initial Catalog=Northwind;Data Source=localhost&quot;));\n\n        DataTable table = new DataTable();\n        table.Locale = System.Globalization.CultureInfo.InvariantCulture;\n        adapter.Fill(table);\n        return table;\n    }\n\n    private Label count = new Label();\n    private int unsharedRowCounter;\n\n    private void ResetCounter()\n    {\n        unsharedRowCounter = 0;\n        count.Text = unsharedRowCounter.ToString();\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView_SharedRowScenarios#24\">    ToolStripMenuItem^ wholeTable;\n    ToolStripMenuItem^ lookUp;\n    System::Windows::Forms::ContextMenuStrip^ strip;\n    String^ cellErrorText;\n\n    void dataGridView1_CellContextMenuStripNeeded( Object^ /*sender*/,\n        DataGridViewCellContextMenuStripNeededEventArgs^ e )\n    {\n        cellErrorText = String::Empty;\n        if ( strip == nullptr )\n        {\n            strip = gcnew System::Windows::Forms::ContextMenuStrip;\n            lookUp-&gt;Text = L&quot;Look Up&quot;;\n            wholeTable-&gt;Text = L&quot;See Whole Table&quot;;\n            strip-&gt;Items-&gt;Add( lookUp );\n            strip-&gt;Items-&gt;Add( wholeTable );\n        }\n\n        e-&gt;ContextMenuStrip = strip;\n    }\n\n    void wholeTable_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n    {\n        dataGridView1-&gt;DataSource = Populate( L&quot;Select * from employees&quot;, true );\n    }\n\n    DataGridViewCellEventArgs^ theCellImHoveringOver;\n    void dataGridView1_CellMouseEnter( Object^ /*sender*/, DataGridViewCellEventArgs^ e )\n    {\n        theCellImHoveringOver = e;\n    }\n\n    DataGridViewCellEventArgs^ cellErrorLocation;\n    void lookUp_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n    {\n        try\n        {\n            dataGridView1-&gt;DataSource = Populate( String::Format( L&quot;Select * from employees where {0} = &#39;{1}&#39;&quot;, dataGridView1-&gt;Columns[ theCellImHoveringOver-&gt;ColumnIndex ]-&gt;Name, dataGridView1-&gt;Rows[ theCellImHoveringOver-&gt;RowIndex ]-&gt;Cells[ theCellImHoveringOver-&gt;ColumnIndex ]-&gt;Value ), true );\n        }\n        catch ( ... ) \n        {\n            cellErrorText = L&quot;Can&#39;t look this cell up&quot;;\n            cellErrorLocation = theCellImHoveringOver;\n        }\n\n    }\n\n    void dataGridView1_CellErrorTextNeeded( Object^ /*sender*/, DataGridViewCellErrorTextNeededEventArgs^ e )\n    {\n        if ( cellErrorLocation != nullptr )\n        {\n            if ( e-&gt;ColumnIndex == cellErrorLocation-&gt;ColumnIndex &amp;&amp; e-&gt;RowIndex == cellErrorLocation-&gt;RowIndex )\n            {\n                e-&gt;ErrorText = cellErrorText;\n            }\n        }\n    }\n\n    DataTable^ Populate( String^ query, bool resetUnsharedCounter )\n    {\n        if ( resetUnsharedCounter )\n        {\n            ResetCounter();\n        }\n\n\n        // Alter the data source as necessary\n        SqlDataAdapter^ adapter = gcnew SqlDataAdapter( query,\n            gcnew SqlConnection( L&quot;Integrated Security=SSPI;Persist Security Info=False;&quot;\n            L&quot;Initial Catalog=Northwind;Data Source= localhost&quot; ) );\n        DataTable^ table = gcnew DataTable;\n        adapter-&gt;Fill( table );\n        return table;\n    }\n\n    Label^ count;\n    int unsharedRowCounter;\n    void ResetCounter()\n    {\n        unsharedRowCounter = 0;\n        count-&gt;Text = unsharedRowCounter.ToString();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView_SharedRowScenarios#24\">    Private WithEvents wholeTable As New ToolStripMenuItem()\n    Private WithEvents lookUp As New ToolStripMenuItem()\n    Private strip As ContextMenuStrip\n    Private cellErrorText As String\n\n    Private Sub dataGridView1_CellContextMenuStripNeeded(ByVal sender As Object, _\n        ByVal e As DataGridViewCellContextMenuStripNeededEventArgs) _\n        Handles dataGridView1.CellContextMenuStripNeeded\n\n        cellErrorText = String.Empty\n\n        If strip Is Nothing Then\n            strip = New ContextMenuStrip()\n            lookUp.Text = &quot;Look Up&quot;\n            wholeTable.Text = &quot;See Whole Table&quot;\n            strip.Items.Add(lookUp)\n            strip.Items.Add(wholeTable)\n        End If\n        e.ContextMenuStrip = strip\n    End Sub\n\n    Private Sub wholeTable_Click(ByVal sender As Object, ByVal e As EventArgs) Handles wholeTable.Click\n        dataGridView1.DataSource = Populate(&quot;Select * from employees&quot;, True)\n    End Sub\n\n    Private theCellImHoveringOver As DataGridViewCellEventArgs\n\n    Private Sub dataGridView1_CellMouseEnter(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles dataGridView1.CellMouseEnter\n\n        theCellImHoveringOver = e\n    End Sub\n\n    Private cellErrorLocation As DataGridViewCellEventArgs\n\n    Private Sub lookUp_Click(ByVal sender As Object, ByVal e As EventArgs) Handles lookUp.Click\n        Try\n            dataGridView1.DataSource = Populate(&quot;Select * from employees where &quot; &amp; _\n                dataGridView1.Columns(theCellImHoveringOver.ColumnIndex).Name &amp; &quot; = &#39;&quot; &amp; _\n                dataGridView1.Rows(theCellImHoveringOver.RowIndex).Cells(theCellImHoveringOver.ColumnIndex).Value.ToString() &amp; _\n                &quot;&#39;&quot;, True)\n        Catch ex As SqlException\n            cellErrorText = &quot;Can&#39;t look this cell up&quot;\n            cellErrorLocation = theCellImHoveringOver\n        End Try\n    End Sub\n\n    Private Sub dataGridView1_CellErrorTextNeeded(ByVal sender As Object, _\n                ByVal e As DataGridViewCellErrorTextNeededEventArgs) _\n                Handles dataGridView1.CellErrorTextNeeded\n        If (Not cellErrorLocation Is Nothing) Then\n            If e.ColumnIndex = cellErrorLocation.ColumnIndex AndAlso _\n                e.RowIndex = cellErrorLocation.RowIndex Then\n                e.ErrorText = cellErrorText\n            End If\n        End If\n    End Sub\n\n    Private Function Populate(ByVal query As String, ByVal resetUnsharedCounter As Boolean) As DataTable\n\n        If resetUnsharedCounter Then\n            ResetCounter()\n        End If\n\n        &#39; Alter the data source as necessary\n        Dim adapter As New SqlDataAdapter(query, _\n            New SqlConnection(&quot;Integrated Security=SSPI;Persist Security Info=False;&quot; &amp; _\n            &quot;Initial Catalog=Northwind;Data Source=localhost&quot;))\n\n        Dim table As New DataTable()\n        table.Locale = System.Globalization.CultureInfo.InvariantCulture\n        adapter.Fill(table)\n        Return table\n    End Function\n\n    Private count As New Label()\n    Private unsharedRowCounter As Integer\n\n    Private Sub ResetCounter()\n        unsharedRowCounter = 0\n        count.Text = unsharedRowCounter.ToString()\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.ErrorText\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"0ff27f6c-49f0-ee0c-be28-b0c6c383b3bb\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for the  event of a  control.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs","System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.ErrorText"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs","System::Windows::Forms::DataGridViewCellErrorTextNeededEventArgs","System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.ErrorText","System::Windows::Forms::DataGridViewCellErrorTextNeededEventArgs::ErrorText"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"0ff27f6c-49f0-ee0c-be28-b0c6c383b3bb","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/DataGridViewCellErrorTextNeededEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataGridViewCellErrorTextNeededEventArgs class | Microsoft Docs","_op_ogTitle":"DataGridViewCellErrorTextNeededEventArgs class","description":"Provides data for the  event of a  control.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.datagridviewcellerrortextneededeventargs","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.datagridviewcellerrortextneededeventargs","fileRelativePath":"System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}