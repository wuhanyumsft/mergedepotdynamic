{"content":"    \r\n    <h1 id=\"System_IO_Packaging_Package\">\r\n      <span class=\"lang-csharp\">Package</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a container that can store multiple data objects.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class Package : IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Package</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Package is an abstract class that can be used to organize objects into a single entity of a defined physical format for portability and efficient access.  </p>\n<p> A ZIP file is the primary physical format for the Package.  Other Package implementations might use other physical formats such as an XML document, a database, or Web service.  </p>\n<p> Like a file system, items contained in a Package are referenced in a hierarchical organization of folders and files.  </p>\n<p> Although Package itself is an abstract class, the <a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a> derived class is used as default by the <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Open_\" data-linktype=\"relative-path\">Open</a> method.  </p>\n<p> A <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> (&quot;part&quot;) is the abstract class that represents an object that is stored in a Package.  </p>\n<p> A <a class=\"xref\" href=\"system.io.packaging.packagerelationship\" data-linktype=\"relative-path\">PackageRelationship</a> (&quot;relationship&quot;) defines an association between a source Package or <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> and a target object.  A <a class=\"xref\" href=\"system.io.packaging.packagerelationship\" data-linktype=\"relative-path\">PackageRelationship</a> can be one of two types, each of which can be one of two forms:  </p>\n<ul>\n<li><p>A package-level relationship (created by the <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_CreateRelationship_\" data-linktype=\"relative-path\">CreateRelationship</a> method) relates a Package to either:  </p>\n<ul>\n<li><p>A target part in the package.  </p>\n</li>\n<li><p>A target resource outside the package.  </p>\n</li>\n</ul>\n</li>\n<li><p>A part-level relationship (created by the <a class=\"xref\" href=\"system.io.packaging.packagepart#System_IO_Packaging_PackagePart_CreateRelationship_\" data-linktype=\"relative-path\">CreateRelationship</a> method) relates a source <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> to either:  </p>\n<ul>\n<li><p>Another target part in the package.  </p>\n</li>\n<li><p>A target resource outside the package.  </p>\n</li>\n</ul>\n<p>The relationship&#39;s source Package or source <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> is considered the &quot;owner&quot; of the relationship.  When the source object is deleted, all the relationships owned by the source object are also deleted.  The process of creating or deleting a relationship does not physically change either the source or target objects in any way.  </p>\n<p>A <a class=\"xref\" href=\"system.io.packaging.packagedigitalsignature\" data-linktype=\"relative-path\">PackageDigitalSignature</a> (&quot;digital signature&quot;) is a composition of parts and relationships representing a digital signature included with a Package.  The digital signature identifies the originator and validates that the signed parts and relationships contained in the Package have not been modified.  </p>\n<p>Packages also support Digital Rights Management (DRM) which allows content elements in a Package to be encrypted with specific access rights granted to authorized users.  </p>\n<p>Based on the Package architecture, an <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a> is a package type designed for storing documents based on the open <a href=\"http://go.microsoft.com/fwlink/?LinkID=65761\" data-linktype=\"external\">XML Paper Specification (XPS)</a>.  </p>\n<p>Microsoft .NET Framework uses packages to store content, resources, and relationships for pages and documents using a standard ZIP file by default. As with any ZIP file, your application can use the <a class=\"xref\" href=\"system.io.packaging\" data-linktype=\"relative-path\">System.IO.Packaging</a> classes to store and optionally protect any type or number of data files in a single efficient-to-access container.  </p>\n<p>For more information, see the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package__ctor_System_IO_FileAccess_\" data-linktype=\"self-bookmark\">Package(FileAccess)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> class that uses a given <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package__ctor_System_IO_FileAccess_System_Boolean_\" data-linktype=\"self-bookmark\">Package(FileAccess,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> class that uses a given <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a> and streaming option.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_FileOpenAccess\" data-linktype=\"self-bookmark\">FileOpenAccess</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the file access setting for the package.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_PackageProperties\" data-linktype=\"self-bookmark\">PackageProperties</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the core properties of the package.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_Close\" data-linktype=\"self-bookmark\">Close()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves and closes the package plus all underlying part streams.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_CreatePart_System_Uri_System_String_\" data-linktype=\"self-bookmark\">CreatePart(Uri,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new uncompressed part with a given URI and content type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_CreatePart_System_Uri_System_String_System_IO_Packaging_CompressionOption_\" data-linktype=\"self-bookmark\">CreatePart(Uri,String,CompressionOption)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new part with a given URI, content type, and compression option.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_CreatePartCore_System_Uri_System_String_System_IO_Packaging_CompressionOption_\" data-linktype=\"self-bookmark\">CreatePartCore(Uri,String,CompressionOption)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, creates a new part in the package.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_CreateRelationship_System_Uri_System_IO_Packaging_TargetMode_System_String_\" data-linktype=\"self-bookmark\">CreateRelationship(Uri,TargetMode,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a package-level relationship to a part with a given URI, target mode, and relationship type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_CreateRelationship_System_Uri_System_IO_Packaging_TargetMode_System_String_System_String_\" data-linktype=\"self-bookmark\">CreateRelationship(Uri,TargetMode,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a package-level relationship to a part with a given URI, target mode, relationship type, and identifier (ID).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_DeletePart_System_Uri_\" data-linktype=\"self-bookmark\">DeletePart(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deletes a part with a given URI from the package.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_DeletePartCore_System_Uri_\" data-linktype=\"self-bookmark\">DeletePartCore(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, deletes a part with a given URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_DeleteRelationship_System_String_\" data-linktype=\"self-bookmark\">DeleteRelationship(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deletes a package-level relationship.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Flushes and saves the content of all parts and relationships, closes the package, and releases all resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_Flush\" data-linktype=\"self-bookmark\">Flush()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves the contents of all parts and relationships that are contained in the package.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_FlushCore\" data-linktype=\"self-bookmark\">FlushCore()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, saves the content of all parts and relationships to the derived class store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_GetPart_System_Uri_\" data-linktype=\"self-bookmark\">GetPart(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the part with a given URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_GetPartCore_System_Uri_\" data-linktype=\"self-bookmark\">GetPartCore(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, returns the part addressed by a given URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_GetParts\" data-linktype=\"self-bookmark\">GetParts()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a collection of all the parts in the package.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_GetPartsCore\" data-linktype=\"self-bookmark\">GetPartsCore()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, returns an array of all the parts in the package.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_GetRelationship_System_String_\" data-linktype=\"self-bookmark\">GetRelationship(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the package-level relationship with a given identifier.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_GetRelationships\" data-linktype=\"self-bookmark\">GetRelationships()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a collection of all the package-level relationships.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_GetRelationshipsByType_System_String_\" data-linktype=\"self-bookmark\">GetRelationshipsByType(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a collection of all the package-level relationships that match a given <span class=\"xref\">stem.IO.Packaging.PackageRelationship.RelationshipType*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_Open_System_IO_Stream_\" data-linktype=\"self-bookmark\">Open(Stream)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a package on a given IO stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_Open_System_String_\" data-linktype=\"self-bookmark\">Open(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a package at a given path and file name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_Open_System_IO_Stream_System_IO_FileMode_\" data-linktype=\"self-bookmark\">Open(Stream,FileMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a package with a given IO stream and file mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_Open_System_String_System_IO_FileMode_\" data-linktype=\"self-bookmark\">Open(String,FileMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a package at a given path using a given file mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_Open_System_IO_Stream_System_IO_FileMode_System_IO_FileAccess_\" data-linktype=\"self-bookmark\">Open(Stream,FileMode,FileAccess)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a package with a given IO stream, file mode, and file access setting.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_Open_System_String_System_IO_FileMode_System_IO_FileAccess_\" data-linktype=\"self-bookmark\">Open(String,FileMode,FileAccess)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a package at a given path using a given file mode and file access setting.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_Open_System_String_System_IO_FileMode_System_IO_FileAccess_System_IO_FileShare_\" data-linktype=\"self-bookmark\">Open(String,FileMode,FileAccess,FileShare)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a package at a given path using a given file mode, file access, and file share setting.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_PartExists_System_Uri_\" data-linktype=\"self-bookmark\">PartExists(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether a part with a given URI is in the package.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_RelationshipExists_System_String_\" data-linktype=\"self-bookmark\">RelationshipExists(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether a package-level relationship with a given ID is contained in the package.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_Package_System_IDisposable_Dispose\" data-linktype=\"self-bookmark\">IDisposable.Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended for application use.  Use the type-safe <span class=\"xref\">stem.IO.Packaging.Package.Dispose*</span> method instead.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package__ctor_System_IO_FileAccess_\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Package(FileAccess)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> class that uses a given <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected Package (System.IO.FileAccess openFileAccess);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>openFileAccess</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file IO permissions for the package.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value for <code>openFileAccess</code> is not valid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Package is a protected constructor of the <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> abstract base class. When called in a derived class, the Package constructor initializes a new instance of the derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package__ctor_System_IO_FileAccess_System_Boolean_\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Package(FileAccess,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> class that uses a given <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a> and streaming option.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected Package (System.IO.FileAccess openFileAccess, bool streaming);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>openFileAccess</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file IO permissions for the package.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>streaming</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to open the package for streaming; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value for <code>openFileAccess</code> is not valid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Package is a protected constructor of the <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> abstract base abstract base class. When called in a derived class, the Package constructor initializes a new instance of the derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_FileOpenAccess\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_FileOpenAccess_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FileOpenAccess</div>        \r\n          </div>\r\n    \r\n            <p>Gets the file access setting for the package.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.FileAccess FileOpenAccess { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a> values: <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a>, <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a>, or <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The package is not open (<span class=\"xref\">stem.IO.Packaging.Package.Dispose*</span> or <span class=\"xref\">stem.IO.Packaging.Package.Close*</span> has been called).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The FileOpenAccess property has no default value.  The file access setting is specified in the <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package__ctor_\" data-linktype=\"relative-path\">Package</a> constructor call when you create a new package, or in the <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Open_\" data-linktype=\"relative-path\">Open</a> call when you open an existing package.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_PackageProperties\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_PackageProperties_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PackageProperties</div>        \r\n          </div>\r\n    \r\n            <p>Gets the core properties of the package.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Packaging.PackageProperties PackageProperties { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.packageproperties\" data-linktype=\"relative-path\">PackageProperties</a></div>\r\n                  </div>\r\n                  <p>The core properties of the package.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The package is not open (<span class=\"xref\">stem.IO.Packaging.Package.Dispose*</span> or <span class=\"xref\">stem.IO.Packaging.Package.Close*</span> has been called).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For additional information about core package properties, see section 3.1 in the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_Close\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_Close_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Close()</div>        \r\n          </div>\r\n    \r\n            <p>Saves and closes the package plus all underlying part streams.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Close ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For the <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> class Close and <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Dispose_\" data-linktype=\"relative-path\">Dispose</a> perform the same operation—there is no reason to call <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Dispose_\" data-linktype=\"relative-path\">Dispose</a> if you call Close, or vice-versa.  </p>\n<p> Close and <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Dispose_\" data-linktype=\"relative-path\">Dispose</a> internally call <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Flush_\" data-linktype=\"relative-path\">Flush</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>using</code> statement (different from the <code>using</code> namespace directive) is the recommended way to Close and <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Dispose_\" data-linktype=\"relative-path\">Dispose</a> a package.  <a href=\"http://go.microsoft.com/fwlink/?LinkID=160055\" data-linktype=\"external\">Writing a Package Sample</a> and <a href=\"http://go.microsoft.com/fwlink/?LinkID=160034\" data-linktype=\"external\">Reading a Package Sample</a> show how to close and dispose a package by using the <code>using</code> statement.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_CreatePart_System_Uri_System_String_\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_CreatePart_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreatePart(Uri,String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new uncompressed part with a given URI and content type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>partUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The uniform resource identifier (URI) of the new part.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>contentType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The content type of the data stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a></div>\r\n                  </div>\r\n                  <p>The new created part.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>partUri</code> or <code>contentType</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>partUri</code> is not a valid <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> URI.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A part with the specified <code>partUri</code> is already present in the package.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The package is not open (<span class=\"xref\">stem.IO.Packaging.Package.Dispose*</span> or <span class=\"xref\">stem.IO.Packaging.Package.Close*</span> has been called).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The package is read-only (a new part cannot be added).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>CreatePart initializes an empty <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> for the new part.  The <a class=\"xref\" href=\"system.io.packaging.packagepart#System_IO_Packaging_PackagePart_GetStream_\" data-linktype=\"relative-path\">GetStream</a> method can be used to obtain a reference to the stream instance associated with the part.  </p>\n<p> The part <a class=\"xref\" href=\"system.io.packaging.packagepart#System_IO_Packaging_PackagePart_CompressionOption_\" data-linktype=\"relative-path\">CompressionOption</a> is <a class=\"xref\" href=\"system.io.packaging.compressionoption\" data-linktype=\"relative-path\">System.IO.Packaging.CompressionOption</a>.  </p>\n<p> For additional information about package parts, see section 1.1 in the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to create a new <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> and then store data into the part.  For the complete sample, see <a href=\"http://go.microsoft.com/fwlink/?LinkID=160055\" data-linktype=\"external\">Writing a Package Sample</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"PackageWrite#PackageWriteCreatePart\">&#39; Add the Document part to the Package\nDim packagePartDocument As PackagePart = package.CreatePart(partUriDocument, System.Net.Mime.MediaTypeNames.Text.Xml)\n\n&#39; Copy the data to the Document Part\nUsing fileStream As New FileStream(documentPath, FileMode.Open, FileAccess.Read)\n    CopyStream(fileStream, packagePartDocument.GetStream())\nEnd Using &#39; end:using(fileStream) - Close and dispose fileStream.\n</code></pre><pre><code class=\"lang-cs\" name=\"PackageWrite#PackageWriteCreatePart\">// Add the Document part to the Package\nPackagePart packagePartDocument =\n    package.CreatePart(partUriDocument,\n                   System.Net.Mime.MediaTypeNames.Text.Xml);\n\n// Copy the data to the Document Part\nusing (FileStream fileStream = new FileStream(\n       documentPath, FileMode.Open, FileAccess.Read))\n{\n    CopyStream(fileStream, packagePartDocument.GetStream());\n}// end:using(fileStream) - Close and dispose fileStream.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_CreatePart_System_Uri_System_String_System_IO_Packaging_CompressionOption_\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_CreatePart_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreatePart(Uri,String,CompressionOption)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new part with a given URI, content type, and compression option.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>partUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the new part.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>contentType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The content type of the data stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>compressionOption</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.compressionoption\" data-linktype=\"relative-path\">CompressionOption</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The compression option for the data stream, <a class=\"xref\" href=\"system.io.packaging.compressionoption\" data-linktype=\"relative-path\">CompressionOption</a> or <a class=\"xref\" href=\"system.io.packaging.compressionoption\" data-linktype=\"relative-path\">CompressionOption</a> compression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a></div>\r\n                  </div>\r\n                  <p>The new created part.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>partUri</code> or <code>contentType</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>partUri</code> is not a valid <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> uniform resource identifier (URI).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A part with the specified <code>partUri</code> is already present in the package.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>compressionOption</code> value is not valid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The package is not open (<span class=\"xref\">stem.IO.Packaging.Package.Dispose*</span> or <span class=\"xref\">stem.IO.Packaging.Package.Close*</span> has been called).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The package is read-only (a new part cannot be added).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For the default <a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a> derived class, the CreatePart method only supports two <code>compressionOption</code> values, <a class=\"xref\" href=\"system.io.packaging.compressionoption\" data-linktype=\"relative-path\">CompressionOption</a> or <a class=\"xref\" href=\"system.io.packaging.compressionoption\" data-linktype=\"relative-path\">CompressionOption</a> compression.  Other <a class=\"xref\" href=\"system.io.packaging.compressionoption\" data-linktype=\"relative-path\">CompressionOption</a> values of <a class=\"xref\" href=\"system.io.packaging.compressionoption\" data-linktype=\"relative-path\">CompressionOption</a>, <a class=\"xref\" href=\"system.io.packaging.compressionoption\" data-linktype=\"relative-path\">CompressionOption</a>, or <a class=\"xref\" href=\"system.io.packaging.compressionoption\" data-linktype=\"relative-path\">CompressionOption</a> use <a class=\"xref\" href=\"system.io.packaging.compressionoption\" data-linktype=\"relative-path\">CompressionOption</a> compression.  </p>\n<p> CreatePart creates an empty <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> for the new part.  The <a class=\"xref\" href=\"system.io.packaging.packagepart#System_IO_Packaging_PackagePart_GetStream_\" data-linktype=\"relative-path\">GetStream</a> method can be used to obtain a reference to the stream instance associated with the part.  </p>\n<p> For additional information, see the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to create a new <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> and then store data into the part.  For the complete sample, see <a href=\"http://go.microsoft.com/fwlink/?LinkID=160055\" data-linktype=\"external\">Writing a Package Sample</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"PackageWrite#PackageWriteCreatePart\">&#39; Add the Document part to the Package\nDim packagePartDocument As PackagePart = package.CreatePart(partUriDocument, System.Net.Mime.MediaTypeNames.Text.Xml)\n\n&#39; Copy the data to the Document Part\nUsing fileStream As New FileStream(documentPath, FileMode.Open, FileAccess.Read)\n    CopyStream(fileStream, packagePartDocument.GetStream())\nEnd Using &#39; end:using(fileStream) - Close and dispose fileStream.\n</code></pre><pre><code class=\"lang-cs\" name=\"PackageWrite#PackageWriteCreatePart\">// Add the Document part to the Package\nPackagePart packagePartDocument =\n    package.CreatePart(partUriDocument,\n                   System.Net.Mime.MediaTypeNames.Text.Xml);\n\n// Copy the data to the Document Part\nusing (FileStream fileStream = new FileStream(\n       documentPath, FileMode.Open, FileAccess.Read))\n{\n    CopyStream(fileStream, packagePartDocument.GetStream());\n}// end:using(fileStream) - Close and dispose fileStream.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_CreatePartCore_System_Uri_System_String_System_IO_Packaging_CompressionOption_\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_CreatePartCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreatePartCore(Uri,String,CompressionOption)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, creates a new part in the package.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected abstract System.IO.Packaging.PackagePart CreatePartCore (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>partUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The uniform resource identifier (URI) for the part being created.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>contentType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The content type of the data stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>compressionOption</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.compressionoption\" data-linktype=\"relative-path\">CompressionOption</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The compression option for the data stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a></div>\r\n                  </div>\r\n                  <p>The created part.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The derived CreatePartCore method is called by the <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_CreatePart_\" data-linktype=\"relative-path\">CreatePart</a> method to create a part based on the physical format implemented in the derived class.  </p>\n<p> By default, a <a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a> derived class implementation of the abstract <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> class is provided and used.  In the default operation, <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_CreatePart_\" data-linktype=\"relative-path\">CreatePart</a> internally calls CreatePartCore of the <a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a> class to create a new part in a ZIP file.  </p>\n<p> For the default <a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a> derived class, the CreatePartCore method only supports two <code>compressionOption</code> values, <a class=\"xref\" href=\"system.io.packaging.compressionoption\" data-linktype=\"relative-path\">CompressionOption</a> or <a class=\"xref\" href=\"system.io.packaging.compressionoption\" data-linktype=\"relative-path\">CompressionOption</a> compression.  Other <a class=\"xref\" href=\"system.io.packaging.compressionoption\" data-linktype=\"relative-path\">CompressionOption</a> values of <a class=\"xref\" href=\"system.io.packaging.compressionoption\" data-linktype=\"relative-path\">CompressionOption</a>, <a class=\"xref\" href=\"system.io.packaging.compressionoption\" data-linktype=\"relative-path\">CompressionOption</a>, or <a class=\"xref\" href=\"system.io.packaging.compressionoption\" data-linktype=\"relative-path\">CompressionOption</a> use <a class=\"xref\" href=\"system.io.packaging.compressionoption\" data-linktype=\"relative-path\">CompressionOption</a> compression.  </p>\n<p> For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_CreateRelationship_System_Uri_System_IO_Packaging_TargetMode_System_String_\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_CreateRelationship_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateRelationship(Uri,TargetMode,String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a package-level relationship to a part with a given URI, target mode, and relationship type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The uniform resource identifier (URI) of the target part.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.targetmode\" data-linktype=\"relative-path\">TargetMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Indicates if the target part is <a class=\"xref\" href=\"system.io.packaging.targetmode\" data-linktype=\"relative-path\">TargetMode</a> or <a class=\"xref\" href=\"system.io.packaging.targetmode\" data-linktype=\"relative-path\">TargetMode</a> to the package.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>relationshipType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A URI that uniquely defines the role of the relationship.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.packagerelationship\" data-linktype=\"relative-path\">PackageRelationship</a></div>\r\n                  </div>\r\n                  <p>The package-level relationship to the specified part.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>targetUri</code> or <code>relationshipType</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>targetUri</code> part is a <a class=\"xref\" href=\"system.io.packaging.packagerelationship\" data-linktype=\"relative-path\">PackageRelationship</a>, or <code>targetMode</code> is <a class=\"xref\" href=\"system.io.packaging.targetmode\" data-linktype=\"relative-path\">TargetMode</a> and <code>targetUri</code> is an absolute URI.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value for <code>targetMode</code> is not valid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The package is not open (<span class=\"xref\">stem.IO.Packaging.Package.Dispose*</span> or <span class=\"xref\">stem.IO.Packaging.Package.Close*</span> has been called).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The package is read-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A package-level relationship defines an association between the package and an associated target part or resource.  A package-level relationship can be one of two forms.  </p>\n<ul>\n<li><p>Between a <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> to a target part in the package.  </p>\n</li>\n<li><p>Between a <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> to a target resource outside the package.  </p>\n<p>In a package-relationship the package is considered the &quot;owner&quot; of the relationship.  When the package is deleted, all the relationships owned by the package are also deleted.  </p>\n<p>CreateRelationship does not physically change the target part or resource in any way.  </p>\n<p>The target of a relationship cannot be another relationship.  </p>\n<p>If <code>targetMode</code> is specified as <a class=\"xref\" href=\"system.io.packaging.targetmode\" data-linktype=\"relative-path\">TargetMode</a>, <code>targetUri</code> must be a relative URI that is formed according to the <a href=\"http://tools.ietf.org/html/rfc3986\" data-linktype=\"external\">RFC 3986</a> Uniform Resource Identifier (URI) Generic Syntax specification.  The internal relative URI can be either an absolute path that starts with a forward slash (&quot;/&quot;) character such as &quot;/page1.xaml&quot; or &quot;/images/picture4.jpg&quot;, or a relative path such as &quot;../imagespicture1.jpg&quot; that resolves against the package root (&quot;/&quot;) as the base URI.  </p>\n<p>If <code>targetMode</code> is specified as <a class=\"xref\" href=\"system.io.packaging.targetmode\" data-linktype=\"relative-path\">TargetMode</a>, <code>targetUri</code> can be either an absolute or relative URI formed according to the <a href=\"http://tools.ietf.org/html/rfc3986\" data-linktype=\"external\">RFC 3986</a> Uniform Resource Identifier (URI) Generic Syntax specification.  &quot;<a href=\"http://www.microsoft.com/page2.xml\" data-linktype=\"external\">http://www.microsoft.com/page2.xml</a>&quot; is an example of an absolute URI that references an external target resource &quot;page2.xml&quot;.  &quot;images/picture1.jpg&quot; is an example of a relative URI that also references an external target resource &quot;1.jpg&quot; but which resolves against the URI of the package itself.  </p>\n<p><code>relationshipType</code> must be a URI that is formed according to the <a href=\"http://tools.ietf.org/html/rfc3986\" data-linktype=\"external\">RFC 3986</a> Uniform Resource Identifier (URI) Generic Syntax specification.  The following table shows the package-level <code>relationshipType</code> URIs defined by the Open Packaging Conventions (OPC) specification.  </p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Package-level Relationship</th>\n<th>Relationship Type URI</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Core Properties</td>\n<td><a href=\"http://schemas.openxmlformats.org/package/2006/relationships/meta\" data-linktype=\"external\">http://schemas.openxmlformats.org/package/2006/relationships/meta</a> data/core-properties</td>\n</tr>\n<tr>\n<td>Digital Signature</td>\n<td><a href=\"http://schemas.openxmlformats.org/package/2006/relationships/digit\" data-linktype=\"external\">http://schemas.openxmlformats.org/package/2006/relationships/digit</a> al-signature/signature</td>\n</tr>\n<tr>\n<td>Digital Signature Certificate</td>\n<td><a href=\"http://schemas.openxmlformats.org/package/2006/relationships/digit\" data-linktype=\"external\">http://schemas.openxmlformats.org/package/2006/relationships/digit</a> al-signature/certificate</td>\n</tr>\n<tr>\n<td>Digital Signature Origin</td>\n<td><a href=\"http://schemas.openxmlformats.org/package/2006/relationships/digit\" data-linktype=\"external\">http://schemas.openxmlformats.org/package/2006/relationships/digit</a> al-signature/origin</td>\n</tr>\n<tr>\n<td>Thumbnail</td>\n<td><a href=\"http://schemas.openxmlformats.org/package/2006/relationships/meta\" data-linktype=\"external\">http://schemas.openxmlformats.org/package/2006/relationships/meta</a> data/thumbnail</td>\n</tr>\n</tbody>\n</table>\n<p> For more information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example illustrates how to use CreateRelationship to create a <a class=\"xref\" href=\"system.io.packaging.packagerelationship\" data-linktype=\"relative-path\">PackageRelationship</a> between a <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> and a root document part.  For the complete sample, see <a href=\"http://go.microsoft.com/fwlink/?LinkID=160055\" data-linktype=\"external\">Writing a Package Sample</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"packagewrite#PackageWriteCreatePackageRelationship\">&#39; Add the Document part to the Package\nDim packagePartDocument As PackagePart = package.CreatePart(partUriDocument, System.Net.Mime.MediaTypeNames.Text.Xml)\n\n&#39; Copy the data to the Document Part\nUsing fileStream As New FileStream(documentPath, FileMode.Open, FileAccess.Read)\n    CopyStream(fileStream, packagePartDocument.GetStream())\nEnd Using &#39; end:using(fileStream) - Close and dispose fileStream.\n\n&#39; Add a Package Relationship to the Document Part\npackage.CreateRelationship(packagePartDocument.Uri, TargetMode.Internal, PackageRelationshipType)\n</code></pre><pre><code class=\"lang-cs\" name=\"packagewrite#PackageWriteCreatePackageRelationship\">// Add the Document part to the Package\nPackagePart packagePartDocument =\n    package.CreatePart(partUriDocument,\n                   System.Net.Mime.MediaTypeNames.Text.Xml);\n\n// Copy the data to the Document Part\nusing (FileStream fileStream = new FileStream(\n       documentPath, FileMode.Open, FileAccess.Read))\n{\n    CopyStream(fileStream, packagePartDocument.GetStream());\n}// end:using(fileStream) - Close and dispose fileStream.\n\n// Add a Package Relationship to the Document Part\npackage.CreateRelationship(packagePartDocument.Uri,\n                           TargetMode.Internal,\n                           PackageRelationshipType);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_CreateRelationship_System_Uri_System_IO_Packaging_TargetMode_System_String_System_String_\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_CreateRelationship_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateRelationship(Uri,TargetMode,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a package-level relationship to a part with a given URI, target mode, relationship type, and identifier (ID).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType, string id);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The uniform resource identifier (URI) of the target part.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.targetmode\" data-linktype=\"relative-path\">TargetMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Indicates if the target part is <a class=\"xref\" href=\"system.io.packaging.targetmode\" data-linktype=\"relative-path\">TargetMode</a> or <a class=\"xref\" href=\"system.io.packaging.targetmode\" data-linktype=\"relative-path\">TargetMode</a> to the package.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>relationshipType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A URI that uniquely defines the role of the relationship.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>id</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A unique XML identifier.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.packagerelationship\" data-linktype=\"relative-path\">PackageRelationship</a></div>\r\n                  </div>\r\n                  <p>The package-level relationship to the specified part.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>targetUri</code> or <code>relationshipType</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>targetUri</code> part is a <a class=\"xref\" href=\"system.io.packaging.packagerelationship\" data-linktype=\"relative-path\">PackageRelationship</a>, or <code>targetMode</code> is <a class=\"xref\" href=\"system.io.packaging.targetmode\" data-linktype=\"relative-path\">TargetMode</a> and <code>targetUri</code> is an absolute URI.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value for <code>targetMode</code> is not valid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The package is not open (<span class=\"xref\">stem.IO.Packaging.Package.Dispose*</span> or <span class=\"xref\">stem.IO.Packaging.Package.Close*</span> has been called).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The package is read-only.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlexception\" data-linktype=\"relative-path\">XmlException</a></div>\r\n                  </div>\r\n                  <p><code>id</code> is not a valid XML identifier; or a part with the specified <code>id</code> already occurs in the package.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A package-level relationship defines an association between the package and an associated target part or resource.  A package-level relationship can be one of two forms.  </p>\n<ul>\n<li><p>Between a <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> to a target part in the package.  </p>\n</li>\n<li><p>Between a <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> to a target resource outside the package.  </p>\n<p>In a package-relationship the package is considered the &quot;owner&quot; of the relationship.  When the package is deleted, all the relationships owned by the package are also deleted.  </p>\n<p>CreateRelationship does not physically change the target part or resource in any way.  </p>\n<p>The target of a relationship cannot be another relationship.  </p>\n<p><code>id</code> must be a valid XML identifier.  The <code>id</code> type is xsd:ID and must follow the naming conventions prescribed in the XML Schema Part 2: Datatypes specification (see <a href=\"http://www.w3.org/TR/xmlschema-2/\" data-linktype=\"external\">http://www.w3.org/TR/xmlschema-2/#ID</a>).  </p>\n<p>If <code>id</code> is specified as <code>null</code> a unique ID will be automatically generated.  An <code>id</code> specified by an empty string is not valid.  </p>\n<p>If <code>targetMode</code> is specified as <a class=\"xref\" href=\"system.io.packaging.targetmode\" data-linktype=\"relative-path\">TargetMode</a>, <code>targetUri</code> must be a relative URI that is formed according to the <a href=\"http://tools.ietf.org/html/rfc3986\" data-linktype=\"external\">RFC 3986</a> Uniform Resource Identifier (URI) Generic Syntax specification.  The internal relative URI can be either an absolute path that starts with a forward slash (&quot;/&quot;) character such as &quot;/page1.xaml&quot; or &quot;/images/picture4.jpg&quot;, or a relative path such as &quot;../imagespicture1.jpg&quot; that resolves against the package root (&quot;/&quot;) as the base URI.  </p>\n<p>If <code>targetMode</code> is specified as <a class=\"xref\" href=\"system.io.packaging.targetmode\" data-linktype=\"relative-path\">TargetMode</a>, <code>targetUri</code> can be either an absolute or relative URI formed according to the <a href=\"http://tools.ietf.org/html/rfc3986\" data-linktype=\"external\">RFC 3986</a> Uniform Resource Identifier (URI) Generic Syntax specification.  &quot;<a href=\"http://www.microsoft.com/page2.xml\" data-linktype=\"external\">http://www.microsoft.com/page2.xml</a>&quot; is an example of an absolute URI that references an external target resource &quot;page2.xml&quot;.  &quot;images/picture1.jpg&quot; is an example of a relative URI that also references an external target resource &quot;1.jpg&quot; but which resolves against the URI of the package itself.  </p>\n<p><code>relationshipType</code> must be a URI that is formed according to the <a href=\"http://tools.ietf.org/html/rfc3986\" data-linktype=\"external\">RFC 3986</a> Uniform Resource Identifier (URI) Generic Syntax specification.  The following table shows the package-level <code>relationshipType</code> URIs defined by the Open Packaging Conventions (OPC) specification.  </p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Package-level Relationship</th>\n<th>Relationship Type URI</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Core Properties</td>\n<td><a href=\"http://schemas.openxmlformats.org/package/2006/relationships/meta\" data-linktype=\"external\">http://schemas.openxmlformats.org/package/2006/relationships/meta</a> data/core-properties</td>\n</tr>\n<tr>\n<td>Digital Signature</td>\n<td><a href=\"http://schemas.openxmlformats.org/package/2006/relationships/digit\" data-linktype=\"external\">http://schemas.openxmlformats.org/package/2006/relationships/digit</a> al-signature/signature</td>\n</tr>\n<tr>\n<td>Digital Signature Certificate</td>\n<td><a href=\"http://schemas.openxmlformats.org/package/2006/relationships/digit\" data-linktype=\"external\">http://schemas.openxmlformats.org/package/2006/relationships/digit</a> al-signature/certificate</td>\n</tr>\n<tr>\n<td>Digital Signature Origin</td>\n<td><a href=\"http://schemas.openxmlformats.org/package/2006/relationships/digit\" data-linktype=\"external\">http://schemas.openxmlformats.org/package/2006/relationships/digit</a> al-signature/origin</td>\n</tr>\n<tr>\n<td>Thumbnail</td>\n<td><a href=\"http://schemas.openxmlformats.org/package/2006/relationships/meta\" data-linktype=\"external\">http://schemas.openxmlformats.org/package/2006/relationships/meta</a> data/thumbnail</td>\n</tr>\n</tbody>\n</table>\n<p> For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example illustrates how to use <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_CreateRelationship_\" data-linktype=\"relative-path\">CreateRelationship</a> to create a <a class=\"xref\" href=\"system.io.packaging.packagerelationship\" data-linktype=\"relative-path\">PackageRelationship</a> between a <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> and a root document part.  For the complete sample, see <a href=\"http://go.microsoft.com/fwlink/?LinkID=160055\" data-linktype=\"external\">Writing a Package Sample</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"packagewrite#PackageWriteCreatePackageRelationship\">&#39; Add the Document part to the Package\nDim packagePartDocument As PackagePart = package.CreatePart(partUriDocument, System.Net.Mime.MediaTypeNames.Text.Xml)\n\n&#39; Copy the data to the Document Part\nUsing fileStream As New FileStream(documentPath, FileMode.Open, FileAccess.Read)\n    CopyStream(fileStream, packagePartDocument.GetStream())\nEnd Using &#39; end:using(fileStream) - Close and dispose fileStream.\n\n&#39; Add a Package Relationship to the Document Part\npackage.CreateRelationship(packagePartDocument.Uri, TargetMode.Internal, PackageRelationshipType)\n</code></pre><pre><code class=\"lang-cs\" name=\"packagewrite#PackageWriteCreatePackageRelationship\">// Add the Document part to the Package\nPackagePart packagePartDocument =\n    package.CreatePart(partUriDocument,\n                   System.Net.Mime.MediaTypeNames.Text.Xml);\n\n// Copy the data to the Document Part\nusing (FileStream fileStream = new FileStream(\n       documentPath, FileMode.Open, FileAccess.Read))\n{\n    CopyStream(fileStream, packagePartDocument.GetStream());\n}// end:using(fileStream) - Close and dispose fileStream.\n\n// Add a Package Relationship to the Document Part\npackage.CreateRelationship(packagePartDocument.Uri,\n                           TargetMode.Internal,\n                           PackageRelationshipType);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_DeletePart_System_Uri_\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_DeletePart_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeletePart(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Deletes a part with a given URI from the package.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DeletePart (Uri partUri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>partUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the part to delete.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>partUri</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>partUri</code> is not a valid <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> URI.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The package is not open (<span class=\"xref\">stem.IO.Packaging.Package.Dispose*</span> or <span class=\"xref\">stem.IO.Packaging.Package.Close*</span> has been called).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The package is read-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>partUri</code> must be a relative URI that consists of an absolute path which starts with a forward slash (&quot;/&quot;) character.  The absolute path is relative to the package root and is formed according to the <a href=\"http://tools.ietf.org/html/rfc3986\" data-linktype=\"external\">RFC 3986</a> Uniform Resource Identifier (URI) Generic Syntax specification.  &quot;/page1.xaml&quot; and &quot;/images/picture4.jpg&quot; are examples of valid part URIs.  </p>\n<p> No exception is raised if a part with the specified <code>partUri</code> is not in the package.  (You can use the <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_PartExists_\" data-linktype=\"relative-path\">PartExists</a> method to determine whether a part with a specified <code>partUri</code> is in the package.)  </p>\n<p> For additional information, see the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_DeletePartCore_System_Uri_\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_DeletePartCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeletePartCore(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, deletes a part with a given URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected abstract void DeletePartCore (Uri partUri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>partUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">stem.IO.Packaging.PackagePart.Uri*</span> of the <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> to delete.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, a <a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a> derived class implementation of the abstract <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> class is provided and used.  In the default operation, <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_DeletePart_\" data-linktype=\"relative-path\">DeletePart</a> internally calls DeletePartCore of the <a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a> class to perform the actual delete operation based on the physical format implemented in the derived class.  </p>\n<p> For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_DeleteRelationship_System_String_\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_DeleteRelationship_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeleteRelationship(String)</div>        \r\n          </div>\r\n    \r\n            <p>Deletes a package-level relationship.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DeleteRelationship (string id);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>id</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">stem.IO.Packaging.PackageRelationship.Id*</span> of the <a class=\"xref\" href=\"system.io.packaging.packagerelationship\" data-linktype=\"relative-path\">PackageRelationship</a> to delete.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>id</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The package is not open (<span class=\"xref\">stem.IO.Packaging.Package.Dispose*</span> or <span class=\"xref\">stem.IO.Packaging.Package.Close*</span> has been called).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The package is read-only.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlexception\" data-linktype=\"relative-path\">XmlException</a></div>\r\n                  </div>\r\n                  <p><code>id</code> is not a valid XML identifier.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A package-level relationship defines an association between the package and an associated target part or resource.  A package-level relationship can be one of two forms.  </p>\n<ul>\n<li><p>Between a <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> to a target part in the package.  </p>\n</li>\n<li><p>Between a <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> to a target resource outside the package.  </p>\n<p>In a package-relationship the package is considered the &quot;owner&quot; of the relationship.  When the package is deleted, all the relationships owned by the package are also deleted.  </p>\n<p>No exception is raised if a relationship with the specified <code>id</code> is not in the package.  </p>\n<p>DeleteRelationship does not physically change the target part in any way.  </p>\n<p>For more information about package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Flushes and saves the content of all parts and relationships, closes the package, and releases all resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To make sure that all changes are correctly saved, Dispose also finalizes, flushes, and closes all parts and relationships that are contained in the package.  </p>\n<p> For the <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> class, Dispose and <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Close_\" data-linktype=\"relative-path\">Close</a> perform the same operation - there is no reason to call Dispose if you call <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Close_\" data-linktype=\"relative-path\">Close</a>, or vice-versa.  </p>\n<p> <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Close_\" data-linktype=\"relative-path\">Close</a> and Dispose internally call <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Flush_\" data-linktype=\"relative-path\">Flush</a>.  </p>\n<p> Derived classes that allocate and manage non-memory resources should override this method to release resources when Dispose is called. Derived-class overrides should also call <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Flush_\" data-linktype=\"relative-path\">Flush</a> and the base-class Dispose method to make sure that base-class cleanup is always performed.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>using</code> statement (different from the <code>using</code> namespace directive) is the recommended way to <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Close_\" data-linktype=\"relative-path\">Close</a> and Dispose a package. <a href=\"http://go.microsoft.com/fwlink/?LinkID=160055\" data-linktype=\"external\">Writing a Package Sample</a> shows how to close and dispose a package by using the <code>using</code> statement.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_Flush\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_Flush_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Flush()</div>        \r\n          </div>\r\n    \r\n            <p>Saves the contents of all parts and relationships that are contained in the package.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Flush ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The package is not open (<span class=\"xref\">stem.IO.Packaging.Package.Dispose*</span> or <span class=\"xref\">stem.IO.Packaging.Package.Close*</span> has been called).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The package is read-only and cannot be modified.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Flush internally calls the derived class&#39;s <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_FlushCore_\" data-linktype=\"relative-path\">FlushCore</a> implemetation to perform the actual format-specific flush operation.  The derived class&#39;s <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_FlushCore_\" data-linktype=\"relative-path\">FlushCore</a> method is responsible for actually saving the part and relationship content to the specific physical derived class implementation.  </p>\n<p> By default, a <a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a> derived implementation of the abstract <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> base class is provided and used. In the default operation, Flush internally calls <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_FlushCore_\" data-linktype=\"relative-path\">FlushCore</a> to save the parts and relationships in a ZIP file package.  </p>\n<p> Flush is called automatically by the <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Close_\" data-linktype=\"relative-path\">Close</a> and <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Dispose_\" data-linktype=\"relative-path\">Dispose</a> methods.  When <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Close_\" data-linktype=\"relative-path\">Close</a> or <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Dispose_\" data-linktype=\"relative-path\">Dispose</a> is called you do not have to call Flush separately.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_FlushCore\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_FlushCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FlushCore()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, saves the content of all parts and relationships to the derived class store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected abstract void FlushCore ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>FlushCore is called by the <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Flush_\" data-linktype=\"relative-path\">Flush</a> method to perform the actual flush operation based on the physical format implemented in the derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_GetPart_System_Uri_\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_GetPart_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetPart(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the part with a given URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Packaging.PackagePart GetPart (Uri partUri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>partUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The uniform resource identifier (URI) of the part to return.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a></div>\r\n                  </div>\r\n                  <p>The part with the specified <code>partUri</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>partUri</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>partUri</code> is not a valid <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> uniform resource identifier (URI).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A part with the specified <code>partUri</code> is not in the package.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The package is not open (<span class=\"xref\">stem.IO.Packaging.Package.Dispose*</span> or <span class=\"xref\">stem.IO.Packaging.Package.Close*</span> has been called).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The package is write-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown if a part with the specified <code>partUri</code> does not exist.  </p>\n<p> The <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_PartExists_\" data-linktype=\"relative-path\">PartExists</a> method can be used to determine whether <code>partUri</code> references an existing part.  </p>\n<p> By default, a <a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a> derived implementation of the abstract <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> base class is provided and used.  In the default operation, GetPart internally calls <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_GetPartCore_\" data-linktype=\"relative-path\">GetPartCore</a> of the <a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a> class to return a requested part from a ZIP file.  </p>\n<p> For additional information, see the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to locate, retrieve, and read parts that are contained in a package.  For the complete sample, see <a href=\"http://go.microsoft.com/fwlink/?LinkID=160034\" data-linktype=\"external\">Reading a Package Sample</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"PackageRead#PackageReadUsing\">&#39; Open the Package.\n&#39; (&#39;using&#39; statement insures that &#39;package&#39; is\n&#39;  closed and disposed when it goes out of scope.)\nUsing package As Package = Package.Open(packagePath, FileMode.Open, FileAccess.Read)\n\tDim documentPart As PackagePart = Nothing\n\tDim resourcePart As PackagePart = Nothing\n\n\t&#39; Get the Package Relationships and look for\n\t&#39;   the Document part based on the RelationshipType\n\tDim uriDocumentTarget As Uri = Nothing\n\tFor Each relationship As PackageRelationship In package.GetRelationshipsByType(PackageRelationshipType)\n\t\t&#39; Resolve the Relationship Target Uri\n\t\t&#39;   so the Document Part can be retrieved.\n\t\turiDocumentTarget = PackUriHelper.ResolvePartUri(New Uri(&quot;/&quot;, UriKind.Relative), relationship.TargetUri)\n\n\t\t&#39; Open the Document Part, write the contents to a file.\n\t\tdocumentPart = package.GetPart(uriDocumentTarget)\n\t\tExtractPart(documentPart, targetDirectory)\n\tNext relationship\n\n\t&#39; Get the Document part&#39;s Relationships,\n\t&#39;   and look for required resources.\n\tDim uriResourceTarget As Uri = Nothing\n\tFor Each relationship As PackageRelationship In documentPart.GetRelationshipsByType(ResourceRelationshipType)\n\t\t&#39; Resolve the Relationship Target Uri\n\t\t&#39;   so the Resource Part can be retrieved.\n\t\turiResourceTarget = PackUriHelper.ResolvePartUri(documentPart.Uri, relationship.TargetUri)\n\n\t\t&#39; Open the Resource Part and write the contents to a file.\n\t\tresourcePart = package.GetPart(uriResourceTarget)\n\t\tExtractPart(resourcePart, targetDirectory)\n\tNext relationship\n\nEnd Using &#39; end:using(Package package) - Close &amp; dispose package.\n</code></pre><pre><code class=\"lang-cs\" name=\"PackageRead#PackageReadUsing\">// Open the Package.\n// (&#39;using&#39; statement insures that &#39;package&#39; is\n//  closed and disposed when it goes out of scope.)\nusing (Package package =\n    Package.Open(packagePath, FileMode.Open, FileAccess.Read))\n{\n    PackagePart documentPart = null;\n    PackagePart resourcePart = null;\n\n    // Get the Package Relationships and look for\n    //   the Document part based on the RelationshipType\n    Uri uriDocumentTarget = null;\n    foreach (PackageRelationship relationship in\n        package.GetRelationshipsByType(PackageRelationshipType))\n    {\n        // Resolve the Relationship Target Uri\n        //   so the Document Part can be retrieved.\n        uriDocumentTarget = PackUriHelper.ResolvePartUri(\n            new Uri(&quot;/&quot;, UriKind.Relative), relationship.TargetUri);\n\n        // Open the Document Part, write the contents to a file.\n        documentPart = package.GetPart(uriDocumentTarget);\n        ExtractPart(documentPart, targetDirectory);\n    }\n\n    // Get the Document part&#39;s Relationships,\n    //   and look for required resources.\n    Uri uriResourceTarget = null;\n    foreach (PackageRelationship relationship in\n        documentPart.GetRelationshipsByType(\n                                ResourceRelationshipType))\n    {\n        // Resolve the Relationship Target Uri\n        //   so the Resource Part can be retrieved.\n        uriResourceTarget = PackUriHelper.ResolvePartUri(\n            documentPart.Uri, relationship.TargetUri);\n\n        // Open the Resource Part and write the contents to a file.\n        resourcePart = package.GetPart(uriResourceTarget);\n        ExtractPart(resourcePart, targetDirectory);\n    }\n\n}// end:using(Package package) - Close &amp; dispose package.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_GetPartCore_System_Uri_\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_GetPartCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetPartCore(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, returns the part addressed by a given URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected abstract System.IO.Packaging.PackagePart GetPartCore (Uri partUri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>partUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The uniform resource identifier (URI) of the part to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a></div>\r\n                  </div>\r\n                  <p>The requested part; or <code>null</code>, if a part with the specified <code>partUri</code> is not in the package.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, a <a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a> derived implementation of the abstract <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> class is provided and used.  In the default operation, <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_GetPart_\" data-linktype=\"relative-path\">GetPart</a> internally calls GetPartCore of the <a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a> class to retrieve a part from a ZIP file.  </p>\n<p> For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_GetParts\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_GetParts_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetParts()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a collection of all the parts in the package.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Packaging.PackagePartCollection GetParts ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.packagepartcollection\" data-linktype=\"relative-path\">PackagePartCollection</a></div>\r\n                  </div>\r\n                  <p>A collection of all the <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> elements that are contained in the package.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The package is not open (<span class=\"xref\">stem.IO.Packaging.Package.Dispose*</span> or <span class=\"xref\">stem.IO.Packaging.Package.Close*</span> has been called).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The package is write-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>GetParts returns a collection of all parts that are contained in the package including <a class=\"xref\" href=\"system.io.packaging.packagerelationship\" data-linktype=\"relative-path\">PackageRelationship</a> parts.  </p>\n<p> GetParts will never return <code>null</code>; however, the returned collection will contain zero elements if the package contains no parts.  </p>\n<p> By default, a <a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a> derived implementation of the abstract <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> base class is provided and used.  In the default operation, GetParts calls the <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_GetPartsCore_\" data-linktype=\"relative-path\">GetPartsCore</a> method of the <a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a> class to return the parts from a ZIP file.  </p>\n<p> For more information about packages and package parts, see section 1.1 of the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the GetParts method to obtain a collection of the parts that are contained in a <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a>.  For the complete program source code, see <a href=\"http://go.microsoft.com/fwlink/?LinkID=159966\" data-linktype=\"external\">Creating a Package with a Digital Signature Sample</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_GetPartsCore\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_GetPartsCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetPartsCore()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, returns an array of all the parts in the package.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected abstract System.IO.Packaging.PackagePart[] GetPartsCore ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a>[]</div>\r\n                  </div>\r\n                  <p>An array of all the parts that are contained in the package.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The derived class GetPartsCore implementation is called by the <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_GetParts_\" data-linktype=\"relative-path\">GetParts</a> method to access and return the array of parts based on the physical format implemented in the derived class.  </p>\n<p> By default, a <a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a> derived implementation of the abstract <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> class is provided and used.  In the default operation, <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_GetParts_\" data-linktype=\"relative-path\">GetParts</a> internally calls <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_GetPartCore_\" data-linktype=\"relative-path\">GetPartCore</a> of the <a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a> class to retrieve the parts from a ZIP file.  </p>\n<p> For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_GetRelationship_System_String_\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_GetRelationship_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetRelationship(String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the package-level relationship with a given identifier.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Packaging.PackageRelationship GetRelationship (string id);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>id</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">stem.IO.Packaging.PackageRelationship.Id*</span> of the relationship to return.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.packagerelationship\" data-linktype=\"relative-path\">PackageRelationship</a></div>\r\n                  </div>\r\n                  <p>The package-level relationship with the specified <code>id</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>id</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlexception\" data-linktype=\"relative-path\">XmlException</a></div>\r\n                  </div>\r\n                  <p><code>id</code> is not a valid XML identifier.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A relationship with the specified <code>id</code> is not in the package.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The package is not open (<span class=\"xref\">stem.IO.Packaging.Package.Dispose*</span> or <span class=\"xref\">stem.IO.Packaging.Package.Close*</span> has been called).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The package is write-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>id</code> must be a valid XML identifier.  The <code>id</code> type is xsd:ID and must follow the naming conventions prescribed in the XML Schema Part 2: Datatypes specification (see <a href=\"http://www.w3.org/TR/xmlschema-2/#ID\" data-linktype=\"external\">http://www.w3.org/TR/xmlschema-2/#ID</a>).  </p>\n<p> For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_GetRelationships\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_GetRelationships_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetRelationships()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a collection of all the package-level relationships.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Packaging.PackageRelationshipCollection GetRelationships ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.packagerelationshipcollection\" data-linktype=\"relative-path\">PackageRelationshipCollection</a></div>\r\n                  </div>\r\n                  <p>A collection of all the package-level relationships that are contained in the package.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The package is not open (<span class=\"xref\">stem.IO.Packaging.Package.Dispose*</span> or <span class=\"xref\">stem.IO.Packaging.Package.Close*</span> has been called).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The package is write-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>GetRelationships will never return <code>null</code>; however the returned collection may contain zero elements if the package contains no package-level relationships.  </p>\n<p> A package-level relationship defines an association between the package and an associated target part or resource.  A package-level relationship can be one of two forms.  </p>\n<ul>\n<li><p>Between a <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> to a target part in the package.  </p>\n</li>\n<li><p>Between a <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> to a target resource outside the package.  </p>\n<p>In a package-relationship the package is considered the &quot;owner&quot; of the relationship.  When the package is deleted, all the relationships owned by the package are also deleted.  The process of creating or deleting the relationship does not physically alter the target part or resource in any way.  </p>\n<p>For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_GetRelationshipsByType_System_String_\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_GetRelationshipsByType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetRelationshipsByType(String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a collection of all the package-level relationships that match a given <span class=\"xref\">stem.IO.Packaging.PackageRelationship.RelationshipType*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType (string relationshipType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>relationshipType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">stem.IO.Packaging.PackageRelationship.RelationshipType*</span> to match and return in the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.packagerelationshipcollection\" data-linktype=\"relative-path\">PackageRelationshipCollection</a></div>\r\n                  </div>\r\n                  <p>A collection of package-level relationships that match the specified <code>relationshipType</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>relationshipType</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>relationshipType</code> is an empty string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The package is not open (<span class=\"xref\">stem.IO.Packaging.Package.Dispose*</span> or <span class=\"xref\">stem.IO.Packaging.Package.Close*</span> has been called).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The package is write-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_GetRelationships_\" data-linktype=\"relative-path\">GetRelationships</a> will never return <code>null</code>; however the returned collection may contain zero elements if there are no package-level relationships that match the specified <code>relationshipType</code>.  </p>\n<p> The following table shows the package-level <code>relationshipType</code> URIs defined by the Open Packaging Conventions (OPC) specification.  </p>\n<table>\n<thead>\n<tr>\n<th>Package-level Relationship</th>\n<th>Relationship Type URI</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Core Properties</td>\n<td><a href=\"http://schemas.openxmlformats.org/package/2006/relationships/meta\" data-linktype=\"external\">http://schemas.openxmlformats.org/package/2006/relationships/meta</a> data/core-properties</td>\n</tr>\n<tr>\n<td>Digital Signature</td>\n<td><a href=\"http://schemas.openxmlformats.org/package/2006/relationships/digit\" data-linktype=\"external\">http://schemas.openxmlformats.org/package/2006/relationships/digit</a> al-signature/signature</td>\n</tr>\n<tr>\n<td>Digital Signature Certificate</td>\n<td><a href=\"http://schemas.openxmlformats.org/package/2006/relationships/digit\" data-linktype=\"external\">http://schemas.openxmlformats.org/package/2006/relationships/digit</a> al-signature/certificate</td>\n</tr>\n<tr>\n<td>Digital Signature Origin</td>\n<td><a href=\"http://schemas.openxmlformats.org/package/2006/relationships/digit\" data-linktype=\"external\">http://schemas.openxmlformats.org/package/2006/relationships/digit</a> al-signature/origin</td>\n</tr>\n<tr>\n<td>Thumbnail</td>\n<td><a href=\"http://schemas.openxmlformats.org/package/2006/relationships/meta\" data-linktype=\"external\">http://schemas.openxmlformats.org/package/2006/relationships/meta</a> data/thumbnail</td>\n</tr>\n</tbody>\n</table>\n<p> For additional information, see the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to retrieve the relationships that have been defined for the package.  For the complete sample, see <a href=\"http://go.microsoft.com/fwlink/?LinkID=160034\" data-linktype=\"external\">Reading a Package Sample</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"PackageRead#PackageReadUsing\">&#39; Open the Package.\n&#39; (&#39;using&#39; statement insures that &#39;package&#39; is\n&#39;  closed and disposed when it goes out of scope.)\nUsing package As Package = Package.Open(packagePath, FileMode.Open, FileAccess.Read)\n\tDim documentPart As PackagePart = Nothing\n\tDim resourcePart As PackagePart = Nothing\n\n\t&#39; Get the Package Relationships and look for\n\t&#39;   the Document part based on the RelationshipType\n\tDim uriDocumentTarget As Uri = Nothing\n\tFor Each relationship As PackageRelationship In package.GetRelationshipsByType(PackageRelationshipType)\n\t\t&#39; Resolve the Relationship Target Uri\n\t\t&#39;   so the Document Part can be retrieved.\n\t\turiDocumentTarget = PackUriHelper.ResolvePartUri(New Uri(&quot;/&quot;, UriKind.Relative), relationship.TargetUri)\n\n\t\t&#39; Open the Document Part, write the contents to a file.\n\t\tdocumentPart = package.GetPart(uriDocumentTarget)\n\t\tExtractPart(documentPart, targetDirectory)\n\tNext relationship\n\n\t&#39; Get the Document part&#39;s Relationships,\n\t&#39;   and look for required resources.\n\tDim uriResourceTarget As Uri = Nothing\n\tFor Each relationship As PackageRelationship In documentPart.GetRelationshipsByType(ResourceRelationshipType)\n\t\t&#39; Resolve the Relationship Target Uri\n\t\t&#39;   so the Resource Part can be retrieved.\n\t\turiResourceTarget = PackUriHelper.ResolvePartUri(documentPart.Uri, relationship.TargetUri)\n\n\t\t&#39; Open the Resource Part and write the contents to a file.\n\t\tresourcePart = package.GetPart(uriResourceTarget)\n\t\tExtractPart(resourcePart, targetDirectory)\n\tNext relationship\n\nEnd Using &#39; end:using(Package package) - Close &amp; dispose package.\n</code></pre><pre><code class=\"lang-cs\" name=\"PackageRead#PackageReadUsing\">// Open the Package.\n// (&#39;using&#39; statement insures that &#39;package&#39; is\n//  closed and disposed when it goes out of scope.)\nusing (Package package =\n    Package.Open(packagePath, FileMode.Open, FileAccess.Read))\n{\n    PackagePart documentPart = null;\n    PackagePart resourcePart = null;\n\n    // Get the Package Relationships and look for\n    //   the Document part based on the RelationshipType\n    Uri uriDocumentTarget = null;\n    foreach (PackageRelationship relationship in\n        package.GetRelationshipsByType(PackageRelationshipType))\n    {\n        // Resolve the Relationship Target Uri\n        //   so the Document Part can be retrieved.\n        uriDocumentTarget = PackUriHelper.ResolvePartUri(\n            new Uri(&quot;/&quot;, UriKind.Relative), relationship.TargetUri);\n\n        // Open the Document Part, write the contents to a file.\n        documentPart = package.GetPart(uriDocumentTarget);\n        ExtractPart(documentPart, targetDirectory);\n    }\n\n    // Get the Document part&#39;s Relationships,\n    //   and look for required resources.\n    Uri uriResourceTarget = null;\n    foreach (PackageRelationship relationship in\n        documentPart.GetRelationshipsByType(\n                                ResourceRelationshipType))\n    {\n        // Resolve the Relationship Target Uri\n        //   so the Resource Part can be retrieved.\n        uriResourceTarget = PackUriHelper.ResolvePartUri(\n            documentPart.Uri, relationship.TargetUri);\n\n        // Open the Resource Part and write the contents to a file.\n        resourcePart = package.GetPart(uriResourceTarget);\n        ExtractPart(resourcePart, targetDirectory);\n    }\n\n}// end:using(Package package) - Close &amp; dispose package.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_Open_System_IO_Stream_\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_Open_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Open(Stream)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a package on a given IO stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.IO.Packaging.Package Open (System.IO.Stream stream);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The IO stream on which to open the package.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a></div>\r\n                  </div>\r\n                  <p>The opened package.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>stream</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The package to open requires read or read/write permission and the specified <code>stream</code> is write-only; or, the package to open requires write or read/write permission and the specified <code>stream</code> is read-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a> is the default package type that is used by the Open method.  </p>\n<p> For additional information, see the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_Open_System_String_\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_Open_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Open(String)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a package at a given path and file name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.IO.Packaging.Package Open (string path);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The path and file name of the package.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a></div>\r\n                  </div>\r\n                  <p>The opened package.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>path</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a> is the default package type that is used by the Open method.  </p>\n<p> This <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Open_\" data-linktype=\"relative-path\">Open</a> method opens the package with default attributes <a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a>, <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a>, and <a class=\"xref\" href=\"system.io.fileshare\" data-linktype=\"relative-path\">FileShare</a> (to specify different attributes use one of the other Open method overloads).  </p>\n<p> For additional information, see the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to create a new <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> that incorporates <a class=\"xref\" href=\"system.io.packaging.packagerelationship\" data-linktype=\"relative-path\">PackageRelationship</a> and <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> elements together with stored data.  For the complete sample, see <a href=\"http://go.microsoft.com/fwlink/?LinkID=160055\" data-linktype=\"external\">Writing a Package Sample</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"PackageWrite#PackageWriteCreatePackage\">&#39;  -------------------------- CreatePackage --------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39;   Creates a package zip file containing specified\n&#39;&#39;&#39;   content and resource files.&lt;/summary&gt;\nPrivate Shared Sub CreatePackage()\n    &#39; Convert system path and file names to Part URIs. In this example\n    &#39; Dim partUriDocument as Uri /* /Content/Document.xml */ =\n    &#39;     PackUriHelper.CreatePartUri(\n    &#39;         New Uri(&quot;Content\\Document.xml&quot;, UriKind.Relative))\n    &#39; Dim partUriResource as Uri /* /Resources/Image1.jpg */ =\n    &#39;     PackUriHelper.CreatePartUri(\n    &#39;         New Uri(&quot;Resources\\Image1.jpg&quot;, UriKind.Relative))\n    Dim partUriDocument As Uri = PackUriHelper.CreatePartUri(New Uri(documentPath, UriKind.Relative))\n    Dim partUriResource As Uri = PackUriHelper.CreatePartUri(New Uri(resourcePath, UriKind.Relative))\n\n    &#39; Create the Package\n    &#39; (If the package file already exists, FileMode.Create will\n    &#39;  automatically delete it first before creating a new one.\n    &#39;  The &#39;using&#39; statement insures that &#39;package&#39; is\n    &#39;  closed and disposed when it goes out of scope.)\n    Using package As Package = Package.Open(packagePath, FileMode.Create)\n        &#39; Add the Document part to the Package\n        Dim packagePartDocument As PackagePart = package.CreatePart(partUriDocument, System.Net.Mime.MediaTypeNames.Text.Xml)\n\n        &#39; Copy the data to the Document Part\n        Using fileStream As New FileStream(documentPath, FileMode.Open, FileAccess.Read)\n            CopyStream(fileStream, packagePartDocument.GetStream())\n        End Using &#39; end:using(fileStream) - Close and dispose fileStream.\n\n        &#39; Add a Package Relationship to the Document Part\n        package.CreateRelationship(packagePartDocument.Uri, TargetMode.Internal, PackageRelationshipType)\n\n        &#39; Add a Resource Part to the Package\n        Dim packagePartResource As PackagePart = package.CreatePart(partUriResource, System.Net.Mime.MediaTypeNames.Image.Jpeg)\n\n        &#39; Copy the data to the Resource Part\n        Using fileStream As New FileStream(resourcePath, FileMode.Open, FileAccess.Read)\n            CopyStream(fileStream, packagePartResource.GetStream())\n        End Using &#39; end:using(fileStream) - Close and dispose fileStream.\n\n        &#39; Add Relationship from the Document part to the Resource part\n        packagePartDocument.CreateRelationship(New Uri(&quot;../resources/image1.jpg&quot;, UriKind.Relative), TargetMode.Internal, ResourceRelationshipType)\n\n    End Using &#39; end:using (Package package) - Close and dispose package.\n\nEnd Sub &#39; end:CreatePackage()\n\n\n&#39;  --------------------------- CopyStream ---------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39;   Copies data from a source stream to a target stream.&lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;source&quot;&gt;\n&#39;&#39;&#39;   The source stream to copy from.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;target&quot;&gt;\n&#39;&#39;&#39;   The destination stream to copy to.&lt;/param&gt;\nPrivate Shared Sub CopyStream(ByVal source As Stream, ByVal target As Stream)\n    Const bufSize As Integer = &amp;H1000\n    Dim buf(bufSize - 1) As Byte\n    Dim bytesRead As Integer = 0\n    bytesRead = source.Read(buf, 0, bufSize)\n    Do While bytesRead &gt; 0\n        target.Write(buf, 0, bytesRead)\n        bytesRead = source.Read(buf, 0, bufSize)\n    Loop\nEnd Sub &#39; end:CopyStream()\n</code></pre><pre><code class=\"lang-cs\" name=\"PackageWrite#PackageWriteCreatePackage\">//  -------------------------- CreatePackage --------------------------\n/// &lt;summary&gt;\n///   Creates a package zip file containing specified\n///   content and resource files.&lt;/summary&gt;\nprivate static void CreatePackage()\n{\n    // Convert system path and file names to Part URIs. In this example\n    // Uri partUriDocument /* /Content/Document.xml */ =\n    //     PackUriHelper.CreatePartUri(\n    //         new Uri(&quot;Content\\Document.xml&quot;, UriKind.Relative));\n    // Uri partUriResource /* /Resources/Image1.jpg */ =\n    //     PackUriHelper.CreatePartUri(\n    //         new Uri(&quot;Resources\\Image1.jpg&quot;, UriKind.Relative));\n    Uri partUriDocument = PackUriHelper.CreatePartUri(\n                              new Uri(documentPath, UriKind.Relative));\n    Uri partUriResource = PackUriHelper.CreatePartUri(\n                              new Uri(resourcePath, UriKind.Relative));\n\n    // Create the Package\n    // (If the package file already exists, FileMode.Create will\n    //  automatically delete it first before creating a new one.\n    //  The &#39;using&#39; statement insures that &#39;package&#39; is\n    //  closed and disposed when it goes out of scope.)\n    using (Package package =\n        Package.Open(packagePath, FileMode.Create))\n    {\n        // Add the Document part to the Package\n        PackagePart packagePartDocument =\n            package.CreatePart(partUriDocument,\n                           System.Net.Mime.MediaTypeNames.Text.Xml);\n\n        // Copy the data to the Document Part\n        using (FileStream fileStream = new FileStream(\n               documentPath, FileMode.Open, FileAccess.Read))\n        {\n            CopyStream(fileStream, packagePartDocument.GetStream());\n        }// end:using(fileStream) - Close and dispose fileStream.\n\n        // Add a Package Relationship to the Document Part\n        package.CreateRelationship(packagePartDocument.Uri,\n                                   TargetMode.Internal,\n                                   PackageRelationshipType);\n\n        // Add a Resource Part to the Package\n        PackagePart packagePartResource =\n            package.CreatePart(partUriResource,\n                           System.Net.Mime.MediaTypeNames.Image.Jpeg);\n\n        // Copy the data to the Resource Part\n        using (FileStream fileStream = new FileStream(\n               resourcePath, FileMode.Open, FileAccess.Read))\n        {\n            CopyStream(fileStream, packagePartResource.GetStream());\n        }// end:using(fileStream) - Close and dispose fileStream.\n\n        // Add Relationship from the Document part to the Resource part\n        packagePartDocument.CreateRelationship(\n                                new Uri(@&quot;../resources/image1.jpg&quot;,\n                                UriKind.Relative),\n                                TargetMode.Internal,\n                                ResourceRelationshipType);\n\n    }// end:using (Package package) - Close and dispose package.\n\n}// end:CreatePackage()\n\n\n//  --------------------------- CopyStream ---------------------------\n/// &lt;summary&gt;\n///   Copies data from a source stream to a target stream.&lt;/summary&gt;\n/// &lt;param name=&quot;source&quot;&gt;\n///   The source stream to copy from.&lt;/param&gt;\n/// &lt;param name=&quot;target&quot;&gt;\n///   The destination stream to copy to.&lt;/param&gt;\nprivate static void CopyStream(Stream source, Stream target)\n{\n    const int bufSize = 0x1000;\n    byte[] buf = new byte[bufSize];\n    int bytesRead = 0;\n    while ((bytesRead = source.Read(buf, 0, bufSize)) &gt; 0)\n        target.Write(buf, 0, bytesRead);\n}// end:CopyStream()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_Open_System_IO_Stream_System_IO_FileMode_\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_Open_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Open(Stream,FileMode)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a package with a given IO stream and file mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The IO stream on which to open the package.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>packageMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file mode in which to open the package.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a></div>\r\n                  </div>\r\n                  <p>The opened package.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>stream</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>packageMode</code> value is not valid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The package to open requires read or read/write permission and the specified <code>stream</code> is write-only; or, the package to open requires write or read/write permission and the specified <code>stream</code> is read-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a> is the default package type that is used by the Open method.  </p>\n<p> For additional information, see the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_Open_System_String_System_IO_FileMode_\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_Open_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Open(String,FileMode)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a package at a given path using a given file mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The path and file name of the package.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>packageMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file mode in which to open the package.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a></div>\r\n                  </div>\r\n                  <p>The opened package.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>path</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>Value for <code>packageMode</code> is not valid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a> is the default package type that is used by the Open method.  </p>\n<p> This Open method opens the package with default attributes <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a> and <a class=\"xref\" href=\"system.io.fileshare\" data-linktype=\"relative-path\">FileShare</a> (to specify different attributes use one of the other Open method overloads).  </p>\n<p> For additional information, see the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to create a new <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> that incorporates <a class=\"xref\" href=\"system.io.packaging.packagerelationship\" data-linktype=\"relative-path\">PackageRelationship</a> and <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> elements together with stored data.  For the complete sample, see <a href=\"http://go.microsoft.com/fwlink/?LinkID=160055\" data-linktype=\"external\">Writing a Package Sample</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"PackageWrite#PackageWriteCreatePackage\">&#39;  -------------------------- CreatePackage --------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39;   Creates a package zip file containing specified\n&#39;&#39;&#39;   content and resource files.&lt;/summary&gt;\nPrivate Shared Sub CreatePackage()\n    &#39; Convert system path and file names to Part URIs. In this example\n    &#39; Dim partUriDocument as Uri /* /Content/Document.xml */ =\n    &#39;     PackUriHelper.CreatePartUri(\n    &#39;         New Uri(&quot;Content\\Document.xml&quot;, UriKind.Relative))\n    &#39; Dim partUriResource as Uri /* /Resources/Image1.jpg */ =\n    &#39;     PackUriHelper.CreatePartUri(\n    &#39;         New Uri(&quot;Resources\\Image1.jpg&quot;, UriKind.Relative))\n    Dim partUriDocument As Uri = PackUriHelper.CreatePartUri(New Uri(documentPath, UriKind.Relative))\n    Dim partUriResource As Uri = PackUriHelper.CreatePartUri(New Uri(resourcePath, UriKind.Relative))\n\n    &#39; Create the Package\n    &#39; (If the package file already exists, FileMode.Create will\n    &#39;  automatically delete it first before creating a new one.\n    &#39;  The &#39;using&#39; statement insures that &#39;package&#39; is\n    &#39;  closed and disposed when it goes out of scope.)\n    Using package As Package = Package.Open(packagePath, FileMode.Create)\n        &#39; Add the Document part to the Package\n        Dim packagePartDocument As PackagePart = package.CreatePart(partUriDocument, System.Net.Mime.MediaTypeNames.Text.Xml)\n\n        &#39; Copy the data to the Document Part\n        Using fileStream As New FileStream(documentPath, FileMode.Open, FileAccess.Read)\n            CopyStream(fileStream, packagePartDocument.GetStream())\n        End Using &#39; end:using(fileStream) - Close and dispose fileStream.\n\n        &#39; Add a Package Relationship to the Document Part\n        package.CreateRelationship(packagePartDocument.Uri, TargetMode.Internal, PackageRelationshipType)\n\n        &#39; Add a Resource Part to the Package\n        Dim packagePartResource As PackagePart = package.CreatePart(partUriResource, System.Net.Mime.MediaTypeNames.Image.Jpeg)\n\n        &#39; Copy the data to the Resource Part\n        Using fileStream As New FileStream(resourcePath, FileMode.Open, FileAccess.Read)\n            CopyStream(fileStream, packagePartResource.GetStream())\n        End Using &#39; end:using(fileStream) - Close and dispose fileStream.\n\n        &#39; Add Relationship from the Document part to the Resource part\n        packagePartDocument.CreateRelationship(New Uri(&quot;../resources/image1.jpg&quot;, UriKind.Relative), TargetMode.Internal, ResourceRelationshipType)\n\n    End Using &#39; end:using (Package package) - Close and dispose package.\n\nEnd Sub &#39; end:CreatePackage()\n\n\n&#39;  --------------------------- CopyStream ---------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39;   Copies data from a source stream to a target stream.&lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;source&quot;&gt;\n&#39;&#39;&#39;   The source stream to copy from.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;target&quot;&gt;\n&#39;&#39;&#39;   The destination stream to copy to.&lt;/param&gt;\nPrivate Shared Sub CopyStream(ByVal source As Stream, ByVal target As Stream)\n    Const bufSize As Integer = &amp;H1000\n    Dim buf(bufSize - 1) As Byte\n    Dim bytesRead As Integer = 0\n    bytesRead = source.Read(buf, 0, bufSize)\n    Do While bytesRead &gt; 0\n        target.Write(buf, 0, bytesRead)\n        bytesRead = source.Read(buf, 0, bufSize)\n    Loop\nEnd Sub &#39; end:CopyStream()\n</code></pre><pre><code class=\"lang-cs\" name=\"PackageWrite#PackageWriteCreatePackage\">//  -------------------------- CreatePackage --------------------------\n/// &lt;summary&gt;\n///   Creates a package zip file containing specified\n///   content and resource files.&lt;/summary&gt;\nprivate static void CreatePackage()\n{\n    // Convert system path and file names to Part URIs. In this example\n    // Uri partUriDocument /* /Content/Document.xml */ =\n    //     PackUriHelper.CreatePartUri(\n    //         new Uri(&quot;Content\\Document.xml&quot;, UriKind.Relative));\n    // Uri partUriResource /* /Resources/Image1.jpg */ =\n    //     PackUriHelper.CreatePartUri(\n    //         new Uri(&quot;Resources\\Image1.jpg&quot;, UriKind.Relative));\n    Uri partUriDocument = PackUriHelper.CreatePartUri(\n                              new Uri(documentPath, UriKind.Relative));\n    Uri partUriResource = PackUriHelper.CreatePartUri(\n                              new Uri(resourcePath, UriKind.Relative));\n\n    // Create the Package\n    // (If the package file already exists, FileMode.Create will\n    //  automatically delete it first before creating a new one.\n    //  The &#39;using&#39; statement insures that &#39;package&#39; is\n    //  closed and disposed when it goes out of scope.)\n    using (Package package =\n        Package.Open(packagePath, FileMode.Create))\n    {\n        // Add the Document part to the Package\n        PackagePart packagePartDocument =\n            package.CreatePart(partUriDocument,\n                           System.Net.Mime.MediaTypeNames.Text.Xml);\n\n        // Copy the data to the Document Part\n        using (FileStream fileStream = new FileStream(\n               documentPath, FileMode.Open, FileAccess.Read))\n        {\n            CopyStream(fileStream, packagePartDocument.GetStream());\n        }// end:using(fileStream) - Close and dispose fileStream.\n\n        // Add a Package Relationship to the Document Part\n        package.CreateRelationship(packagePartDocument.Uri,\n                                   TargetMode.Internal,\n                                   PackageRelationshipType);\n\n        // Add a Resource Part to the Package\n        PackagePart packagePartResource =\n            package.CreatePart(partUriResource,\n                           System.Net.Mime.MediaTypeNames.Image.Jpeg);\n\n        // Copy the data to the Resource Part\n        using (FileStream fileStream = new FileStream(\n               resourcePath, FileMode.Open, FileAccess.Read))\n        {\n            CopyStream(fileStream, packagePartResource.GetStream());\n        }// end:using(fileStream) - Close and dispose fileStream.\n\n        // Add Relationship from the Document part to the Resource part\n        packagePartDocument.CreateRelationship(\n                                new Uri(@&quot;../resources/image1.jpg&quot;,\n                                UriKind.Relative),\n                                TargetMode.Internal,\n                                ResourceRelationshipType);\n\n    }// end:using (Package package) - Close and dispose package.\n\n}// end:CreatePackage()\n\n\n//  --------------------------- CopyStream ---------------------------\n/// &lt;summary&gt;\n///   Copies data from a source stream to a target stream.&lt;/summary&gt;\n/// &lt;param name=&quot;source&quot;&gt;\n///   The source stream to copy from.&lt;/param&gt;\n/// &lt;param name=&quot;target&quot;&gt;\n///   The destination stream to copy to.&lt;/param&gt;\nprivate static void CopyStream(Stream source, Stream target)\n{\n    const int bufSize = 0x1000;\n    byte[] buf = new byte[bufSize];\n    int bytesRead = 0;\n    while ((bytesRead = source.Read(buf, 0, bufSize)) &gt; 0)\n        target.Write(buf, 0, bytesRead);\n}// end:CopyStream()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_Open_System_IO_Stream_System_IO_FileMode_System_IO_FileAccess_\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_Open_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Open(Stream,FileMode,FileAccess)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a package with a given IO stream, file mode, and file access setting.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The IO stream on which to open the package.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>packageMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file mode in which to open the package.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>packageAccess</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file access in which to open the package.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a></div>\r\n                  </div>\r\n                  <p>The opened package.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>stream</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value for <code>packageMode</code> or <code>packageAccess</code> is not valid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The package to open requires read or read/write permission and the specified <code>stream</code> is write-only; or the package to open requires write or read/write permission and the specified <code>stream</code> is read-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a> is the default package type that is used by the Open method.  </p>\n<p> For additional information, see the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_Open_System_String_System_IO_FileMode_System_IO_FileAccess_\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_Open_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Open(String,FileMode,FileAccess)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a package at a given path using a given file mode and file access setting.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The path and file name of the package.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>packageMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file mode in which to open the package.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>packageAccess</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file access in which to open the package.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a></div>\r\n                  </div>\r\n                  <p>The opened package.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>path</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>Value for <code>packageMode</code> or <code>packageAccess</code> is not valid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a> is the default package type that is used by the Open method.  </p>\n<p> This Open method opens the package with a default <a class=\"xref\" href=\"system.io.fileshare\" data-linktype=\"relative-path\">FileShare</a> attribute (to specify a different attribute use the <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Open_\" data-linktype=\"relative-path\">Open</a> method overload).  </p>\n<p> For additional information, see the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to open and read a <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> that contains <a class=\"xref\" href=\"system.io.packaging.packagerelationship\" data-linktype=\"relative-path\">PackageRelationship</a> and <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> elements together with stored data.  For the complete sample, see <a href=\"http://go.microsoft.com/fwlink/?LinkID=160034\" data-linktype=\"external\">Reading a Package Sample</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"PackageRead#PackageReadUsing\">&#39; Open the Package.\n&#39; (&#39;using&#39; statement insures that &#39;package&#39; is\n&#39;  closed and disposed when it goes out of scope.)\nUsing package As Package = Package.Open(packagePath, FileMode.Open, FileAccess.Read)\n\tDim documentPart As PackagePart = Nothing\n\tDim resourcePart As PackagePart = Nothing\n\n\t&#39; Get the Package Relationships and look for\n\t&#39;   the Document part based on the RelationshipType\n\tDim uriDocumentTarget As Uri = Nothing\n\tFor Each relationship As PackageRelationship In package.GetRelationshipsByType(PackageRelationshipType)\n\t\t&#39; Resolve the Relationship Target Uri\n\t\t&#39;   so the Document Part can be retrieved.\n\t\turiDocumentTarget = PackUriHelper.ResolvePartUri(New Uri(&quot;/&quot;, UriKind.Relative), relationship.TargetUri)\n\n\t\t&#39; Open the Document Part, write the contents to a file.\n\t\tdocumentPart = package.GetPart(uriDocumentTarget)\n\t\tExtractPart(documentPart, targetDirectory)\n\tNext relationship\n\n\t&#39; Get the Document part&#39;s Relationships,\n\t&#39;   and look for required resources.\n\tDim uriResourceTarget As Uri = Nothing\n\tFor Each relationship As PackageRelationship In documentPart.GetRelationshipsByType(ResourceRelationshipType)\n\t\t&#39; Resolve the Relationship Target Uri\n\t\t&#39;   so the Resource Part can be retrieved.\n\t\turiResourceTarget = PackUriHelper.ResolvePartUri(documentPart.Uri, relationship.TargetUri)\n\n\t\t&#39; Open the Resource Part and write the contents to a file.\n\t\tresourcePart = package.GetPart(uriResourceTarget)\n\t\tExtractPart(resourcePart, targetDirectory)\n\tNext relationship\n\nEnd Using &#39; end:using(Package package) - Close &amp; dispose package.\n</code></pre><pre><code class=\"lang-cs\" name=\"PackageRead#PackageReadUsing\">// Open the Package.\n// (&#39;using&#39; statement insures that &#39;package&#39; is\n//  closed and disposed when it goes out of scope.)\nusing (Package package =\n    Package.Open(packagePath, FileMode.Open, FileAccess.Read))\n{\n    PackagePart documentPart = null;\n    PackagePart resourcePart = null;\n\n    // Get the Package Relationships and look for\n    //   the Document part based on the RelationshipType\n    Uri uriDocumentTarget = null;\n    foreach (PackageRelationship relationship in\n        package.GetRelationshipsByType(PackageRelationshipType))\n    {\n        // Resolve the Relationship Target Uri\n        //   so the Document Part can be retrieved.\n        uriDocumentTarget = PackUriHelper.ResolvePartUri(\n            new Uri(&quot;/&quot;, UriKind.Relative), relationship.TargetUri);\n\n        // Open the Document Part, write the contents to a file.\n        documentPart = package.GetPart(uriDocumentTarget);\n        ExtractPart(documentPart, targetDirectory);\n    }\n\n    // Get the Document part&#39;s Relationships,\n    //   and look for required resources.\n    Uri uriResourceTarget = null;\n    foreach (PackageRelationship relationship in\n        documentPart.GetRelationshipsByType(\n                                ResourceRelationshipType))\n    {\n        // Resolve the Relationship Target Uri\n        //   so the Resource Part can be retrieved.\n        uriResourceTarget = PackUriHelper.ResolvePartUri(\n            documentPart.Uri, relationship.TargetUri);\n\n        // Open the Resource Part and write the contents to a file.\n        resourcePart = package.GetPart(uriResourceTarget);\n        ExtractPart(resourcePart, targetDirectory);\n    }\n\n}// end:using(Package package) - Close &amp; dispose package.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_Open_System_String_System_IO_FileMode_System_IO_FileAccess_System_IO_FileShare_\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_Open_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Open(String,FileMode,FileAccess,FileShare)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a package at a given path using a given file mode, file access, and file share setting.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess, System.IO.FileShare packageShare);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The path and file name of the package.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>packageMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filemode\" data-linktype=\"relative-path\">FileMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file mode in which to open the package.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>packageAccess</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file access in which to open the package.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>packageShare</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.fileshare\" data-linktype=\"relative-path\">FileShare</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file sharing mode in which to open the package.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a></div>\r\n                  </div>\r\n                  <p>The opened package.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>path</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value for <code>packageMode</code>, <code>packageAccess</code>, or <code>packageShare</code> is not valid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a> is the default package type that is used by the Open method.  </p>\n<p> For additional information, see the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to create a new <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> that incorporates <a class=\"xref\" href=\"system.io.packaging.packagerelationship\" data-linktype=\"relative-path\">PackageRelationship</a> and <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> elements together with stored data.  For the complete sample, see <a href=\"http://go.microsoft.com/fwlink/?LinkID=160055\" data-linktype=\"external\">Writing a Package Sample</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"PackageWrite#PackageWriteCreatePackage\">&#39;  -------------------------- CreatePackage --------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39;   Creates a package zip file containing specified\n&#39;&#39;&#39;   content and resource files.&lt;/summary&gt;\nPrivate Shared Sub CreatePackage()\n    &#39; Convert system path and file names to Part URIs. In this example\n    &#39; Dim partUriDocument as Uri /* /Content/Document.xml */ =\n    &#39;     PackUriHelper.CreatePartUri(\n    &#39;         New Uri(&quot;Content\\Document.xml&quot;, UriKind.Relative))\n    &#39; Dim partUriResource as Uri /* /Resources/Image1.jpg */ =\n    &#39;     PackUriHelper.CreatePartUri(\n    &#39;         New Uri(&quot;Resources\\Image1.jpg&quot;, UriKind.Relative))\n    Dim partUriDocument As Uri = PackUriHelper.CreatePartUri(New Uri(documentPath, UriKind.Relative))\n    Dim partUriResource As Uri = PackUriHelper.CreatePartUri(New Uri(resourcePath, UriKind.Relative))\n\n    &#39; Create the Package\n    &#39; (If the package file already exists, FileMode.Create will\n    &#39;  automatically delete it first before creating a new one.\n    &#39;  The &#39;using&#39; statement insures that &#39;package&#39; is\n    &#39;  closed and disposed when it goes out of scope.)\n    Using package As Package = Package.Open(packagePath, FileMode.Create)\n        &#39; Add the Document part to the Package\n        Dim packagePartDocument As PackagePart = package.CreatePart(partUriDocument, System.Net.Mime.MediaTypeNames.Text.Xml)\n\n        &#39; Copy the data to the Document Part\n        Using fileStream As New FileStream(documentPath, FileMode.Open, FileAccess.Read)\n            CopyStream(fileStream, packagePartDocument.GetStream())\n        End Using &#39; end:using(fileStream) - Close and dispose fileStream.\n\n        &#39; Add a Package Relationship to the Document Part\n        package.CreateRelationship(packagePartDocument.Uri, TargetMode.Internal, PackageRelationshipType)\n\n        &#39; Add a Resource Part to the Package\n        Dim packagePartResource As PackagePart = package.CreatePart(partUriResource, System.Net.Mime.MediaTypeNames.Image.Jpeg)\n\n        &#39; Copy the data to the Resource Part\n        Using fileStream As New FileStream(resourcePath, FileMode.Open, FileAccess.Read)\n            CopyStream(fileStream, packagePartResource.GetStream())\n        End Using &#39; end:using(fileStream) - Close and dispose fileStream.\n\n        &#39; Add Relationship from the Document part to the Resource part\n        packagePartDocument.CreateRelationship(New Uri(&quot;../resources/image1.jpg&quot;, UriKind.Relative), TargetMode.Internal, ResourceRelationshipType)\n\n    End Using &#39; end:using (Package package) - Close and dispose package.\n\nEnd Sub &#39; end:CreatePackage()\n\n\n&#39;  --------------------------- CopyStream ---------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39;   Copies data from a source stream to a target stream.&lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;source&quot;&gt;\n&#39;&#39;&#39;   The source stream to copy from.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;target&quot;&gt;\n&#39;&#39;&#39;   The destination stream to copy to.&lt;/param&gt;\nPrivate Shared Sub CopyStream(ByVal source As Stream, ByVal target As Stream)\n    Const bufSize As Integer = &amp;H1000\n    Dim buf(bufSize - 1) As Byte\n    Dim bytesRead As Integer = 0\n    bytesRead = source.Read(buf, 0, bufSize)\n    Do While bytesRead &gt; 0\n        target.Write(buf, 0, bytesRead)\n        bytesRead = source.Read(buf, 0, bufSize)\n    Loop\nEnd Sub &#39; end:CopyStream()\n</code></pre><pre><code class=\"lang-cs\" name=\"PackageWrite#PackageWriteCreatePackage\">//  -------------------------- CreatePackage --------------------------\n/// &lt;summary&gt;\n///   Creates a package zip file containing specified\n///   content and resource files.&lt;/summary&gt;\nprivate static void CreatePackage()\n{\n    // Convert system path and file names to Part URIs. In this example\n    // Uri partUriDocument /* /Content/Document.xml */ =\n    //     PackUriHelper.CreatePartUri(\n    //         new Uri(&quot;Content\\Document.xml&quot;, UriKind.Relative));\n    // Uri partUriResource /* /Resources/Image1.jpg */ =\n    //     PackUriHelper.CreatePartUri(\n    //         new Uri(&quot;Resources\\Image1.jpg&quot;, UriKind.Relative));\n    Uri partUriDocument = PackUriHelper.CreatePartUri(\n                              new Uri(documentPath, UriKind.Relative));\n    Uri partUriResource = PackUriHelper.CreatePartUri(\n                              new Uri(resourcePath, UriKind.Relative));\n\n    // Create the Package\n    // (If the package file already exists, FileMode.Create will\n    //  automatically delete it first before creating a new one.\n    //  The &#39;using&#39; statement insures that &#39;package&#39; is\n    //  closed and disposed when it goes out of scope.)\n    using (Package package =\n        Package.Open(packagePath, FileMode.Create))\n    {\n        // Add the Document part to the Package\n        PackagePart packagePartDocument =\n            package.CreatePart(partUriDocument,\n                           System.Net.Mime.MediaTypeNames.Text.Xml);\n\n        // Copy the data to the Document Part\n        using (FileStream fileStream = new FileStream(\n               documentPath, FileMode.Open, FileAccess.Read))\n        {\n            CopyStream(fileStream, packagePartDocument.GetStream());\n        }// end:using(fileStream) - Close and dispose fileStream.\n\n        // Add a Package Relationship to the Document Part\n        package.CreateRelationship(packagePartDocument.Uri,\n                                   TargetMode.Internal,\n                                   PackageRelationshipType);\n\n        // Add a Resource Part to the Package\n        PackagePart packagePartResource =\n            package.CreatePart(partUriResource,\n                           System.Net.Mime.MediaTypeNames.Image.Jpeg);\n\n        // Copy the data to the Resource Part\n        using (FileStream fileStream = new FileStream(\n               resourcePath, FileMode.Open, FileAccess.Read))\n        {\n            CopyStream(fileStream, packagePartResource.GetStream());\n        }// end:using(fileStream) - Close and dispose fileStream.\n\n        // Add Relationship from the Document part to the Resource part\n        packagePartDocument.CreateRelationship(\n                                new Uri(@&quot;../resources/image1.jpg&quot;,\n                                UriKind.Relative),\n                                TargetMode.Internal,\n                                ResourceRelationshipType);\n\n    }// end:using (Package package) - Close and dispose package.\n\n}// end:CreatePackage()\n\n\n//  --------------------------- CopyStream ---------------------------\n/// &lt;summary&gt;\n///   Copies data from a source stream to a target stream.&lt;/summary&gt;\n/// &lt;param name=&quot;source&quot;&gt;\n///   The source stream to copy from.&lt;/param&gt;\n/// &lt;param name=&quot;target&quot;&gt;\n///   The destination stream to copy to.&lt;/param&gt;\nprivate static void CopyStream(Stream source, Stream target)\n{\n    const int bufSize = 0x1000;\n    byte[] buf = new byte[bufSize];\n    int bytesRead = 0;\n    while ((bytesRead = source.Read(buf, 0, bufSize)) &gt; 0)\n        target.Write(buf, 0, bytesRead);\n}// end:CopyStream()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_PartExists_System_Uri_\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_PartExists_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PartExists(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether a part with a given URI is in the package.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool PartExists (Uri partUri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>partUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> of the part to check for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if a part with the specified <code>partUri</code> is in the package; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>partUri</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>partUri</code> is not a valid <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> uniform resource identifier (URI).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The package is not open (<span class=\"xref\">stem.IO.Packaging.Package.Dispose*</span> or <span class=\"xref\">stem.IO.Packaging.Package.Close*</span> has been called).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The package is write-only (information cannot be read).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>partUri</code> should begin with a forward-slash character &quot;/&quot; and be absolute from the root of the package.  </p>\n<p> For additional information, see the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_RelationshipExists_System_String_\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_RelationshipExists_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RelationshipExists(String)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether a package-level relationship with a given ID is contained in the package.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool RelationshipExists (string id);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>id</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">stem.IO.Packaging.PackageRelationship.Id*</span> of the relationship to check for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if a package-level relationship with the specified <code>id</code> is in the package; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>id</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlexception\" data-linktype=\"relative-path\">XmlException</a></div>\r\n                  </div>\r\n                  <p><code>id</code> is not a valid XML identifier.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The package is not open (<span class=\"xref\">stem.IO.Packaging.Package.Dispose*</span> or <span class=\"xref\">stem.IO.Packaging.Package.Close*</span> has been called).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The package is write-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=71255\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=71255</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_Package_System_IDisposable_Dispose\">\r\n    \r\n            <a id=\"System_IO_Packaging_Package_System_IDisposable_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDisposable.Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended for application use.  Use the type-safe <span class=\"xref\">stem.IO.Packaging.Package.Dispose*</span> method instead.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IDisposable.Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.IO.Packaging.Package.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IO.Packaging.Package.yml\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package..ctor\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package.Close\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package.CreatePart\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package.CreatePartCore\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package.CreateRelationship\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package.DeletePart\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package.DeletePartCore\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package.DeleteRelationship\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package.Dispose\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package.FileOpenAccess\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package.Flush\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package.FlushCore\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package.GetPart\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package.GetPartCore\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package.GetParts\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package.GetPartsCore\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package.GetRelationship\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package.GetRelationships\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package.GetRelationshipsByType\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package.Open\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package.PackageProperties\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package.PartExists\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package.RelationshipExists\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.Package.IDisposable.Dispose\">\r\n<meta name=\"APILocation\" content=\"WindowsBase.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"16eaa7eb-7ceb-4098-776f-0a7d6f981e47\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a container that can store multiple data objects.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.IO.Packaging/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.IO.Packaging.Package\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.IO.Packaging.Package.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IO.Packaging.Package.yml","open_to_public_contributors":true,"api_name":["System.IO.Packaging.Package","System.IO.Packaging.Package..ctor","System.IO.Packaging.Package.Close","System.IO.Packaging.Package.CreatePart","System.IO.Packaging.Package.CreatePartCore","System.IO.Packaging.Package.CreateRelationship","System.IO.Packaging.Package.DeletePart","System.IO.Packaging.Package.DeletePartCore","System.IO.Packaging.Package.DeleteRelationship","System.IO.Packaging.Package.Dispose","System.IO.Packaging.Package.FileOpenAccess","System.IO.Packaging.Package.Flush","System.IO.Packaging.Package.FlushCore","System.IO.Packaging.Package.GetPart","System.IO.Packaging.Package.GetPartCore","System.IO.Packaging.Package.GetParts","System.IO.Packaging.Package.GetPartsCore","System.IO.Packaging.Package.GetRelationship","System.IO.Packaging.Package.GetRelationships","System.IO.Packaging.Package.GetRelationshipsByType","System.IO.Packaging.Package.Open","System.IO.Packaging.Package.PackageProperties","System.IO.Packaging.Package.PartExists","System.IO.Packaging.Package.RelationshipExists","System.IO.Packaging.Package.IDisposable.Dispose"],"api_location":["WindowsBase.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.IO.Packaging.Package","System::IO::Packaging::Package","System.IO.Packaging.Package.#ctor","System::IO::Packaging::Package::#ctor","System.IO.Packaging.Package.Close","System::IO::Packaging::Package::Close","System.IO.Packaging.Package.CreatePart","System::IO::Packaging::Package::CreatePart","System.IO.Packaging.Package.CreatePartCore","System::IO::Packaging::Package::CreatePartCore","System.IO.Packaging.Package.CreateRelationship","System::IO::Packaging::Package::CreateRelationship","System.IO.Packaging.Package.DeletePart","System::IO::Packaging::Package::DeletePart","System.IO.Packaging.Package.DeletePartCore","System::IO::Packaging::Package::DeletePartCore","System.IO.Packaging.Package.DeleteRelationship","System::IO::Packaging::Package::DeleteRelationship","System.IO.Packaging.Package.Dispose","System::IO::Packaging::Package::Dispose","System.IO.Packaging.Package.FileOpenAccess","System::IO::Packaging::Package::FileOpenAccess","System.IO.Packaging.Package.Flush","System::IO::Packaging::Package::Flush","System.IO.Packaging.Package.FlushCore","System::IO::Packaging::Package::FlushCore","System.IO.Packaging.Package.GetPart","System::IO::Packaging::Package::GetPart","System.IO.Packaging.Package.GetPartCore","System::IO::Packaging::Package::GetPartCore","System.IO.Packaging.Package.GetParts","System::IO::Packaging::Package::GetParts","System.IO.Packaging.Package.GetPartsCore","System::IO::Packaging::Package::GetPartsCore","System.IO.Packaging.Package.GetRelationship","System::IO::Packaging::Package::GetRelationship","System.IO.Packaging.Package.GetRelationships","System::IO::Packaging::Package::GetRelationships","System.IO.Packaging.Package.GetRelationshipsByType","System::IO::Packaging::Package::GetRelationshipsByType","System.IO.Packaging.Package.Open","System::IO::Packaging::Package::Open","System.IO.Packaging.Package.PackageProperties","System::IO::Packaging::Package::PackageProperties","System.IO.Packaging.Package.PartExists","System::IO::Packaging::Package::PartExists","System.IO.Packaging.Package.RelationshipExists","System::IO::Packaging::Package::RelationshipExists","System.IO.Packaging.Package.System#IDisposable#Dispose","System::IO::Packaging::Package::System#IDisposable#Dispose"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"16eaa7eb-7ceb-4098-776f-0a7d6f981e47","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.IO.Packaging/Package.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Package class | Microsoft Docs","_op_ogTitle":"Package class","description":"Represents a container that can store multiple data objects.\n","toc_asset_id":"_splitted/System.IO.Packaging/toc.json","toc_rel":"_splitted/System.IO.Packaging/toc.json","source_url":"","ms.assetid":"System.IO.Packaging.Package","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.io.packaging.package","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.io.packaging.package","fileRelativePath":"System.IO.Packaging.Package.html"},"themesRelativePathToOutputRoot":"_themes/"}