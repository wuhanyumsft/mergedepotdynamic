{"content":"    \r\n    <h1 id=\"System_CodeDom_CodeCompileUnit\">\r\n      <span class=\"lang-csharp\">CodeCompileUnit</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a container for a CodeDOM program graph.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n[System.Runtime.InteropServices.ComVisible(true)]\npublic class CodeCompileUnit : System.CodeDom.CodeObject</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codeobject\" data-linktype=\"relative-path\">System.CodeDom.CodeObject</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">CodeCompileUnit</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codeobject#System_CodeDom_CodeObject_UserData\" data-linktype=\"relative-path\">UserData</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>CodeCompileUnit provides a container for a CodeDOM program graph.  </p>\n<p> CodeCompileUnit contains a collection that can store <a class=\"xref\" href=\"system.codedom.codenamespace\" data-linktype=\"relative-path\">CodeNamespace</a> objects containing CodeDOM source code graphs, along with a collection of assemblies referenced by the project, and a collection of attributes for the project assembly.  </p>\n<p> A CodeCompileUnit can be passed to the <a class=\"xref\" href=\"system.codedom.compiler.icodegenerator#System_CodeDom_Compiler_ICodeGenerator_GenerateCodeFromCompileUnit_\" data-linktype=\"relative-path\">GenerateCodeFromCompileUnit</a> method of an <a class=\"xref\" href=\"system.codedom.compiler.icodegenerator\" data-linktype=\"relative-path\">ICodeGenerator</a> implementation along with other parameters to generate code based on the program graph contained by the compile unit.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Some languages support only a single namespace that contains a single class in a compile unit.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeCompileUnit__ctor\" data-linktype=\"self-bookmark\">CodeCompileUnit()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codecompileunit\" data-linktype=\"relative-path\">CodeCompileUnit</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeCompileUnit_AssemblyCustomAttributes\" data-linktype=\"self-bookmark\">AssemblyCustomAttributes</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of custom attributes for the generated assembly.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeCompileUnit_EndDirectives\" data-linktype=\"self-bookmark\">EndDirectives</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.codedom.codedirectivecollection\" data-linktype=\"relative-path\">CodeDirectiveCollection</a> object containing end directives.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeCompileUnit_Namespaces\" data-linktype=\"self-bookmark\">Namespaces</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of namespaces.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeCompileUnit_ReferencedAssemblies\" data-linktype=\"self-bookmark\">ReferencedAssemblies</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the referenced assemblies.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeCompileUnit_StartDirectives\" data-linktype=\"self-bookmark\">StartDirectives</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.codedom.codedirectivecollection\" data-linktype=\"relative-path\">CodeDirectiveCollection</a> object containing start directives.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeCompileUnit__ctor\">\r\n    \r\n            <a id=\"System_CodeDom_CodeCompileUnit__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CodeCompileUnit()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codecompileunit\" data-linktype=\"relative-path\">CodeCompileUnit</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CodeCompileUnit ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeCompileUnit_AssemblyCustomAttributes\">\r\n    \r\n            <a id=\"System_CodeDom_CodeCompileUnit_AssemblyCustomAttributes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AssemblyCustomAttributes</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of custom attributes for the generated assembly.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.CodeDom.CodeAttributeDeclarationCollection AssemblyCustomAttributes { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codeattributedeclarationcollection\" data-linktype=\"relative-path\">CodeAttributeDeclarationCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.codeattributedeclarationcollection\" data-linktype=\"relative-path\">CodeAttributeDeclarationCollection</a> that indicates the custom attributes for the generated assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can add and remove <a class=\"xref\" href=\"system.codedom.codeattributedeclaration\" data-linktype=\"relative-path\">CodeAttributeDeclaration</a> objects representing attributes for the generated assembly from this collection.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeCompileUnit_EndDirectives\">\r\n    \r\n            <a id=\"System_CodeDom_CodeCompileUnit_EndDirectives_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndDirectives</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.codedom.codedirectivecollection\" data-linktype=\"relative-path\">CodeDirectiveCollection</a> object containing end directives.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.CodeDom.CodeDirectiveCollection EndDirectives { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codedirectivecollection\" data-linktype=\"relative-path\">CodeDirectiveCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.codedirectivecollection\" data-linktype=\"relative-path\">CodeDirectiveCollection</a> object containing end directives.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the EndDirectives property.  This example is part of a larger example provided for the <a class=\"xref\" href=\"system.codedom.coderegiondirective\" data-linktype=\"relative-path\">CodeRegionDirective</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.CodeDom.CodeDirectives#3\">        cu.EndDirectives.Add(New CodeRegionDirective(CodeRegionMode.End, String.Empty))\n</code></pre><pre><code class=\"lang-cs\" name=\"System.CodeDom.CodeDirectives#3\">            cu.EndDirectives.Add(new CodeRegionDirective(CodeRegionMode.End,\n                string.Empty));\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeCompileUnit_Namespaces\">\r\n    \r\n            <a id=\"System_CodeDom_CodeCompileUnit_Namespaces_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Namespaces</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of namespaces.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.CodeDom.CodeNamespaceCollection Namespaces { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codenamespacecollection\" data-linktype=\"relative-path\">CodeNamespaceCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.codenamespacecollection\" data-linktype=\"relative-path\">CodeNamespaceCollection</a> that indicates the namespaces that the compile unit uses.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can add and remove <a class=\"xref\" href=\"system.codedom.codenamespace\" data-linktype=\"relative-path\">CodeNamespace</a> objects from this collection. Each object represents a namespace.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Some languages support only a single namespace that contains a single class in a compile unit.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example constructs a <a class=\"xref\" href=\"system.codedom.codecompileunit\" data-linktype=\"relative-path\">CodeCompileUnit</a> that models the program structure of a simple &quot;Hello World&quot; program. This example is part of a larger example that also produces code from this model, and is provided for the <a class=\"xref\" href=\"system.codedom.compiler.codedomprovider\" data-linktype=\"relative-path\">CodeDomProvider</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"CodeDomExample#2\">        // Build a Hello World program graph using \n        // System::CodeDom types.\n        static CodeCompileUnit^ BuildHelloWorldGraph()\n        {\n            // Create a new CodeCompileUnit to contain \n            // the program graph.\n            CodeCompileUnit^ compileUnit = gcnew CodeCompileUnit;\n\n            // Declare a new namespace called Samples.\n            CodeNamespace^ samples = gcnew CodeNamespace( &quot;Samples&quot; );\n\n            // Add the new namespace to the compile unit.\n            compileUnit-&gt;Namespaces-&gt;Add( samples );\n\n            // Add the new namespace import for the System namespace.\n            samples-&gt;Imports-&gt;Add( gcnew CodeNamespaceImport( &quot;System&quot; ) );\n\n            // Declare a new type called Class1.\n            CodeTypeDeclaration^ class1 = gcnew CodeTypeDeclaration( &quot;Class1&quot; );\n\n            // Add the new type to the namespace&#39;s type collection.\n            samples-&gt;Types-&gt;Add( class1 );\n\n            // Declare a new code entry point method.\n            CodeEntryPointMethod^ start = gcnew CodeEntryPointMethod;\n\n            // Create a type reference for the System::Console class.\n            CodeTypeReferenceExpression^ csSystemConsoleType = gcnew CodeTypeReferenceExpression( &quot;System.Console&quot; );\n\n            // Build a Console::WriteLine statement.\n            CodeMethodInvokeExpression^ cs1 = gcnew CodeMethodInvokeExpression( csSystemConsoleType,&quot;WriteLine&quot;, gcnew CodePrimitiveExpression(&quot;Hello World!&quot;) );\n\n            // Add the WriteLine call to the statement collection.\n            start-&gt;Statements-&gt;Add( cs1 );\n\n            // Build another Console::WriteLine statement.\n            CodeMethodInvokeExpression^ cs2 = gcnew CodeMethodInvokeExpression( csSystemConsoleType,&quot;WriteLine&quot;, gcnew CodePrimitiveExpression( &quot;Press the Enter key to continue.&quot; ) );\n\n            // Add the WriteLine call to the statement collection.\n            start-&gt;Statements-&gt;Add( cs2 );\n\n            // Build a call to System::Console::ReadLine.\n            CodeMethodReferenceExpression^ csReadLine = gcnew CodeMethodReferenceExpression( csSystemConsoleType, &quot;ReadLine&quot; );\n            CodeMethodInvokeExpression^ cs3 = gcnew CodeMethodInvokeExpression( csReadLine, gcnew array&lt;CodeExpression^&gt;(0) );\n\n            // Add the ReadLine statement.\n            start-&gt;Statements-&gt;Add( cs3 );\n\n            // Add the code entry point method to\n            // the Members collection of the type.\n            class1-&gt;Members-&gt;Add( start );\n            return compileUnit;\n        }\n</code></pre><pre><code class=\"lang-cs\" name=\"CodeDomExample#2\">        // Build a Hello World program graph using \n        // System.CodeDom types.\n        public static CodeCompileUnit BuildHelloWorldGraph()\n        {\n            // Create a new CodeCompileUnit to contain \n            // the program graph.\n            CodeCompileUnit compileUnit = new CodeCompileUnit();\n\n            // Declare a new namespace called Samples.\n            CodeNamespace samples = new CodeNamespace(&quot;Samples&quot;);\n            // Add the new namespace to the compile unit.\n            compileUnit.Namespaces.Add(samples);\n\n            // Add the new namespace import for the System namespace.\n            samples.Imports.Add(new CodeNamespaceImport(&quot;System&quot;));\n\n            // Declare a new type called Class1.\n            CodeTypeDeclaration class1 = new CodeTypeDeclaration(&quot;Class1&quot;);\n            // Add the new type to the namespace type collection.\n            samples.Types.Add(class1);\n\n            // Declare a new code entry point method.\n            CodeEntryPointMethod start = new CodeEntryPointMethod();\n\n            // Create a type reference for the System.Console class.\n            CodeTypeReferenceExpression csSystemConsoleType = new CodeTypeReferenceExpression(&quot;System.Console&quot;);\n\n            // Build a Console.WriteLine statement.\n            CodeMethodInvokeExpression cs1 = new CodeMethodInvokeExpression(\n                csSystemConsoleType, &quot;WriteLine&quot;,\n                new CodePrimitiveExpression(&quot;Hello World!&quot;));\n\n            // Add the WriteLine call to the statement collection.\n            start.Statements.Add(cs1);\n\n            // Build another Console.WriteLine statement.\n            CodeMethodInvokeExpression cs2 = new CodeMethodInvokeExpression(\n                csSystemConsoleType, &quot;WriteLine&quot;,\n                new CodePrimitiveExpression(&quot;Press the Enter key to continue.&quot;));\n\n            // Add the WriteLine call to the statement collection.\n            start.Statements.Add(cs2);\n\n            // Build a call to System.Console.ReadLine.\n            CodeMethodInvokeExpression csReadLine = new CodeMethodInvokeExpression(\n                csSystemConsoleType, &quot;ReadLine&quot;);\n\n            // Add the ReadLine statement.\n            start.Statements.Add(csReadLine);\n\n            // Add the code entry point method to\n            // the Members collection of the type.\n            class1.Members.Add(start);\n\n            return compileUnit;\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"CodeDomExample#2\">        &#39; Build a Hello World program graph using \n        &#39; System.CodeDom types.\n        Public Shared Function BuildHelloWorldGraph() As CodeCompileUnit\n\n            &#39; Create a new CodeCompileUnit to contain \n            &#39; the program graph.\n            Dim compileUnit As New CodeCompileUnit()\n\n            &#39; Declare a new namespace called Samples.\n            Dim samples As New CodeNamespace(&quot;Samples&quot;)\n\n            &#39; Add the new namespace to the compile unit.\n            compileUnit.Namespaces.Add(samples)\n\n            &#39; Add the new namespace import for the System namespace.\n            samples.Imports.Add(New CodeNamespaceImport(&quot;System&quot;))\n\n            &#39; Declare a new type called Class1.\n            Dim class1 As New CodeTypeDeclaration(&quot;Class1&quot;)\n\n            &#39; Add the new type to the namespace type collection.\n            samples.Types.Add(class1)\n\n            &#39; Declare a new code entry point method.\n            Dim start As New CodeEntryPointMethod()\n\n            &#39; Create a type reference for the System.Console class.\n            Dim csSystemConsoleType As New CodeTypeReferenceExpression( _\n                &quot;System.Console&quot;)\n\n            &#39; Build a Console.WriteLine statement.\n            Dim cs1 As New CodeMethodInvokeExpression( _\n                csSystemConsoleType, &quot;WriteLine&quot;, _\n                New CodePrimitiveExpression(&quot;Hello World!&quot;))\n\n            &#39; Add the WriteLine call to the statement collection.\n            start.Statements.Add(cs1)\n\n            &#39; Build another Console.WriteLine statement.\n            Dim cs2 As New CodeMethodInvokeExpression( _\n                csSystemConsoleType, &quot;WriteLine&quot;, _\n                New CodePrimitiveExpression(&quot;Press the Enter key to continue.&quot;))\n\n            &#39; Add the WriteLine call to the statement collection.\n            start.Statements.Add(cs2)\n\n            &#39; Build a call to System.Console.ReadLine.\n            Dim csReadLine As New CodeMethodInvokeExpression( _\n                csSystemConsoleType, &quot;ReadLine&quot;)\n\n            &#39; Add the ReadLine statement.\n            start.Statements.Add(csReadLine)\n\n            &#39; Add the code entry point method to\n            &#39; the Members collection of the type.\n            class1.Members.Add(start)\n\n            Return compileUnit\n        End Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeCompileUnit_ReferencedAssemblies\">\r\n    \r\n            <a id=\"System_CodeDom_CodeCompileUnit_ReferencedAssemblies_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReferencedAssemblies</div>        \r\n          </div>\r\n    \r\n            <p>Gets the referenced assemblies.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Specialized.StringCollection ReferencedAssemblies { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.stringcollection\" data-linktype=\"relative-path\">StringCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.collections.specialized.stringcollection\" data-linktype=\"relative-path\">StringCollection</a> that contains the file names of the referenced assemblies.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can add and remove file names from this collection.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeCompileUnit_StartDirectives\">\r\n    \r\n            <a id=\"System_CodeDom_CodeCompileUnit_StartDirectives_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StartDirectives</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.codedom.codedirectivecollection\" data-linktype=\"relative-path\">CodeDirectiveCollection</a> object containing start directives.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.CodeDom.CodeDirectiveCollection StartDirectives { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codedirectivecollection\" data-linktype=\"relative-path\">CodeDirectiveCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.codedirectivecollection\" data-linktype=\"relative-path\">CodeDirectiveCollection</a> object containing start directives.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the StartDirectives property.  This example is part of a larger example provided for the <a class=\"xref\" href=\"system.codedom.coderegiondirective\" data-linktype=\"relative-path\">CodeRegionDirective</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.CodeDom.CodeDirectives#2\">        cu.StartDirectives.Add(New CodeRegionDirective(CodeRegionMode.Start, &quot;Compile Unit Region&quot;))\n</code></pre><pre><code class=\"lang-cs\" name=\"System.CodeDom.CodeDirectives#2\">            cu.StartDirectives.Add(new CodeRegionDirective(CodeRegionMode.Start,\n                &quot;Compile Unit Region&quot;));\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.CodeDom.CodeCompileUnit.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.CodeDom.CodeCompileUnit.yml\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeCompileUnit\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeCompileUnit..ctor\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeCompileUnit.AssemblyCustomAttributes\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeCompileUnit.EndDirectives\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeCompileUnit.Namespaces\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeCompileUnit.ReferencedAssemblies\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeCompileUnit.StartDirectives\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"51f0b76b-4d5c-5661-2907-ef5e00a280b6\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a container for a CodeDOM program graph.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.CodeDom/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.CodeDom.CodeCompileUnit\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.CodeDom.CodeCompileUnit.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.CodeDom.CodeCompileUnit.yml","open_to_public_contributors":true,"api_name":["System.CodeDom.CodeCompileUnit","System.CodeDom.CodeCompileUnit..ctor","System.CodeDom.CodeCompileUnit.AssemblyCustomAttributes","System.CodeDom.CodeCompileUnit.EndDirectives","System.CodeDom.CodeCompileUnit.Namespaces","System.CodeDom.CodeCompileUnit.ReferencedAssemblies","System.CodeDom.CodeCompileUnit.StartDirectives"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.CodeDom.CodeCompileUnit","System::CodeDom::CodeCompileUnit","System.CodeDom.CodeCompileUnit.#ctor","System::CodeDom::CodeCompileUnit::#ctor","System.CodeDom.CodeCompileUnit.AssemblyCustomAttributes","System::CodeDom::CodeCompileUnit::AssemblyCustomAttributes","System.CodeDom.CodeCompileUnit.EndDirectives","System::CodeDom::CodeCompileUnit::EndDirectives","System.CodeDom.CodeCompileUnit.Namespaces","System::CodeDom::CodeCompileUnit::Namespaces","System.CodeDom.CodeCompileUnit.ReferencedAssemblies","System::CodeDom::CodeCompileUnit::ReferencedAssemblies","System.CodeDom.CodeCompileUnit.StartDirectives","System::CodeDom::CodeCompileUnit::StartDirectives"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"51f0b76b-4d5c-5661-2907-ef5e00a280b6","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.CodeDom/CodeCompileUnit.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CodeCompileUnit class | Microsoft Docs","_op_ogTitle":"CodeCompileUnit class","description":"Provides a container for a CodeDOM program graph.\n","toc_asset_id":"_splitted/System.CodeDom/toc.json","toc_rel":"_splitted/System.CodeDom/toc.json","source_url":"","ms.assetid":"System.CodeDom.CodeCompileUnit","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.codedom.codecompileunit","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.codedom.codecompileunit","fileRelativePath":"System.CodeDom.CodeCompileUnit.html"},"themesRelativePathToOutputRoot":"_themes/"}