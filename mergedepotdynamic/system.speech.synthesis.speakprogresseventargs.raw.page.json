{"content":"    \r\n    <h1 id=\"System_Speech_Synthesis_SpeakProgressEventArgs\">\r\n      <span class=\"lang-csharp\">SpeakProgressEventArgs</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Returns data from the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakProgress\" data-linktype=\"relative-path\">SpeakProgress</a> event.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class SpeakProgressEventArgs : System.Speech.Synthesis.PromptEventArgs</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs\" data-linktype=\"relative-path\">AsyncCompletedEventArgs</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l3\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.speech.synthesis.prompteventargs\" data-linktype=\"relative-path\">System.Speech.Synthesis.PromptEventArgs</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l4\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SpeakProgressEventArgs</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_Cancelled\" data-linktype=\"relative-path\">Cancelled</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_Error\" data-linktype=\"relative-path\">Error</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_RaiseExceptionIfNecessary\" data-linktype=\"relative-path\">RaiseExceptionIfNecessary()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_UserState\" data-linktype=\"relative-path\">UserState</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.speech.synthesis.prompteventargs#System_Speech_Synthesis_PromptEventArgs_Prompt\" data-linktype=\"relative-path\">Prompt</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>An instance of SpeakProgressEventArgs is created when the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object raises the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakProgress\" data-linktype=\"relative-path\">SpeakProgress</a> event. The <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> raises this event for each new word that it speaks in a prompt using any of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_Speak_\" data-linktype=\"relative-path\">Speak</a>, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_\" data-linktype=\"relative-path\">SpeakAsync</a>, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakSsml_\" data-linktype=\"relative-path\">SpeakSsml</a>, or <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakSsmlAsync_\" data-linktype=\"relative-path\">SpeakSsmlAsync</a> methods.  </p>\n<p> The returned data is based on the Speech Synthesis Markup Language (SSML) that the code generates. The values returned for <a class=\"xref\" href=\"system.speech.synthesis.speakprogresseventargs#System_Speech_Synthesis_SpeakProgressEventArgs_CharacterCount_\" data-linktype=\"relative-path\">CharacterCount</a> include spaces and the characters and contents of the SSML tags generated by the code.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeakProgressEventArgs_AudioPosition\" data-linktype=\"self-bookmark\">AudioPosition</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the audio position of the event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeakProgressEventArgs_CharacterCount\" data-linktype=\"self-bookmark\">CharacterCount</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of characters in the word that was spoken just before the event was raised.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeakProgressEventArgs_CharacterPosition\" data-linktype=\"self-bookmark\">CharacterPosition</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of characters and spaces from the beginning of the prompt to the position before the first letter of the word that was just spoken.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeakProgressEventArgs_Text\" data-linktype=\"self-bookmark\">Text</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The text that was just spoken when the event was raised.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeakProgressEventArgs_AudioPosition\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeakProgressEventArgs_AudioPosition_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AudioPosition</div>        \r\n          </div>\r\n    \r\n            <p>Gets the audio position of the event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TimeSpan AudioPosition { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </div>\r\n                  <p>Returns the position of the event in the audio output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> normalizes numbers to the words that correspond to how the number will be spoken. For example, the synthesizer speaks the number â€œ4003â€ as â€œfour thousand threeâ€. It raises a <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakProgress\" data-linktype=\"relative-path\">SpeakProgress</a> event for each of the spoken words, and returns the AudioPosition for each word.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeakProgressEventArgs_CharacterCount\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeakProgressEventArgs_CharacterCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CharacterCount</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of characters in the word that was spoken just before the event was raised.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int CharacterCount { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns the number of characters in the word that was spoken just before the event was raised.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> normalizes numbers to the words that correspond to how the number will be spoken. For example, the synthesizer speaks the number â€œ4003â€ as â€œfour thousand threeâ€. It raises a <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakProgress\" data-linktype=\"relative-path\">SpeakProgress</a> event for each of the spoken words. However, the CharacterCount property for each of the three words is the same. It is the count of the characters in the number â€œ4003â€ in the text of the prompt, in this case, four.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeakProgressEventArgs_CharacterPosition\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeakProgressEventArgs_CharacterPosition_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CharacterPosition</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of characters and spaces from the beginning of the prompt to the position before the first letter of the word that was just spoken.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int CharacterPosition { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns the number of characters and spaces from the beginning of the prompt to the position before the first letter of the word that was just spoken.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CharacterPosition includes the count for characters in XML tags, including their enclosing brackets. When using any of the <a class=\"xref\" href=\"system.speech.synthesis.promptbuilder#System_Speech_Synthesis_PromptBuilder_AppendText_\" data-linktype=\"relative-path\">AppendText</a>, <a class=\"xref\" href=\"system.speech.synthesis.promptbuilder#System_Speech_Synthesis_PromptBuilder_AppendTextWithAlias_\" data-linktype=\"relative-path\">AppendTextWithAlias</a>, <a class=\"xref\" href=\"system.speech.synthesis.promptbuilder#System_Speech_Synthesis_PromptBuilder_AppendTextWithHint_\" data-linktype=\"relative-path\">AppendTextWithHint</a>, <a class=\"xref\" href=\"system.speech.synthesis.promptbuilder#System_Speech_Synthesis_PromptBuilder_AppendSsmlMarkup_\" data-linktype=\"relative-path\">AppendSsmlMarkup</a>, or <a class=\"xref\" href=\"system.speech.synthesis.promptbuilder#System_Speech_Synthesis_PromptBuilder_AppendTextWithPronunciation_\" data-linktype=\"relative-path\">AppendTextWithPronunciation</a> methods, the contents are added to an SSML prompt that includes the opening and closing <code>speak</code> elements. The opening <code>speak</code> element adds an offset of 82 characters and spaces to the CharacterPosition of the all the words and letters in the prompt. For example, in the following snippet, the CharacterPosition of the first word, â€œthisâ€, is 82.  </p>\n<pre><code class=\"lang-c#\">builder.AppendText(&quot;This is a test&quot;);  \nSynthesizer.Speak(builder);\n</code></pre><p> In the above example the CharacterPosition of the word â€œtestâ€ is 92. In the following snippet the CharacterPosition of the word â€œtestâ€ is 23 characters higher (115) because the opening <strong>&lt;prosody pitch=&quot;high&quot;&gt;</strong>  tag that precedes it contains 23 characters and spaces (the two escape characters &quot;\\&quot; are not counted).  </p>\n<pre><code class=\"lang-c#\">builder.AppendSsmlMarkup(&quot;This is a &lt;prosody pitch=\\&quot;high\\&quot;&gt; test &lt;/prosody&gt;.&quot;);   \nSynthesizer.Speak(builder);\n</code></pre><p> If you use the <a class=\"xref\" href=\"system.speech.synthesis.promptbuilder#System_Speech_Synthesis_PromptBuilder_AppendSsml_\" data-linktype=\"relative-path\">AppendSsml</a> methods to add content to a prompt by specifying a file, the opening <code>xml</code> declaration and <code>speak</code> elements in the file are not used or counted. The first character in the file after the opening <code>speak</code> tag will be at position 82 if it is the first content in the prompt.  </p>\n<p> By contrast, the string parameter of a <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_Speak_\" data-linktype=\"relative-path\">Speak</a> method does not get added to an SSML prompt before being spoken. Therefore, the CharacterPosition of the first word, â€œthisâ€, in the following snippet is zero.  </p>\n<pre><code class=\"lang-c#\">Synthesizer.Speak(â€œThis is a test.â€);\n</code></pre><p> The <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> normalizes numbers to the words that correspond to how the number will be spoken. For example, the synthesizer speaks the number â€œ4003â€ as â€œfour thousand threeâ€. It raises a <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakProgress\" data-linktype=\"relative-path\">SpeakProgress</a> event for each of the three spoken words. However, the CharacterPosition property for each of the three words is the same. It is the position before the first character of the number â€œ4003â€ in the text of the prompt.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.speech.synthesis.promptbuilder\" data-linktype=\"relative-path\">PromptBuilder</a> and appends the SSML contents of an XML file using <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>. The example outputs speech to a WAV file for playback. The contents of the XML file containing the SSML appear below the code example.  </p>\n<pre><code class=\"lang-c#\">using System;  \nusing System.Xml;  \nusing System.IO;  \nusing System.Speech.Synthesis;  \n\nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n\n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n\n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n\n        // Create a path to the file that contains SSML.  \n        string weatherFile = Path.GetFullPath(&quot;c:\\&nbsp;&nbsp;&nbsp;&nbsp;est\\\\Weather.ssml&quot;);  \n\n        // Create an XML Reader from the file, create a PromptBuilder and   \n        // append the XmlReader.  \n        PromptBuilder builder = new PromptBuilder();  \n\n        if (File.Exists(weatherFile))  \n        {  \n          XmlReader reader = XmlReader.Create(weatherFile);  \n          builder.AppendSsml(reader);  \n          reader.Close();  \n        }  \n\n        // Add a handler for the SpeakProgress event.  \n        synth.SpeakProgress +=  \n          new EventHandler&lt;SpeakProgressEventArgs&gt;(synth_SpeakProgress);  \n\n        // Speak the prompt and play back the output file.  \n        synth.Speak(builder);  \n      }  \n\n      Console.WriteLine();  \n      Console.WriteLine(&quot;Press any key to exit...&quot;);  \n      Console.ReadKey();  \n    }  \n\n    // Write each word and its character position to the console.  \n    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  \n    {  \n      Console.WriteLine(&quot;Speak progress: {0} {1}&quot;,  \n        e.CharacterPosition, e.Text);  \n    }  \n  }  \n}\n</code></pre><pre><code class=\"lang-xml\">&lt;!-- The following are the contents of the file Weather.ssml.   \nNote that because of the &lt;p&gt; tag and the space that follows it,   \nthat the character position of the first word &quot;The&quot; will be 86. --&gt;  \n\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;  \n&lt;speak version=&quot;1.0&quot;  \n xmlns=&quot;http://www.w3.org/2001/10/synthesis&quot;  \n xml:lang=&quot;en-US&quot;&gt;  \n\n  &lt;p&gt; The weather forecast for today is partly cloudy with   \nsome sun breaks. &lt;/p&gt;  \n\n  &lt;break strength=&quot;medium&quot; /&gt;  \n\n  &lt;p&gt; Tonight&#39;s weather will be cloudy with a 30% chance of   \nshowers. &lt;/p&gt;  \n\n&lt;/speak&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeakProgressEventArgs_Text\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeakProgressEventArgs_Text_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Text</div>        \r\n          </div>\r\n    \r\n            <p>The text that was just spoken when the event was raised.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Text { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns the text that was just spoken when the event was raised.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> normalizes numbers to the words that correspond to how the number will be spoken. For example, the synthesizer speaks the number â€œ4003â€ as â€œfour thousand threeâ€. It raises a <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakProgress\" data-linktype=\"relative-path\">SpeakProgress</a> event for each of the spoken words. However, the Text property for each of the three words is the same. It is the text â€œ4003â€ from the prompt.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example illustrates the how the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakProgress\" data-linktype=\"relative-path\">SpeakProgress</a> event reports the <a class=\"xref\" href=\"system.speech.synthesis.speakprogresseventargs#System_Speech_Synthesis_SpeakProgressEventArgs_CharacterPosition_\" data-linktype=\"relative-path\">CharacterPosition</a> and Text properties for strings that contain numbers.  </p>\n<pre><code class=\"lang-c#\">using System;  \nusing System.Xml;  \nusing System.IO;  \nusing System.Speech.Synthesis;  \n\nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n\n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n\n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n\n        // Create an XML Reader from the file, create a PromptBuilder and   \n        // append the XmlReader.  \n        PromptBuilder builder = new PromptBuilder();  \n        builder.AppendText(&quot;4003&quot;);  \n\n        // Add a handler for the SpeakProgress event.  \n        synth.SpeakProgress +=  \n          new EventHandler&lt;SpeakProgressEventArgs&gt;(synth_SpeakProgress);  \n\n        // Speak the prompt and play back the output file.  \n        synth.Speak(builder);  \n      }  \n\n      Console.WriteLine();  \n      Console.WriteLine(&quot;Press any key to exit...&quot;);  \n      Console.ReadKey();  \n    }  \n\n    // Write each word and its character position to the console.  \n    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  \n    {  \n      Console.WriteLine(&quot;Speak progress -    Character position:  {0}    Text:  {1}&quot;,  \n        e.CharacterPosition, e.Text);  \n    }  \n  }  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Speech.Synthesis.SpeakProgressEventArgs.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Speech.Synthesis.SpeakProgressEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeakProgressEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeakProgressEventArgs.Text\">\r\n<meta name=\"APILocation\" content=\"System.Speech.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"004fbe46-9403-729e-a9b4-4ae93dfbe6f1\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\o2y0\\s\\fulldocset\\xml\\System.Speech.Synthesis\\SpeakProgressEventArgs.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Returns data from the  event.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Speech.Synthesis/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Speech.Synthesis.SpeakProgressEventArgs\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Speech.Synthesis.SpeakProgressEventArgs.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Speech.Synthesis.SpeakProgressEventArgs.yml","open_to_public_contributors":true,"api_name":["System.Speech.Synthesis.SpeakProgressEventArgs","System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition","System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount","System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition","System.Speech.Synthesis.SpeakProgressEventArgs.Text"],"api_location":["System.Speech.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Speech.Synthesis.SpeakProgressEventArgs","System::Speech::Synthesis::SpeakProgressEventArgs","System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition","System::Speech::Synthesis::SpeakProgressEventArgs::AudioPosition","System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount","System::Speech::Synthesis::SpeakProgressEventArgs::CharacterCount","System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition","System::Speech::Synthesis::SpeakProgressEventArgs::CharacterPosition","System.Speech.Synthesis.SpeakProgressEventArgs.Text","System::Speech::Synthesis::SpeakProgressEventArgs::Text"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"004fbe46-9403-729e-a9b4-4ae93dfbe6f1","original_ecmaxml_local_path":"W:\\o2y0\\s\\fulldocset\\xml\\System.Speech.Synthesis\\SpeakProgressEventArgs.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Speech.Synthesis/SpeakProgressEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SpeakProgressEventArgs class | Microsoft Docs","_op_ogTitle":"SpeakProgressEventArgs class","description":"Returns data from the  event.\n","toc_asset_id":"_splitted/System.Speech.Synthesis/toc.json","toc_rel":"_splitted/System.Speech.Synthesis/toc.json","source_url":"","ms.assetid":"System.Speech.Synthesis.SpeakProgressEventArgs","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.speech.synthesis.speakprogresseventargs","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.speech.synthesis.speakprogresseventargs","fileRelativePath":"System.Speech.Synthesis.SpeakProgressEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}