{"content":"    \r\n    <h1 id=\"System_NotSupportedException\">\r\n      <span class=\"lang-csharp\">NotSupportedException</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class NotSupportedException : SystemException</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.systemexception\" data-linktype=\"relative-path\">System.SystemException</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">NotSupportedException</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_Data\" data-linktype=\"relative-path\">Data</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_GetBaseException\" data-linktype=\"relative-path\">GetBaseException()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"relative-path\">GetObjectData(SerializationInfo,StreamingContext)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_HelpLink\" data-linktype=\"relative-path\">HelpLink</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_HResult\" data-linktype=\"relative-path\">HResult</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_InnerException\" data-linktype=\"relative-path\">InnerException</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_Message\" data-linktype=\"relative-path\">Message</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_SerializeObjectState\" data-linktype=\"relative-path\">SerializeObjectState</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_Source\" data-linktype=\"relative-path\">Source</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_StackTrace\" data-linktype=\"relative-path\">StackTrace</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_TargetSite\" data-linktype=\"relative-path\">TargetSite</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>NotSupportedException indicates that no implementation exists for an invoked method or property.  </p>\n<p> NotSupportedException uses the HRESULT COR_E_NOTSUPPORTED, which has the value 0x80131515.  </p>\n<p> For a list of initial property values for an instance of NotSupportedException, see the <a class=\"xref\" href=\"system.notsupportedexception#System_NotSupportedException__ctor_\" data-linktype=\"relative-path\">NotSupportedException</a> constructors.  </p>\n<h2 id=\"throwing-a-notsupportedexception-exception\">Throwing a NotSupportedException exception</h2>\n<p> You might consider throwing a NotSupportedException exception in the following cases:  </p>\n<ul>\n<li><p>You are implementing a general-purpose interface, and number of the methods have no meaningful implementation. For example, if you are creating a date and time type that implements the <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface, you would throw a NotSupportedException exception for most of the conversions.  </p>\n</li>\n<li><p>You&#39;ve inherited from an abstract class that requires that you override a number of methods. However, you&#39;re only prepared to provide an implementation for a subset of these. For the methods that you decide not to implement, you can choose to throw a NotSupportedException.  </p>\n</li>\n<li><p>You are defining a general-purpose type with a state that enables operations conditionally. For example, your type can be either read-only or read-write. In that case:  </p>\n<ul>\n<li><p>If the object is read-only, attempting to assign values to the properties of an instance or call methods that modify instance state should throw  a NotSupportedException exception.  </p>\n</li>\n<li><p>You should implement a property that returns a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether particular functionality is available. For example, for a type that can be either read-only or read-write, you could implement a <code>IsReadOnly</code> property that indicates whether the set of read-write methods are available or unavailable.  </p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"handling-a-notsupportedexception-exception\">Handling a NotSupportedException exception</h2>\n<p> The NotSupportedException exception indicates that a method has no implementation and that you should not call it.  You should not handle the exception. Instead, what you should do depends on the cause of the exception:  whether an implementation is completely absent , or the member invocation is inconsistent with the purpose of an object (such as a call to the <a class=\"xref\" href=\"system.io.filestream#System_IO_FileStream_Read_\" data-linktype=\"relative-path\">Read</a> method on a read-only <a class=\"xref\" href=\"system.io.filestream\" data-linktype=\"relative-path\">FileStream</a> object .  </p>\n<p> <strong>An implementation has not been provided because the operation cannot be performed in a meaningful way.</strong><br> This is a common exception when you are calling methods on an object that provides implementations for the methods of an abstract base class, or that implements a general-purpose interface, and the method has no meaningful implementation.  </p>\n<p> For example, the <a class=\"xref\" href=\"system.convert\" data-linktype=\"relative-path\">Convert</a> class implements the <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface, which means that it must include a method to convert every primitive type to every other primitive type. Many of those conversions, however, are not possible. As a result, a call to the <a class=\"xref\" href=\"system.convert#System_Convert_ToBoolean_System_DateTime_\" data-linktype=\"relative-path\">System.Convert.ToBoolean(DateTime)</a> method, for instance, throws a NotSupportedException exception because there is no possible conversion between a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> and a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value  </p>\n<p> To eliminate the exception, you should eliminate the method call.  </p>\n<p> <strong>The method call is not supported given the state of the object.</strong><br> You are attempting to invoke a member whose functionality is unavailable because of the object&#39;s state. You can eliminate the exception in one of three ways:  </p>\n<ul>\n<li><p>You know the state of the object in advance, but you&#39;ve invoked an unsupported method or property. In this case, the member invocation is an error, and you can eliminate it.  </p>\n</li>\n<li><p>You know the state of the object in advance (usually because your code has instantiated it), but the object is mis-configured. The following example illustrates this issue. It creates a read-only <a class=\"xref\" href=\"system.io.filestream\" data-linktype=\"relative-path\">FileStream</a> object  and then attempts to write to it.  </p>\n<pre><code class=\"lang-vb\" name=\"System.NotSupportedException#1\">Imports System.IO\nImports System.Text\nImports System.Threading.Tasks\n\nModule Example\n   Public Sub Main()\n      Dim enc As Encoding = Encoding.Unicode\n      Dim value As String = &quot;This is a string to persist.&quot;\n      Dim bytes() As Byte = enc.GetBytes(value)\n\n      Dim fs As New FileStream(&quot;.\\TestFile.dat&quot;, \n                               FileMode.Open,\n                               FileAccess.Read)\n      Dim t As Task = fs.WriteAsync(enc.GetPreamble(), 0, enc.GetPreamble().Length)\n      Dim t2 As Task = t.ContinueWith(Sub(a) fs.WriteAsync(bytes, 0, bytes.Length)) \n      t2.Wait()\n      fs.Close()\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;    Unhandled Exception: System.NotSupportedException: Stream does not support writing.\n&#39;       at System.IO.Stream.BeginWriteInternal(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state\n&#39;    , Boolean serializeAsynchronously)\n&#39;       at System.IO.FileStream.BeginWrite(Byte[] array, Int32 offset, Int32 numBytes, AsyncCallback userCallback, Object sta\n&#39;    teObject)\n&#39;       at System.IO.Stream.&lt;&gt;c.&lt;BeginEndWriteAsync&gt;b__53_0(Stream stream, ReadWriteParameters args, AsyncCallback callback,\n&#39;    Object state)\n&#39;       at System.Threading.Tasks.TaskFactory`1.FromAsyncTrim[TInstance,TArgs](TInstance thisRef, TArgs args, Func`5 beginMet\n&#39;    hod, Func`3 endMethod)\n&#39;       at System.IO.Stream.BeginEndWriteAsync(Byte[] buffer, Int32 offset, Int32 count)\n&#39;       at System.IO.FileStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)\n&#39;       at System.IO.Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count)\n&#39;       at Example.Main()\n</code></pre><pre><code class=\"lang-cs\" name=\"System.NotSupportedException#1\">using System;\nusing System.IO;\nusing System.Text;\nusing System.Threading.Tasks;\n\npublic class Example\n{\n   public static void Main()\n   {\n      Encoding enc = Encoding.Unicode;\n      String value = &quot;This is a string to persist.&quot;;\n      Byte[] bytes  = enc.GetBytes(value);\n\n      FileStream fs = new FileStream(@&quot;.\\TestFile.dat&quot;, \n                                     FileMode.Open,\n                                     FileAccess.Read);\n      Task t = fs.WriteAsync(enc.GetPreamble(), 0, enc.GetPreamble().Length);\n      Task t2 = t.ContinueWith( (a) =&gt; fs.WriteAsync(bytes, 0, bytes.Length) ); \n      t2.Wait();\n      fs.Close();\n   }\n}\n// The example displays the following output:\n//    Unhandled Exception: System.NotSupportedException: Stream does not support writing.\n//       at System.IO.Stream.BeginWriteInternal(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state\n//    , Boolean serializeAsynchronously)\n//       at System.IO.FileStream.BeginWrite(Byte[] array, Int32 offset, Int32 numBytes, AsyncCallback userCallback, Object sta\n//    teObject)\n//       at System.IO.Stream.&lt;&gt;c.&lt;BeginEndWriteAsync&gt;b__53_0(Stream stream, ReadWriteParameters args, AsyncCallback callback,\n//    Object state)\n//       at System.Threading.Tasks.TaskFactory`1.FromAsyncTrim[TInstance,TArgs](TInstance thisRef, TArgs args, Func`5 beginMet\n//    hod, Func`3 endMethod)\n//       at System.IO.Stream.BeginEndWriteAsync(Byte[] buffer, Int32 offset, Int32 count)\n//       at System.IO.FileStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)\n//       at System.IO.Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count)\n//       at Example.Main()\n</code></pre><p> You can eliminate the exception by ensuring that the instantiated object supports the functionality you intend. The following example addresses the problem of the read-only <a class=\"xref\" href=\"system.io.filestream\" data-linktype=\"relative-path\">FileStream</a> object by providing the correct arguments to the <a class=\"xref\" href=\"system.io.filestream#System_IO_FileStream__ctor_System_String_System_IO_FileMode_System_IO_FileAccess_\" data-linktype=\"relative-path\">System.IO.FileStream.FileStream(String,FileMode,FileAccess)</a> constructor.  </p>\n</li>\n<li><p>You don&#39;t know the state of the object in advance, and the object doesn&#39;t support a particular operation. In most cases, the object should include a property or method that indicates whether it supports a particular set of operations. You can eliminate the exception by checking the value of the object and invoking the member only if appropriate.  </p>\n<p> The following example defines a <code>DetectEncoding</code> method that throws a NotSupportedException exception when it attempts to read from the beginning of a stream that does not support read access.  </p>\n<pre><code class=\"lang-cs\" name=\"System.NotSupportedException#3\">using System;\nusing System.IO;\nusing System.Threading.Tasks;\n\npublic class Example\n{\n   public static void Main()\n   {\n      String name = @&quot;.\\TestFile.dat&quot;;\n      var fs = new FileStream(name, \n                              FileMode.Create,\n                              FileAccess.Write);\n         Console.WriteLine(&quot;Filename: {0}, Encoding: {1}&quot;, \n                           name, FileUtilities.GetEncodingType(fs));\n   }\n}\n\npublic class FileUtilities\n{\n   public enum EncodingType\n   { None = 0, Unknown = -1, Utf8 = 1, Utf16 = 2, Utf32 = 3 }\n   \n   public static EncodingType GetEncodingType(FileStream fs)\n   {\n      Byte[] bytes = new Byte[4];\n      var t = fs.ReadAsync(bytes, 0, 4);\n      t.Wait();\n      int bytesRead = t.Result;\n      if (bytesRead &lt; 2)\n         return EncodingType.None;\n      \n      if (bytesRead &gt;= 3 &amp; (bytes[0] == 0xEF &amp;&amp; bytes[1] == 0xBB &amp;&amp; bytes[2] == 0xBF))\n         return EncodingType.Utf8;\n      \n      if (bytesRead == 4) { \n         var value = BitConverter.ToUInt32(bytes, 0);\n         if (value == 0x0000FEFF | value == 0xFEFF0000)\n            return EncodingType.Utf32;\n      }\n      \n      var value16 = BitConverter.ToUInt16(bytes, 0);\n      if (value16 == (ushort)0xFEFF | value16 == (ushort)0xFFFE) \n         return EncodingType.Utf16;\n      \n      return EncodingType.Unknown;\n   }\n}\n// The example displays the following output:\n//    Unhandled Exception: System.NotSupportedException: Stream does not support reading.\n//       at System.IO.Stream.BeginReadInternal(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state,\n//     Boolean serializeAsynchronously)\n//       at System.IO.FileStream.BeginRead(Byte[] array, Int32 offset, Int32 numBytes, AsyncCallback userCallback, Object stat\n//    eObject)\n//       at System.IO.Stream.&lt;&gt;c.&lt;BeginEndReadAsync&gt;b__43_0(Stream stream, ReadWriteParameters args, AsyncCallback callback, O\n//    bject state)\n//       at System.Threading.Tasks.TaskFactory`1.FromAsyncTrim[TInstance,TArgs](TInstance thisRef, TArgs args, Func`5 beginMet\n//    hod, Func`3 endMethod)\n//       at System.IO.Stream.BeginEndReadAsync(Byte[] buffer, Int32 offset, Int32 count)\n//       at System.IO.FileStream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)\n//       at System.IO.Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count)\n//       at FileUtilities.GetEncodingType(FileStream fs)\n//       at Example.Main()\n</code></pre><pre><code class=\"lang-vb\" name=\"System.NotSupportedException#3\">Imports System.IO\nImports System.Threading.Tasks\n\nModule Example\n   Public Sub Main()\n      Dim name As String = &quot;.\\TestFile.dat&quot;\n      Dim fs As New FileStream(name, \n                               FileMode.Create,\n                               FileAccess.Write)\n      Console.WriteLine(&quot;Filename: {0}, Encoding: {1}&quot;, \n                        name, FileUtilities.GetEncodingType(fs))\n   End Sub\nEnd Module\n\nPublic Class FileUtilities\n   Public Enum EncodingType As Integer\n      None = 0\n      Unknown = -1\n      Utf8 = 1\n      Utf16 = 2\n      Utf32 = 3\n   End Enum\n   \n   Public Shared Function GetEncodingType(fs As FileStream) As EncodingType\n      Dim bytes(3) As Byte\n      Dim t As Task(Of Integer) = fs.ReadAsync(bytes, 0, 4)\n      t.Wait()\n      Dim bytesRead As Integer = t.Result\n      If bytesRead &lt; 2 Then Return EncodingType.None\n      \n      If bytesRead &gt;= 3 And (bytes(0) = &amp;hEF AndAlso bytes(1) = &amp;hBB AndAlso bytes(2) = &amp;hBF) Then\n         Return EncodingType.Utf8\n      End If\n      \n      If bytesRead = 4 Then \n         Dim value As UInteger = BitConverter.ToUInt32(bytes, 0)\n         If value = &amp;h0000FEFF Or value = &amp;hFEFF0000 Then\n            Return EncodingType.Utf32\n         End If\n      End If\n      \n      Dim value16 As UInt16 = BitConverter.ToUInt16(bytes, 0)\n      If value16 = &amp;hFEFF Or value16 = &amp;hFFFE Then \n         Return EncodingType.Utf16\n      End If\n      \n      Return EncodingType.Unknown\n   End Function\nEnd Class\n&#39; The example displays the following output:\n&#39;    Unhandled Exception: System.NotSupportedException: Stream does not support reading.\n&#39;       at System.IO.Stream.BeginReadInternal(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state,\n&#39;     Boolean serializeAsynchronously)\n&#39;       at System.IO.FileStream.BeginRead(Byte[] array, Int32 offset, Int32 numBytes, AsyncCallback userCallback, Object stat\n&#39;    eObject)\n&#39;       at System.IO.Stream.&lt;&gt;c.&lt;BeginEndReadAsync&gt;b__43_0(Stream stream, ReadWriteParameters args, AsyncCallback callback, O\n&#39;    bject state)\n&#39;       at System.Threading.Tasks.TaskFactory`1.FromAsyncTrim[TInstance,TArgs](TInstance thisRef, TArgs args, Func`5 beginMet\n&#39;    hod, Func`3 endMethod)\n&#39;       at System.IO.Stream.BeginEndReadAsync(Byte[] buffer, Int32 offset, Int32 count)\n&#39;       at System.IO.FileStream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)\n&#39;       at System.IO.Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count)\n&#39;       at FileUtilities.GetEncodingType(FileStream fs)\n&#39;       at Example.Main()\n</code></pre><p> You can eliminate the exception by examining the value of the <a class=\"xref\" href=\"system.io.filestream#System_IO_FileStream_CanRead_\" data-linktype=\"relative-path\">CanRead</a> property  and exiting the method if the stream is read-only.  </p>\n<pre><code class=\"lang-vb\" name=\"System.NotSupportedException#4\">Public Class FileUtilities\n   Public Enum EncodingType As Integer\n      None = 0\n      Unknown = -1\n      Utf8 = 1\n      Utf16 = 2\n      Utf32 = 3\n   End Enum\n   \n   Public Shared Function GetEncodingType(fs As FileStream) As EncodingType\n      If Not fs.CanRead Then\n         Return EncodingType.Unknown\n\n      Dim bytes(3) As Byte\n      Dim t As Task(Of Integer) = fs.ReadAsync(bytes, 0, 4)\n      t.Wait()\n      Dim bytesRead As Integer = t.Result\n      If bytesRead &lt; 2 Then Return EncodingType.None\n      \n      If bytesRead &gt;= 3 And (bytes(0) = &amp;hEF AndAlso bytes(1) = &amp;hBB AndAlso bytes(2) = &amp;hBF) Then\n         Return EncodingType.Utf8\n      End If\n      \n      If bytesRead = 4 Then \n         Dim value As UInteger = BitConverter.ToUInt32(bytes, 0)\n         If value = &amp;h0000FEFF Or value = &amp;hFEFF0000 Then\n            Return EncodingType.Utf32\n         End If\n      End If\n      \n      Dim value16 As UInt16 = BitConverter.ToUInt16(bytes, 0)\n      If value16 = &amp;hFEFF Or value16 = &amp;hFFFE Then \n         Return EncodingType.Utf16\n      End If\n      \n      Return EncodingType.Unknown\n   End Function\nEnd Class\n&#39; The example displays the following output:\n&#39;       Filename: .\\TestFile.dat, Encoding: Unknown\n</code></pre><pre><code class=\"lang-cs\" name=\"System.NotSupportedException#4\">   public static EncodingType GetEncodingType(FileStream fs)\n   {\n      if (!fs.CanRead) \n         return EncodingType.Unknown;\n\n      Byte[] bytes = new Byte[4];\n      var t = fs.ReadAsync(bytes, 0, 4);\n      t.Wait();\n      int bytesRead = t.Result;\n      if (bytesRead &lt; 2)\n         return EncodingType.None;\n      \n      if (bytesRead &gt;= 3 &amp; (bytes[0] == 0xEF &amp;&amp; bytes[1] == 0xBB &amp;&amp; bytes[2] == 0xBF))\n         return EncodingType.Utf8;\n      \n      if (bytesRead == 4) { \n         var value = BitConverter.ToUInt32(bytes, 0);\n         if (value == 0x0000FEFF | value == 0xFEFF0000)\n            return EncodingType.Utf32;\n      }\n      \n      var value16 = BitConverter.ToUInt16(bytes, 0);\n      if (value16 == (ushort)0xFEFF | value16 == (ushort)0xFFFE) \n         return EncodingType.Utf16;\n      \n      return EncodingType.Unknown;\n   }\n}\n// The example displays the following output:\n//       Filename: .\\TestFile.dat, Encoding: Unknown\n</code></pre></li>\n</ul>\n<h2 id=\"related-exception-types\">Related exception types</h2>\n<p> The NotSupportedException exception is closely related to two other exception types;  </p>\n<p> <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a>.<br> This exception is thrown when a method could be implemented but is not, either because the member will be implemented in  a later version, the member is not available on  a particular platform, or the member belongs to an abstract class and a derived class must provide an implementation.  </p>\n<p> <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a><br> This exception is thrown in scenarios in which it is generally sometimes possible for the object to perform the requested operation, and the object state determines whether the operation can be performed.  </p>\n<h2 id=\"net-compact-framework-notes\">.NET Compact Framework notes</h2>\n<p> When working with the .NET Compact Framework and using P/Invoke on a native function, this exception may be thrown if:  </p>\n<ul>\n<li><p>The declaration in managed code is incorrect.  </p>\n</li>\n<li><p>The .NET Compact Framework does not support what you are trying to do.  </p>\n</li>\n<li><p>The DLL names are mangled on export.  </p>\n<p>If a <a class=\"xref\" href=\"system.notsupportedexception#System_NotSupportedException__ctor_\" data-linktype=\"relative-path\">NotSupportedException</a> exception is thrown, check:  </p>\n</li>\n<li><p>For any violations of the .NET Compact Framework P/Invoke restrictions.  </p>\n</li>\n<li><p>For any arguments that require pre-allocated memory. If these exist, you should pass a reference to an existing variable.  </p>\n</li>\n<li><p>That the names of the exported functions are correct. This can be verified with <a href=\"https://msdn.microsoft.com/library/c1h23y6c.aspx\" data-linktype=\"external\">DumpBin.exe</a>.  </p>\n</li>\n<li><p>That you are not attempting to pass too many arguments.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_NotSupportedException__ctor\" data-linktype=\"self-bookmark\">NotSupportedException()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a> class, setting the <span class=\"xref\">stem.Exception.Message*</span> property of the new instance to a system-supplied message that describes the error. This message takes into account the current system culture.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_NotSupportedException__ctor_System_String_\" data-linktype=\"self-bookmark\">NotSupportedException(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a> class with a specified error message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_NotSupportedException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">NotSupportedException(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a> class with serialized data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_NotSupportedException__ctor_System_String_System_Exception_\" data-linktype=\"self-bookmark\">NotSupportedException(String,Exception)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_NotSupportedException__ctor\">\r\n    \r\n            <a id=\"System_NotSupportedException__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NotSupportedException()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a> class, setting the <span class=\"xref\">stem.Exception.Message*</span> property of the new instance to a system-supplied message that describes the error. This message takes into account the current system culture.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public NotSupportedException ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following table shows the initial property values for an instance of <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a></td>\n<td><code>null</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a></td>\n<td>The localized error message string.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_NotSupportedException__ctor_System_String_\">\r\n    \r\n            <a id=\"System_NotSupportedException__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NotSupportedException(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a> class with a specified error message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public NotSupportedException (string message);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that describes the error. The content of <code>message</code> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following table shows the initial property values for an instance of <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a></td>\n<td><code>null</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a></td>\n<td>The error message string.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_NotSupportedException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_NotSupportedException__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NotSupportedException(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a> class with serialized data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected NotSupportedException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>info</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object that holds the serialized object data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The contextual information about the source or destination.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see <a href=\"../Topic/XML%20and%20SOAP%20Serialization.md\" data-linktype=\"relative-path\">XML and SOAP Serialization</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_NotSupportedException__ctor_System_String_System_Exception_\">\r\n    \r\n            <a id=\"System_NotSupportedException__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NotSupportedException(String,Exception)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public NotSupportedException (string message, Exception innerException);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The error message that explains the reason for the exception.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>innerException</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not a null reference, the current exception is raised in a <code>catch</code> block that handles the inner exception.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property. The <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property returns the same value that is passed into the constructor, or <code>null</code> if the <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property does not supply the inner exception value to the constructor.  </p>\n<p> The following table shows the initial property values for an instance of <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a></td>\n<td>The inner exception reference.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a></td>\n<td>The error message string.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.NotSupportedException.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.NotSupportedException.yml\">\r\n<meta name=\"APIName\" content=\"System.NotSupportedException\">\r\n<meta name=\"APIName\" content=\"System.NotSupportedException..ctor\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"1bacbe06-d5b6-099b-d78b-3de7c2fff280\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.NotSupportedException\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.NotSupportedException.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.NotSupportedException.yml","open_to_public_contributors":true,"api_name":["System.NotSupportedException","System.NotSupportedException..ctor"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.NotSupportedException","System::NotSupportedException","System.NotSupportedException.#ctor","System::NotSupportedException::#ctor"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"1bacbe06-d5b6-099b-d78b-3de7c2fff280","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System/NotSupportedException.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"NotSupportedException class | Microsoft Docs","_op_ogTitle":"NotSupportedException class","description":"The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.\n","toc_asset_id":"_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.NotSupportedException","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.notsupportedexception","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.notsupportedexception","fileRelativePath":"System.NotSupportedException.html"},"themesRelativePathToOutputRoot":"_themes/"}