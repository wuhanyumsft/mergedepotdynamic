{"content":"    \r\n    <h1 id=\"System_Windows_Threading_DispatcherObject\">\r\n      <span class=\"lang-csharp\">DispatcherObject</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents an object that is associated with a <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class DispatcherObject</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DispatcherObject</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Only the thread that the <a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_Dispatcher_\" data-linktype=\"relative-path\">Dispatcher</a> was created on may access the DispatcherObject directly.  To access a DispatcherObject from a thread other than the thread the DispatcherObject was created on, call <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> or <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> on the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> the DispatcherObject is associated with.  </p>\n<p> Subclasses of DispatcherObject that need to enforce thread safety can do so by calling <a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_VerifyAccess_\" data-linktype=\"relative-path\">VerifyAccess</a> on all public methods.  This guarantees the calling thread is the thread that the DispatcherObject was created on.  </p>\n<p> A DispatcherObject cannot be independently instantiated; that is, all constructors are protected.  </p>\n<p> Objects that derive from DispatcherObject have thread affinity.  </p>\n<p> Objects that derive from <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a> are free-threaded when they are frozen.  For more information, see the <a href=\"../Topic/Freezable%20Objects%20Overview.md\" data-linktype=\"relative-path\">Freezable Objects Overview</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_DispatcherObject__ctor\" data-linktype=\"self-bookmark\">DispatcherObject()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_DispatcherObject_Dispatcher\" data-linktype=\"self-bookmark\">Dispatcher</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> this <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_DispatcherObject_CheckAccess\" data-linktype=\"self-bookmark\">CheckAccess()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the calling thread has access to this <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_DispatcherObject_VerifyAccess\" data-linktype=\"self-bookmark\">VerifyAccess()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Enforces that the calling thread has access to this <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_DispatcherObject__ctor\">\r\n    \r\n            <a id=\"System_Windows_Threading_DispatcherObject__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DispatcherObject()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected DispatcherObject ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_DispatcherObject_Dispatcher\">\r\n    \r\n            <a id=\"System_Windows_Threading_DispatcherObject_Dispatcher_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispatcher</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> this <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Threading.Dispatcher Dispatcher { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a></div>\r\n                  </div>\r\n                  <p>The dispatcher.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Only the thread that the Dispatcher was created on may access the <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> directly.  To access a <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> from a thread other than the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> was created on, call <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> and <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> on the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> the <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> is associated with.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_DispatcherObject_CheckAccess\">\r\n    \r\n            <a id=\"System_Windows_Threading_DispatcherObject_CheckAccess_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CheckAccess()</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the calling thread has access to this <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CheckAccess ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the calling thread has access to this object; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Only the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_Dispatcher_\" data-linktype=\"relative-path\">Dispatcher</a> was created on may access the <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a>.  </p>\n<p> Any thread can check to see whether it has access to this <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a>.  </p>\n<p> The difference between CheckAccess and <a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_VerifyAccess_\" data-linktype=\"relative-path\">VerifyAccess</a> is that CheckAccess returns a Boolean that specifies whether the calling thread has access to this <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> and <a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_VerifyAccess_\" data-linktype=\"relative-path\">VerifyAccess</a> throws an exception if the calling thread does not have access to the this <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a>.  </p>\n<p> Calling this method is identical to calling <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_CheckAccess_\" data-linktype=\"relative-path\">CheckAccess</a> on the associated <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses CheckAccess to determine whether a thread has access to the thread that a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> was created on.  The CheckAccess method on the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> is called to verify access to the thread.  If the calling thread has access, the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> is updated by just accessing the members of the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>; otherwise, a delegate, which accepts a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> as an argument, is posted onto the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> of the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"DispatcherObjectAccessSample#DispatcherObjectAccessCheckAccess\">&#39; Uses the DispatcherObject.CheckAccess method to determine if \n&#39; the calling thread has access to the thread the UI object is on\nPrivate Sub TryToUpdateButtonCheckAccess(ByVal uiObject As Object)\n\tDim theButton As Button = TryCast(uiObject, Button)\n\n\tIf theButton IsNot Nothing Then\n\t\t&#39; Checking if this thread has access to the object\n\t\tIf theButton.CheckAccess() Then\n\t\t\t&#39; This thread has access so it can update the UI thread\n\t\t\tUpdateButtonUI(theButton)\n\t\tElse\n\t\t\t&#39; This thread does not have access to the UI thread\n\t\t\t&#39; Pushing update method on the Dispatcher of the UI thread\n\t\t\ttheButton.Dispatcher.BeginInvoke(DispatcherPriority.Normal, New UpdateUIDelegate(AddressOf UpdateButtonUI), theButton)\n\t\tEnd If\n\tEnd If\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"DispatcherObjectAccessSample#DispatcherObjectAccessCheckAccess\">// Uses the DispatcherObject.CheckAccess method to determine if \n// the calling thread has access to the thread the UI object is on\nprivate void TryToUpdateButtonCheckAccess(object uiObject)\n{\n    Button theButton = uiObject as Button;\n\n    if (theButton != null)\n    {\n        // Checking if this thread has access to the object\n        if(theButton.CheckAccess())\n        {\n            // This thread has access so it can update the UI thread\n            UpdateButtonUI(theButton);\n        }\n        else\n        {\n            // This thread does not have access to the UI thread\n            // Pushing update method on the Dispatcher of the UI thread\n            theButton.Dispatcher.BeginInvoke(DispatcherPriority.Normal,\n                new UpdateUIDelegate(UpdateButtonUI), theButton);\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_DispatcherObject_VerifyAccess\">\r\n    \r\n            <a id=\"System_Windows_Threading_DispatcherObject_VerifyAccess_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VerifyAccess()</div>        \r\n          </div>\r\n    \r\n            <p>Enforces that the calling thread has access to this <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void VerifyAccess ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>the calling thread does not have access to this <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Only the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_Dispatcher_\" data-linktype=\"relative-path\">Dispatcher</a> was created on may access the <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a>.  </p>\n<p> Any thread can check to see whether it has access to this <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a>.  </p>\n<p> The difference between <a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_CheckAccess_\" data-linktype=\"relative-path\">CheckAccess</a> and VerifyAccess is that <a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_CheckAccess_\" data-linktype=\"relative-path\">CheckAccess</a> returns a Boolean that specifies whether the calling thread has access to this <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> and VerifyAccess throws an exception if the calling thread does not have access to the this <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses VerifyAccess to determine whether a thread has access to the thread that a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> was created on.  If the calling thread does not have access, an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown.  </p>\n<pre><code class=\"lang-vb\" name=\"DispatcherObjectAccessSample#DispatcherObjectAccessVerifyAccess\">&#39; Check if this thread has access to this object.\ntheButton.VerifyAccess()\n\n&#39; Thread has access to the object, so update the UI.\nUpdateButtonUI(theButton)\n</code></pre><pre><code class=\"lang-cs\" name=\"DispatcherObjectAccessSample#DispatcherObjectAccessVerifyAccess\">// Check if this thread has access to this object.\ntheButton.VerifyAccess();\n\n// Thread has access to the object, so update the UI.\nUpdateButtonUI(theButton);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Threading.DispatcherObject.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Threading.DispatcherObject.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.DispatcherObject\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.DispatcherObject..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.DispatcherObject.CheckAccess\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.DispatcherObject.Dispatcher\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.DispatcherObject.VerifyAccess\">\r\n<meta name=\"APILocation\" content=\"WindowsBase.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"5a27bc36-ff93-119a-cf5d-63bc52650141\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents an object that is associated with a .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Threading/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Threading.DispatcherObject\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Threading.DispatcherObject.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Threading.DispatcherObject.yml","open_to_public_contributors":true,"api_name":["System.Windows.Threading.DispatcherObject","System.Windows.Threading.DispatcherObject..ctor","System.Windows.Threading.DispatcherObject.CheckAccess","System.Windows.Threading.DispatcherObject.Dispatcher","System.Windows.Threading.DispatcherObject.VerifyAccess"],"api_location":["WindowsBase.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Threading.DispatcherObject","System::Windows::Threading::DispatcherObject","System.Windows.Threading.DispatcherObject.#ctor","System::Windows::Threading::DispatcherObject::#ctor","System.Windows.Threading.DispatcherObject.CheckAccess","System::Windows::Threading::DispatcherObject::CheckAccess","System.Windows.Threading.DispatcherObject.Dispatcher","System::Windows::Threading::DispatcherObject::Dispatcher","System.Windows.Threading.DispatcherObject.VerifyAccess","System::Windows::Threading::DispatcherObject::VerifyAccess"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"5a27bc36-ff93-119a-cf5d-63bc52650141","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Threading/DispatcherObject.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DispatcherObject class | Microsoft Docs","_op_ogTitle":"DispatcherObject class","description":"Represents an object that is associated with a .\n","toc_asset_id":"_splitted/System.Windows.Threading/toc.json","toc_rel":"_splitted/System.Windows.Threading/toc.json","source_url":"","ms.assetid":"System.Windows.Threading.DispatcherObject","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.threading.dispatcherobject","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.threading.dispatcherobject","fileRelativePath":"System.Windows.Threading.DispatcherObject.html"},"themesRelativePathToOutputRoot":"_themes/"}