{"content":"    \r\n    <h1 id=\"System_Security_RightsManagement_CryptoProvider\">\r\n      <span class=\"lang-csharp\">CryptoProvider</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides digital rights management services for encrypting and decrypting protected content.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]\npublic class CryptoProvider : IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">CryptoProvider</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>CryptoProvider is created as a result of the <a class=\"xref\" href=\"system.security.rightsmanagement.uselicense#System_Security_RightsManagement_UseLicense_Bind_\" data-linktype=\"relative-path\">Bind</a> method when binding a rights managed <a class=\"xref\" href=\"system.security.rightsmanagement.uselicense\" data-linktype=\"relative-path\">UseLicense</a> to a <a class=\"xref\" href=\"system.security.rightsmanagement.secureenvironment\" data-linktype=\"relative-path\">SecureEnvironment</a>.  </p>\n<p> As with other <a class=\"xref\" href=\"system.security.rightsmanagement\" data-linktype=\"relative-path\">System.Security.RightsManagement</a> types, CryptoProvider is only usable in full trust applications.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_RightsManagement_CryptoProvider_BlockSize\" data-linktype=\"self-bookmark\">BlockSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the cipher block size, in bytes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_RightsManagement_CryptoProvider_BoundGrants\" data-linktype=\"self-bookmark\">BoundGrants</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection listing the rights that passed verification and that are granted to the user.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_RightsManagement_CryptoProvider_CanDecrypt\" data-linktype=\"self-bookmark\">CanDecrypt</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the user has rights to decrypt.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_RightsManagement_CryptoProvider_CanEncrypt\" data-linktype=\"self-bookmark\">CanEncrypt</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the user has rights to encrypt.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_RightsManagement_CryptoProvider_CanMergeBlocks\" data-linktype=\"self-bookmark\">CanMergeBlocks</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether <span class=\"xref\">stem.Security.RightsManagement.CryptoProvider.Encrypt*</span> and <span class=\"xref\">stem.Security.RightsManagement.CryptoProvider.Decrypt*</span> can accept buffers that are different block sizes in length.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_RightsManagement_CryptoProvider_Decrypt_System_Byte___\" data-linktype=\"self-bookmark\">Decrypt(Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Decrypts cipher text to clear text.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_RightsManagement_CryptoProvider_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by the <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider\" data-linktype=\"relative-path\">CryptoProvider</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_RightsManagement_CryptoProvider_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider\" data-linktype=\"relative-path\">CryptoProvider</a> and optionally releases the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_RightsManagement_CryptoProvider_Encrypt_System_Byte___\" data-linktype=\"self-bookmark\">Encrypt(Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Encrypts clear text to cipher text.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_RightsManagement_CryptoProvider_Finalize\" data-linktype=\"self-bookmark\">Finalize()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Frees resources and performs internal cleanup before the instance is reclaimed by garbage collection.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_RightsManagement_CryptoProvider_BlockSize\">\r\n    \r\n            <a id=\"System_Security_RightsManagement_CryptoProvider_BlockSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BlockSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets the cipher block size, in bytes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int BlockSize { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The cipher block size, in bytes.  The default block size for <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-aes-md.md&quot; -->Advanced Encryption Standard (AES)<!--END INCLUDE --> is 8.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>clearText</code> and <code>cipherText</code> buffers passed to <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider#System_Security_RightsManagement_CryptoProvider_Encrypt_\" data-linktype=\"relative-path\">Encrypt</a> and <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider#System_Security_RightsManagement_CryptoProvider_Decrypt_\" data-linktype=\"relative-path\">Decrypt</a> must be n*BlockSize bytes in length, where &#39;n&#39; is an integer greater than or equal to 1.  </p>\n<p> If <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider#System_Security_RightsManagement_CryptoProvider_CanMergeBlocks_\" data-linktype=\"relative-path\">CanMergeBlocks</a> is <code>false</code>, buffers passed to <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider#System_Security_RightsManagement_CryptoProvider_Encrypt_\" data-linktype=\"relative-path\">Encrypt</a> must be the same length as the buffers passed to <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider#System_Security_RightsManagement_CryptoProvider_Decrypt_\" data-linktype=\"relative-path\">Decrypt</a>.  </p>\n<p> If <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider#System_Security_RightsManagement_CryptoProvider_CanMergeBlocks_\" data-linktype=\"relative-path\">CanMergeBlocks</a> is <code>true</code>, buffers passed to <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider#System_Security_RightsManagement_CryptoProvider_Encrypt_\" data-linktype=\"relative-path\">Encrypt</a> can be a different length from the buffers passed to <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider#System_Security_RightsManagement_CryptoProvider_Decrypt_\" data-linktype=\"relative-path\">Decrypt</a> (all buffer sizes must still always be a multiple of BlockSize bytes in length).  </p>\n<p> A BlockSize of 1 indicates that the cipher is a stream cipher; a BlockSize of 2 or greater indicates a block cipher.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the BlockSize property in converting clear-text data to encrypted-text data.  </p>\n<pre><code class=\"lang-vb\" name=\"RightsManagedContentPublish#RmContPubEncrypt\">WriteStatus(&quot;   Binding the author&#39;s UseLicense and&quot;)\nWriteStatus(&quot;       obtaining the CryptoProvider.&quot;)\nUsing cryptoProvider As CryptoProvider = authorsUseLicense.Bind(_secureEnv)\n\tWriteStatus(&quot;   Writing encrypted content.&quot;)\n\tUsing clearTextStream As Stream = File.OpenRead(contentFile)\n\t\tUsing cryptoTextStream As Stream = File.OpenWrite(encryptedFile)\n\t\t\t&#39; Write the length of the source content file\n                        &#39; as the first four bytes of the encrypted file.\n                        Dim expression As Int32\n                        cryptoTextStream.Write(BitConverter.GetBytes(clearTextStream.Length), 0, Len(expression))\n\n\t\t\t&#39; Allocate clearText buffer.\n\t\t\tDim clearTextBlock(cryptoProvider.BlockSize - 1) As Byte\n\n\t\t\t&#39; Encrypt clearText to cryptoText block by block.\n\t\t\tDo\n\t\t\t\tDim readCount As Integer = ReliableRead(clearTextStream, clearTextBlock, 0, cryptoProvider.BlockSize)\n\t\t\t\t&#39; readCount of zero is end of data.\n\t\t\t\tIf readCount = 0 Then &#39; for\n\t\t\t\t\tExit Do\n\t\t\t\tEnd If\n\n\t\t\t\t&#39; Encrypt clearText to cryptoText.\n\t\t\t\tDim cryptoTextBlock() As Byte = cryptoProvider.Encrypt(clearTextBlock)\n\n\t\t\t\t&#39; Write cryptoText block.\n\t\t\t\tcryptoTextStream.Write(cryptoTextBlock, 0, cryptoTextBlock.Length)\n\t\t\tLoop\n\t\t\tWriteStatus(&quot;   Closing &#39;&quot; &amp; encryptedFilename &amp; &quot;&#39;.&quot;)\n\t\tEnd Using &#39; end:using (Stream cryptoTextStream =\n\tEnd Using &#39; end:using (Stream clearTextStream =\nEnd Using &#39; end:using (CryptoProvider cryptoProvider =\nWriteStatus(&quot;   Done - Content encryption complete.&quot;)\n</code></pre><pre><code class=\"lang-cs\" name=\"RightsManagedContentPublish#RmContPubEncrypt\">WriteStatus(&quot;   Binding the author&#39;s UseLicense and&quot;);\nWriteStatus(&quot;       obtaining the CryptoProvider.&quot;);\nusing (CryptoProvider cryptoProvider =\n            authorsUseLicense.Bind(_secureEnv))\n{\n    WriteStatus(&quot;   Writing encrypted content.&quot;);\n    using (Stream clearTextStream =\n                File.OpenRead(contentFile) )\n    {\n        using (Stream cryptoTextStream =\n                    File.OpenWrite(encryptedFile))\n        {\n            // Write the length of the source content file\n            // as the first four bytes of the encrypted file.\n            cryptoTextStream.Write(\n                BitConverter.GetBytes(clearTextStream.Length),\n                0, sizeof(Int32));\n\n            // Allocate clearText buffer.\n            byte[] clearTextBlock =\n                new byte[cryptoProvider.BlockSize];\n\n            // Encrypt clearText to cryptoText block by block.\n            for(;;)\n            {   // Read clearText block.\n                int readCount = ReliableRead(\n                                    clearTextStream,\n                                    clearTextBlock, 0 ,\n                                    cryptoProvider.BlockSize);\n                // readCount of zero is end of data.\n                if (readCount == 0)  break; // for\n\n                // Encrypt clearText to cryptoText.\n                byte[] cryptoTextBlock =\n                    cryptoProvider.Encrypt(clearTextBlock);\n\n                // Write cryptoText block.\n                cryptoTextStream.Write(cryptoTextBlock, 0,\n                                       cryptoTextBlock.Length);\n            }\n            WriteStatus(&quot;   Closing &#39;&quot; + encryptedFilename + &quot;&#39;.&quot;);\n        }// end:using (Stream cryptoTextStream =\n    }// end:using (Stream clearTextStream =\n}// end:using (CryptoProvider cryptoProvider =\nWriteStatus(&quot;   Done - Content encryption complete.&quot;);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_RightsManagement_CryptoProvider_BoundGrants\">\r\n    \r\n            <a id=\"System_Security_RightsManagement_CryptoProvider_BoundGrants_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BoundGrants</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection listing the rights that passed verification and that are granted to the user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt; BoundGrants { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"system.security.rightsmanagement.contentgrant\" data-linktype=\"relative-path\">ContentGrant</a>&gt;</div>\r\n                  </div>\r\n                  <p>A collection enumerating the rights that passed verification and that are granted to the user.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the BoundGrants property to obtain a list rights granted through a <a class=\"xref\" href=\"system.security.rightsmanagement.uselicense\" data-linktype=\"relative-path\">UseLicense</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"RightsManagedContentViewer#RmContViewUseLicense\">ShowStatus(&quot;   Binding UseLicense with the SecureEnvironment&quot; &amp; vbLf &amp; &quot;       to obtain the CryptoProvider.&quot;)\nDim cryptoProvider As CryptoProvider = useLicense.Bind(_secureEnv)\n\nShowStatus(&quot;   Obtaining BoundGrants.&quot;)\nDim grants As ReadOnlyCollection(Of ContentGrant) = cryptoProvider.BoundGrants\n\nrightsBlockTitle.Text = &quot;Rights - &quot; &amp; Filename(useLicenseFile)\nrightsBlock.Text = &quot;GRANTS LIST&quot; &amp; vbLf &amp; &quot;-----------------&quot; &amp; vbLf\nFor Each grant As ContentGrant In grants\n\trightsBlock.Text &amp;= &quot;USER:  &quot; &amp; grant.User.Name &amp; &quot; [&quot; &amp; grant.User.AuthenticationType &amp; &quot;]&quot; &amp; vbLf\n\trightsBlock.Text &amp;= &quot;RIGHT: &quot; &amp; grant.Right.ToString() &amp; vbLf\n\trightsBlock.Text &amp;= &quot;    From:  &quot; &amp; grant.ValidFrom &amp; vbLf\n\trightsBlock.Text &amp;= &quot;    Until: &quot; &amp; grant.ValidUntil &amp; vbLf\nNext grant\n\nIf cryptoProvider.CanDecrypt = True Then\n\tShowStatus(&quot;   Decryption granted.&quot;)\nElse\n\tShowStatus(&quot;   CANNOT DECRYPT!&quot;)\nEnd If\n</code></pre><pre><code class=\"lang-cs\" name=\"RightsManagedContentViewer#RmContViewUseLicense\">ShowStatus(&quot;   Binding UseLicense with the SecureEnvironment&quot; +\n         &quot;<br>       to obtain the CryptoProvider.&quot;);\nCryptoProvider cryptoProvider = useLicense.Bind(_secureEnv);\n\nShowStatus(&quot;   Obtaining BoundGrants.&quot;);\nReadOnlyCollection&lt;ContentGrant&gt; grants =\n    cryptoProvider.BoundGrants;\n\nrightsBlockTitle.Text = &quot;Rights - &quot; + Filename(useLicenseFile);\nrightsBlock.Text = &quot;GRANTS LIST<br>-----------------<br>&quot;;\nforeach (ContentGrant grant in grants)\n{\n    rightsBlock.Text += &quot;USER:  &quot; + grant.User.Name + &quot; [&quot; +\n        grant.User.AuthenticationType + &quot;]<br>&quot;;\n    rightsBlock.Text += &quot;RIGHT: &quot; + grant.Right.ToString() + &quot;<br>&quot;;\n    rightsBlock.Text += &quot;    From:  &quot; + grant.ValidFrom + &quot;<br>&quot;;\n    rightsBlock.Text += &quot;    Until: &quot; + grant.ValidUntil + &quot;<br>&quot;;\n}\n\nif (cryptoProvider.CanDecrypt == true)\n    ShowStatus(&quot;   Decryption granted.&quot;);\nelse\n    ShowStatus(&quot;   CANNOT DECRYPT!&quot;);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_RightsManagement_CryptoProvider_CanDecrypt\">\r\n    \r\n            <a id=\"System_Security_RightsManagement_CryptoProvider_CanDecrypt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanDecrypt</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the user has rights to decrypt.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CanDecrypt { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><strong>true</strong> if the <a class=\"xref\" href=\"system.security.rightsmanagement.uselicense\" data-linktype=\"relative-path\">UseLicense</a> grants the user rights to decrypt; otherwise, <strong>false</strong>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>CanDecrypt returns <strong>true</strong> if the <a class=\"xref\" href=\"system.security.rightsmanagement.uselicense\" data-linktype=\"relative-path\">UseLicense</a> bound to this <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider\" data-linktype=\"relative-path\">CryptoProvider</a> grants the user read access rights such as View, Edit, Print, or Owner.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the CanDecrypt property to determine if decryption is allowed.  </p>\n<pre><code class=\"lang-vb\" name=\"RightsManagedContentViewer#RmContViewUseLicense\">ShowStatus(&quot;   Binding UseLicense with the SecureEnvironment&quot; &amp; vbLf &amp; &quot;       to obtain the CryptoProvider.&quot;)\nDim cryptoProvider As CryptoProvider = useLicense.Bind(_secureEnv)\n\nShowStatus(&quot;   Obtaining BoundGrants.&quot;)\nDim grants As ReadOnlyCollection(Of ContentGrant) = cryptoProvider.BoundGrants\n\nrightsBlockTitle.Text = &quot;Rights - &quot; &amp; Filename(useLicenseFile)\nrightsBlock.Text = &quot;GRANTS LIST&quot; &amp; vbLf &amp; &quot;-----------------&quot; &amp; vbLf\nFor Each grant As ContentGrant In grants\n\trightsBlock.Text &amp;= &quot;USER:  &quot; &amp; grant.User.Name &amp; &quot; [&quot; &amp; grant.User.AuthenticationType &amp; &quot;]&quot; &amp; vbLf\n\trightsBlock.Text &amp;= &quot;RIGHT: &quot; &amp; grant.Right.ToString() &amp; vbLf\n\trightsBlock.Text &amp;= &quot;    From:  &quot; &amp; grant.ValidFrom &amp; vbLf\n\trightsBlock.Text &amp;= &quot;    Until: &quot; &amp; grant.ValidUntil &amp; vbLf\nNext grant\n\nIf cryptoProvider.CanDecrypt = True Then\n\tShowStatus(&quot;   Decryption granted.&quot;)\nElse\n\tShowStatus(&quot;   CANNOT DECRYPT!&quot;)\nEnd If\n</code></pre><pre><code class=\"lang-cs\" name=\"RightsManagedContentViewer#RmContViewUseLicense\">ShowStatus(&quot;   Binding UseLicense with the SecureEnvironment&quot; +\n         &quot;<br>       to obtain the CryptoProvider.&quot;);\nCryptoProvider cryptoProvider = useLicense.Bind(_secureEnv);\n\nShowStatus(&quot;   Obtaining BoundGrants.&quot;);\nReadOnlyCollection&lt;ContentGrant&gt; grants =\n    cryptoProvider.BoundGrants;\n\nrightsBlockTitle.Text = &quot;Rights - &quot; + Filename(useLicenseFile);\nrightsBlock.Text = &quot;GRANTS LIST<br>-----------------<br>&quot;;\nforeach (ContentGrant grant in grants)\n{\n    rightsBlock.Text += &quot;USER:  &quot; + grant.User.Name + &quot; [&quot; +\n        grant.User.AuthenticationType + &quot;]<br>&quot;;\n    rightsBlock.Text += &quot;RIGHT: &quot; + grant.Right.ToString() + &quot;<br>&quot;;\n    rightsBlock.Text += &quot;    From:  &quot; + grant.ValidFrom + &quot;<br>&quot;;\n    rightsBlock.Text += &quot;    Until: &quot; + grant.ValidUntil + &quot;<br>&quot;;\n}\n\nif (cryptoProvider.CanDecrypt == true)\n    ShowStatus(&quot;   Decryption granted.&quot;);\nelse\n    ShowStatus(&quot;   CANNOT DECRYPT!&quot;);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_RightsManagement_CryptoProvider_CanEncrypt\">\r\n    \r\n            <a id=\"System_Security_RightsManagement_CryptoProvider_CanEncrypt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanEncrypt</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the user has rights to encrypt.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CanEncrypt { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><strong>true</strong> if the <a class=\"xref\" href=\"system.security.rightsmanagement.uselicense\" data-linktype=\"relative-path\">UseLicense</a> grants the user rights to encrypt; otherwise, <strong>false</strong>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider#System_Security_RightsManagement_CryptoProvider_CanDecrypt_\" data-linktype=\"relative-path\">CanDecrypt</a> returns <strong>true</strong> if the <a class=\"xref\" href=\"system.security.rightsmanagement.uselicense\" data-linktype=\"relative-path\">UseLicense</a> bound to this <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider\" data-linktype=\"relative-path\">CryptoProvider</a> grants the user write access rights such as Edit or Owner.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_RightsManagement_CryptoProvider_CanMergeBlocks\">\r\n    \r\n            <a id=\"System_Security_RightsManagement_CryptoProvider_CanMergeBlocks_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanMergeBlocks</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether <span class=\"xref\">stem.Security.RightsManagement.CryptoProvider.Encrypt*</span> and <span class=\"xref\">stem.Security.RightsManagement.CryptoProvider.Decrypt*</span> can accept buffers that are different block sizes in length.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CanMergeBlocks { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><strong>true</strong> if the buffer passed to <span class=\"xref\">stem.Security.RightsManagement.CryptoProvider.Encrypt*</span> can be a different length from the buffer passed to <span class=\"xref\">stem.Security.RightsManagement.CryptoProvider.Decrypt*</span>; otherwise, <strong>false</strong> if the buffers passed to <span class=\"xref\">stem.Security.RightsManagement.CryptoProvider.Encrypt*</span> and <span class=\"xref\">stem.Security.RightsManagement.CryptoProvider.Decrypt*</span> must be the exact same length.  For <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-aes-md.md&quot; -->Advanced Encryption Standard (AES)<!--END INCLUDE --> the default is <strong>true</strong>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>clearText</code> and <code>cipherText</code> buffers passed to <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider#System_Security_RightsManagement_CryptoProvider_Encrypt_\" data-linktype=\"relative-path\">Encrypt</a> and <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider#System_Security_RightsManagement_CryptoProvider_Decrypt_\" data-linktype=\"relative-path\">Decrypt</a> must be n*<a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider#System_Security_RightsManagement_CryptoProvider_BlockSize_\" data-linktype=\"relative-path\">BlockSize</a> bytes in length, where &#39;n&#39; is an integer greater than or equal to 1.  </p>\n<p> If CanMergeBlocks is <strong>false</strong>, buffers passed to <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider#System_Security_RightsManagement_CryptoProvider_Encrypt_\" data-linktype=\"relative-path\">Encrypt</a> must be the same length as the buffers passed to <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider#System_Security_RightsManagement_CryptoProvider_Decrypt_\" data-linktype=\"relative-path\">Decrypt</a>.  </p>\n<p> If CanMergeBlocks is <strong>true</strong>, buffers passed to <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider#System_Security_RightsManagement_CryptoProvider_Encrypt_\" data-linktype=\"relative-path\">Encrypt</a> can be a different length from the buffers passed to <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider#System_Security_RightsManagement_CryptoProvider_Decrypt_\" data-linktype=\"relative-path\">Decrypt</a> (all buffer sizes must still always be a multiple of <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider#System_Security_RightsManagement_CryptoProvider_BlockSize_\" data-linktype=\"relative-path\">BlockSize</a> bytes in length).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_RightsManagement_CryptoProvider_Decrypt_System_Byte___\">\r\n    \r\n            <a id=\"System_Security_RightsManagement_CryptoProvider_Decrypt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Decrypt(Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Decrypts cipher text to clear text.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] Decrypt (byte[] cryptoText);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>cryptoText</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The cipher text to decrypt.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>The decrypted clear text of <code>cryptoText</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>cipherText</code> is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.rightsmanagement.rightsmanagementexception\" data-linktype=\"relative-path\">RightsManagementException</a></div>\r\n                  </div>\r\n                  <p>Decryption right not granted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the Decrypt method to convert encrypted data to unencrypted data.  </p>\n<pre><code class=\"lang-vb\" name=\"RightsManagedContentViewer#RmContViewDecrypt\">Dim imageBuffer() As Byte\n               Using cipherTextStream As Stream = File.OpenRead(encryptedFile)\n                   Dim expression As Int32\n                   Dim contentLengthByteBuffer(Len(expression) - 1) As Byte\n                   &#39; Read the length of the source content file\n                   &#39; from the first four bytes of the encrypted file.\n                   ReliableRead(cipherTextStream, contentLengthByteBuffer, 0, Len(expression))\n\n                   &#39; Allocate the clearText buffer.\n                   Dim contentLength As Integer = BitConverter.ToInt32(contentLengthByteBuffer, 0)\n                   imageBuffer = New Byte(contentLength - 1) {}\n\n                   &#39; Allocate the cipherText block.\n                   Dim cipherTextBlock(cryptoProvider.BlockSize - 1) As Byte\n\n                   &#39; decrypt cipherText to clearText block by block.\n                   Dim imageBufferIndex As Integer = 0\n                   Do\n                       Dim readCount As Integer = ReliableRead(cipherTextStream, cipherTextBlock, 0, cryptoProvider.BlockSize)\n                       &#39; readCount of zero is end of data.\n                       If readCount = 0 Then\n                           Exit Do &#39; for\n                       End If\n\n                       &#39; Decrypt cipherText to clearText.\n                       Dim clearTextBlock() As Byte = cryptoProvider.Decrypt(cipherTextBlock)\n\n                       &#39; Copy the clearTextBlock to the imageBuffer.\n                       Dim copySize As Integer = Math.Min(clearTextBlock.Length, contentLength - imageBufferIndex)\n                       Array.Copy(clearTextBlock, 0, imageBuffer, imageBufferIndex, copySize)\n                       imageBufferIndex += copySize\n                   Loop\n               End Using &#39; end:using (Stream cipherTextStream = (close/dispose)\n</code></pre><pre><code class=\"lang-cs\" name=\"RightsManagedContentViewer#RmContViewDecrypt\">byte[] imageBuffer;\nusing (Stream cipherTextStream = File.OpenRead(encryptedFile))\n{\n    byte[] contentLengthByteBuffer = new byte[sizeof(Int32)];\n    // Read the length of the source content file\n    // from the first four bytes of the encrypted file.\n    ReliableRead(cipherTextStream, contentLengthByteBuffer,\n                 0, sizeof(Int32));\n\n    // Allocate the clearText buffer.\n    int contentLength =\n        BitConverter.ToInt32(contentLengthByteBuffer, 0);\n    imageBuffer = new byte[contentLength];\n\n    // Allocate the cipherText block.\n    byte[] cipherTextBlock =\n        new byte[cryptoProvider.BlockSize];\n\n    // decrypt cipherText to clearText block by block.\n    int imageBufferIndex = 0;\n    for ( ; ; )\n    {   // Read cipherText block.\n        int readCount = ReliableRead(\n                            cipherTextStream,\n                            cipherTextBlock, 0,\n                            cryptoProvider.BlockSize);\n        // readCount of zero is end of data.\n        if (readCount == 0)\n            break; // for\n\n        // Decrypt cipherText to clearText.\n        byte[] clearTextBlock =\n            cryptoProvider.Decrypt(cipherTextBlock);\n\n        // Copy the clearTextBlock to the imageBuffer.\n        int copySize = Math.Min(clearTextBlock.Length,\n                            contentLength-imageBufferIndex);\n        Array.Copy(clearTextBlock, 0,\n            imageBuffer, imageBufferIndex, copySize);\n        imageBufferIndex += copySize;\n    }\n}// end:using (Stream cipherTextStream = (close/dispose)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_RightsManagement_CryptoProvider_Dispose\">\r\n    \r\n            <a id=\"System_Security_RightsManagement_CryptoProvider_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by the <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider\" data-linktype=\"relative-path\">CryptoProvider</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Dispose performs <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider#System_Security_RightsManagement_CryptoProvider_Dispose_\" data-linktype=\"relative-path\">Dispose</a>(<strong>true</strong>).  </p>\n<p> Call Dispose when you are finished using the <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider\" data-linktype=\"relative-path\">CryptoProvider</a>. The Dispose method leaves the <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider\" data-linktype=\"relative-path\">CryptoProvider</a> in an unusable state. After calling Dispose, you must release all references to the <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider\" data-linktype=\"relative-path\">CryptoProvider</a> so the garbage collector can reclaim the memory that the <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider\" data-linktype=\"relative-path\">CryptoProvider</a> was occupying. For more information, see <a href=\"../Topic/Cleaning%20Up%20Unmanaged%20Resources.md\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a> and <a href=\"../Topic/Implementing%20a%20Dispose%20Method.md\" data-linktype=\"relative-path\">Implementing a Dispose Method</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Always call Dispose before you release your last reference to the <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider\" data-linktype=\"relative-path\">CryptoProvider</a>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider\" data-linktype=\"relative-path\">CryptoProvider</a> object&#39;s <code>Finalize</code> method.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_RightsManagement_CryptoProvider_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Security_RightsManagement_CryptoProvider_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider\" data-linktype=\"relative-path\">CryptoProvider</a> and optionally releases the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by the public <code>Dispose()</code>method and the <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method. <code>Dispose()</code> invokes the protected <code>Dispose(Boolean)</code> method with the <code>disposing</code> parameter set to <code>true</code>. <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes <code>Dispose</code> with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is true, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider\" data-linktype=\"relative-path\">CryptoProvider</a> references. This method invokes the <code>Dispose()</code> method of each referenced object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_RightsManagement_CryptoProvider_Encrypt_System_Byte___\">\r\n    \r\n            <a id=\"System_Security_RightsManagement_CryptoProvider_Encrypt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Encrypt(Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Encrypts clear text to cipher text.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] Encrypt (byte[] clearText);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>clearText</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The clear text content to encrypt.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>Encrypted cipher text of the given <code>clearText</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>clearText</code> is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.rightsmanagement.rightsmanagementexception\" data-linktype=\"relative-path\">RightsManagementException</a></div>\r\n                  </div>\r\n                  <p>Encryption is not permitted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The byte length of the <code>clearText</code> buffer should be a multiple of the cipher <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider#System_Security_RightsManagement_CryptoProvider_BlockSize_\" data-linktype=\"relative-path\">BlockSize</a> property.  </p>\n<p> The digital rights management system uses <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-aes-md.md&quot; -->Advanced Encryption Standard (AES)<!--END INCLUDE --> block cipher.  With <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-aes-md.md&quot; -->AES<!--END INCLUDE -->, blocks are encrypted independently such that two blocks of identical clear text produce identical cipher text results.  To minimize potential decryption threats from independent block encryption, applications should employ methods to modify content, such as compression, to avoid encrypting identical clear text blocks.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the Encrypt method to convert clear-text data to encrypted-text data.  </p>\n<pre><code class=\"lang-vb\" name=\"RightsManagedContentPublish#RmContPubEncrypt\">WriteStatus(&quot;   Binding the author&#39;s UseLicense and&quot;)\nWriteStatus(&quot;       obtaining the CryptoProvider.&quot;)\nUsing cryptoProvider As CryptoProvider = authorsUseLicense.Bind(_secureEnv)\n\tWriteStatus(&quot;   Writing encrypted content.&quot;)\n\tUsing clearTextStream As Stream = File.OpenRead(contentFile)\n\t\tUsing cryptoTextStream As Stream = File.OpenWrite(encryptedFile)\n\t\t\t&#39; Write the length of the source content file\n                        &#39; as the first four bytes of the encrypted file.\n                        Dim expression As Int32\n                        cryptoTextStream.Write(BitConverter.GetBytes(clearTextStream.Length), 0, Len(expression))\n\n\t\t\t&#39; Allocate clearText buffer.\n\t\t\tDim clearTextBlock(cryptoProvider.BlockSize - 1) As Byte\n\n\t\t\t&#39; Encrypt clearText to cryptoText block by block.\n\t\t\tDo\n\t\t\t\tDim readCount As Integer = ReliableRead(clearTextStream, clearTextBlock, 0, cryptoProvider.BlockSize)\n\t\t\t\t&#39; readCount of zero is end of data.\n\t\t\t\tIf readCount = 0 Then &#39; for\n\t\t\t\t\tExit Do\n\t\t\t\tEnd If\n\n\t\t\t\t&#39; Encrypt clearText to cryptoText.\n\t\t\t\tDim cryptoTextBlock() As Byte = cryptoProvider.Encrypt(clearTextBlock)\n\n\t\t\t\t&#39; Write cryptoText block.\n\t\t\t\tcryptoTextStream.Write(cryptoTextBlock, 0, cryptoTextBlock.Length)\n\t\t\tLoop\n\t\t\tWriteStatus(&quot;   Closing &#39;&quot; &amp; encryptedFilename &amp; &quot;&#39;.&quot;)\n\t\tEnd Using &#39; end:using (Stream cryptoTextStream =\n\tEnd Using &#39; end:using (Stream clearTextStream =\nEnd Using &#39; end:using (CryptoProvider cryptoProvider =\nWriteStatus(&quot;   Done - Content encryption complete.&quot;)\n</code></pre><pre><code class=\"lang-cs\" name=\"RightsManagedContentPublish#RmContPubEncrypt\">WriteStatus(&quot;   Binding the author&#39;s UseLicense and&quot;);\nWriteStatus(&quot;       obtaining the CryptoProvider.&quot;);\nusing (CryptoProvider cryptoProvider =\n            authorsUseLicense.Bind(_secureEnv))\n{\n    WriteStatus(&quot;   Writing encrypted content.&quot;);\n    using (Stream clearTextStream =\n                File.OpenRead(contentFile) )\n    {\n        using (Stream cryptoTextStream =\n                    File.OpenWrite(encryptedFile))\n        {\n            // Write the length of the source content file\n            // as the first four bytes of the encrypted file.\n            cryptoTextStream.Write(\n                BitConverter.GetBytes(clearTextStream.Length),\n                0, sizeof(Int32));\n\n            // Allocate clearText buffer.\n            byte[] clearTextBlock =\n                new byte[cryptoProvider.BlockSize];\n\n            // Encrypt clearText to cryptoText block by block.\n            for(;;)\n            {   // Read clearText block.\n                int readCount = ReliableRead(\n                                    clearTextStream,\n                                    clearTextBlock, 0 ,\n                                    cryptoProvider.BlockSize);\n                // readCount of zero is end of data.\n                if (readCount == 0)  break; // for\n\n                // Encrypt clearText to cryptoText.\n                byte[] cryptoTextBlock =\n                    cryptoProvider.Encrypt(clearTextBlock);\n\n                // Write cryptoText block.\n                cryptoTextStream.Write(cryptoTextBlock, 0,\n                                       cryptoTextBlock.Length);\n            }\n            WriteStatus(&quot;   Closing &#39;&quot; + encryptedFilename + &quot;&#39;.&quot;);\n        }// end:using (Stream cryptoTextStream =\n    }// end:using (Stream clearTextStream =\n}// end:using (CryptoProvider cryptoProvider =\nWriteStatus(&quot;   Done - Content encryption complete.&quot;);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_RightsManagement_CryptoProvider_Finalize\">\r\n    \r\n            <a id=\"System_Security_RightsManagement_CryptoProvider_Finalize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Finalize()</div>        \r\n          </div>\r\n    \r\n            <p>Frees resources and performs internal cleanup before the instance is reclaimed by garbage collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">~CryptoProvider ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Finalize performs <a class=\"xref\" href=\"system.security.rightsmanagement.cryptoprovider#System_Security_RightsManagement_CryptoProvider_Dispose_\" data-linktype=\"relative-path\">Dispose</a>(<strong>false</strong>).  </p>\n<p> This method overrides  <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a>. Application code should not call this method; an object&#39;s <code>Finalize</code> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <a class=\"xref\" href=\"system.gc#System_GC_SuppressFinalize_\" data-linktype=\"relative-path\">SuppressFinalize</a> method.  </p>\n<p> For more information, see <a href=\"http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70\" data-linktype=\"external\">Finalize Methods and Destructors</a>, <a href=\"../Topic/Cleaning%20Up%20Unmanaged%20Resources.md\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a>, and <a href=\"http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3\" data-linktype=\"external\">Overriding the Finalize Method</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.RightsManagement.CryptoProvider.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.RightsManagement.CryptoProvider.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.RightsManagement.CryptoProvider\">\r\n<meta name=\"APIName\" content=\"System.Security.RightsManagement.CryptoProvider.BlockSize\">\r\n<meta name=\"APIName\" content=\"System.Security.RightsManagement.CryptoProvider.BoundGrants\">\r\n<meta name=\"APIName\" content=\"System.Security.RightsManagement.CryptoProvider.CanDecrypt\">\r\n<meta name=\"APIName\" content=\"System.Security.RightsManagement.CryptoProvider.CanEncrypt\">\r\n<meta name=\"APIName\" content=\"System.Security.RightsManagement.CryptoProvider.CanMergeBlocks\">\r\n<meta name=\"APIName\" content=\"System.Security.RightsManagement.CryptoProvider.Decrypt\">\r\n<meta name=\"APIName\" content=\"System.Security.RightsManagement.CryptoProvider.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Security.RightsManagement.CryptoProvider.Encrypt\">\r\n<meta name=\"APIName\" content=\"System.Security.RightsManagement.CryptoProvider.Finalize\">\r\n<meta name=\"APILocation\" content=\"WindowsBase.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"9468625f-71b7-6b7a-9fb1-c13da4e0a96b\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Security.RightsManagement\\CryptoProvider.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides digital rights management services for encrypting and decrypting protected content.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.RightsManagement/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.RightsManagement.CryptoProvider\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.RightsManagement.CryptoProvider.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.RightsManagement.CryptoProvider.yml","open_to_public_contributors":true,"api_name":["System.Security.RightsManagement.CryptoProvider","System.Security.RightsManagement.CryptoProvider.BlockSize","System.Security.RightsManagement.CryptoProvider.BoundGrants","System.Security.RightsManagement.CryptoProvider.CanDecrypt","System.Security.RightsManagement.CryptoProvider.CanEncrypt","System.Security.RightsManagement.CryptoProvider.CanMergeBlocks","System.Security.RightsManagement.CryptoProvider.Decrypt","System.Security.RightsManagement.CryptoProvider.Dispose","System.Security.RightsManagement.CryptoProvider.Encrypt","System.Security.RightsManagement.CryptoProvider.Finalize"],"api_location":["WindowsBase.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.RightsManagement.CryptoProvider","System::Security::RightsManagement::CryptoProvider","System.Security.RightsManagement.CryptoProvider.BlockSize","System::Security::RightsManagement::CryptoProvider::BlockSize","System.Security.RightsManagement.CryptoProvider.BoundGrants","System::Security::RightsManagement::CryptoProvider::BoundGrants","System.Security.RightsManagement.CryptoProvider.CanDecrypt","System::Security::RightsManagement::CryptoProvider::CanDecrypt","System.Security.RightsManagement.CryptoProvider.CanEncrypt","System::Security::RightsManagement::CryptoProvider::CanEncrypt","System.Security.RightsManagement.CryptoProvider.CanMergeBlocks","System::Security::RightsManagement::CryptoProvider::CanMergeBlocks","System.Security.RightsManagement.CryptoProvider.Decrypt","System::Security::RightsManagement::CryptoProvider::Decrypt","System.Security.RightsManagement.CryptoProvider.Dispose","System::Security::RightsManagement::CryptoProvider::Dispose","System.Security.RightsManagement.CryptoProvider.Encrypt","System::Security::RightsManagement::CryptoProvider::Encrypt","System.Security.RightsManagement.CryptoProvider.Finalize","System::Security::RightsManagement::CryptoProvider::Finalize"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"9468625f-71b7-6b7a-9fb1-c13da4e0a96b","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Security.RightsManagement\\CryptoProvider.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.RightsManagement/CryptoProvider.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CryptoProvider class | Microsoft Docs","_op_ogTitle":"CryptoProvider class","description":"Provides digital rights management services for encrypting and decrypting protected content.\n","toc_asset_id":"_splitted/System.Security.RightsManagement/toc.json","toc_rel":"_splitted/System.Security.RightsManagement/toc.json","source_url":"","ms.assetid":"System.Security.RightsManagement.CryptoProvider","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.rightsmanagement.cryptoprovider","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.rightsmanagement.cryptoprovider","fileRelativePath":"System.Security.RightsManagement.CryptoProvider.html"},"themesRelativePathToOutputRoot":"_themes/"}