{"content":"    \r\n    <h1 id=\"System_Threading_SemaphoreSlim\">\r\n      <span class=\"lang-csharp\">SemaphoreSlim</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a lightweight alternative to <a class=\"xref\" href=\"system.threading.semaphore\" data-linktype=\"relative-path\">Semaphore</a> that limits the number of threads that can access a resource or pool of resources concurrently.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Diagnostics.DebuggerDisplay(&quot;Current Count = {m_currentCount}&quot;)]\n[System.Runtime.InteropServices.ComVisible(false)]\npublic class SemaphoreSlim : IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SemaphoreSlim</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Semaphores are of two types: local semaphores and named system semaphores. The former is local to an app. The latter is visible throughout the operating system and is suitable for inter-process synchronization. The SemaphoreSlim is a lightweight alternative to the <a class=\"xref\" href=\"system.threading.semaphore\" data-linktype=\"relative-path\">Semaphore</a> class that doesn&#39;t use Windows kernel semaphores. Unlike the <a class=\"xref\" href=\"system.threading.semaphore\" data-linktype=\"relative-path\">Semaphore</a> class, the SemaphoreSlim class doesnâ€™t support named system semaphores. You can use it as a local semaphore only. The SemaphoreSlim class is the recommended semaphore for synchronization within a single app.  </p>\n<p> A lightweight semaphore controls access to a pool of resources that is local to your application. When you instantiate a semaphore, you can specify the maximum number of threads that can enter the semaphore concurrently. You also specify the initial number of threads that can enter the semaphore concurrently. This defines the semaphore&#39;s count.  </p>\n<p> The count is decremented each time a thread enters the semaphore, and incremented each time a thread releases the semaphore. To enter the semaphore, a thread calls one of the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_Wait_\" data-linktype=\"relative-path\">Wait</a> or <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_WaitAsync_\" data-linktype=\"relative-path\">WaitAsync</a> overloads. To release the semaphore, it calls one of the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_Release_\" data-linktype=\"relative-path\">Release</a> overloads. When the count reaches zero, subsequent calls to one of the <code>Wait</code> methods block until other threads release the semaphore. If multiple threads are blocked, there is no guaranteed order, such as FIFO or LIFO, that controls when threads enter the semaphore.  </p>\n<p> The basic structure for code that uses a semaphore to protect resources is:  </p>\n<pre><code>\n&#39; Enter semaphore by calling one of the Wait or WaitAsync methods.  \nSemaphoreSlim.Wait()  \n&#39;   \n&#39; Execute code protected by the semaphore.   \n&#39;  \nSemaphoreSlim.Release()  \n</code></pre><p> When all threads have released the semaphore, the count is at the maximum value specified when the semaphore was created. The semaphore&#39;s count is available from the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_CurrentCount_\" data-linktype=\"relative-path\">CurrentCount</a> property.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The SemaphoreSlim class doesnâ€™t enforce thread or task identity on calls to the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_Wait_\" data-linktype=\"relative-path\">Wait</a>, <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_WaitAsync_\" data-linktype=\"relative-path\">WaitAsync</a>, and <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_Release_\" data-linktype=\"relative-path\">Release</a> methods. In addition, if the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim__ctor_System_Int32_\" data-linktype=\"relative-path\">SemaphoreSlim(Int32)</a> constructor is used to instantiate the SemaphoreSlim object, the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_CurrentCount_\" data-linktype=\"relative-path\">CurrentCount</a> property can increase beyond the value set by the constructor. It is the programmer&#39;s responsibility to ensure that calls to <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_Wait_\" data-linktype=\"relative-path\">Wait</a> or <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_WaitAsync_\" data-linktype=\"relative-path\">WaitAsync</a> methods are appropriately paired with calls to <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_Release_\" data-linktype=\"relative-path\">Release</a> methods.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_SemaphoreSlim__ctor_System_Int32_\" data-linktype=\"self-bookmark\">SemaphoreSlim(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a> class, specifying the initial number of requests that can be granted concurrently.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_SemaphoreSlim__ctor_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">SemaphoreSlim(Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a> class, specifying the initial and maximum number of requests that can be granted concurrently.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_SemaphoreSlim_AvailableWaitHandle\" data-linktype=\"self-bookmark\">AvailableWaitHandle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.threading.waithandle\" data-linktype=\"relative-path\">WaitHandle</a> that can be used to wait on the semaphore.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_SemaphoreSlim_CurrentCount\" data-linktype=\"self-bookmark\">CurrentCount</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of remaining threads that can enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_SemaphoreSlim_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by the current instance of the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_SemaphoreSlim_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, and optionally releases the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_SemaphoreSlim_Release\" data-linktype=\"self-bookmark\">Release()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a> object once.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_SemaphoreSlim_Release_System_Int32_\" data-linktype=\"self-bookmark\">Release(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a> object a specified number of times.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_SemaphoreSlim_Wait\" data-linktype=\"self-bookmark\">Wait()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Blocks the current thread until it can enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_SemaphoreSlim_Wait_System_Int32_\" data-linktype=\"self-bookmark\">Wait(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Blocks the current thread until it can enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, using a 32-bit signed integer that specifies the timeout.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_SemaphoreSlim_Wait_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">Wait(CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Blocks the current thread until it can enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, while observing a <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_SemaphoreSlim_Wait_System_TimeSpan_\" data-linktype=\"self-bookmark\">Wait(TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Blocks the current thread until it can enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, using a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> to specify the timeout.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_SemaphoreSlim_Wait_System_Int32_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">Wait(Int32,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Blocks the current thread until it can enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, using a 32-bit signed integer that specifies the timeout, while observing a <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_SemaphoreSlim_Wait_System_TimeSpan_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">Wait(TimeSpan,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Blocks the current thread until it can enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, using a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> that specifies the timeout, while observing a <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_SemaphoreSlim_WaitAsync\" data-linktype=\"self-bookmark\">WaitAsync()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously waits to enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_SemaphoreSlim_WaitAsync_System_Int32_\" data-linktype=\"self-bookmark\">WaitAsync(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously waits to enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, using a 32-bit signed integer to measure the time interval.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_SemaphoreSlim_WaitAsync_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">WaitAsync(CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously waits to enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, while observing a <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_SemaphoreSlim_WaitAsync_System_TimeSpan_\" data-linktype=\"self-bookmark\">WaitAsync(TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously waits to enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, using a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> to measure the time interval.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_SemaphoreSlim_WaitAsync_System_Int32_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">WaitAsync(Int32,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously waits to enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, using a 32-bit signed integer to measure the time interval, while observing a <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_SemaphoreSlim_WaitAsync_System_TimeSpan_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">WaitAsync(TimeSpan,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously waits to enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, using a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> to measure the time interval, while observing a <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_SemaphoreSlim__ctor_System_Int32_\">\r\n    \r\n            <a id=\"System_Threading_SemaphoreSlim__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SemaphoreSlim(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a> class, specifying the initial number of requests that can be granted concurrently.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SemaphoreSlim (int initialCount);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>initialCount</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The initial number of requests for the semaphore that can be granted concurrently.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>initialCount</code> is less than 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>initialCount</code> parameter defines the number of concurrent requests to enter the semaphore that can be granted. However, it doesnâ€™t define the maximum number of requests that can be granted concurrently. A   <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a> object instantiated by calling this constructor doesnâ€™t throw a <a class=\"xref\" href=\"system.threading.semaphorefullexception\" data-linktype=\"relative-path\">SemaphoreFullException</a> exception if a call to the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_Release_\" data-linktype=\"relative-path\">Release</a> method increases the value of the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_CurrentCount_\" data-linktype=\"relative-path\">CurrentCount</a> property beyond <code>initialCount</code>. This occurs if there are more calls to <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_Release_\" data-linktype=\"relative-path\">Release</a> methods than there are to <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_Wait_\" data-linktype=\"relative-path\">Wait</a> or <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_WaitAsync_\" data-linktype=\"relative-path\">WaitAsync</a> methods. To set the maximum number of concurrent requests to enter the semaphore that can be granted, call the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim__ctor_System_Int32_System_Int32_\" data-linktype=\"relative-path\">SemaphoreSlim(Int32,Int32)</a> constructor.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_SemaphoreSlim__ctor_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Threading_SemaphoreSlim__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SemaphoreSlim(Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a> class, specifying the initial and maximum number of requests that can be granted concurrently.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SemaphoreSlim (int initialCount, int maxCount);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>initialCount</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The initial number of requests for the semaphore that can be granted concurrently.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>maxCount</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum number of requests for the semaphore that can be granted concurrently.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>initialCount</code> is less than 0, or <code>initialCount</code> is greater than <code>maxCount</code>, or <code>maxCount</code> is equal to or less than 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_SemaphoreSlim_AvailableWaitHandle\">\r\n    \r\n            <a id=\"System_Threading_SemaphoreSlim_AvailableWaitHandle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AvailableWaitHandle</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.threading.waithandle\" data-linktype=\"relative-path\">WaitHandle</a> that can be used to wait on the semaphore.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.WaitHandle AvailableWaitHandle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.waithandle\" data-linktype=\"relative-path\">WaitHandle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.threading.waithandle\" data-linktype=\"relative-path\">WaitHandle</a> that can be used to wait on the semaphore.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a> has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this property only when you must wait on a SemaphoreSlim together with other kernel-based synchronization objects with the same wait handle. A successful wait on the AvailableWaitHandle does not imply a successful wait on the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a> itself, nor does it decrement the semaphore&#39;s count. After the available wait handle is signaled, you should wait on the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a> specifically.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_SemaphoreSlim_CurrentCount\">\r\n    \r\n            <a id=\"System_Threading_SemaphoreSlim_CurrentCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CurrentCount</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of remaining threads that can enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int CurrentCount { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of remaining threads that can enter the semaphore.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The initial value of the CurrentCount property is set by the call to the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim__ctor_\" data-linktype=\"relative-path\">SemaphoreSlim</a> class constructor. It is decremented by each call to the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_Wait_\" data-linktype=\"relative-path\">Wait</a> or <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_WaitAsync_\" data-linktype=\"relative-path\">WaitAsync</a> method, and incremented by each call to the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_Release_\" data-linktype=\"relative-path\">Release</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_SemaphoreSlim_Dispose\">\r\n    \r\n            <a id=\"System_Threading_SemaphoreSlim_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by the current instance of the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call <code>Dispose</code> when you are finished using the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>. The <code>Dispose</code> method leaves the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a> in an unusable state. After calling <code>Dispose</code>, you must release all references to the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a> so the garbage collector can reclaim the memory that the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a> was occupying.  </p>\n<p> For more information, see <a href=\"../Topic/Cleaning%20Up%20Unmanaged%20Resources.md\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a> and <a href=\"../Topic/Implementing%20a%20Dispose%20Method.md\" data-linktype=\"relative-path\">Implementing a Dispose Method</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Always call <code>Dispose</code> before you release your last reference to the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a> object&#39;s <code>Finalize</code> method.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_SemaphoreSlim_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Threading_SemaphoreSlim_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, and optionally releases the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Unlike most of the members of <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, Dispose is not thread-safe and may not be used concurrently with other members of this instance.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_SemaphoreSlim_Release\">\r\n    \r\n            <a id=\"System_Threading_SemaphoreSlim_Release_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Release()</div>        \r\n          </div>\r\n    \r\n            <p>Releases the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a> object once.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Release ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The previous count of the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The current instance has already been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.semaphorefullexception\" data-linktype=\"relative-path\">SemaphoreFullException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a> has already reached its maximum size.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A call to the Release method increments the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_CurrentCount_\" data-linktype=\"relative-path\">CurrentCount</a> property by one. If the value of the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_CurrentCount_\" data-linktype=\"relative-path\">CurrentCount</a> property is zero before this method is called, the method also allows one thread or task blocked by a call to the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_Wait_\" data-linktype=\"relative-path\">Wait</a> or <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_WaitAsync_\" data-linktype=\"relative-path\">WaitAsync</a> method to enter the semaphore.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_SemaphoreSlim_Release_System_Int32_\">\r\n    \r\n            <a id=\"System_Threading_SemaphoreSlim_Release_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Release(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a> object a specified number of times.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Release (int releaseCount);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>releaseCount</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of times to exit the semaphore.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The previous count of the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The current instance has already been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>releaseCount</code> is less than 1.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.semaphorefullexception\" data-linktype=\"relative-path\">SemaphoreFullException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a> has already reached its maximum size.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A call to the Release method increments the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_CurrentCount_\" data-linktype=\"relative-path\">CurrentCount</a> property by <code>releaseCount</code>. If the value of the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_CurrentCount_\" data-linktype=\"relative-path\">CurrentCount</a> property is zero before this method is called, the method also allows <code>releaseCount</code> threads or tasks blocked by a call to the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_Wait_\" data-linktype=\"relative-path\">Wait</a> or <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_WaitAsync_\" data-linktype=\"relative-path\">WaitAsync</a> method to enter the semaphore.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_SemaphoreSlim_Wait\">\r\n    \r\n            <a id=\"System_Threading_SemaphoreSlim_Wait_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Wait()</div>        \r\n          </div>\r\n    \r\n            <p>Blocks the current thread until it can enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Wait ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The current instance has already been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If a thread or task is able to enter the semaphore, it decrements the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_CurrentCount_\" data-linktype=\"relative-path\">CurrentCount</a> property by one.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_SemaphoreSlim_Wait_System_Int32_\">\r\n    \r\n            <a id=\"System_Threading_SemaphoreSlim_Wait_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Wait(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Blocks the current thread until it can enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, using a 32-bit signed integer that specifies the timeout.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Wait (int millisecondsTimeout);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>millisecondsTimeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of milliseconds to wait, or <a class=\"xref\" href=\"system.threading.timeout#System_Threading_Timeout_Infinite\" data-linktype=\"relative-path\">Infinite</a>(-1) to wait indefinitely.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current thread successfully entered the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>millisecondsTimeout</code> is a negative number other than -1, which represents an infinite time-out.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If a thread or task is able to enter the semaphore, it decrements the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_CurrentCount_\" data-linktype=\"relative-path\">CurrentCount</a> property by one.  </p>\n<p> If a thread or task is blocked when calling Wait, and the time-out interval specified by <code>millisecondsTimeout</code> expires, the thread or task doesnâ€™t enter the semaphore, and the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_CurrentCount_\" data-linktype=\"relative-path\">CurrentCount</a> property isnâ€™t decremented.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_SemaphoreSlim_Wait_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Threading_SemaphoreSlim_Wait_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Wait(CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Blocks the current thread until it can enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, while observing a <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Wait (System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> token to observe.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.operationcanceledexception\" data-linktype=\"relative-path\">OperationCanceledException</a></div>\r\n                  </div>\r\n                  <p><code>cancellationToken</code> was canceled.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The current instance has already been disposed.  </p>\n<p> -or-  </p>\n<p> The <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> that created<code> cancellationToken</code> has already been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If a thread or task is able to enter the semaphore, it decrements the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_CurrentCount_\" data-linktype=\"relative-path\">CurrentCount</a> property by one.  </p>\n<p> If <code>cancellationToken</code> is cancelled, the thread or task doesnâ€™t enter the semaphore, and the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_CurrentCount_\" data-linktype=\"relative-path\">CurrentCount</a> property isnâ€™t decremented. Instead, the method throws an <a class=\"xref\" href=\"system.operationcanceledexception\" data-linktype=\"relative-path\">OperationCanceledException</a> exception.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_SemaphoreSlim_Wait_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_Threading_SemaphoreSlim_Wait_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Wait(TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Blocks the current thread until it can enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, using a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> to specify the timeout.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Wait (TimeSpan timeout);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> that represents the number of milliseconds to wait, or a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> that represents -1 milliseconds to wait indefinitely.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current thread successfully entered the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>timeout</code> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <a class=\"xref\" href=\"system.int32#System_Int32_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The semaphoreSlim instance has been disposed<code>.</code></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If a thread or task is able to enter the semaphore, it decrements the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_CurrentCount_\" data-linktype=\"relative-path\">CurrentCount</a> property by one.  </p>\n<p> If a thread or task is blocked when calling Wait and the time-out interval specified by <code>timeout</code> expires, the thread or task doesnâ€™t enter the semaphore, and the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_CurrentCount_\" data-linktype=\"relative-path\">CurrentCount</a> property isnâ€™t decremented.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_SemaphoreSlim_Wait_System_Int32_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Threading_SemaphoreSlim_Wait_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Wait(Int32,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Blocks the current thread until it can enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, using a 32-bit signed integer that specifies the timeout, while observing a <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Wait (int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>millisecondsTimeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of milliseconds to wait, or <a class=\"xref\" href=\"system.threading.timeout#System_Threading_Timeout_Infinite\" data-linktype=\"relative-path\">Infinite</a>(-1) to wait indefinitely.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> to observe.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current thread successfully entered the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.operationcanceledexception\" data-linktype=\"relative-path\">OperationCanceledException</a></div>\r\n                  </div>\r\n                  <p><code>cancellationToken</code> was canceled.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>millisecondsTimeout</code> is a negative number other than -1, which represents an infinite time-out.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a> instance has been disposed, or the <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> that created <code>cancellationToken</code> has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If a thread or task is able to enter the semaphore, it decrements the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_CurrentCount_\" data-linktype=\"relative-path\">CurrentCount</a> property by one.  </p>\n<p> If <code>cancellationToken</code> is cancelled, or if a thread or task is blocked when calling Wait and the time-out interval specified by <code>millisecondsTimeout</code> expires, the thread or task doesnâ€™t enter the semaphore, and the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_CurrentCount_\" data-linktype=\"relative-path\">CurrentCount</a> property isnâ€™t decremented. If <code>cancellationToken</code> is cancelled, the method throws an   <a class=\"xref\" href=\"system.operationcanceledexception\" data-linktype=\"relative-path\">OperationCanceledException</a> exception.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_SemaphoreSlim_Wait_System_TimeSpan_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Threading_SemaphoreSlim_Wait_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Wait(TimeSpan,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Blocks the current thread until it can enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, using a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> that specifies the timeout, while observing a <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Wait (TimeSpan timeout, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> that represents the number of milliseconds to wait, or a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> that represents -1 milliseconds to wait indefinitely.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> to observe.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current thread successfully entered the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.operationcanceledexception\" data-linktype=\"relative-path\">OperationCanceledException</a></div>\r\n                  </div>\r\n                  <p><code>cancellationToken</code> was canceled.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>timeout</code> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <a class=\"xref\" href=\"system.int32#System_Int32_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The semaphoreSlim instance has been disposed<code>.</code><code>-or-</code>  </p>\n<p> The <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> that created <code>cancellationToken</code> has already been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If a thread or task is able to enter the semaphore, it decrements the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_CurrentCount_\" data-linktype=\"relative-path\">CurrentCount</a> property by one.  </p>\n<p> If <code>cancellationToken</code> is cancelled, or if a thread or task is blocked when calling Wait and the timeout interval specified by <code>timeout</code> expires, the thread or task doesnâ€™t enter the semaphore, and the <a class=\"xref\" href=\"system.threading.semaphoreslim#System_Threading_SemaphoreSlim_CurrentCount_\" data-linktype=\"relative-path\">CurrentCount</a> property isnâ€™t decremented. If <code>cancellationToken</code> is cancelled, the method throws an <a class=\"xref\" href=\"system.operationcanceledexception\" data-linktype=\"relative-path\">OperationCanceledException</a> exception.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_SemaphoreSlim_WaitAsync\">\r\n    \r\n            <a id=\"System_Threading_SemaphoreSlim_WaitAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WaitAsync()</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously waits to enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task WaitAsync ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>A task that will complete when the semaphore has been entered.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_SemaphoreSlim_WaitAsync_System_Int32_\">\r\n    \r\n            <a id=\"System_Threading_SemaphoreSlim_WaitAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WaitAsync(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously waits to enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, using a 32-bit signed integer to measure the time interval.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;bool&gt; WaitAsync (int millisecondsTimeout);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>millisecondsTimeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of milliseconds to wait, or <a class=\"xref\" href=\"system.threading.timeout#System_Threading_Timeout_Infinite\" data-linktype=\"relative-path\">Infinite</a> (-1) to wait indefinitely.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a>&gt;</div>\r\n                  </div>\r\n                  <p>A task that will complete with a result of <code>true</code> if the current thread successfully entered the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, otherwise with a result of <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The current instance has already been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>millisecondsTimeout</code> is a negative number other than -1, which represents an infinite time-out.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_SemaphoreSlim_WaitAsync_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Threading_SemaphoreSlim_WaitAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WaitAsync(CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously waits to enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, while observing a <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task WaitAsync (System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> token to observe.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>A task that will complete when the semaphore has been entered.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The current instance has already been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.operationcanceledexception\" data-linktype=\"relative-path\">OperationCanceledException</a></div>\r\n                  </div>\r\n                  <p><code>cancellationToken</code> was canceled.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_SemaphoreSlim_WaitAsync_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_Threading_SemaphoreSlim_WaitAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WaitAsync(TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously waits to enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, using a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> to measure the time interval.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;bool&gt; WaitAsync (TimeSpan timeout);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> that represents the number of milliseconds to wait, or a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> that represents -1 milliseconds to wait indefinitely.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a>&gt;</div>\r\n                  </div>\r\n                  <p>A task that will complete with a result of <code>true</code> if the current thread successfully entered the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, otherwise with a result of <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The current instance has already been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>millisecondsTimeout</code> is a negative number other than -1, which represents an infinite time-out  </p>\n<p> -or-  </p>\n<p> timeout is greater than <a class=\"xref\" href=\"system.int32#System_Int32_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_SemaphoreSlim_WaitAsync_System_Int32_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Threading_SemaphoreSlim_WaitAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WaitAsync(Int32,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously waits to enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, using a 32-bit signed integer to measure the time interval, while observing a <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;bool&gt; WaitAsync (int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>millisecondsTimeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of milliseconds to wait, or <a class=\"xref\" href=\"system.threading.timeout#System_Threading_Timeout_Infinite\" data-linktype=\"relative-path\">Infinite</a> (-1) to wait indefinitely.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> to observe.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a>&gt;</div>\r\n                  </div>\r\n                  <p>A task that will complete with a result of <code>true</code> if the current thread successfully entered the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, otherwise with a result of <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>millisecondsTimeout</code> is a negative number other than -1, which represents an infinite time-out.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The current instance has already been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.operationcanceledexception\" data-linktype=\"relative-path\">OperationCanceledException</a></div>\r\n                  </div>\r\n                  <p><code>cancellationToken</code> was canceled.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_SemaphoreSlim_WaitAsync_System_TimeSpan_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Threading_SemaphoreSlim_WaitAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WaitAsync(TimeSpan,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously waits to enter the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, using a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> to measure the time interval, while observing a <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;bool&gt; WaitAsync (TimeSpan timeout, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> that represents the number of milliseconds to wait, or a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> that represents -1 milliseconds to wait indefinitely.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> token to observe.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a>&gt;</div>\r\n                  </div>\r\n                  <p>A task that will complete with a result of <code>true</code> if the current thread successfully entered the <a class=\"xref\" href=\"system.threading.semaphoreslim\" data-linktype=\"relative-path\">SemaphoreSlim</a>, otherwise with a result of <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>millisecondsTimeout</code> is a negative number other than -1, which represents an infinite time-out  </p>\n<p> -or-  </p>\n<p> timeout is greater than <a class=\"xref\" href=\"system.int32#System_Int32_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.operationcanceledexception\" data-linktype=\"relative-path\">OperationCanceledException</a></div>\r\n                  </div>\r\n                  <p><code>cancellationToken</code> was canceled.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Threading.SemaphoreSlim.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Threading.SemaphoreSlim.yml\">\r\n<meta name=\"APIName\" content=\"System.Threading.SemaphoreSlim\">\r\n<meta name=\"APIName\" content=\"System.Threading.SemaphoreSlim..ctor\">\r\n<meta name=\"APIName\" content=\"System.Threading.SemaphoreSlim.AvailableWaitHandle\">\r\n<meta name=\"APIName\" content=\"System.Threading.SemaphoreSlim.CurrentCount\">\r\n<meta name=\"APIName\" content=\"System.Threading.SemaphoreSlim.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Threading.SemaphoreSlim.Release\">\r\n<meta name=\"APIName\" content=\"System.Threading.SemaphoreSlim.Wait\">\r\n<meta name=\"APIName\" content=\"System.Threading.SemaphoreSlim.WaitAsync\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"c0082539-1bc4-e5bd-dc44-c1f7442223fe\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a lightweight alternative to  that limits the number of threads that can access a resource or pool of resources concurrently.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Threading/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Threading.SemaphoreSlim\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Threading.SemaphoreSlim.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Threading.SemaphoreSlim.yml","open_to_public_contributors":true,"api_name":["System.Threading.SemaphoreSlim","System.Threading.SemaphoreSlim..ctor","System.Threading.SemaphoreSlim.AvailableWaitHandle","System.Threading.SemaphoreSlim.CurrentCount","System.Threading.SemaphoreSlim.Dispose","System.Threading.SemaphoreSlim.Release","System.Threading.SemaphoreSlim.Wait","System.Threading.SemaphoreSlim.WaitAsync"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Threading.SemaphoreSlim","System::Threading::SemaphoreSlim","System.Threading.SemaphoreSlim.#ctor","System::Threading::SemaphoreSlim::#ctor","System.Threading.SemaphoreSlim.AvailableWaitHandle","System::Threading::SemaphoreSlim::AvailableWaitHandle","System.Threading.SemaphoreSlim.CurrentCount","System::Threading::SemaphoreSlim::CurrentCount","System.Threading.SemaphoreSlim.Dispose","System::Threading::SemaphoreSlim::Dispose","System.Threading.SemaphoreSlim.Release","System::Threading::SemaphoreSlim::Release","System.Threading.SemaphoreSlim.Wait","System::Threading::SemaphoreSlim::Wait","System.Threading.SemaphoreSlim.WaitAsync","System::Threading::SemaphoreSlim::WaitAsync"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"c0082539-1bc4-e5bd-dc44-c1f7442223fe","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Threading/SemaphoreSlim.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SemaphoreSlim class | Microsoft Docs","_op_ogTitle":"SemaphoreSlim class","description":"Represents a lightweight alternative to  that limits the number of threads that can access a resource or pool of resources concurrently.\n","toc_asset_id":"_splitted/System.Threading/toc.json","toc_rel":"_splitted/System.Threading/toc.json","source_url":"","ms.assetid":"System.Threading.SemaphoreSlim","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.threading.semaphoreslim","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.threading.semaphoreslim","fileRelativePath":"System.Threading.SemaphoreSlim.html"},"themesRelativePathToOutputRoot":"_themes/"}