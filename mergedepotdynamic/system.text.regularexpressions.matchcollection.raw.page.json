{"content":"    \r\n    <h1 id=\"System_Text_RegularExpressions_MatchCollection\">\r\n      <span class=\"lang-csharp\">MatchCollection</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents the set of successful matches found by iteratively applying a regular expression pattern to the input string.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class MatchCollection : System.Collections.ICollection</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">MatchCollection</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The collection is immutable (read-only) and has no public constructor. The <a class=\"xref\" href=\"system.text.regularexpressions.regex#System_Text_RegularExpressions_Regex_Matches_\" data-linktype=\"relative-path\">Matches</a> method returns a MatchCollection object.  </p>\n<p> The collection contains zero or more <a class=\"xref\" href=\"system.text.regularexpressions.match\" data-linktype=\"relative-path\">System.Text.RegularExpressions.Match</a> objects. If the match is successful, the collection is populated with one <a class=\"xref\" href=\"system.text.regularexpressions.match\" data-linktype=\"relative-path\">System.Text.RegularExpressions.Match</a> object for each match found in the input string. If the match is unsuccessful, the collection contains no <a class=\"xref\" href=\"system.text.regularexpressions.match\" data-linktype=\"relative-path\">System.Text.RegularExpressions.Match</a> objects, and its <a class=\"xref\" href=\"system.text.regularexpressions.matchcollection#System_Text_RegularExpressions_MatchCollection_Count_\" data-linktype=\"relative-path\">Count</a> property equals zero.  </p>\n<p> When applying a regular expression pattern to a particular input string, the regular expression engine uses either of two techniques to build the MatchCollection object:  </p>\n<ul>\n<li><p>Direct evaluation.  </p>\n<p> The MatchCollection object is populated all at once, with all matches resulting from a particular call to the <a class=\"xref\" href=\"system.text.regularexpressions.regex#System_Text_RegularExpressions_Regex_Matches_\" data-linktype=\"relative-path\">Matches</a> method. This technique is used when the collection&#39;s <a class=\"xref\" href=\"system.text.regularexpressions.matchcollection#System_Text_RegularExpressions_MatchCollection_Count_\" data-linktype=\"relative-path\">Count</a> property is accessed. It typically is the more expensive method of populating the collection and entails a greater performance hit.  </p>\n</li>\n<li><p>Lazy evaluation.  </p>\n<p> The MatchCollection object is populated as needed on a match-by-match basis. It is equivalent to the regular expression engine calling the <a class=\"xref\" href=\"system.text.regularexpressions.regex#System_Text_RegularExpressions_Regex_Match_\" data-linktype=\"relative-path\">Match</a> method repeatedly and adding each match to the collection. This technique is used when the collection is accessed through its <a class=\"xref\" href=\"system.text.regularexpressions.matchcollection#System_Text_RegularExpressions_MatchCollection_GetEnumerator_\" data-linktype=\"relative-path\">GetEnumerator</a> method, or when it is accessed using the <code>foreach</code> statement (in C#) or the <code>For Each</code>...<code>Next</code> statement (in Visual Basic).  </p>\n<p>To iterate through the members of the collection, you should use the collection iteration construct provided by your language (such as <code>foreach</code> in C# and <code>For Each</code>â€¦<code>Next</code> in Visual Basic) instead of retrieving the enumerator that is returned by the <a class=\"xref\" href=\"system.text.regularexpressions.matchcollection#System_Text_RegularExpressions_MatchCollection_GetEnumerator_\" data-linktype=\"relative-path\">GetEnumerator</a> method.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_RegularExpressions_MatchCollection_Count\" data-linktype=\"self-bookmark\">Count</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of matches.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_RegularExpressions_MatchCollection_IsReadOnly\" data-linktype=\"self-bookmark\">IsReadOnly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the collection is read only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_RegularExpressions_MatchCollection_IsSynchronized\" data-linktype=\"self-bookmark\">IsSynchronized</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether access to the collection is synchronized (thread-safe).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_RegularExpressions_MatchCollection_Item_System_Int32_\" data-linktype=\"self-bookmark\">Item(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an individual member of the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_RegularExpressions_MatchCollection_SyncRoot\" data-linktype=\"self-bookmark\">SyncRoot</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an object that can be used to synchronize access to the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_RegularExpressions_MatchCollection_CopyTo_System_Array_System_Int32_\" data-linktype=\"self-bookmark\">CopyTo(Array,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies all the elements of the collection to the given array starting at the given index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_RegularExpressions_MatchCollection_GetEnumerator\" data-linktype=\"self-bookmark\">GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides an enumerator that iterates through the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Text_RegularExpressions_MatchCollection_Count\">\r\n    \r\n            <a id=\"System_Text_RegularExpressions_MatchCollection_Count_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Count</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of matches.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Count { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of matches.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.regularexpressions.regexmatchtimeoutexception\" data-linktype=\"relative-path\">RegexMatchTimeoutException</a></div>\r\n                  </div>\r\n                  <p>A time-out occurred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Accessing individual members of the <a class=\"xref\" href=\"system.text.regularexpressions.matchcollection\" data-linktype=\"relative-path\">MatchCollection</a> object by retrieving the value of the collection&#39;s Count property causes the regular expression engine to populate the collection using direct evaluation. ln contrast, calling the <a class=\"xref\" href=\"system.text.regularexpressions.matchcollection#System_Text_RegularExpressions_MatchCollection_GetEnumerator_\" data-linktype=\"relative-path\">GetEnumerator</a> method (or using the <code>foreach</code> statement in C# and the <code>For Each</code>...<code>Next</code> statement in Visual Basic) causes the regular expression engine to populate the collection on an as needed basis using lazy evaluation. Direct evaluation can be a much more expensive method of building the collection than lazy evaluation.  </p>\n<p> Because the <a class=\"xref\" href=\"system.text.regularexpressions.matchcollection\" data-linktype=\"relative-path\">MatchCollection</a> object is generally populated by using lazy evaluation, trying to determine the number of elements in the collection before it has been fully populated may throw a <a class=\"xref\" href=\"system.text.regularexpressions.regexmatchtimeoutexception\" data-linktype=\"relative-path\">RegexMatchTimeoutException</a> exception. This exception can be thrown if a time-out value for matching operations is in effect, and the attempt to find a single match exceeds that time-out interval.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the Count property to determine whether the call to the <a class=\"xref\" href=\"system.text.regularexpressions.regex#System_Text_RegularExpressions_Regex_Matches_System_String_System_String_\" data-linktype=\"relative-path\">System.Text.RegularExpressions.Regex.Matches(String,String)</a> method found any matches. If not, it indicates that no matches were found. Otherwise, it enumerates the matches and displays their value and the position in the input string at which they were found.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Text.RegularExpressions.MatchCollection.Count#1\">Imports System.Text.RegularExpressions\n\nModule Example\n   Public Sub Main()\n      Dim pattern As String = &quot;\\d+&quot;\n      Dim inputs() As String = { &quot;This sentence contains no numbers.&quot;,\n                                 &quot;123 What do I see?&quot;,\n                                 &quot;2468 369 48 5&quot; }\n      For Each inputStr In inputs\n         Dim matches As MatchCollection = Regex.Matches(inputStr, pattern)\n         Console.WriteLine(&quot;Input: {0}&quot;, inputStr)\n         If matches.Count = 0\n            Console.WriteLine(&quot;   No matches&quot;)\n         Else\n            For Each m As Match In matches\n               Console.WriteLine(&quot;   {0} at index {1}&quot;, m.Value, m.Index)\n            Next\n         End If\n         Console.WriteLine()\n      Next\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       Input: This sentence contains no numbers.\n&#39;       No matches\n&#39;\n&#39;       Input: 123 What do I see?\n&#39;       123 at index 0\n&#39;\n&#39;       Input: 2468 369 48 5\n&#39;       2468 at index 0\n&#39;       369 at index 5\n&#39;       48 at index 9\n&#39;       5 at index 12\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Text.RegularExpressions.MatchCollection.Count#1\">using System;\nusing System.Text.RegularExpressions;\n\npublic class Example\n{\n   public static void Main()\n   {\n      string pattern = @&quot;\\d+&quot;;\n      string[] inputs = { &quot;This sentence contains no numbers.&quot;,\n                          &quot;123 What do I see?&quot;,\n                          &quot;2468 369 48 5&quot; };\n      foreach (var input in inputs) {\n         MatchCollection matches = Regex.Matches(input, pattern);\n         Console.WriteLine(&quot;Input: {0}&quot;, input);\n         if (matches.Count == 0)\n            Console.WriteLine(&quot;   No matches&quot;);\n         else\n            foreach (Match m in matches)\n               Console.WriteLine(&quot;   {0} at index {1}&quot;, m.Value, m.Index);\n\n         Console.WriteLine();\n      }\n   }\n}\n// The example displays the following output:\n//       Input: This sentence contains no numbers.\n//          No matches\n//\n//       Input: 123 What do I see?\n//          123 at index 0\n//\n//       Input: 2468 369 48 5\n//          2468 at index 0\n//          369 at index 5\n//          48 at index 9\n//          5 at index 12\n</code></pre><p> The regular expression pattern <code>\\d+</code> matches one or more decimal characters in an input string.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_RegularExpressions_MatchCollection_IsReadOnly\">\r\n    \r\n            <a id=\"System_Text_RegularExpressions_MatchCollection_IsReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsReadOnly</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the collection is read only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsReadOnly { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> in all cases.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_RegularExpressions_MatchCollection_IsSynchronized\">\r\n    \r\n            <a id=\"System_Text_RegularExpressions_MatchCollection_IsSynchronized_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsSynchronized</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether access to the collection is synchronized (thread-safe).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsSynchronized { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>false</code> in all cases.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"WARNING\"><h5>Warning</h5><p> This member is not present in the Portable Class Library. If you are developing applications that target the Portable Class Library, use the &lt;xref:System.Text.RegularExpressions.MatchCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=fullName&gt; property instead.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_RegularExpressions_MatchCollection_Item_System_Int32_\">\r\n    \r\n            <a id=\"System_Text_RegularExpressions_MatchCollection_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Gets an individual member of the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Text.RegularExpressions.Match this[int i] { get; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>i</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Index into the <a class=\"xref\" href=\"system.text.regularexpressions.match\" data-linktype=\"relative-path\">Match</a> collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.regularexpressions.match\" data-linktype=\"relative-path\">Match</a></div>\r\n                  </div>\r\n                  <p>The captured substring at position <code>i</code> in the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>i</code> is less than 0 or greater than or equal to <span class=\"xref\">stem.Text.RegularExpressions.MatchCollection.Count*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.regularexpressions.regexmatchtimeoutexception\" data-linktype=\"relative-path\">RegexMatchTimeoutException</a></div>\r\n                  </div>\r\n                  <p>A time-out occurred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In C#, the Item property is an indexer; it is not explicitly referenced in code, but instead allows the <a class=\"xref\" href=\"system.text.regularexpressions.matchcollection\" data-linktype=\"relative-path\">MatchCollection</a> collection to be accessed as if it were an array.  </p>\n<p> Typically, individual items in the <a class=\"xref\" href=\"system.text.regularexpressions.matchcollection\" data-linktype=\"relative-path\">MatchCollection</a> object are accessed by their index only after the total number of items in the collection has been determined from the <a class=\"xref\" href=\"system.text.regularexpressions.matchcollection#System_Text_RegularExpressions_MatchCollection_Count_\" data-linktype=\"relative-path\">Count</a> property. However, accessing the <a class=\"xref\" href=\"system.text.regularexpressions.matchcollection#System_Text_RegularExpressions_MatchCollection_Count_\" data-linktype=\"relative-path\">Count</a> property causes the regular expression engine to use direct evaluation to build the collection all at once. This is typically more expensive than iterating the collection using the <a class=\"xref\" href=\"system.text.regularexpressions.matchcollection#System_Text_RegularExpressions_MatchCollection_GetEnumerator_\" data-linktype=\"relative-path\">GetEnumerator</a> method, the C# <code>foreach</code> statement, or the Visual Basic <code>For Each</code>...<code>Next</code> statement.  </p>\n<p> Because the <a class=\"xref\" href=\"system.text.regularexpressions.matchcollection\" data-linktype=\"relative-path\">MatchCollection</a> object is generally populated by using lazy evaluation, trying to navigate to a specific match may throw a <a class=\"xref\" href=\"system.text.regularexpressions.regexmatchtimeoutexception\" data-linktype=\"relative-path\">RegexMatchTimeoutException</a> exception. This exception can be thrown if a time-out value for matching operations is in effect, and the attempt to find a specific match exceeds that time-out interval.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example parses the first sentence of Nathaniel Hawthorne&#39;s <em>House of the Seven Gables</em> and returns a <a class=\"xref\" href=\"system.text.regularexpressions.matchcollection\" data-linktype=\"relative-path\">MatchCollection</a> object that contains all words that begin with either an uppercase or lowercase &quot;h&quot;. The Item property is then used to retrieve each word and display it to the console.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Text.RegularExpressions.MatchCollection.Item#1\">Option Strict On\n\nImports System.Text.RegularExpressions\n\nModule TestMatches\n   Public Sub Main()\n      Dim pattern As String = &quot;\\b[hH]\\w*\\b&quot;\n      Dim sentence As String\n      sentence = &quot;Half-way down a by-street of one of our New England towns, stands a rusty wooden &quot; &amp; _\n                 &quot;house, with seven acutely peaked gables, facing towards various points of the compass, &quot; &amp; _ \n                 &quot;and a huge, clustered chimney in the midst.&quot;\n      Dim matches As MatchCollection = Regex.Matches(sentence, pattern)\n      For ctr As Integer = 0 To Matches.Count - 1\n         Console.WriteLine(matches.Item(ctr).Value)\n      Next           \n   End Sub\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Text.RegularExpressions.MatchCollection.Item#1\">using System;\nusing System.Text.RegularExpressions;\n\npublic class Class1\n{\n   public static void Main()\n   {   \n      string sentence = &quot;Half-way down a by-street of one of our New England towns, stands a rusty wooden &quot; +\n                         &quot;house, with seven acutely peaked gables, facing towards various points of the compass, &quot; + \n                         &quot;and a huge, clustered chimney in the midst.&quot;;\n      string pattern = @&quot;\\b[hH]\\w*\\b&quot;; \n      MatchCollection matches = Regex.Matches(sentence, pattern);\n      for (int ctr=0; ctr &lt; matches.Count; ctr++)\n      {\n         Console.WriteLine(matches[ctr].Value);   \n      }   \n   }\n}\n</code></pre><p> The example produces the following output:  </p>\n<pre><code>Half  \nhouse  \nhuge  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_RegularExpressions_MatchCollection_SyncRoot\">\r\n    \r\n            <a id=\"System_Text_RegularExpressions_MatchCollection_SyncRoot_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SyncRoot</div>        \r\n          </div>\r\n    \r\n            <p>Gets an object that can be used to synchronize access to the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object SyncRoot { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An object that can be used to synchronize access to the collection. This property always returns the object itself.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"WARNING\"><h5>Warning</h5><p> This member is not present in the Portable Class Library. If you are developing applications that target the Portable Class Library, use the &lt;xref:System.Text.RegularExpressions.MatchCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=fullName&gt; property instead.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Text_RegularExpressions_MatchCollection_CopyTo_System_Array_System_Int32_\">\r\n    \r\n            <a id=\"System_Text_RegularExpressions_MatchCollection_CopyTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyTo(Array,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Copies all the elements of the collection to the given array starting at the given index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CopyTo (Array array, int arrayIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array the collection is to be copied into.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arrayIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The position in the array where copying is to begin.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>array</code> is a multi-dimensional array.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.indexoutofrangeexception\" data-linktype=\"relative-path\">IndexOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>arrayIndex</code> is outside the bounds of <code>array</code>.  </p>\n<p> -or-  </p>\n<p> <code>arrayIndex</code> plus <span class=\"xref\">stem.Text.RegularExpressions.MatchCollection.Count*</span> is outside the bounds of <code>array</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.regularexpressions.regexmatchtimeoutexception\" data-linktype=\"relative-path\">RegexMatchTimeoutException</a></div>\r\n                  </div>\r\n                  <p>A time-out occurred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Because the collection is copied into the array starting at the given index, the destination array must be at least as large as the entire collection.  </p>\n<div class=\"WARNING\"><h5>Warning</h5><p> This member is not present in the Portable Class Library. If you are developing applications that target the Portable Class Library, use the &lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=fullName&gt; method instead.  </p>\n</div>\n<p> Because the <a class=\"xref\" href=\"system.text.regularexpressions.matchcollection\" data-linktype=\"relative-path\">MatchCollection</a> object is generally populated by using lazy evaluation, trying to copy the collection before it has been fully populated may throw a <a class=\"xref\" href=\"system.text.regularexpressions.regexmatchtimeoutexception\" data-linktype=\"relative-path\">RegexMatchTimeoutException</a> exception. This exception can be thrown if a time-out value for matching operations is in effect, and the attempt to find a single match exceeds that time-out interval.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_RegularExpressions_MatchCollection_GetEnumerator\">\r\n    \r\n            <a id=\"System_Text_RegularExpressions_MatchCollection_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Provides an enumerator that iterates through the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.IEnumerator GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></div>\r\n                  </div>\r\n                  <p>An object that contains all <a class=\"xref\" href=\"system.text.regularexpressions.match\" data-linktype=\"relative-path\">Match</a> objects within the <a class=\"xref\" href=\"system.text.regularexpressions.matchcollection\" data-linktype=\"relative-path\">MatchCollection</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.regularexpressions.regexmatchtimeoutexception\" data-linktype=\"relative-path\">RegexMatchTimeoutException</a></div>\r\n                  </div>\r\n                  <p>A time-out occurred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Instead of  calling the GetEnumerator method to retrieve an enumerator that lets you iterate through the <a class=\"xref\" href=\"system.text.regularexpressions.match\" data-linktype=\"relative-path\">Match</a> objects in the collection, you should use the group iteration construct (such as <code>foreach</code> in C# and <code>For Each</code>â€¦<code>Next</code> in Visual Basic) provided by your programming language.  </p>\n<p> Iterating the members of the <a class=\"xref\" href=\"system.text.regularexpressions.matchcollection\" data-linktype=\"relative-path\">MatchCollection</a> object using the GetEnumerator method (or the <code>foreach</code> statement in C# and the <code>For Each</code>...<code>Next</code> statement in Visual Basic) causes the regular expression engine to populate the collection on an as needed basis using lazy evaluation. This is analogous to repeatedly calling the <a class=\"xref\" href=\"system.text.regularexpressions.regex#System_Text_RegularExpressions_Regex_Match_\" data-linktype=\"relative-path\">Match</a> method, and then adding the resulting match to the <a class=\"xref\" href=\"system.text.regularexpressions.matchcollection\" data-linktype=\"relative-path\">MatchCollection</a> object. In contrast, the regular expression engine uses direct evaluation to populate the collection all at once when the <a class=\"xref\" href=\"system.text.regularexpressions.matchcollection#System_Text_RegularExpressions_MatchCollection_Count_\" data-linktype=\"relative-path\">Count</a> property is accessed. This can be a much more expensive method of building the collection than lazy evaluation.  </p>\n<p> Because the <a class=\"xref\" href=\"system.text.regularexpressions.matchcollection\" data-linktype=\"relative-path\">MatchCollection</a> object is generally populated by using lazy evaluation, trying to navigate to the next member of the collection may throw a <a class=\"xref\" href=\"system.text.regularexpressions.regexmatchtimeoutexception\" data-linktype=\"relative-path\">RegexMatchTimeoutException</a> exception. This exception can be thrown if a time-out value for matching operations is in effect, and the attempt to find the next match exceeds that time-out interval.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Text.RegularExpressions.MatchCollection.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Text.RegularExpressions.MatchCollection.yml\">\r\n<meta name=\"APIName\" content=\"System.Text.RegularExpressions.MatchCollection\">\r\n<meta name=\"APIName\" content=\"System.Text.RegularExpressions.MatchCollection.CopyTo\">\r\n<meta name=\"APIName\" content=\"System.Text.RegularExpressions.MatchCollection.Count\">\r\n<meta name=\"APIName\" content=\"System.Text.RegularExpressions.MatchCollection.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Text.RegularExpressions.MatchCollection.IsReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Text.RegularExpressions.MatchCollection.IsSynchronized\">\r\n<meta name=\"APIName\" content=\"System.Text.RegularExpressions.MatchCollection.Item\">\r\n<meta name=\"APIName\" content=\"System.Text.RegularExpressions.MatchCollection.SyncRoot\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"15ada6aa-1300-25c2-85b1-cbc035fafe9e\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the set of successful matches found by iteratively applying a regular expression pattern to the input string.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Text.RegularExpressions/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Text.RegularExpressions.MatchCollection\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Text.RegularExpressions.MatchCollection.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Text.RegularExpressions.MatchCollection.yml","open_to_public_contributors":true,"api_name":["System.Text.RegularExpressions.MatchCollection","System.Text.RegularExpressions.MatchCollection.CopyTo","System.Text.RegularExpressions.MatchCollection.Count","System.Text.RegularExpressions.MatchCollection.GetEnumerator","System.Text.RegularExpressions.MatchCollection.IsReadOnly","System.Text.RegularExpressions.MatchCollection.IsSynchronized","System.Text.RegularExpressions.MatchCollection.Item","System.Text.RegularExpressions.MatchCollection.SyncRoot"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Text.RegularExpressions.MatchCollection","System::Text::RegularExpressions::MatchCollection","System.Text.RegularExpressions.MatchCollection.CopyTo","System::Text::RegularExpressions::MatchCollection::CopyTo","System.Text.RegularExpressions.MatchCollection.Count","System::Text::RegularExpressions::MatchCollection::Count","System.Text.RegularExpressions.MatchCollection.GetEnumerator","System::Text::RegularExpressions::MatchCollection::GetEnumerator","System.Text.RegularExpressions.MatchCollection.IsReadOnly","System::Text::RegularExpressions::MatchCollection::IsReadOnly","System.Text.RegularExpressions.MatchCollection.IsSynchronized","System::Text::RegularExpressions::MatchCollection::IsSynchronized","System.Text.RegularExpressions.MatchCollection.Item","System::Text::RegularExpressions::MatchCollection::Item","System.Text.RegularExpressions.MatchCollection.SyncRoot","System::Text::RegularExpressions::MatchCollection::SyncRoot"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"15ada6aa-1300-25c2-85b1-cbc035fafe9e","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Text.RegularExpressions/MatchCollection.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"MatchCollection class | Microsoft Docs","_op_ogTitle":"MatchCollection class","description":"Represents the set of successful matches found by iteratively applying a regular expression pattern to the input string.\n","toc_asset_id":"_splitted/System.Text.RegularExpressions/toc.json","toc_rel":"_splitted/System.Text.RegularExpressions/toc.json","source_url":"","ms.assetid":"System.Text.RegularExpressions.MatchCollection","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.text.regularexpressions.matchcollection","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.text.regularexpressions.matchcollection","fileRelativePath":"System.Text.RegularExpressions.MatchCollection.html"},"themesRelativePathToOutputRoot":"_themes/"}