{"content":"    \r\n    <h1 id=\"System_Collections_Concurrent_IProducerConsumerCollection_1\">\r\n      <span class=\"lang-csharp\">IProducerConsumerCollection&lt;T&gt;</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines methods to manipulate thread-safe collections intended for producer/consumer usage. This interface provides a unified representation for producer/consumer collections so that higher level abstractions such as <span class=\"xref\">stem.Collections.Concurrent.BlockingCollection`1</span> can use the collection as the underlying storage mechanism.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface IProducerConsumerCollection&lt;T&gt; : System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.ICollection</code></pre>\r\n    \r\n    \r\n    \t<h2>Type Parameters</h2>\r\n    \r\n    \t<table class=\"nameValue\">\r\n    \t\t<tr>\r\n    \t\t<td>\r\n    \t\tT\r\n    \t\t</td>\r\n    \t\t<td>\r\n    \t\t<p>Specifies the type of elements in the collection.</p>\n\r\n    \t\t</td>\r\n    \t\t</tr>\r\n    \t</table>\r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>For more information, see <a href=\"../Topic/Thread-Safe%20Collections.md\" data-linktype=\"relative-path\">Thread-Safe Collections</a> and <a href=\"../Topic/BlockingCollection%20Overview.md\" data-linktype=\"relative-path\">BlockingCollection Overview</a>.</p>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_IProducerConsumerCollection_1_CopyTo__0___System_Int32_\" data-linktype=\"self-bookmark\">CopyTo(T[],Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies the elements of the <span class=\"xref\">stem.Collections.Concurrent.IProducerConsumerCollection`1</span> to an <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>, starting at a specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_IProducerConsumerCollection_1_ToArray\" data-linktype=\"self-bookmark\">ToArray()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies the elements contained in the <span class=\"xref\">stem.Collections.Concurrent.IProducerConsumerCollection`1</span> to a new array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_IProducerConsumerCollection_1_TryAdd__0_\" data-linktype=\"self-bookmark\">TryAdd(T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attempts to add an object to the <span class=\"xref\">stem.Collections.Concurrent.IProducerConsumerCollection`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_IProducerConsumerCollection_1_TryTake__0__\" data-linktype=\"self-bookmark\">TryTake(T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attempts to remove and return an object from the <span class=\"xref\">stem.Collections.Concurrent.IProducerConsumerCollection`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_IProducerConsumerCollection_1_CopyTo__0___System_Int32_\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_IProducerConsumerCollection_1_CopyTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyTo(T[],Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Copies the elements of the <span class=\"xref\">stem.Collections.Concurrent.IProducerConsumerCollection`1</span> to an <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>, starting at a specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CopyTo (T[] array, int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T[]</span>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The one-dimensional <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> that is the destination of the elements copied from the <span class=\"xref\">stem.Collections.Concurrent.IProducerConsumerCollection`1</span>.  </p>\n<p> The array must have zero-based indexing.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index in <code>array</code> at which copying begins.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>array</code> is a null reference (Nothing in Visual Basic).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> is equal to or greater than the length of the <code>array</code> -or- The number of elements in the collection is greater than the available space from <code>index</code> to the end of the destination <code>array</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The method provides a snapshot of the underlying collection. It is possible for other threads to add or remove items immediately after the copy is made.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_IProducerConsumerCollection_1_ToArray\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_IProducerConsumerCollection_1_ToArray_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToArray()</div>        \r\n          </div>\r\n    \r\n            <p>Copies the elements contained in the <span class=\"xref\">stem.Collections.Concurrent.IProducerConsumerCollection`1</span> to a new array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public T[] ToArray ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">T[]</span>[]</div>\r\n                  </div>\r\n                  <p>A new array containing the elements copied from the <span class=\"xref\">stem.Collections.Concurrent.IProducerConsumerCollection`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The method provides a snapshot of the underlying collection. It is possible for other threads to add or remove items immediately after the array is made.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_IProducerConsumerCollection_1_TryAdd__0_\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_IProducerConsumerCollection_1_TryAdd_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TryAdd(T)</div>        \r\n          </div>\r\n    \r\n            <p>Attempts to add an object to the <span class=\"xref\">stem.Collections.Concurrent.IProducerConsumerCollection`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool TryAdd (T item);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>item</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to add to the <span class=\"xref\">stem.Collections.Concurrent.IProducerConsumerCollection`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>true if the object was added successfully; otherwise, false.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>item</code> was invalid for this collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_IProducerConsumerCollection_1_TryTake__0__\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_IProducerConsumerCollection_1_TryTake_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TryTake(T)</div>        \r\n          </div>\r\n    \r\n            <p>Attempts to remove and return an object from the <span class=\"xref\">stem.Collections.Concurrent.IProducerConsumerCollection`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool TryTake (out T item);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>item</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, if the object was removed and returned successfully, <code>item</code> contains the removed object. If no object was available to be removed, the value is unspecified.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>true if an object was removed and returned successfully; otherwise, false.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Collections.Concurrent.IProducerConsumerCollection-1.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Collections.Concurrent.IProducerConsumerCollection-1.yml\">\r\n<meta name=\"APIName\" content=\"System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.CopyTo\">\r\n<meta name=\"APIName\" content=\"System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.ToArray\">\r\n<meta name=\"APIName\" content=\"System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryAdd\">\r\n<meta name=\"APIName\" content=\"System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryTake\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"4a3d1f1d-7dff-981c-6fe2-9b6defe479cc\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines methods to manipulate thread-safe collections intended for producer/consumer usage. This interface provides a unified representation for producer/consumer collections so that higher level absâ€¦\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Collections.Concurrent/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Collections.Concurrent.IProducerConsumerCollection`1\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Collections.Concurrent.IProducerConsumerCollection-1.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Collections.Concurrent.IProducerConsumerCollection-1.yml","open_to_public_contributors":true,"api_name":["System.Collections.Concurrent.IProducerConsumerCollection<T>","System.Collections.Concurrent.IProducerConsumerCollection<T>.CopyTo","System.Collections.Concurrent.IProducerConsumerCollection<T>.ToArray","System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd","System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Collections.Concurrent.IProducerConsumerCollection`1","System::Collections::Concurrent::IProducerConsumerCollection`1","System.Collections.Concurrent.IProducerConsumerCollection`1.CopyTo","System::Collections::Concurrent::IProducerConsumerCollection`1::CopyTo","System.Collections.Concurrent.IProducerConsumerCollection`1.ToArray","System::Collections::Concurrent::IProducerConsumerCollection`1::ToArray","System.Collections.Concurrent.IProducerConsumerCollection`1.TryAdd","System::Collections::Concurrent::IProducerConsumerCollection`1::TryAdd","System.Collections.Concurrent.IProducerConsumerCollection`1.TryTake","System::Collections::Concurrent::IProducerConsumerCollection`1::TryTake"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"4a3d1f1d-7dff-981c-6fe2-9b6defe479cc","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Collections.Concurrent/IProducerConsumerCollection`1.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IProducerConsumerCollection<T> interface | Microsoft Docs","_op_ogTitle":"IProducerConsumerCollection<T> interface","description":"Defines methods to manipulate thread-safe collections intended for producer/consumer usage. This interface provides a unified representation for producer/consumer collections so that higher level absâ€¦","toc_asset_id":"_splitted/System.Collections.Concurrent/toc.json","toc_rel":"_splitted/System.Collections.Concurrent/toc.json","source_url":"","ms.assetid":"System.Collections.Concurrent.IProducerConsumerCollection`1","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.collections.concurrent.iproducerconsumercollection-1","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.collections.concurrent.iproducerconsumercollection-1","fileRelativePath":"System.Collections.Concurrent.IProducerConsumerCollection-1.html"},"themesRelativePathToOutputRoot":"_themes/"}