{"content":"    \r\n    <h1 id=\"System_Drawing_Graphics\">\r\n      <span class=\"lang-csharp\">Graphics</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Encapsulates a GDI+ drawing surface. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class Graphics : MarshalByRefObject, IDisposable, System.Drawing.IDeviceContext</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">System.MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Graphics</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The Graphics class provides methods for drawing objects to the display device. A Graphics is associated with a specific device context.  </p>\n<p> You can obtain a Graphics object by calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateGraphics_\" data-linktype=\"relative-path\">CreateGraphics</a> method on an object that inherits from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">System.Windows.Forms.Control</a>, or by handling a control&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">System.Windows.Forms.Control.Paint</a> event and accessing the <a class=\"xref\" href=\"system.windows.forms.painteventargs#System_Windows_Forms_PaintEventArgs_Graphics_\" data-linktype=\"relative-path\">Graphics</a> property of the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">System.Windows.Forms.PaintEventArgs</a> class. You can also create a Graphics object from an image by using the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_FromImage_\" data-linktype=\"relative-path\">FromImage</a> method. For more information about creating a Graphics object, see <a href=\"../Topic/How%20to:%20Create%20Graphics%20Objects%20for%20Drawing.md\" data-linktype=\"relative-path\">How to: Create Graphics Objects for Drawing</a>.  </p>\n<p> You can draw many different shapes and lines by using a Graphics object. For more information about how to draw lines and shapes, see the specific <code>Draw</code><em>GraphicalElement</em> method for the line or shape you want to draw. These methods include <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawLine_\" data-linktype=\"relative-path\">DrawLine</a>, <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawArc_\" data-linktype=\"relative-path\">DrawArc</a>, <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawClosedCurve_\" data-linktype=\"relative-path\">DrawClosedCurve</a>, <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawPolygon_\" data-linktype=\"relative-path\">DrawPolygon</a>, and <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawRectangle_\" data-linktype=\"relative-path\">DrawRectangle</a>. For more information about how to draw lines and shapes, see <a href=\"../Topic/Using%20a%20Pen%20to%20Draw%20Lines%20and%20Shapes.md\" data-linktype=\"relative-path\">Using a Pen to Draw Lines and Shapes</a> and <a href=\"../Topic/Using%20a%20Brush%20to%20Fill%20Shapes.md\" data-linktype=\"relative-path\">Using a Brush to Fill Shapes</a>.  </p>\n<p> You can also draw images and icons by using the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawImage_\" data-linktype=\"relative-path\">DrawImage</a> and <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawIcon_\" data-linktype=\"relative-path\">DrawIcon</a> methods, respectively. To perform a bit-block transfer of color data from the screen to the drawing surface of the Graphics object, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_CopyFromScreen_\" data-linktype=\"relative-path\">CopyFromScreen</a>. For more information about how to draw images with a Graphics object, see <a href=\"../Topic/Working%20with%20Images,%20Bitmaps,%20Icons,%20and%20Metafiles.md\" data-linktype=\"relative-path\">Working with Images, Bitmaps, Icons, and Metafiles</a>.  </p>\n<p> In addition, you can manipulate the coordinate system used by the Graphics object. For more information on the coordinate system and how to manipulate it, see <a href=\"../Topic/Coordinate%20Systems%20and%20Transformations.md\" data-linktype=\"relative-path\">Coordinate Systems and Transformations</a>.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_Clip\" data-linktype=\"self-bookmark\">Clip</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> that limits the drawing region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_ClipBounds\" data-linktype=\"self-bookmark\">ClipBounds</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that bounds the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_CompositingMode\" data-linktype=\"self-bookmark\">CompositingMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that specifies how composited images are drawn to this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_CompositingQuality\" data-linktype=\"self-bookmark\">CompositingQuality</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the rendering quality of composited images drawn to this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DpiX\" data-linktype=\"self-bookmark\">DpiX</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the horizontal resolution of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DpiY\" data-linktype=\"self-bookmark\">DpiY</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the vertical resolution of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_InterpolationMode\" data-linktype=\"self-bookmark\">InterpolationMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the interpolation mode associated with this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_IsClipEmpty\" data-linktype=\"self-bookmark\">IsClipEmpty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is empty.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_IsVisibleClipEmpty\" data-linktype=\"self-bookmark\">IsVisibleClipEmpty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the visible clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is empty.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_PageScale\" data-linktype=\"self-bookmark\">PageScale</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the scaling between world units and page units for this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_PageUnit\" data-linktype=\"self-bookmark\">PageUnit</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the unit of measure used for page coordinates in this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_PixelOffsetMode\" data-linktype=\"self-bookmark\">PixelOffsetMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or set a value specifying how pixels are offset during rendering of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_RenderingOrigin\" data-linktype=\"self-bookmark\">RenderingOrigin</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the rendering origin of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for dithering and for hatch brushes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_SmoothingMode\" data-linktype=\"self-bookmark\">SmoothingMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the rendering quality for this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_TextContrast\" data-linktype=\"self-bookmark\">TextContrast</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the gamma correction value for rendering text.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_TextRenderingHint\" data-linktype=\"self-bookmark\">TextRenderingHint</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the rendering mode for text associated with this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_Transform\" data-linktype=\"self-bookmark\">Transform</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a copy of the geometric world transformation for this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_VisibleClipBounds\" data-linktype=\"self-bookmark\">VisibleClipBounds</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the bounding rectangle of the visible clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_AddMetafileComment_System_Byte___\" data-linktype=\"self-bookmark\">AddMetafileComment(Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a comment to the current <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_BeginContainer\" data-linktype=\"self-bookmark\">BeginContainer()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves a graphics container with the current state of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> and opens and uses a new graphics container.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_BeginContainer_System_Drawing_Rectangle_System_Drawing_Rectangle_System_Drawing_GraphicsUnit_\" data-linktype=\"self-bookmark\">BeginContainer(Rectangle,Rectangle,GraphicsUnit)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves a graphics container with the current state of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> and opens and uses a new graphics container with the specified scale transformation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_BeginContainer_System_Drawing_RectangleF_System_Drawing_RectangleF_System_Drawing_GraphicsUnit_\" data-linktype=\"self-bookmark\">BeginContainer(RectangleF,RectangleF,GraphicsUnit)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves a graphics container with the current state of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> and opens and uses a new graphics container with the specified scale transformation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_Clear_System_Drawing_Color_\" data-linktype=\"self-bookmark\">Clear(Color)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Clears the entire drawing surface and fills it with the specified background color.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_CopyFromScreen_System_Drawing_Point_System_Drawing_Point_System_Drawing_Size_\" data-linktype=\"self-bookmark\">CopyFromScreen(Point,Point,Size)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs a bit-block transfer of color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_CopyFromScreen_System_Drawing_Point_System_Drawing_Point_System_Drawing_Size_System_Drawing_CopyPixelOperation_\" data-linktype=\"self-bookmark\">CopyFromScreen(Point,Point,Size,CopyPixelOperation)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs a bit-block transfer of color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_CopyFromScreen_System_Int32_System_Int32_System_Int32_System_Int32_System_Drawing_Size_\" data-linktype=\"self-bookmark\">CopyFromScreen(Int32,Int32,Int32,Int32,Size)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs a bit-block transfer of the color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_CopyFromScreen_System_Int32_System_Int32_System_Int32_System_Int32_System_Drawing_Size_System_Drawing_CopyPixelOperation_\" data-linktype=\"self-bookmark\">CopyFromScreen(Int32,Int32,Int32,Int32,Size,CopyPixelOperation)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs a bit-block transfer of the color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawArc_System_Drawing_Pen_System_Drawing_Rectangle_System_Single_System_Single_\" data-linktype=\"self-bookmark\">DrawArc(Pen,Rectangle,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws an arc representing a portion of an ellipse specified by a <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawArc_System_Drawing_Pen_System_Drawing_RectangleF_System_Single_System_Single_\" data-linktype=\"self-bookmark\">DrawArc(Pen,RectangleF,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws an arc representing a portion of an ellipse specified by a <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawArc_System_Drawing_Pen_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">DrawArc(Pen,Int32,Int32,Int32,Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawArc_System_Drawing_Pen_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_\" data-linktype=\"self-bookmark\">DrawArc(Pen,Single,Single,Single,Single,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawBezier_System_Drawing_Pen_System_Drawing_Point_System_Drawing_Point_System_Drawing_Point_System_Drawing_Point_\" data-linktype=\"self-bookmark\">DrawBezier(Pen,Point,Point,Point,Point)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a Bézier spline defined by four <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawBezier_System_Drawing_Pen_System_Drawing_PointF_System_Drawing_PointF_System_Drawing_PointF_System_Drawing_PointF_\" data-linktype=\"self-bookmark\">DrawBezier(Pen,PointF,PointF,PointF,PointF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a Bézier spline defined by four <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawBezier_System_Drawing_Pen_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_\" data-linktype=\"self-bookmark\">DrawBezier(Pen,Single,Single,Single,Single,Single,Single,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a Bézier spline defined by four ordered pairs of coordinates that represent points.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawBeziers_System_Drawing_Pen_System_Drawing_Point___\" data-linktype=\"self-bookmark\">DrawBeziers(Pen,Point[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a series of Bézier splines from an array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawBeziers_System_Drawing_Pen_System_Drawing_PointF___\" data-linktype=\"self-bookmark\">DrawBeziers(Pen,PointF[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a series of Bézier splines from an array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawClosedCurve_System_Drawing_Pen_System_Drawing_Point___\" data-linktype=\"self-bookmark\">DrawClosedCurve(Pen,Point[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a closed cardinal spline defined by an array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawClosedCurve_System_Drawing_Pen_System_Drawing_PointF___\" data-linktype=\"self-bookmark\">DrawClosedCurve(Pen,PointF[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a closed cardinal spline defined by an array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawClosedCurve_System_Drawing_Pen_System_Drawing_Point___System_Single_System_Drawing_Drawing2D_FillMode_\" data-linktype=\"self-bookmark\">DrawClosedCurve(Pen,Point[],Single,FillMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a closed cardinal spline defined by an array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures using a specified tension.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawClosedCurve_System_Drawing_Pen_System_Drawing_PointF___System_Single_System_Drawing_Drawing2D_FillMode_\" data-linktype=\"self-bookmark\">DrawClosedCurve(Pen,PointF[],Single,FillMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a closed cardinal spline defined by an array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures using a specified tension.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawCurve_System_Drawing_Pen_System_Drawing_Point___\" data-linktype=\"self-bookmark\">DrawCurve(Pen,Point[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a cardinal spline through a specified array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawCurve_System_Drawing_Pen_System_Drawing_PointF___\" data-linktype=\"self-bookmark\">DrawCurve(Pen,PointF[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a cardinal spline through a specified array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawCurve_System_Drawing_Pen_System_Drawing_Point___System_Single_\" data-linktype=\"self-bookmark\">DrawCurve(Pen,Point[],Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a cardinal spline through a specified array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures using a specified tension.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawCurve_System_Drawing_Pen_System_Drawing_PointF___System_Single_\" data-linktype=\"self-bookmark\">DrawCurve(Pen,PointF[],Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a cardinal spline through a specified array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures using a specified tension.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawCurve_System_Drawing_Pen_System_Drawing_PointF___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">DrawCurve(Pen,PointF[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a cardinal spline through a specified array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures. The drawing begins offset from the beginning of the array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawCurve_System_Drawing_Pen_System_Drawing_Point___System_Int32_System_Int32_System_Single_\" data-linktype=\"self-bookmark\">DrawCurve(Pen,Point[],Int32,Int32,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a cardinal spline through a specified array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures using a specified tension.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawCurve_System_Drawing_Pen_System_Drawing_PointF___System_Int32_System_Int32_System_Single_\" data-linktype=\"self-bookmark\">DrawCurve(Pen,PointF[],Int32,Int32,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a cardinal spline through a specified array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures using a specified tension. The drawing begins offset from the beginning of the array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawEllipse_System_Drawing_Pen_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">DrawEllipse(Pen,Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws an ellipse specified by a bounding <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawEllipse_System_Drawing_Pen_System_Drawing_RectangleF_\" data-linktype=\"self-bookmark\">DrawEllipse(Pen,RectangleF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws an ellipse defined by a bounding <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawEllipse_System_Drawing_Pen_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">DrawEllipse(Pen,Int32,Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws an ellipse defined by a bounding rectangle specified by coordinates for the upper-left corner of the rectangle, a height, and a width.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawEllipse_System_Drawing_Pen_System_Single_System_Single_System_Single_System_Single_\" data-linktype=\"self-bookmark\">DrawEllipse(Pen,Single,Single,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates, a height, and a width.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawIcon_System_Drawing_Icon_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">DrawIcon(Icon,Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the image represented by the specified <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a> within the area specified by a <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawIcon_System_Drawing_Icon_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">DrawIcon(Icon,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the image represented by the specified <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a> at the specified coordinates.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawIconUnstretched_System_Drawing_Icon_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">DrawIconUnstretched(Icon,Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the image represented by the specified <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a> without scaling the image.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Point_\" data-linktype=\"self-bookmark\">DrawImage(Image,Point)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a>, using its original physical size, at the specified location.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Point___\" data-linktype=\"self-bookmark\">DrawImage(Image,Point[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified shape and size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_PointF_\" data-linktype=\"self-bookmark\">DrawImage(Image,PointF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a>, using its original physical size, at the specified location.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_PointF___\" data-linktype=\"self-bookmark\">DrawImage(Image,PointF[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified shape and size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">DrawImage(Image,Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_RectangleF_\" data-linktype=\"self-bookmark\">DrawImage(Image,RectangleF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">DrawImage(Image,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified image, using its original physical size, at the location specified by a coordinate pair.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Single_System_Single_\" data-linktype=\"self-bookmark\">DrawImage(Image,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a>, using its original physical size, at the specified location.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Point___System_Drawing_Rectangle_System_Drawing_GraphicsUnit_\" data-linktype=\"self-bookmark\">DrawImage(Image,Point[],Rectangle,GraphicsUnit)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_PointF___System_Drawing_RectangleF_System_Drawing_GraphicsUnit_\" data-linktype=\"self-bookmark\">DrawImage(Image,PointF[],RectangleF,GraphicsUnit)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Rectangle_System_Drawing_Rectangle_System_Drawing_GraphicsUnit_\" data-linktype=\"self-bookmark\">DrawImage(Image,Rectangle,Rectangle,GraphicsUnit)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_RectangleF_System_Drawing_RectangleF_System_Drawing_GraphicsUnit_\" data-linktype=\"self-bookmark\">DrawImage(Image,RectangleF,RectangleF,GraphicsUnit)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Point___System_Drawing_Rectangle_System_Drawing_GraphicsUnit_System_Drawing_Imaging_ImageAttributes_\" data-linktype=\"self-bookmark\">DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_PointF___System_Drawing_RectangleF_System_Drawing_GraphicsUnit_System_Drawing_Imaging_ImageAttributes_\" data-linktype=\"self-bookmark\">DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Int32_System_Int32_System_Drawing_Rectangle_System_Drawing_GraphicsUnit_\" data-linktype=\"self-bookmark\">DrawImage(Image,Int32,Int32,Rectangle,GraphicsUnit)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a portion of an image at a specified location.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">DrawImage(Image,Int32,Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Single_System_Single_System_Drawing_RectangleF_System_Drawing_GraphicsUnit_\" data-linktype=\"self-bookmark\">DrawImage(Image,Single,Single,RectangleF,GraphicsUnit)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a portion of an image at a specified location.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Single_System_Single_System_Single_System_Single_\" data-linktype=\"self-bookmark\">DrawImage(Image,Single,Single,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Point___System_Drawing_Rectangle_System_Drawing_GraphicsUnit_System_Drawing_Imaging_ImageAttributes_System_Drawing_Graphics_DrawImageAbort_\" data-linktype=\"self-bookmark\">DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_PointF___System_Drawing_RectangleF_System_Drawing_GraphicsUnit_System_Drawing_Imaging_ImageAttributes_System_Drawing_Graphics_DrawImageAbort_\" data-linktype=\"self-bookmark\">DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Point___System_Drawing_Rectangle_System_Drawing_GraphicsUnit_System_Drawing_Imaging_ImageAttributes_System_Drawing_Graphics_DrawImageAbort_System_Int32_\" data-linktype=\"self-bookmark\">DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_PointF___System_Drawing_RectangleF_System_Drawing_GraphicsUnit_System_Drawing_Imaging_ImageAttributes_System_Drawing_Graphics_DrawImageAbort_System_Int32_\" data-linktype=\"self-bookmark\">DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Rectangle_System_Int32_System_Int32_System_Int32_System_Int32_System_Drawing_GraphicsUnit_\" data-linktype=\"self-bookmark\">DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Rectangle_System_Single_System_Single_System_Single_System_Single_System_Drawing_GraphicsUnit_\" data-linktype=\"self-bookmark\">DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Rectangle_System_Int32_System_Int32_System_Int32_System_Int32_System_Drawing_GraphicsUnit_System_Drawing_Imaging_ImageAttributes_\" data-linktype=\"self-bookmark\">DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Rectangle_System_Single_System_Single_System_Single_System_Single_System_Drawing_GraphicsUnit_System_Drawing_Imaging_ImageAttributes_\" data-linktype=\"self-bookmark\">DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Rectangle_System_Int32_System_Int32_System_Int32_System_Int32_System_Drawing_GraphicsUnit_System_Drawing_Imaging_ImageAttributes_System_Drawing_Graphics_DrawImageAbort_\" data-linktype=\"self-bookmark\">DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Rectangle_System_Single_System_Single_System_Single_System_Single_System_Drawing_GraphicsUnit_System_Drawing_Imaging_ImageAttributes_System_Drawing_Graphics_DrawImageAbort_\" data-linktype=\"self-bookmark\">DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Rectangle_System_Int32_System_Int32_System_Int32_System_Int32_System_Drawing_GraphicsUnit_System_Drawing_Imaging_ImageAttributes_System_Drawing_Graphics_DrawImageAbort_System_IntPtr_\" data-linktype=\"self-bookmark\">DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Rectangle_System_Single_System_Single_System_Single_System_Single_System_Drawing_GraphicsUnit_System_Drawing_Imaging_ImageAttributes_System_Drawing_Graphics_DrawImageAbort_System_IntPtr_\" data-linktype=\"self-bookmark\">DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImageUnscaled_System_Drawing_Image_System_Drawing_Point_\" data-linktype=\"self-bookmark\">DrawImageUnscaled(Image,Point)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a specified image using its original physical size at a specified location.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImageUnscaled_System_Drawing_Image_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">DrawImageUnscaled(Image,Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a specified image using its original physical size at a specified location.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImageUnscaled_System_Drawing_Image_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">DrawImageUnscaled(Image,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified image using its original physical size at the location specified by a coordinate pair.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImageUnscaled_System_Drawing_Image_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">DrawImageUnscaled(Image,Int32,Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a specified image using its original physical size at a specified location.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawImageUnscaledAndClipped_System_Drawing_Image_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">DrawImageUnscaledAndClipped(Image,Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified image without scaling and clips it, if necessary, to fit in the specified rectangle.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawLine_System_Drawing_Pen_System_Drawing_Point_System_Drawing_Point_\" data-linktype=\"self-bookmark\">DrawLine(Pen,Point,Point)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a line connecting two <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawLine_System_Drawing_Pen_System_Drawing_PointF_System_Drawing_PointF_\" data-linktype=\"self-bookmark\">DrawLine(Pen,PointF,PointF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a line connecting two <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawLine_System_Drawing_Pen_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">DrawLine(Pen,Int32,Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a line connecting the two points specified by the coordinate pairs.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawLine_System_Drawing_Pen_System_Single_System_Single_System_Single_System_Single_\" data-linktype=\"self-bookmark\">DrawLine(Pen,Single,Single,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a line connecting the two points specified by the coordinate pairs.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawLines_System_Drawing_Pen_System_Drawing_Point___\" data-linktype=\"self-bookmark\">DrawLines(Pen,Point[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a series of line segments that connect an array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawLines_System_Drawing_Pen_System_Drawing_PointF___\" data-linktype=\"self-bookmark\">DrawLines(Pen,PointF[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a series of line segments that connect an array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawPath_System_Drawing_Pen_System_Drawing_Drawing2D_GraphicsPath_\" data-linktype=\"self-bookmark\">DrawPath(Pen,GraphicsPath)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawPie_System_Drawing_Pen_System_Drawing_Rectangle_System_Single_System_Single_\" data-linktype=\"self-bookmark\">DrawPie(Pen,Rectangle,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a pie shape defined by an ellipse specified by a <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure and two radial lines.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawPie_System_Drawing_Pen_System_Drawing_RectangleF_System_Single_System_Single_\" data-linktype=\"self-bookmark\">DrawPie(Pen,RectangleF,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a pie shape defined by an ellipse specified by a <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure and two radial lines.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawPie_System_Drawing_Pen_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">DrawPie(Pen,Int32,Int32,Int32,Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawPie_System_Drawing_Pen_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_\" data-linktype=\"self-bookmark\">DrawPie(Pen,Single,Single,Single,Single,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawPolygon_System_Drawing_Pen_System_Drawing_Point___\" data-linktype=\"self-bookmark\">DrawPolygon(Pen,Point[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a polygon defined by an array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawPolygon_System_Drawing_Pen_System_Drawing_PointF___\" data-linktype=\"self-bookmark\">DrawPolygon(Pen,PointF[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a polygon defined by an array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawRectangle_System_Drawing_Pen_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">DrawRectangle(Pen,Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a rectangle specified by a <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawRectangle_System_Drawing_Pen_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">DrawRectangle(Pen,Int32,Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a rectangle specified by a coordinate pair, a width, and a height.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawRectangle_System_Drawing_Pen_System_Single_System_Single_System_Single_System_Single_\" data-linktype=\"self-bookmark\">DrawRectangle(Pen,Single,Single,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a rectangle specified by a coordinate pair, a width, and a height.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawRectangles_System_Drawing_Pen_System_Drawing_Rectangle___\" data-linktype=\"self-bookmark\">DrawRectangles(Pen,Rectangle[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a series of rectangles specified by <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawRectangles_System_Drawing_Pen_System_Drawing_RectangleF___\" data-linktype=\"self-bookmark\">DrawRectangles(Pen,RectangleF[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a series of rectangles specified by <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawString_System_String_System_Drawing_Font_System_Drawing_Brush_System_Drawing_PointF_\" data-linktype=\"self-bookmark\">DrawString(String,Font,Brush,PointF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified text string at the specified location with the specified <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> and <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> objects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawString_System_String_System_Drawing_Font_System_Drawing_Brush_System_Drawing_RectangleF_\" data-linktype=\"self-bookmark\">DrawString(String,Font,Brush,RectangleF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified text string in the specified rectangle with the specified <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> and <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> objects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawString_System_String_System_Drawing_Font_System_Drawing_Brush_System_Drawing_PointF_System_Drawing_StringFormat_\" data-linktype=\"self-bookmark\">DrawString(String,Font,Brush,PointF,StringFormat)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified text string at the specified location with the specified <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> and <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> objects using the formatting attributes of the specified <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawString_System_String_System_Drawing_Font_System_Drawing_Brush_System_Drawing_RectangleF_System_Drawing_StringFormat_\" data-linktype=\"self-bookmark\">DrawString(String,Font,Brush,RectangleF,StringFormat)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified text string in the specified rectangle with the specified <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> and <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> objects using the formatting attributes of the specified <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawString_System_String_System_Drawing_Font_System_Drawing_Brush_System_Single_System_Single_\" data-linktype=\"self-bookmark\">DrawString(String,Font,Brush,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified text string at the specified location with the specified <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> and <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> objects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_DrawString_System_String_System_Drawing_Font_System_Drawing_Brush_System_Single_System_Single_System_Drawing_StringFormat_\" data-linktype=\"self-bookmark\">DrawString(String,Font,Brush,Single,Single,StringFormat)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the specified text string at the specified location with the specified <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> and <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> objects using the formatting attributes of the specified <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EndContainer_System_Drawing_Drawing2D_GraphicsContainer_\" data-linktype=\"self-bookmark\">EndContainer(GraphicsContainer)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Closes the current graphics container and restores the state of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the state saved by a call to the <span class=\"xref\">stem.Drawing.Graphics.BeginContainer*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records in the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display at a specified point.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point___System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records in the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified parallelogram.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_PointF_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records in the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display at a specified point.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_PointF___System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records in the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified parallelogram.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Rectangle_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records of the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified rectangle.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_RectangleF_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records of the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified rectangle.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records in the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display at a specified point.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point___System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records in the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified parallelogram.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_PointF_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records in the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display at a specified point.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_PointF___System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records in the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified parallelogram.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Rectangle_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records of the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified rectangle.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_RectangleF_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records of the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified rectangle.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_System_Drawing_Imaging_ImageAttributes_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records in the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display at a specified point using specified image attributes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Rectangle_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records in a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display at a specified point.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point___System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_System_Drawing_Imaging_ImageAttributes_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records in the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point___System_Drawing_Rectangle_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records in a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified parallelogram.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_PointF_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_System_Drawing_Imaging_ImageAttributes_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records in the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display at a specified point using specified image attributes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_PointF_System_Drawing_RectangleF_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records in a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display at a specified point.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_PointF___System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_System_Drawing_Imaging_ImageAttributes_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records in the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_PointF___System_Drawing_RectangleF_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records in a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified parallelogram.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Rectangle_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_System_Drawing_Imaging_ImageAttributes_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records of the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Rectangle_System_Drawing_Rectangle_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records of a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified rectangle.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_RectangleF_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_System_Drawing_Imaging_ImageAttributes_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records of the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_RectangleF_System_Drawing_RectangleF_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records of a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified rectangle.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Rectangle_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records in a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display at a specified point.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point___System_Drawing_Rectangle_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records in a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified parallelogram.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_PointF_System_Drawing_RectangleF_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records in a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display at a specified point.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_PointF___System_Drawing_RectangleF_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records in a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified parallelogram.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Rectangle_System_Drawing_Rectangle_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records of a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified rectangle.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_RectangleF_System_Drawing_RectangleF_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records of a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified rectangle.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Rectangle_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_System_Drawing_Imaging_ImageAttributes_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records in a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display at a specified point using specified image attributes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point___System_Drawing_Rectangle_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_System_Drawing_Imaging_ImageAttributes_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records in a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_PointF_System_Drawing_RectangleF_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_System_Drawing_Imaging_ImageAttributes_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records in a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display at a specified point using specified image attributes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_PointF___System_Drawing_RectangleF_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_System_Drawing_Imaging_ImageAttributes_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records in a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Rectangle_System_Drawing_Rectangle_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_System_Drawing_Imaging_ImageAttributes_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records of a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_RectangleF_System_Drawing_RectangleF_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_System_Drawing_Imaging_ImageAttributes_\" data-linktype=\"self-bookmark\">EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the records of a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_ExcludeClip_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">ExcludeClip(Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates the clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to exclude the area specified by a <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_ExcludeClip_System_Drawing_Region_\" data-linktype=\"self-bookmark\">ExcludeClip(Region)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates the clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to exclude the area specified by a <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillClosedCurve_System_Drawing_Brush_System_Drawing_Point___\" data-linktype=\"self-bookmark\">FillClosedCurve(Brush,Point[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interior of a closed cardinal spline curve defined by an array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillClosedCurve_System_Drawing_Brush_System_Drawing_PointF___\" data-linktype=\"self-bookmark\">FillClosedCurve(Brush,PointF[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interior of a closed cardinal spline curve defined by an array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillClosedCurve_System_Drawing_Brush_System_Drawing_Point___System_Drawing_Drawing2D_FillMode_\" data-linktype=\"self-bookmark\">FillClosedCurve(Brush,Point[],FillMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interior of a closed cardinal spline curve defined by an array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures using the specified fill mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillClosedCurve_System_Drawing_Brush_System_Drawing_PointF___System_Drawing_Drawing2D_FillMode_\" data-linktype=\"self-bookmark\">FillClosedCurve(Brush,PointF[],FillMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interior of a closed cardinal spline curve defined by an array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures using the specified fill mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillClosedCurve_System_Drawing_Brush_System_Drawing_Point___System_Drawing_Drawing2D_FillMode_System_Single_\" data-linktype=\"self-bookmark\">FillClosedCurve(Brush,Point[],FillMode,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interior of a closed cardinal spline curve defined by an array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures using the specified fill mode and tension.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillClosedCurve_System_Drawing_Brush_System_Drawing_PointF___System_Drawing_Drawing2D_FillMode_System_Single_\" data-linktype=\"self-bookmark\">FillClosedCurve(Brush,PointF[],FillMode,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interior of a closed cardinal spline curve defined by an array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures using the specified fill mode and tension.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillEllipse_System_Drawing_Brush_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">FillEllipse(Brush,Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interior of an ellipse defined by a bounding rectangle specified by a <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillEllipse_System_Drawing_Brush_System_Drawing_RectangleF_\" data-linktype=\"self-bookmark\">FillEllipse(Brush,RectangleF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interior of an ellipse defined by a bounding rectangle specified by a <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillEllipse_System_Drawing_Brush_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">FillEllipse(Brush,Int32,Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillEllipse_System_Drawing_Brush_System_Single_System_Single_System_Single_System_Single_\" data-linktype=\"self-bookmark\">FillEllipse(Brush,Single,Single,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillPath_System_Drawing_Brush_System_Drawing_Drawing2D_GraphicsPath_\" data-linktype=\"self-bookmark\">FillPath(Brush,GraphicsPath)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interior of a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillPie_System_Drawing_Brush_System_Drawing_Rectangle_System_Single_System_Single_\" data-linktype=\"self-bookmark\">FillPie(Brush,Rectangle,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interior of a pie section defined by an ellipse specified by a <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure and two radial lines.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillPie_System_Drawing_Brush_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">FillPie(Brush,Int32,Int32,Int32,Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillPie_System_Drawing_Brush_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_\" data-linktype=\"self-bookmark\">FillPie(Brush,Single,Single,Single,Single,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillPolygon_System_Drawing_Brush_System_Drawing_Point___\" data-linktype=\"self-bookmark\">FillPolygon(Brush,Point[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interior of a polygon defined by an array of points specified by <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillPolygon_System_Drawing_Brush_System_Drawing_PointF___\" data-linktype=\"self-bookmark\">FillPolygon(Brush,PointF[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interior of a polygon defined by an array of points specified by <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillPolygon_System_Drawing_Brush_System_Drawing_Point___System_Drawing_Drawing2D_FillMode_\" data-linktype=\"self-bookmark\">FillPolygon(Brush,Point[],FillMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interior of a polygon defined by an array of points specified by <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures using the specified fill mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillPolygon_System_Drawing_Brush_System_Drawing_PointF___System_Drawing_Drawing2D_FillMode_\" data-linktype=\"self-bookmark\">FillPolygon(Brush,PointF[],FillMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interior of a polygon defined by an array of points specified by <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures using the specified fill mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillRectangle_System_Drawing_Brush_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">FillRectangle(Brush,Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interior of a rectangle specified by a <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillRectangle_System_Drawing_Brush_System_Drawing_RectangleF_\" data-linktype=\"self-bookmark\">FillRectangle(Brush,RectangleF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interior of a rectangle specified by a <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillRectangle_System_Drawing_Brush_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">FillRectangle(Brush,Int32,Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillRectangle_System_Drawing_Brush_System_Single_System_Single_System_Single_System_Single_\" data-linktype=\"self-bookmark\">FillRectangle(Brush,Single,Single,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillRectangles_System_Drawing_Brush_System_Drawing_Rectangle___\" data-linktype=\"self-bookmark\">FillRectangles(Brush,Rectangle[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interiors of a series of rectangles specified by <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillRectangles_System_Drawing_Brush_System_Drawing_RectangleF___\" data-linktype=\"self-bookmark\">FillRectangles(Brush,RectangleF[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interiors of a series of rectangles specified by <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FillRegion_System_Drawing_Brush_System_Drawing_Region_\" data-linktype=\"self-bookmark\">FillRegion(Brush,Region)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the interior of a <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_Finalize\" data-linktype=\"self-bookmark\">Finalize()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_Flush\" data-linktype=\"self-bookmark\">Flush()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Forces execution of all pending graphics operations and returns immediately without waiting for the operations to finish.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_Flush_System_Drawing_Drawing2D_FlushIntention_\" data-linktype=\"self-bookmark\">Flush(FlushIntention)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Forces execution of all pending graphics operations with the method waiting or not waiting, as specified, to return before the operations finish.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FromHdc_System_IntPtr_\" data-linktype=\"self-bookmark\">FromHdc(IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> from the specified handle to a device context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FromHdc_System_IntPtr_System_IntPtr_\" data-linktype=\"self-bookmark\">FromHdc(IntPtr,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> from the specified handle to a device context and handle to a device.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FromHdcInternal_System_IntPtr_\" data-linktype=\"self-bookmark\">FromHdcInternal(IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for the specified device context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FromHwnd_System_IntPtr_\" data-linktype=\"self-bookmark\">FromHwnd(IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> from the specified handle to a window.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FromHwndInternal_System_IntPtr_\" data-linktype=\"self-bookmark\">FromHwndInternal(IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for the specified windows handle.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_FromImage_System_Drawing_Image_\" data-linktype=\"self-bookmark\">FromImage(Image)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> from the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_GetContextInfo\" data-linktype=\"self-bookmark\">GetContextInfo()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the cumulative graphics context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_GetHalftonePalette\" data-linktype=\"self-bookmark\">GetHalftonePalette()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a handle to the current Windows halftone palette.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_GetHdc\" data-linktype=\"self-bookmark\">GetHdc()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the handle to the device context associated with this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_GetNearestColor_System_Drawing_Color_\" data-linktype=\"self-bookmark\">GetNearestColor(Color)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the nearest color to the specified <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_IntersectClip_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">IntersectClip(Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates the clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the intersection of the current clip region and the specified <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_IntersectClip_System_Drawing_RectangleF_\" data-linktype=\"self-bookmark\">IntersectClip(RectangleF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates the clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the intersection of the current clip region and the specified <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_IntersectClip_System_Drawing_Region_\" data-linktype=\"self-bookmark\">IntersectClip(Region)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates the clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the intersection of the current clip region and the specified <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_IsVisible_System_Drawing_Point_\" data-linktype=\"self-bookmark\">IsVisible(Point)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the specified <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure is contained within the visible clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_IsVisible_System_Drawing_PointF_\" data-linktype=\"self-bookmark\">IsVisible(PointF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the specified <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure is contained within the visible clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_IsVisible_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">IsVisible(Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the rectangle specified by a <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure is contained within the visible clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_IsVisible_System_Drawing_RectangleF_\" data-linktype=\"self-bookmark\">IsVisible(RectangleF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the rectangle specified by a <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure is contained within the visible clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_IsVisible_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">IsVisible(Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the point specified by a pair of coordinates is contained within the visible clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_IsVisible_System_Single_System_Single_\" data-linktype=\"self-bookmark\">IsVisible(Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the point specified by a pair of coordinates is contained within the visible clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_IsVisible_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">IsVisible(Int32,Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the rectangle specified by a pair of coordinates, a width, and a height is contained within the visible clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_IsVisible_System_Single_System_Single_System_Single_System_Single_\" data-linktype=\"self-bookmark\">IsVisible(Single,Single,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the rectangle specified by a pair of coordinates, a width, and a height is contained within the visible clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_MeasureCharacterRanges_System_String_System_Drawing_Font_System_Drawing_RectangleF_System_Drawing_StringFormat_\" data-linktype=\"self-bookmark\">MeasureCharacterRanges(String,Font,RectangleF,StringFormat)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an array of <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> objects, each of which bounds a range of character positions within the specified string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_MeasureString_System_String_System_Drawing_Font_\" data-linktype=\"self-bookmark\">MeasureString(String,Font)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Measures the specified string when drawn with the specified <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_MeasureString_System_String_System_Drawing_Font_System_Drawing_SizeF_\" data-linktype=\"self-bookmark\">MeasureString(String,Font,SizeF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Measures the specified string when drawn with the specified <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> within the specified layout area.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_MeasureString_System_String_System_Drawing_Font_System_Int32_\" data-linktype=\"self-bookmark\">MeasureString(String,Font,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Measures the specified string when drawn with the specified <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_MeasureString_System_String_System_Drawing_Font_System_Drawing_PointF_System_Drawing_StringFormat_\" data-linktype=\"self-bookmark\">MeasureString(String,Font,PointF,StringFormat)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Measures the specified string when drawn with the specified <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> and formatted with the specified <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_MeasureString_System_String_System_Drawing_Font_System_Drawing_SizeF_System_Drawing_StringFormat_\" data-linktype=\"self-bookmark\">MeasureString(String,Font,SizeF,StringFormat)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Measures the specified string when drawn with the specified <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> and formatted with the specified <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_MeasureString_System_String_System_Drawing_Font_System_Int32_System_Drawing_StringFormat_\" data-linktype=\"self-bookmark\">MeasureString(String,Font,Int32,StringFormat)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Measures the specified string when drawn with the specified <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> and formatted with the specified <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_MeasureString_System_String_System_Drawing_Font_System_Drawing_SizeF_System_Drawing_StringFormat_System_Int32__System_Int32__\" data-linktype=\"self-bookmark\">MeasureString(String,Font,SizeF,StringFormat,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Measures the specified string when drawn with the specified <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> and formatted with the specified <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_MultiplyTransform_System_Drawing_Drawing2D_Matrix_\" data-linktype=\"self-bookmark\">MultiplyTransform(Matrix)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Multiplies the world transformation of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> and specified the <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_MultiplyTransform_System_Drawing_Drawing2D_Matrix_System_Drawing_Drawing2D_MatrixOrder_\" data-linktype=\"self-bookmark\">MultiplyTransform(Matrix,MatrixOrder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Multiplies the world transformation of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> and specified the <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> in the specified order.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_ReleaseHdc\" data-linktype=\"self-bookmark\">ReleaseHdc()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases a device context handle obtained by a previous call to the <span class=\"xref\">stem.Drawing.Graphics.GetHdc*</span> method of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_ReleaseHdc_System_IntPtr_\" data-linktype=\"self-bookmark\">ReleaseHdc(IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases a device context handle obtained by a previous call to the <span class=\"xref\">stem.Drawing.Graphics.GetHdc*</span> method of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_ReleaseHdcInternal_System_IntPtr_\" data-linktype=\"self-bookmark\">ReleaseHdcInternal(IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases a handle to a device context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_ResetClip\" data-linktype=\"self-bookmark\">ResetClip()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resets the clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to an infinite region.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_ResetTransform\" data-linktype=\"self-bookmark\">ResetTransform()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resets the world transformation matrix of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the identity matrix.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_Restore_System_Drawing_Drawing2D_GraphicsState_\" data-linktype=\"self-bookmark\">Restore(GraphicsState)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Restores the state of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the state represented by a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicsstate\" data-linktype=\"relative-path\">GraphicsState</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_RotateTransform_System_Single_\" data-linktype=\"self-bookmark\">RotateTransform(Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies the specified rotation to the transformation matrix of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_RotateTransform_System_Single_System_Drawing_Drawing2D_MatrixOrder_\" data-linktype=\"self-bookmark\">RotateTransform(Single,MatrixOrder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies the specified rotation to the transformation matrix of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> in the specified order.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_Save\" data-linktype=\"self-bookmark\">Save()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves the current state of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> and identifies the saved state with a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicsstate\" data-linktype=\"relative-path\">GraphicsState</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_ScaleTransform_System_Single_System_Single_\" data-linktype=\"self-bookmark\">ScaleTransform(Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies the specified scaling operation to the transformation matrix of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> by prepending it to the object&#39;s transformation matrix.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_ScaleTransform_System_Single_System_Single_System_Drawing_Drawing2D_MatrixOrder_\" data-linktype=\"self-bookmark\">ScaleTransform(Single,Single,MatrixOrder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies the specified scaling operation to the transformation matrix of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> in the specified order.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_SetClip_System_Drawing_Drawing2D_GraphicsPath_\" data-linktype=\"self-bookmark\">SetClip(GraphicsPath)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the specified <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_SetClip_System_Drawing_Graphics_\" data-linktype=\"self-bookmark\">SetClip(Graphics)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the <code>Clip</code> property of the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_SetClip_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">SetClip(Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the rectangle specified by a <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_SetClip_System_Drawing_RectangleF_\" data-linktype=\"self-bookmark\">SetClip(RectangleF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the rectangle specified by a <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_SetClip_System_Drawing_Drawing2D_GraphicsPath_System_Drawing_Drawing2D_CombineMode_\" data-linktype=\"self-bookmark\">SetClip(GraphicsPath,CombineMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the result of the specified operation combining the current clip region and the specified <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_SetClip_System_Drawing_Graphics_System_Drawing_Drawing2D_CombineMode_\" data-linktype=\"self-bookmark\">SetClip(Graphics,CombineMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the result of the specified combining operation of the current clip region and the <span class=\"xref\">stem.Drawing.Graphics.Clip*</span> property of the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_SetClip_System_Drawing_Rectangle_System_Drawing_Drawing2D_CombineMode_\" data-linktype=\"self-bookmark\">SetClip(Rectangle,CombineMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the result of the specified operation combining the current clip region and the rectangle specified by a <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_SetClip_System_Drawing_RectangleF_System_Drawing_Drawing2D_CombineMode_\" data-linktype=\"self-bookmark\">SetClip(RectangleF,CombineMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the result of the specified operation combining the current clip region and the rectangle specified by a <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_SetClip_System_Drawing_Region_System_Drawing_Drawing2D_CombineMode_\" data-linktype=\"self-bookmark\">SetClip(Region,CombineMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the result of the specified operation combining the current clip region and the specified <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_TransformPoints_System_Drawing_Drawing2D_CoordinateSpace_System_Drawing_Drawing2D_CoordinateSpace_System_Drawing_Point___\" data-linktype=\"self-bookmark\">TransformPoints(CoordinateSpace,CoordinateSpace,Point[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Transforms an array of points from one coordinate space to another using the current world and page transformations of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_TransformPoints_System_Drawing_Drawing2D_CoordinateSpace_System_Drawing_Drawing2D_CoordinateSpace_System_Drawing_PointF___\" data-linktype=\"self-bookmark\">TransformPoints(CoordinateSpace,CoordinateSpace,PointF[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Transforms an array of points from one coordinate space to another using the current world and page transformations of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_TranslateClip_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">TranslateClip(Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Translates the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> by specified amounts in the horizontal and vertical directions.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_TranslateClip_System_Single_System_Single_\" data-linktype=\"self-bookmark\">TranslateClip(Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Translates the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> by specified amounts in the horizontal and vertical directions.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_TranslateTransform_System_Single_System_Single_\" data-linktype=\"self-bookmark\">TranslateTransform(Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Changes the origin of the coordinate system by prepending the specified translation to the transformation matrix of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Graphics_TranslateTransform_System_Single_System_Single_System_Drawing_Drawing2D_MatrixOrder_\" data-linktype=\"self-bookmark\">TranslateTransform(Single,Single,MatrixOrder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Changes the origin of the coordinate system by applying the specified translation to the transformation matrix of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> in the specified order.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_Clip\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_Clip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clip</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> that limits the drawing region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Region Clip { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> that limits the portion of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> that is currently available for drawing.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Modifying the <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> object returned by the Clip property does not affect subsequent drawing with the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object. To change the clip region, replace the Clip property value with a new <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> object. To determine whether the clipping region is infinite, retrieve the Clip property and call its <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_IsInfinite_\" data-linktype=\"relative-path\">IsInfinite</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the Clip property. This example is designed to be used with Windows Forms. Paste the code into a form and call the <code>SetAndFillClip</code> method when handling the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.GraphicsProperties#4\">private:\n   void SetAndFillClip( PaintEventArgs^ e )\n   {\n      // Set the Clip property to a new region.\n      e-&gt;Graphics-&gt;Clip = gcnew System::Drawing::Region( Rectangle(10,10,100,200) );\n\n      // Fill the region.\n      e-&gt;Graphics-&gt;FillRegion( Brushes::LightSalmon, e-&gt;Graphics-&gt;Clip );\n\n      // Demonstrate the clip region by drawing a string\n      // at the outer edge of the region.\n      e-&gt;Graphics-&gt;DrawString( &quot;Outside of Clip&quot;, gcnew System::Drawing::Font( &quot;Arial&quot;,12.0F,FontStyle::Regular ), Brushes::Black, 0.0F, 0.0F );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.GraphicsProperties#4\">    Private Sub SetAndFillClip(ByVal e As PaintEventArgs)\n\n        &#39; Set the Clip property to a new region.\n        e.Graphics.Clip = New Region(New Rectangle(10, 10, 100, 200))\n\n        &#39; Fill the region.\n        e.Graphics.FillRegion(Brushes.LightSalmon, e.Graphics.Clip)\n\n        &#39; Demonstrate the clip region by drawing a string\n        &#39; at the outer edge of the region.\n        e.Graphics.DrawString(&quot;Outside of Clip&quot;, _\n            New Font(&quot;Arial&quot;, 12.0F, FontStyle.Regular), _\n            Brushes.Black, 0.0F, 0.0F)\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.GraphicsProperties#4\">    private void SetAndFillClip(PaintEventArgs e)\n    {\n\n        // Set the Clip property to a new region.\n        e.Graphics.Clip = new Region(new Rectangle(10, 10, 100, 200));\n\n        // Fill the region.\n        e.Graphics.FillRegion(Brushes.LightSalmon, e.Graphics.Clip);\n\n        // Demonstrate the clip region by drawing a string\n        // at the outer edge of the region.\n        e.Graphics.DrawString(&quot;Outside of Clip&quot;, new Font(&quot;Arial&quot;, \n            12.0F, FontStyle.Regular), Brushes.Black, 0.0F, 0.0F);\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_ClipBounds\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_ClipBounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClipBounds</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that bounds the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.RectangleF ClipBounds { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that represents a bounding rectangle for the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The unit for resulting rectangle is designated by the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_PageUnit_\" data-linktype=\"relative-path\">PageUnit</a> property. The default unit is pixels. A <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is typically associated with a control and the origin of the rectangle will be relative to the client area of that control.  </p>\n<p> If the clipping region is infinite, the ClipBounds property returns a meaningless large rectangle. To determine whether the clipping region is infinite, retrieve the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Clip_\" data-linktype=\"relative-path\">Clip</a> property and call its <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_IsInfinite_\" data-linktype=\"relative-path\">IsInfinite</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_CompositingMode\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_CompositingMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CompositingMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that specifies how composited images are drawn to this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.CompositingMode CompositingMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.compositingmode\" data-linktype=\"relative-path\">CompositingMode</a></div>\r\n                  </div>\r\n                  <p>This property specifies a member of the <a class=\"xref\" href=\"system.drawing.drawing2d.compositingmode\" data-linktype=\"relative-path\">CompositingMode</a> enumeration. The default is <a class=\"xref\" href=\"system.drawing.drawing2d.compositingmode\" data-linktype=\"relative-path\">CompositingMode</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The compositing mode determines whether pixels from a source image overwrite or are combined with background pixels.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You should not use a CompositingMode property value of <a class=\"xref\" href=\"system.drawing.drawing2d.compositingmode\" data-linktype=\"relative-path\">CompositingMode</a> when the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_TextRenderingHint_\" data-linktype=\"relative-path\">TextRenderingHint</a> property is set to <a class=\"xref\" href=\"system.drawing.text.textrenderinghint\" data-linktype=\"relative-path\">TextRenderingHint</a>. An exception could occur or the image may not render correctly.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_CompositingQuality\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_CompositingQuality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CompositingQuality</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the rendering quality of composited images drawn to this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.CompositingQuality CompositingQuality { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.compositingquality\" data-linktype=\"relative-path\">CompositingQuality</a></div>\r\n                  </div>\r\n                  <p>This property specifies a member of the <a class=\"xref\" href=\"system.drawing.drawing2d.compositingquality\" data-linktype=\"relative-path\">CompositingQuality</a> enumeration. The default is <a class=\"xref\" href=\"system.drawing.drawing2d.compositingquality\" data-linktype=\"relative-path\">CompositingQuality</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The compositing quality determines the rendering quality level of composited images.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DpiX\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DpiX_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DpiX</div>        \r\n          </div>\r\n    \r\n            <p>Gets the horizontal resolution of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public float DpiX { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </div>\r\n                  <p>The value, in dots per inch, for the horizontal resolution supported by this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about creating high-resolution applications, see  </p>\n<p> <a href=\"http://go.microsoft.com/fwlink/?LinkId=159804\" data-linktype=\"external\">High DPI</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following method shows the use of the DpiX and <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DpiY_\" data-linktype=\"relative-path\">DpiY</a> properties. This example is designed for use with a Windows Form. To run this example, paste it into a form that contains a <a class=\"xref\" href=\"system.windows.forms.listbox\" data-linktype=\"relative-path\">ListBox</a> named listBox1 and call this method from the form&#39;s constructor.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.MiscExamples#4\">    private void PopulateListBoxWithGraphicsResolution()\n    {\n        Graphics boxGraphics = listBox1.CreateGraphics();\n        Graphics formGraphics = this.CreateGraphics();\n\n        listBox1.Items.Add(&quot;ListBox horizontal resolution: &quot; \n            + boxGraphics.DpiX);\n        listBox1.Items.Add(&quot;ListBox vertical resolution: &quot; \n            + boxGraphics.DpiY);\n\n        boxGraphics.Dispose();\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.MiscExamples#4\">private:\n   void PopulateListBoxWithGraphicsResolution()\n   {\n      Graphics^ boxGraphics = listBox1-&gt;CreateGraphics();\n\n      // Graphics* formGraphics = this-&gt;CreateGraphics();\n      listBox1-&gt;Items-&gt;Add( String::Format( &quot;ListBox horizontal resolution: {0}&quot;, boxGraphics-&gt;DpiX ) );\n      listBox1-&gt;Items-&gt;Add( String::Format( &quot;ListBox vertical resolution: {0}&quot;, boxGraphics-&gt;DpiY ) );\n      delete boxGraphics;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.MiscExamples#4\">    Private Sub PopulateListBoxWithGraphicsResolution()\n        Dim boxGraphics As Graphics = listBox1.CreateGraphics()\n        Dim formGraphics As Graphics = Me.CreateGraphics()\n\n        listBox1.Items.Add(&quot;ListBox horizontal resolution: &quot; _\n            &amp; boxGraphics.DpiX)\n        listBox1.Items.Add(&quot;ListBox vertical resolution: &quot; _\n            &amp; boxGraphics.DpiY)\n\n        boxGraphics.Dispose()\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DpiY\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DpiY_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DpiY</div>        \r\n          </div>\r\n    \r\n            <p>Gets the vertical resolution of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public float DpiY { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </div>\r\n                  <p>The value, in dots per inch, for the vertical resolution supported by this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about creating high-resolution applications, see  </p>\n<p> <a href=\"http://go.microsoft.com/fwlink/?LinkId=159804\" data-linktype=\"external\">High DPI</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following method shows the use of the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DpiX_\" data-linktype=\"relative-path\">DpiX</a> and DpiY properties. This example is designed for use with a Windows Form. To run this example, paste it into a form that contains a <a class=\"xref\" href=\"system.windows.forms.listbox\" data-linktype=\"relative-path\">ListBox</a> named listBox1 and call this method from the form&#39;s constructor.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.MiscExamples#4\">    private void PopulateListBoxWithGraphicsResolution()\n    {\n        Graphics boxGraphics = listBox1.CreateGraphics();\n        Graphics formGraphics = this.CreateGraphics();\n\n        listBox1.Items.Add(&quot;ListBox horizontal resolution: &quot; \n            + boxGraphics.DpiX);\n        listBox1.Items.Add(&quot;ListBox vertical resolution: &quot; \n            + boxGraphics.DpiY);\n\n        boxGraphics.Dispose();\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.MiscExamples#4\">private:\n   void PopulateListBoxWithGraphicsResolution()\n   {\n      Graphics^ boxGraphics = listBox1-&gt;CreateGraphics();\n\n      // Graphics* formGraphics = this-&gt;CreateGraphics();\n      listBox1-&gt;Items-&gt;Add( String::Format( &quot;ListBox horizontal resolution: {0}&quot;, boxGraphics-&gt;DpiX ) );\n      listBox1-&gt;Items-&gt;Add( String::Format( &quot;ListBox vertical resolution: {0}&quot;, boxGraphics-&gt;DpiY ) );\n      delete boxGraphics;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.MiscExamples#4\">    Private Sub PopulateListBoxWithGraphicsResolution()\n        Dim boxGraphics As Graphics = listBox1.CreateGraphics()\n        Dim formGraphics As Graphics = Me.CreateGraphics()\n\n        listBox1.Items.Add(&quot;ListBox horizontal resolution: &quot; _\n            &amp; boxGraphics.DpiX)\n        listBox1.Items.Add(&quot;ListBox vertical resolution: &quot; _\n            &amp; boxGraphics.DpiY)\n\n        boxGraphics.Dispose()\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_InterpolationMode\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_InterpolationMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InterpolationMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the interpolation mode associated with this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.InterpolationMode InterpolationMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.interpolationmode\" data-linktype=\"relative-path\">InterpolationMode</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.drawing.drawing2d.interpolationmode\" data-linktype=\"relative-path\">InterpolationMode</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The interpolation mode determines how intermediate values between two endpoints are calculated.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_IsClipEmpty\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_IsClipEmpty_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsClipEmpty</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is empty.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsClipEmpty { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is empty; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_IsVisibleClipEmpty\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_IsVisibleClipEmpty_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisibleClipEmpty</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the visible clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is empty.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisibleClipEmpty { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the visible portion of the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is empty; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The visible clipping region is the intersection of the clipping region of this <code>Graphics</code> and the clipping region of the window.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_PageScale\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_PageScale_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PageScale</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the scaling between world units and page units for this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public float PageScale { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </div>\r\n                  <p>This property specifies a value for the scaling between world units and page units for this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the PageScale and <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_TranslateTransform_\" data-linktype=\"relative-path\">TranslateTransform</a> members to change the scale and origin when you draw a rectangle.  </p>\n<p> This example is designed to be used with Windows Forms. Paste the code into a form and call the <code>ChangePageScaleAndTranslateTransform</code> method when handling the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.GraphicsProperties#2\">private:\n   void ChangePageScaleAndTranslateTransform( PaintEventArgs^ e )\n   {\n      // Create a rectangle.\n      Rectangle rectangle1 = Rectangle(20,20,50,100);\n\n      // Draw its outline.\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::SlateBlue, rectangle1 );\n\n      // Change the page scale.  \n      e-&gt;Graphics-&gt;PageScale = 2.0F;\n\n      // Call TranslateTransform to change the origin of the\n      //  Graphics object.\n      e-&gt;Graphics-&gt;TranslateTransform( 10.0F, 10.0F );\n\n      // Draw the rectangle again.\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Tomato, rectangle1 );\n\n      // Set the page scale and origin back to their original values.\n      e-&gt;Graphics-&gt;PageScale = 1.0F;\n      e-&gt;Graphics-&gt;ResetTransform();\n      SolidBrush^ transparentBrush = gcnew SolidBrush( Color::FromArgb( 50, Color::Yellow ) );\n\n      // Create a new rectangle with the coordinates you expect\n      // after setting PageScale and calling TranslateTransform:\n      // x = (10 + 20) * 2\n      // y = (10 + 20) * 2\n      // Width = 50 * 2\n      // Length = 100 * 2\n      Rectangle newRectangle = Rectangle(60,60,100,200);\n\n      // Fill in the rectangle with a semi-transparent color.\n      e-&gt;Graphics-&gt;FillRectangle( transparentBrush, newRectangle );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.GraphicsProperties#2\">    Private Sub ChangePageScaleAndTranslateTransform(ByVal e As _\n        PaintEventArgs)\n\n        &#39; Create a rectangle.\n        Dim rectangle1 As New Rectangle(20, 20, 50, 100)\n\n        &#39; Draw its outline.\n        e.Graphics.DrawRectangle(Pens.SlateBlue, rectangle1)\n\n        &#39; Change the page scale.  \n        e.Graphics.PageScale = 2.0F\n\n        &#39; Call TranslateTransform to change the origin of the\n        &#39;  Graphics object.\n        e.Graphics.TranslateTransform(10.0F, 10.0F)\n\n        &#39; Draw the rectangle again.\n        e.Graphics.DrawRectangle(Pens.Tomato, rectangle1)\n\n        &#39; Set the page scale and origin back to their original values.\n        e.Graphics.PageScale = 1.0F\n        e.Graphics.ResetTransform()\n\n        Dim transparentBrush As New SolidBrush(Color.FromArgb(50, Color.Yellow))\n\n        &#39; Create a new rectangle with the coordinates you expect\n        &#39; after setting PageScale and calling TranslateTransform:\n        &#39; x = (10 + 20) * 2\n        &#39; y = (10 + 20) * 2\n        &#39; Width = 50 * 2\n        &#39; Length = 100 * 2\n        Dim newRectangle As Rectangle = New Rectangle(60, 60, 100, 200)\n\n        &#39; Fill in the rectangle with a semi-transparent color.\n        e.Graphics.FillRectangle(transparentBrush, newRectangle)\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.GraphicsProperties#2\">    private void ChangePageScaleAndTranslateTransform(PaintEventArgs e)\n    {\n\n        // Create a rectangle.\n        Rectangle rectangle1 = new Rectangle(20, 20, 50, 100);\n\n        // Draw its outline.\n        e.Graphics.DrawRectangle(Pens.SlateBlue, rectangle1);\n\n        // Change the page scale.  \n        e.Graphics.PageScale = 2.0F;\n\n        // Call TranslateTransform to change the origin of the\n        //  Graphics object.\n        e.Graphics.TranslateTransform(10.0F, 10.0F);\n\n        // Draw the rectangle again.\n        e.Graphics.DrawRectangle(Pens.Tomato, rectangle1);\n\n        // Set the page scale and origin back to their original values.\n        e.Graphics.PageScale = 1.0F;\n        e.Graphics.ResetTransform();\n\n        SolidBrush transparentBrush = new SolidBrush(Color.FromArgb(50,\n            Color.Yellow));\n\n        // Create a new rectangle with the coordinates you expect\n        // after setting PageScale and calling TranslateTransform:\n        // x = (10 + 20) * 2\n        // y = (10 + 20) * 2\n        // Width = 50 * 2\n        // Length = 100 * 2\n        Rectangle newRectangle = new Rectangle(60, 60, 100, 200);\n\n        // Fill in the rectangle with a semi-transparent color.\n        e.Graphics.FillRectangle(transparentBrush, newRectangle);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_PageUnit\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_PageUnit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PageUnit</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the unit of measure used for page coordinates in this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.GraphicsUnit PageUnit { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> values other than <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>PageUnit is set to <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a>, which is not a physical unit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The graphics unit is the unit of measure used for page coordinates in this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the effect of changing the PageUnit property.  </p>\n<p> This example is designed to be used with Windows Forms. Paste the code into a form and call the <code>ChangePageUnit</code> method when handling the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.GraphicsProperties#3\">private:\n   void ChangePageUnit( PaintEventArgs^ e )\n   {\n      // Create a rectangle.\n      Rectangle rectangle1 = Rectangle(20,20,50,100);\n\n      // Draw its outline.\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::SlateBlue, rectangle1 );\n\n      // Change the page scale.  \n      e-&gt;Graphics-&gt;PageUnit = GraphicsUnit::Point;\n\n      // Draw the rectangle again.\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Tomato, rectangle1 );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.GraphicsProperties#3\">    Private Sub ChangePageUnit(ByVal e As PaintEventArgs)\n\n        &#39; Create a rectangle.\n        Dim rectangle1 As New Rectangle(20, 20, 50, 100)\n\n        &#39; Draw its outline.\n        e.Graphics.DrawRectangle(Pens.SlateBlue, rectangle1)\n\n        &#39; Change the page scale.  \n        e.Graphics.PageUnit = GraphicsUnit.Point\n\n        &#39; Draw the rectangle again.\n        e.Graphics.DrawRectangle(Pens.Tomato, rectangle1)\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.GraphicsProperties#3\">    private void ChangePageUnit(PaintEventArgs e)\n    {\n\n        // Create a rectangle.\n        Rectangle rectangle1 = new Rectangle(20, 20, 50, 100);\n\n        // Draw its outline.\n        e.Graphics.DrawRectangle(Pens.SlateBlue, rectangle1);\n\n        // Change the page scale.  \n        e.Graphics.PageUnit = GraphicsUnit.Point;\n\n        // Draw the rectangle again.\n        e.Graphics.DrawRectangle(Pens.Tomato, rectangle1);\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_PixelOffsetMode\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_PixelOffsetMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PixelOffsetMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or set a value specifying how pixels are offset during rendering of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.PixelOffsetMode PixelOffsetMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.pixeloffsetmode\" data-linktype=\"relative-path\">PixelOffsetMode</a></div>\r\n                  </div>\r\n                  <p>This property specifies a member of the <a class=\"xref\" href=\"system.drawing.drawing2d.pixeloffsetmode\" data-linktype=\"relative-path\">PixelOffsetMode</a> enumeration</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this property to specify either higher quality, slower rendering, or lower quality, faster rendering of the contents of this<a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_RenderingOrigin\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_RenderingOrigin_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RenderingOrigin</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the rendering origin of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for dithering and for hatch brushes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Point RenderingOrigin { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure that represents the dither origin for 8-bits-per-pixel and 16-bits-per-pixel dithering and is also used to set the origin for hatch brushes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_SmoothingMode\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_SmoothingMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SmoothingMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the rendering quality for this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.SmoothingMode SmoothingMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.smoothingmode\" data-linktype=\"relative-path\">SmoothingMode</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.drawing.drawing2d.smoothingmode\" data-linktype=\"relative-path\">SmoothingMode</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The smoothing mode specifies whether lines, curves, and the edges of filled areas use smoothing (also called antialiasing). One exception is that path gradient brushes do not obey the smoothing mode. Areas filled using a <a class=\"xref\" href=\"system.drawing.drawing2d.pathgradientbrush\" data-linktype=\"relative-path\">PathGradientBrush</a> are rendered the same way (aliased) regardless of the SmoothingMode property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following method demonstrates the effects of setting the <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_DashCap_\" data-linktype=\"relative-path\">DashCap</a>, <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_DashPattern_\" data-linktype=\"relative-path\">DashPattern</a>, and SmoothingMode properties. The output of the example is shown in the following illustration.  </p>\n<p> <img src=\"add/media/gdi-smoothingmode.png\" alt=\"Lines with and without smoothing applied.\" title=\"Lines with and without smoothing applied.\" data-linktype=\"relative-path\">  </p>\n<p> This example is designed to be used with Windows Forms. Paste the code into a form and call the <code>ShowPensAndSmoothingMode</code> method when handling the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.PensExample#3\">    private void ShowPensAndSmoothingMode(PaintEventArgs e)\n    {\n\n        // Set the SmoothingMode property to smooth the line.\n        e.Graphics.SmoothingMode = \n            System.Drawing.Drawing2D.SmoothingMode.AntiAlias;\n\n        // Create a new Pen object.\n        Pen greenPen = new Pen(Color.Green);\n\n        // Set the width to 6.\n        greenPen.Width = 6.0F;\n\n        // Set the DashCap to round.\n        greenPen.DashCap = System.Drawing.Drawing2D.DashCap.Round;\n\n        // Create a custom dash pattern.\n        greenPen.DashPattern = new float[]{4.0F, 2.0F, 1.0F, 3.0F};\n\n        // Draw a line.\n        e.Graphics.DrawLine(greenPen, 20.0F, 20.0F, 100.0F, 240.0F);\n\n        // Change the SmoothingMode to none.\n        e.Graphics.SmoothingMode = \n            System.Drawing.Drawing2D.SmoothingMode.None;\n\n        // Draw another line.\n        e.Graphics.DrawLine(greenPen, 100.0F, 240.0F, 160.0F, 20.0F);\n\n        // Dispose of the custom pen.\n        greenPen.Dispose();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.PensExample#3\">    Private Sub ShowPensAndSmoothingMode(ByVal e As PaintEventArgs)\n\n        &#39; Set the SmoothingMode property to smooth the line.\n        e.Graphics.SmoothingMode = Drawing2D.SmoothingMode.AntiAlias\n\n        &#39; Create a new Pen object.\n        Dim greenPen As New Pen(Color.Green)\n\n        &#39; Set the width to 6.\n        greenPen.Width = 6.0F\n\n        &#39; Set the DashCap to round.\n        greenPen.DashCap = Drawing2D.DashCap.Round\n\n        &#39; Create a custom dash pattern.\n        greenPen.DashPattern = New Single() {4.0F, 2.0F, 1.0F, 3.0F}\n\n        &#39; Draw a line.\n        e.Graphics.DrawLine(greenPen, 20.0F, 20.0F, 100.0F, 240.0F)\n\n        &#39; Change the SmoothingMode to none.\n        e.Graphics.SmoothingMode = Drawing2D.SmoothingMode.None\n\n        &#39; Draw another line.\n        e.Graphics.DrawLine(greenPen, 100.0F, 240.0F, 160.0F, 20.0F)\n\n        &#39; Dispose of the custom pen.\n        greenPen.Dispose()\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.PensExample#3\">private:\n   void ShowPensAndSmoothingMode( PaintEventArgs^ e )\n   {\n      // Set the SmoothingMode property to smooth the line.\n      e-&gt;Graphics-&gt;SmoothingMode = System::Drawing::Drawing2D::SmoothingMode::AntiAlias;\n\n      // Create a new Pen object.\n      Pen^ greenPen = gcnew Pen( Color::Green );\n\n      // Set the width to 6.\n      greenPen-&gt;Width = 6.0F;\n\n      // Set the DashCap to round.\n      greenPen-&gt;DashCap = System::Drawing::Drawing2D::DashCap::Round;\n\n      // Create a custom dash pattern.\n      array&lt;Single&gt;^temp0 = {4.0F,2.0F,1.0F,3.0F};\n      greenPen-&gt;DashPattern = temp0;\n\n      // Draw a line.\n      e-&gt;Graphics-&gt;DrawLine( greenPen, 20.0F, 20.0F, 100.0F, 240.0F );\n\n      // Change the SmoothingMode to none.\n      e-&gt;Graphics-&gt;SmoothingMode = System::Drawing::Drawing2D::SmoothingMode::None;\n\n      // Draw another line.\n      e-&gt;Graphics-&gt;DrawLine( greenPen, 100.0F, 240.0F, 160.0F, 20.0F );\n\n      // Dispose of the custom pen.\n      delete greenPen;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_TextContrast\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_TextContrast_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TextContrast</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the gamma correction value for rendering text.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int TextContrast { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The gamma correction value used for rendering antialiased and ClearType text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The gamma correction value must be between 0 and 12. The default value is 4.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_TextRenderingHint_\" data-linktype=\"relative-path\">TextRenderingHint</a> and TextContrast properties.  </p>\n<p> This example is designed to be used with Windows Forms. Paste the code into a form and call the <code>ChangeTextRenderingHintAndTextContrast</code> method when handling the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.GraphicsProperties#5\">private:\n   void ChangeTextRenderingHintAndTextContrast( PaintEventArgs^ e )\n   {\n      // Retrieve the graphics object.\n      Graphics^ formGraphics = e-&gt;Graphics;\n\n      // Declare a new font.\n      System::Drawing::Font^ myFont = gcnew System::Drawing::Font( FontFamily::GenericSansSerif,20,FontStyle::Regular );\n\n      // Set the TextRenderingHint property.\n      formGraphics-&gt;TextRenderingHint = System::Drawing::Text::TextRenderingHint::SingleBitPerPixel;\n\n      // Draw the string.\n      formGraphics-&gt;DrawString( &quot;Hello World&quot;, myFont, Brushes::Firebrick, 20.0F, 20.0F );\n\n      // Change the TextRenderingHint property.\n      formGraphics-&gt;TextRenderingHint = System::Drawing::Text::TextRenderingHint::AntiAliasGridFit;\n\n      // Draw the string again.\n      formGraphics-&gt;DrawString( &quot;Hello World&quot;, myFont, Brushes::Firebrick, 20.0F, 60.0F );\n\n      // Set the text contrast to a high-contrast setting.\n      formGraphics-&gt;TextContrast = 0;\n\n      // Draw the string.\n      formGraphics-&gt;DrawString( &quot;Hello World&quot;, myFont, Brushes::DodgerBlue, 20.0F, 100.0F );\n\n      // Set the text contrast to a low-contrast setting.\n      formGraphics-&gt;TextContrast = 12;\n\n      // Draw the string again.\n      formGraphics-&gt;DrawString( &quot;Hello World&quot;, myFont, Brushes::DodgerBlue, 20.0F, 140.0F );\n\n      // Dispose of the font object.\n      delete myFont;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.GraphicsProperties#5\">    Private Sub ChangeTextRenderingHintAndTextContrast(ByVal e As _\n        PaintEventArgs)\n\n        &#39; Retrieve the graphics object.\n        Dim formGraphics As Graphics = e.Graphics\n\n        &#39; Declare a new font.\n        Dim myFont As Font = New Font(FontFamily.GenericSansSerif, _\n            20, FontStyle.Regular)\n\n        &#39; Set the TextRenderingHint property.\n        formGraphics.TextRenderingHint = _\n            System.Drawing.Text.TextRenderingHint.SingleBitPerPixel\n\n        &#39; Draw the string.\n        formGraphics.DrawString(&quot;Hello World&quot;, myFont, _\n            Brushes.Firebrick, 20.0F, 20.0F)\n\n        &#39; Change the TextRenderingHint property.\n        formGraphics.TextRenderingHint = _\n            System.Drawing.Text.TextRenderingHint.AntiAliasGridFit\n\n        &#39; Draw the string again.\n        formGraphics.DrawString(&quot;Hello World&quot;, myFont, _\n            Brushes.Firebrick, 20.0F, 60.0F)\n\n        &#39; Set the text contrast to a high-contrast setting.\n        formGraphics.TextContrast = 0\n\n        &#39; Draw the string.\n        formGraphics.DrawString(&quot;Hello World&quot;, myFont, _\n            Brushes.DodgerBlue, 20.0F, 100.0F)\n\n        &#39; Set the text contrast to a low-contrast setting.\n        formGraphics.TextContrast = 12\n\n        &#39; Draw the string again.\n        formGraphics.DrawString(&quot;Hello World&quot;, myFont, _\n            Brushes.DodgerBlue, 20.0F, 140.0F)\n\n        &#39; Dispose of the font object.\n        myFont.Dispose()\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.GraphicsProperties#5\">    private void ChangeTextRenderingHintAndTextContrast(PaintEventArgs e)\n    {\n\n        // Retrieve the graphics object.\n        Graphics formGraphics = e.Graphics;\n\n        // Declare a new font.\n        Font myFont = new Font(FontFamily.GenericSansSerif, 20, \n            FontStyle.Regular);\n\n        // Set the TextRenderingHint property.\n        formGraphics.TextRenderingHint = \n            System.Drawing.Text.TextRenderingHint.SingleBitPerPixel;\n\n        // Draw the string.\n        formGraphics.DrawString(&quot;Hello World&quot;, myFont, \n            Brushes.Firebrick, 20.0F, 20.0F);\n\n        // Change the TextRenderingHint property.\n        formGraphics.TextRenderingHint = \n            System.Drawing.Text.TextRenderingHint.AntiAliasGridFit;\n\n        // Draw the string again.\n        formGraphics.DrawString(&quot;Hello World&quot;, myFont, \n            Brushes.Firebrick, 20.0F, 60.0F);\n\n        // Set the text contrast to a high-contrast setting.\n        formGraphics.TextContrast = 0;\n\n        // Draw the string.\n        formGraphics.DrawString(&quot;Hello World&quot;, myFont, \n            Brushes.DodgerBlue, 20.0F, 100.0F);\n\n        // Set the text contrast to a low-contrast setting.\n        formGraphics.TextContrast = 12;\n\n        // Draw the string again.\n        formGraphics.DrawString(&quot;Hello World&quot;, myFont, \n            Brushes.DodgerBlue, 20.0F, 140.0F);\n\n        // Dispose of the font object.\n        myFont.Dispose();\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_TextRenderingHint\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_TextRenderingHint_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TextRenderingHint</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the rendering mode for text associated with this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Text.TextRenderingHint TextRenderingHint { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.text.textrenderinghint\" data-linktype=\"relative-path\">TextRenderingHint</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.drawing.text.textrenderinghint\" data-linktype=\"relative-path\">TextRenderingHint</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The text rendering hint specifies whether text renders with antialiasing.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You should not use a <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_CompositingMode_\" data-linktype=\"relative-path\">CompositingMode</a> property value of <a class=\"xref\" href=\"system.drawing.drawing2d.compositingmode\" data-linktype=\"relative-path\">CompositingMode</a> when the TextRenderingHint property is set to <a class=\"xref\" href=\"system.drawing.text.textrenderinghint\" data-linktype=\"relative-path\">TextRenderingHint</a>. An exception could occur or the image may not render correctly.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the TextRenderingHint and <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_TextContrast_\" data-linktype=\"relative-path\">TextContrast</a> properties.  </p>\n<p> This example is designed to be used with Windows Forms. Paste the code into a form and call the <code>ChangeTextRenderingHintAndTextContrast</code> method when handling the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.GraphicsProperties#5\">private:\n   void ChangeTextRenderingHintAndTextContrast( PaintEventArgs^ e )\n   {\n      // Retrieve the graphics object.\n      Graphics^ formGraphics = e-&gt;Graphics;\n\n      // Declare a new font.\n      System::Drawing::Font^ myFont = gcnew System::Drawing::Font( FontFamily::GenericSansSerif,20,FontStyle::Regular );\n\n      // Set the TextRenderingHint property.\n      formGraphics-&gt;TextRenderingHint = System::Drawing::Text::TextRenderingHint::SingleBitPerPixel;\n\n      // Draw the string.\n      formGraphics-&gt;DrawString( &quot;Hello World&quot;, myFont, Brushes::Firebrick, 20.0F, 20.0F );\n\n      // Change the TextRenderingHint property.\n      formGraphics-&gt;TextRenderingHint = System::Drawing::Text::TextRenderingHint::AntiAliasGridFit;\n\n      // Draw the string again.\n      formGraphics-&gt;DrawString( &quot;Hello World&quot;, myFont, Brushes::Firebrick, 20.0F, 60.0F );\n\n      // Set the text contrast to a high-contrast setting.\n      formGraphics-&gt;TextContrast = 0;\n\n      // Draw the string.\n      formGraphics-&gt;DrawString( &quot;Hello World&quot;, myFont, Brushes::DodgerBlue, 20.0F, 100.0F );\n\n      // Set the text contrast to a low-contrast setting.\n      formGraphics-&gt;TextContrast = 12;\n\n      // Draw the string again.\n      formGraphics-&gt;DrawString( &quot;Hello World&quot;, myFont, Brushes::DodgerBlue, 20.0F, 140.0F );\n\n      // Dispose of the font object.\n      delete myFont;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.GraphicsProperties#5\">    Private Sub ChangeTextRenderingHintAndTextContrast(ByVal e As _\n        PaintEventArgs)\n\n        &#39; Retrieve the graphics object.\n        Dim formGraphics As Graphics = e.Graphics\n\n        &#39; Declare a new font.\n        Dim myFont As Font = New Font(FontFamily.GenericSansSerif, _\n            20, FontStyle.Regular)\n\n        &#39; Set the TextRenderingHint property.\n        formGraphics.TextRenderingHint = _\n            System.Drawing.Text.TextRenderingHint.SingleBitPerPixel\n\n        &#39; Draw the string.\n        formGraphics.DrawString(&quot;Hello World&quot;, myFont, _\n            Brushes.Firebrick, 20.0F, 20.0F)\n\n        &#39; Change the TextRenderingHint property.\n        formGraphics.TextRenderingHint = _\n            System.Drawing.Text.TextRenderingHint.AntiAliasGridFit\n\n        &#39; Draw the string again.\n        formGraphics.DrawString(&quot;Hello World&quot;, myFont, _\n            Brushes.Firebrick, 20.0F, 60.0F)\n\n        &#39; Set the text contrast to a high-contrast setting.\n        formGraphics.TextContrast = 0\n\n        &#39; Draw the string.\n        formGraphics.DrawString(&quot;Hello World&quot;, myFont, _\n            Brushes.DodgerBlue, 20.0F, 100.0F)\n\n        &#39; Set the text contrast to a low-contrast setting.\n        formGraphics.TextContrast = 12\n\n        &#39; Draw the string again.\n        formGraphics.DrawString(&quot;Hello World&quot;, myFont, _\n            Brushes.DodgerBlue, 20.0F, 140.0F)\n\n        &#39; Dispose of the font object.\n        myFont.Dispose()\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.GraphicsProperties#5\">    private void ChangeTextRenderingHintAndTextContrast(PaintEventArgs e)\n    {\n\n        // Retrieve the graphics object.\n        Graphics formGraphics = e.Graphics;\n\n        // Declare a new font.\n        Font myFont = new Font(FontFamily.GenericSansSerif, 20, \n            FontStyle.Regular);\n\n        // Set the TextRenderingHint property.\n        formGraphics.TextRenderingHint = \n            System.Drawing.Text.TextRenderingHint.SingleBitPerPixel;\n\n        // Draw the string.\n        formGraphics.DrawString(&quot;Hello World&quot;, myFont, \n            Brushes.Firebrick, 20.0F, 20.0F);\n\n        // Change the TextRenderingHint property.\n        formGraphics.TextRenderingHint = \n            System.Drawing.Text.TextRenderingHint.AntiAliasGridFit;\n\n        // Draw the string again.\n        formGraphics.DrawString(&quot;Hello World&quot;, myFont, \n            Brushes.Firebrick, 20.0F, 60.0F);\n\n        // Set the text contrast to a high-contrast setting.\n        formGraphics.TextContrast = 0;\n\n        // Draw the string.\n        formGraphics.DrawString(&quot;Hello World&quot;, myFont, \n            Brushes.DodgerBlue, 20.0F, 100.0F);\n\n        // Set the text contrast to a low-contrast setting.\n        formGraphics.TextContrast = 12;\n\n        // Draw the string again.\n        formGraphics.DrawString(&quot;Hello World&quot;, myFont, \n            Brushes.DodgerBlue, 20.0F, 140.0F);\n\n        // Dispose of the font object.\n        myFont.Dispose();\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_Transform\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_Transform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Transform</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a copy of the geometric world transformation for this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.Matrix Transform { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </div>\r\n                  <p>A copy of the <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> that represents the geometric world transformation for this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>GDI+ uses three coordinate spaces: world, page, and device. World coordinates are the coordinates used to model a particular graphic world and are the coordinates you pass to methods in the .NET Framework. Page coordinates refer to the coordinate system used by a drawing surface, such as a form or a control. Device coordinates are the coordinates used by the physical device being drawn on, such as a screen or a printer. The Transform property represents the world transformation, which maps world coordinates to page coordinates.  </p>\n<p> Because the matrix returned and by the Transform property is a copy of the geometric transform, you should dispose of the matrix when you no longer need it.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_VisibleClipBounds\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_VisibleClipBounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisibleClipBounds</div>        \r\n          </div>\r\n    \r\n            <p>Gets the bounding rectangle of the visible clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.RectangleF VisibleClipBounds { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that represents a bounding rectangle for the visible clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The unit for resulting rectangle is designated by the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_PageUnit_\" data-linktype=\"relative-path\">PageUnit</a> property. The default unit is pixels. A <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is typically associated with a control and the origin of the rectangle will be relative to the client area of that control.  </p>\n<p> The visible clipping region is the intersection of the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> and the clipping region of the window.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_AddMetafileComment_System_Byte___\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_AddMetafileComment_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddMetafileComment(Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Adds a comment to the current <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddMetafileComment (byte[] data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of bytes that contains the comment.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is valid only if this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is associated with a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler, as well as <code>thisForm</code>, the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> for the example. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a temporary <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for creating the metafile and gets an <code>hdc</code>, a handle to its device context.  </p>\n</li>\n<li><p>Creates a new metafile using the <code>hdc</code>.  </p>\n</li>\n<li><p>Creates a <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for display of the metafile from the <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>.  </p>\n</li>\n<li><p>Draws a rectangle to the metafile.  </p>\n</li>\n<li><p>Adds a comment to the metafile.  </p>\n</li>\n<li><p>Disposes the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for the metafile-which closes the metafile.  </p>\n</li>\n<li><p>Disposes the metafile.  </p>\n</li>\n<li><p>Releases the temporary <code>hdc</code>.  </p>\n</li>\n<li><p>Disposes the temporary <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.  </p>\n</li>\n<li><p>Creates a second metafile from the previously created file.  </p>\n</li>\n<li><p>Draws the metafile to the screen.  </p>\n</li>\n<li><p>Disposes the metafile.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#1\">private:\n   [SecurityPermission(SecurityAction::Demand, Flags = SecurityPermissionFlag::UnmanagedCode)]            \n   void AddMetafileCommentBytes( PaintEventArgs^ e )\n   {\n      // Create temporary Graphics object for metafile\n      //  creation and get handle to its device context.\n      Graphics^ newGraphics = this-&gt;CreateGraphics();\n      IntPtr hdc = newGraphics-&gt;GetHdc();\n\n      // Create metafile object to record.\n      Metafile^ metaFile1 = gcnew Metafile( &quot;SampMeta.emf&quot;,hdc );\n\n      // Create graphics object to record metaFile.\n      Graphics^ metaGraphics = Graphics::FromImage( metaFile1 );\n\n      // Draw rectangle in metaFile.\n      metaGraphics-&gt;DrawRectangle( gcnew Pen( Color::Black,5.0f ), 0, 0, 100, 100 );\n\n      // Create comment and add to metaFile.\n      array&lt;Byte&gt;^metaComment = {(Byte)&#39;T&#39;,(Byte)&#39;e&#39;,(Byte)&#39;s&#39;,(Byte)&#39;t&#39;};\n      metaGraphics-&gt;AddMetafileComment( metaComment );\n\n      // Dispose of graphics object.\n      delete metaGraphics;\n\n      // Dispose of metafile.\n      delete metaFile1;\n\n      // Release handle to temporary device context.\n      newGraphics-&gt;ReleaseHdc( hdc );\n\n      // Dispose of scratch graphics object.\n      delete newGraphics;\n\n      // Create existing metafile object to draw.\n      Metafile^ metaFile2 = gcnew Metafile( &quot;SampMeta.emf&quot; );\n\n      // Draw metaFile to screen.\n      e-&gt;Graphics-&gt;DrawImage( metaFile2, Point(0,0) );\n\n      // Dispose of metafile.\n      delete metaFile2;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#1\">        private void AddMetafileCommentBytes(PaintEventArgs e)\n        {\n            // Create temporary Graphics object for metafile\n            //  creation and get handle to its device context.\n            Graphics newGraphics = this.CreateGraphics();\n            IntPtr hdc = newGraphics.GetHdc();\n                     \n            // Create metafile object to record.\n            Metafile metaFile1 = new Metafile(&quot;SampMeta.emf&quot;, hdc);\n                     \n            // Create graphics object to record metaFile.\n            Graphics metaGraphics = Graphics.FromImage(metaFile1);\n                     \n            // Draw rectangle in metaFile.\n            metaGraphics.DrawRectangle(new Pen(Color.Black, 5), 0, 0, 100, 100);\n                     \n            // Create comment and add to metaFile.\n            byte[] metaComment = {(byte)&#39;T&#39;, (byte)&#39;e&#39;, (byte)&#39;s&#39;, (byte)&#39;t&#39;};\n            metaGraphics.AddMetafileComment(metaComment);\n                     \n            // Dispose of graphics object.\n            metaGraphics.Dispose();\n                     \n            // Dispose of metafile.\n            metaFile1.Dispose();\n                     \n            // Release handle to temporary device context.\n            newGraphics.ReleaseHdc(hdc);\n                     \n            // Dispose of scratch graphics object.\n            newGraphics.Dispose();\n                     \n            // Create existing metafile object to draw.\n            Metafile metaFile2 = new Metafile(&quot;SampMeta.emf&quot;);\n                     \n            // Draw metaFile to screen.\n            e.Graphics.DrawImage(metaFile2, new Point(0, 0));\n                     \n            // Dispose of metafile.\n            metaFile2.Dispose();\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#1\">    Private Sub AddMetafileCommentBytes(ByVal e As PaintEventArgs)\n\n        &#39; Create temporary graphics object for metafile\n        &#39; creation and get handle to its device context.\n        Dim newGraphics As Graphics = Me.CreateGraphics()\n        Dim hdc As IntPtr = newGraphics.GetHdc()\n\n        &#39; Create metafile object to record.\n        Dim metaFile1 As New Metafile(&quot;SampMeta.emf&quot;, hdc)\n\n        &#39; Create graphics object to record metaFile.\n        Dim metaGraphics As Graphics = Graphics.FromImage(metaFile1)\n\n        &#39; Draw rectangle in metaFile.\n        metaGraphics.DrawRectangle(New Pen(Color.Black, 5), 0, 0, 100, 100)\n\n        &#39; Create comment and add to metaFile.\n        Dim metaComment As Byte() = {CByte(&quot;T&quot;), CByte(&quot;e&quot;), CByte(&quot;s&quot;), _\n        CByte(&quot;t&quot;)}\n        metaGraphics.AddMetafileComment(metaComment)\n\n        &#39; Dispose of graphics object.\n        metaGraphics.Dispose()\n\n        &#39; Dispose of metafile.\n        metaFile1.Dispose()\n\n        &#39; Release handle to scratch device context.\n        newGraphics.ReleaseHdc(hdc)\n\n        &#39; Dispose of scratch graphics object.\n        newGraphics.Dispose()\n\n        &#39; Create existing metafile object to draw.\n        Dim metaFile2 As New Metafile(&quot;SampMeta.emf&quot;)\n\n        &#39; Draw metaFile to screen.\n        e.Graphics.DrawImage(metaFile2, New Point(0, 0))\n\n        &#39; Dispose of metafile.\n        metaFile2.Dispose()\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_BeginContainer\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_BeginContainer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginContainer()</div>        \r\n          </div>\r\n    \r\n            <p>Saves a graphics container with the current state of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> and opens and uses a new graphics container.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.GraphicsContainer BeginContainer ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.graphicscontainer\" data-linktype=\"relative-path\">GraphicsContainer</a></div>\r\n                  </div>\r\n                  <p>This method returns a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicscontainer\" data-linktype=\"relative-path\">GraphicsContainer</a> that represents the state of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> at the time of the method call.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method with the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EndContainer_\" data-linktype=\"relative-path\">EndContainer</a> method to create nested graphics containers. Graphics containers retain graphics state, such as transformation, clipping region, and rendering properties.  </p>\n<p> When you call the BeginContainer method of a <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>, an information block that holds the state of the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is put on a stack. The BeginContainer method returns a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicscontainer\" data-linktype=\"relative-path\">GraphicsContainer</a> that identifies that information block. When you pass the identifying object to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EndContainer_\" data-linktype=\"relative-path\">EndContainer</a> method, the information block is removed from the stack and is used to restore the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the state it was in at the time of the BeginContainer method call.  </p>\n<p> Containers can be nested; that is, you can call the BeginContainer method several times before you call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EndContainer_\" data-linktype=\"relative-path\">EndContainer</a> method. Each time you call the BeginContainer method, an information block is put on the stack, and you receive a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicscontainer\" data-linktype=\"relative-path\">GraphicsContainer</a> for the information block. When you pass one of those objects to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EndContainer_\" data-linktype=\"relative-path\">EndContainer</a> method, the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is returned to the state it was in at the time of the BeginContainer method call that returned that particular <a class=\"xref\" href=\"system.drawing.drawing2d.graphicscontainer\" data-linktype=\"relative-path\">GraphicsContainer</a>. The information block placed on the stack by that BeginContainer method call is removed from the stack, and all information blocks placed on that stack after that BeginContainer method call are also removed.  </p>\n<p> Calls to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method place information blocks on the same stack as calls to the BeginContainer method. Just as an <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EndContainer_\" data-linktype=\"relative-path\">EndContainer</a> method call is paired with a BeginContainer method call, a <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Restore_\" data-linktype=\"relative-path\">Restore</a> method call is paired with a <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method call.  </p>\n<p> When you call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EndContainer_\" data-linktype=\"relative-path\">EndContainer</a> method, all information blocks placed on the stack (by the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method or by the BeginContainer method) after the corresponding call to the BeginContainer method are removed from the stack. Likewise, when you call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Restore_\" data-linktype=\"relative-path\">Restore</a> method, all information blocks placed on the stack (by the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method or by the BeginContainer method) after the corresponding call to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method are removed from the stack.  </p>\n<p> The graphics state established by the BeginContainer method includes the rendering qualities of the default graphics state; any rendering-quality state changes existing when the method is called are reset to the default values.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Opens a new graphics container and saves the old container.  </p>\n</li>\n<li><p>Translates the world coordinates in the container.  </p>\n</li>\n<li><p>Fills a red rectangle in the (translated coordinates of the) new container.  </p>\n</li>\n<li><p>Closes the new container and restores the saved container.  </p>\n</li>\n<li><p>Fills a green rectangle (to the untranslated coordinates) of the saved container.  </p>\n<p>The result is a green rectangle that overlies a red rectangle of the same size.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#2\">private:\n   void BeginContainerVoid( PaintEventArgs^ e )\n   {\n      // Begin graphics container.\n      GraphicsContainer^ containerState = e-&gt;Graphics-&gt;BeginContainer();\n\n      // Translate world transformation.\n      e-&gt;Graphics-&gt;TranslateTransform( 100.0F, 100.0F );\n\n      // Fill translated rectangle in container with red.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Red ), 0, 0, 200, 200 );\n\n      // End graphics container.\n      e-&gt;Graphics-&gt;EndContainer( containerState );\n\n      // Fill untransformed rectangle with green.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Green ), 0, 0, 200, 200 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#2\">        private void BeginContainerVoid(PaintEventArgs e)\n        {\n            // Begin graphics container.\n            GraphicsContainer containerState = e.Graphics.BeginContainer();\n                     \n            // Translate world transformation.\n            e.Graphics.TranslateTransform(100.0F, 100.0F);\n                     \n            // Fill translated rectangle in container with red.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Red), 0, 0, 200, 200);\n                     \n            // End graphics container.\n            e.Graphics.EndContainer(containerState);\n                     \n            // Fill untransformed rectangle with green.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Green), 0, 0, 200, 200);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#2\">    Private Sub BeginContainerVoid(ByVal e As PaintEventArgs)\n\n        &#39; Begin graphics container.\n        Dim containerState As GraphicsContainer = _\n        e.Graphics.BeginContainer()\n\n        &#39; Translate world transformation.\n        e.Graphics.TranslateTransform(100.0F, 100.0F)\n\n        &#39; Fill translated rectangle in container with red.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Red), 0, 0, 200, 200)\n\n        &#39; End graphics container.\n        e.Graphics.EndContainer(containerState)\n\n        &#39; Fill untransformed rectangle with green.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Green), 0, 0, _\n        200, 200)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_BeginContainer_System_Drawing_Rectangle_System_Drawing_Rectangle_System_Drawing_GraphicsUnit_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_BeginContainer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginContainer(Rectangle,Rectangle,GraphicsUnit)</div>        \r\n          </div>\r\n    \r\n            <p>Saves a graphics container with the current state of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> and opens and uses a new graphics container with the specified scale transformation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.GraphicsContainer BeginContainer (System.Drawing.Rectangle dstrect, System.Drawing.Rectangle srcrect, System.Drawing.GraphicsUnit unit);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dstrect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that, together with the <code>srcrect</code> parameter, specifies a scale transformation for the container.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcrect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that, together with the <code>dstrect</code> parameter, specifies a scale transformation for the container.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>unit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the unit of measure for the container.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.graphicscontainer\" data-linktype=\"relative-path\">GraphicsContainer</a></div>\r\n                  </div>\r\n                  <p>This method returns a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicscontainer\" data-linktype=\"relative-path\">GraphicsContainer</a> that represents the state of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> at the time of the method call.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method with the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EndContainer_\" data-linktype=\"relative-path\">EndContainer</a> method to create nested graphics containers. Graphics containers retain graphics state, such as transformation, clipping region, and rendering properties.  </p>\n<p> When you call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method of a <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>, an information block that holds the state of the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is put on a stack. The <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method returns a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicscontainer\" data-linktype=\"relative-path\">GraphicsContainer</a> that identifies that information block. When you pass the identifying object to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EndContainer_\" data-linktype=\"relative-path\">EndContainer</a> method, the information block is removed from the stack and is used to restore the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the state it was in at the time of the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method call.  </p>\n<p> Containers can be nested; that is, you can call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method several times before you call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EndContainer_\" data-linktype=\"relative-path\">EndContainer</a> method. Each time you call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method, an information block is put on the stack, and you receive a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicscontainer\" data-linktype=\"relative-path\">GraphicsContainer</a> for the information block. When you pass one of those objects to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EndContainer_\" data-linktype=\"relative-path\">EndContainer</a> method, the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is returned to the state it was in at the time of the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method call that returned that particular <a class=\"xref\" href=\"system.drawing.drawing2d.graphicscontainer\" data-linktype=\"relative-path\">GraphicsContainer</a>. The information block placed on the stack by that <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method call is removed from the stack, and all information blocks placed on that stack after that <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method call are also removed.  </p>\n<p> Calls to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method place information blocks on the same stack as calls to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method. Just as an <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EndContainer_\" data-linktype=\"relative-path\">EndContainer</a> method call is paired with a <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method call, a <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Restore_\" data-linktype=\"relative-path\">Restore</a> method call is paired with a <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method call.  </p>\n<p> When you call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EndContainer_\" data-linktype=\"relative-path\">EndContainer</a> method, all information blocks placed on the stack (by the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method or by the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method) after the corresponding call to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method are removed from the stack. Likewise, when you call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Restore_\" data-linktype=\"relative-path\">Restore</a> method, all information blocks placed on the stack (by the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method or by the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method) after the corresponding call to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method are removed from the stack.  </p>\n<p> This method specifies a scale transformation for the new graphics container with the <code>dstrect</code> and <code>srcrect</code> parameters. The scale is equal to the transformation that, when applied to <code>srcrect</code>, results in <code>dstrect</code>.  </p>\n<p> The graphics state established by the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method includes the rendering qualities of the default graphics state; any rendering-quality state changes existing when the method is called are reset to the default values.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates two rectangles to specify a scale transformation for the new container.  </p>\n</li>\n<li><p>Opens the new graphics container and saves the old container.  </p>\n</li>\n<li><p>Fills a red rectangle in the (scaled coordinates of the) new container.  </p>\n</li>\n<li><p>Closes the new container and restores the saved container.  </p>\n</li>\n<li><p>Fills a green rectangle (to the unscaled coordinates) of the saved container.  </p>\n<p>The result is a green rectangle that overlies a smaller red rectangle.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#3\">private:\n   void BeginContainerRectangle( PaintEventArgs^ e )\n   {\n      // Define transformation for container.\n      Rectangle srcRect = Rectangle(0,0,200,200);\n      Rectangle destRect = Rectangle(100,100,150,150);\n\n      // Begin graphics container.\n      GraphicsContainer^ containerState = e-&gt;Graphics-&gt;BeginContainer( destRect, srcRect, GraphicsUnit::Pixel );\n\n      // Fill red rectangle in container.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Red ), 0, 0, 200, 200 );\n\n      // End graphics container.\n      e-&gt;Graphics-&gt;EndContainer( containerState );\n\n      // Fill untransformed rectangle with green.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Green ), 0, 0, 200, 200 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#3\">        private void BeginContainerRectangle(PaintEventArgs e)\n        {\n            // Define transformation for container.\n            Rectangle srcRect = new Rectangle(0, 0, 200, 200);\n            Rectangle destRect = new Rectangle(100, 100, 150, 150);\n                     \n            // Begin graphics container.\n            GraphicsContainer containerState = e.Graphics.BeginContainer(\n                destRect, srcRect,\n                GraphicsUnit.Pixel);\n                     \n            // Fill red rectangle in container.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Red), 0, 0, 200, 200);\n                     \n            // End graphics container.\n            e.Graphics.EndContainer(containerState);\n                     \n            // Fill untransformed rectangle with green.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Green), 0, 0, 200, 200);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#3\">    Private Sub BeginContainerRectangle(ByVal e As PaintEventArgs)\n\n        &#39; Define transformation for container.\n        Dim srcRect As New Rectangle(0, 0, 200, 200)\n        Dim destRect As New Rectangle(100, 100, 150, 150)\n\n        &#39; Begin graphics container.\n        Dim containerState As GraphicsContainer = _\n        e.Graphics.BeginContainer(destRect, srcRect, GraphicsUnit.Pixel)\n\n        &#39; Fill red rectangle in container.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Red), 0, 0, 200, 200)\n\n        &#39; End graphics container.\n        e.Graphics.EndContainer(containerState)\n\n        &#39; Fill untransformed rectangle with green.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Green), 0, 0, _\n        200, 200)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_BeginContainer_System_Drawing_RectangleF_System_Drawing_RectangleF_System_Drawing_GraphicsUnit_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_BeginContainer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginContainer(RectangleF,RectangleF,GraphicsUnit)</div>        \r\n          </div>\r\n    \r\n            <p>Saves a graphics container with the current state of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> and opens and uses a new graphics container with the specified scale transformation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.GraphicsContainer BeginContainer (System.Drawing.RectangleF dstrect, System.Drawing.RectangleF srcrect, System.Drawing.GraphicsUnit unit);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dstrect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that, together with the <code>srcrect</code> parameter, specifies a scale transformation for the new graphics container.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcrect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that, together with the <code>dstrect</code> parameter, specifies a scale transformation for the new graphics container.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>unit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the unit of measure for the container.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.graphicscontainer\" data-linktype=\"relative-path\">GraphicsContainer</a></div>\r\n                  </div>\r\n                  <p>This method returns a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicscontainer\" data-linktype=\"relative-path\">GraphicsContainer</a> that represents the state of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> at the time of the method call.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method with the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EndContainer_\" data-linktype=\"relative-path\">EndContainer</a> method to create nested graphics containers. Graphics containers retain graphics state, such as transformation, clipping region, and rendering properties.  </p>\n<p> When you call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method of a <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>, an information block that holds the state of the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is put on a stack. The <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method returns a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicscontainer\" data-linktype=\"relative-path\">GraphicsContainer</a> that identifies that information block. When you pass the identifying object to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EndContainer_\" data-linktype=\"relative-path\">EndContainer</a> method, the information block is removed from the stack and is used to restore the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the state it was in at the time of the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method call.  </p>\n<p> Containers can be nested; that is, you can call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method several times before you call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EndContainer_\" data-linktype=\"relative-path\">EndContainer</a> method. Each time you call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method, an information block is put on the stack, and you receive a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicscontainer\" data-linktype=\"relative-path\">GraphicsContainer</a> for the information block. When you pass one of those objects to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EndContainer_\" data-linktype=\"relative-path\">EndContainer</a> method, the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is returned to the state it was in at the time of the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method call that returned that particular <a class=\"xref\" href=\"system.drawing.drawing2d.graphicscontainer\" data-linktype=\"relative-path\">GraphicsContainer</a>. The information block placed on the stack by that <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method call is removed from the stack, and all information blocks placed on that stack after that <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method call are also removed.  </p>\n<p> Calls to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method place information blocks on the same stack as calls to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method. Just as an <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EndContainer_\" data-linktype=\"relative-path\">EndContainer</a> method call is paired with a <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method call, a <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Restore_\" data-linktype=\"relative-path\">Restore</a> method call is paired with a <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method call.  </p>\n<p> When you call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EndContainer_\" data-linktype=\"relative-path\">EndContainer</a> method, all information blocks placed on the stack (by the <code>Save</code> method or by the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method) after the corresponding call to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method are removed from the stack. Likewise, when you call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Restore_\" data-linktype=\"relative-path\">Restore</a> method, all information blocks placed on the stack (by the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method or by the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method) after the corresponding call to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method are removed from the stack.  </p>\n<p> This method specifies a scale transformation for the new graphics container with the <code>dstrect</code> and <code>srcrect</code> parameters. The scale is equal to the transformation that, when applied to <code>srcrect</code>, results in <code>dstrect</code>.  </p>\n<p> The graphics state established by the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method includes the rendering qualities of the default graphics state; any rendering-quality state changes existing when the method is called are reset to the default values.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates two rectangles to specify a scale transformation for the new container.  </p>\n</li>\n<li><p>Opens the new graphics container and saves the old container.  </p>\n</li>\n<li><p>Fills a red rectangle in the (scaled coordinates of the) new container.  </p>\n</li>\n<li><p>Closes the new container and restores the saved container.  </p>\n</li>\n<li><p>Fills a green rectangle (to the unscaled coordinates) of the saved container.  </p>\n<p>The result is a green rectangle that overlies a smaller red rectangle.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#4\">private:\n   void BeginContainerRectangleF( PaintEventArgs^ e )\n   {\n      // Define transformation for container.\n      RectangleF srcRect = RectangleF(0.0F,0.0F,200.0F,200.0F);\n      RectangleF destRect = RectangleF(100.0F,100.0F,150.0F,150.0F);\n\n      // Begin graphics container.\n      GraphicsContainer^ containerState = e-&gt;Graphics-&gt;BeginContainer( destRect, srcRect, GraphicsUnit::Pixel );\n\n      // Fill red rectangle in container.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Red ), 0.0F, 0.0F, 200.0F, 200.0F );\n\n      // End graphics container.\n      e-&gt;Graphics-&gt;EndContainer( containerState );\n\n      // Fill untransformed rectangle with green.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Green ), 0.0F, 0.0F, 200.0F, 200.0F );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#4\">        private void BeginContainerRectangleF(PaintEventArgs e)\n        {\n            // Define transformation for container.\n            RectangleF srcRect = new RectangleF(0.0F, 0.0F, 200.0F, 200.0F);\n            RectangleF destRect = new RectangleF(100.0F, 100.0F, 150.0F, 150.0F);\n                     \n            // Begin graphics container.\n            GraphicsContainer containerState = e.Graphics.BeginContainer(\n                destRect, srcRect,\n                GraphicsUnit.Pixel);\n                     \n            // Fill red rectangle in container.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Red), 0.0F, 0.0F, 200.0F, 200.0F);\n                     \n            // End graphics container.\n            e.Graphics.EndContainer(containerState);\n                     \n            // Fill untransformed rectangle with green.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Green), 0.0F, 0.0F, 200.0F, 200.0F);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#4\">    Private Sub BeginContainerRectangleF(ByVal e As PaintEventArgs)\n\n        &#39; Define transformation for container.\n        Dim srcRect As New RectangleF(0.0F, 0.0F, 200.0F, 200.0F)\n        Dim destRect As New RectangleF(100.0F, 100.0F, 150.0F, 150.0F)\n\n        &#39; Begin graphics container.\n        Dim containerState As GraphicsContainer = _\n        e.Graphics.BeginContainer(destRect, srcRect, GraphicsUnit.Pixel)\n\n        &#39; Fill red rectangle in container.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Red), 0.0F, 0.0F, _\n        200.0F, 200.0F)\n\n        &#39; End graphics container.\n        e.Graphics.EndContainer(containerState)\n\n        &#39; Fill untransformed rectangle with green.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Green), 0.0F, 0.0F, _\n        200.0F, 200.0F)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_Clear_System_Drawing_Color_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_Clear_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clear(Color)</div>        \r\n          </div>\r\n    \r\n            <p>Clears the entire drawing surface and fills it with the specified background color.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Clear (System.Drawing.Color color);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>color</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structure that represents the background color of the drawing surface.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Clear method clears the state of the graphics object and should not be called when the graphics object cannot be updated. For example, if the Clear method is called on a secure desktop in a terminal server session, an <a class=\"xref\" href=\"system.runtime.interopservices.externalexception\" data-linktype=\"relative-path\">ExternalException</a> may occur, leaving the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object in an inconsistent state.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code clears the drawing surface of the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> and sets the background color to the system-defined teal color.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#5\">private:\n   void ClearColor( PaintEventArgs^ e )\n   {\n      // Clear screen with teal background.\n      e-&gt;Graphics-&gt;Clear( Color::Teal );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#5\">        private void ClearColor(PaintEventArgs e)\n        {\n            // Clear screen with teal background.\n            e.Graphics.Clear(Color.Teal);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#5\">    Private Sub ClearColor(ByVal e As PaintEventArgs)\n\n        &#39; Clear screen with teal background.\n        e.Graphics.Clear(Color.Teal)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_CopyFromScreen_System_Drawing_Point_System_Drawing_Point_System_Drawing_Size_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_CopyFromScreen_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyFromScreen(Point,Point,Size)</div>        \r\n          </div>\r\n    \r\n            <p>Performs a bit-block transfer of color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CopyFromScreen (System.Drawing.Point upperLeftSource, System.Drawing.Point upperLeftDestination, System.Drawing.Size blockRegionSize);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>upperLeftSource</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The point at the upper-left corner of the source rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>upperLeftDestination</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The point at the upper-left corner of the destination rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>blockRegionSize</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The size of the area to be transferred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>The operation failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CopyFromScreen methods are useful for layering one image on top of another. To specify how the source and destination colors are blended, use one of the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_CopyFromScreen_\" data-linktype=\"relative-path\">CopyFromScreen</a> methods that takes a <a class=\"xref\" href=\"system.drawing.copypixeloperation\" data-linktype=\"relative-path\">CopyPixelOperation</a> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the CopyFromScreen method. To run this example, paste it into a Windows Form. Handle the form’s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event and call the <code>CopyPixels1</code> method from the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event-handling method, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Drawing.MiscWhidbeySnippets#4\">    Private Sub CopyPixels1(ByVal e As PaintEventArgs) \n        e.Graphics.CopyFromScreen(Me.Location, _\n            New Point(40, 40), New Size(100, 100))\n    \n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.MiscWhidbeySnippets#4\">        private void CopyPixels1(PaintEventArgs e)\n        {\n            e.Graphics.CopyFromScreen(this.Location, \n                new Point(40, 40), new Size(100, 100));\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_CopyFromScreen_System_Drawing_Point_System_Drawing_Point_System_Drawing_Size_System_Drawing_CopyPixelOperation_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_CopyFromScreen_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyFromScreen(Point,Point,Size,CopyPixelOperation)</div>        \r\n          </div>\r\n    \r\n            <p>Performs a bit-block transfer of color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CopyFromScreen (System.Drawing.Point upperLeftSource, System.Drawing.Point upperLeftDestination, System.Drawing.Size blockRegionSize, System.Drawing.CopyPixelOperation copyPixelOperation);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>upperLeftSource</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The point at the upper-left corner of the source rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>upperLeftDestination</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The point at the upper-left corner of the destination rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>blockRegionSize</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The size of the area to be transferred.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>copyPixelOperation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.copypixeloperation\" data-linktype=\"relative-path\">CopyPixelOperation</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.drawing.copypixeloperation\" data-linktype=\"relative-path\">CopyPixelOperation</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>copyPixelOperation</code> is not a member of <a class=\"xref\" href=\"system.drawing.copypixeloperation\" data-linktype=\"relative-path\">CopyPixelOperation</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>The operation failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_CopyFromScreen_\" data-linktype=\"relative-path\">CopyFromScreen</a> methods are useful for layering one image on top of another. The <code>copyPixelOperation</code> parameter allows you to specify if and how the source colors should be blended with the colors in the destination area.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the CopyFromScreen method. To run this example, paste it into a Windows Form. Handle the form’s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event and call the <code>CopyPixels2</code> method from the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event-handling method, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Drawing.MiscWhidbeySnippets#5\">    Private Sub CopyPixels2(ByVal e As PaintEventArgs) \n        e.Graphics.CopyFromScreen(Me.Location, _\n            New Point(40, 40), New Size(100, 100), _\n            CopyPixelOperation.MergePaint)\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.MiscWhidbeySnippets#5\">        private void CopyPixels2(PaintEventArgs e)\n        {\n            e.Graphics.CopyFromScreen(this.Location, new Point(40, 40), \n                new Size(100, 100), CopyPixelOperation.MergePaint); \n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_CopyFromScreen_System_Int32_System_Int32_System_Int32_System_Int32_System_Drawing_Size_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_CopyFromScreen_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyFromScreen(Int32,Int32,Int32,Int32,Size)</div>        \r\n          </div>\r\n    \r\n            <p>Performs a bit-block transfer of the color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CopyFromScreen (int sourceX, int sourceY, int destinationX, int destinationY, System.Drawing.Size blockRegionSize);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sourceX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the point at the upper-left corner of the source rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sourceY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the point at the upper-left corner of the source rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destinationX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the point at the upper-left corner of the destination rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destinationY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the point at the upper-left corner of the destination rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>blockRegionSize</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The size of the area to be transferred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>The operation failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_CopyFromScreen_\" data-linktype=\"relative-path\">CopyFromScreen</a> methods are useful for layering one image on top of another. To specify how the source and destination colors are blended, use one of the CopyFromScreen methods that takes a <a class=\"xref\" href=\"system.drawing.copypixeloperation\" data-linktype=\"relative-path\">CopyPixelOperation</a> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_CopyFromScreen_\" data-linktype=\"relative-path\">CopyFromScreen</a> for printing a copy of the current form.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Graphics.CopyFromScreen#1\">\nusing System;\nusing System.Windows.Forms;\nusing System.Drawing;\nusing System.Drawing.Printing;\n\npublic class Form1 :\n    Form\n{\n    private Button printButton = new Button();\n    private PrintDocument printDocument1 = new PrintDocument();\n\n    public Form1()\n    {\n        printButton.Text = &quot;Print Form&quot;;\n        printButton.Click += new EventHandler(printButton_Click);\n        printDocument1.PrintPage += new PrintPageEventHandler(printDocument1_PrintPage);\n        this.Controls.Add(printButton);\n    }\n\n    void printButton_Click(object sender, EventArgs e)\n    {\n        CaptureScreen();\n        printDocument1.Print();\n    }\n\n\n    Bitmap memoryImage;\n\n    private void CaptureScreen()\n    {\n        Graphics myGraphics = this.CreateGraphics();\n        Size s = this.Size;\n        memoryImage = new Bitmap(s.Width, s.Height, myGraphics);\n        Graphics memoryGraphics = Graphics.FromImage(memoryImage);\n        memoryGraphics.CopyFromScreen(this.Location.X, this.Location.Y, 0, 0, s);\n    }\n\n    private void printDocument1_PrintPage(System.Object sender,  \n           System.Drawing.Printing.PrintPageEventArgs e)\n    {\n        e.Graphics.DrawImage(memoryImage, 0, 0);\n    }\n\n  \n\n    public static void Main()\n    {\n        Application.Run(new Form1());\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Graphics.CopyFromScreen#1\">Imports System\nImports System.Windows.Forms\nImports System.Drawing\nImports System.Drawing.Printing\n\nPublic Class Form1\n    Inherits Form\n    Private WithEvents printButton As New Button\n    Private WithEvents printDocument1 As New PrintDocument\n\n    Public Sub New()\n        printButton.Text = &quot;Print Form&quot;\n        Me.Controls.Add(printButton)\n    End Sub\n\n    Dim memoryImage As Bitmap\n\n    Private Sub CaptureScreen()\n        Dim myGraphics As Graphics = Me.CreateGraphics()\n        Dim s As Size = Me.Size\n        memoryImage = New Bitmap(s.Width, s.Height, myGraphics)\n        Dim memoryGraphics As Graphics = Graphics.FromImage(memoryImage)\n        memoryGraphics.CopyFromScreen(Me.Location.X, Me.Location.Y, 0, 0, s)\n    End Sub\n\n    Private Sub printDocument1_PrintPage(ByVal sender As System.Object, _\n       ByVal e As System.Drawing.Printing.PrintPageEventArgs) Handles _\n       printDocument1.PrintPage\n        e.Graphics.DrawImage(memoryImage, 0, 0)\n    End Sub\n\n    Private Sub printButton_Click(ByVal sender As System.Object, ByVal e As _\n       System.EventArgs) Handles printButton.Click\n        CaptureScreen()\n        printDocument1.Print()\n    End Sub\n\n    Public Shared Sub Main()\n        Application.Run(New Form1())\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_CopyFromScreen_System_Int32_System_Int32_System_Int32_System_Int32_System_Drawing_Size_System_Drawing_CopyPixelOperation_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_CopyFromScreen_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyFromScreen(Int32,Int32,Int32,Int32,Size,CopyPixelOperation)</div>        \r\n          </div>\r\n    \r\n            <p>Performs a bit-block transfer of the color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CopyFromScreen (int sourceX, int sourceY, int destinationX, int destinationY, System.Drawing.Size blockRegionSize, System.Drawing.CopyPixelOperation copyPixelOperation);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sourceX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the point at the upper-left corner of the source rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sourceY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the point at the upper-left corner of the source rectangle</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destinationX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the point at the upper-left corner of the destination rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destinationY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the point at the upper-left corner of the destination rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>blockRegionSize</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The size of the area to be transferred.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>copyPixelOperation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.copypixeloperation\" data-linktype=\"relative-path\">CopyPixelOperation</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.drawing.copypixeloperation\" data-linktype=\"relative-path\">CopyPixelOperation</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>copyPixelOperation</code> is not a member of <a class=\"xref\" href=\"system.drawing.copypixeloperation\" data-linktype=\"relative-path\">CopyPixelOperation</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>The operation failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_CopyFromScreen_\" data-linktype=\"relative-path\">CopyFromScreen</a> methods are useful for layering one image on top of another. The <code>copyPixelOperation</code> parameter allows you to specify if and how the source colors should be blended with the colors in the destination area.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the CopyFromScreen method. To run this example, paste it into a Windows Form. Handle the form’s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event and call the <code>CopyPixels4</code> method from the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event-handling method, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Drawing.MiscWhidbeySnippets#7\">    Private Sub CopyPixels4(ByVal e As PaintEventArgs) \n        e.Graphics.CopyFromScreen(0, 0, 20, 20, _\n            New Size(160, 160), CopyPixelOperation.SourceInvert)\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.MiscWhidbeySnippets#7\">        private void CopyPixels4(PaintEventArgs e)\n        {\n            e.Graphics.CopyFromScreen(0, 0, 20, 20, new Size(160, 160), \n                CopyPixelOperation.SourceInvert);\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_Dispose\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling Dispose allows the resources used by this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to be reallocated for other purposes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> from a graphics file SampImag.jpg in the example directory.  </p>\n</li>\n<li><p>Creates a <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> from the <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a>.  </p>\n</li>\n<li><p>Alters the image by filling a rectangle within it.  </p>\n</li>\n<li><p>Draws the <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to the screen.  </p>\n</li>\n<li><p>Releases the created <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#6\">private:\n   void FromImageImage1( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ imageFile = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create graphics object for alteration.\n      Graphics^ newGraphics = Graphics::FromImage( imageFile );\n\n      // Alter image.\n      newGraphics-&gt;FillRectangle( gcnew SolidBrush( Color::Black ), 100, 50, 100, 100 );\n\n      // Draw image to screen.\n      e-&gt;Graphics-&gt;DrawImage( imageFile, PointF(0.0F,0.0F) );\n\n      // Release graphics object.\n      delete newGraphics;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#6\">        private void FromImageImage1(PaintEventArgs e)\n        {\n            // Create image.\n            Image imageFile = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create graphics object for alteration.\n            Graphics newGraphics = Graphics.FromImage(imageFile);\n                     \n            // Alter image.\n            newGraphics.FillRectangle(new SolidBrush(Color.Black), 100, 50, 100, 100);\n                     \n            // Draw image to screen.\n            e.Graphics.DrawImage(imageFile, new PointF(0.0F, 0.0F));\n                     \n            // Release graphics object.\n            newGraphics.Dispose();\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#6\">    Private Sub FromImageImage1(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim imageFile As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create graphics object for alteration.\n        Dim newGraphics As Graphics = Graphics.FromImage(imageFile)\n\n        &#39; Alter image.\n        newGraphics.FillRectangle(New SolidBrush(Color.Black), 100, _\n        50, 100, 100)\n\n        &#39; Draw image to screen.\n        e.Graphics.DrawImage(imageFile, New PointF(0.0F, 0.0F))\n\n        &#39; Dispose of graphics object.\n        newGraphics.Dispose()\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawArc_System_Drawing_Pen_System_Drawing_Rectangle_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawArc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawArc(Pen,Rectangle,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Draws an arc representing a portion of an ellipse specified by a <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawArc (System.Drawing.Pen pen, System.Drawing.Rectangle rect, float startAngle, float sweepAngle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the arc.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that defines the boundaries of the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sweepAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Angle in degrees measured clockwise from the <code>startAngle</code> parameter to ending point of the arc.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws an arc that is a portion of the perimeter of an ellipse. The ellipse is defined by the boundaries of a rectangle. The arc is the portion of the perimeter of the ellipse between the <code>startAngle</code> parameter and the <code>startAngle</code> + <code>sweepAngle</code> parameters.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates a rectangle to bound an ellipse.  </p>\n</li>\n<li><p>Defines the start (45 degrees) and sweep (270 degrees) angles.  </p>\n</li>\n<li><p>Draws the elliptical arc to the screen.  </p>\n<p>The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#7\">private:\n   void DrawArcRectangle( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create rectangle to bound ellipse.\n      Rectangle rect = Rectangle(0,0,100,200);\n\n      // Create start and sweep angles on ellipse.\n      float startAngle = 45.0F;\n      float sweepAngle = 270.0F;\n\n      // Draw arc to screen.\n      e-&gt;Graphics-&gt;DrawArc( blackPen, rect, startAngle, sweepAngle );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#7\">        private void DrawArcRectangle(PaintEventArgs e)\n        {\n           // Create pen.\n            Pen blackPen= new Pen(Color.Black, 3);\n                     \n            // Create rectangle to bound ellipse.\n            Rectangle rect = new Rectangle(0, 0, 100, 200);\n                     \n            // Create start and sweep angles on ellipse.\n            float startAngle =  45.0F;\n            float sweepAngle = 270.0F;\n                     \n            // Draw arc to screen.\n            e.Graphics.DrawArc(blackPen, rect, startAngle, sweepAngle);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#7\">    Private Sub DrawArcRectangle(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create rectangle to bound ellipse.\n        Dim rect As New Rectangle(0, 0, 100, 200)\n\n        &#39; Create start and sweep angles on ellipse.\n        Dim startAngle As Single = 45.0F\n        Dim sweepAngle As Single = 270.0F\n\n        &#39; Draw arc to screen.\n        e.Graphics.DrawArc(blackPen, rect, startAngle, sweepAngle)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawArc_System_Drawing_Pen_System_Drawing_RectangleF_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawArc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawArc(Pen,RectangleF,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Draws an arc representing a portion of an ellipse specified by a <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawArc (System.Drawing.Pen pen, System.Drawing.RectangleF rect, float startAngle, float sweepAngle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the arc.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that defines the boundaries of the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sweepAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Angle in degrees measured clockwise from the <code>startAngle</code> parameter to ending point of the arc.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws an arc that is a portion of the perimeter of an ellipse. The ellipse is defined by the boundaries of a rectangle. The arc is the portion of the perimeter of the ellipse between the <code>startAngle</code> parameter and the <code>startAngle</code> + <code>sweepAngle</code> parameters.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates a rectangle to bound an ellipse.  </p>\n</li>\n<li><p>Defines the start (45 degrees) and sweep (270 degrees) angles.  </p>\n</li>\n<li><p>Draws the elliptical arc to the screen.  </p>\n<p>The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#8\">private:\n   void DrawArcRectangleF( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create rectangle to bound ellipse.\n      RectangleF rect = RectangleF(0.0F,0.0F,100.0F,200.0F);\n\n      // Create start and sweep angles on ellipse.\n      float startAngle = 45.0F;\n      float sweepAngle = 270.0F;\n\n      // Draw arc to screen.\n      e-&gt;Graphics-&gt;DrawArc( blackPen, rect, startAngle, sweepAngle );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#8\">        private void DrawArcRectangleF(PaintEventArgs e)\n        {\n            // Create pen.\n            Pen blackPen= new Pen(Color.Black, 3);\n                     \n            // Create rectangle to bound ellipse.\n            RectangleF rect = new RectangleF(0.0F, 0.0F, 100.0F, 200.0F);\n                     \n            // Create start and sweep angles on ellipse.\n            float startAngle =  45.0F;\n            float sweepAngle = 270.0F;\n                     \n            // Draw arc to screen.\n            e.Graphics.DrawArc(blackPen, rect, startAngle, sweepAngle);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#8\">    Private Sub DrawArcRectangleF(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create rectangle to bound ellipse.\n        Dim rect As New RectangleF(0.0F, 0.0F, 100.0F, 200.0F)\n\n        &#39; Create start and sweep angles on ellipse.\n        Dim startAngle As Single = 45.0F\n        Dim sweepAngle As Single = 270.0F\n\n        &#39; Draw arc to screen.\n        e.Graphics.DrawArc(blackPen, rect, startAngle, sweepAngle)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawArc_System_Drawing_Pen_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawArc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawArc(Pen,Int32,Int32,Int32,Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawArc (System.Drawing.Pen pen, int x, int y, int width, int height, int startAngle, int sweepAngle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the arc.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sweepAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Angle in degrees measured clockwise from the <code>startAngle</code> parameter to ending point of the arc.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>rects</code> is a zero-length array.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws an arc that is a portion of the perimeter of an ellipse. The ellipse is defined by the boundaries of a rectangle. The arc is the portion of the perimeter of the ellipse between the <code>startAngle</code> parameter and the <code>startAngle</code> + <code>sweepAngle</code> parameters.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates the position and size of a rectangle to bound an ellipse.  </p>\n</li>\n<li><p>Defines the start (45 degrees) and sweep (270 degrees) angles.  </p>\n</li>\n<li><p>Draws the elliptical arc to the screen.  </p>\n<p>The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#9\">private:\n   void DrawArcInt( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n      // Create coordinates of rectangle to bound ellipse.\n      int x = 0;\n      int y = 0;\n      int width = 100;\n      int height = 200;\n\n      // Create start and sweep angles on ellipse.\n      int startAngle = 45;\n      int sweepAngle = 270;\n\n      // Draw arc to screen.\n      e-&gt;Graphics-&gt;DrawArc( blackPen, x, y, width, height, startAngle, sweepAngle );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#9\">        private void DrawArcInt(PaintEventArgs e)\n        {\n            // Create pen.\n            Pen blackPen= new Pen(Color.Black, 3);\n                     \n            // Create coordinates of rectangle to bound ellipse.\n            int x = 0;\n            int y = 0;\n            int width = 100;\n            int height = 200;\n                     \n            // Create start and sweep angles on ellipse.\n            int startAngle =  45;\n            int sweepAngle = 270;\n                     \n            // Draw arc to screen.\n            e.Graphics.DrawArc(blackPen, x, y, width, height, startAngle, sweepAngle);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#9\">    Private Sub DrawArcInt(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create coordinates of rectangle to bound ellipse.\n        Dim x As Integer = 0\n        Dim y As Integer = 0\n        Dim width As Integer = 100\n        Dim height As Integer = 200\n\n        &#39; Create start and sweep angles on ellipse.\n        Dim startAngle As Integer = 45\n        Dim sweepAngle As Integer = 270\n\n        &#39; Draw arc to screen.\n        e.Graphics.DrawArc(blackPen, x, y, width, height, startAngle, _\n        sweepAngle)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawArc_System_Drawing_Pen_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawArc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawArc(Pen,Single,Single,Single,Single,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawArc (System.Drawing.Pen pen, float x, float y, float width, float height, float startAngle, float sweepAngle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the arc.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sweepAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Angle in degrees measured clockwise from the <code>startAngle</code> parameter to ending point of the arc.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws an arc that is a portion of the perimeter of an ellipse. The ellipse is defined by the boundaries of a rectangle. The arc is the portion of the perimeter of the ellipse between the <code>startAngle</code> parameter and the <code>startAngle</code> + <code>sweepAngle</code> parameters.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates the position and size of a rectangle to bound an ellipse.  </p>\n</li>\n<li><p>Defines the start (45 degrees) and sweep (270 degrees) angles.  </p>\n</li>\n<li><p>Draws the elliptical arc to the screen.  </p>\n<p>The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#10\">private:\n   void DrawArcFloat( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create coordinates of rectangle to bound ellipse.\n      float x = 0.0F;\n      float y = 0.0F;\n      float width = 100.0F;\n      float height = 200.0F;\n\n      // Create start and sweep angles on ellipse.\n      float startAngle = 45.0F;\n      float sweepAngle = 270.0F;\n\n      // Draw arc to screen.\n      e-&gt;Graphics-&gt;DrawArc( blackPen, x, y, width, height, startAngle, sweepAngle );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#10\">        private void DrawArcFloat(PaintEventArgs e)\n        {\n            // Create pen.\n            Pen blackPen= new Pen(Color.Black, 3);\n                     \n            // Create coordinates of rectangle to bound ellipse.\n            float x = 0.0F;\n            float y = 0.0F;\n            float width = 100.0F;\n            float height = 200.0F;\n                     \n            // Create start and sweep angles on ellipse.\n            float startAngle =  45.0F;\n            float sweepAngle = 270.0F;\n                     \n            // Draw arc to screen.\n            e.Graphics.DrawArc(blackPen, x, y, width, height, startAngle, sweepAngle);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#10\">    Private Sub DrawArcFloat(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create coordinates of rectangle to bound ellipse.\n        Dim x As Single = 0.0F\n        Dim y As Single = 0.0F\n        Dim width As Single = 100.0F\n        Dim height As Single = 200.0F\n\n        &#39; Create start and sweep angles on ellipse.\n        Dim startAngle As Single = 45.0F\n        Dim sweepAngle As Single = 270.0F\n\n        &#39; Draw arc to screen.\n        e.Graphics.DrawArc(blackPen, x, y, width, height, startAngle, _\n        sweepAngle)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawBezier_System_Drawing_Pen_System_Drawing_Point_System_Drawing_Point_System_Drawing_Point_System_Drawing_Point_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawBezier_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawBezier(Pen,Point,Point,Point,Point)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a Bézier spline defined by four <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawBezier (System.Drawing.Pen pen, System.Drawing.Point pt1, System.Drawing.Point pt2, System.Drawing.Point pt3, System.Drawing.Point pt4);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> structure that determines the color, width, and style of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure that represents the starting point of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure that represents the first control point for the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt3</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure that represents the second control point for the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt4</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure that represents the ending point of the curve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Bézier curve is drawn from the first point to the fourth point. The second and third points are control points that determine the shape of the curve.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates the start, end, and two control points for the curve.  </p>\n</li>\n<li><p>Draws the Bézier curve to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#11\">private:\n   void DrawBezierPoint( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create points for curve.\n      Point start = Point(100,100);\n      Point control1 = Point(200,10);\n      Point control2 = Point(350,50);\n      Point end = Point(500,100);\n\n      // Draw arc to screen.\n      e-&gt;Graphics-&gt;DrawBezier( blackPen, start, control1, control2, end );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#11\">        private void DrawBezierPoint(PaintEventArgs e)\n        {\n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Create points for curve.\n            Point start = new Point(100, 100);\n            Point control1 = new Point(200, 10);\n            Point control2 = new Point(350, 50);\n            Point end = new Point(500, 100);\n                     \n            // Draw arc to screen.\n            e.Graphics.DrawBezier(blackPen, start, control1, control2, end);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#11\">    Private Sub DrawBezierPoint(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create points for curve.\n        Dim start As New Point(100, 100)\n        Dim control1 As New Point(200, 10)\n        Dim control2 As New Point(350, 50)\n        Dim [end] As New Point(500, 100)\n\n        &#39; Draw arc to screen.\n        e.Graphics.DrawBezier(blackPen, start, control1, control2, [end])\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawBezier_System_Drawing_Pen_System_Drawing_PointF_System_Drawing_PointF_System_Drawing_PointF_System_Drawing_PointF_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawBezier_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawBezier(Pen,PointF,PointF,PointF,PointF)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a Bézier spline defined by four <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawBezier (System.Drawing.Pen pen, System.Drawing.PointF pt1, System.Drawing.PointF pt2, System.Drawing.PointF pt3, System.Drawing.PointF pt4);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure that represents the starting point of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure that represents the first control point for the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt3</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure that represents the second control point for the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt4</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure that represents the ending point of the curve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Bézier spline is drawn from the first point to the fourth point. The second and third points are control points that determine the shape of the curve.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates the start, end, and two control points for the curve.  </p>\n</li>\n<li><p>Draws the Bézier curve to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#12\">private:\n   void DrawBezierPointF( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create points for curve.\n      PointF start = PointF(100.0F,100.0F);\n      PointF control1 = PointF(200.0F,10.0F);\n      PointF control2 = PointF(350.0F,50.0F);\n      PointF end = PointF(500.0F,100.0F);\n\n      // Draw arc to screen.\n      e-&gt;Graphics-&gt;DrawBezier( blackPen, start, control1, control2, end );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#12\">        private void DrawBezierPointF(PaintEventArgs e)\n        {\n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Create points for curve.\n            PointF start = new PointF(100.0F, 100.0F);\n            PointF control1 = new PointF(200.0F, 10.0F);\n            PointF control2 = new PointF(350.0F, 50.0F);\n            PointF end = new PointF(500.0F, 100.0F);\n                     \n            // Draw arc to screen.\n            e.Graphics.DrawBezier(blackPen, start, control1, control2, end);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#12\">    Private Sub DrawBezierPointF(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create points for curve.\n        Dim start As New PointF(100.0F, 100.0F)\n        Dim control1 As New PointF(200.0F, 10.0F)\n        Dim control2 As New PointF(350.0F, 50.0F)\n        Dim [end] As New PointF(500.0F, 100.0F)\n\n        &#39; Draw arc to screen.\n        e.Graphics.DrawBezier(blackPen, start, control1, control2, [end])\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawBezier_System_Drawing_Pen_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawBezier_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawBezier(Pen,Single,Single,Single,Single,Single,Single,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a Bézier spline defined by four ordered pairs of coordinates that represent points.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawBezier (System.Drawing.Pen pen, float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the starting point of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the starting point of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the first control point of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the first control point of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x3</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the second control point of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y3</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the second control point of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x4</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the ending point of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y4</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the ending point of the curve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Bézier spline is drawn from the first point to the fourth point. The second and third points are control points that determine the shape of the curve.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates the coordinates of the start, end, and two control points for the curve.  </p>\n</li>\n<li><p>Draws the Bézier curve to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#13\">private:\n   void DrawBezierFloat( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create coordinates of points for curve.\n      float startX = 100.0F;\n      float startY = 100.0F;\n      float controlX1 = 200.0F;\n      float controlY1 = 10.0F;\n      float controlX2 = 350.0F;\n      float controlY2 = 50.0F;\n      float endX = 500.0F;\n      float endY = 100.0F;\n\n      // Draw arc to screen.\n      e-&gt;Graphics-&gt;DrawBezier( blackPen, startX, startY, controlX1, controlY1, controlX2, controlY2, endX, endY );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#13\">        private void DrawBezierFloat(PaintEventArgs e)\n        {\n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Create coordinates of points for curve.\n            float startX = 100.0F;\n            float startY = 100.0F;\n            float controlX1 = 200.0F;\n            float controlY1 =  10.0F;\n            float controlX2 = 350.0F;\n            float controlY2 =  50.0F;\n            float endX = 500.0F;\n            float endY = 100.0F;\n                     \n            // Draw arc to screen.\n            e.Graphics.DrawBezier(blackPen, startX, startY,\n                controlX1, controlY1,\n                controlX2, controlY2,\n                endX, endY);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#13\">\n    &#39; Begin Example03.\n    Private Sub DrawBezierFloat(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create coordinates of points for curve.\n        Dim startX As Single = 100.0F\n        Dim startY As Single = 100.0F\n        Dim controlX1 As Single = 200.0F\n        Dim controlY1 As Single = 10.0F\n        Dim controlX2 As Single = 350.0F\n        Dim controlY2 As Single = 50.0F\n        Dim endX As Single = 500.0F\n        Dim endY As Single = 100.0F\n\n        &#39; Draw arc to screen.\n        e.Graphics.DrawBezier(blackPen, startX, startY, controlX1, _\n        controlY1, controlX2, controlY2, endX, endY)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawBeziers_System_Drawing_Pen_System_Drawing_Point___\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawBeziers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawBeziers(Pen,Point[])</div>        \r\n          </div>\r\n    \r\n            <p>Draws a series of Bézier splines from an array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawBeziers (System.Drawing.Pen pen, System.Drawing.Point[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that represent the points that determine the curve. The number of points in the array should be a multiple of 3 plus 1, such as 4, 7, or 10.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The number of points in the array should be a multiple of 3 plus 1 because the first spline requires 4 points and any other splines require 3 points each. The first Bézier spline is drawn from the first point to the fourth point in the point array. The second and third points are control points that determine the shape of the curve. Each subsequent curve needs exactly three more points: two more control points and an ending point. The ending point of the previous curve is used as the starting point for each additional curve.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates the start, end, and two control points for a first curve and endpoint and two control points for a second curve.  </p>\n</li>\n<li><p>Draws the successive Bézier curves to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#14\">private:\n   void DrawBeziersPoint( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create points for curve.\n      Point start = Point(100,100);\n      Point control1 = Point(200,10);\n      Point control2 = Point(350,50);\n      Point end1 = Point(500,100);\n      Point control3 = Point(600,150);\n      Point control4 = Point(650,250);\n      Point end2 = Point(500,300);\n      array&lt;Point&gt;^ bezierPoints = {start,control1,control2,end1,control3,control4,end2};\n\n      // Draw arc to screen.\n      e-&gt;Graphics-&gt;DrawBeziers( blackPen, bezierPoints );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#14\">        private void DrawBeziersPoint(PaintEventArgs e)\n        {\n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Create points for curve.\n            Point start = new Point(100, 100);\n            Point control1 = new Point(200, 10);\n            Point control2 = new Point(350, 50);\n            Point end1 = new Point(500, 100);\n            Point control3 = new Point(600, 150);\n            Point control4 = new Point(650, 250);\n            Point end2 = new Point(500, 300);\n            Point[] bezierPoints =\n                     {\n                         start, control1, control2, end1,\n                         control3, control4, end2\n                     };\n                     \n            // Draw arc to screen.\n            e.Graphics.DrawBeziers(blackPen, bezierPoints);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#14\">    Private Sub DrawBeziersPoint(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create points for curve.\n        Dim start As New Point(100, 100)\n        Dim control1 As New Point(200, 10)\n        Dim control2 As New Point(350, 50)\n        Dim end1 As New Point(500, 100)\n        Dim control3 As New Point(600, 150)\n        Dim control4 As New Point(650, 250)\n        Dim end2 As New Point(500, 300)\n        Dim bezierPoints As Point() = {start, control1, control2, _\n        end1, control3, control4, end2}\n\n        &#39; Draw arc to screen.\n        e.Graphics.DrawBeziers(blackPen, bezierPoints)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawBeziers_System_Drawing_Pen_System_Drawing_PointF___\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawBeziers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawBeziers(Pen,PointF[])</div>        \r\n          </div>\r\n    \r\n            <p>Draws a series of Bézier splines from an array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawBeziers (System.Drawing.Pen pen, System.Drawing.PointF[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that represent the points that determine the curve. The number of points in the array should be a multiple of 3 plus 1, such as 4, 7, or 10.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The number of points in the array should be a multiple of 3 plus 1 because the first spline requires 4 points and any other splines require 3 points each. The first Bézier curve is drawn from the first point to the fourth point in the point array. The second and third points are control points that determine the shape of the curve. Each subsequent curve needs exactly three more points: two more control points and an ending point. The ending point of the previous curve is used as the starting point for each additional curve.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates the start, end, and two control points for a first curve and endpoint and two control points for a second curve.  </p>\n</li>\n<li><p>Draws the successive Bézier curves to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#15\">private:\n   void DrawBeziersPointF( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create points for curve.\n      PointF start = PointF(100.0F,100.0F);\n      PointF control1 = PointF(200.0F,10.0F);\n      PointF control2 = PointF(350.0F,50.0F);\n      PointF end1 = PointF(500.0F,100.0F);\n      PointF control3 = PointF(600.0F,150.0F);\n      PointF control4 = PointF(650.0F,250.0F);\n      PointF end2 = PointF(500.0F,300.0F);\n      array&lt;PointF&gt;^ bezierPoints = {start,control1,control2,end1,control3,control4,end2};\n\n      // Draw arc to screen.\n      e-&gt;Graphics-&gt;DrawBeziers( blackPen, bezierPoints );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#15\">        private void DrawBeziersPointF(PaintEventArgs e)\n        {\n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Create points for curve.\n            PointF start = new PointF(100.0F, 100.0F);\n            PointF control1 = new PointF(200.0F, 10.0F);\n            PointF control2 = new PointF(350.0F, 50.0F);\n            PointF end1 = new PointF(500.0F, 100.0F);\n            PointF control3 = new PointF(600.0F, 150.0F);\n            PointF control4 = new PointF(650.0F, 250.0F);\n            PointF end2 = new PointF(500.0F, 300.0F);\n            PointF[] bezierPoints = { start, control1, control2, end1,\n                 control3, control4, end2 };      \n                         \n            // Draw arc to screen.\n            e.Graphics.DrawBeziers(blackPen, bezierPoints);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#15\">    Private Sub DrawBeziersPointF(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create points for curve.\n        Dim start As New PointF(100.0F, 100.0F)\n        Dim control1 As New PointF(200.0F, 10.0F)\n        Dim control2 As New PointF(350.0F, 50.0F)\n        Dim end1 As New PointF(500.0F, 100.0F)\n        Dim control3 As New PointF(600.0F, 150.0F)\n        Dim control4 As New PointF(650.0F, 250.0F)\n        Dim end2 As New PointF(500.0F, 300.0F)\n        Dim bezierPoints As PointF() = {start, control1, control2, _\n        end1, control3, control4, end2}\n\n        &#39; Draw arc to screen.\n        e.Graphics.DrawBeziers(blackPen, bezierPoints)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawClosedCurve_System_Drawing_Pen_System_Drawing_Point___\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawClosedCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawClosedCurve(Pen,Point[])</div>        \r\n          </div>\r\n    \r\n            <p>Draws a closed cardinal spline defined by an array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.Point[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and height of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that define the spline.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws a closed cardinal spline that passes through each point in the array. If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close the figure.  </p>\n<p> The array of points must contain at least four <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.  </p>\n<p> This method uses a default tension of 0.5.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates red and green pens.  </p>\n</li>\n<li><p>Creates seven points to define a curve.  </p>\n</li>\n<li><p>Draws seven red straight lines between the seven points to form a closed polygon.  </p>\n</li>\n<li><p>Draws a green closed curve through the seven points.  </p>\n<p>The method uses a default tension of 0.5.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#16\">private:\n   void DrawClosedCurvePoint( PaintEventArgs^ e )\n   {\n\n      // Create pens.\n      Pen^ redPen = gcnew Pen( Color::Red,3.0f );\n      Pen^ greenPen = gcnew Pen( Color::Green,3.0f );\n\n      // Create points that define curve.\n      Point point1 = Point(50,50);\n      Point point2 = Point(100,25);\n      Point point3 = Point(200,5);\n      Point point4 = Point(250,50);\n      Point point5 = Point(300,100);\n      Point point6 = Point(350,200);\n      Point point7 = Point(250,250);\n      array&lt;Point&gt;^ curvePoints = {point1,point2,point3,point4,point5,point6,point7};\n\n      // Draw lines between original points to screen.\n      e-&gt;Graphics-&gt;DrawLines( redPen, curvePoints );\n\n      // Draw closed curve to screen.\n      e-&gt;Graphics-&gt;DrawClosedCurve( greenPen, curvePoints );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#16\">        private void DrawClosedCurvePoint(PaintEventArgs e)\n        {\n            // Create pens.\n            Pen redPen   = new Pen(Color.Red, 3);\n            Pen greenPen = new Pen(Color.Green, 3);\n                     \n            // Create points that define curve.\n            Point point1 = new Point(50,  50);\n            Point point2 = new Point(100,  25);\n            Point point3 = new Point(200,   5);\n            Point point4 = new Point(250,  50);\n            Point point5 = new Point(300, 100);\n            Point point6 = new Point(350, 200);\n            Point point7 = new Point(250, 250);\n            Point[] curvePoints =\n                     {\n                         point1,\n                         point2,\n                         point3,\n                         point4,\n                         point5,\n                         point6,\n                         point7\n                     };\n                     \n            // Draw lines between original points to screen.\n            e.Graphics.DrawLines(redPen, curvePoints);\n                     \n            // Draw closed curve to screen.\n            e.Graphics.DrawClosedCurve(greenPen, curvePoints);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#16\">    Private Sub DrawClosedCurvePoint(ByVal e As PaintEventArgs)\n\n        &#39; Create pens.\n        Dim redPen As New Pen(Color.Red, 3)\n        Dim greenPen As New Pen(Color.Green, 3)\n\n        &#39; Create points that define curve.\n        Dim point1 As New Point(50, 50)\n        Dim point2 As New Point(100, 25)\n        Dim point3 As New Point(200, 5)\n        Dim point4 As New Point(250, 50)\n        Dim point5 As New Point(300, 100)\n        Dim point6 As New Point(350, 200)\n        Dim point7 As New Point(250, 250)\n        Dim curvePoints As Point() = {point1, point2, point3, point4, _\n        point5, point6, point7}\n\n        &#39; Draw lines between original points to screen.\n        e.Graphics.DrawLines(redPen, curvePoints)\n\n        &#39; Draw closed curve to screen.\n        e.Graphics.DrawClosedCurve(greenPen, curvePoints)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawClosedCurve_System_Drawing_Pen_System_Drawing_PointF___\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawClosedCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawClosedCurve(Pen,PointF[])</div>        \r\n          </div>\r\n    \r\n            <p>Draws a closed cardinal spline defined by an array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and height of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that define the spline.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws a closed cardinal spline that passes through each point in the array. If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.  </p>\n<p> The array of points must contain at least four <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures.  </p>\n<p> This method uses a default tension of 0.5.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates red and green pens.  </p>\n</li>\n<li><p>Creates seven points to define a curve.  </p>\n</li>\n<li><p>Draws seven red straight lines between the seven points to form a closed polygon.  </p>\n</li>\n<li><p>Draws a green closed curve through the seven points.  </p>\n<p>The method uses a default tension of 0.5.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#18\">private:\n   void DrawClosedCurvePointF( PaintEventArgs^ e )\n   {\n      // Create pens.\n      Pen^ redPen = gcnew Pen( Color::Red,3.0f );\n      Pen^ greenPen = gcnew Pen( Color::Green,3.0f );\n\n      // Create points that define curve.\n      PointF point1 = PointF(50.0F,50.0F);\n      PointF point2 = PointF(100.0F,25.0F);\n      PointF point3 = PointF(200.0F,5.0F);\n      PointF point4 = PointF(250.0F,50.0F);\n      PointF point5 = PointF(300.0F,100.0F);\n      PointF point6 = PointF(350.0F,200.0F);\n      PointF point7 = PointF(250.0F,250.0F);\n      array&lt;PointF&gt;^ curvePoints = {point1,point2,point3,point4,point5,point6,point7};\n\n      // Draw lines between original points to screen.\n      e-&gt;Graphics-&gt;DrawLines( redPen, curvePoints );\n\n      // Draw closed curve to screen.\n      e-&gt;Graphics-&gt;DrawClosedCurve( greenPen, curvePoints );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#18\">        private void DrawClosedCurvePointF(PaintEventArgs e)\n        {\n\n            // Create pens.\n            Pen redPen = new Pen(Color.Red, 3);\n            Pen greenPen = new Pen(Color.Green, 3);\n\n            // Create points that define curve.\n            PointF point1 = new PointF(50.0F, 50.0F);\n            PointF point2 = new PointF(100.0F, 25.0F);\n            PointF point3 = new PointF(200.0F, 5.0F);\n            PointF point4 = new PointF(250.0F, 50.0F);\n            PointF point5 = new PointF(300.0F, 100.0F);\n            PointF point6 = new PointF(350.0F, 200.0F);\n            PointF point7 = new PointF(250.0F, 250.0F);\n            PointF[] curvePoints = {point1, point2, point3, point4, point5, point6, point7};\n\n            // Draw lines between original points to screen.\n            e.Graphics.DrawLines(redPen, curvePoints);\n\n            // Draw closed curve to screen.\n            e.Graphics.DrawClosedCurve(greenPen, curvePoints);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#18\">    Private Sub DrawClosedCurvePointF(ByVal e As PaintEventArgs)\n\n        &#39; Create pens.\n        Dim redPen As New Pen(Color.Red, 3)\n        Dim greenPen As New Pen(Color.Green, 3)\n\n        &#39; Create points that define curve.\n        Dim point1 As New PointF(50.0F, 50.0F)\n        Dim point2 As New PointF(100.0F, 25.0F)\n        Dim point3 As New PointF(200.0F, 5.0F)\n        Dim point4 As New PointF(250.0F, 50.0F)\n        Dim point5 As New PointF(300.0F, 100.0F)\n        Dim point6 As New PointF(350.0F, 200.0F)\n        Dim point7 As New PointF(250.0F, 250.0F)\n        Dim curvePoints As PointF() = {point1, point2, point3, point4, _\n        point5, point6, point7}\n\n        &#39; Draw lines between original points to screen.\n        e.Graphics.DrawLines(redPen, curvePoints)\n\n        &#39; Draw closed curve to screen.\n        e.Graphics.DrawClosedCurve(greenPen, curvePoints)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawClosedCurve_System_Drawing_Pen_System_Drawing_Point___System_Single_System_Drawing_Drawing2D_FillMode_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawClosedCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawClosedCurve(Pen,Point[],Single,FillMode)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a closed cardinal spline defined by an array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures using a specified tension.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.Point[] points, float tension, System.Drawing.Drawing2D.FillMode fillmode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and height of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that define the spline.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>tension</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Value greater than or equal to 0.0F that specifies the tension of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fillmode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a> enumeration that determines how the curve is filled. This parameter is required but ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws a closed cardinal spline that passes through each point in the array. If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.  </p>\n<p> The array of points must contain at least four <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.  </p>\n<p> The <code>tension</code> parameter determines the shape of the spline. If the value of the <code>tension</code> parameter is 0.0F, this method draws straight line segments to connect the points. Usually, the <code>tension</code> parameter is less than or equal to 1.0F. Values over 1.0F produce unusual results.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates red and green pens.  </p>\n</li>\n<li><p>Creates seven points to define the curve.  </p>\n</li>\n<li><p>Draws seven red straight lines between the seven points to form a polygon.  </p>\n</li>\n<li><p>Creates tension and fill mode settings.  </p>\n</li>\n<li><p>Draws a green closed curve through the seven points.  </p>\n<p>The method uses a tension of 1.0 and sets the fill mode to <code>FillMode.Alternate</code>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#17\">private:\n   void DrawClosedCurvePointTension( PaintEventArgs^ e )\n   {\n      // Create pens.\n      Pen^ redPen = gcnew Pen( Color::Red,3.0f );\n      Pen^ greenPen = gcnew Pen( Color::Green,3.0f );\n\n      // Create points that define curve.\n      Point point1 = Point(50,50);\n      Point point2 = Point(100,25);\n      Point point3 = Point(200,5);\n      Point point4 = Point(250,50);\n      Point point5 = Point(300,100);\n      Point point6 = Point(350,200);\n      Point point7 = Point(250,250);\n      array&lt;Point&gt;^ curvePoints = {point1,point2,point3,point4,point5,point6,point7};\n\n      // Draw lines between original points to screen.\n      e-&gt;Graphics-&gt;DrawLines( redPen, curvePoints );\n\n      // Create tension and fill mode.\n      float tension = 1.0F;\n      FillMode aFillMode = FillMode::Alternate;\n\n      // Draw closed curve to screen.\n      e-&gt;Graphics-&gt;DrawClosedCurve( greenPen, curvePoints, tension, aFillMode );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#17\">        private void DrawClosedCurvePointTension(PaintEventArgs e)\n        {\n\n            // Create pens.\n            Pen redPen = new Pen(Color.Red, 3);\n            Pen greenPen = new Pen(Color.Green, 3);\n\n            // Create points that define curve.\n            Point point1 = new Point(50, 50);\n            Point point2 = new Point(100, 25);\n            Point point3 = new Point(200, 5);\n            Point point4 = new Point(250, 50);\n            Point point5 = new Point(300, 100);\n            Point point6 = new Point(350, 200);\n            Point point7 = new Point(250, 250);\n            Point[] curvePoints = {point1, point2, point3, point4, point5, point6, point7};\n\n            // Draw lines between original points to screen.\n            e.Graphics.DrawLines(redPen, curvePoints);\n\n            // Create tension and fill mode.\n            float tension = 1.0F;\n            FillMode aFillMode = FillMode.Alternate;\n\n            // Draw closed curve to screen.\n            e.Graphics.DrawClosedCurve(greenPen, curvePoints, tension, aFillMode);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#17\">    Private Sub DrawClosedCurvePointTension(ByVal e As PaintEventArgs)\n\n        &#39; Create pens.\n        Dim redPen As New Pen(Color.Red, 3)\n        Dim greenPen As New Pen(Color.Green, 3)\n\n        &#39; Create points that define curve.\n        Dim point1 As New Point(50, 50)\n        Dim point2 As New Point(100, 25)\n        Dim point3 As New Point(200, 5)\n        Dim point4 As New Point(250, 50)\n        Dim point5 As New Point(300, 100)\n        Dim point6 As New Point(350, 200)\n        Dim point7 As New Point(250, 250)\n        Dim curvePoints As Point() = {point1, point2, point3, point4, _\n        point5, point6, point7}\n\n        &#39; Draw lines between original points to screen.\n        e.Graphics.DrawLines(redPen, curvePoints)\n\n        &#39; Create tension and fill mode.\n        Dim tension As Single = 1.0F\n        Dim aFillMode As FillMode = FillMode.Alternate\n\n        &#39; Draw closed curve to screen.\n        e.Graphics.DrawClosedCurve(greenPen, curvePoints, tension, _\n        aFillMode)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawClosedCurve_System_Drawing_Pen_System_Drawing_PointF___System_Single_System_Drawing_Drawing2D_FillMode_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawClosedCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawClosedCurve(Pen,PointF[],Single,FillMode)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a closed cardinal spline defined by an array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures using a specified tension.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, float tension, System.Drawing.Drawing2D.FillMode fillmode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and height of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that define the spline.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>tension</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Value greater than or equal to 0.0F that specifies the tension of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fillmode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a> enumeration that determines how the curve is filled. This parameter is required but is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws a closed cardinal spline that passes through each point in the array. If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.  </p>\n<p> The array of points must contain at least four <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures.  </p>\n<p> The <code>tension</code> parameter determines the shape of the spline. If the value of the <code>tension</code> parameter is 0.0F, this method draws straight line segments to connect the points. Usually, the <code>tension</code> parameter is less than or equal to 1.0F. Values over 1.0F produce unusual results.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates red and green pens.  </p>\n</li>\n<li><p>Creates seven points to define the curve.  </p>\n</li>\n<li><p>Draws seven red straight lines between the seven points to form a polygon.  </p>\n</li>\n<li><p>Creates tension and fill mode settings.  </p>\n</li>\n<li><p>Draws a green closed curve through the seven points.  </p>\n<p>The method uses a tension of 1.0 and sets the fill mode to <code>FillMode.Alternate</code>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#19\">private:\n   void DrawClosedCurvePointFTension( PaintEventArgs^ e )\n   {\n      // Create pens.\n      Pen^ redPen = gcnew Pen( Color::Red,3.0f );\n      Pen^ greenPen = gcnew Pen( Color::Green,3.0f );\n\n      // Create points that define curve.\n      PointF point1 = PointF(50.0F,50.0F);\n      PointF point2 = PointF(100.0F,25.0F);\n      PointF point3 = PointF(200.0F,5.0F);\n      PointF point4 = PointF(250.0F,50.0F);\n      PointF point5 = PointF(300.0F,100.0F);\n      PointF point6 = PointF(350.0F,200.0F);\n      PointF point7 = PointF(250.0F,250.0F);\n      array&lt;PointF&gt;^ curvePoints = {point1,point2,point3,point4,point5,point6,point7};\n\n      // Draw lines between original points to screen.\n      e-&gt;Graphics-&gt;DrawLines( redPen, curvePoints );\n\n      // Create tension and fill mode.\n      float tension = 1.0F;\n      FillMode aFillMode = FillMode::Alternate;\n\n      // Draw closed curve to screen.\n      e-&gt;Graphics-&gt;DrawClosedCurve( greenPen, curvePoints, tension, aFillMode );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#19\">        private void DrawClosedCurvePointFTension(PaintEventArgs e)\n        {\n\n            // Create pens.\n            Pen redPen = new Pen(Color.Red, 3);\n            Pen greenPen = new Pen(Color.Green, 3);\n\n            // Create points that define curve.\n            PointF point1 = new PointF(50.0F, 50.0F);\n            PointF point2 = new PointF(100.0F, 25.0F);\n            PointF point3 = new PointF(200.0F, 5.0F);\n            PointF point4 = new PointF(250.0F, 50.0F);\n            PointF point5 = new PointF(300.0F, 100.0F);\n            PointF point6 = new PointF(350.0F, 200.0F);\n            PointF point7 = new PointF(250.0F, 250.0F);\n            PointF[] curvePoints = {point1, point2, point3, point4, point5, point6, point7};\n\n            // Draw lines between original points to screen.\n            e.Graphics.DrawLines(redPen, curvePoints);\n\n            // Create tension and fill mode.\n            float tension = 1.0F;\n            FillMode aFillMode = FillMode.Alternate;\n\n            // Draw closed curve to screen.\n            e.Graphics.DrawClosedCurve(greenPen, curvePoints, tension, aFillMode);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#19\">    Private Sub DrawClosedCurvePointFTension(ByVal e As PaintEventArgs)\n\n        &#39; Create pens.\n        Dim redPen As New Pen(Color.Red, 3)\n        Dim greenPen As New Pen(Color.Green, 3)\n\n        &#39; Create points that define curve.\n        Dim point1 As New PointF(50.0F, 50.0F)\n        Dim point2 As New PointF(100.0F, 25.0F)\n        Dim point3 As New PointF(200.0F, 5.0F)\n        Dim point4 As New PointF(250.0F, 50.0F)\n        Dim point5 As New PointF(300.0F, 100.0F)\n        Dim point6 As New PointF(350.0F, 200.0F)\n        Dim point7 As New PointF(250.0F, 250.0F)\n        Dim curvePoints As PointF() = {point1, point2, point3, point4, _\n        point5, point6, point7}\n\n        &#39; Draw lines between original points to screen.\n        e.Graphics.DrawLines(redPen, curvePoints)\n\n        &#39; Create tension and fill mode.\n        Dim tension As Single = 1.0F\n        Dim aFillMode As FillMode = FillMode.Alternate\n\n        &#39; Draw closed curve to screen.\n        e.Graphics.DrawClosedCurve(greenPen, curvePoints, tension, _\n        aFillMode)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawCurve_System_Drawing_Pen_System_Drawing_Point___\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawCurve(Pen,Point[])</div>        \r\n          </div>\r\n    \r\n            <p>Draws a cardinal spline through a specified array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawCurve (System.Drawing.Pen pen, System.Drawing.Point[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and height of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that define the spline.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws a cardinal spline that passes through each point in the array.  </p>\n<p> The array of points must contain at least three <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures for a curve to be drawn.  </p>\n<p> This method uses a default tension of 0.5.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates red and green pens.  </p>\n</li>\n<li><p>Creates seven points to define a curve.  </p>\n</li>\n<li><p>Draws six red straight lines between the seven points to form an incomplete polygon.  </p>\n</li>\n<li><p>Draws an open green curve through the seven points.  </p>\n<p>The method uses a default tension of 0.5.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#20\">private:\n   void DrawCurvePoint( PaintEventArgs^ e )\n   {\n      // Create pens.\n      Pen^ redPen = gcnew Pen( Color::Red,3.0f );\n      Pen^ greenPen = gcnew Pen( Color::Green,3.0f );\n\n      // Create points that define curve.\n      Point point1 = Point(50,50);\n      Point point2 = Point(100,25);\n      Point point3 = Point(200,5);\n      Point point4 = Point(250,50);\n      Point point5 = Point(300,100);\n      Point point6 = Point(350,200);\n      Point point7 = Point(250,250);\n      array&lt;Point&gt;^ curvePoints = {point1,point2,point3,point4,point5,point6,point7};\n\n      // Draw lines between original points to screen.\n      e-&gt;Graphics-&gt;DrawLines( redPen, curvePoints );\n\n      // Draw curve to screen.\n      e-&gt;Graphics-&gt;DrawCurve( greenPen, curvePoints );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#20\">        private void DrawCurvePoint(PaintEventArgs e)\n        {\n\n            // Create pens.\n            Pen redPen = new Pen(Color.Red, 3);\n            Pen greenPen = new Pen(Color.Green, 3);\n\n            // Create points that define curve.\n            Point point1 = new Point(50, 50);\n            Point point2 = new Point(100, 25);\n            Point point3 = new Point(200, 5);\n            Point point4 = new Point(250, 50);\n            Point point5 = new Point(300, 100);\n            Point point6 = new Point(350, 200);\n            Point point7 = new Point(250, 250);\n            Point[] curvePoints = {point1, point2, point3, point4, point5, point6, point7};\n\n            // Draw lines between original points to screen.\n            e.Graphics.DrawLines(redPen, curvePoints);\n\n            // Draw curve to screen.\n            e.Graphics.DrawCurve(greenPen, curvePoints);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#20\">    Private Sub DrawCurvePoint(ByVal e As PaintEventArgs)\n\n        &#39; Create pens.\n        Dim redPen As New Pen(Color.Red, 3)\n        Dim greenPen As New Pen(Color.Green, 3)\n\n        &#39; Create points that define curve.\n        Dim point1 As New Point(50, 50)\n        Dim point2 As New Point(100, 25)\n        Dim point3 As New Point(200, 5)\n        Dim point4 As New Point(250, 50)\n        Dim point5 As New Point(300, 100)\n        Dim point6 As New Point(350, 200)\n        Dim point7 As New Point(250, 250)\n        Dim curvePoints As Point() = {point1, point2, point3, point4, _\n        point5, point6, point7}\n\n        &#39; Draw lines between original points to screen.\n        e.Graphics.DrawLines(redPen, curvePoints)\n\n        &#39; Draw curve to screen.\n        e.Graphics.DrawCurve(greenPen, curvePoints)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawCurve_System_Drawing_Pen_System_Drawing_PointF___\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawCurve(Pen,PointF[])</div>        \r\n          </div>\r\n    \r\n            <p>Draws a cardinal spline through a specified array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that define the spline.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws a cardinal spline that passes through each point in the array.  </p>\n<p> The array of points must contain at least three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures for a curve to be drawn.  </p>\n<p> This method uses a default tension of 0.5.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates red and green pens.  </p>\n</li>\n<li><p>Creates seven points to define a curve.  </p>\n</li>\n<li><p>Draws six red straight lines between the seven points to form an incomplete polygon.  </p>\n</li>\n<li><p>Draws an open green curve through the seven points.  </p>\n<p>The method uses a default tension of 0.5.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#23\">private:\n   void DrawCurvePointF( PaintEventArgs^ e )\n   {\n      // Create pens.\n      Pen^ redPen = gcnew Pen( Color::Red,3.0f );\n      Pen^ greenPen = gcnew Pen( Color::Green,3.0f );\n\n      // Create points that define curve.\n      PointF point1 = PointF(50.0F,50.0F);\n      PointF point2 = PointF(100.0F,25.0F);\n      PointF point3 = PointF(200.0F,5.0F);\n      PointF point4 = PointF(250.0F,50.0F);\n      PointF point5 = PointF(300.0F,100.0F);\n      PointF point6 = PointF(350.0F,200.0F);\n      PointF point7 = PointF(250.0F,250.0F);\n      array&lt;PointF&gt;^ curvePoints = {point1,point2,point3,point4,point5,point6,point7};\n\n      // Draw lines between original points to screen.\n      e-&gt;Graphics-&gt;DrawLines( redPen, curvePoints );\n\n      // Draw curve to screen.\n      e-&gt;Graphics-&gt;DrawCurve( greenPen, curvePoints );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#23\">        private void DrawCurvePointF(PaintEventArgs e)\n        {\n\n            // Create pens.\n            Pen redPen = new Pen(Color.Red, 3);\n            Pen greenPen = new Pen(Color.Green, 3);\n\n            // Create points that define curve.\n            PointF point1 = new PointF(50.0F, 50.0F);\n            PointF point2 = new PointF(100.0F, 25.0F);\n            PointF point3 = new PointF(200.0F, 5.0F);\n            PointF point4 = new PointF(250.0F, 50.0F);\n            PointF point5 = new PointF(300.0F, 100.0F);\n            PointF point6 = new PointF(350.0F, 200.0F);\n            PointF point7 = new PointF(250.0F, 250.0F);\n            PointF[] curvePoints = {point1, point2, point3, point4, point5, point6, point7};\n\n            // Draw lines between original points to screen.\n            e.Graphics.DrawLines(redPen, curvePoints);\n\n            // Draw curve to screen.\n            e.Graphics.DrawCurve(greenPen, curvePoints);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#23\">    Private Sub DrawCurvePointF(ByVal e As PaintEventArgs)\n\n        &#39; Create pens.\n        Dim redPen As New Pen(Color.Red, 3)\n        Dim greenPen As New Pen(Color.Green, 3)\n\n        &#39; Create points that define curve.\n        Dim point1 As New PointF(50.0F, 50.0F)\n        Dim point2 As New PointF(100.0F, 25.0F)\n        Dim point3 As New PointF(200.0F, 5.0F)\n        Dim point4 As New PointF(250.0F, 50.0F)\n        Dim point5 As New PointF(300.0F, 100.0F)\n        Dim point6 As New PointF(350.0F, 200.0F)\n        Dim point7 As New PointF(250.0F, 250.0F)\n        Dim curvePoints As PointF() = {point1, point2, point3, point4, _\n        point5, point6, point7}\n\n        &#39; Draw lines between original points to screen.\n        e.Graphics.DrawLines(redPen, curvePoints)\n\n        &#39; Draw curve to screen.\n        e.Graphics.DrawCurve(greenPen, curvePoints)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawCurve_System_Drawing_Pen_System_Drawing_Point___System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawCurve(Pen,Point[],Single)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a cardinal spline through a specified array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures using a specified tension.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawCurve (System.Drawing.Pen pen, System.Drawing.Point[] points, float tension);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that define the spline.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>tension</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Value greater than or equal to 0.0F that specifies the tension of the curve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws a cardinal spline that passes through each point in the array.  </p>\n<p> The array of points must contain at least three <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures for a curve to be drawn.  </p>\n<p> The <code>tension</code> parameter determines the shape of the spline. If the value of the <code>tension</code> parameter is 0.0F, this method draws straight line segments to connect the points. Usually, the <code>tension</code> parameter is less than or equal to 1.0F. Values over 1.0F produce unusual results.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates red and green pens.  </p>\n</li>\n<li><p>Creates seven points to define the curve.  </p>\n</li>\n<li><p>Draws six red straight lines between the seven points to form an incomplete polygon.  </p>\n</li>\n<li><p>Creates a tension setting.  </p>\n</li>\n<li><p>Draws an open green closed curve through the seven points.  </p>\n<p>The method uses a tension of 1.0.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#22\">private:\n   void DrawCurvePointTension( PaintEventArgs^ e )\n   {\n\n      // Create pens.\n      Pen^ redPen = gcnew Pen( Color::Red,3.0f );\n      Pen^ greenPen = gcnew Pen( Color::Green,3.0f );\n\n      // Create points that define curve.\n      Point point1 = Point(50,50);\n      Point point2 = Point(100,25);\n      Point point3 = Point(200,5);\n      Point point4 = Point(250,50);\n      Point point5 = Point(300,100);\n      Point point6 = Point(350,200);\n      Point point7 = Point(250,250);\n      array&lt;Point&gt;^ curvePoints = {point1,point2,point3,point4,point5,point6,point7};\n\n      // Draw lines between original points to screen.\n      e-&gt;Graphics-&gt;DrawLines( redPen, curvePoints );\n\n      // Create tension.\n      float tension = 1.0F;\n\n      // Draw curve to screen.\n      e-&gt;Graphics-&gt;DrawCurve( greenPen, curvePoints, tension );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#22\">        private void DrawCurvePointTension(PaintEventArgs e)\n        {\n\n            // Create pens.\n            Pen redPen = new Pen(Color.Red, 3);\n            Pen greenPen = new Pen(Color.Green, 3);\n\n            // Create points that define curve.\n            Point point1 = new Point(50, 50);\n            Point point2 = new Point(100, 25);\n            Point point3 = new Point(200, 5);\n            Point point4 = new Point(250, 50);\n            Point point5 = new Point(300, 100);\n            Point point6 = new Point(350, 200);\n            Point point7 = new Point(250, 250);\n            Point[] curvePoints = {point1, point2, point3, point4, point5, point6, point7};\n\n            // Draw lines between original points to screen.\n            e.Graphics.DrawLines(redPen, curvePoints);\n\n            // Create tension.\n            float tension = 1.0F;\n\n            // Draw curve to screen.\n            e.Graphics.DrawCurve(greenPen, curvePoints, tension);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#22\">    Private Sub DrawCurvePointTension(ByVal e As PaintEventArgs)\n\n        &#39; Create pens.\n        Dim redPen As New Pen(Color.Red, 3)\n        Dim greenPen As New Pen(Color.Green, 3)\n\n        &#39; Create points that define curve.\n        Dim point1 As New Point(50, 50)\n        Dim point2 As New Point(100, 25)\n        Dim point3 As New Point(200, 5)\n        Dim point4 As New Point(250, 50)\n        Dim point5 As New Point(300, 100)\n        Dim point6 As New Point(350, 200)\n        Dim point7 As New Point(250, 250)\n        Dim curvePoints As Point() = {point1, point2, point3, point4, _\n        point5, point6, point7}\n\n        &#39; Draw lines between original points to screen.\n        e.Graphics.DrawLines(redPen, curvePoints)\n\n        &#39; Create tension.\n        Dim tension As Single = 1.0F\n\n        &#39; Draw curve to screen.\n        e.Graphics.DrawCurve(greenPen, curvePoints, tension)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawCurve_System_Drawing_Pen_System_Drawing_PointF___System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawCurve(Pen,PointF[],Single)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a cardinal spline through a specified array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures using a specified tension.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, float tension);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that represent the points that define the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>tension</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Value greater than or equal to 0.0F that specifies the tension of the curve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws a cardinal spline that passes through each point in the array.  </p>\n<p> The array of points must contain at least three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures for a curve to be drawn.  </p>\n<p> The <code>tension</code> parameter determines the shape of the spline. If the value of the <code>tension</code> parameter is 0.0F, this method draws straight line segments to connect the points. Usually, the <code>tension</code> parameter is less than or equal to 1.0F. Values over 1.0F produce unusual results.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates red and green pens.  </p>\n</li>\n<li><p>Creates seven points to define the curve.  </p>\n</li>\n<li><p>Draws six red straight lines between the seven points to form an incomplete polygon.  </p>\n</li>\n<li><p>Creates a tension setting.  </p>\n</li>\n<li><p>Draws an open green closed curve through the seven points.  </p>\n<p>The method uses a tension of 1.0.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#26\">private:\n   void DrawCurvePointFTension( PaintEventArgs^ e )\n   {\n      // Create pens.\n      Pen^ redPen = gcnew Pen( Color::Red,3.0f );\n      Pen^ greenPen = gcnew Pen( Color::Green,3.0f );\n\n      // Create points that define curve.\n      PointF point1 = PointF(50.0F,50.0F);\n      PointF point2 = PointF(100.0F,25.0F);\n      PointF point3 = PointF(200.0F,5.0F);\n      PointF point4 = PointF(250.0F,50.0F);\n      PointF point5 = PointF(300.0F,100.0F);\n      PointF point6 = PointF(350.0F,200.0F);\n      PointF point7 = PointF(250.0F,250.0F);\n      array&lt;PointF&gt;^ curvePoints = {point1,point2,point3,point4,point5,point6,point7};\n\n      // Draw lines between original points to screen.\n      e-&gt;Graphics-&gt;DrawLines( redPen, curvePoints );\n\n      // Create tension.\n      float tension = 1.0F;\n\n      // Draw curve to screen.\n      e-&gt;Graphics-&gt;DrawCurve( greenPen, curvePoints, tension );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#26\">        private void DrawCurvePointFTension(PaintEventArgs e)\n        {\n\n            // Create pens.\n            Pen redPen = new Pen(Color.Red, 3);\n            Pen greenPen = new Pen(Color.Green, 3);\n\n            // Create points that define curve.\n            PointF point1 = new PointF(50.0F, 50.0F);\n            PointF point2 = new PointF(100.0F, 25.0F);\n            PointF point3 = new PointF(200.0F, 5.0F);\n            PointF point4 = new PointF(250.0F, 50.0F);\n            PointF point5 = new PointF(300.0F, 100.0F);\n            PointF point6 = new PointF(350.0F, 200.0F);\n            PointF point7 = new PointF(250.0F, 250.0F);\n            PointF[] curvePoints = {point1, point2, point3, point4, point5, point6, point7};\n\n            // Draw lines between original points to screen.\n            e.Graphics.DrawLines(redPen, curvePoints);\n\n            // Create tension.\n            float tension = 1.0F;\n\n            // Draw curve to screen.\n            e.Graphics.DrawCurve(greenPen, curvePoints, tension);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#26\">    Private Sub DrawCurvePointFTension(ByVal e As PaintEventArgs)\n\n        &#39; Create pens.\n        Dim redPen As New Pen(Color.Red, 3)\n        Dim greenPen As New Pen(Color.Green, 3)\n\n        &#39; Create points that define curve.\n        Dim point1 As New PointF(50.0F, 50.0F)\n        Dim point2 As New PointF(100.0F, 25.0F)\n        Dim point3 As New PointF(200.0F, 5.0F)\n        Dim point4 As New PointF(250.0F, 50.0F)\n        Dim point5 As New PointF(300.0F, 100.0F)\n        Dim point6 As New PointF(350.0F, 200.0F)\n        Dim point7 As New PointF(250.0F, 250.0F)\n        Dim curvePoints As PointF() = {point1, point2, point3, point4, _\n        point5, point6, point7}\n\n        &#39; Draw lines between original points to screen.\n        e.Graphics.DrawLines(redPen, curvePoints)\n\n        &#39; Create tension.\n        Dim tension As Single = 1.0F\n\n        &#39; Draw curve to screen.\n        e.Graphics.DrawCurve(greenPen, curvePoints, tension)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawCurve_System_Drawing_Pen_System_Drawing_PointF___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawCurve(Pen,PointF[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a cardinal spline through a specified array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures. The drawing begins offset from the beginning of the array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, int offset, int numberOfSegments);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that define the spline.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Offset from the first element in the array of the <code>points</code> parameter to the starting point in the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>numberOfSegments</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Number of segments after the starting point to include in the curve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws a cardinal spline that passes through each point in the array.  </p>\n<p> The array of points must contain at least three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures for a curve to be drawn.  </p>\n<p> The value of the <code>offset</code> parameter specifies the number of elements to skip in the array. The first element after the skipped elements represents the starting point of the curve.  </p>\n<p> The value of the <code>numberOfSegments</code> parameter specifies the number of segments, after the starting point, to draw in the curve. The value of the <code>numberOfSegments</code> parameter must be at least 1. The value of the <code>offset</code> parameter plus the value of the <code>numberOfSegments</code> parameter must be less than the number of elements in the array of the <code>points</code> parameter.  </p>\n<p> This method uses a default tension of 0.5.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates red and green pens.  </p>\n</li>\n<li><p>Creates seven points to define a curve.  </p>\n</li>\n<li><p>Draws six red straight lines between the seven points to form an incomplete polygon.  </p>\n</li>\n<li><p>Defines the starting point offset and number of segments.  </p>\n</li>\n<li><p>Draws an open green curve (starting at the third point) through the last five points.  </p>\n<p>The method uses a default tension of 0.5.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#24\">private:\n   void DrawCurvePointFSegments( PaintEventArgs^ e )\n   {\n      // Create pens.\n      Pen^ redPen = gcnew Pen( Color::Red,3.0f );\n      Pen^ greenPen = gcnew Pen( Color::Green,3.0f );\n\n      // Create points that define curve.\n      PointF point1 = PointF(50.0F,50.0F);\n      PointF point2 = PointF(100.0F,25.0F);\n      PointF point3 = PointF(200.0F,5.0F);\n      PointF point4 = PointF(250.0F,50.0F);\n      PointF point5 = PointF(300.0F,100.0F);\n      PointF point6 = PointF(350.0F,200.0F);\n      PointF point7 = PointF(250.0F,250.0F);\n      array&lt;PointF&gt;^ curvePoints = {point1,point2,point3,point4,point5,point6,point7};\n\n      // Draw lines between original points to screen.\n      e-&gt;Graphics-&gt;DrawLines( redPen, curvePoints );\n\n      // Create offset and number of segments.\n      int offset = 2;\n      int numSegments = 4;\n\n      // Draw curve to screen.\n      e-&gt;Graphics-&gt;DrawCurve( greenPen, curvePoints, offset, numSegments );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#24\">        private void DrawCurvePointFSegments(PaintEventArgs e)\n        {\n\n            // Create pens.\n            Pen redPen = new Pen(Color.Red, 3);\n            Pen greenPen = new Pen(Color.Green, 3);\n\n            // Create points that define curve.\n            PointF point1 = new PointF(50.0F, 50.0F);\n            PointF point2 = new PointF(100.0F, 25.0F);\n            PointF point3 = new PointF(200.0F, 5.0F);\n            PointF point4 = new PointF(250.0F, 50.0F);\n            PointF point5 = new PointF(300.0F, 100.0F);\n            PointF point6 = new PointF(350.0F, 200.0F);\n            PointF point7 = new PointF(250.0F, 250.0F);\n            PointF[] curvePoints = {point1, point2, point3, point4, point5, point6, point7};\n\n            // Draw lines between original points to screen.\n            e.Graphics.DrawLines(redPen, curvePoints);\n\n            // Create offset and number of segments.\n            int offset = 2;\n            int numSegments = 4;\n\n            // Draw curve to screen.\n            e.Graphics.DrawCurve(greenPen, curvePoints, offset, numSegments);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#24\">    Private Sub DrawCurvePointFSegments(ByVal e As PaintEventArgs)\n\n        &#39; Create pens.\n        Dim redPen As New Pen(Color.Red, 3)\n        Dim greenPen As New Pen(Color.Green, 3)\n\n        &#39; Create points that define curve.\n        Dim point1 As New PointF(50.0F, 50.0F)\n        Dim point2 As New PointF(100.0F, 25.0F)\n        Dim point3 As New PointF(200.0F, 5.0F)\n        Dim point4 As New PointF(250.0F, 50.0F)\n        Dim point5 As New PointF(300.0F, 100.0F)\n        Dim point6 As New PointF(350.0F, 200.0F)\n        Dim point7 As New PointF(250.0F, 250.0F)\n        Dim curvePoints As PointF() = {point1, point2, point3, point4, _\n        point5, point6, point7}\n\n        &#39; Draw lines between original points to screen.\n        e.Graphics.DrawLines(redPen, curvePoints)\n\n        &#39; Create offset and number of segments.\n        Dim offset As Integer = 2\n        Dim numSegments As Integer = 4\n\n        &#39; Draw curve to screen.\n        e.Graphics.DrawCurve(greenPen, curvePoints, offset, numSegments)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawCurve_System_Drawing_Pen_System_Drawing_Point___System_Int32_System_Int32_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawCurve(Pen,Point[],Int32,Int32,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a cardinal spline through a specified array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures using a specified tension.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawCurve (System.Drawing.Pen pen, System.Drawing.Point[] points, int offset, int numberOfSegments, float tension);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that define the spline.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Offset from the first element in the array of the <code>points</code> parameter to the starting point in the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>numberOfSegments</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Number of segments after the starting point to include in the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>tension</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Value greater than or equal to 0.0F that specifies the tension of the curve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws a cardinal spline that passes through each point in the array.  </p>\n<p> The array of points must contain at least three <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures for a curve to be drawn.  </p>\n<p> The value of the <code>offset</code> parameter specifies the number of elements to skip in the array. The first element after the skipped elements represents the starting point of the curve.  </p>\n<p> The value of the <code>numberOfSegments</code> parameter specifies the number of segments, after the starting point, to draw in the curve. The value of the <code>numberOfSegments</code> parameter must be at least 1. The value of the <code>offset</code> parameter plus the value of the <code>numberOfSegments</code> parameter must be less than the number of elements in the array of the <code>points</code> parameter.  </p>\n<p> The <code>tension</code> parameter determines the shape of the spline. If the value of the <code>tension</code> parameter is 0.0F, this method draws straight line segments to connect the points. Usually, the <code>tension</code> parameter is less than or equal to 1.0F. Values over 1.0F produce unusual results.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates red and green pens.  </p>\n</li>\n<li><p>Creates seven points to define a curve.  </p>\n</li>\n<li><p>Draws six red straight lines between the seven points to form an incomplete polygon.  </p>\n</li>\n<li><p>Defines the starting point offset and number of segments.  </p>\n</li>\n<li><p>Defines the tension.  </p>\n</li>\n<li><p>Draws an open green curve (starting at the third point) through the last five points.  </p>\n<p>The method sets the tension to 1.0.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#21\">private:\n   void DrawCurvePointSegmentTension( PaintEventArgs^ e )\n   {\n      // Create pens.\n      Pen^ redPen = gcnew Pen( Color::Red,3.0f );\n      Pen^ greenPen = gcnew Pen( Color::Green,3.0f );\n\n      // Create points that define curve.\n      Point point1 = Point(50,50);\n      Point point2 = Point(100,25);\n      Point point3 = Point(200,5);\n      Point point4 = Point(250,50);\n      Point point5 = Point(300,100);\n      Point point6 = Point(350,200);\n      Point point7 = Point(250,250);\n      array&lt;Point&gt;^ curvePoints = {point1,point2,point3,point4,point5,point6,point7};\n\n      // Draw lines between original points to screen.\n      e-&gt;Graphics-&gt;DrawLines( redPen, curvePoints );\n\n      // Create offset, number of segments, and tension.\n      int offset = 2;\n      int numSegments = 4;\n      float tension = 1.0F;\n\n      // Draw curve to screen.\n      e-&gt;Graphics-&gt;DrawCurve( greenPen, curvePoints, offset, numSegments, tension );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#21\">        private void DrawCurvePointSegmentTension(PaintEventArgs e)\n        {\n\n            // Create pens.\n            Pen redPen = new Pen(Color.Red, 3);\n            Pen greenPen = new Pen(Color.Green, 3);\n\n            // Create points that define curve.\n            Point point1 = new Point(50, 50);\n            Point point2 = new Point(100, 25);\n            Point point3 = new Point(200, 5);\n            Point point4 = new Point(250, 50);\n            Point point5 = new Point(300, 100);\n            Point point6 = new Point(350, 200);\n            Point point7 = new Point(250, 250);\n            Point[] curvePoints = {point1, point2, point3, point4, point5, point6, point7};\n\n            // Draw lines between original points to screen.\n            e.Graphics.DrawLines(redPen, curvePoints);\n\n            // Create offset, number of segments, and tension.\n            int offset = 2;\n            int numSegments = 4;\n            float tension = 1.0F;\n\n            // Draw curve to screen.\n            e.Graphics.DrawCurve(greenPen, curvePoints, offset, numSegments, tension);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#21\">    Private Sub DrawCurvePointSegmentTension(ByVal e As PaintEventArgs)\n\n        &#39; Create pens.\n        Dim redPen As New Pen(Color.Red, 3)\n        Dim greenPen As New Pen(Color.Green, 3)\n\n        &#39; Create points that define curve.\n        Dim point1 As New Point(50, 50)\n        Dim point2 As New Point(100, 25)\n        Dim point3 As New Point(200, 5)\n        Dim point4 As New Point(250, 50)\n        Dim point5 As New Point(300, 100)\n        Dim point6 As New Point(350, 200)\n        Dim point7 As New Point(250, 250)\n        Dim curvePoints As Point() = {point1, point2, point3, point4, _\n        point5, point6, point7}\n\n        &#39; Draw lines between original points to screen.\n        e.Graphics.DrawLines(redPen, curvePoints)\n\n        &#39; Create offset, number of segments, and tension.\n        Dim offset As Integer = 2\n        Dim numSegments As Integer = 4\n        Dim tension As Single = 1.0F\n\n        &#39; Draw curve to screen.\n        e.Graphics.DrawCurve(greenPen, curvePoints, offset, numSegments, _\n        tension)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawCurve_System_Drawing_Pen_System_Drawing_PointF___System_Int32_System_Int32_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawCurve(Pen,PointF[],Int32,Int32,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a cardinal spline through a specified array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures using a specified tension. The drawing begins offset from the beginning of the array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, int offset, int numberOfSegments, float tension);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that define the spline.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Offset from the first element in the array of the <code>points</code> parameter to the starting point in the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>numberOfSegments</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Number of segments after the starting point to include in the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>tension</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Value greater than or equal to 0.0F that specifies the tension of the curve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws a cardinal spline that passes through each point in the array.  </p>\n<p> The array of points must contain at least three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures for curve to be drawn.  </p>\n<p> The value of the <code>offset</code> parameter specifies the number of elements to skip in the array. The first element after the skipped elements represents the starting point of the curve.  </p>\n<p> The value of the <code>numberOfSegments</code> parameter specifies the number of segments, after the starting point, to draw in the curve. The value of the <code>numberOfSegments</code> parameter must be at least 1. The value of the <code>offset</code> parameter plus the value of the <code>numberOfSegments</code> parameter must be less than the number of elements in the array of the <code>points</code> parameter.  </p>\n<p> The <code>tension</code> parameter determines the shape of the spline. If the value of the <code>tension</code> parameter is 0.0F, this method draws straight line segments to connect the points. Usually, the <code>tension</code> parameter is less than or equal to 1.0F. Values over 1.0F produce unusual results.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates red and green pens.  </p>\n</li>\n<li><p>Creates seven points to define a curve.  </p>\n</li>\n<li><p>Draws six red straight lines between the seven points to form an incomplete polygon.  </p>\n</li>\n<li><p>Defines the starting point offset and number of segments.  </p>\n</li>\n<li><p>Defines the tension.  </p>\n</li>\n<li><p>Draws an open green curve (starting at the third point) through the last five points.  </p>\n<p>The method sets the tension to 1.0.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#25\">private:\n   void DrawCurvePointFSegmentTension( PaintEventArgs^ e )\n   {\n      // Create pens.\n      Pen^ redPen = gcnew Pen( Color::Red,3.0f );\n      Pen^ greenPen = gcnew Pen( Color::Green,3.0f );\n\n      // Create points that define curve.\n      PointF point1 = PointF(50.0F,50.0F);\n      PointF point2 = PointF(100.0F,25.0F);\n      PointF point3 = PointF(200.0F,5.0F);\n      PointF point4 = PointF(250.0F,50.0F);\n      PointF point5 = PointF(300.0F,100.0F);\n      PointF point6 = PointF(350.0F,200.0F);\n      PointF point7 = PointF(250.0F,250.0F);\n      array&lt;PointF&gt;^ curvePoints = {point1,point2,point3,point4,point5,point6,point7};\n\n      // Draw lines between original points to screen.\n      e-&gt;Graphics-&gt;DrawLines( redPen, curvePoints );\n\n      // Create offset, number of segments, and tension.\n      int offset = 2;\n      int numSegments = 4;\n      float tension = 1.0F;\n\n      // Draw curve to screen.\n      e-&gt;Graphics-&gt;DrawCurve( greenPen, curvePoints, offset, numSegments, tension );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#25\">        private void DrawCurvePointFSegmentTension(PaintEventArgs e)\n        {\n\n            // Create pens.\n            Pen redPen = new Pen(Color.Red, 3);\n            Pen greenPen = new Pen(Color.Green, 3);\n\n            // Create points that define curve.\n            PointF point1 = new PointF(50.0F, 50.0F);\n            PointF point2 = new PointF(100.0F, 25.0F);\n            PointF point3 = new PointF(200.0F, 5.0F);\n            PointF point4 = new PointF(250.0F, 50.0F);\n            PointF point5 = new PointF(300.0F, 100.0F);\n            PointF point6 = new PointF(350.0F, 200.0F);\n            PointF point7 = new PointF(250.0F, 250.0F);\n            PointF[] curvePoints = {point1, point2, point3, point4, point5, point6, point7};\n\n            // Draw lines between original points to screen.\n            e.Graphics.DrawLines(redPen, curvePoints);\n\n            // Create offset, number of segments, and tension.\n            int offset = 2;\n            int numSegments = 4;\n            float tension = 1.0F;\n\n            // Draw curve to screen.\n            e.Graphics.DrawCurve(greenPen, curvePoints, offset, numSegments, tension);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#25\">    Private Sub DrawCurvePointFSegmentTension(ByVal e As PaintEventArgs)\n\n        &#39; Create pens.\n        Dim redPen As New Pen(Color.Red, 3)\n        Dim greenPen As New Pen(Color.Green, 3)\n\n        &#39; Create points that define curve.\n        Dim point1 As New PointF(50.0F, 50.0F)\n        Dim point2 As New PointF(100.0F, 25.0F)\n        Dim point3 As New PointF(200.0F, 5.0F)\n        Dim point4 As New PointF(250.0F, 50.0F)\n        Dim point5 As New PointF(300.0F, 100.0F)\n        Dim point6 As New PointF(350.0F, 200.0F)\n        Dim point7 As New PointF(250.0F, 250.0F)\n        Dim curvePoints As PointF() = {point1, point2, point3, point4, _\n        point5, point6, point7}\n\n        &#39; Draw lines between original points to screen.\n        e.Graphics.DrawLines(redPen, curvePoints)\n\n        &#39; Create offset, number of segments, and tension.\n        Dim offset As Integer = 2\n        Dim numSegments As Integer = 4\n        Dim tension As Single = 1.0F\n\n        &#39; Draw curve to screen.\n        e.Graphics.DrawCurve(greenPen, curvePoints, offset, numSegments, _\n        tension)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawEllipse_System_Drawing_Pen_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawEllipse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawEllipse(Pen,Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Draws an ellipse specified by a bounding <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawEllipse (System.Drawing.Pen pen, System.Drawing.Rectangle rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that defines the boundaries of the ellipse.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws an ellipse that is defined by the bounding rectangle specified by the <code>rect</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates a rectangle to bound an ellipse.  </p>\n</li>\n<li><p>Draws the ellipse to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#27\">private:\n   void DrawEllipseRectangle( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create rectangle for ellipse.\n      Rectangle rect = Rectangle(0,0,200,100);\n\n      // Draw ellipse to screen.\n      e-&gt;Graphics-&gt;DrawEllipse( blackPen, rect );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#27\">        private void DrawEllipseRectangle(PaintEventArgs e)\n        {\n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Create rectangle for ellipse.\n            Rectangle rect = new Rectangle(0, 0, 200, 100);\n                     \n            // Draw ellipse to screen.\n            e.Graphics.DrawEllipse(blackPen, rect);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#27\">    Private Sub DrawEllipseRectangle(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create rectangle for ellipse.\n        Dim rect As New Rectangle(0, 0, 200, 100)\n\n        &#39; Draw ellipse to screen.\n        e.Graphics.DrawEllipse(blackPen, rect)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawEllipse_System_Drawing_Pen_System_Drawing_RectangleF_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawEllipse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawEllipse(Pen,RectangleF)</div>        \r\n          </div>\r\n    \r\n            <p>Draws an ellipse defined by a bounding <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawEllipse (System.Drawing.Pen pen, System.Drawing.RectangleF rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that defines the boundaries of the ellipse.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws an ellipse that is defined by the bounding rectangle specified by the <code>rect</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates a rectangle to bound an ellipse.  </p>\n</li>\n<li><p>Draws the ellipse to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#28\">private:\n   void DrawEllipseRectangleF( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create rectangle for ellipse.\n      RectangleF rect = RectangleF(0.0F,0.0F,200.0F,100.0F);\n\n      // Draw ellipse to screen.\n      e-&gt;Graphics-&gt;DrawEllipse( blackPen, rect );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#28\">        private void DrawEllipseRectangleF(PaintEventArgs e)\n        {\n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Create rectangle for ellipse.\n            RectangleF rect = new RectangleF(0.0F, 0.0F, 200.0F, 100.0F);\n                     \n            // Draw ellipse to screen.\n            e.Graphics.DrawEllipse(blackPen, rect);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#28\">    Private Sub DrawEllipseRectangleF(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create rectangle for ellipse.\n        Dim rect As New RectangleF(0.0F, 0.0F, 200.0F, 100.0F)\n\n        &#39; Draw ellipse to screen.\n        e.Graphics.DrawEllipse(blackPen, rect)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawEllipse_System_Drawing_Pen_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawEllipse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawEllipse(Pen,Int32,Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Draws an ellipse defined by a bounding rectangle specified by coordinates for the upper-left corner of the rectangle, a height, and a width.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawEllipse (System.Drawing.Pen pen, int x, int y, int width, int height);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws an ellipse that is defined by the bounding rectangle described by the <code>x</code>, <code>y</code>, <code>width</code>, and <code>height</code> parameters.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates the position and size of a rectangle to bound an ellipse.  </p>\n</li>\n<li><p>Draws the ellipse to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#29\">private:\n   void DrawEllipseInt( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create location and size of ellipse.\n      int x = 0;\n      int y = 0;\n      int width = 200;\n      int height = 100;\n\n      // Draw ellipse to screen.\n      e-&gt;Graphics-&gt;DrawEllipse( blackPen, x, y, width, height );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#29\">        private void DrawEllipseInt(PaintEventArgs e)\n        {\n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Create location and size of ellipse.\n            int x = 0;\n            int y = 0;\n            int width = 200;\n            int height = 100;\n                     \n            // Draw ellipse to screen.\n            e.Graphics.DrawEllipse(blackPen, x, y, width, height);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#29\">    Private Sub DrawEllipseInt(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create location and size of ellipse.\n        Dim x As Integer = 0\n        Dim y As Integer = 0\n        Dim width As Integer = 200\n        Dim height As Integer = 100\n\n        &#39; Draw ellipse to screen.\n        e.Graphics.DrawEllipse(blackPen, x, y, width, height)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawEllipse_System_Drawing_Pen_System_Single_System_Single_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawEllipse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawEllipse(Pen,Single,Single,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates, a height, and a width.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawEllipse (System.Drawing.Pen pen, float x, float y, float width, float height);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws an ellipse that is defined by the bounding rectangle described by the <code>x</code>, <code>y</code>, <code>width</code>, and <code>height</code> parameters.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates the position and size of a rectangle to bound an ellipse.  </p>\n</li>\n<li><p>Draws the ellipse to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#30\">private:\n   void DrawEllipseFloat( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create location and size of ellipse.\n      float x = 0.0F;\n      float y = 0.0F;\n      float width = 200.0F;\n      float height = 100.0F;\n\n      // Draw ellipse to screen.\n      e-&gt;Graphics-&gt;DrawEllipse( blackPen, x, y, width, height );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#30\">        private void DrawEllipseFloat(PaintEventArgs e)\n        {         \n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Create location and size of ellipse.\n            float x = 0.0F;\n            float y = 0.0F;\n            float width = 200.0F;\n            float height = 100.0F;\n                     \n            // Draw ellipse to screen.\n            e.Graphics.DrawEllipse(blackPen, x, y, width, height);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#30\">    Private Sub DrawEllipseFloat(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create location and size of ellipse.\n        Dim x As Single = 0.0F\n        Dim y As Single = 0.0F\n        Dim width As Single = 200.0F\n        Dim height As Single = 100.0F\n\n        &#39; Draw ellipse to screen.\n        e.Graphics.DrawEllipse(blackPen, x, y, width, height)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawIcon_System_Drawing_Icon_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawIcon_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawIcon(Icon,Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the image represented by the specified <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a> within the area specified by a <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawIcon (System.Drawing.Icon icon, System.Drawing.Rectangle targetRect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>icon</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the location and size of the resulting image on the display surface. The image contained in the <code>icon</code> parameter is scaled to the dimensions of this rectangular area.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>icon</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an icon from a standard Windows icon file SampIcon.ico in the example folder.  </p>\n</li>\n<li><p>Creates a rectangle in which to draw the icon.  </p>\n</li>\n<li><p>Draws the icon to the screen.  </p>\n<p>The position of the rectangle locates the icon on the screen, and the size of the rectangle determines the scaling of the drawn icon.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#31\">private:\n   void DrawIconRectangle( PaintEventArgs^ e )\n   {\n      // Create icon.\n      System::Drawing::Icon^ newIcon = gcnew System::Drawing::Icon( &quot;SampIcon.ico&quot; );\n\n      // Create rectangle for icon.\n      Rectangle rect = Rectangle(100,100,200,200);\n\n      // Draw icon to screen.\n      e-&gt;Graphics-&gt;DrawIcon( newIcon, rect );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#31\">        private void DrawIconRectangle(PaintEventArgs e)\n        {        \n            // Create icon.\n            Icon newIcon = new Icon(&quot;SampIcon.ico&quot;);\n                     \n            // Create rectangle for icon.\n            Rectangle rect = new Rectangle(100, 100, 200, 200);\n                     \n            // Draw icon to screen.\n            e.Graphics.DrawIcon(newIcon, rect);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#31\">    Private Sub DrawIconRectangle(ByVal e As PaintEventArgs)\n\n        &#39; Create icon.\n        Dim newIcon As New Icon(&quot;SampIcon.ico&quot;)\n\n        &#39; Create rectangle for icon.\n        Dim rect As New Rectangle(100, 100, 200, 200)\n\n        &#39; Draw icon to screen.\n        e.Graphics.DrawIcon(newIcon, rect)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawIcon_System_Drawing_Icon_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawIcon_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawIcon(Icon,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the image represented by the specified <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a> at the specified coordinates.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawIcon (System.Drawing.Icon icon, int x, int y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>icon</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the drawn image.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the drawn image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>icon</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an icon from a standard Windows icon file SampIcon.ico in the example folder.  </p>\n</li>\n<li><p>Creates the coordinates of the upper-left corner at which to draw the icon.  </p>\n</li>\n<li><p>Draws the icon to the screen.  </p>\n<p>The drawn icon is unscaled.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#32\">private:\n   void DrawIconInt( PaintEventArgs^ e )\n   {\n\n      // Create icon.\n      System::Drawing::Icon^ newIcon = gcnew System::Drawing::Icon( &quot;SampIcon.ico&quot; );\n\n      // Create coordinates for upper-left corner of icon.\n      int x = 100;\n      int y = 100;\n\n      // Draw icon to screen.\n      e-&gt;Graphics-&gt;DrawIcon( newIcon, x, y );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#32\">        private void DrawIconInt(PaintEventArgs e)\n        {\n            // Create icon.\n            Icon newIcon = new Icon(&quot;SampIcon.ico&quot;);\n                     \n            // Create coordinates for upper-left corner of icon.\n            int x = 100;\n            int y = 100;\n                     \n            // Draw icon to screen.\n            e.Graphics.DrawIcon(newIcon, x, y);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#32\">    Private Sub DrawIconInt(ByVal e As PaintEventArgs)\n\n        &#39; Create icon.\n        Dim newIcon As New Icon(&quot;SampIcon.ico&quot;)\n\n        &#39; Create coordinates for upper-left corner of icon.\n        Dim x As Integer = 100\n        Dim y As Integer = 100\n\n        &#39; Draw icon to screen.\n        e.Graphics.DrawIcon(newIcon, x, y)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawIconUnstretched_System_Drawing_Icon_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawIconUnstretched_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawIconUnstretched(Icon,Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the image represented by the specified <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a> without scaling the image.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawIconUnstretched (System.Drawing.Icon icon, System.Drawing.Rectangle targetRect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>icon</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the location and size of the resulting image. The image is not scaled to fit this rectangle, but retains its original size. If the image is larger than the rectangle, it is clipped to fit inside it.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>icon</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an icon from a standard Windows icon file SampIcon.ico in the example folder.  </p>\n</li>\n<li><p>Creates a rectangle in which to draw the icon.  </p>\n</li>\n<li><p>Draws the icon to the screen.  </p>\n<p>The position of the rectangle locates the icon on the screen, and the drawn icon is unscaled and unclipped.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#33\">private:\n   void DrawIconUnstretchedRectangle( PaintEventArgs^ e )\n   {\n\n      // Create icon.\n      System::Drawing::Icon^ newIcon = gcnew System::Drawing::Icon( &quot;SampIcon.ico&quot; );\n\n      // Create rectangle for icon.\n      Rectangle rect = Rectangle(100,100,200,200);\n\n      // Draw icon to screen.\n      e-&gt;Graphics-&gt;DrawIconUnstretched( newIcon, rect );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#33\">        private void DrawIconUnstretchedRectangle(PaintEventArgs e)\n        {\n            // Create icon.\n            Icon newIcon = new Icon(&quot;SampIcon.ico&quot;);\n                     \n            // Create rectangle for icon.\n            Rectangle rect = new Rectangle(100, 100, 200, 200);\n                     \n            // Draw icon to screen.\n            e.Graphics.DrawIconUnstretched(newIcon, rect);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#33\">    Private Sub DrawIconUnstretchedRectangle(ByVal e As PaintEventArgs)\n\n        &#39; Create icon.\n        Dim newIcon As New Icon(&quot;SampIcon.ico&quot;)\n\n        &#39; Create rectangle for icon.\n        Dim rect As New Rectangle(100, 100, 200, 200)\n\n        &#39; Draw icon to screen.\n        e.Graphics.DrawIconUnstretched(newIcon, rect)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Point_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,Point)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a>, using its original physical size, at the specified location.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, System.Drawing.Point point);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>point</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure that represents the location of the upper-left corner of the drawn image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> stores a value for pixel width and a value for horizontal resolution (dots per inch). The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution. For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches. Similar remarks apply to pixel height and physical height.  </p>\n<p> This method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device. For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch. If you call this method to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)*96 = 288.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates a point at which to draw the upper-left corner of the image.  </p>\n</li>\n<li><p>Draws the unscaled image to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#34\">private:\n   void DrawImagePoint( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create Point for upper-left corner of image.\n      Point ulCorner = Point(100,100);\n\n      // Draw image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, ulCorner );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#34\">        private void DrawImagePoint(PaintEventArgs e)\n        {         \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create Point for upper-left corner of image.\n            Point ulCorner = new Point(100, 100);\n                     \n            // Draw image to screen.\n            e.Graphics.DrawImage(newImage, ulCorner);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#34\">    Private Sub DrawImagePoint(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create Point for upper-left corner of image.\n        Dim ulCorner As New Point(100, 100)\n\n        &#39; Draw image to screen.\n        e.Graphics.DrawImage(newImage, ulCorner)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Point___\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,Point[])</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified shape and size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of three <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that define a parallelogram.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>destPoints</code> parameter specifies three points of a parallelogram. The three <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram. The fourth point is extrapolated from the first three to form a parallelogram.  </p>\n<p> The image represented by the <code>image</code> parameter is scaled and sheared to fit the shape of the parallelogram specified by the <code>destPoints</code> parameters.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates points that define a parallelogram in which to draw the image.  </p>\n</li>\n<li><p>Draws the image to the screen.  </p>\n<p>The position of the parallelogram locates the image on the screen, and the size of the original image and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#35\">private:\n   void DrawImagePara( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create parallelogram for drawing image.\n      Point ulCorner = Point(100,100);\n      Point urCorner = Point(550,100);\n      Point llCorner = Point(150,250);\n      array&lt;Point&gt;^ destPara = {ulCorner,urCorner,llCorner};\n\n      // Draw image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destPara );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#35\">        private void DrawImagePara(PaintEventArgs e)\n        {\n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create parallelogram for drawing image.\n            Point ulCorner = new Point(100, 100);\n            Point urCorner = new Point(550, 100);\n            Point llCorner = new Point(150, 250);\n            Point[] destPara = {ulCorner, urCorner, llCorner};\n                     \n            // Draw image to screen.\n            e.Graphics.DrawImage(newImage, destPara);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#35\">    Private Sub DrawImagePara(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create parallelogram for drawing image.\n        Dim ulCorner As New Point(100, 100)\n        Dim urCorner As New Point(550, 100)\n        Dim llCorner As New Point(150, 250)\n        Dim destPara As Point() = {ulCorner, urCorner, llCorner}\n\n        &#39; Draw image to screen.\n        e.Graphics.DrawImage(newImage, destPara)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_PointF_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,PointF)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a>, using its original physical size, at the specified location.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, System.Drawing.PointF point);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>point</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure that represents the upper-left corner of the drawn image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> stores a value for pixel width and a value for horizontal resolution (dots per inch). The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution. For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches. Similar remarks apply to pixel height and physical height.  </p>\n<p> This method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device. For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch. If you call this method to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)*96 = 288.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates a point at which to draw the upper-left corner of the image.  </p>\n</li>\n<li><p>Draws the unscaled image to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#40\">private:\n   void DrawImagePointF( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create point for upper-left corner of image.\n      PointF ulCorner = PointF(100.0F,100.0F);\n\n      // Draw image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, ulCorner );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#40\">        private void DrawImagePointF(PaintEventArgs e)\n        {\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create point for upper-left corner of image.\n            PointF ulCorner = new PointF(100.0F, 100.0F);\n                     \n            // Draw image to screen.\n            e.Graphics.DrawImage(newImage, ulCorner);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#40\">    Private Sub DrawImagePointF(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create point for upper-left corner of image.\n        Dim ulCorner As New PointF(100.0F, 100.0F)\n\n        &#39; Draw image to screen.\n        e.Graphics.DrawImage(newImage, ulCorner)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_PointF___\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,PointF[])</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified shape and size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that define a parallelogram.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>destPoints</code> parameter specifies three points of a parallelogram. The three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram. The fourth point is extrapolated from the first three to form a parallelogram.  </p>\n<p> The image represented by the <code>image</code> object is scaled and sheared to fit the shape of the parallelogram specified by the <code>destPoints</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates points that define a parallelogram in which to draw the image.  </p>\n</li>\n<li><p>Draws the image to the screen.  </p>\n<p>The position of the parallelogram locates the image on the screen, and the size of the original image and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#41\">private:\n   void DrawImageParaF( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create parallelogram for drawing image.\n      PointF ulCorner = PointF(100.0F,100.0F);\n      PointF urCorner = PointF(550.0F,100.0F);\n      PointF llCorner = PointF(150.0F,250.0F);\n      array&lt;PointF&gt;^ destPara = {ulCorner,urCorner,llCorner};\n\n      // Draw image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destPara );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#41\">        private void DrawImageParaF(PaintEventArgs e)\n        {\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create parallelogram for drawing image.\n            PointF ulCorner = new PointF(100.0F, 100.0F);\n            PointF urCorner = new PointF(550.0F, 100.0F);\n            PointF llCorner = new PointF(150.0F, 250.0F);\n            PointF[] destPara = {ulCorner, urCorner, llCorner};\n                     \n            // Draw image to screen.\n            e.Graphics.DrawImage(newImage, destPara);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#41\">    Private Sub DrawImageParaF(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create parallelogram for drawing image.\n        Dim ulCorner As New PointF(100.0F, 100.0F)\n        Dim urCorner As New PointF(550.0F, 100.0F)\n        Dim llCorner As New PointF(150.0F, 250.0F)\n        Dim destPara As PointF() = {ulCorner, urCorner, llCorner}\n\n        &#39; Draw image to screen.\n        e.Graphics.DrawImage(newImage, destPara)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the location and size of the drawn image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The image represented by the <code>image</code> object is scaled to the dimensions of the <code>rect</code> rectangle.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates a rectangle in which to draw the image.  </p>\n</li>\n<li><p>Draws the image to the screen.  </p>\n<p>The position of the rectangle locates the image on the screen, and the size of the original image and the size of the rectangle determines the scaling of the drawn image.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#46\">private:\n   void DrawImageRect( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create rectangle for displaying image.\n      Rectangle destRect = Rectangle(100,100,450,150);\n\n      // Draw image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destRect );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#46\">        private void DrawImageRect(PaintEventArgs e)\n        {\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create rectangle for displaying image.\n            Rectangle destRect = new Rectangle(100, 100, 450, 150);\n                     \n            // Draw image to screen.\n            e.Graphics.DrawImage(newImage, destRect);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#46\">    Private Sub DrawImageRect(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create rectangle for displaying image.\n        Dim destRect As New Rectangle(100, 100, 450, 150)\n\n        &#39; Draw image to screen.\n        e.Graphics.DrawImage(newImage, destRect)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_RectangleF_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,RectangleF)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, System.Drawing.RectangleF rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the location and size of the drawn image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The image represented by the <code>image</code> object is scaled to the dimensions of the <code>rect</code> rectangle.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates a rectangle in which to draw the image.  </p>\n</li>\n<li><p>Draws the image to the screen.  </p>\n<p>The position of the rectangle locates the image on the screen, and the original size of the image and the size of the rectangle determines the scaling of the drawn image.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#56\">public:\n   void DrawImageRectF( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create rectangle for displaying image.\n      RectangleF rect = RectangleF(100.0F,100.0F,450.0F,150.0F);\n\n      // Draw image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, rect );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#56\">        public void DrawImageRectF(PaintEventArgs e)\n        {\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create rectangle for displaying image.\n            RectangleF rect = new RectangleF(100.0F, 100.0F, 450.0F, 150.0F);\n                     \n            // Draw image to screen.\n            e.Graphics.DrawImage(newImage, rect);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#56\">    Public Sub DrawImageRectF(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create rectangle for displaying image.\n        Dim rect As New RectangleF(100.0F, 100.0F, 450.0F, 150.0F)\n\n        &#39; Draw image to screen.\n        e.Graphics.DrawImage(newImage, rect)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified image, using its original physical size, at the location specified by a coordinate pair.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, int x, int y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the drawn image.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the drawn image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> stores a value for pixel width and a value for horizontal resolution (dots per inch). The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution. For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches. Similar remarks apply to pixel height and physical height.  </p>\n<p> The DrawImage method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device. For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch. If you call DrawImage to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)*96 = 288.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates the coordinates of a point at which to draw the upper-left corner of the image.  </p>\n</li>\n<li><p>Draws the unscaled image.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#58\">public:\n   void DrawImage2Int( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create coordinates for upper-left corner of image.\n      int x = 100;\n      int y = 100;\n\n      // Draw image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, x, y );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#58\">        public void DrawImage2Int(PaintEventArgs e)\n        {\n                        \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                        \n            // Create coordinates for upper-left corner of image.\n            int x = 100;\n            int y = 100;\n                        \n            // Draw image to screen.\n            e.Graphics.DrawImage(newImage, x, y);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#58\">    Public Sub DrawImage2Int(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create coordinates for upper-left corner of image.\n        Dim x As Integer = 100\n        Dim y As Integer = 100\n\n        &#39; Draw image to screen.\n        e.Graphics.DrawImage(newImage, x, y)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a>, using its original physical size, at the specified location.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, float x, float y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the drawn image.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the drawn image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> stores a value for pixel width and a value for horizontal resolution (dots per inch). The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution. For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches. Similar remarks apply to pixel height and physical height.  </p>\n<p> This method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device. For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch. If you call this method to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)*96 = 288.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates the coordinates of a point at which to draw the upper-left corner of the image.  </p>\n</li>\n<li><p>Draws the unscaled image to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#61\">public:\n   void DrawImage2Float( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create coordinates for upper-left corner of image.\n      float x = 100.0F;\n      float y = 100.0F;\n\n      // Draw image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, x, y );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#61\">        public void DrawImage2Float(PaintEventArgs e)\n        {\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create coordinates for upper-left corner of image.\n            float x = 100.0F;\n            float y = 100.0F;\n                     \n            // Draw image to screen.\n            e.Graphics.DrawImage(newImage, x, y);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#61\">    Public Sub DrawImage2Float(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create coordinates for upper-left corner of image.\n        Dim x As Single = 100.0F\n        Dim y As Single = 100.0F\n\n        &#39; Draw image to screen.\n        e.Graphics.DrawImage(newImage, x, y)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Point___System_Drawing_Rectangle_System_Drawing_GraphicsUnit_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,Point[],Rectangle,GraphicsUnit)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of three <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that define a parallelogram.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the portion of the <code>image</code> object to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the units of measure used by the <code>srcRect</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>destPoints</code> parameter specifies three points of a parallelogram. The three <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram. The fourth point is extrapolated from the first three to form a parallelogram.  </p>\n<p> The <code>srcRect</code> parameter specifies a rectangular portion of the <code>image</code> object to draw. This portion is scaled and sheared to fit inside the parallelogram specified by the <code>destPoints</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates points that define a parallelogram in which to draw the image.  </p>\n</li>\n<li><p>Creates a rectangle to select the portion of the image to draw.  </p>\n</li>\n<li><p>Sets the graphics drawing unit to pixel.  </p>\n</li>\n<li><p>Draws the image to the screen.  </p>\n<p>The position of the parallelogram locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#36\">private:\n   void DrawImageParaRect( PaintEventArgs^ e )\n   {\n\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create parallelogram for drawing image.\n      Point ulCorner = Point(100,100);\n      Point urCorner = Point(325,100);\n      Point llCorner = Point(150,250);\n      array&lt;Point&gt;^ destPara = {ulCorner,urCorner,llCorner};\n\n      // Create rectangle for source image.\n      Rectangle srcRect = Rectangle(50,50,150,150);\n      GraphicsUnit units = GraphicsUnit::Pixel;\n\n      // Draw image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destPara, srcRect, units );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#36\">        private void DrawImageParaRect(PaintEventArgs e)\n        {\n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create parallelogram for drawing image.\n            Point ulCorner = new Point(100, 100);\n            Point urCorner = new Point(325, 100);\n            Point llCorner = new Point(150, 250);\n            Point[] destPara = {ulCorner, urCorner, llCorner};\n                     \n            // Create rectangle for source image.\n            Rectangle srcRect = new Rectangle(50, 50, 150, 150);\n            GraphicsUnit units = GraphicsUnit.Pixel;\n                     \n            // Draw image to screen.\n            e.Graphics.DrawImage(newImage, destPara, srcRect, units);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#36\">    Private Sub DrawImageParaRect(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create parallelogram for drawing image.\n        Dim ulCorner As New Point(100, 100)\n        Dim urCorner As New Point(325, 100)\n        Dim llCorner As New Point(150, 250)\n        Dim destPara As Point() = {ulCorner, urCorner, llCorner}\n\n        &#39; Create rectangle for source image.\n        Dim srcRect As New Rectangle(50, 50, 150, 150)\n        Dim units As GraphicsUnit = GraphicsUnit.Pixel\n\n        &#39; Draw image to screen.\n        e.Graphics.DrawImage(newImage, destPara, srcRect, units)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_PointF___System_Drawing_RectangleF_System_Drawing_GraphicsUnit_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,PointF[],RectangleF,GraphicsUnit)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that define a parallelogram.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the portion of the <code>image</code> object to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the units of measure used by the <code>srcRect</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>destPoints</code> parameter specifies three points of a parallelogram. The three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram. The fourth point is extrapolated from the first three to form a parallelogram.  </p>\n<p> The <code>srcRect</code> parameter specifies a rectangular portion of the <code>image</code> object to draw. This portion is scaled and sheared to fit inside the parallelogram specified by the <code>destPoints</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates points that define a destination parallelogram in which to draw the image.  </p>\n</li>\n<li><p>Creates a source rectangle from which to extract a portion of the image.  </p>\n</li>\n<li><p>Sets the unit of measure of the source rectangle to pixels.  </p>\n</li>\n<li><p>Draws the image to the screen.  </p>\n<p>The position of the destination parallelogram locates the image on the screen, the size of the source rectangle and the size and shape of the destination parallelogram determines the scaling and shearing of the drawn image, and the size of the rectangle determines what portion of the original image is drawn to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#42\">private:\n   void DrawImageParaFRectF( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create parallelogram for drawing image.\n      PointF ulCorner = PointF(100.0F,100.0F);\n      PointF urCorner = PointF(550.0F,100.0F);\n      PointF llCorner = PointF(150.0F,250.0F);\n      array&lt;PointF&gt;^ destPara = {ulCorner,urCorner,llCorner};\n\n      // Create rectangle for source image.\n      RectangleF srcRect = RectangleF(50.0F,50.0F,150.0F,150.0F);\n      GraphicsUnit units = GraphicsUnit::Pixel;\n\n      // Draw image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destPara, srcRect, units );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#42\">        private void DrawImageParaFRectF(PaintEventArgs e)\n        {\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create parallelogram for drawing image.\n            PointF ulCorner = new PointF(100.0F, 100.0F);\n            PointF urCorner = new PointF(550.0F, 100.0F);\n            PointF llCorner = new PointF(150.0F, 250.0F);\n            PointF[] destPara = {ulCorner, urCorner, llCorner};\n                     \n            // Create rectangle for source image.\n            RectangleF srcRect = new RectangleF(50.0F, 50.0F, 150.0F, 150.0F);\n            GraphicsUnit units = GraphicsUnit.Pixel;\n                     \n            // Draw image to screen.\n            e.Graphics.DrawImage(newImage, destPara, srcRect, units);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#42\">    Private Sub DrawImageParaFRectF(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create parallelogram for drawing image.\n        Dim ulCorner As New PointF(100.0F, 100.0F)\n        Dim urCorner As New PointF(550.0F, 100.0F)\n        Dim llCorner As New PointF(150.0F, 250.0F)\n        Dim destPara As PointF() = {ulCorner, urCorner, llCorner}\n\n        &#39; Create rectangle for source image.\n        Dim srcRect As New RectangleF(50.0F, 50.0F, 150.0F, 150.0F)\n        Dim units As GraphicsUnit = GraphicsUnit.Pixel\n\n        &#39; Draw image to screen.\n        e.Graphics.DrawImage(newImage, destPara, srcRect, units)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Rectangle_System_Drawing_Rectangle_System_Drawing_GraphicsUnit_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,Rectangle,Rectangle,GraphicsUnit)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the portion of the <code>image</code> object to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the units of measure used by the <code>srcRect</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>srcRect</code> parameter specifies a rectangular portion of the <code>image</code> object to draw. This portion is scaled to fit inside the rectangle specified by the <code>destRect</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates a destination rectangle in which to draw the image.  </p>\n</li>\n<li><p>Creates a source rectangle from which to extract a portion of the image.  </p>\n</li>\n<li><p>Sets the unit of measure of the source rectangle to pixels.  </p>\n</li>\n<li><p>Draws the image to the screen.  </p>\n<p>The position of the destination rectangle locates the image on the screen, the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#47\">private:\n   void DrawImageRectRect( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create rectangle for displaying image.\n      Rectangle destRect = Rectangle(100,100,450,150);\n\n      // Create rectangle for source image.\n      Rectangle srcRect = Rectangle(50,50,150,150);\n      GraphicsUnit units = GraphicsUnit::Pixel;\n\n      // Draw image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destRect, srcRect, units );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#47\">        private void DrawImageRectRect(PaintEventArgs e)\n        {\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create rectangle for displaying image.\n            Rectangle destRect = new Rectangle(100, 100, 450, 150);\n                     \n            // Create rectangle for source image.\n            Rectangle srcRect = new Rectangle(50, 50, 150, 150);\n            GraphicsUnit units = GraphicsUnit.Pixel;\n                     \n            // Draw image to screen.\n            e.Graphics.DrawImage(newImage, destRect, srcRect, units);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#47\">    Private Sub DrawImageRectRect(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create rectangle for displaying image.\n        Dim destRect As New Rectangle(100, 100, 450, 150)\n\n        &#39; Create rectangle for source image.\n        Dim srcRect As New Rectangle(50, 50, 150, 150)\n        Dim units As GraphicsUnit = GraphicsUnit.Pixel\n\n        &#39; Draw image to screen.\n        e.Graphics.DrawImage(newImage, destRect, srcRect, units)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_RectangleF_System_Drawing_RectangleF_System_Drawing_GraphicsUnit_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,RectangleF,RectangleF,GraphicsUnit)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the portion of the <code>image</code> object to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the units of measure used by the <code>srcRect</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>srcRect</code> parameter specifies a rectangular portion of the <code>image</code> object to draw. This portion is scaled to fit inside the rectangle specified by the <code>destRect</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates a destination rectangle in which to draw the image.  </p>\n</li>\n<li><p>Creates a source rectangle from which to extract a portion of the image.  </p>\n</li>\n<li><p>Sets the unit of measure of the source rectangle to pixels.  </p>\n</li>\n<li><p>Draws the image to the screen.  </p>\n<p>The position of the destination rectangle locates the image on the screen, the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#57\">public:\n   void DrawImageRectFRectF( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create rectangle for displaying image.\n      RectangleF destRect = RectangleF(100.0F,100.0F,450.0F,150.0F);\n\n      // Create rectangle for source image.\n      RectangleF srcRect = RectangleF(50.0F,50.0F,150.0F,150.0F);\n      GraphicsUnit units = GraphicsUnit::Pixel;\n\n      // Draw image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destRect, srcRect, units );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#57\">        public void DrawImageRectFRectF(PaintEventArgs e)\n        {\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create rectangle for displaying image.\n            RectangleF destRect = new RectangleF(100.0F, 100.0F, 450.0F, 150.0F);\n                     \n            // Create rectangle for source image.\n            RectangleF srcRect = new RectangleF(50.0F, 50.0F, 150.0F, 150.0F);\n            GraphicsUnit units = GraphicsUnit.Pixel;\n                     \n            // Draw image to screen.\n            e.Graphics.DrawImage(newImage, destRect, srcRect, units);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#57\">    Public Sub DrawImageRectFRectF(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create rectangle for displaying image.\n        Dim destRect As New RectangleF(100.0F, 100.0F, 450.0F, 150.0F)\n\n        &#39; Create rectangle for source image.\n        Dim srcRect As New RectangleF(50.0F, 50.0F, 150.0F, 150.0F)\n        Dim units As GraphicsUnit = GraphicsUnit.Pixel\n\n        &#39; Draw image to screen.\n        e.Graphics.DrawImage(newImage, destRect, srcRect, units)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Point___System_Drawing_Rectangle_System_Drawing_GraphicsUnit_System_Drawing_Imaging_ImageAttributes_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of three <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that define a parallelogram.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the portion of the <code>image</code> object to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the units of measure used by the <code>srcRect</code> parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a> that specifies recoloring and gamma information for the <code>image</code> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>destPoints</code> parameter specifies three points of a parallelogram. The three <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram. The fourth point is extrapolated from the first three to form a parallelogram.  </p>\n<p> The <code>srcRect</code> parameter specifies a rectangular portion of the<code>image</code> object to draw. This portion is scaled and sheared to fit inside the parallelogram specified by the <code>destPoints</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates points that define a parallelogram in which to draw the image.  </p>\n</li>\n<li><p>Creates a rectangle to select the portion of the image to draw.  </p>\n</li>\n<li><p>Sets the graphics drawing unit to pixel.  </p>\n</li>\n<li><p>Draws the original image to the screen.  </p>\n</li>\n<li><p>Creates an additional parallelogram in which to draw an adjusted image.  </p>\n</li>\n<li><p>Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.  </p>\n</li>\n<li><p>Draws the adjusted image to the screen.  </p>\n<p>For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#37\">private:\n   void DrawImageParaRectAttrib( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create parallelogram for drawing image.\n      Point ulCorner1 = Point(100,100);\n      Point urCorner1 = Point(325,100);\n      Point llCorner1 = Point(150,250);\n      array&lt;Point&gt;^ destPara1 = {ulCorner1,urCorner1,llCorner1};\n\n      // Create rectangle for source image.\n      Rectangle srcRect = Rectangle(50,50,150,150);\n      GraphicsUnit units = GraphicsUnit::Pixel;\n\n      // Draw original image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destPara1, srcRect, units );\n\n      // Create parallelogram for drawing adjusted image.\n      Point ulCorner2 = Point(325,100);\n      Point urCorner2 = Point(550,100);\n      Point llCorner2 = Point(375,250);\n      array&lt;Point&gt;^ destPara2 = {ulCorner2,urCorner2,llCorner2};\n\n      // Create image attributes and set large gamma.\n      ImageAttributes^ imageAttr = gcnew ImageAttributes;\n      imageAttr-&gt;SetGamma( 4.0F );\n\n      // Draw adjusted image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destPara2, srcRect, units, imageAttr );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#37\">        private void DrawImageParaRectAttrib(PaintEventArgs e)\n        {\n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create parallelogram for drawing image.\n            Point ulCorner1 = new Point(100, 100);\n            Point urCorner1 = new Point(325, 100);\n            Point llCorner1 = new Point(150, 250);\n            Point[] destPara1 = {ulCorner1, urCorner1, llCorner1};\n                     \n            // Create rectangle for source image.\n            Rectangle srcRect = new Rectangle(50, 50, 150, 150);\n            GraphicsUnit units = GraphicsUnit.Pixel;\n                     \n            // Draw original image to screen.\n            e.Graphics.DrawImage(newImage, destPara1, srcRect, units);\n                     \n            // Create parallelogram for drawing adjusted image.\n            Point ulCorner2 = new Point(325, 100);\n            Point urCorner2 = new Point(550, 100);\n            Point llCorner2 = new Point(375, 250);\n            Point[] destPara2 = {ulCorner2, urCorner2, llCorner2};\n                     \n            // Create image attributes and set large gamma.\n            ImageAttributes imageAttr = new ImageAttributes();\n            imageAttr.SetGamma(4.0F);\n                     \n            // Draw adjusted image to screen.\n            e.Graphics.DrawImage(newImage, destPara2, srcRect, units, imageAttr);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#37\">    Private Sub DrawImageParaRectAttrib(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create parallelogram for drawing image.\n        Dim ulCorner1 As New Point(100, 100)\n        Dim urCorner1 As New Point(325, 100)\n        Dim llCorner1 As New Point(150, 250)\n        Dim destPara1 As Point() = {ulCorner1, urCorner1, llCorner1}\n\n        &#39; Create rectangle for source image.\n        Dim srcRect As New Rectangle(50, 50, 150, 150)\n        Dim units As GraphicsUnit = GraphicsUnit.Pixel\n\n        &#39; Draw original image to screen.\n        e.Graphics.DrawImage(newImage, destPara1, srcRect, units)\n\n        &#39; Create parallelogram for drawing adjusted image.\n        Dim ulCorner2 As New Point(325, 100)\n        Dim urCorner2 As New Point(550, 100)\n        Dim llCorner2 As New Point(375, 250)\n        Dim destPara2 As Point() = {ulCorner2, urCorner2, llCorner2}\n\n        &#39; Create image attributes and set large gamma.\n        Dim imageAttr As New ImageAttributes\n        imageAttr.SetGamma(4.0F)\n\n        &#39; Draw adjusted image to screen.\n        e.Graphics.DrawImage(newImage, destPara2, srcRect, units, _\n        imageAttr)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_PointF___System_Drawing_RectangleF_System_Drawing_GraphicsUnit_System_Drawing_Imaging_ImageAttributes_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that define a parallelogram.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the portion of the <code>image</code> object to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the units of measure used by the <code>srcRect</code> parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a> that specifies recoloring and gamma information for the <code>image</code> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>destPoints</code> parameter specifies three points of a parallelogram. The three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram. The fourth point is extrapolated from the first three to form a parallelogram.  </p>\n<p> The <code>srcRect</code> parameter specifies a rectangular portion of the <code>image</code> object to draw. This portion is scaled and sheared to fit inside the parallelogram specified by the <code>destPoints</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates points that define a destination parallelogram in which to draw the image.  </p>\n</li>\n<li><p>Creates a source rectangle from which to extract a portion of the image.  </p>\n</li>\n<li><p>Sets the unit of measure of the source rectangle to pixels.  </p>\n</li>\n<li><p>Draws the original image to the screen.  </p>\n</li>\n<li><p>Creates an additional parallelogram in which to draw an adjusted image.  </p>\n</li>\n<li><p>Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.  </p>\n</li>\n<li><p>Draws the adjusted image to the screen.  </p>\n<p>For the original, unadjusted destination parallelogram, the position locates the image on the screen, the size of the source rectangle and the size and shape of the destination parallelogram determines the scaling and shearing of the drawn image, and the size of the rectangle determines what portion of the original image is drawn to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#43\">   void DrawImageParaFRectFAttrib( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create parallelogram for drawing original image.\n      PointF ulCorner1 = PointF(100.0F,100.0F);\n      PointF urCorner1 = PointF(325.0F,100.0F);\n      PointF llCorner1 = PointF(150.0F,250.0F);\n      array&lt;PointF&gt;^ destPara1 = {ulCorner1,urCorner1,llCorner1};\n\n      // Create rectangle for source image.\n      RectangleF srcRect = RectangleF(50.0F,50.0F,150.0F,150.0F);\n      GraphicsUnit units = GraphicsUnit::Pixel;\n\n      // Create parallelogram for drawing adjusted image.\n      PointF ulCorner2 = PointF(325.0F,100.0F);\n      PointF urCorner2 = PointF(550.0F,100.0F);\n      PointF llCorner2 = PointF(375.0F,250.0F);\n      array&lt;PointF&gt;^ destPara2 = {ulCorner2,urCorner2,llCorner2};\n\n      // Draw original image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destPara1, srcRect, units );\n\n      // Create image attributes and set large gamma.\n      ImageAttributes^ imageAttr = gcnew ImageAttributes;\n      imageAttr-&gt;SetGamma( 4.0F );\n\n      // Draw adjusted image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destPara2, srcRect, units, imageAttr );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#43\">        private void DrawImageParaFRectFAttrib(PaintEventArgs e)\n        {\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create parallelogram for drawing original image.\n            PointF ulCorner1 = new PointF(100.0F, 100.0F);\n            PointF urCorner1 = new PointF(325.0F, 100.0F);\n            PointF llCorner1 = new PointF(150.0F, 250.0F);\n            PointF[] destPara1 = {ulCorner1, urCorner1, llCorner1};\n                     \n            // Create rectangle for source image.\n            RectangleF srcRect = new RectangleF(50.0F, 50.0F, 150.0F, 150.0F);\n            GraphicsUnit units = GraphicsUnit.Pixel;\n                     \n            // Create parallelogram for drawing adjusted image.\n            PointF ulCorner2 = new PointF(325.0F, 100.0F);\n            PointF urCorner2 = new PointF(550.0F, 100.0F);\n            PointF llCorner2 = new PointF(375.0F, 250.0F);\n            PointF[] destPara2 = {ulCorner2, urCorner2, llCorner2};\n                     \n            // Draw original image to screen.\n            e.Graphics.DrawImage(newImage, destPara1, srcRect, units);\n                     \n            // Create image attributes and set large gamma.\n            ImageAttributes imageAttr = new ImageAttributes();\n            imageAttr.SetGamma(4.0F);\n                     \n            // Draw adjusted image to screen.\n            e.Graphics.DrawImage(newImage, destPara2, srcRect, units, imageAttr);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#43\">    Private Sub DrawImageParaFRectFAttrib(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create parallelogram for drawing original image.\n        Dim ulCorner1 As New PointF(100.0F, 100.0F)\n        Dim urCorner1 As New PointF(325.0F, 100.0F)\n        Dim llCorner1 As New PointF(150.0F, 250.0F)\n        Dim destPara1 As PointF() = {ulCorner1, urCorner1, llCorner1}\n\n        &#39; Create rectangle for source image.\n        Dim srcRect As New RectangleF(50.0F, 50.0F, 150.0F, 150.0F)\n        Dim units As GraphicsUnit = GraphicsUnit.Pixel\n\n        &#39; Create parallelogram for drawing adjusted image.\n        Dim ulCorner2 As New PointF(325.0F, 100.0F)\n        Dim urCorner2 As New PointF(550.0F, 100.0F)\n        Dim llCorner2 As New PointF(375.0F, 250.0F)\n        Dim destPara2 As PointF() = {ulCorner2, urCorner2, llCorner2}\n\n        &#39; Draw original image to screen.\n        e.Graphics.DrawImage(newImage, destPara1, srcRect, units)\n\n        &#39; Create image attributes and set large gamma.\n        Dim imageAttr As New ImageAttributes\n        imageAttr.SetGamma(4.0F)\n\n        &#39; Draw adjusted image to screen.\n        e.Graphics.DrawImage(newImage, destPara2, srcRect, units, _\n        imageAttr)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Int32_System_Int32_System_Drawing_Rectangle_System_Drawing_GraphicsUnit_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,Int32,Int32,Rectangle,GraphicsUnit)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a portion of an image at a specified location.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, int x, int y, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the drawn image.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the drawn image.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the portion of the <code>image</code> object to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the units of measure used by the <code>srcRect</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> stores a value for pixel width and a value for horizontal resolution (dots per inch). The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution. For example, an image with a pixel width of 360 and a horizontal resolution of 72 dots per inch has a physical width of 5 inches. Similar remarks apply to pixel height and physical height.  </p>\n<p> This method draws a portion of an image using its physical size, so the image portion will have its correct size in inches regardless of the resolution (dots per inch) of the display device. For example, suppose an image portion has a pixel width of 216 and a horizontal resolution of 72 dots per inch. If you call this method to draw that image portion on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image portion will be (216/72)*96 = 288.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates the coordinates at which to draw the upper-left corner of the image.  </p>\n</li>\n<li><p>Creates a source rectangle from which to extract a portion of the image.  </p>\n</li>\n<li><p>Sets the unit of measure of the source rectangle to pixels.  </p>\n</li>\n<li><p>Draws the image to the screen.  </p>\n<p>The size of the source rectangle determines what portion of the unscaled original image is drawn to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#59\">public:\n   void DrawImage2IntRect( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create coordinates for upper-left corner of image.\n      int x = 100;\n      int y = 100;\n\n      // Create rectangle for source image.\n      Rectangle srcRect = Rectangle(50,50,150,150);\n      GraphicsUnit units = GraphicsUnit::Pixel;\n\n      // Draw image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, x, y, srcRect, units );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#59\">        public void DrawImage2IntRect(PaintEventArgs e)\n        {\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create coordinates for upper-left corner of image.\n            int x = 100;\n            int y = 100;\n                     \n            // Create rectangle for source image.\n            Rectangle srcRect = new Rectangle(50, 50, 150, 150);\n            GraphicsUnit units = GraphicsUnit.Pixel;\n                     \n            // Draw image to screen.\n            e.Graphics.DrawImage(newImage, x, y, srcRect, units);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#59\">    Public Sub DrawImage2IntRect(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create coordinates for upper-left corner of image.\n        Dim x As Integer = 100\n        Dim y As Integer = 100\n\n        &#39; Create rectangle for source image.\n        Dim srcRect As New Rectangle(50, 50, 150, 150)\n        Dim units As GraphicsUnit = GraphicsUnit.Pixel\n\n        &#39; Draw image to screen.\n        e.Graphics.DrawImage(newImage, x, y, srcRect, units)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,Int32,Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, int x, int y, int width, int height);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the drawn image.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the drawn image.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the drawn image.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the drawn image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The rectangle defined by the <code>x</code>, <code>y</code>, <code>width</code>, and <code>height</code> parameters determines the position and size of the drawn image.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates the position and size of a rectangle in which to draw the image.  </p>\n</li>\n<li><p>Draws the image to the screen.  </p>\n<p>The position of the rectangle locates the image on the screen, and the size of the original image and the size of the rectangle determines the scaling of the drawn image.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#60\">public:\n   void DrawImage4Int( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create coordinates for upper-left corner.\n      // of image and for size of image.\n      int x = 100;\n      int y = 100;\n      int width = 450;\n      int height = 150;\n\n      // Draw image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, x, y, width, height );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#60\">        public void DrawImage4Int(PaintEventArgs e)\n        {\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create coordinates for upper-left corner.\n                     \n            // of image and for size of image.\n            int x = 100;\n            int y = 100;\n            int width = 450;\n            int height = 150;\n                     \n            // Draw image to screen.\n            e.Graphics.DrawImage(newImage, x, y, width, height);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#60\">    Public Sub DrawImage4Int(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create coordinates for upper-left corner\n\n        &#39; of image and for size of image.\n        Dim x As Integer = 100\n        Dim y As Integer = 100\n        Dim width As Integer = 450\n        Dim height As Integer = 150\n\n        &#39; Draw image to screen.\n        e.Graphics.DrawImage(newImage, x, y, width, height)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Single_System_Single_System_Drawing_RectangleF_System_Drawing_GraphicsUnit_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,Single,Single,RectangleF,GraphicsUnit)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a portion of an image at a specified location.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, float x, float y, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the drawn image.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the drawn image.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the portion of the <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the units of measure used by the <code>srcRect</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> stores a value for pixel width and a value for horizontal resolution (dots per inch). The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution. For example, an image with a pixel width of 360 and a horizontal resolution of 72 dots per inch has a physical width of 5 inches. Similar remarks apply to pixel height and physical height.  </p>\n<p> This method draws a portion of an image using its physical size, so the image portion will have its correct size in inches regardless of the resolution (dots per inch) of the display device. For example, suppose an image portion has a pixel width of 216 and a horizontal resolution of 72 dots per inch. If you call this method to draw that image portion on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image portion will be (216/72)*96 = 288.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates the coordinates at which to draw the upper-left corner of the image.  </p>\n</li>\n<li><p>Creates a source rectangle from which to extract a portion of the image.  </p>\n</li>\n<li><p>Sets the unit of measure of the source rectangle to pixels.  </p>\n</li>\n<li><p>Draws the image to the screen.  </p>\n<p>The size of the source rectangle determines what portion of the unscaled original image is drawn to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#62\">public:\n   void DrawImage2FloatRectF( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create coordinates for upper-left corner of image.\n      float x = 100.0F;\n      float y = 100.0F;\n\n      // Create rectangle for source image.\n      RectangleF srcRect = RectangleF(50.0F,50.0F,150.0F,150.0F);\n      GraphicsUnit units = GraphicsUnit::Pixel;\n\n      // Draw image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, x, y, srcRect, units );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#62\">        public void DrawImage2FloatRectF(PaintEventArgs e)\n        {\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create coordinates for upper-left corner of image.\n            float x = 100.0F;\n            float y = 100.0F;\n                     \n            // Create rectangle for source image.\n            RectangleF srcRect = new RectangleF(50.0F, 50.0F, 150.0F, 150.0F);\n            GraphicsUnit units = GraphicsUnit.Pixel;\n                     \n            // Draw image to screen.\n            e.Graphics.DrawImage(newImage, x, y, srcRect, units);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#62\">    Public Sub DrawImage2FloatRectF(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create coordinates for upper-left corner of image.\n        Dim x As Single = 100.0F\n        Dim y As Single = 100.0F\n\n        &#39; Create rectangle for source image.\n        Dim srcRect As New RectangleF(50.0F, 50.0F, 150.0F, 150.0F)\n        Dim units As GraphicsUnit = GraphicsUnit.Pixel\n\n        &#39; Draw image to screen.\n        e.Graphics.DrawImage(newImage, x, y, srcRect, units)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Single_System_Single_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,Single,Single,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, float x, float y, float width, float height);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the drawn image.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the drawn image.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the drawn image.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the drawn image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The rectangle defined by the <code>x</code>, <code>y</code>, <code>width</code>, and <code>height</code> parameters determines the position and size of the drawn image.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates the position and size of a rectangle in which to draw the image.  </p>\n</li>\n<li><p>Draws the image to the screen.  </p>\n<p>The position of the rectangle locates the image on the screen, and the size of the original image and the size of the rectangle determines the scaling of the drawn image.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#63\">public:\n   void DrawImage4Float( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create coordinates for upper-left corner.\n      // of image and for size of image.\n      float x = 100.0F;\n      float y = 100.0F;\n      float width = 450.0F;\n      float height = 150.0F;\n\n      // Draw image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, x, y, width, height );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#63\">        public void DrawImage4Float(PaintEventArgs e)\n        {\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create coordinates for upper-left corner.\n                     \n            // of image and for size of image.\n            float x = 100.0F;\n            float y = 100.0F;\n            float width = 450.0F;\n            float height = 150.0F;\n                     \n            // Draw image to screen.\n            e.Graphics.DrawImage(newImage, x, y, width, height);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#63\">    Public Sub DrawImage4Float(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create coordinates for upper-left corner\n\n        &#39; of image and for size of image.\n        Dim x As Single = 100.0F\n        Dim y As Single = 100.0F\n        Dim width As Single = 450.0F\n        Dim height As Single = 150.0F\n\n        &#39; Draw image to screen.\n        e.Graphics.DrawImage(newImage, x, y, width, height)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Point___System_Drawing_Rectangle_System_Drawing_GraphicsUnit_System_Drawing_Imaging_ImageAttributes_System_Drawing_Graphics_DrawImageAbort_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that define a parallelogram.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the portion of the <code>image</code> object to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the units of measure used by the <code>srcRect</code> parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a> that specifies recoloring and gamma information for the <code>image</code> object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the DrawImage method according to application-determined criteria.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>destPoints</code> parameter specifies three points of a parallelogram. The three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram. The fourth point is extrapolated from the first three to form a parallelogram.  </p>\n<p> The <code>srcRect</code> parameter specifies a rectangular portion of the <code>image</code> object to draw. This portion is scaled and sheared to fit inside the parallelogram specified by the <code>destPoints</code> parameter.  </p>\n<p> This overload with the <code>callback</code> parameter provides the means to stop the drawing of an image once it starts according to criteria determined by the application. For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code first defines a callback method for the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> delegate; the definition is simplistic and merely tests to see whether the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawImage_\" data-linktype=\"relative-path\">DrawImage</a> method calls it with a null <code>callBackData</code> parameter. The main body of the example performs the following actions:  </p>\n<ul>\n<li><p>Creates an instance of the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> callback method:  </p>\n</li>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates points that define a parallelogram in which to draw the image.  </p>\n</li>\n<li><p>Creates a rectangle to select the portion of the image to draw.  </p>\n</li>\n<li><p>Sets the graphics drawing unit to pixel.  </p>\n</li>\n<li><p>Draws the original image to the screen.  </p>\n</li>\n<li><p>Creates an additional parallelogram in which to draw an adjusted image.  </p>\n</li>\n<li><p>Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.  </p>\n</li>\n<li><p>Draws the adjusted image to the screen.  </p>\n<p>For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.  </p>\n<p>Because this example uses an overload that does not pass a <code>callBackData</code> parameter, the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> callback returns <code>true</code>, which causes the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawImage_\" data-linktype=\"relative-path\">DrawImage</a> method to end, and the exception-handling code included in the example prints out the exception text rather than drawing the image.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#38\">   // Define DrawImageAbort callback method.\nprivate:\n   bool DrawImageCallback1( IntPtr callBackData )\n   {\n      // Test for call that passes callBackData parameter.\n      if ( callBackData == IntPtr::Zero )\n      {\n         // If no callBackData passed, abort DrawImage method.\n         return true;\n      }\n      else\n      {\n         // If callBackData passed, continue DrawImage method.\n         return false;\n      }\n   }\n\nprivate:\n   void DrawImageParaRectAttribAbort( PaintEventArgs^ e )\n   {\n      // Create callback method.\n      Graphics::DrawImageAbort^ imageCallback = gcnew Graphics::DrawImageAbort( this, &amp;Form1::DrawImageCallback1 );\n\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create parallelogram for drawing original image.\n      Point ulCorner = Point(100,100);\n      Point urCorner = Point(550,100);\n      Point llCorner = Point(150,250);\n      array&lt;Point&gt;^ destPara1 = {ulCorner,urCorner,llCorner};\n\n      // Create rectangle for source image.\n      Rectangle srcRect = Rectangle(50,50,150,150);\n      GraphicsUnit units = GraphicsUnit::Pixel;\n\n      // Draw original image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destPara1, srcRect, units );\n\n      // Create parallelogram for drawing adjusted image.\n      Point ulCorner2 = Point(325,100);\n      Point urCorner2 = Point(550,100);\n      Point llCorner2 = Point(375,250);\n      array&lt;Point&gt;^ destPara2 = {ulCorner2,urCorner2,llCorner2};\n\n      // Create image attributes and set large gamma.\n      ImageAttributes^ imageAttr = gcnew ImageAttributes;\n      imageAttr-&gt;SetGamma( 4.0F );\n      try\n      {\n         // Draw image to screen.\n         e-&gt;Graphics-&gt;DrawImage( newImage, destPara2, srcRect, units, imageAttr, imageCallback );\n      }\n      catch ( Exception^ ex ) \n      {\n         e-&gt;Graphics-&gt;DrawString( ex-&gt;ToString(), gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), Brushes::Black, PointF(0,0) );\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#38\">\n        // Define DrawImageAbort callback method.\n        private bool DrawImageCallback1(IntPtr callBackData)\n        {\n                     \n            // Test for call that passes callBackData parameter.\n            if(callBackData==IntPtr.Zero)\n            {\n                     \n                // If no callBackData passed, abort DrawImage method.\n                return true;\n            }\n            else\n            {\n                     \n                // If callBackData passed, continue DrawImage method.\n                return false;\n            }\n        }\n        private void DrawImageParaRectAttribAbort(PaintEventArgs e)\n        {\n                     \n            // Create callback method.\n            Graphics.DrawImageAbort imageCallback\n                = new Graphics.DrawImageAbort(DrawImageCallback1);\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create parallelogram for drawing original image.\n            Point ulCorner = new Point(100, 100);\n            Point urCorner = new Point(550, 100);\n            Point llCorner = new Point(150, 250);\n            Point[] destPara1 = {ulCorner, urCorner, llCorner};\n                     \n            // Create rectangle for source image.\n            Rectangle srcRect = new Rectangle(50, 50, 150, 150);\n            GraphicsUnit units = GraphicsUnit.Pixel;\n                     \n            // Draw original image to screen.\n            e.Graphics.DrawImage(newImage, destPara1, srcRect, units);\n                     \n            // Create parallelogram for drawing adjusted image.\n            Point ulCorner2 = new Point(325, 100);\n            Point urCorner2 = new Point(550, 100);\n            Point llCorner2 = new Point(375, 250);\n            Point[] destPara2 = {ulCorner2, urCorner2, llCorner2};\n                     \n            // Create image attributes and set large gamma.\n            ImageAttributes imageAttr = new ImageAttributes();\n            imageAttr.SetGamma(4.0F);\n            try\n            {\n                checked\n                {\n                     \n                    // Draw image to screen.\n                    e.Graphics.DrawImage(\n                        newImage,\n                        destPara2,\n                        srcRect,\n                        units,\n                        imageAttr,\n                        imageCallback);\n                }\n            }\n            catch (Exception ex)\n            {\n                e.Graphics.DrawString(\n                    ex.ToString(),\n                    new Font(&quot;Arial&quot;, 8),\n                    Brushes.Black,\n                    new PointF(0, 0));\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#38\">    Private Function DrawImageCallback1(ByVal callBackData As IntPtr) As Boolean\n\n        &#39; Test for call that passes callBackData parameter.\n        If callBackData.Equals(IntPtr.Zero) Then\n\n            &#39; If no callBackData passed, abort DrawImage method.\n            Return True\n        Else\n\n            &#39; If callBackData passed, continue DrawImage method.\n            Return False\n        End If\n    End Function\n    Private Sub DrawImageParaRectAttribAbort(ByVal e As PaintEventArgs)\n\n        &#39; Create callback method.\n        Dim imageCallback As New _\n        Graphics.DrawImageAbort(AddressOf DrawImageCallback1)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create parallelogram for drawing original image.\n        Dim ulCorner As New Point(100, 100)\n        Dim urCorner As New Point(550, 100)\n        Dim llCorner As New Point(150, 250)\n        Dim destPara1 As Point() = {ulCorner, urCorner, llCorner}\n\n        &#39; Create rectangle for source image.\n        Dim srcRect As New Rectangle(50, 50, 150, 150)\n        Dim units As GraphicsUnit = GraphicsUnit.Pixel\n\n        &#39; Draw original image to screen.\n        e.Graphics.DrawImage(newImage, destPara1, srcRect, units)\n\n        &#39; Create parallelogram for drawing adjusted image.\n        Dim ulCorner2 As New Point(325, 100)\n        Dim urCorner2 As New Point(550, 100)\n        Dim llCorner2 As New Point(375, 250)\n        Dim destPara2 As Point() = {ulCorner2, urCorner2, llCorner2}\n\n        &#39; Create image attributes and set large gamma.\n        Dim imageAttr As New ImageAttributes\n        imageAttr.SetGamma(4.0F)\n        Try\n\n            &#39; Draw image to screen.\n            e.Graphics.DrawImage(newImage, destPara2, srcRect, units, _\n            imageAttr, imageCallback)\n        Catch ex As Exception\n            e.Graphics.DrawString(ex.ToString(), New Font(&quot;Arial&quot;, 8), _\n            Brushes.Black, New PointF(0, 0))\n        End Try\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_PointF___System_Drawing_RectangleF_System_Drawing_GraphicsUnit_System_Drawing_Imaging_ImageAttributes_System_Drawing_Graphics_DrawImageAbort_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that define a parallelogram.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the portion of the <code>image</code> object to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the units of measure used by the <code>srcRect</code> parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a> that specifies recoloring and gamma information for the <code>image</code> object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the DrawImage method according to application-determined criteria.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>destPoints</code> parameter specifies three points of a parallelogram. The three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram. The fourth point is extrapolated from the first three to form a parallelogram.  </p>\n<p> The <code>srcRect</code> parameter specifies a rectangular portion of the <code>image</code> object to draw. This portion is scaled and sheared to fit inside the parallelogram specified by the <code>destPoints</code> parameter.  </p>\n<p> This overload with the <code>callback</code> parameter provides the means to stop the drawing of an image once it starts according to criteria determined by the application. For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code first defines a callback method for the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> delegate; the definition is simplistic and merely tests to see whether the DrawImage method calls it with a null <code>callBackData</code> parameter. The main body of the example performs the following actions:  </p>\n<ul>\n<li><p>Creates an instance of the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> callback method.  </p>\n</li>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates points that define a parallelogram in which to draw the image.  </p>\n</li>\n<li><p>Creates a rectangle to select the portion of the image to draw.  </p>\n</li>\n<li><p>Sets the graphics drawing unit to pixel.  </p>\n</li>\n<li><p>Draws the original image to the screen.  </p>\n</li>\n<li><p>Creates an additional parallelogram in which to draw an adjusted image.  </p>\n</li>\n<li><p>Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.  </p>\n</li>\n<li><p>Draws the adjusted image to the screen.  </p>\n<p>For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.  </p>\n<p>Because this example uses an overload that does not pass a <code>callBackData</code> parameter, the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> callback returns <code>true</code>, which causes the DrawImage method to end, and the exception-handling code included in the example prints out the exception text rather than drawing the image.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#44\">   // Define DrawImageAbort callback method.\nprivate:\n   bool DrawImageCallback3( IntPtr callBackData )\n   {\n      // Test for call that passes callBackData parameter.\n      if ( callBackData == IntPtr::Zero )\n      {\n         // If no callBackData passed, abort DrawImage method.\n         return true;\n      }\n      else\n      {\n         // If callBackData passed, continue DrawImage method.\n         return false;\n      }\n   }\n\nprivate:\n   void DrawImageParaFRectAttribAbort( PaintEventArgs^ e )\n   {\n      // Create callback method.\n      Graphics::DrawImageAbort^ imageCallback = gcnew Graphics::DrawImageAbort( this, &amp;Form1::DrawImageCallback3 );\n\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create parallelogram for drawing original image.\n      PointF ulCorner1 = PointF(100.0F,100.0F);\n      PointF urCorner1 = PointF(325.0F,100.0F);\n      PointF llCorner1 = PointF(150.0F,250.0F);\n      array&lt;PointF&gt;^ destPara1 = {ulCorner1,urCorner1,llCorner1};\n\n      // Create rectangle for source image.\n      RectangleF srcRect = RectangleF(50.0F,50.0F,150.0F,150.0F);\n      GraphicsUnit units = GraphicsUnit::Pixel;\n\n      // Create parallelogram for drawing adjusted image.\n      PointF ulCorner2 = PointF(325.0F,100.0F);\n      PointF urCorner2 = PointF(550.0F,100.0F);\n      PointF llCorner2 = PointF(375.0F,250.0F);\n      array&lt;PointF&gt;^ destPara2 = {ulCorner2,urCorner2,llCorner2};\n\n      // Draw original image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destPara1, srcRect, units );\n\n      // Create image attributes and set large gamma.\n      ImageAttributes^ imageAttr = gcnew ImageAttributes;\n      imageAttr-&gt;SetGamma( 4.0F );\n      try\n      {\n         // Draw adjusted image to screen.\n         e-&gt;Graphics-&gt;DrawImage( newImage, destPara2, srcRect, units, imageAttr, imageCallback );\n      }\n      catch ( Exception^ ex ) \n      {\n         e-&gt;Graphics-&gt;DrawString( ex-&gt;ToString(), gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), Brushes::Black, PointF(0,0) );\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#44\">\n        // Define DrawImageAbort callback method.\n        private bool DrawImageCallback3(IntPtr callBackData)\n        {\n                     \n            // Test for call that passes callBackData parameter.\n            if(callBackData==IntPtr.Zero)\n            {\n                     \n                // If no callBackData passed, abort DrawImage method.\n                return true;\n            }\n            else\n            {\n                     \n                // If callBackData passed, continue DrawImage method.\n                return false;\n            }\n        }\n        private void DrawImageParaFRectAttribAbort(PaintEventArgs e)\n        {\n                     \n            // Create callback method.\n            Graphics.DrawImageAbort imageCallback\n                = new Graphics.DrawImageAbort(DrawImageCallback3);\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create parallelogram for drawing original image.\n            PointF ulCorner1 = new PointF(100.0F, 100.0F);\n            PointF urCorner1 = new PointF(325.0F, 100.0F);\n            PointF llCorner1 = new PointF(150.0F, 250.0F);\n            PointF[] destPara1 = {ulCorner1, urCorner1, llCorner1};\n                     \n            // Create rectangle for source image.\n            RectangleF srcRect = new RectangleF(50.0F, 50.0F, 150.0F, 150.0F);\n            GraphicsUnit units = GraphicsUnit.Pixel;\n                     \n            // Create parallelogram for drawing adjusted image.\n            PointF ulCorner2 = new PointF(325.0F, 100.0F);\n            PointF urCorner2 = new PointF(550.0F, 100.0F);\n            PointF llCorner2 = new PointF(375.0F, 250.0F);\n            PointF[] destPara2 = {ulCorner2, urCorner2, llCorner2};\n                     \n            // Draw original image to screen.\n            e.Graphics.DrawImage(newImage, destPara1, srcRect, units);\n                     \n            // Create image attributes and set large gamma.\n            ImageAttributes imageAttr = new ImageAttributes();\n            imageAttr.SetGamma(4.0F);\n            try\n            {\n                checked\n                {\n                     \n                    // Draw adjusted image to screen.\n                    e.Graphics.DrawImage(\n                        newImage,\n                        destPara2,\n                        srcRect,\n                        units,\n                        imageAttr,\n                        imageCallback);\n                }\n            }\n            catch (Exception ex)\n            {\n                e.Graphics.DrawString(\n                    ex.ToString(),\n                    new Font(&quot;Arial&quot;, 8),\n                    Brushes.Black,\n                    new PointF(0, 0));\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#44\">    Private Function DrawImageCallback3(ByVal callBackData As IntPtr) As Boolean\n\n        &#39; Test for call that passes callBackData parameter.\n        If callBackData.Equals(IntPtr.Zero) Then\n\n            &#39; If no callBackData passed, abort DrawImage method.\n            Return True\n        Else\n\n            &#39; If callBackData passed, continue DrawImage method.\n            Return False\n        End If\n    End Function\n    Private Sub DrawImageParaFRectAttribAbort(ByVal e As PaintEventArgs)\n\n        &#39; Create callback method.\n        Dim imageCallback As New _\n        Graphics.DrawImageAbort(AddressOf DrawImageCallback3)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create parallelogram for drawing original image.\n        Dim ulCorner1 As New PointF(100.0F, 100.0F)\n        Dim urCorner1 As New PointF(325.0F, 100.0F)\n        Dim llCorner1 As New PointF(150.0F, 250.0F)\n        Dim destPara1 As PointF() = {ulCorner1, urCorner1, llCorner1}\n\n        &#39; Create rectangle for source image.\n        Dim srcRect As New RectangleF(50.0F, 50.0F, 150.0F, 150.0F)\n        Dim units As GraphicsUnit = GraphicsUnit.Pixel\n\n        &#39; Create parallelogram for drawing adjusted image.\n        Dim ulCorner2 As New PointF(325.0F, 100.0F)\n        Dim urCorner2 As New PointF(550.0F, 100.0F)\n        Dim llCorner2 As New PointF(375.0F, 250.0F)\n        Dim destPara2 As PointF() = {ulCorner2, urCorner2, llCorner2}\n\n        &#39; Draw original image to screen.\n        e.Graphics.DrawImage(newImage, destPara1, srcRect, units)\n\n        &#39; Create image attributes and set large gamma.\n        Dim imageAttr As New ImageAttributes\n        imageAttr.SetGamma(4.0F)\n        Try\n\n            &#39; Draw adjusted image to screen.\n            e.Graphics.DrawImage(newImage, destPara2, srcRect, units, _\n            imageAttr, imageCallback)\n        Catch ex As Exception\n            e.Graphics.DrawString(ex.ToString(), New Font(&quot;Arial&quot;, 8), _\n            Brushes.Black, New PointF(0, 0))\n        End Try\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Point___System_Drawing_Rectangle_System_Drawing_GraphicsUnit_System_Drawing_Imaging_ImageAttributes_System_Drawing_Graphics_DrawImageAbort_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback, int callbackData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that define a parallelogram.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the portion of the <code>image</code> object to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the units of measure used by the <code>srcRect</code> parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a> that specifies recoloring and gamma information for the <code>image</code> object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the DrawImage method according to application-determined criteria.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Value specifying additional data for the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> delegate to use when checking whether to stop execution of the DrawImage method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>destPoints</code> parameter specifies three points of a parallelogram. The three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram. The fourth point is extrapolated from the first three to form a parallelogram.  </p>\n<p> The <code>srcRect</code> parameter specifies a rectangular portion of the <code>image</code> object to draw. This portion is scaled and sheared to fit inside the parallelogram specified by the <code>destPoints</code> parameter.  </p>\n<p> This overload with the <code>callback</code> and <code>callbackData</code> parameters provides the means to stop the drawing of an image once it starts according to criteria and data determined by the application. For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code first defines a callback method for the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> delegate; the definition is simplistic and merely tests to see whether the DrawImage method calls it with a null <code>callBackData</code> parameter. The main body of the example performs the following actions:  </p>\n<ul>\n<li><p>Creates an instance of the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> callback method.  </p>\n</li>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates points that define a parallelogram in which to draw the image.  </p>\n</li>\n<li><p>Creates a rectangle to select the portion of the image to draw.  </p>\n</li>\n<li><p>Sets the graphics drawing unit to pixel.  </p>\n</li>\n<li><p>Draws the original image to the screen.  </p>\n</li>\n<li><p>Creates an additional parallelogram in which to draw an adjusted image.  </p>\n</li>\n<li><p>Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.  </p>\n</li>\n<li><p>Draws the adjusted image to the screen.  </p>\n<p>For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.  </p>\n<p>Because this example uses an overload that passes a <code>callBackData</code> parameter, the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> callback returns <code>false</code>, which causes the DrawImage method to continue, and the example draws the adjusted image to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#39\">   // Define DrawImageAbort callback method.\nprivate:\n   bool DrawImageCallback2( IntPtr callBackData )\n   {\n      // Test for call that passes callBackData parameter.\n      if ( callBackData == IntPtr::Zero )\n      {\n         // If no callBackData passed, abort DrawImage method.\n         return true;\n      }\n      else\n      {\n         // If callBackData passed, continue DrawImage method.\n         return false;\n      }\n   }\n\nprivate:\n   void DrawImageParaRectAttribAbortData( PaintEventArgs^ e )\n   {\n      // Create callback method.\n      Graphics::DrawImageAbort^ imageCallback = gcnew Graphics::DrawImageAbort( this, &amp;Form1::DrawImageCallback2 );\n      int imageCallbackData = 1;\n\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create parallelogram for drawing original image.\n      Point ulCorner = Point(100,100);\n      Point urCorner = Point(550,100);\n      Point llCorner = Point(150,250);\n      array&lt;Point&gt;^ destPara1 = {ulCorner,urCorner,llCorner};\n\n      // Create rectangle for source image.\n      Rectangle srcRect = Rectangle(50,50,150,150);\n      GraphicsUnit units = GraphicsUnit::Pixel;\n\n      // Draw original image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destPara1, srcRect, units );\n\n      // Create parallelogram for drawing adjusted image.\n      Point ulCorner2 = Point(325,100);\n      Point urCorner2 = Point(550,100);\n      Point llCorner2 = Point(375,250);\n      array&lt;Point&gt;^ destPara2 = {ulCorner2,urCorner2,llCorner2};\n\n      // Create image attributes and set large gamma.\n      ImageAttributes^ imageAttr = gcnew ImageAttributes;\n      imageAttr-&gt;SetGamma( 4.0F );\n      try\n      {\n         // Draw image to screen.\n         e-&gt;Graphics-&gt;DrawImage( newImage, destPara2, srcRect, units, imageAttr, imageCallback, imageCallbackData );\n      }\n      catch ( Exception^ ex ) \n      {\n         e-&gt;Graphics-&gt;DrawString( ex-&gt;ToString(), gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), Brushes::Black, PointF(0,0) );\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#39\">\n        // Define DrawImageAbort callback method.\n        private bool DrawImageCallback2(IntPtr callBackData)\n        {\n                     \n            // Test for call that passes callBackData parameter.\n            if(callBackData==IntPtr.Zero)\n            {\n                     \n                // If no callBackData passed, abort DrawImage method.\n                return true;\n            }\n            else\n            {\n                     \n                // If callBackData passed, continue DrawImage method.\n                return false;\n            }\n        }\n        private void DrawImageParaRectAttribAbortData(PaintEventArgs e)\n        {\n                     \n            // Create callback method.\n            Graphics.DrawImageAbort imageCallback\n                = new Graphics.DrawImageAbort(DrawImageCallback2);\n            int imageCallbackData = 1;\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create parallelogram for drawing original image.\n            Point ulCorner = new Point(100, 100);\n            Point urCorner = new Point(550, 100);\n            Point llCorner = new Point(150, 250);\n            Point[] destPara1 = {ulCorner, urCorner, llCorner};\n                     \n            // Create rectangle for source image.\n            Rectangle srcRect = new Rectangle(50, 50, 150, 150);\n            GraphicsUnit units = GraphicsUnit.Pixel;\n                     \n            // Draw original image to screen.\n            e.Graphics.DrawImage(newImage, destPara1, srcRect, units);\n                     \n            // Create parallelogram for drawing adjusted image.\n            Point ulCorner2 = new Point(325, 100);\n            Point urCorner2 = new Point(550, 100);\n            Point llCorner2 = new Point(375, 250);\n            Point[] destPara2 = {ulCorner2, urCorner2, llCorner2};\n                     \n            // Create image attributes and set large gamma.\n            ImageAttributes imageAttr = new ImageAttributes();\n            imageAttr.SetGamma(4.0F);\n            try\n            {\n                checked\n                {\n                     \n                    // Draw image to screen.\n                    e.Graphics.DrawImage(\n                        newImage,\n                        destPara2,\n                        srcRect,\n                        units,\n                        imageAttr,\n                        imageCallback,\n                        imageCallbackData);\n                }\n            }\n            catch (Exception ex)\n            {\n                e.Graphics.DrawString(\n                    ex.ToString(),\n                    new Font(&quot;Arial&quot;, 8),\n                    Brushes.Black,\n                    new PointF(0, 0));\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#39\">    Private Function DrawImageCallback2(ByVal callBackData As IntPtr) As Boolean\n\n        &#39; Test for call that passes callBackData parameter.\n        If callBackData.Equals(IntPtr.Zero) Then\n\n            &#39; If no callBackData passed, abort DrawImage method.\n            Return True\n        Else\n\n            &#39; If callBackData passed, continue DrawImage method.\n            Return False\n        End If\n    End Function\n    Private Sub DrawImageParaRectAttribAbortData(ByVal e As PaintEventArgs)\n\n        &#39; Create callback method.\n        Dim imageCallback As New _\n        Graphics.DrawImageAbort(AddressOf DrawImageCallback2)\n        Dim imageCallbackData As Integer = 1\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create parallelogram for drawing original image.\n        Dim ulCorner As New Point(100, 100)\n        Dim urCorner As New Point(550, 100)\n        Dim llCorner As New Point(150, 250)\n        Dim destPara1 As Point() = {ulCorner, urCorner, llCorner}\n\n        &#39; Create rectangle for source image.\n        Dim srcRect As New Rectangle(50, 50, 150, 150)\n        Dim units As GraphicsUnit = GraphicsUnit.Pixel\n\n        &#39; Draw original image to screen.\n        e.Graphics.DrawImage(newImage, destPara1, srcRect, units)\n\n        &#39; Create parallelogram for drawing adjusted image.\n        Dim ulCorner2 As New Point(325, 100)\n        Dim urCorner2 As New Point(550, 100)\n        Dim llCorner2 As New Point(375, 250)\n        Dim destPara2 As Point() = {ulCorner2, urCorner2, llCorner2}\n\n        &#39; Create image attributes and set large gamma.\n        Dim imageAttr As New ImageAttributes\n        imageAttr.SetGamma(4.0F)\n        Try\n\n            &#39; Draw image to screen.\n            e.Graphics.DrawImage(newImage, destPara2, srcRect, units, _\n            imageAttr, imageCallback, imageCallbackData)\n        Catch ex As Exception\n            e.Graphics.DrawString(ex.ToString(), New Font(&quot;Arial&quot;, 8), _\n            Brushes.Black, New PointF(0, 0))\n        End Try\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_PointF___System_Drawing_RectangleF_System_Drawing_GraphicsUnit_System_Drawing_Imaging_ImageAttributes_System_Drawing_Graphics_DrawImageAbort_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback, int callbackData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that define a parallelogram.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the portion of the <code>image</code> object to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the units of measure used by the <code>srcRect</code> parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a> that specifies recoloring and gamma information for the <code>image</code> object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the DrawImage method according to application-determined criteria.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Value specifying additional data for the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> delegate to use when checking whether to stop execution of the DrawImage method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>destPoints</code> parameter specifies three points of a parallelogram. The three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram. The fourth point is extrapolated from the first three to form a parallelogram.  </p>\n<p> The <code>srcRect</code> parameter specifies a rectangular portion of the <code>image</code> object to draw. This portion is scaled and sheared to fit inside the parallelogram specified by the <code>destPoints</code> parameter.  </p>\n<p> This overload with the <code>callback</code> and <code>callbackData</code> parameters provides the means to stop the drawing of an image once it starts according to criteria and data determined by the application. For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <code>Pa</code><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code first defines a callback method for the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> delegate; the definition is simplistic and merely tests to see whether the DrawImage method calls it with a null <code>callBackData</code> parameter. The main body of the example performs the following actions:  </p>\n<ul>\n<li><p>Creates an instance of the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> callback method.  </p>\n</li>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates points that define a parallelogram in which to draw the image.  </p>\n</li>\n<li><p>Creates a rectangle to select the portion of the image to draw.  </p>\n</li>\n<li><p>Sets the graphics drawing unit to pixel.  </p>\n</li>\n<li><p>Draws the original image to the screen.  </p>\n</li>\n<li><p>Creates an additional parallelogram in which to draw an adjusted image.  </p>\n</li>\n<li><p>Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.  </p>\n</li>\n<li><p>Draws the adjusted image to the screen.  </p>\n<p>For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.  </p>\n<p>Because this example uses an overload that passes a <code>callBackData</code> parameter, the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> callback returns <code>false</code>, which causes the DrawImage method to continue, and the example draws the adjusted image to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#45\">   // Define DrawImageAbort callback method.\nprivate:\n   bool DrawImageCallback4( IntPtr callBackData )\n   {\n      // Test for call that passes callBackData parameter.\n      if ( callBackData == IntPtr::Zero )\n      {\n         // If no callBackData passed, abort DrawImage method.\n         return true;\n      }\n      else\n      {\n         // If callBackData passed, continue DrawImage method.\n         return false;\n      }\n   }\n\nprivate:\n   void DrawImageParaFRectAttribAbortData( PaintEventArgs^ e )\n   {\n      // Create callback method.\n      Graphics::DrawImageAbort^ imageCallback = gcnew Graphics::DrawImageAbort( this, &amp;Form1::DrawImageCallback4 );\n      int imageCallbackData = 1;\n\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create parallelogram for drawing original image.\n      PointF ulCorner1 = PointF(100.0F,100.0F);\n      PointF urCorner1 = PointF(325.0F,100.0F);\n      PointF llCorner1 = PointF(150.0F,250.0F);\n      array&lt;PointF&gt;^ destPara1 = {ulCorner1,urCorner1,llCorner1};\n\n      // Create rectangle for source image.\n      RectangleF srcRect = RectangleF(50.0F,50.0F,150.0F,150.0F);\n      GraphicsUnit units = GraphicsUnit::Pixel;\n\n      // Create parallelogram for drawing adjusted image.\n      PointF ulCorner2 = PointF(325.0F,100.0F);\n      PointF urCorner2 = PointF(550.0F,100.0F);\n      PointF llCorner2 = PointF(375.0F,250.0F);\n      array&lt;PointF&gt;^ destPara2 = {ulCorner2,urCorner2,llCorner2};\n\n      // Draw original image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destPara1, srcRect, units );\n\n      // Create image attributes and set large gamma.\n      ImageAttributes^ imageAttr = gcnew ImageAttributes;\n      imageAttr-&gt;SetGamma( 4.0F );\n      try\n      {\n         // Draw adjusted image to screen.\n         e-&gt;Graphics-&gt;DrawImage( newImage, destPara2, srcRect, units, imageAttr, imageCallback, imageCallbackData );\n      }\n      catch ( Exception^ ex ) \n      {\n         e-&gt;Graphics-&gt;DrawString( ex-&gt;ToString(), gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), Brushes::Black, PointF(0,0) );\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#45\">\n        // Define DrawImageAbort callback method.\n        private bool DrawImageCallback4(IntPtr callBackData)\n        {\n                     \n            // Test for call that passes callBackData parameter.\n            if(callBackData==IntPtr.Zero)\n            {\n                     \n                // If no callBackData passed, abort DrawImage method.\n                return true;\n            }\n            else\n            {\n                     \n                // If callBackData passed, continue DrawImage method.\n                return false;\n            }\n        }\n        private void DrawImageParaFRectAttribAbortData(PaintEventArgs e)\n        {\n                     \n            // Create callback method.\n            Graphics.DrawImageAbort imageCallback\n                = new Graphics.DrawImageAbort(DrawImageCallback4);\n            int imageCallbackData = 1;\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create parallelogram for drawing original image.\n            PointF ulCorner1 = new PointF(100.0F, 100.0F);\n            PointF urCorner1 = new PointF(325.0F, 100.0F);\n            PointF llCorner1 = new PointF(150.0F, 250.0F);\n            PointF[] destPara1 = {ulCorner1, urCorner1, llCorner1};\n                     \n            // Create rectangle for source image.\n            RectangleF srcRect = new RectangleF(50.0F, 50.0F, 150.0F, 150.0F);\n            GraphicsUnit units = GraphicsUnit.Pixel;\n                     \n            // Create parallelogram for drawing adjusted image.\n            PointF ulCorner2 = new PointF(325.0F, 100.0F);\n            PointF urCorner2 = new PointF(550.0F, 100.0F);\n            PointF llCorner2 = new PointF(375.0F, 250.0F);\n            PointF[] destPara2 = {ulCorner2, urCorner2, llCorner2};\n                     \n            // Draw original image to screen.\n            e.Graphics.DrawImage(newImage, destPara1, srcRect, units);\n                     \n            // Create image attributes and set large gamma.\n            ImageAttributes imageAttr = new ImageAttributes();\n            imageAttr.SetGamma(4.0F);\n            try\n            {\n                checked\n                {\n                     \n                    // Draw adjusted image to screen.\n                    e.Graphics.DrawImage(\n                        newImage,\n                        destPara2,\n                        srcRect,\n                        units,\n                        imageAttr,\n                        imageCallback,\n                        imageCallbackData);\n                }\n            }\n            catch (Exception ex)\n            {\n                e.Graphics.DrawString(\n                    ex.ToString(),\n                    new Font(&quot;Arial&quot;, 8),\n                    Brushes.Black,\n                    new PointF(0, 0));\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#45\">    Private Function DrawImageCallback4(ByVal callBackData As IntPtr) As Boolean\n\n        &#39; Test for call that passes callBackData parameter.\n        If callBackData.Equals(IntPtr.Zero) Then\n\n            &#39; If no callBackData passed, abort DrawImage method.\n            Return True\n        Else\n\n            &#39; If callBackData passed, continue DrawImage method.\n            Return False\n        End If\n    End Function\n    Private Sub DrawImageParaFRectAttribAbortData(ByVal e As PaintEventArgs)\n\n        &#39; Create callback method.\n        Dim imageCallback As New _\n        Graphics.DrawImageAbort(AddressOf DrawImageCallback4)\n        Dim imageCallbackData As Integer = 1\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create parallelogram for drawing original image.\n        Dim ulCorner1 As New PointF(100.0F, 100.0F)\n        Dim urCorner1 As New PointF(325.0F, 100.0F)\n        Dim llCorner1 As New PointF(150.0F, 250.0F)\n        Dim destPara1 As PointF() = {ulCorner1, urCorner1, llCorner1}\n\n        &#39; Create rectangle for source image.\n        Dim srcRect As New RectangleF(50.0F, 50.0F, 150.0F, 150.0F)\n        Dim units As GraphicsUnit = GraphicsUnit.Pixel\n\n        &#39; Create parallelogram for drawing adjusted image.\n        Dim ulCorner2 As New PointF(325.0F, 100.0F)\n        Dim urCorner2 As New PointF(550.0F, 100.0F)\n        Dim llCorner2 As New PointF(375.0F, 250.0F)\n        Dim destPara2 As PointF() = {ulCorner2, urCorner2, llCorner2}\n\n        &#39; Draw original image to screen.\n        e.Graphics.DrawImage(newImage, destPara1, srcRect, units)\n\n        &#39; Create image attributes and set large gamma.\n        Dim imageAttr As New ImageAttributes\n        imageAttr.SetGamma(4.0F)\n        Try\n\n            &#39; Draw adjusted image to screen.\n            e.Graphics.DrawImage(newImage, destPara2, srcRect, units, _\n            imageAttr, imageCallback, imageCallbackData)\n        Catch ex As Exception\n            e.Graphics.DrawString(ex.ToString(), New Font(&quot;Arial&quot;, 8), _\n            Brushes.Black, New PointF(0, 0))\n        End Try\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Rectangle_System_Int32_System_Int32_System_Int32_System_Int32_System_Drawing_GraphicsUnit_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcWidth</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcHeight</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the units of measure used to determine the source rectangle.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>srcX</code>, <code>srcY</code>, <code>srcWidth</code>, and <code>srcHeight</code> parameters specify a rectangular portion, of the <code>image</code> object to draw. The rectangle is relative to the upper-left corner of the source image. This portion is scaled to fit inside the rectangle specified by the <code>destRect</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates a destination rectangle in which to draw the image.  </p>\n</li>\n<li><p>Creates the coordinates of a source rectangle from which to extract a portion of the image.  </p>\n</li>\n<li><p>Sets the unit of measure of the source rectangle to pixels.  </p>\n</li>\n<li><p>Draws the image to the screen.  </p>\n<p>The position of the destination rectangle locates the image on the screen, and the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#48\">   void DrawImageRect4Int( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create rectangle for displaying image.\n      Rectangle destRect = Rectangle(100,100,450,150);\n\n      // Create coordinates of rectangle for source image.\n      int x = 50;\n      int y = 50;\n      int width = 150;\n      int height = 150;\n      GraphicsUnit units = GraphicsUnit::Pixel;\n\n      // Draw image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destRect, x, y, width, height, units );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#48\">        private void DrawImageRect4Int(PaintEventArgs e)\n        {\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create rectangle for displaying image.\n            Rectangle destRect = new Rectangle(100, 100, 450, 150);\n                     \n            // Create coordinates of rectangle for source image.\n            int x = 50;\n            int y = 50;\n            int width = 150;\n            int height = 150;\n            GraphicsUnit units = GraphicsUnit.Pixel;\n                     \n            // Draw image to screen.\n            e.Graphics.DrawImage(newImage, destRect, x, y, width, height, units);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#48\">    Private Sub DrawImageRect4Int(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create rectangle for displaying image.\n        Dim destRect As New Rectangle(100, 100, 450, 150)\n\n        &#39; Create coordinates of rectangle for source image.\n        Dim x As Integer = 50\n        Dim y As Integer = 50\n        Dim width As Integer = 150\n        Dim height As Integer = 150\n        Dim units As GraphicsUnit = GraphicsUnit.Pixel\n\n        &#39; Draw image to screen.\n        e.Graphics.DrawImage(newImage, destRect, x, y, width, height, _\n        units)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Rectangle_System_Single_System_Single_System_Single_System_Single_System_Drawing_GraphicsUnit_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcWidth</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcHeight</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the units of measure used to determine the source rectangle.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>srcX</code>, <code>srcY</code>, <code>srcWidth</code>, and <code>srcHeight</code> parameters specify a rectangular portion, of the <code>image</code> object to draw. The rectangle is relative to the upper-left corner of the source image. This portion is scaled to fit inside the rectangle specified by the <code>destRect</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates the coordinates of a destination rectangle in which to draw the image.  </p>\n</li>\n<li><p>Creates a source rectangle from which to extract a portion of the image.  </p>\n</li>\n<li><p>Sets the unit of measure of the source rectangle to pixels.  </p>\n</li>\n<li><p>Draws the image to the screen.  </p>\n<p>The position of the destination rectangle locates the image on the screen, the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#52\">private:\n   void DrawImageRect4Float( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create rectangle for displaying image.\n      Rectangle destRect = Rectangle(100,100,450,150);\n\n      // Create coordinates of rectangle for source image.\n      float x = 50.0F;\n      float y = 50.0F;\n      float width = 150.0F;\n      float height = 150.0F;\n      GraphicsUnit units = GraphicsUnit::Pixel;\n\n      // Draw image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destRect, x, y, width, height, units );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#52\">        private void DrawImageRect4Float(PaintEventArgs e)\n        {\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create rectangle for displaying image.\n            Rectangle destRect = new Rectangle(100, 100, 450, 150);\n                     \n            // Create coordinates of rectangle for source image.\n            float x = 50.0F;\n            float y = 50.0F;\n            float width = 150.0F;\n            float height = 150.0F;\n            GraphicsUnit units = GraphicsUnit.Pixel;\n                     \n            // Draw image to screen.\n            e.Graphics.DrawImage(newImage, destRect, x, y, width, height, units);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#52\">    Private Sub DrawImageRect4Float(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create rectangle for displaying image.\n        Dim destRect As New Rectangle(100, 100, 450, 150)\n\n        &#39; Create coordinates of rectangle for source image.\n        Dim x As Single = 50.0F\n        Dim y As Single = 50.0F\n        Dim width As Single = 150.0F\n        Dim height As Single = 150.0F\n        Dim units As GraphicsUnit = GraphicsUnit.Pixel\n\n        &#39; Draw image to screen.\n        e.Graphics.DrawImage(newImage, destRect, x, y, width, height, _\n        units)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Rectangle_System_Int32_System_Int32_System_Int32_System_Int32_System_Drawing_GraphicsUnit_System_Drawing_Imaging_ImageAttributes_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcWidth</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcHeight</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the units of measure used to determine the source rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a> that specifies recoloring and gamma information for the <code>image</code> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>srcX</code>, <code>srcY</code>, <code>srcWidth</code>, and <code>srcHeight</code> parameters specify a rectangular portion, of the <code>image</code> object to draw. The rectangle is relative to the upper-left corner of the source image. This portion is scaled to fit inside the rectangle specified by the <code>destRect</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates a destination rectangle in which to draw the image.  </p>\n</li>\n<li><p>Creates the coordinates of a source rectangle from which to extract a portion of the image.  </p>\n</li>\n<li><p>Sets the unit of measure of the source rectangle to pixels.  </p>\n</li>\n<li><p>Draws the original image to the screen.  </p>\n</li>\n<li><p>Creates an additional rectangle in which to draw an adjusted image.  </p>\n</li>\n<li><p>Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.  </p>\n</li>\n<li><p>Draws the adjusted image to the screen.  </p>\n<p>For the original, unadjusted destination rectangle, the position locates the image on the screen, and the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#49\">   void DrawImageRect4IntAtrrib( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create rectangle for displaying original image.\n      Rectangle destRect1 = Rectangle(100,25,450,150);\n\n      // Create coordinates of rectangle for source image.\n      int x = 50;\n      int y = 50;\n      int width = 150;\n      int height = 150;\n      GraphicsUnit units = GraphicsUnit::Pixel;\n\n      // Draw original image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destRect1, x, y, width, height, units );\n\n      // Create rectangle for adjusted image.\n      Rectangle destRect2 = Rectangle(100,175,450,150);\n\n      // Create image attributes and set large gamma.\n      ImageAttributes^ imageAttr = gcnew ImageAttributes;\n      imageAttr-&gt;SetGamma( 4.0F );\n\n      // Draw adjusted image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destRect2, x, y, width, height, units, imageAttr );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#49\">        private void DrawImageRect4IntAtrrib(PaintEventArgs e)\n        {\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create rectangle for displaying original image.\n            Rectangle destRect1 = new Rectangle(100, 25, 450, 150);\n                     \n            // Create coordinates of rectangle for source image.\n            int x = 50;\n            int y = 50;\n            int width = 150;\n            int height = 150;\n            GraphicsUnit units = GraphicsUnit.Pixel;\n                     \n            // Draw original image to screen.\n            e.Graphics.DrawImage(newImage, destRect1, x, y, width, height, units);\n                     \n            // Create rectangle for adjusted image.\n            Rectangle destRect2 = new Rectangle(100, 175, 450, 150);\n                     \n            // Create image attributes and set large gamma.\n            ImageAttributes imageAttr = new ImageAttributes();\n            imageAttr.SetGamma(4.0F);\n                     \n            // Draw adjusted image to screen.\n            e.Graphics.DrawImage(newImage, destRect2, x, y, width, height, units, imageAttr);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#49\">    Private Sub DrawImageRect4IntAtrrib(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create rectangle for displaying original image.\n        Dim destRect1 As New Rectangle(100, 25, 450, 150)\n\n        &#39; Create coordinates of rectangle for source image.\n        Dim x As Integer = 50\n        Dim y As Integer = 50\n        Dim width As Integer = 150\n        Dim height As Integer = 150\n        Dim units As GraphicsUnit = GraphicsUnit.Pixel\n\n        &#39; Draw original image to screen.\n        e.Graphics.DrawImage(newImage, destRect1, x, y, width, height, _\n        units)\n\n        &#39; Create rectangle for adjusted image.\n        Dim destRect2 As New Rectangle(100, 175, 450, 150)\n\n        &#39; Create image attributes and set large gamma.\n        Dim imageAttr As New ImageAttributes\n        imageAttr.SetGamma(4.0F)\n\n        &#39; Draw adjusted image to screen.\n        e.Graphics.DrawImage(newImage, destRect2, x, y, width, height, _\n        units, imageAttr)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Rectangle_System_Single_System_Single_System_Single_System_Single_System_Drawing_GraphicsUnit_System_Drawing_Imaging_ImageAttributes_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcWidth</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcHeight</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the units of measure used to determine the source rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageAttrs</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a> that specifies recoloring and gamma information for the <code>image</code> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>srcX</code>, <code>srcY</code>, <code>srcWidth</code>, and <code>srcHeight</code> parameters specify a rectangular portion, of the <code>image</code> object to draw. The rectangle is relative to the upper-left corner of the source image. This portion is scaled to fit inside the rectangle specified by the <code>destRect</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates a destination rectangle in which to draw the image.  </p>\n</li>\n<li><p>Creates the coordinates of a source rectangle from which to extract a portion of the image.  </p>\n</li>\n<li><p>Sets the unit of measure of the source rectangle to pixels.  </p>\n</li>\n<li><p>Draws the original image to the screen.  </p>\n</li>\n<li><p>Creates an additional rectangle in which to draw an adjusted image.  </p>\n</li>\n<li><p>Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.  </p>\n</li>\n<li><p>Draws the adjusted image to the screen.  </p>\n<p>For the original, unadjusted destination rectangle, the position locates the image on the screen, and the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#53\">private:\n   void DrawImageRect4FloatAttrib( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create rectangle for displaying original image.\n      Rectangle destRect1 = Rectangle(100,25,450,150);\n\n      // Create coordinates of rectangle for source image.\n      float x = 50.0F;\n      float y = 50.0F;\n      float width = 150.0F;\n      float height = 150.0F;\n      GraphicsUnit units = GraphicsUnit::Pixel;\n\n      // Draw original image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destRect1, x, y, width, height, units );\n\n      // Create rectangle for adjusted image.\n      Rectangle destRect2 = Rectangle(100,175,450,150);\n\n      // Create image attributes and set large gamma.\n      ImageAttributes^ imageAttr = gcnew ImageAttributes;\n      imageAttr-&gt;SetGamma( 4.0F );\n\n      // Draw adjusted image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destRect2, x, y, width, height, units, imageAttr );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#53\">        private void DrawImageRect4FloatAttrib(PaintEventArgs e)\n        {\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create rectangle for displaying original image.\n            Rectangle destRect1 = new Rectangle(100, 25, 450, 150);\n                     \n            // Create coordinates of rectangle for source image.\n            float x = 50.0F;\n            float y = 50.0F;\n            float width = 150.0F;\n            float height = 150.0F;\n            GraphicsUnit units = GraphicsUnit.Pixel;\n                     \n            // Draw original image to screen.\n            e.Graphics.DrawImage(newImage, destRect1, x, y, width, height, units);\n                     \n            // Create rectangle for adjusted image.\n            Rectangle destRect2 = new Rectangle(100, 175, 450, 150);\n                     \n            // Create image attributes and set large gamma.\n            ImageAttributes imageAttr = new ImageAttributes();\n            imageAttr.SetGamma(4.0F);\n                     \n            // Draw adjusted image to screen.\n            e.Graphics.DrawImage(newImage, destRect2, x, y, width, height, units, imageAttr);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#53\">    Private Sub DrawImageRect4FloatAttrib(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create rectangle for displaying original image.\n        Dim destRect1 As New Rectangle(100, 25, 450, 150)\n\n        &#39; Create coordinates of rectangle for source image.\n        Dim x As Single = 50.0F\n        Dim y As Single = 50.0F\n        Dim width As Single = 150.0F\n        Dim height As Single = 150.0F\n        Dim units As GraphicsUnit = GraphicsUnit.Pixel\n\n        &#39; Draw original image to screen.\n        e.Graphics.DrawImage(newImage, destRect1, x, y, width, _\n        height, units)\n\n        &#39; Create rectangle for adjusted image.\n        Dim destRect2 As New Rectangle(100, 175, 450, 150)\n\n        &#39; Create image attributes and set large gamma.\n        Dim imageAttr As New ImageAttributes\n        imageAttr.SetGamma(4.0F)\n\n        &#39; Draw adjusted image to screen.\n        e.Graphics.DrawImage(newImage, destRect2, x, y, width, height, _\n        units, imageAttr)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Rectangle_System_Int32_System_Int32_System_Int32_System_Int32_System_Drawing_GraphicsUnit_System_Drawing_Imaging_ImageAttributes_System_Drawing_Graphics_DrawImageAbort_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcWidth</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcHeight</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the units of measure used to determine the source rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a> that specifies recoloring and gamma information for <code>image</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the DrawImage method according to application-determined criteria.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>srcX</code>, <code>srcY</code>, <code>srcWidth</code>, and <code>srcHeight</code> parameters specify a rectangular portion, of the <code>image</code> object to draw. The rectangle is relative to the upper-left corner of the source image. This portion is scaled to fit inside the rectangle specified by the <code>destRect</code> object.  </p>\n<p> This overload with the <code>callback</code> parameter provides the means to stop the drawing of an image once it starts according to criteria determined by the application. For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code first defines a callback method for the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> delegate; the definition is simplistic and merely tests to see whether the DrawImage method calls it with a null <code>callBackData</code> parameter. The main body of the example performs the following actions:  </p>\n<ul>\n<li><p>Creates an instance of the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> callback method.  </p>\n</li>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates points that define a destination rectangle in which to draw the image.  </p>\n</li>\n<li><p>Creates a source rectangle to select the portion of the image to draw.  </p>\n</li>\n<li><p>Sets the graphics drawing unit to pixel.  </p>\n</li>\n<li><p>Draws the original image to the screen.  </p>\n</li>\n<li><p>Creates an additional destination rectangle in which to draw an adjusted image.  </p>\n</li>\n<li><p>Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.  </p>\n</li>\n<li><p>Draws the adjusted image to the screen.  </p>\n<p>For the original, unadjusted destination rectangle, the position locates the image on the screen, and the size of the source rectangle and the size and shape of the destination rectangle determines the scaling of the drawn image.  </p>\n<p>Because this example uses an overload that does not pass a <code>callBackData</code> parameter, the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> callback returns <code>true</code>, which causes the DrawImage method to end, and the exception-handling code included in the example prints out the exception text rather than drawing the image.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#50\">   // Define DrawImageAbort callback method.\nprivate:\n   bool DrawImageCallback5( IntPtr callBackData )\n   {\n      // Test for call that passes callBackData parameter.\n      if ( callBackData == IntPtr::Zero )\n      {\n         // If no callBackData passed, abort DrawImage method.\n         return true;\n      }\n      else\n      {\n         // If callBackData passed, continue DrawImage method.\n         return false;\n      }\n   }\n\nprivate:\n   void DrawImageRect4IntAtrribAbort( PaintEventArgs^ e )\n   {\n      // Create callback method.\n      Graphics::DrawImageAbort^ imageCallback = gcnew Graphics::DrawImageAbort( this, &amp;Form1::DrawImageCallback5 );\n\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create rectangle for displaying original image.\n      Rectangle destRect1 = Rectangle(100,25,450,150);\n\n      // Create coordinates of rectangle for source image.\n      int x = 50;\n      int y = 50;\n      int width = 150;\n      int height = 150;\n      GraphicsUnit units = GraphicsUnit::Pixel;\n\n      // Draw original image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destRect1, x, y, width, height, units );\n\n      // Create rectangle for adjusted image.\n      Rectangle destRect2 = Rectangle(100,175,450,150);\n\n      // Create image attributes and set large gamma.\n      ImageAttributes^ imageAttr = gcnew ImageAttributes;\n      imageAttr-&gt;SetGamma( 4.0F );\n      try\n      {\n         // Draw adjusted image to screen.\n         e-&gt;Graphics-&gt;DrawImage( newImage, destRect2, x, y, width, height, units, imageAttr, imageCallback );\n      }\n      catch ( Exception^ ex ) \n      {\n         e-&gt;Graphics-&gt;DrawString( ex-&gt;ToString(), gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), Brushes::Black, PointF(0,0) );\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#50\">\n        // Define DrawImageAbort callback method.\n        private bool DrawImageCallback5(IntPtr callBackData)\n        {\n                     \n            // Test for call that passes callBackData parameter.\n            if(callBackData==IntPtr.Zero)\n            {\n                     \n                // If no callBackData passed, abort DrawImage method.\n                return true;\n            }\n            else\n            {\n                     \n                // If callBackData passed, continue DrawImage method.\n                return false;\n            }\n        }\n        private void DrawImageRect4IntAtrribAbort(PaintEventArgs e)\n        {\n                     \n            // Create callback method.\n            Graphics.DrawImageAbort imageCallback\n                = new Graphics.DrawImageAbort(DrawImageCallback5);\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create rectangle for displaying original image.\n            Rectangle destRect1 = new Rectangle(100, 25, 450, 150);\n                     \n            // Create coordinates of rectangle for source image.\n            int x = 50;\n            int y = 50;\n            int width = 150;\n            int height = 150;\n            GraphicsUnit units = GraphicsUnit.Pixel;\n                     \n            // Draw original image to screen.\n            e.Graphics.DrawImage(newImage, destRect1, x, y, width, height, units);\n                     \n            // Create rectangle for adjusted image.\n            Rectangle destRect2 = new Rectangle(100, 175, 450, 150);\n                     \n            // Create image attributes and set large gamma.\n            ImageAttributes imageAttr = new ImageAttributes();\n            imageAttr.SetGamma(4.0F);\n            try\n            {\n                checked\n                {\n                     \n                    // Draw adjusted image to screen.\n                    e.Graphics.DrawImage(\n                        newImage,\n                        destRect2,\n                        x, y,\n                        width, height,\n                        units,\n                        imageAttr,\n                        imageCallback);\n                }\n            }\n            catch (Exception ex)\n            {\n                e.Graphics.DrawString(\n                    ex.ToString(),\n                    new Font(&quot;Arial&quot;, 8),\n                    Brushes.Black,\n                    new PointF(0, 0));\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#50\">    Private Function DrawImageCallback5(ByVal callBackData As IntPtr) As Boolean\n\n        &#39; Test for call that passes callBackData parameter.\n        If callBackData.Equals(IntPtr.Zero) Then\n\n            &#39; If no callBackData passed, abort DrawImage method.\n            Return True\n        Else\n\n            &#39; If callBackData passed, continue DrawImage method.\n            Return False\n        End If\n    End Function\n    Private Sub DrawImageRect4IntAtrribAbort(ByVal e As PaintEventArgs)\n\n        &#39; Create callback method.\n        Dim imageCallback As New _\n        Graphics.DrawImageAbort(AddressOf DrawImageCallback5)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create rectangle for displaying original image.\n        Dim destRect1 As New Rectangle(100, 25, 450, 150)\n\n        &#39; Create coordinates of rectangle for source image.\n        Dim x As Integer = 50\n        Dim y As Integer = 50\n        Dim width As Integer = 150\n        Dim height As Integer = 150\n        Dim units As GraphicsUnit = GraphicsUnit.Pixel\n\n        &#39; Draw original image to screen.\n        e.Graphics.DrawImage(newImage, destRect1, x, y, width, height, _\n        units)\n\n        &#39; Create rectangle for adjusted image.\n        Dim destRect2 As New Rectangle(100, 175, 450, 150)\n\n        &#39; Create image attributes and set large gamma.\n        Dim imageAttr As New ImageAttributes\n        imageAttr.SetGamma(4.0F)\n        Try\n\n            &#39; Draw adjusted image to screen.\n            e.Graphics.DrawImage(newImage, destRect2, x, y, width, _\n            height, units, imageAttr, imageCallback)\n        Catch ex As Exception\n            e.Graphics.DrawString(ex.ToString(), New Font(&quot;Arial&quot;, 8), _\n            Brushes.Black, New PointF(0, 0))\n        End Try\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Rectangle_System_Single_System_Single_System_Single_System_Single_System_Drawing_GraphicsUnit_System_Drawing_Imaging_ImageAttributes_System_Drawing_Graphics_DrawImageAbort_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs, System.Drawing.Graphics.DrawImageAbort callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcWidth</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcHeight</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the units of measure used to determine the source rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageAttrs</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a> that specifies recoloring and gamma information for the <code>image</code> object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the DrawImage method according to application-determined criteria.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>srcX</code>, <code>srcY</code>, <code>srcWidth</code>, and <code>srcHeight</code> parameters specify a rectangular portion, of the <code>image</code> object to draw. The rectangle is relative to the upper-left corner of the source image. This portion is scaled to fit inside the rectangle specified by the <code>destRect</code> parameter.  </p>\n<p> This overload with the <code>callback</code> parameter provides the means to stop the drawing of an image once it starts according to criteria determined by the application. For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code first defines a callback method for the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> delegate; the definition is simplistic and merely tests to see whether the DrawImage method calls it with a null <code>callBackData</code> parameter. The main body of the example performs the following actions:  </p>\n<ul>\n<li><p>Creates an instance of the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> callback method.  </p>\n</li>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates points that define a destination rectangle in which to draw the image.  </p>\n</li>\n<li><p>Creates a source rectangle to select the portion of the image to draw.  </p>\n</li>\n<li><p>Sets the graphics drawing unit to pixel.  </p>\n</li>\n<li><p>Draws the original image to the screen.  </p>\n</li>\n<li><p>Creates an additional destination rectangle in which to draw an adjusted image.  </p>\n</li>\n<li><p>Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.  </p>\n</li>\n<li><p>Draws the adjusted image to the screen.  </p>\n<p>For the original, unadjusted destination rectangle, the position locates the image on the screen, and the size of the source rectangle and the size and shape of the destination rectangle determines the scaling of the drawn image.  </p>\n<p>Because this example uses an overload that does not pass a <code>callBackData</code> parameter, the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> callback returns <code>true</code>, which causes the DrawImage method to end, and the exception-handling code included in the example prints out the exception text rather than drawing the image.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#54\">   // Define DrawImageAbort callback method.\nprivate:\n   bool DrawImageCallback7( IntPtr callBackData )\n   {\n      // Test for call that passes callBackData parameter.\n      if ( callBackData == IntPtr::Zero )\n      {\n         // If no callBackData passed, abort DrawImage method.\n         return true;\n      }\n      else\n      {\n         // If callBackData passed, continue DrawImage method.\n         return false;\n      }\n   }\n\nprivate:\n   void DrawImageRect4FloatAttribAbort( PaintEventArgs^ e )\n   {\n      // Create callback method.\n      Graphics::DrawImageAbort^ imageCallback = gcnew Graphics::DrawImageAbort( this, &amp;Form1::DrawImageCallback7 );\n\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create rectangle for displaying original image.\n      Rectangle destRect1 = Rectangle(100,25,450,150);\n\n      // Create coordinates of rectangle for source image.\n      float x = 50.0F;\n      float y = 50.0F;\n      float width = 150.0F;\n      float height = 150.0F;\n      GraphicsUnit units = GraphicsUnit::Pixel;\n\n      // Draw original image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destRect1, x, y, width, height, units );\n\n      // Create rectangle for adjusted image.\n      Rectangle destRect2 = Rectangle(100,175,450,150);\n\n      // Create image attributes and set large gamma.\n      ImageAttributes^ imageAttr = gcnew ImageAttributes;\n      imageAttr-&gt;SetGamma( 4.0F );\n      try\n      {\n         // Draw adjusted image to screen.\n         e-&gt;Graphics-&gt;DrawImage( newImage, destRect2, x, y, width, height, units, imageAttr, imageCallback );\n      }\n      catch ( Exception^ ex ) \n      {\n         e-&gt;Graphics-&gt;DrawString( ex-&gt;ToString(), gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), Brushes::Black, PointF(0,0) );\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#54\">\n        // Define DrawImageAbort callback method.\n        private bool DrawImageCallback7(IntPtr callBackData)\n        {\n                     \n            // Test for call that passes callBackData parameter.\n            if(callBackData==IntPtr.Zero)\n            {\n                     \n                // If no callBackData passed, abort DrawImage method.\n                return true;\n            }\n            else\n            {\n                     \n                // If callBackData passed, continue DrawImage method.\n                return false;\n            }\n        }\n        private void DrawImageRect4FloatAttribAbort(PaintEventArgs e)\n        {\n                     \n            // Create callback method.\n            Graphics.DrawImageAbort imageCallback\n                = new Graphics.DrawImageAbort(DrawImageCallback7);\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create rectangle for displaying original image.\n            Rectangle destRect1 = new Rectangle(100, 25, 450, 150);\n                     \n            // Create coordinates of rectangle for source image.\n            float x = 50.0F;\n            float y = 50.0F;\n            float width = 150.0F;\n            float height = 150.0F;\n            GraphicsUnit units = GraphicsUnit.Pixel;\n                     \n            // Draw original image to screen.\n            e.Graphics.DrawImage(newImage, destRect1, x, y, width, height, units);\n                     \n            // Create rectangle for adjusted image.\n            Rectangle destRect2 = new Rectangle(100, 175, 450, 150);\n                     \n            // Create image attributes and set large gamma.\n            ImageAttributes imageAttr = new ImageAttributes();\n            imageAttr.SetGamma(4.0F);\n            try\n            {\n                checked\n                {\n                     \n                    // Draw adjusted image to screen.\n                    e.Graphics.DrawImage(\n                        newImage,\n                        destRect2,\n                        x, y,\n                        width, height,\n                        units,\n                        imageAttr,\n                        imageCallback);\n                }\n            }\n            catch (Exception ex)\n            {\n                e.Graphics.DrawString(\n                    ex.ToString(),\n                    new Font(&quot;Arial&quot;, 8),\n                    Brushes.Black,\n                    new PointF(0, 0));\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#54\">    Private Function DrawImageCallback7(ByVal callBackData As IntPtr) As Boolean\n\n        &#39; Test for call that passes callBackData parameter.\n        If callBackData.Equals(IntPtr.Zero) Then\n\n            &#39; If no callBackData passed, abort DrawImage method.\n            Return True\n        Else\n\n            &#39; If callBackData passed, continue DrawImage method.\n            Return False\n        End If\n    End Function\n    Private Sub DrawImageRect4FloatAttribAbort(ByVal e As PaintEventArgs)\n\n        &#39; Create callback method.\n        Dim imageCallback As New _\n        Graphics.DrawImageAbort(AddressOf DrawImageCallback7)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create rectangle for displaying original image.\n        Dim destRect1 As New Rectangle(100, 25, 450, 150)\n\n        &#39; Create coordinates of rectangle for source image.\n        Dim x As Single = 50.0F\n        Dim y As Single = 50.0F\n        Dim width As Single = 150.0F\n        Dim height As Single = 150.0F\n        Dim units As GraphicsUnit = GraphicsUnit.Pixel\n\n        &#39; Draw original image to screen.\n        e.Graphics.DrawImage(newImage, destRect1, x, y, width, _\n        height, units)\n\n        &#39; Create rectangle for adjusted image.\n        Dim destRect2 As New Rectangle(100, 175, 450, 150)\n\n        &#39; Create image attributes and set large gamma.\n        Dim imageAttr As New ImageAttributes\n        imageAttr.SetGamma(4.0F)\n        Try\n\n            &#39; Draw adjusted image to screen.\n            e.Graphics.DrawImage(newImage, destRect2, x, y, width, _\n            height, units, imageAttr, imageCallback)\n        Catch ex As Exception\n            e.Graphics.DrawString(ex.ToString(), New Font(&quot;Arial&quot;, 8), _\n            Brushes.Black, New PointF(0, 0))\n        End Try\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Rectangle_System_Int32_System_Int32_System_Int32_System_Int32_System_Drawing_GraphicsUnit_System_Drawing_Imaging_ImageAttributes_System_Drawing_Graphics_DrawImageAbort_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs, System.Drawing.Graphics.DrawImageAbort callback, IntPtr callbackData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcWidth</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcHeight</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the units of measure used to determine the source rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageAttrs</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a> that specifies recoloring and gamma information for the <code>image</code> object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the DrawImage method according to application-determined criteria.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Value specifying additional data for the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> delegate to use when checking whether to stop execution of the <code>DrawImage</code> method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>srcX</code>, <code>srcY</code>, <code>srcWidth</code>, and <code>srcHeight</code> parameters specify a rectangular portion, of the <code>image</code> object to draw. The rectangle is relative to the upper-left corner of the source image. This portion is scaled to fit inside the rectangle specified by the <code>destRect</code> parameter.  </p>\n<p> This overload with the <code>callback</code> and <code>callbackData</code> parameters provides the means to stop the drawing of an image once it starts according to criteria and data determined by the application. For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code first defines a callback method for the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> delegate; the definition is simplistic and merely tests to see whether the DrawImage method calls it with a null <code>callBackData</code> parameter. The main body of the example performs the following actions:  </p>\n<ul>\n<li><p>Creates an instance of the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> callback method.  </p>\n</li>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates points that define a destination rectangle in which to draw the image.  </p>\n</li>\n<li><p>Creates a source rectangle to select the portion of the image to draw.  </p>\n</li>\n<li><p>Sets the graphics drawing unit to pixel.  </p>\n</li>\n<li><p>Draws the original image to the screen.  </p>\n</li>\n<li><p>Creates an additional destination rectangle in which to draw an adjusted image.  </p>\n</li>\n<li><p>Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.  </p>\n</li>\n<li><p>Draws the adjusted image to the screen.  </p>\n<p>For the original, unadjusted destination rectangle, the position locates the image on the screen, and the size of the source rectangle and the size and shape of the destination rectangle determines the scaling of the drawn image.  </p>\n<p>Because this example uses an overload that passes a <code>callBackData</code> parameter, the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> callback returns <code>false</code>, which causes the DrawImage method to continue, and the example draws the adjusted image to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples#51\">   // Define DrawImageAbort callback method.\nprivate:\n   bool DrawImageCallback6( IntPtr callBackData )\n   {\n      // Test for call that passes callBackData parameter.\n      if ( callBackData == IntPtr::Zero )\n      {\n         // If no callBackData passed, abort DrawImage method.\n         return true;\n      }\n      else\n      {\n         // If callBackData passed, continue DrawImage method.\n         return false;\n      }\n   }\n\nprivate:\n   void DrawImageRect4IntAtrribAbortData( PaintEventArgs^ e )\n   {\n      // Create callback method.\n      Graphics::DrawImageAbort^ imageCallback = gcnew Graphics::DrawImageAbort( this, &amp;Form1::DrawImageCallback6 );\n      IntPtr imageCallbackData = IntPtr(1);\n\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create rectangle for displaying original image.\n      Rectangle destRect1 = Rectangle(100,25,450,150);\n\n      // Create coordinates of rectangle for source image.\n      int x = 50;\n      int y = 50;\n      int width = 150;\n      int height = 150;\n      GraphicsUnit units = GraphicsUnit::Pixel;\n\n      // Draw original image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destRect1, x, y, width, height, units );\n\n      // Create rectangle for adjusted image.\n      Rectangle destRect2 = Rectangle(100,175,450,150);\n\n      // Create image attributes and set large gamma.\n      ImageAttributes^ imageAttr = gcnew ImageAttributes;\n      imageAttr-&gt;SetGamma( 4.0F );\n      try\n      {\n         // Draw adjusted image to screen.\n         e-&gt;Graphics-&gt;DrawImage( newImage, destRect2, x, y, width, height, units, imageAttr, imageCallback, imageCallbackData );\n      }\n      catch ( Exception^ ex ) \n      {\n         e-&gt;Graphics-&gt;DrawString( ex-&gt;ToString(), gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), Brushes::Black, PointF(0,0) );\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples#51\">\n        // Define DrawImageAbort callback method.\n        private bool DrawImageCallback6(IntPtr callBackData)\n        {\n                     \n            // Test for call that passes callBackData parameter.\n            if(callBackData==IntPtr.Zero)\n            {\n                     \n                // If no callBackData passed, abort DrawImage method.\n                return true;\n            }\n            else\n            {\n                     \n                // If callBackData passed, continue DrawImage method.\n                return false;\n            }\n        }\n        private void DrawImageRect4IntAtrribAbortData(PaintEventArgs e)\n        {\n                     \n            // Create callback method.\n            Graphics.DrawImageAbort imageCallback\n                = new Graphics.DrawImageAbort(DrawImageCallback6);\n            IntPtr imageCallbackData = new IntPtr(1);\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create rectangle for displaying original image.\n            Rectangle destRect1 = new Rectangle(100, 25, 450, 150);\n                     \n            // Create coordinates of rectangle for source image.\n            int x = 50;\n            int y = 50;\n            int width = 150;\n            int height = 150;\n            GraphicsUnit units = GraphicsUnit.Pixel;\n                     \n            // Draw original image to screen.\n            e.Graphics.DrawImage(newImage, destRect1, x, y, width, height, units);\n                     \n            // Create rectangle for adjusted image.\n            Rectangle destRect2 = new Rectangle(100, 175, 450, 150);\n                     \n            // Create image attributes and set large gamma.\n            ImageAttributes imageAttr = new ImageAttributes();\n            imageAttr.SetGamma(4.0F);\n            try\n            {\n                checked\n                {\n                     \n                    // Draw adjusted image to screen.\n                    e.Graphics.DrawImage(\n                        newImage,\n                        destRect2,\n                        x, y,\n                        width, height,\n                        units,\n                        imageAttr,\n                        imageCallback,\n                        imageCallbackData);\n                }\n            }\n            catch (Exception ex)\n            {\n                e.Graphics.DrawString(\n                    ex.ToString(),\n                    new Font(&quot;Arial&quot;, 8),\n                    Brushes.Black,\n                    new PointF(0, 0));\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples#51\">    Private Function DrawImageCallback6(ByVal callBackData As IntPtr) As Boolean\n\n        &#39; Test for call that passes callBackData parameter.\n        If callBackData.Equals(IntPtr.Zero) Then\n\n            &#39; If no callBackData passed, abort DrawImage method.\n            Return True\n        Else\n\n            &#39; If callBackData passed, continue DrawImage method.\n            Return False\n        End If\n    End Function\n    Private Sub DrawImageRect4IntAtrribAbortData(ByVal e As PaintEventArgs)\n\n        &#39; Create callback method.\n        Dim imageCallback As New _\n        Graphics.DrawImageAbort(AddressOf DrawImageCallback6)\n        Dim imageCallbackData As New IntPtr(1)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create rectangle for displaying original image.\n        Dim destRect1 As New Rectangle(100, 25, 450, 150)\n\n        &#39; Create coordinates of rectangle for source image.\n        Dim x As Integer = 50\n        Dim y As Integer = 50\n        Dim width As Integer = 150\n        Dim height As Integer = 150\n        Dim units As GraphicsUnit = GraphicsUnit.Pixel\n\n        &#39; Draw original image to screen.\n        e.Graphics.DrawImage(newImage, destRect1, x, y, width, height, _\n        units)\n\n        &#39; Create rectangle for adjusted image.\n        Dim destRect2 As New Rectangle(100, 175, 450, 150)\n\n        &#39; Create image attributes and set large gamma.\n        Dim imageAttr As New ImageAttributes\n        imageAttr.SetGamma(4.0F)\n        Try\n\n            &#39; Draw adjusted image to screen.\n            e.Graphics.DrawImage(newImage, destRect2, x, y, width, _\n            height, units, imageAttr, imageCallback, imageCallbackData)\n        Catch ex As Exception\n            e.Graphics.DrawString(ex.ToString(), New Font(&quot;Arial&quot;, 8), _\n            Brushes.Black, New PointF(0, 0))\n        End Try\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImage_System_Drawing_Image_System_Drawing_Rectangle_System_Single_System_Single_System_Single_System_Single_System_Drawing_GraphicsUnit_System_Drawing_Imaging_ImageAttributes_System_Drawing_Graphics_DrawImageAbort_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified portion of the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> at the specified location and with the specified size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs, System.Drawing.Graphics.DrawImageAbort callback, IntPtr callbackData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcWidth</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcHeight</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the portion of the source image to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the units of measure used to determine the source rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageAttrs</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a> that specifies recoloring and gamma information for the <code>image</code> object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the DrawImage method according to application-determined criteria.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Value specifying additional data for the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> delegate to use when checking whether to stop execution of the <code>DrawImage</code> method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>srcX</code>, <code>srcY</code>, <code>srcWidth</code>, and <code>srcHeight</code> parameters specify a rectangular portion, of the <code>image</code> object to draw. The rectangle is relative to the upper-left corner of the source image. This portion is scaled to fit inside the rectangle specified by the <code>destRect</code> parameter.  </p>\n<p> This overload with the <code>callback</code> and <code>callbackData</code> parameters provides the means to stop the drawing of an image once it starts according to criteria and data determined by the application. For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code first defines a callback method for the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> delegate; the definition is simplistic and merely tests to see whether the DrawImage method calls it with a null <code>callBackData</code> parameter. The main body of the example performs the following actions:  </p>\n<ul>\n<li><p>Creates an instance of the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> callback method.  </p>\n</li>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates points that define a destination rectangle in which to draw the image.  </p>\n</li>\n<li><p>Creates a source rectangle to select the portion of the image to draw.  </p>\n</li>\n<li><p>Sets the graphics drawing unit to pixel.  </p>\n</li>\n<li><p>Draws the original image to the screen.  </p>\n</li>\n<li><p>Creates an additional destination rectangle in which to draw an adjusted image.  </p>\n</li>\n<li><p>Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.  </p>\n</li>\n<li><p>Draws the adjusted image to the screen.  </p>\n<p>For the original, unadjusted destination rectangle, the position locates the image on the screen, and the size of the source rectangle and the size and shape of the destination rectangle determines the scaling of the drawn image.  </p>\n<p>Because this example uses an overload that passes a <code>callBackData</code> parameter, the <a class=\"xref\" href=\"system.drawing.graphics.drawimageabort\" data-linktype=\"relative-path\">Graphics+DrawImageAbort</a> callback returns <code>false</code>, which causes the DrawImage method to continue, and the example draws the adjusted image to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#55\">   // Define DrawImageAbort callback method.\nprivate:\n   bool DrawImageCallback8( IntPtr callBackData )\n   {\n      // Test for call that passes callBackData parameter.\n      if ( callBackData == IntPtr::Zero )\n      {\n         \n         // If no callBackData passed, abort DrawImage method.\n         return true;\n      }\n      else\n      {\n         \n         // If callBackData passed, continue DrawImage method.\n         return false;\n      }\n   }\n\npublic:\n   void DrawImageRect4FloatAttribAbortData( PaintEventArgs^ e )\n   {\n      // Create callback method.\n      Graphics::DrawImageAbort^ imageCallback = gcnew Graphics::DrawImageAbort( this, &amp;Form1::DrawImageCallback8 );\n      IntPtr imageCallbackData = IntPtr(1);\n\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create rectangle for displaying original image.\n      Rectangle destRect1 = Rectangle(100,25,450,150);\n\n      // Create coordinates of rectangle for source image.\n      float x = 50.0F;\n      float y = 50.0F;\n      float width = 150.0F;\n      float height = 150.0F;\n      GraphicsUnit units = GraphicsUnit::Pixel;\n\n      // Draw original image to screen.\n      e-&gt;Graphics-&gt;DrawImage( newImage, destRect1, x, y, width, height, units );\n\n      // Create rectangle for adjusted image.\n      Rectangle destRect2 = Rectangle(100,175,450,150);\n\n      // Create image attributes and set large gamma.\n      ImageAttributes^ imageAttr = gcnew ImageAttributes;\n      imageAttr-&gt;SetGamma( 4.0F );\n\n      // Draw adjusted image to screen.\n      try\n      {\n         // Draw adjusted image to screen.\n         e-&gt;Graphics-&gt;DrawImage( newImage, destRect2, x, y, width, height, units, imageAttr, imageCallback, imageCallbackData );\n      }\n      catch ( Exception^ ex ) \n      {\n         e-&gt;Graphics-&gt;DrawString( ex-&gt;ToString(), gcnew System::Drawing::Font( &quot;Arial&quot;,8 ), Brushes::Black, PointF(0,0) );\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#55\">\n        // Define DrawImageAbort callback method.\n        private bool DrawImageCallback8(IntPtr callBackData)\n        {\n                     \n            // Test for call that passes callBackData parameter.\n            if(callBackData==IntPtr.Zero)\n            {\n                     \n                // If no callBackData passed, abort DrawImage method.\n                return true;\n            }\n            else\n            {\n                     \n                // If callBackData passed, continue DrawImage method.\n                return false;\n            }\n        }\n        public void DrawImageRect4FloatAttribAbortData(PaintEventArgs e)\n        {\n                     \n            // Create callback method.\n            Graphics.DrawImageAbort imageCallback\n                = new Graphics.DrawImageAbort(DrawImageCallback8);\n            IntPtr imageCallbackData = new IntPtr(1);\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create rectangle for displaying original image.\n            Rectangle destRect1 = new Rectangle(100, 25, 450, 150);\n                     \n            // Create coordinates of rectangle for source image.\n            float x = 50.0F;\n            float y = 50.0F;\n            float width = 150.0F;\n            float height = 150.0F;\n            GraphicsUnit units = GraphicsUnit.Pixel;\n                     \n            // Draw original image to screen.\n            e.Graphics.DrawImage(newImage, destRect1, x, y, width, height, units);\n                     \n            // Create rectangle for adjusted image.\n            Rectangle destRect2 = new Rectangle(100, 175, 450, 150);\n                     \n            // Create image attributes and set large gamma.\n            ImageAttributes imageAttr = new ImageAttributes();\n            imageAttr.SetGamma(4.0F);\n                     \n            // Draw adjusted image to screen.\n            try\n            {\n                checked\n                {\n                     \n                    // Draw adjusted image to screen.\n                    e.Graphics.DrawImage(\n                        newImage,\n                        destRect2,\n                        x, y,\n                        width, height,\n                        units,\n                        imageAttr,\n                        imageCallback,\n                        imageCallbackData);\n                }\n            }\n            catch (Exception ex)\n            {\n                e.Graphics.DrawString(\n                    ex.ToString(),\n                    new Font(&quot;Arial&quot;, 8),\n                    Brushes.Black,\n                    new PointF(0, 0));\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#55\">    Private Function DrawImageCallback8(ByVal callBackData As IntPtr) As Boolean\n\n        &#39; Test for call that passes callBackData parameter.\n        If callBackData.Equals(IntPtr.Zero) Then\n\n            &#39; If no callBackData passed, abort DrawImage method.\n            Return True\n        Else\n\n            &#39; If callBackData passed, continue DrawImage method.\n            Return False\n        End If\n    End Function\n    Public Sub DrawImageRect4FloatAttribAbortData(ByVal e As PaintEventArgs)\n\n        &#39; Create callback method.\n        Dim imageCallback As New _\n        Graphics.DrawImageAbort(AddressOf DrawImageCallback8)\n        Dim imageCallbackData As New IntPtr(1)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create rectangle for displaying original image.\n        Dim destRect1 As New Rectangle(100, 25, 450, 150)\n\n        &#39; Create coordinates of rectangle for source image.\n        Dim x As Single = 50.0F\n        Dim y As Single = 50.0F\n        Dim width As Single = 150.0F\n        Dim height As Single = 150.0F\n        Dim units As GraphicsUnit = GraphicsUnit.Pixel\n\n        &#39; Draw original image to screen.\n        e.Graphics.DrawImage(newImage, destRect1, x, y, width, _\n        height, units)\n\n        &#39; Create rectangle for adjusted image.\n        Dim destRect2 As New Rectangle(100, 175, 450, 150)\n\n        &#39; Create image attributes and set large gamma.\n        Dim imageAttr As New ImageAttributes\n        imageAttr.SetGamma(4.0F)\n\n        &#39; Draw adjusted image to screen.\n        Try\n\n            &#39; Draw adjusted image to screen.\n            e.Graphics.DrawImage(newImage, destRect2, x, y, width, _\n            height, units, imageAttr, imageCallback, imageCallbackData)\n        Catch ex As Exception\n            e.Graphics.DrawString(ex.ToString(), New Font(&quot;Arial&quot;, 8), _\n            Brushes.Black, New PointF(0, 0))\n        End Try\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImageUnscaled_System_Drawing_Image_System_Drawing_Point_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImageUnscaled_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImageUnscaled(Image,Point)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a specified image using its original physical size at a specified location.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImageUnscaled (System.Drawing.Image image, System.Drawing.Point point);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>point</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure that specifies the upper-left corner of the drawn image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> stores a value for pixel width and a value for horizontal resolution (dots per inch). The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution. For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches. Similar remarks apply to pixel height and physical height.  </p>\n<p> The DrawImageUnscaled method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device. For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch. If you call DrawImageUnscaled to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)*96 = 288.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an image from a JPEG file SampImag.jpg in the folder of the example.  </p>\n</li>\n<li><p>Creates a point at which to draw the upper-left corner of the image.  </p>\n</li>\n<li><p>Draws the entire image using its physical size.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#64\">public:\n   void DrawImageUnscaledPoint( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create point for upper-left corner of image.\n      Point ulCorner = Point(100,100);\n\n      // Draw image to screen.\n      e-&gt;Graphics-&gt;DrawImageUnscaled( newImage, ulCorner );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#64\">        public void DrawImageUnscaledPoint(PaintEventArgs e)\n        {\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create point for upper-left corner of image.\n            Point ulCorner = new Point(100, 100);\n                     \n            // Draw image to screen.\n            e.Graphics.DrawImageUnscaled(newImage, ulCorner);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#64\">    Public Sub DrawImageUnscaledPoint(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create point for upper-left corner of image.\n        Dim ulCorner As New Point(100, 100)\n\n        &#39; Draw image to screen.\n        e.Graphics.DrawImageUnscaled(newImage, ulCorner)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImageUnscaled_System_Drawing_Image_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImageUnscaled_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImageUnscaled(Image,Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a specified image using its original physical size at a specified location.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImageUnscaled (System.Drawing.Image image, System.Drawing.Rectangle rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that specifies the upper-left corner of the drawn image. The X and Y properties of the rectangle specify the upper-left corner. The Width and Height properties are ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> stores a value for pixel width and a value for horizontal resolution (dots per inch). The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution. For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches. Similar remarks apply to pixel height and physical height.  </p>\n<p> The DrawImageUnscaled method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device. For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch. If you call DrawImageUnscaled to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)*96 = 288.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImageUnscaled_System_Drawing_Image_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImageUnscaled_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImageUnscaled(Image,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified image using its original physical size at the location specified by a coordinate pair.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImageUnscaled (System.Drawing.Image image, int x, int y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the drawn image.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the drawn image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> stores a value for pixel width and a value for horizontal resolution (dots per inch). The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution. For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches. Similar remarks apply to pixel height and physical height.  </p>\n<p> The DrawImageUnscaled method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device. For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch. If you call DrawImageUnscaled to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)*96 = 288.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an image from a JPEG file, SampImag.jpg, in the folder of the example.  </p>\n</li>\n<li><p>Creates a point at which to draw the upper-left corner of the image.  </p>\n</li>\n<li><p>Draws the entire image using its physical size.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#65\">public:\n   void DrawImageUnscaledInt( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ newImage = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create coordinates for upper-left corner of image.\n      int x = 100;\n      int y = 100;\n\n      // Draw image to screen.\n      e-&gt;Graphics-&gt;DrawImageUnscaled( newImage, x, y );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#65\">        public void DrawImageUnscaledInt(PaintEventArgs e)\n        {\n                     \n            // Create image.\n            Image newImage = Image.FromFile(&quot;SampImag.jpg&quot;);\n                     \n            // Create coordinates for upper-left corner of image.\n            int x = 100;\n            int y = 100;\n                     \n            // Draw image to screen.\n            e.Graphics.DrawImageUnscaled(newImage, x, y);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#65\">    Public Sub DrawImageUnscaledInt(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim newImage As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create coordinates for upper-left corner of image.\n        Dim x As Integer = 100\n        Dim y As Integer = 100\n\n        &#39; Draw image to screen.\n        e.Graphics.DrawImageUnscaled(newImage, x, y)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImageUnscaled_System_Drawing_Image_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImageUnscaled_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImageUnscaled(Image,Int32,Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a specified image using its original physical size at a specified location.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImageUnscaled (System.Drawing.Image image, int x, int y, int width, int height);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the drawn image.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the drawn image.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Not used.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Not used.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> stores a value for pixel width and a value for horizontal resolution (dots per inch). The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution. For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches. Similar remarks apply to pixel height and physical height.  </p>\n<p> The DrawImageUnscaled method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device. For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch. If you call DrawImageUnscaled to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)*96 = 288.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawImageUnscaledAndClipped_System_Drawing_Image_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawImageUnscaledAndClipped_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawImageUnscaledAndClipped(Image,Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified image without scaling and clips it, if necessary, to fit in the specified rectangle.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawImageUnscaledAndClipped (System.Drawing.Image image, System.Drawing.Rectangle rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> in which to draw the image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the DrawImageUnscaledAndClipped method. To run this example, paste it into a Windows Form. Handle the form’s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event and call the <code>DrawImageUnscaled</code> method from the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event-handling method, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Drawing.MiscWhidbeySnippets#8\">    Private Sub DrawImageUnscaled(ByVal e As PaintEventArgs) \n        Dim filepath As String = &quot;C:\\Documents and Settings\\All Users\\Documents\\&quot; _\n            &amp; &quot;My Pictures\\Sample Pictures\\Water Lilies.jpg&quot;\n        Dim bitmap1 As New Bitmap(filepath)\n        e.Graphics.DrawImageUnscaledAndClipped(bitmap1, _\n            New Rectangle(10, 10, 250, 250))\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.MiscWhidbeySnippets#8\">        private void DrawImageUnscaled(PaintEventArgs e)\n        {\n            string filepath = @&quot;C:\\Documents and Settings\\All Users\\Documents\\&quot; + \n                @&quot;My Pictures\\Sample Pictures\\Water Lilies.jpg&quot;;\n            Bitmap bitmap1 = new Bitmap(filepath);\n            e.Graphics.DrawImageUnscaledAndClipped(bitmap1, new Rectangle(10,10,250,250));\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawLine_System_Drawing_Pen_System_Drawing_Point_System_Drawing_Point_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawLine(Pen,Point,Point)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a line connecting two <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawLine (System.Drawing.Pen pen, System.Drawing.Point pt1, System.Drawing.Point pt2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the line.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure that represents the first point to connect.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure that represents the second point to connect.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates points for the endpoints of the line.  </p>\n</li>\n<li><p>Draws the line to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#66\">public:\n   void DrawLinePoint( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create points that define line.\n      Point point1 = Point(100,100);\n      Point point2 = Point(500,100);\n\n      // Draw line to screen.\n      e-&gt;Graphics-&gt;DrawLine( blackPen, point1, point2 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#66\">        public void DrawLinePoint(PaintEventArgs e)\n        {\n                     \n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Create points that define line.\n            Point point1 = new Point(100, 100);\n            Point point2 = new Point(500, 100);\n                     \n            // Draw line to screen.\n            e.Graphics.DrawLine(blackPen, point1, point2);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#66\">    Public Sub DrawLinePoint(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create points that define line.\n        Dim point1 As New Point(100, 100)\n        Dim point2 As New Point(500, 100)\n\n        &#39; Draw line to screen.\n        e.Graphics.DrawLine(blackPen, point1, point2)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawLine_System_Drawing_Pen_System_Drawing_PointF_System_Drawing_PointF_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawLine(Pen,PointF,PointF)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a line connecting two <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawLine (System.Drawing.Pen pen, System.Drawing.PointF pt1, System.Drawing.PointF pt2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the line.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure that represents the first point to connect.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure that represents the second point to connect.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws a line connecting the two points specified by the <code>pt1</code> and p<code>2</code> parameters.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates points for the endpoints of the line.  </p>\n</li>\n<li><p>Draws the line to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#67\">public:\n   void DrawLinePointF( PaintEventArgs^ e )\n   {\n\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n      \n      // Create points that define line.\n      PointF point1 = PointF(100.0F,100.0F);\n      PointF point2 = PointF(500.0F,100.0F);\n\n      // Draw line to screen.\n      e-&gt;Graphics-&gt;DrawLine( blackPen, point1, point2 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#67\">        public void DrawLinePointF(PaintEventArgs e)\n        {\n                     \n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Create points that define line.\n            PointF point1 = new PointF(100.0F, 100.0F);\n            PointF point2 = new PointF(500.0F, 100.0F);\n                     \n            // Draw line to screen.\n            e.Graphics.DrawLine(blackPen, point1, point2);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#67\">    Public Sub DrawLinePointF(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create points that define line.\n        Dim point1 As New PointF(100.0F, 100.0F)\n        Dim point2 As New PointF(500.0F, 100.0F)\n\n        &#39; Draw line to screen.\n        e.Graphics.DrawLine(blackPen, point1, point2)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawLine_System_Drawing_Pen_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawLine(Pen,Int32,Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a line connecting the two points specified by the coordinate pairs.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawLine (System.Drawing.Pen pen, int x1, int y1, int x2, int y2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the line.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the first point.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the first point.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the second point.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the second point.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws a line connecting the two points specified by the <code>x1</code>, <code>y1</code>, <code>x2</code>, and <code>y2</code> parameters.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates the coordinates of the endpoints of the line.  </p>\n</li>\n<li><p>Draws the line to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#68\">public:\n   void DrawLineInt( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create coordinates of points that define line.\n      int x1 = 100;\n      int y1 = 100;\n      int x2 = 500;\n      int y2 = 100;\n\n      // Draw line to screen.\n      e-&gt;Graphics-&gt;DrawLine( blackPen, x1, y1, x2, y2 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#68\">        public void DrawLineInt(PaintEventArgs e)\n        {\n                     \n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Create coordinates of points that define line.\n            int x1 = 100;\n            int y1 = 100;\n            int x2 = 500;\n            int y2 = 100;\n                     \n            // Draw line to screen.\n            e.Graphics.DrawLine(blackPen, x1, y1, x2, y2);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#68\">    Public Sub DrawLineInt(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create coordinates of points that define line.\n        Dim x1 As Integer = 100\n        Dim y1 As Integer = 100\n        Dim x2 As Integer = 500\n        Dim y2 As Integer = 100\n\n        &#39; Draw line to screen.\n        e.Graphics.DrawLine(blackPen, x1, y1, x2, y2)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawLine_System_Drawing_Pen_System_Single_System_Single_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawLine(Pen,Single,Single,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a line connecting the two points specified by the coordinate pairs.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawLine (System.Drawing.Pen pen, float x1, float y1, float x2, float y2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the line.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the first point.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the first point.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the second point.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the second point.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws a line connecting the two points specified by the <code>x1</code>, <code>y1</code>, <code>x2</code>, and <code>y2</code> parameters.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates the coordinates of the endpoints of the line.  </p>\n</li>\n<li><p>Draws the line to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#69\">public:\n   void DrawLineFloat( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create coordinates of points that define line.\n      float x1 = 100.0F;\n      float y1 = 100.0F;\n      float x2 = 500.0F;\n      float y2 = 100.0F;\n\n      // Draw line to screen.\n      e-&gt;Graphics-&gt;DrawLine( blackPen, x1, y1, x2, y2 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#69\">        public void DrawLineFloat(PaintEventArgs e)\n        {\n                     \n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Create coordinates of points that define line.\n            float x1 = 100.0F;\n            float y1 = 100.0F;\n            float x2 = 500.0F;\n            float y2 = 100.0F;\n                     \n            // Draw line to screen.\n            e.Graphics.DrawLine(blackPen, x1, y1, x2, y2);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#69\">    Public Sub DrawLineFloat(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create coordinates of points that define line.\n        Dim x1 As Single = 100.0F\n        Dim y1 As Single = 100.0F\n        Dim x2 As Single = 500.0F\n        Dim y2 As Single = 100.0F\n\n        &#39; Draw line to screen.\n        e.Graphics.DrawLine(blackPen, x1, y1, x2, y2)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawLines_System_Drawing_Pen_System_Drawing_Point___\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawLines_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawLines(Pen,Point[])</div>        \r\n          </div>\r\n    \r\n            <p>Draws a series of line segments that connect an array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawLines (System.Drawing.Pen pen, System.Drawing.Point[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the line segments.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that represent the points to connect.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws a series of lines connecting an array of ending points. The first two points in the array specify the first line. Each additional point specifies the end of a line segment whose starting point is the ending point of the previous line segment.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates an array of points of segments of the line.  </p>\n</li>\n<li><p>Draws the connected line segments to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#70\">public:\n   void DrawLinesPoint( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ pen = gcnew Pen( Color::Black,3.0f );\n\n      // Create array of points that define lines to draw.\n      array&lt;Point&gt;^ points = {Point(10,10),Point(10,100),Point(200,50),Point(250,300)};\n\n      //Draw lines to screen.\n      e-&gt;Graphics-&gt;DrawLines( pen, points );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#70\">        public void DrawLinesPoint(PaintEventArgs e)\n        {\n                     \n            // Create pen.\n            Pen pen = new Pen(Color.Black, 3);\n                     \n            // Create array of points that define lines to draw.\n            Point[] points =\n                     {\n                         new Point(10,  10),\n                         new Point(10, 100),\n                         new Point(200,  50),\n                         new Point(250, 300)\n                     };\n                     \n            //Draw lines to screen.\n            e.Graphics.DrawLines(pen, points);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#70\">    Public Sub DrawLinesPoint(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create array of points that define lines to draw.\n        Dim points As Point() = {New Point(10, 10), New Point(10, 100), _\n        New Point(200, 50), New Point(250, 300)}\n\n        &#39;Draw lines to screen.\n        e.Graphics.DrawLines(blackPen, points)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawLines_System_Drawing_Pen_System_Drawing_PointF___\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawLines_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawLines(Pen,PointF[])</div>        \r\n          </div>\r\n    \r\n            <p>Draws a series of line segments that connect an array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawLines (System.Drawing.Pen pen, System.Drawing.PointF[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the line segments.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that represent the points to connect.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws a series of lines connecting an array of ending points. The first two points in the array specify the first line. Each additional point specifies the end of a line segment whose starting point is the ending point of the previous line segment.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Code creates a black pen.  </p>\n</li>\n<li><p>Creates an array of points of segments of the line.  </p>\n</li>\n<li><p>Draws the connected line segments to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#71\">public:\n   void DrawLinesPointF( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ pen = gcnew Pen( Color::Black,3.0f );\n\n      // Create array of points that define lines to draw.\n      array&lt;PointF&gt;^ points = {PointF(10.0F,10.0F),PointF(10.0F,100.0F),PointF(200.0F,50.0F),PointF(250.0F,300.0F)};\n\n      //Draw lines to screen.\n      e-&gt;Graphics-&gt;DrawLines( pen, points );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#71\">        public void DrawLinesPointF(PaintEventArgs e)\n        {\n                     \n            // Create pen.\n            Pen pen = new Pen(Color.Black, 3);\n                     \n            // Create array of points that define lines to draw.\n            PointF[] points =\n                     {\n                         new PointF(10.0F,  10.0F),\n                         new PointF(10.0F, 100.0F),\n                         new PointF(200.0F,  50.0F),\n                         new PointF(250.0F, 300.0F)\n                     };\n                     \n            //Draw lines to screen.\n            e.Graphics.DrawLines(pen, points);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#71\">    Public Sub DrawLinesPointF(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create array of points that define lines to draw.\n        Dim points As PointF() = {New PointF(10.0F, 10.0F), _\n        New PointF(10.0F, 100.0F), New PointF(200.0F, 50.0F), _\n        New PointF(250.0F, 300.0F)}\n\n        &#39;Draw lines to screen.\n        e.Graphics.DrawLines(blackPen, points)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawPath_System_Drawing_Pen_System_Drawing_Drawing2D_GraphicsPath_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawPath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawPath(Pen,GraphicsPath)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawPath (System.Drawing.Pen pen, System.Drawing.Drawing2D.GraphicsPath path);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the path.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> to draw.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>path</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current transformation in the graphic context is applied to the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> before it is drawn.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a graphics path object and adds an ellipse to it.  </p>\n</li>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Draws the graphics path to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#72\">public:\n   void DrawPathEllipse( PaintEventArgs^ e )\n   {\n      // Create graphics path object and add ellipse.\n      GraphicsPath^ graphPath = gcnew GraphicsPath;\n      graphPath-&gt;AddEllipse( 0, 0, 200, 100 );\n\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Draw graphics path to screen.\n      e-&gt;Graphics-&gt;DrawPath( blackPen, graphPath );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#72\">        public void DrawPathEllipse(PaintEventArgs e)\n        {\n                     \n            // Create graphics path object and add ellipse.\n            GraphicsPath graphPath = new GraphicsPath();\n            graphPath.AddEllipse(0, 0, 200, 100);\n                     \n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Draw graphics path to screen.\n            e.Graphics.DrawPath(blackPen, graphPath);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#72\">    Public Sub DrawPathEllipse(ByVal e As PaintEventArgs)\n\n        &#39; Create graphics path object and add ellipse.\n        Dim graphPath As New GraphicsPath\n        graphPath.AddEllipse(0, 0, 200, 100)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Draw graphics path to screen.\n        e.Graphics.DrawPath(blackPen, graphPath)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawPie_System_Drawing_Pen_System_Drawing_Rectangle_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawPie_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawPie(Pen,Rectangle,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a pie shape defined by an ellipse specified by a <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure and two radial lines.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawPie (System.Drawing.Pen pen, System.Drawing.Rectangle rect, float startAngle, float sweepAngle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the pie shape.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sweepAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Angle measured in degrees clockwise from the <code>startAngle</code> parameter to the second side of the pie shape.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws a pie shape defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle. The pie shape consists of the two radial lines defined by the <code>startAngle</code> and <code>sweepAngle</code> parameters, and the arc between the intersections of those radial lines with the ellipse.  </p>\n<p> If the <code>sweepAngle</code> parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates a rectangle that bounds a complete ellipse.  </p>\n</li>\n<li><p>Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).  </p>\n</li>\n<li><p>Draws the pie segment to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#73\">public:\n   void DrawPieRectangle( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create rectangle for ellipse.\n      Rectangle rect = Rectangle(0,0,200,100);\n\n      // Create start and sweep angles.\n      float startAngle = 0.0F;\n      float sweepAngle = 45.0F;\n\n      // Draw pie to screen.\n      e-&gt;Graphics-&gt;DrawPie( blackPen, rect, startAngle, sweepAngle );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#73\">        public void DrawPieRectangle(PaintEventArgs e)\n        {\n                     \n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Create rectangle for ellipse.\n            Rectangle rect = new Rectangle(0, 0, 200, 100);\n                     \n            // Create start and sweep angles.\n            float startAngle =  0.0F;\n            float sweepAngle = 45.0F;\n                     \n            // Draw pie to screen.\n            e.Graphics.DrawPie(blackPen, rect, startAngle, sweepAngle);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#73\">    Public Sub DrawPieRectangle(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create rectangle for ellipse.\n        Dim rect As New Rectangle(0, 0, 200, 100)\n\n        &#39; Create start and sweep angles.\n        Dim startAngle As Single = 0.0F\n        Dim sweepAngle As Single = 45.0F\n\n        &#39; Draw pie to screen.\n        e.Graphics.DrawPie(blackPen, rect, startAngle, sweepAngle)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawPie_System_Drawing_Pen_System_Drawing_RectangleF_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawPie_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawPie(Pen,RectangleF,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a pie shape defined by an ellipse specified by a <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure and two radial lines.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawPie (System.Drawing.Pen pen, System.Drawing.RectangleF rect, float startAngle, float sweepAngle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the pie shape.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sweepAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Angle measured in degrees clockwise from the <code>startAngle</code> parameter to the second side of the pie shape.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws a pie shape defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle. The pie shape consists of the two radial lines defined by the <code>startAngle</code> and <code>sweepAngle</code> parameters, and the arc between the intersections of those radial lines with the ellipse.  </p>\n<p> If the <code>sweepAngle</code> parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates a rectangle that bounds a complete ellipse.  </p>\n</li>\n<li><p>Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).  </p>\n</li>\n<li><p>Draws the pie segment to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#74\">public:\n   void DrawPieRectangleF( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create rectangle for ellipse.\n      RectangleF rect = RectangleF(0.0F,0.0F,200.0F,100.0F);\n\n      // Create start and sweep angles.\n      float startAngle = 0.0F;\n      float sweepAngle = 45.0F;\n\n      // Draw pie to screen.\n      e-&gt;Graphics-&gt;DrawPie( blackPen, rect, startAngle, sweepAngle );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#74\">        public void DrawPieRectangleF(PaintEventArgs e)\n        {\n                     \n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Create rectangle for ellipse.\n            RectangleF rect = new RectangleF(0.0F, 0.0F, 200.0F, 100.0F);\n                     \n            // Create start and sweep angles.\n            float startAngle =  0.0F;\n            float sweepAngle = 45.0F;\n                     \n            // Draw pie to screen.\n            e.Graphics.DrawPie(blackPen, rect, startAngle, sweepAngle);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#74\">    Public Sub DrawPieRectangleF(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create rectangle for ellipse.\n        Dim rect As New RectangleF(0.0F, 0.0F, 200.0F, 100.0F)\n\n        &#39; Create start and sweep angles.\n        Dim startAngle As Single = 0.0F\n        Dim sweepAngle As Single = 45.0F\n\n        &#39; Draw pie to screen.\n        e.Graphics.DrawPie(blackPen, rect, startAngle, sweepAngle)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawPie_System_Drawing_Pen_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawPie_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawPie(Pen,Int32,Int32,Int32,Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawPie (System.Drawing.Pen pen, int x, int y, int width, int height, int startAngle, int sweepAngle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the pie shape.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sweepAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Angle measured in degrees clockwise from the <code>startAngle</code> parameter to the second side of the pie shape.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws a pie shape defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle described by the <code>x</code>, <code>y</code>, <code>width</code>, and <code>height</code> parameters. The pie shape consists of the two radial lines defined by the <code>startAngle</code> and <code>sweepAngle</code> parameters, and the arc between the intersections of those radial lines with the ellipse.  </p>\n<p> If the <code>sweepAngle</code> parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates the position and size of a rectangle that bounds a complete ellipse.  </p>\n</li>\n<li><p>Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).  </p>\n</li>\n<li><p>Draws the pie shape to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#75\">public:\n   void DrawPieInt( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create location and size of ellipse.\n      int x = 0;\n      int y = 0;\n      int width = 200;\n      int height = 100;\n\n      // Create start and sweep angles.\n      int startAngle = 0;\n      int sweepAngle = 45;\n\n      // Draw pie to screen.\n      e-&gt;Graphics-&gt;DrawPie( blackPen, x, y, width, height, startAngle, sweepAngle );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#75\">        public void DrawPieInt(PaintEventArgs e)\n        {\n                     \n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Create location and size of ellipse.\n            int x = 0;\n            int y = 0;\n            int width = 200;\n            int height = 100;\n                     \n            // Create start and sweep angles.\n            int startAngle =  0;\n            int sweepAngle = 45;\n                     \n            // Draw pie to screen.\n            e.Graphics.DrawPie(blackPen, x, y, width, height, startAngle, sweepAngle);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#75\">    Public Sub DrawPieInt(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create location and size of ellipse.\n        Dim x As Integer = 0\n        Dim y As Integer = 0\n        Dim width As Integer = 200\n        Dim height As Integer = 100\n\n        &#39; Create start and sweep angles.\n        Dim startAngle As Integer = 0\n        Dim sweepAngle As Integer = 45\n\n        &#39; Draw pie to screen.\n        e.Graphics.DrawPie(blackPen, x, y, width, height, _\n        startAngle, sweepAngle)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawPie_System_Drawing_Pen_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawPie_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawPie(Pen,Single,Single,Single,Single,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawPie (System.Drawing.Pen pen, float x, float y, float width, float height, float startAngle, float sweepAngle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the pie shape.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sweepAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Angle measured in degrees clockwise from the <code>startAngle</code> parameter to the second side of the pie shape.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method draws a pie shape defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle described by the <code>x</code>, <code>y</code>, <code>width</code>, and <code>height</code> parameters. The pie shape consists of the two radial lines defined by the <code>startAngle</code> and <code>sweepAngle</code> parameters, and the arc between the intersections of those radial lines with the ellipse.  </p>\n<p> If the <code>sweepAngle</code> parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates the position and size of a rectangle that bounds a complete ellipse.  </p>\n</li>\n<li><p>Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).  </p>\n</li>\n<li><p>Draws the pie segment to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#76\">public:\n   void DrawPieFloat( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create location and size of ellipse.\n      float x = 0.0F;\n      float y = 0.0F;\n      float width = 200.0F;\n      float height = 100.0F;\n\n      // Create start and sweep angles.\n      float startAngle = 0.0F;\n      float sweepAngle = 45.0F;\n\n      // Draw pie to screen.\n      e-&gt;Graphics-&gt;DrawPie( blackPen, x, y, width, height, startAngle, sweepAngle );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#76\">        public void DrawPieFloat(PaintEventArgs e)\n        {\n                     \n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Create location and size of ellipse.\n            float x = 0.0F;\n            float y = 0.0F;\n            float width = 200.0F;\n            float height = 100.0F;\n                     \n            // Create start and sweep angles.\n            float startAngle =  0.0F;\n            float sweepAngle = 45.0F;\n                     \n            // Draw pie to screen.\n            e.Graphics.DrawPie(blackPen, x, y, width, height, startAngle, sweepAngle);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#76\">    Public Sub DrawPieFloat(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create location and size of ellipse.\n        Dim x As Single = 0.0F\n        Dim y As Single = 0.0F\n        Dim width As Single = 200.0F\n        Dim height As Single = 100.0F\n\n        &#39; Create start and sweep angles.\n        Dim startAngle As Single = 0.0F\n        Dim sweepAngle As Single = 45.0F\n\n        &#39; Draw pie to screen.\n        e.Graphics.DrawPie(blackPen, x, y, width, height, _\n        startAngle, sweepAngle)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawPolygon_System_Drawing_Pen_System_Drawing_Point___\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawPolygon_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawPolygon(Pen,Point[])</div>        \r\n          </div>\r\n    \r\n            <p>Draws a polygon defined by an array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawPolygon (System.Drawing.Pen pen, System.Drawing.Point[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the polygon.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that represent the vertices of the polygon.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Every pair of two consecutive points in the array specifies a side of the polygon. In addition, if the last point and the first point of the array do not coincide, they specify the last side of the polygon.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates an array of seven points for the vertices of the polygon.  </p>\n</li>\n<li><p>Draws the polygon to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#78\">public:\n   void DrawPolygonPoint( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create points that define polygon.\n      Point point1 = Point(50,50);\n      Point point2 = Point(100,25);\n      Point point3 = Point(200,5);\n      Point point4 = Point(250,50);\n      Point point5 = Point(300,100);\n      Point point6 = Point(350,200);\n      Point point7 = Point(250,250);\n      array&lt;Point&gt;^ curvePoints = {point1,point2,point3,point4,point5,point6,point7};\n\n      // Draw polygon to screen.\n      e-&gt;Graphics-&gt;DrawPolygon( blackPen, curvePoints );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#78\">        public void DrawPolygonPoint(PaintEventArgs e)\n        {\n                     \n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Create points that define polygon.\n            Point point1 = new Point(50,  50);\n            Point point2 = new Point(100,  25);\n            Point point3 = new Point(200,   5);\n            Point point4 = new Point(250,  50);\n            Point point5 = new Point(300, 100);\n            Point point6 = new Point(350, 200);\n            Point point7 = new Point(250, 250);\n            Point[] curvePoints =\n                     {\n                         point1,\n                         point2,\n                         point3,\n                         point4,\n                         point5,\n                         point6,\n                         point7\n                     };\n                     \n            // Draw polygon to screen.\n            e.Graphics.DrawPolygon(blackPen, curvePoints);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#78\">    Public Sub DrawPolygonPoint(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create points that define polygon.\n        Dim point1 As New Point(50, 50)\n        Dim point2 As New Point(100, 25)\n        Dim point3 As New Point(200, 5)\n        Dim point4 As New Point(250, 50)\n        Dim point5 As New Point(300, 100)\n        Dim point6 As New Point(350, 200)\n        Dim point7 As New Point(250, 250)\n        Dim curvePoints As Point() = {point1, point2, point3, point4, _\n        point5, point6, point7}\n\n        &#39; Draw polygon to screen.\n        e.Graphics.DrawPolygon(blackPen, curvePoints)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawPolygon_System_Drawing_Pen_System_Drawing_PointF___\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawPolygon_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawPolygon(Pen,PointF[])</div>        \r\n          </div>\r\n    \r\n            <p>Draws a polygon defined by an array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawPolygon (System.Drawing.Pen pen, System.Drawing.PointF[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the polygon.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that represent the vertices of the polygon.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Every pair of two consecutive points in the array specifies a side of the polygon. In addition, if the last point and the first of the array point do not coincide, they specify the last side of the polygon.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates an array of seven points for the vertices of the polygon.  </p>\n</li>\n<li><p>Draws the polygon to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#77\">public:\n   void DrawPolygonPointF( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create points that define polygon.\n      PointF point1 = PointF(50.0F,50.0F);\n      PointF point2 = PointF(100.0F,25.0F);\n      PointF point3 = PointF(200.0F,5.0F);\n      PointF point4 = PointF(250.0F,50.0F);\n      PointF point5 = PointF(300.0F,100.0F);\n      PointF point6 = PointF(350.0F,200.0F);\n      PointF point7 = PointF(250.0F,250.0F);\n      array&lt;PointF&gt;^ curvePoints = {point1,point2,point3,point4,point5,point6,point7};\n\n      // Draw polygon curve to screen.\n      e-&gt;Graphics-&gt;DrawPolygon( blackPen, curvePoints );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#77\">        public void DrawPolygonPointF(PaintEventArgs e)\n        {\n                     \n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Create points that define polygon.\n            PointF point1 = new PointF(50.0F,  50.0F);\n            PointF point2 = new PointF(100.0F,  25.0F);\n            PointF point3 = new PointF(200.0F,   5.0F);\n            PointF point4 = new PointF(250.0F,  50.0F);\n            PointF point5 = new PointF(300.0F, 100.0F);\n            PointF point6 = new PointF(350.0F, 200.0F);\n            PointF point7 = new PointF(250.0F, 250.0F);\n            PointF[] curvePoints =\n                     {\n                         point1,\n                         point2,\n                         point3,\n                         point4,\n                         point5,\n                         point6,\n                         point7\n                     };\n                     \n            // Draw polygon curve to screen.\n            e.Graphics.DrawPolygon(blackPen, curvePoints);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#77\">    Public Sub DrawPolygonPointF(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create points that define polygon.\n        Dim point1 As New PointF(50.0F, 50.0F)\n        Dim point2 As New PointF(100.0F, 25.0F)\n        Dim point3 As New PointF(200.0F, 5.0F)\n        Dim point4 As New PointF(250.0F, 50.0F)\n        Dim point5 As New PointF(300.0F, 100.0F)\n        Dim point6 As New PointF(350.0F, 200.0F)\n        Dim point7 As New PointF(250.0F, 250.0F)\n        Dim curvePoints As PointF() = {point1, point2, point3, point4, _\n        point5, point6, point7}\n\n        &#39; Draw polygon curve to screen.\n        e.Graphics.DrawPolygon(blackPen, curvePoints)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawRectangle_System_Drawing_Pen_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawRectangle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawRectangle(Pen,Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a rectangle specified by a <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawRectangle (System.Drawing.Pen pen, System.Drawing.Rectangle rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that represents the rectangle to draw.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For information about how to draw a <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a>, see[DrawRectangles(Pen, RectangleF&lt;xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29&gt;.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates a rectangle.  </p>\n</li>\n<li><p>Draws the rectangle to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#79\">public:\n   void DrawRectangleRectangle( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create rectangle.\n      Rectangle rect = Rectangle(0,0,200,200);\n\n      // Draw rectangle to screen.\n      e-&gt;Graphics-&gt;DrawRectangle( blackPen, rect );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#79\">        public void DrawRectangleRectangle(PaintEventArgs e)\n        {\n                     \n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Create rectangle.\n            Rectangle rect = new Rectangle(0, 0, 200, 200);\n                     \n            // Draw rectangle to screen.\n            e.Graphics.DrawRectangle(blackPen, rect);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#79\">    Public Sub DrawRectangleRectangle(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create rectangle.\n        Dim rect As New Rectangle(0, 0, 200, 200)\n\n        &#39; Draw rectangle to screen.\n        e.Graphics.DrawRectangle(blackPen, rect)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawRectangle_System_Drawing_Pen_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawRectangle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawRectangle(Pen,Int32,Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a rectangle specified by a coordinate pair, a width, and a height.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawRectangle (System.Drawing.Pen pen, int x, int y, int width, int height);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the rectangle to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the rectangle to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the rectangle to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the rectangle to draw.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For information about how to draw a <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a>, see [DrawRectangles(Pen, RectangleF&lt;xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29&gt;.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates the position and size of a rectangle.  </p>\n</li>\n<li><p>Draws the rectangle to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#80\">public:\n   void DrawRectangleInt( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create location and size of rectangle.\n      int x = 0;\n      int y = 0;\n      int width = 200;\n      int height = 200;\n\n      // Draw rectangle to screen.\n      e-&gt;Graphics-&gt;DrawRectangle( blackPen, x, y, width, height );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#80\">        public void DrawRectangleInt(PaintEventArgs e)\n        {\n                     \n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Create location and size of rectangle.\n            int x = 0;\n            int y = 0;\n            int width = 200;\n            int height = 200;\n                     \n            // Draw rectangle to screen.\n            e.Graphics.DrawRectangle(blackPen, x, y, width, height);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#80\">    Public Sub DrawRectangleInt(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create location and size of rectangle.\n        Dim x As Integer = 0\n        Dim y As Integer = 0\n        Dim width As Integer = 200\n        Dim height As Integer = 200\n\n        &#39; Draw rectangle to screen.\n        e.Graphics.DrawRectangle(blackPen, x, y, width, height)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawRectangle_System_Drawing_Pen_System_Single_System_Single_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawRectangle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawRectangle(Pen,Single,Single,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a rectangle specified by a coordinate pair, a width, and a height.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawRectangle (System.Drawing.Pen pen, float x, float y, float width, float height);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the rectangle to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the rectangle to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The width of the rectangle to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The height of the rectangle to draw.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For information about how to draw a <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a>, see [DrawRectangles(Pen, RectangleF&lt;xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29&gt;.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates the position and size of a rectangle.  </p>\n</li>\n<li><p>Draws the rectangle to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#81\">public:\n   void DrawRectangleFloat( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create location and size of rectangle.\n      float x = 0.0F;\n      float y = 0.0F;\n      float width = 200.0F;\n      float height = 200.0F;\n\n      // Draw rectangle to screen.\n      e-&gt;Graphics-&gt;DrawRectangle( blackPen, x, y, width, height );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#81\">        public void DrawRectangleFloat(PaintEventArgs e)\n        {\n                     \n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Create location and size of rectangle.\n            float x = 0.0F;\n            float y = 0.0F;\n            float width = 200.0F;\n            float height = 200.0F;\n                     \n            // Draw rectangle to screen.\n            e.Graphics.DrawRectangle(blackPen, x, y, width, height);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#81\">    Public Sub DrawRectangleFloat(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create location and size of rectangle.\n        Dim x As Single = 0.0F\n        Dim y As Single = 0.0F\n        Dim width As Single = 200.0F\n        Dim height As Single = 200.0F\n\n        &#39; Draw rectangle to screen.\n        e.Graphics.DrawRectangle(blackPen, x, y, width, height)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawRectangles_System_Drawing_Pen_System_Drawing_Rectangle___\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawRectangles_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawRectangles(Pen,Rectangle[])</div>        \r\n          </div>\r\n    \r\n            <p>Draws a series of rectangles specified by <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawRectangles (System.Drawing.Pen pen, System.Drawing.Rectangle[] rects);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the outlines of the rectangles.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rects</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structures that represent the rectangles to draw.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>rects</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>rects</code> is a zero-length array.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates an array of three rectangles.  </p>\n</li>\n<li><p>Draws the rectangles to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#82\">public:\n   void DrawRectanglesRectangle( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create array of rectangles.\n      array&lt;Rectangle&gt;^ rects = {Rectangle(0,0,100,200),Rectangle(100,200,250,50),Rectangle(300,0,50,100)};\n\n      // Draw rectangles to screen.\n      e-&gt;Graphics-&gt;DrawRectangles( blackPen, rects );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#82\">        public void DrawRectanglesRectangle(PaintEventArgs e)\n        {\n                     \n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Create array of rectangles.\n            Rectangle[] rects =\n                     {\n                         new Rectangle( 0,   0, 100, 200),\n                         new Rectangle(100, 200, 250,  50),\n                         new Rectangle(300,   0,  50, 100)\n                     };\n                     \n            // Draw rectangles to screen.\n            e.Graphics.DrawRectangles(blackPen, rects);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#82\">    Public Sub DrawRectanglesRectangle(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create array of rectangles.\n        Dim rects As Rectangle() = {New Rectangle(0, 0, 100, 200), _\n        New Rectangle(100, 200, 250, 50), _\n        New Rectangle(300, 0, 50, 100)}\n\n        &#39; Draw rectangles to screen.\n        e.Graphics.DrawRectangles(blackPen, rects)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawRectangles_System_Drawing_Pen_System_Drawing_RectangleF___\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawRectangles_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawRectangles(Pen,RectangleF[])</div>        \r\n          </div>\r\n    \r\n            <p>Draws a series of rectangles specified by <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawRectangles (System.Drawing.Pen pen, System.Drawing.RectangleF[] rects);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that determines the color, width, and style of the outlines of the rectangles.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rects</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structures that represent the rectangles to draw.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>pen</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>rects</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>rects</code> is a zero-length array.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a black pen.  </p>\n</li>\n<li><p>Creates an array of three rectangles.  </p>\n</li>\n<li><p>Draws the rectangles to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#83\">public:\n   void DrawRectanglesRectangleF( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ blackPen = gcnew Pen( Color::Black,3.0f );\n\n      // Create array of rectangles.\n      array&lt;RectangleF&gt;^ rects = {RectangleF(0.0F,0.0F,100.0F,200.0F),RectangleF(100.0F,200.0F,250.0F,50.0F),RectangleF(300.0F,0.0F,50.0F,100.0F)};\n\n      // Draw rectangles to screen.\n      e-&gt;Graphics-&gt;DrawRectangles( blackPen, rects );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#83\">        public void DrawRectanglesRectangleF(PaintEventArgs e)\n        {\n                     \n            // Create pen.\n            Pen blackPen = new Pen(Color.Black, 3);\n                     \n            // Create array of rectangles.\n            RectangleF[] rects =\n                     {\n                         new RectangleF( 0.0F,   0.0F, 100.0F, 200.0F),\n                         new RectangleF(100.0F, 200.0F, 250.0F,  50.0F),\n                         new RectangleF(300.0F,   0.0F,  50.0F, 100.0F)\n                     };\n                     \n            // Draw rectangles to screen.\n            e.Graphics.DrawRectangles(blackPen, rects);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#83\">    Public Sub DrawRectanglesRectangleF(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim blackPen As New Pen(Color.Black, 3)\n\n        &#39; Create array of rectangles.\n        Dim rects As RectangleF() = {New RectangleF(0.0F, 0.0F, 100.0F, 200.0F), _\n        New RectangleF(100.0F, 200.0F, 250.0F, 50.0F), _\n        New RectangleF(300.0F, 0.0F, 50.0F, 100.0F)}\n\n        &#39; Draw rectangles to screen.\n        e.Graphics.DrawRectangles(blackPen, rects)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawString_System_String_System_Drawing_Font_System_Drawing_Brush_System_Drawing_PointF_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawString(String,Font,Brush,PointF)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified text string at the specified location with the specified <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> and <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.PointF point);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>String to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>font</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> that defines the text format of the string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the color and texture of the drawn text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>point</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure that specifies the upper-left corner of the drawn text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a text string to draw.  </p>\n</li>\n<li><p>Defines the font as Arial (16pt).  </p>\n</li>\n<li><p>Creates a solid, black brush to draw with.  </p>\n</li>\n<li><p>Creates a point for the upper-left corner at which to draw the text.  </p>\n</li>\n<li><p>Draws the string to the screen using the font, brush, and destination point.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#84\">public:\n   void DrawStringPointF( PaintEventArgs^ e )\n   {\n      // Create string to draw.\n      String^ drawString = &quot;Sample Text&quot;;\n\n      // Create font and brush.\n      System::Drawing::Font^ drawFont = gcnew System::Drawing::Font( &quot;Arial&quot;,16 );\n      SolidBrush^ drawBrush = gcnew SolidBrush( Color::Black );\n\n      // Create point for upper-left corner of drawing.\n      PointF drawPoint = PointF(150.0F,150.0F);\n\n      // Draw string to screen.\n      e-&gt;Graphics-&gt;DrawString( drawString, drawFont, drawBrush, drawPoint );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#84\">        public void DrawStringPointF(PaintEventArgs e)\n        {\n                     \n            // Create string to draw.\n            String drawString = &quot;Sample Text&quot;;\n                     \n            // Create font and brush.\n            Font drawFont = new Font(&quot;Arial&quot;, 16);\n            SolidBrush drawBrush = new SolidBrush(Color.Black);\n                     \n            // Create point for upper-left corner of drawing.\n            PointF drawPoint = new PointF(150.0F, 150.0F);\n                     \n            // Draw string to screen.\n            e.Graphics.DrawString(drawString, drawFont, drawBrush, drawPoint);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#84\">    Public Sub DrawStringPointF(ByVal e As PaintEventArgs)\n\n        &#39; Create string to draw.\n        Dim drawString As [String] = &quot;Sample Text&quot;\n\n        &#39; Create font and brush.\n        Dim drawFont As New Font(&quot;Arial&quot;, 16)\n        Dim drawBrush As New SolidBrush(Color.Black)\n\n        &#39; Create point for upper-left corner of drawing.\n        Dim drawPoint As New PointF(150.0F, 150.0F)\n\n        &#39; Draw string to screen.\n        e.Graphics.DrawString(drawString, drawFont, drawBrush, drawPoint)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawString_System_String_System_Drawing_Font_System_Drawing_Brush_System_Drawing_RectangleF_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawString(String,Font,Brush,RectangleF)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified text string in the specified rectangle with the specified <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> and <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.RectangleF layoutRectangle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>String to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>font</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> that defines the text format of the string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the color and texture of the drawn text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>layoutRectangle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the location of the drawn text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The text represented by the <code>s</code> parameter is drawn inside the rectangle represented by the <code>layoutRectangle</code> parameter. If the text does not fit inside the rectangle, it is truncated at the nearest word. To further manipulate how the string is drawn inside the rectangle use the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawString_\" data-linktype=\"relative-path\">DrawString</a> overload that takes a <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a text string to draw.  </p>\n</li>\n<li><p>Defines the font as Arial (16pt).  </p>\n</li>\n<li><p>Creates a solid, black brush to draw with.  </p>\n</li>\n<li><p>Creates a rectangle in which to draw the text.  </p>\n</li>\n<li><p>Draws the rectangle to the screen.  </p>\n</li>\n<li><p>Draws the string to the screen using the font, brush, and destination rectangle.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#86\">public:\n   void DrawStringRectangleF( PaintEventArgs^ e )\n   {\n      // Create string to draw.\n      String^ drawString = &quot;Sample Text&quot;;\n\n      // Create font and brush.\n      System::Drawing::Font^ drawFont = gcnew System::Drawing::Font( &quot;Arial&quot;,16 );\n      SolidBrush^ drawBrush = gcnew SolidBrush( Color::Black );\n\n      // Create rectangle for drawing.\n      float x = 150.0F;\n      float y = 150.0F;\n      float width = 200.0F;\n      float height = 50.0F;\n      RectangleF drawRect = RectangleF(x,y,width,height);\n\n      // Draw rectangle to screen.\n      Pen^ blackPen = gcnew Pen( Color::Black );\n      e-&gt;Graphics-&gt;DrawRectangle( blackPen, x, y, width, height );\n\n      // Draw string to screen.\n      e-&gt;Graphics-&gt;DrawString( drawString, drawFont, drawBrush, drawRect );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#86\">        public void DrawStringRectangleF(PaintEventArgs e)\n        {\n                     \n            // Create string to draw.\n            String drawString = &quot;Sample Text&quot;;\n                     \n            // Create font and brush.\n            Font drawFont = new Font(&quot;Arial&quot;, 16);\n            SolidBrush drawBrush = new SolidBrush(Color.Black);\n                     \n            // Create rectangle for drawing.\n            float x = 150.0F;\n            float y = 150.0F;\n            float width = 200.0F;\n            float height = 50.0F;\n            RectangleF drawRect = new RectangleF(x, y, width, height);\n                     \n            // Draw rectangle to screen.\n            Pen blackPen = new Pen(Color.Black);\n            e.Graphics.DrawRectangle(blackPen, x, y, width, height);\n                     \n            // Draw string to screen.\n            e.Graphics.DrawString(drawString, drawFont, drawBrush, drawRect);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#86\">    Public Sub DrawStringRectangleF(ByVal e As PaintEventArgs)\n\n        &#39; Create string to draw.\n        Dim drawString As [String] = &quot;Sample Text&quot;\n\n        &#39; Create font and brush.\n        Dim drawFont As New Font(&quot;Arial&quot;, 16)\n        Dim drawBrush As New SolidBrush(Color.Black)\n\n        &#39; Create rectangle for drawing.\n        Dim x As Single = 150.0F\n        Dim y As Single = 150.0F\n        Dim width As Single = 200.0F\n        Dim height As Single = 50.0F\n        Dim drawRect As New RectangleF(x, y, width, height)\n\n        &#39; Draw rectangle to screen.\n        Dim blackPen As New Pen(Color.Black)\n        e.Graphics.DrawRectangle(blackPen, x, y, width, height)\n\n        &#39; Draw string to screen.\n        e.Graphics.DrawString(drawString, drawFont, drawBrush, drawRect)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawString_System_String_System_Drawing_Font_System_Drawing_Brush_System_Drawing_PointF_System_Drawing_StringFormat_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawString(String,Font,Brush,PointF,StringFormat)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified text string at the specified location with the specified <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> and <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> objects using the formatting attributes of the specified <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.PointF point, System.Drawing.StringFormat format);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>String to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>font</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> that defines the text format of the string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the color and texture of the drawn text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>point</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure that specifies the upper-left corner of the drawn text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a> that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a text string to draw.  </p>\n</li>\n<li><p>Defines the font as Arial (16pt).  </p>\n</li>\n<li><p>Creates a solid, black brush to draw with.  </p>\n</li>\n<li><p>Creates a point for the upper-left corner at which to draw the text.  </p>\n</li>\n<li><p>Sets the format of the string to draw vertically.  </p>\n</li>\n<li><p>Draws the string to the screen using the font, brush, destination point, and format.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#85\">public:\n   void DrawStringPointFFormat( PaintEventArgs^ e )\n   {\n      // Create string to draw.\n      String^ drawString = &quot;Sample Text&quot;;\n\n      // Create font and brush.\n      System::Drawing::Font^ drawFont = gcnew System::Drawing::Font( &quot;Arial&quot;,16 );\n      SolidBrush^ drawBrush = gcnew SolidBrush( Color::Black );\n\n      // Create point for upper-left corner of drawing.\n      PointF drawPoint = PointF(150.0F,50.0F);\n\n      // Set format of string.\n      StringFormat^ drawFormat = gcnew StringFormat;\n      drawFormat-&gt;FormatFlags = StringFormatFlags::DirectionVertical;\n\n      // Draw string to screen.\n      e-&gt;Graphics-&gt;DrawString( drawString, drawFont, drawBrush, drawPoint, drawFormat );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#85\">        public void DrawStringPointFFormat(PaintEventArgs e)\n        {\n                     \n            // Create string to draw.\n            String drawString = &quot;Sample Text&quot;;\n                     \n            // Create font and brush.\n            Font drawFont = new Font(&quot;Arial&quot;, 16);\n            SolidBrush drawBrush = new SolidBrush(Color.Black);\n                     \n            // Create point for upper-left corner of drawing.\n            PointF drawPoint = new PointF(150.0F, 50.0F);\n                     \n            // Set format of string.\n            StringFormat drawFormat = new StringFormat();\n            drawFormat.FormatFlags = StringFormatFlags.DirectionVertical;\n                     \n            // Draw string to screen.\n            e.Graphics.DrawString(drawString, drawFont, drawBrush, drawPoint, drawFormat);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#85\">    Public Sub DrawStringPointFFormat(ByVal e As PaintEventArgs)\n\n        &#39; Create string to draw.\n        Dim drawString As [String] = &quot;Sample Text&quot;\n\n        &#39; Create font and brush.\n        Dim drawFont As New Font(&quot;Arial&quot;, 16)\n        Dim drawBrush As New SolidBrush(Color.Black)\n\n        &#39; Create point for upper-left corner of drawing.\n        Dim drawPoint As New PointF(150.0F, 50.0F)\n\n        &#39; Set format of string.\n        Dim drawFormat As New StringFormat\n        drawFormat.FormatFlags = StringFormatFlags.DirectionVertical\n\n        &#39; Draw string to screen.\n        e.Graphics.DrawString(drawString, drawFont, drawBrush, _\n        drawPoint, drawFormat)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawString_System_String_System_Drawing_Font_System_Drawing_Brush_System_Drawing_RectangleF_System_Drawing_StringFormat_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawString(String,Font,Brush,RectangleF,StringFormat)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified text string in the specified rectangle with the specified <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> and <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> objects using the formatting attributes of the specified <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.RectangleF layoutRectangle, System.Drawing.StringFormat format);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>String to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>font</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> that defines the text format of the string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the color and texture of the drawn text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>layoutRectangle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the location of the drawn text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a> that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The text represented by the <code>s</code> parameter is drawn inside the rectangle represented by the <code>layoutRectangle</code> parameter. If the text does not fit inside the rectangle, it is truncated at the nearest word, unless otherwise specified with the <code>format</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a text string to draw.  </p>\n</li>\n<li><p>Defines the font as Arial (16pt).  </p>\n</li>\n<li><p>Creates a solid, black brush to draw with.  </p>\n</li>\n<li><p>Creates a rectangle in which to draw the text.  </p>\n</li>\n<li><p>Draws the rectangle to the screen.  </p>\n</li>\n<li><p>Sets the format of the string to center it within the rectangle.  </p>\n</li>\n<li><p>Draws the string to the screen using the font, brush, and destination rectangle.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#87\">public:\n   void DrawStringRectangleFFormat( PaintEventArgs^ e )\n   {\n      // Create string to draw.\n      String^ drawString = &quot;Sample Text&quot;;\n\n      // Create font and brush.\n      System::Drawing::Font^ drawFont = gcnew System::Drawing::Font( &quot;Arial&quot;,16 );\n      SolidBrush^ drawBrush = gcnew SolidBrush( Color::Black );\n\n      // Create rectangle for drawing.\n      float x = 150.0F;\n      float y = 150.0F;\n      float width = 200.0F;\n      float height = 50.0F;\n      RectangleF drawRect = RectangleF(x,y,width,height);\n\n      // Draw rectangle to screen.\n      Pen^ blackPen = gcnew Pen( Color::Black );\n      e-&gt;Graphics-&gt;DrawRectangle( blackPen, x, y, width, height );\n\n      // Set format of string.\n      StringFormat^ drawFormat = gcnew StringFormat;\n      drawFormat-&gt;Alignment = StringAlignment::Center;\n\n      // Draw string to screen.\n      e-&gt;Graphics-&gt;DrawString( drawString, drawFont, drawBrush, drawRect, drawFormat );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#87\">        public void DrawStringRectangleFFormat(PaintEventArgs e)\n        {\n                     \n            // Create string to draw.\n            String drawString = &quot;Sample Text&quot;;\n                     \n            // Create font and brush.\n            Font drawFont = new Font(&quot;Arial&quot;, 16);\n            SolidBrush drawBrush = new SolidBrush(Color.Black);\n                     \n            // Create rectangle for drawing.\n            float x = 150.0F;\n            float y = 150.0F;\n            float width = 200.0F;\n            float height = 50.0F;\n            RectangleF drawRect = new RectangleF(x, y, width, height);\n                     \n            // Draw rectangle to screen.\n            Pen blackPen = new Pen(Color.Black);\n            e.Graphics.DrawRectangle(blackPen, x, y, width, height);\n                     \n            // Set format of string.\n            StringFormat drawFormat = new StringFormat();\n            drawFormat.Alignment = StringAlignment.Center;\n                     \n            // Draw string to screen.\n            e.Graphics.DrawString(drawString, drawFont, drawBrush, drawRect, drawFormat);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#87\">    Public Sub DrawStringRectangleFFormat(ByVal e As PaintEventArgs)\n\n        &#39; Create string to draw.\n        Dim drawString As [String] = &quot;Sample Text&quot;\n\n        &#39; Create font and brush.\n        Dim drawFont As New Font(&quot;Arial&quot;, 16)\n        Dim drawBrush As New SolidBrush(Color.Black)\n\n        &#39; Create rectangle for drawing.\n        Dim x As Single = 150.0F\n        Dim y As Single = 150.0F\n        Dim width As Single = 200.0F\n        Dim height As Single = 50.0F\n        Dim drawRect As New RectangleF(x, y, width, height)\n\n        &#39; Draw rectangle to screen.\n        Dim blackPen As New Pen(Color.Black)\n        e.Graphics.DrawRectangle(blackPen, x, y, width, height)\n\n        &#39; Set format of string.\n        Dim drawFormat As New StringFormat\n        drawFormat.Alignment = StringAlignment.Center\n\n        &#39; Draw string to screen.\n        e.Graphics.DrawString(drawString, drawFont, drawBrush, _\n        drawRect, drawFormat)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawString_System_String_System_Drawing_Font_System_Drawing_Brush_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawString(String,Font,Brush,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified text string at the specified location with the specified <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> and <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, float x, float y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>String to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>font</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> that defines the text format of the string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the color and texture of the drawn text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the drawn text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the drawn text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a text string to draw.  </p>\n</li>\n<li><p>Defines the font as Arial (16pt).  </p>\n</li>\n<li><p>Creates a solid black brush to draw with.  </p>\n</li>\n<li><p>Creates a point for the upper-left corner at which to draw the text.  </p>\n</li>\n<li><p>Draws the string to the screen using the font, brush, and destination point.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#88\">public:\n   void DrawStringFloat( PaintEventArgs^ e )\n   {\n      // Create string to draw.\n      String^ drawString = &quot;Sample Text&quot;;\n\n      // Create font and brush.\n      System::Drawing::Font^ drawFont = gcnew System::Drawing::Font( &quot;Arial&quot;,16 );\n      SolidBrush^ drawBrush = gcnew SolidBrush( Color::Black );\n\n      // Create point for upper-left corner of drawing.\n      float x = 150.0F;\n      float y = 150.0F;\n\n      // Draw string to screen.\n      e-&gt;Graphics-&gt;DrawString( drawString, drawFont, drawBrush, x, y );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#88\">        public void DrawStringFloat(PaintEventArgs e)\n        {\n                     \n            // Create string to draw.\n            String drawString = &quot;Sample Text&quot;;\n                     \n            // Create font and brush.\n            Font drawFont = new Font(&quot;Arial&quot;, 16);\n            SolidBrush drawBrush = new SolidBrush(Color.Black);\n                     \n            // Create point for upper-left corner of drawing.\n            float x = 150.0F;\n            float y = 150.0F;\n                     \n            // Draw string to screen.\n            e.Graphics.DrawString(drawString, drawFont, drawBrush, x, y);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#88\">    Public Sub DrawStringFloat(ByVal e As PaintEventArgs)\n\n        &#39; Create string to draw.\n        Dim drawString As [String] = &quot;Sample Text&quot;\n\n        &#39; Create font and brush.\n        Dim drawFont As New Font(&quot;Arial&quot;, 16)\n        Dim drawBrush As New SolidBrush(Color.Black)\n\n        &#39; Create point for upper-left corner of drawing.\n        Dim x As Single = 150.0F\n        Dim y As Single = 150.0F\n\n        &#39; Draw string to screen.\n        e.Graphics.DrawString(drawString, drawFont, drawBrush, x, y)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_DrawString_System_String_System_Drawing_Font_System_Drawing_Brush_System_Single_System_Single_System_Drawing_StringFormat_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_DrawString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawString(String,Font,Brush,Single,Single,StringFormat)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the specified text string at the specified location with the specified <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> and <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> objects using the formatting attributes of the specified <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, float x, float y, System.Drawing.StringFormat format);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>String to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>font</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> that defines the text format of the string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the color and texture of the drawn text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the drawn text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the drawn text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a> that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a text string to draw.  </p>\n</li>\n<li><p>Defines the font as Arial (16pt).  </p>\n</li>\n<li><p>Creates a solid, black brush to draw with.  </p>\n</li>\n<li><p>Creates the coordinates of a point for the upper-left corner at which to draw the text.  </p>\n</li>\n<li><p>Sets the format of the string to draw vertically  </p>\n</li>\n<li><p>Draws the string to the screen using the font, brush, destination point, and format.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#89\">public:\n   void DrawStringFloatFormat( PaintEventArgs^ e )\n   {\n      // Create string to draw.\n      String^ drawString = &quot;Sample Text&quot;;\n\n      // Create font and brush.\n      System::Drawing::Font^ drawFont = gcnew System::Drawing::Font( &quot;Arial&quot;,16 );\n      SolidBrush^ drawBrush = gcnew SolidBrush( Color::Black );\n\n      // Create point for upper-left corner of drawing.\n      float x = 150.0F;\n      float y = 50.0F;\n\n      // Set format of string.\n      StringFormat^ drawFormat = gcnew StringFormat;\n      drawFormat-&gt;FormatFlags = StringFormatFlags::DirectionVertical;\n\n      // Draw string to screen.\n      e-&gt;Graphics-&gt;DrawString( drawString, drawFont, drawBrush, x, y, drawFormat );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#89\">        public void DrawStringFloatFormat(PaintEventArgs e)\n        {\n                     \n            // Create string to draw.\n            String drawString = &quot;Sample Text&quot;;\n                     \n            // Create font and brush.\n            Font drawFont = new Font(&quot;Arial&quot;, 16);\n            SolidBrush drawBrush = new SolidBrush(Color.Black);\n                     \n            // Create point for upper-left corner of drawing.\n            float x = 150.0F;\n            float y =  50.0F;\n                     \n            // Set format of string.\n            StringFormat drawFormat = new StringFormat();\n            drawFormat.FormatFlags = StringFormatFlags.DirectionVertical;\n                     \n            // Draw string to screen.\n            e.Graphics.DrawString(drawString, drawFont, drawBrush, x, y, drawFormat);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#89\">    Public Sub DrawStringFloatFormat(ByVal e As PaintEventArgs)\n\n        &#39; Create string to draw.\n        Dim drawString As [String] = &quot;Sample Text&quot;\n\n        &#39; Create font and brush.\n        Dim drawFont As New Font(&quot;Arial&quot;, 16)\n        Dim drawBrush As New SolidBrush(Color.Black)\n\n        &#39; Create point for upper-left corner of drawing.\n        Dim x As Single = 150.0F\n        Dim y As Single = 50.0F\n\n        &#39; Set format of string.\n        Dim drawFormat As New StringFormat\n        drawFormat.FormatFlags = StringFormatFlags.DirectionVertical\n\n        &#39; Draw string to screen.\n        e.Graphics.DrawString(drawString, drawFont, drawBrush, _\n        x, y, drawFormat)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EndContainer_System_Drawing_Drawing2D_GraphicsContainer_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EndContainer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndContainer(GraphicsContainer)</div>        \r\n          </div>\r\n    \r\n            <p>Closes the current graphics container and restores the state of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the state saved by a call to the <span class=\"xref\">stem.Drawing.Graphics.BeginContainer*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EndContainer (System.Drawing.Drawing2D.GraphicsContainer container);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>container</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.graphicscontainer\" data-linktype=\"relative-path\">GraphicsContainer</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.drawing2d.graphicscontainer\" data-linktype=\"relative-path\">GraphicsContainer</a> that represents the container this method restores.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method with the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method to create nested graphics containers. Graphics containers retain graphics state, such as transformation, clipping region, and rendering properties.  </p>\n<p> When you call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method of a <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>, an information block that holds the state of the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is put on a stack. The <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method returns a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicscontainer\" data-linktype=\"relative-path\">GraphicsContainer</a> that identifies that information block. When you pass the identifying object to the EndContainer method, the information block is removed from the stack and is used to restore the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the state it was in at the time of the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method call.  </p>\n<p> Containers can be nested; that is, you can call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method several times before you call the EndContainer method. Each time you call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method, an information block is put on the stack, and you receive a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicscontainer\" data-linktype=\"relative-path\">GraphicsContainer</a> for the information block. When you pass one of those objects to the EndContainer method, the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is returned to the state it was in at the time of the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method call that returned that particular <a class=\"xref\" href=\"system.drawing.drawing2d.graphicscontainer\" data-linktype=\"relative-path\">GraphicsContainer</a>. The information block placed on the stack by that <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method call is removed from the stack, and all information blocks placed on that stack after that <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method call are also removed.  </p>\n<p> Calls to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method place information blocks on the same stack as calls to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method. Just as an EndContainer method call is paired with a <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method call, a <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Restore_\" data-linktype=\"relative-path\">Restore</a> method call is paired with a <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method call.  </p>\n<p> When you call the EndContainer method, all information blocks placed on the stack (by the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method or by the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method) after the corresponding call to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method are removed from the stack. Likewise, when you call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Restore_\" data-linktype=\"relative-path\">Restore</a> method, all information blocks placed on the stack (by the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method or by the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method) after the corresponding call to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method are removed from the stack.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Opens a new graphics container and saves the old container.  </p>\n</li>\n<li><p>Translates the world coordinates in the container.  </p>\n</li>\n<li><p>Fills a red rectangle in the (translated coordinates of the) new container.  </p>\n</li>\n<li><p>Closes the new container and restores the saved container.  </p>\n</li>\n<li><p>Fills a green rectangle (to the untranslated coordinates) of the saved container.  </p>\n<p>The result is a green rectangle that overlies a red rectangle of the same size.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#90\">public:\n   void EndContainerState( PaintEventArgs^ e )\n   {\n      // Begin graphics container.\n      GraphicsContainer^ containerState = e-&gt;Graphics-&gt;BeginContainer();\n\n      // Translate world transformation.\n      e-&gt;Graphics-&gt;TranslateTransform( 100.0F, 100.0F );\n\n      // Fill translated rectangle in container with red.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Red ), 0, 0, 200, 200 );\n\n      // End graphics container.\n      e-&gt;Graphics-&gt;EndContainer( containerState );\n\n      // Fill untransformed rectangle with green.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Green ), 0, 0, 200, 200 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#90\">        public void EndContainerState(PaintEventArgs e)\n        {\n                     \n            // Begin graphics container.\n            GraphicsContainer containerState = e.Graphics.BeginContainer();\n                     \n            // Translate world transformation.\n            e.Graphics.TranslateTransform(100.0F, 100.0F);\n                     \n            // Fill translated rectangle in container with red.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Red), 0, 0, 200, 200);\n                     \n            // End graphics container.\n            e.Graphics.EndContainer(containerState);\n                     \n            // Fill untransformed rectangle with green.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Green), 0, 0, 200, 200);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#90\">    Public Sub EndContainerState(ByVal e As PaintEventArgs)\n\n        &#39; Begin graphics container.\n        Dim containerState As GraphicsContainer = _\n        e.Graphics.BeginContainer()\n\n        &#39; Translate world transformation.\n        e.Graphics.TranslateTransform(100.0F, 100.0F)\n\n        &#39; Fill translated rectangle in container with red.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Red), 0, 0, _\n        200, 200)\n\n        &#39; End graphics container.\n        e.Graphics.EndContainer(containerState)\n\n        &#39; Fill untransformed rectangle with green.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Green), 0, 0, _\n        200, 200)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records in the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display at a specified point.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoint</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure that specifies the location of the upper-left corner of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a form that has a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> as one of its private members. The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> method calls EnumerateMetafile, which calls the form&#39;s <code>MetafileCallback</code> method for each record in the metafile. The <code>MetafileCallback</code> method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method. Notice that the <code>MetafileCallback</code> method receives the record data as an <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a>, but the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method expects the record data to be a byte array. The call to <a class=\"xref\" href=\"system.runtime.interopservices.marshal#System_Runtime_InteropServices_Marshal_Copy_\" data-linktype=\"relative-path\">Copy</a> copies the record data to a byte array so that it can be passed to <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Graphics.EnumerateMetafile#1\">\nusing System;\nusing System.Drawing;\nusing System.Drawing.Imaging;\nusing System.Windows.Forms;\n\n// for Marshal.Copy\nusing System.Runtime.InteropServices; \n\npublic class Form1 : Form\n{\n    private Metafile metafile1;\n    private Graphics.EnumerateMetafileProc metafileDelegate;\n    private Point destPoint;\n    public Form1()\n    {\n        metafile1 = new Metafile(@&quot;C:&nbsp;&nbsp;&nbsp;&nbsp;est.wmf&quot;);\n        metafileDelegate = new Graphics.EnumerateMetafileProc(MetafileCallback);\n        destPoint = new Point(20, 10);\n    }\n    protected override void OnPaint(PaintEventArgs e)\n    {\n        e.Graphics.EnumerateMetafile(metafile1, destPoint, metafileDelegate);\n    }\n    private bool MetafileCallback(\n       EmfPlusRecordType recordType,\n       int flags,\n       int dataSize,\n       IntPtr data,\n       PlayRecordCallback callbackData)\n    {\n        byte[] dataArray = null;\n        if (data != IntPtr.Zero)\n        {\n            // Copy the unmanaged record to a managed byte buffer \n            // that can be used by PlayRecord.\n            dataArray = new byte[dataSize];\n            Marshal.Copy(data, dataArray, 0, dataSize);\n        }\n\n        metafile1.PlayRecord(recordType, flags, dataSize, dataArray);\n\n        return true;\n    }\n\n    static void Main()\n    {\n        Application.Run(new Form1());\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Graphics.EnumerateMetafile#1\">Imports System\nImports System.Drawing\nImports System.Drawing.Imaging\nImports System.Windows.Forms\n&#39; for Marshal.Copy\nImports System.Runtime.InteropServices\n\n\nPublic Class Form1\n    Inherits Form\n    Private metafile1 As Metafile\n    Private metafileDelegate As Graphics.EnumerateMetafileProc\n    Private destPoint As Point\n    \n    Public Sub New() \n        metafile1 = New Metafile(&quot;C:&nbsp;&nbsp;&nbsp;&nbsp;est.wmf&quot;)\n        metafileDelegate = New Graphics.EnumerateMetafileProc(AddressOf MetafileCallback)\n        destPoint = New Point(20, 10)\n    \n    End Sub\n    \n    Protected Overrides Sub OnPaint(ByVal e As PaintEventArgs) \n        e.Graphics.EnumerateMetafile(metafile1, destPoint, metafileDelegate)\n    \n    End Sub\n    \n    Private Function MetafileCallback(ByVal recordType As _\n        EmfPlusRecordType, ByVal flags As Integer, ByVal dataSize As Integer, _\n        ByVal data As IntPtr, ByVal callbackData As PlayRecordCallback) As Boolean\n\n        Dim dataArray As Byte() = Nothing\n        If data &lt;&gt; IntPtr.Zero Then\n\n            &#39; Copy the unmanaged record to a managed byte buffer \n            &#39; that can be used by PlayRecord.\n            dataArray = New Byte(dataSize) {}\n            Marshal.Copy(data, dataArray, 0, dataSize)\n        End If\n\n        metafile1.PlayRecord(recordType, flags, dataSize, dataArray)\n        Return True\n\n    End Function\n    \n    Shared Sub Main() \n        Application.Run(New Form1())\n    End Sub\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point___System_Drawing_Graphics_EnumerateMetafileProc_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records in the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified parallelogram.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of three <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that define a parallelogram that determines the size and location of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls<a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_PointF_System_Drawing_Graphics_EnumerateMetafileProc_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records in the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display at a specified point.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoint</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure that specifies the location of the upper-left corner of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls<a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the<a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_PointF___System_Drawing_Graphics_EnumerateMetafileProc_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records in the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified parallelogram.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that define a parallelogram that determines the size and location of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls<a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.  </p>\n<p> The <code>destPoints</code> parameter specifies three points of a parallelogram. The three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram. The fourth point is extrapolated from the first three to form a parallelogram. The drawn metafile is scaled and sheared to fit the parallelogram.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Rectangle_System_Drawing_Graphics_EnumerateMetafileProc_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records of the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified rectangle.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Graphics.EnumerateMetafileProc callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the location and size of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_RectangleF_System_Drawing_Graphics_EnumerateMetafileProc_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records of the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified rectangle.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.Graphics.EnumerateMetafileProc callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the location and size of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records in the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display at a specified point.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoint</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure that specifies the location of the upper-left corner of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Internal pointer that is required, but ignored. You can pass <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> for this parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_\" data-linktype=\"relative-path\">EnumerateMetafile</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point___System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records in the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified parallelogram.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of three <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that define a parallelogram that determines the size and location of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Internal pointer that is required, but ignored. You can pass <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> for this parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_PointF_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records in the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display at a specified point.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoint</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure that specifies the location of the upper-left corner of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Internal pointer that is required, but ignored. You can pass <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> for this parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls<a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_PointF___System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records in the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified parallelogram.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that define a parallelogram that determines the size and location of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Internal pointer that is required, but ignored. You can pass <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> for this parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.  </p>\n<p> The <code>destPoints</code> parameter specifies three points of a parallelogram. The three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram. The fourth point is extrapolated from the first three to form a parallelogram. The drawn metafile is scaled and sheared to fit the parallelogram.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Rectangle_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records of the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified rectangle.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the location and size of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Internal pointer that is required, but ignored. You can pass <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> for this parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls<a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_RectangleF_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records of the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified rectangle.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the location and size of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Internal pointer that is required, but ignored. You can pass <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> for this parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_System_Drawing_Imaging_ImageAttributes_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records in the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display at a specified point using specified image attributes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoint</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure that specifies the location of the upper-left corner of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Internal pointer that is required, but ignored. You can pass <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> for this parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a> that specifies image attribute information for the drawn image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Rectangle_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records in a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display at a specified point.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoint</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure that specifies the location of the upper-left corner of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <code>srcRect</code> parameter contains.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point___System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_System_Drawing_Imaging_ImageAttributes_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records in the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of three <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that define a parallelogram that determines the size and location of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Internal pointer that is required, but ignored. You can pass <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> for this parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a> that specifies image attribute information for the drawn image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls<a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.  </p>\n<p> The <code>destPoints</code> parameter specifies three points of a parallelogram. The three <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram. The fourth point is extrapolated from the first three to form a parallelogram. The drawn metafile is scaled and sheared to fit the parallelogram.  </p>\n<p> The image attributes specified by the <code>imageAttr</code> parameter replace those specified when the metafile was written.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point___System_Drawing_Rectangle_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records in a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified parallelogram.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of three <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that define a parallelogram that determines the size and location of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <code>srcRect</code> parameter contains.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls<a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.  </p>\n<p> The <code>destPoints</code> parameter specifies three points of a parallelogram. The three <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram. The fourth point is extrapolated from the first three to form a parallelogram. The drawn metafile is scaled and sheared to fit the parallelogram.  </p>\n<p> Any drawing that takes place outside of the rectangle specified by the <code>srcRect</code> parameter is ignored.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_PointF_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_System_Drawing_Imaging_ImageAttributes_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records in the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display at a specified point using specified image attributes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoint</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure that specifies the location of the upper-left corner of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Internal pointer that is required, but ignored. You can pass <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> for this parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a> that specifies image attribute information for the drawn image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls<a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.  </p>\n<p> The image attributes specified by the <code>imageAttr</code> parameter replace those specified when the metafile was written.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_PointF_System_Drawing_RectangleF_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records in a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display at a specified point.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoint</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure that specifies the location of the upper-left corner of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <code>srcRect</code> parameter contains.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.  </p>\n<p> Any drawing that takes place outside of the rectangle specified by the <code>srcRect</code> parameter is ignored.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_PointF___System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_System_Drawing_Imaging_ImageAttributes_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records in the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that define a parallelogram that determines the size and location of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Internal pointer that is required, but ignored. You can pass <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> for this parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a> that specifies image attribute information for the drawn image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls<a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.  </p>\n<p> The <code>destPoints</code> parameter specifies three points of a parallelogram. The three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram. The fourth point is extrapolated from the first three to form a parallelogram. The drawn metafile is scaled and sheared to fit the parallelogram.  </p>\n<p> The image attributes specified by the <code>imageAttr</code> parameter replace those specified when the metafile was written.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_PointF___System_Drawing_RectangleF_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records in a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified parallelogram.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that define a parallelogram that determines the size and location of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structures that specifies the portion of the metafile, relative to its upper-left corner, to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <code>srcRect</code> parameter contains.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls<a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.  </p>\n<p> The <code>destPoints</code> parameter specifies three points of a parallelogram. The three <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram. The fourth point is extrapolated from the first three to form a parallelogram. The drawn metafile is scaled and sheared to fit the parallelogram.  </p>\n<p> Any drawing that takes place outside of the rectangle specified by the <code>srcRect</code> parameter is ignored.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Rectangle_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_System_Drawing_Imaging_ImageAttributes_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records of the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the location and size of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Internal pointer that is required, but ignored. You can pass <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> for this parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a> that specifies image attribute information for the drawn image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.  </p>\n<p> The image attributes specified by the <code>imageAttr</code> parameter replace those specified when the metafile was written.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Rectangle_System_Drawing_Rectangle_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records of a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified rectangle.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the location and size of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <code>srcRect</code> parameter contains.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls<a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.  </p>\n<p> Any drawing that takes place outside of the rectangle specified by the <code>srcRect</code> parameter is ignored.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_RectangleF_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_System_Drawing_Imaging_ImageAttributes_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records of the specified <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the location and size of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Internal pointer that is required, but ignored. You can pass <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> for this parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a> that specifies image attribute information for the drawn image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.  </p>\n<p> The image attributes specified by the <code>imageAttr</code> parameter replace those specified when the metafile was written.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_RectangleF_System_Drawing_RectangleF_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records of a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified rectangle.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the location and size of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <code>srcRect</code> parameter contains.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.  </p>\n<p> Any drawing that takes place outside of the rectangle specified by the <code>srcRect</code> parameter is ignored.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Rectangle_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records in a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display at a specified point.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoint</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure that specifies the location of the upper-left corner of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <code>srcRect</code> parameter contains.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Internal pointer that is required, but ignored. You can pass <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> for this parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls<a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point___System_Drawing_Rectangle_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records in a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified parallelogram.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of three <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that define a parallelogram that determines the size and location of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <code>srcRect</code> parameter contains.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Internal pointer that is required, but ignored. You can pass <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> for this parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls<a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.  </p>\n<p> The <code>destPoints</code> parameter specifies three points of a parallelogram. The three <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram. The fourth point is extrapolated from the first three to form a parallelogram. The drawn metafile is scaled and sheared to fit the parallelogram.  </p>\n<p> Any drawing that takes place outside of the rectangle specified by the <code>srcRect</code> parameter is ignored.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_PointF_System_Drawing_RectangleF_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records in a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display at a specified point.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoint</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure that specifies the location of the upper-left corner of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <code>srcRect</code> parameter contains.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Internal pointer that is required, but ignored. You can pass <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> for this parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls<a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.  </p>\n<p> Any drawing that takes place outside of the rectangle specified by the <code>srcRect</code> parameter is ignored.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_PointF___System_Drawing_RectangleF_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records in a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified parallelogram.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that define a parallelogram that determines the size and location of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <code>srcRect</code> parameter contains.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Internal pointer that is required, but ignored. You can pass <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> for this parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls<a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.  </p>\n<p> The <code>destPoints</code> parameter specifies three points of a parallelogram. The three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram. The fourth point is extrapolated from the first three to form a parallelogram. The drawn metafile is scaled and sheared to fit the parallelogram.  </p>\n<p> Any drawing that takes place outside of the rectangle specified by the <code>srcRect</code> parameter is ignored.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Rectangle_System_Drawing_Rectangle_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records of a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified rectangle.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the location and size of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <code>srcRect</code> parameter contains.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Internal pointer that is required, but ignored. You can pass <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> for this parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.  </p>\n<p> Any drawing that takes place outside of the rectangle specified by the <code>srcRect</code> parameter is ignored.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_RectangleF_System_Drawing_RectangleF_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records of a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified rectangle.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the location and size of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <code>srcRect</code> parameter contains.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Internal pointer that is required, but ignored. You can pass <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> for this parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the<code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.  </p>\n<p> Any drawing that takes place outside of the rectangle specified by the <code>srcRect</code> parameter is ignored.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Rectangle_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_System_Drawing_Imaging_ImageAttributes_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records in a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display at a specified point using specified image attributes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoint</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure that specifies the location of the upper-left corner of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>unit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <code>srcRect</code> parameter contains.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Internal pointer that is required, but ignored. You can pass <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> for this parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a> that specifies image attribute information for the drawn image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls<a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point___System_Drawing_Rectangle_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_System_Drawing_Imaging_ImageAttributes_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records in a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of three <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that define a parallelogram that determines the size and location of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>unit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <code>srcRect</code> parameter contains.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Internal pointer that is required, but ignored. You can pass <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> for this parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a> that specifies image attribute information for the drawn image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls<a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.  </p>\n<p> The <code>destPoints</code> parameter specifies three points of a parallelogram. The three <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram. The fourth point is extrapolated from the first three to form a parallelogram. The drawn metafile is scaled and sheared to fit the parallelogram.  </p>\n<p> Any drawing that takes place outside of the rectangle specified by the <code>srcRect</code> parameter is ignored.  </p>\n<p> The image attributes specified by the <code>imageAttr</code> parameter replace those specified when the metafile was written.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_PointF_System_Drawing_RectangleF_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_System_Drawing_Imaging_ImageAttributes_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records in a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display at a specified point using specified image attributes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoint</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure that specifies the location of the upper-left corner of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>unit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <code>srcRect</code> parameter contains.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Internal pointer that is required, but ignored. You can pass <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> for this parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a> that specifies image attribute information for the drawn image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls<a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.  </p>\n<p> Any drawing that takes place outside of the rectangle specified by the <code>srcRect</code> parameter is ignored.  </p>\n<p> The image attributes specified by the <code>imageAttr</code> parameter replace those specified when the metafile was written.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_PointF___System_Drawing_RectangleF_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_System_Drawing_Imaging_ImageAttributes_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records in a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that define a parallelogram that determines the size and location of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>unit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <code>srcRect</code> parameter contains.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Internal pointer that is required, but ignored. You can pass <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> for this parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a> that specifies image attribute information for the drawn image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls<a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.  </p>\n<p> The <code>destPoints</code> parameter specifies three points of a parallelogram. The three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram. The fourth point is extrapolated from the first three to form a parallelogram. The drawn metafile is scaled and sheared to fit the parallelogram.  </p>\n<p> Any drawing that takes place outside of the rectangle specified by the <code>srcRect</code> parameter is ignored.  </p>\n<p> The image attributes specified by the <code>imageAttr</code> parameter replace those specified when the metafile was written.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Rectangle_System_Drawing_Rectangle_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_System_Drawing_Imaging_ImageAttributes_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records of a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the location and size of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>unit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <code>srcRect</code> parameter contains.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Internal pointer that is required, but ignored. You can pass <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> for this parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a> that specifies image attribute information for the drawn image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls<a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.  </p>\n<p> Any drawing that takes place outside of the rectangle specified by the <code>srcRect</code> parameter is ignored.  </p>\n<p> The image attributes specified by the <code>imageAttr</code> parameter replace those specified when the metafile was written.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_RectangleF_System_Drawing_RectangleF_System_Drawing_GraphicsUnit_System_Drawing_Graphics_EnumerateMetafileProc_System_IntPtr_System_Drawing_Imaging_ImageAttributes_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_EnumerateMetafile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the records of a selected rectangle from a <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metafile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> to enumerate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the location and size of the drawn metafile.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>unit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <code>srcRect</code> parameter contains.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics.enumeratemetafileproc\" data-linktype=\"relative-path\">Graphics+EnumerateMetafileProc</a> delegate that specifies the method to which the metafile records are sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Internal pointer that is required, but ignored. You can pass <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> for this parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.imaging.imageattributes\" data-linktype=\"relative-path\">ImageAttributes</a> that specifies image attribute information for the drawn image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enumerates the records contained in the specified metafile. Each record is individually sent to a callback method specified by the <code>callback</code> parameter. Typically, the callback method calls the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method to &quot;play back&quot;, or draw, the record.  </p>\n<p> If the callback method calls <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a>, it must do so by calling the <a class=\"xref\" href=\"system.drawing.imaging.metafile#System_Drawing_Imaging_Metafile_PlayRecord_\" data-linktype=\"relative-path\">PlayRecord</a> method of the specific <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a> that is being enumerated.  </p>\n<p> Any drawing that takes place outside of the rectangle specified by the <code>srcRect</code> parameter is ignored.  </p>\n<p> The image attributes specified by the <code>imageAttr</code> parameter replace those specified when the metafile was written.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EnumerateMetafile_System_Drawing_Imaging_Metafile_System_Drawing_Point_System_Drawing_Graphics_EnumerateMetafileProc_\" data-linktype=\"relative-path\">EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_ExcludeClip_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_ExcludeClip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExcludeClip(Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Updates the clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to exclude the area specified by a <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ExcludeClip (System.Drawing.Rectangle rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the rectangle to exclude from the clip region.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method excludes the area specified by the <code>rect</code> parameter from the current clip region and assigns the resulting area to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Clip_\" data-linktype=\"relative-path\">Clip</a> property of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a 100 pixel by 100 pixel rectangle whose upper-left corner is at the coordinate (100, 100).  </p>\n</li>\n<li><p>Creates a region defined by the rectangle.  </p>\n</li>\n<li><p>Sets the clipping region to exclude the rectangular region.  </p>\n</li>\n<li><p>Fills a 300 pixel by 300 pixel rectangle whose upper-left corner is at the coordinate (0, 0) with a solid blue brush.  </p>\n<p>The result is a blue rectangle with a square region toward its lower-right corner missing.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#92\">public:\n   void ExcludeClipRectangle( PaintEventArgs^ e )\n   {\n      // Create rectangle for exclusion.\n      Rectangle excludeRect = Rectangle(100,100,200,200);\n\n      // Set clipping region to exclude rectangle.\n      e-&gt;Graphics-&gt;ExcludeClip( excludeRect );\n\n      // Fill large rectangle to show clipping region.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Blue ), 0, 0, 300, 300 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#92\">        public void ExcludeClipRectangle(PaintEventArgs e)\n        {\n                     \n            // Create rectangle for exclusion.\n            Rectangle excludeRect = new Rectangle(100, 100, 200, 200);\n                     \n            // Set clipping region to exclude rectangle.\n            e.Graphics.ExcludeClip(excludeRect);\n                     \n            // Fill large rectangle to show clipping region.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Blue), 0, 0, 300, 300);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#92\">    Public Sub ExcludeClipRectangle(ByVal e As PaintEventArgs)\n\n        &#39; Create rectangle for exclusion.\n        Dim excludeRect As New Rectangle(100, 100, 200, 200)\n\n        &#39; Set clipping region to exclude rectangle.\n        e.Graphics.ExcludeClip(excludeRect)\n\n        &#39; Fill large rectangle to show clipping region.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Blue), 0, 0, _\n        300, 300)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_ExcludeClip_System_Drawing_Region_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_ExcludeClip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExcludeClip(Region)</div>        \r\n          </div>\r\n    \r\n            <p>Updates the clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to exclude the area specified by a <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ExcludeClip (System.Drawing.Region region);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>region</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> that specifies the region to exclude from the clip region.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method excludes the area specified by the <code>region</code> parameter from the current clip region and assigns the resulting area to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Clip_\" data-linktype=\"relative-path\">Clip</a> property of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a 100 pixel by 100 pixel rectangle whose upper-left corner is at the coordinate (100, 100).  </p>\n</li>\n<li><p>Sets the clipping region to exclude the rectangle.  </p>\n</li>\n<li><p>Fills a 300 pixel by 300 pixel rectangle whose upper-left corner is at the coordinate (0, 0) with a solid blue brush.  </p>\n<p>The result is a blue rectangle with a square area toward its lower-right corner missing.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#91\">public:\n   void ExcludeClipRegion( PaintEventArgs^ e )\n   {\n      // Create rectangle for region.\n      Rectangle excludeRect = Rectangle(100,100,200,200);\n\n      // Create region for exclusion.\n      System::Drawing::Region^ excludeRegion = gcnew System::Drawing::Region( excludeRect );\n\n      // Set clipping region to exclude region.\n      e-&gt;Graphics-&gt;ExcludeClip( excludeRegion );\n\n      // Fill large rectangle to show clipping region.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Blue ), 0, 0, 300, 300 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#91\">        public void ExcludeClipRegion(PaintEventArgs e)\n        {\n                     \n            // Create rectangle for region.\n            Rectangle excludeRect = new Rectangle(100, 100, 200, 200);\n                     \n            // Create region for exclusion.\n            Region excludeRegion = new Region(excludeRect);\n                     \n            // Set clipping region to exclude region.\n            e.Graphics.ExcludeClip(excludeRegion);\n                     \n            // Fill large rectangle to show clipping region.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Blue), 0, 0, 300, 300);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#91\">    Public Sub ExcludeClipRegion(ByVal e As PaintEventArgs)\n\n        &#39; Create rectangle for region.\n        Dim excludeRect As New Rectangle(100, 100, 200, 200)\n\n        &#39; Create region for exclusion.\n        Dim excludeRegion As New [Region](excludeRect)\n\n        &#39; Set clipping region to exclude region.\n        e.Graphics.ExcludeClip(excludeRegion)\n\n        &#39; Fill large rectangle to show clipping region.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Blue), 0, 0, _\n        300, 300)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillClosedCurve_System_Drawing_Brush_System_Drawing_Point___\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillClosedCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillClosedCurve(Brush,Point[])</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interior of a closed cardinal spline curve defined by an array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.Point[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that define the spline.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method fills the interior of a closed cardinal spline that passes through each point in the array. If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.  </p>\n<p> The array of points must contain at least four <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.  </p>\n<p> This method uses a default tension of 0.5.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a solid red brush.  </p>\n</li>\n<li><p>Creates an array of four points to define a spline.  </p>\n</li>\n<li><p>Fills the curve on the screen.  </p>\n<p>The curve has a default tension of 0.5.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#93\">public:\n   void FillClosedCurvePoint( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ redBrush = gcnew SolidBrush( Color::Red );\n\n      //Create array of points for curve.\n      Point point1 = Point(100,100);\n      Point point2 = Point(200,50);\n      Point point3 = Point(250,200);\n      Point point4 = Point(50,150);\n      array&lt;Point&gt;^ points = {point1,point2,point3,point4};\n\n      // Fill curve on screen.\n      e-&gt;Graphics-&gt;FillClosedCurve( redBrush, points );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#93\">        public void FillClosedCurvePoint(PaintEventArgs e)\n        {\n                     \n            // Create solid brush.\n            SolidBrush redBrush = new SolidBrush(Color.Red);\n                     \n            //Create array of points for curve.\n            Point point1 = new Point(100, 100);\n            Point point2 = new Point(200,  50);\n            Point point3 = new Point(250, 200);\n            Point point4 = new Point(50, 150);\n            Point[] points = {point1, point2, point3, point4};\n                     \n            // Fill curve on screen.\n            e.Graphics.FillClosedCurve(redBrush, points);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#93\">    Public Sub FillClosedCurvePoint(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim redBrush As New SolidBrush(Color.Red)\n\n        &#39;Create array of points for curve.\n        Dim point1 As New Point(100, 100)\n        Dim point2 As New Point(200, 50)\n        Dim point3 As New Point(250, 200)\n        Dim point4 As New Point(50, 150)\n        Dim points As Point() = {point1, point2, point3, point4}\n\n        &#39; Fill curve on screen.\n        e.Graphics.FillClosedCurve(redBrush, points)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillClosedCurve_System_Drawing_Brush_System_Drawing_PointF___\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillClosedCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillClosedCurve(Brush,PointF[])</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interior of a closed cardinal spline curve defined by an array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.PointF[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that define the spline.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method fills the interior of a closed cardinal spline that passes through each point in the array. If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.  </p>\n<p> The array of points must contain at least four <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures.  </p>\n<p> This method uses a default tension of 0.5.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a solid red brush.  </p>\n</li>\n<li><p>Creates an array of four points to define a spline.  </p>\n</li>\n<li><p>Fills the curve on the screen.  </p>\n<p>The curve has a default tension of 0.5.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#96\">public:\n   void FillClosedCurvePointF( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ redBrush = gcnew SolidBrush( Color::Red );\n\n      //Create array of points for curve.\n      PointF point1 = PointF(100.0F,100.0F);\n      PointF point2 = PointF(200.0F,50.0F);\n      PointF point3 = PointF(250.0F,200.0F);\n      PointF point4 = PointF(50.0F,150.0F);\n      array&lt;PointF&gt;^ points = {point1,point2,point3,point4};\n\n      // Fill curve on screen.\n      e-&gt;Graphics-&gt;FillClosedCurve( redBrush, points );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#96\">        public void FillClosedCurvePointF(PaintEventArgs e)\n        {\n                     \n            // Create solid brush.\n            SolidBrush redBrush = new SolidBrush(Color.Red);\n                     \n            //Create array of points for curve.\n            PointF point1 = new PointF(100.0F, 100.0F);\n            PointF point2 = new PointF(200.0F,  50.0F);\n            PointF point3 = new PointF(250.0F, 200.0F);\n            PointF point4 = new PointF(50.0F, 150.0F);\n            PointF[] points = {point1, point2, point3, point4};\n                     \n            // Fill curve on screen.\n            e.Graphics.FillClosedCurve(redBrush, points);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#96\">    Public Sub FillClosedCurvePointF(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim redBrush As New SolidBrush(Color.Red)\n\n        &#39;Create array of points for curve.\n        Dim point1 As New PointF(100.0F, 100.0F)\n        Dim point2 As New PointF(200.0F, 50.0F)\n        Dim point3 As New PointF(250.0F, 200.0F)\n        Dim point4 As New PointF(50.0F, 150.0F)\n        Dim points As PointF() = {point1, point2, point3, point4}\n\n        &#39; Fill curve on screen.\n        e.Graphics.FillClosedCurve(redBrush, points)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillClosedCurve_System_Drawing_Brush_System_Drawing_Point___System_Drawing_Drawing2D_FillMode_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillClosedCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillClosedCurve(Brush,Point[],FillMode)</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interior of a closed cardinal spline curve defined by an array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures using the specified fill mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.Point[] points, System.Drawing.Drawing2D.FillMode fillmode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that define the spline.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fillmode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a> enumeration that determines how the curve is filled.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method fills the interior of a closed cardinal spline that passes through each point in the array. If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.  </p>\n<p> The array of points must contain at least four <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.  </p>\n<p> This method uses a default tension of 0.5.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a solid red brush.  </p>\n</li>\n<li><p>Creates an array of four points to define a spline.  </p>\n</li>\n<li><p>Sets the fill mode to <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a>.  </p>\n</li>\n<li><p>Fills the curve on the screen.  </p>\n<p>The curve has a default tension of 0.5.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#94\">public:\n   void FillClosedCurvePointFillMode( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ redBrush = gcnew SolidBrush( Color::Red );\n\n      //Create array of points for curve.\n      Point point1 = Point(100,100);\n      Point point2 = Point(200,50);\n      Point point3 = Point(250,200);\n      Point point4 = Point(50,150);\n      array&lt;Point&gt;^ points = {point1,point2,point3,point4};\n\n      // Set fill mode.\n      FillMode newFillMode = FillMode::Winding;\n\n      // Fill curve on screen.\n      e-&gt;Graphics-&gt;FillClosedCurve( redBrush, points, newFillMode );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#94\">        public void FillClosedCurvePointFillMode(PaintEventArgs e)\n        {\n                     \n            // Create solid brush.\n            SolidBrush redBrush = new SolidBrush(Color.Red);\n                     \n            //Create array of points for curve.\n            Point point1 = new Point(100, 100);\n            Point point2 = new Point(200,  50);\n            Point point3 = new Point(250, 200);\n            Point point4 = new Point(50, 150);\n            Point[] points = {point1, point2, point3, point4};\n                     \n            // Set fill mode.\n            FillMode newFillMode = FillMode.Winding;\n                     \n            // Fill curve on screen.\n            e.Graphics.FillClosedCurve(redBrush, points, newFillMode);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#94\">    Public Sub FillClosedCurvePointFillMode(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim redBrush As New SolidBrush(Color.Red)\n\n        &#39;Create array of points for curve.\n        Dim point1 As New Point(100, 100)\n        Dim point2 As New Point(200, 50)\n        Dim point3 As New Point(250, 200)\n        Dim point4 As New Point(50, 150)\n        Dim points As Point() = {point1, point2, point3, point4}\n\n        &#39; Set fill mode.\n        Dim newFillMode As FillMode = FillMode.Winding\n\n        &#39; Fill curve on screen.\n        e.Graphics.FillClosedCurve(redBrush, points, newFillMode)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillClosedCurve_System_Drawing_Brush_System_Drawing_PointF___System_Drawing_Drawing2D_FillMode_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillClosedCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillClosedCurve(Brush,PointF[],FillMode)</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interior of a closed cardinal spline curve defined by an array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures using the specified fill mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.PointF[] points, System.Drawing.Drawing2D.FillMode fillmode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that define the spline.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fillmode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a> enumeration that determines how the curve is filled.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method fills the interior of a closed cardinal spline that passes through each point in the array. If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.  </p>\n<p> The array of points must contain at least four <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.  </p>\n<p> This method uses a default tension of 0.5.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a solid red brush.  </p>\n</li>\n<li><p>Creates an array of four points to define a spline.  </p>\n</li>\n<li><p>Sets the fill mode to <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a>.  </p>\n</li>\n<li><p>Fills the curve on the screen.  </p>\n<p>The curve has a default tension of 0.5.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#97\">public:\n   void FillClosedCurvePointFFillMode( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ redBrush = gcnew SolidBrush( Color::Red );\n\n      // Create array of points for curve.\n      PointF point1 = PointF(100.0F,100.0F);\n      PointF point2 = PointF(200.0F,50.0F);\n      PointF point3 = PointF(250.0F,200.0F);\n      PointF point4 = PointF(50.0F,150.0F);\n      array&lt;PointF&gt;^ points = {point1,point2,point3,point4};\n\n      // Set fill mode.\n      FillMode newFillMode = FillMode::Winding;\n\n      // Fill curve on screen.\n      e-&gt;Graphics-&gt;FillClosedCurve( redBrush, points, newFillMode );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#97\">        public void FillClosedCurvePointFFillMode(PaintEventArgs e)\n        {\n                     \n            // Create solid brush.\n            SolidBrush redBrush = new SolidBrush(Color.Red);\n                     \n            // Create array of points for curve.\n            PointF point1 = new PointF(100.0F, 100.0F);\n            PointF point2 = new PointF(200.0F,  50.0F);\n            PointF point3 = new PointF(250.0F, 200.0F);\n            PointF point4 = new PointF(50.0F, 150.0F);\n            PointF[] points = {point1, point2, point3, point4};\n                     \n            // Set fill mode.\n            FillMode newFillMode = FillMode.Winding;\n                     \n            // Fill curve on screen.\n            e.Graphics.FillClosedCurve(redBrush, points, newFillMode);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#97\">    Public Sub FillClosedCurvePointFFillMode(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim redBrush As New SolidBrush(Color.Red)\n\n        &#39; Create array of points for curve.\n        Dim point1 As New PointF(100.0F, 100.0F)\n        Dim point2 As New PointF(200.0F, 50.0F)\n        Dim point3 As New PointF(250.0F, 200.0F)\n        Dim point4 As New PointF(50.0F, 150.0F)\n        Dim points As PointF() = {point1, point2, point3, point4}\n\n        &#39; Set fill mode.\n        Dim newFillMode As FillMode = FillMode.Winding\n\n        &#39; Fill curve on screen.\n        e.Graphics.FillClosedCurve(redBrush, points, newFillMode)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillClosedCurve_System_Drawing_Brush_System_Drawing_Point___System_Drawing_Drawing2D_FillMode_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillClosedCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillClosedCurve(Brush,Point[],FillMode,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interior of a closed cardinal spline curve defined by an array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures using the specified fill mode and tension.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.Point[] points, System.Drawing.Drawing2D.FillMode fillmode, float tension);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that define the spline.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fillmode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a> enumeration that determines how the curve is filled.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>tension</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Value greater than or equal to 0.0F that specifies the tension of the curve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method fills the interior of a closed cardinal spline that passes through each point in the array. If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.  </p>\n<p> The array of points must contain at least four <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.  </p>\n<p> The <code>tension</code> parameter determines the shape of the spline. If the value of the <code>tension</code> parameter is 0.0F, this method draws straight line segments to connect the points. Usually, the <code>tension</code> parameter is less than or equal to 1.0F. Values over 1.0F produce unusual results.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a solid red brush.  </p>\n</li>\n<li><p>Creates an array of four points to define a spline.  </p>\n</li>\n<li><p>Sets the fill mode to <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a>.  </p>\n</li>\n<li><p>Sets the tension to 1.0.  </p>\n</li>\n<li><p>Fills the curve on the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#95\">public:\n   void FillClosedCurvePointFillModeTension( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ redBrush = gcnew SolidBrush( Color::Red );\n\n      // Create array of points for curve.\n      Point point1 = Point(100,100);\n      Point point2 = Point(200,50);\n      Point point3 = Point(250,200);\n      Point point4 = Point(50,150);\n      array&lt;Point&gt;^ points = {point1,point2,point3,point4};\n\n      // Set fill mode.\n      FillMode newFillMode = FillMode::Winding;\n\n      // Set tension.\n      float tension = 1.0F;\n\n      // Fill curve on screen.\n      e-&gt;Graphics-&gt;FillClosedCurve( redBrush, points, newFillMode, tension );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#95\">        public void FillClosedCurvePointFillModeTension(PaintEventArgs e)\n        {\n                     \n            // Create solid brush.\n            SolidBrush redBrush = new SolidBrush(Color.Red);\n                     \n            // Create array of points for curve.\n            Point point1 = new Point(100, 100);\n            Point point2 = new Point(200,  50);\n            Point point3 = new Point(250, 200);\n            Point point4 = new Point(50, 150);\n            Point[] points = {point1, point2, point3, point4};\n                     \n            // Set fill mode.\n            FillMode newFillMode = FillMode.Winding;\n                     \n            // Set tension.\n            float tension = 1.0F;\n                     \n            // Fill curve on screen.\n            e.Graphics.FillClosedCurve(redBrush, points, newFillMode, tension);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#95\">    Public Sub FillClosedCurvePointFillModeTension(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim redBrush As New SolidBrush(Color.Red)\n\n        &#39; Create array of points for curve.\n        Dim point1 As New Point(100, 100)\n        Dim point2 As New Point(200, 50)\n        Dim point3 As New Point(250, 200)\n        Dim point4 As New Point(50, 150)\n        Dim points As Point() = {point1, point2, point3, point4}\n\n        &#39; Set fill mode.\n        Dim newFillMode As FillMode = FillMode.Winding\n\n        &#39; Set tension.\n        Dim tension As Single = 1.0F\n\n        &#39; Fill curve on screen.\n        e.Graphics.FillClosedCurve(redBrush, points, newFillMode, tension)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillClosedCurve_System_Drawing_Brush_System_Drawing_PointF___System_Drawing_Drawing2D_FillMode_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillClosedCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillClosedCurve(Brush,PointF[],FillMode,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interior of a closed cardinal spline curve defined by an array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures using the specified fill mode and tension.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.PointF[] points, System.Drawing.Drawing2D.FillMode fillmode, float tension);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that define the spline.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fillmode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a> enumeration that determines how the curve is filled.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>tension</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Value greater than or equal to 0.0F that specifies the tension of the curve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method fills the interior of a closed cardinal spline that passes through each point in the array. If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.  </p>\n<p> The array of points must contain at least four <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.  </p>\n<p> The <code>tension</code> parameter determines the shape of the spline. If the value of the <code>tension</code> parameter is 0.0F, this method draws straight line segments to connect the points. Usually, the <code>tension</code> parameter is less than or equal to 1.0F. Values over 1.0F produce unusual results.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a solid red brush.  </p>\n</li>\n<li><p>Creates an array of four points to define a spline.  </p>\n</li>\n<li><p>Sets the fill mode to <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a>.  </p>\n</li>\n<li><p>Sets the tension to 1.0.  </p>\n</li>\n<li><p>Fills the curve on the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#98\">public:\n   void FillClosedCurvePointFFillModeTension( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ redBrush = gcnew SolidBrush( Color::Red );\n\n      // Create array of points for curve.\n      PointF point1 = PointF(100.0F,100.0F);\n      PointF point2 = PointF(200.0F,50.0F);\n      PointF point3 = PointF(250.0F,200.0F);\n      PointF point4 = PointF(50.0F,150.0F);\n      array&lt;PointF&gt;^ points = {point1,point2,point3,point4};\n\n      // Set fill mode.\n      FillMode newFillMode = FillMode::Winding;\n\n      // Set tension.\n      float tension = 1.0F;\n\n      // Fill curve on screen.\n      e-&gt;Graphics-&gt;FillClosedCurve( redBrush, points, newFillMode, tension );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#98\">        public void FillClosedCurvePointFFillModeTension(PaintEventArgs e)\n        {\n                     \n            // Create solid brush.\n            SolidBrush redBrush = new SolidBrush(Color.Red);\n                     \n            // Create array of points for curve.\n            PointF point1 = new PointF(100.0F, 100.0F);\n            PointF point2 = new PointF(200.0F,  50.0F);\n            PointF point3 = new PointF(250.0F, 200.0F);\n            PointF point4 = new PointF(50.0F, 150.0F);\n            PointF[] points = {point1, point2, point3, point4};\n                     \n            // Set fill mode.\n            FillMode newFillMode = FillMode.Winding;\n                     \n            // Set tension.\n            float tension = 1.0F;\n                     \n            // Fill curve on screen.\n            e.Graphics.FillClosedCurve(redBrush, points, newFillMode, tension);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#98\">    Public Sub FillClosedCurvePointFFillModeTension(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim redBrush As New SolidBrush(Color.Red)\n\n        &#39; Create array of points for curve.\n        Dim point1 As New PointF(100.0F, 100.0F)\n        Dim point2 As New PointF(200.0F, 50.0F)\n        Dim point3 As New PointF(250.0F, 200.0F)\n        Dim point4 As New PointF(50.0F, 150.0F)\n        Dim points As PointF() = {point1, point2, point3, point4}\n\n        &#39; Set fill mode.\n        Dim newFillMode As FillMode = FillMode.Winding\n\n        &#39; Set tension.\n        Dim tension As Single = 1.0F\n\n        &#39; Fill curve on screen.\n        e.Graphics.FillClosedCurve(redBrush, points, newFillMode, tension)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillEllipse_System_Drawing_Brush_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillEllipse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillEllipse(Brush,Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interior of an ellipse defined by a bounding rectangle specified by a <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillEllipse (System.Drawing.Brush brush, System.Drawing.Rectangle rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that represents the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method fills the interior of an ellipse with a <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a>. The ellipse is defined by the bounding rectangle represented by the <code>rect</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a solid red brush.  </p>\n</li>\n<li><p>Creates a rectangle that bounds an ellipse.  </p>\n</li>\n<li><p>Fills the ellipse on the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#99\">public:\n   void FillEllipseRectangle( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ redBrush = gcnew SolidBrush( Color::Red );\n\n      // Create rectangle for ellipse.\n      int x = 0;\n      int y = 0;\n      int width = 200;\n      int height = 100;\n      Rectangle rect = Rectangle(x,y,width,height);\n\n      // Fill ellipse on screen.\n      e-&gt;Graphics-&gt;FillEllipse( redBrush, rect );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#99\">        public void FillEllipseRectangle(PaintEventArgs e)\n        {\n                     \n            // Create solid brush.\n            SolidBrush redBrush = new SolidBrush(Color.Red);\n                     \n            // Create rectangle for ellipse.\n            int x = 0;\n            int y = 0;\n            int width = 200;\n            int height = 100;\n            Rectangle rect = new Rectangle(x, y, width, height);\n                     \n            // Fill ellipse on screen.\n            e.Graphics.FillEllipse(redBrush, rect);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#99\">    Public Sub FillEllipseRectangle(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim redBrush As New SolidBrush(Color.Red)\n\n        &#39; Create rectangle for ellipse.\n        Dim x As Integer = 0\n        Dim y As Integer = 0\n        Dim width As Integer = 200\n        Dim height As Integer = 100\n        Dim rect As New Rectangle(x, y, width, height)\n\n        &#39; Fill ellipse on screen.\n        e.Graphics.FillEllipse(redBrush, rect)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillEllipse_System_Drawing_Brush_System_Drawing_RectangleF_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillEllipse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillEllipse(Brush,RectangleF)</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interior of an ellipse defined by a bounding rectangle specified by a <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillEllipse (System.Drawing.Brush brush, System.Drawing.RectangleF rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that represents the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method fills the interior of an ellipse with a <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a>. The ellipse is defined by the bounding rectangle represented by the <code>rect</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a solid red brush.  </p>\n</li>\n<li><p>Creates a rectangle that bounds an ellipse.  </p>\n</li>\n<li><p>Fills the ellipse on the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#100\">public:\n   void FillEllipseRectangleF( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ redBrush = gcnew SolidBrush( Color::Red );\n\n      // Create rectangle for ellipse.\n      float x = 0.0F;\n      float y = 0.0F;\n      float width = 200.0F;\n      float height = 100.0F;\n      RectangleF rect = RectangleF(x,y,width,height);\n\n      // Fill ellipse on screen.\n      e-&gt;Graphics-&gt;FillEllipse( redBrush, rect );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#100\">        public void FillEllipseRectangleF(PaintEventArgs e)\n        {\n                     \n            // Create solid brush.\n            SolidBrush redBrush = new SolidBrush(Color.Red);\n                     \n            // Create rectangle for ellipse.\n            float x = 0.0F;\n            float y = 0.0F;\n            float width = 200.0F;\n            float height = 100.0F;\n            RectangleF rect = new RectangleF(x, y, width, height);\n                     \n            // Fill ellipse on screen.\n            e.Graphics.FillEllipse(redBrush, rect);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#100\">    Public Sub FillEllipseRectangleF(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim redBrush As New SolidBrush(Color.Red)\n\n        &#39; Create rectangle for ellipse.\n        Dim x As Single = 0.0F\n        Dim y As Single = 0.0F\n        Dim width As Single = 200.0F\n        Dim height As Single = 100.0F\n        Dim rect As New RectangleF(x, y, width, height)\n\n        &#39; Fill ellipse on screen.\n        e.Graphics.FillEllipse(redBrush, rect)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillEllipse_System_Drawing_Brush_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillEllipse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillEllipse(Brush,Int32,Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillEllipse (System.Drawing.Brush brush, int x, int y, int width, int height);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method fills the interior of an ellipse with a <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a>. The ellipse is defined by the bounding rectangle represented by the <code>x</code>, <code>y</code>, <code>width</code>, and <code>height</code> parameters.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a solid red brush.  </p>\n</li>\n<li><p>Creates the location and size of a rectangle that bounds an ellipse.  </p>\n</li>\n<li><p>Fills the ellipse on the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#101\">public:\n   void FillEllipseInt( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ redBrush = gcnew SolidBrush( Color::Red );\n\n      // Create location and size of ellipse.\n      int x = 0;\n      int y = 0;\n      int width = 200;\n      int height = 100;\n\n      // Fill ellipse on screen.\n      e-&gt;Graphics-&gt;FillEllipse( redBrush, x, y, width, height );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#101\">        public void FillEllipseInt(PaintEventArgs e)\n        {\n                     \n            // Create solid brush.\n            SolidBrush redBrush = new SolidBrush(Color.Red);\n                     \n            // Create location and size of ellipse.\n            int x = 0;\n            int y = 0;\n            int width = 200;\n            int height = 100;\n                     \n            // Fill ellipse on screen.\n            e.Graphics.FillEllipse(redBrush, x, y, width, height);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#101\">    Public Sub FillEllipseInt(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim redBrush As New SolidBrush(Color.Red)\n\n        &#39; Create location and size of ellipse.\n        Dim x As Integer = 0\n        Dim y As Integer = 0\n        Dim width As Integer = 200\n        Dim height As Integer = 100\n\n        &#39; Fill ellipse on screen.\n        e.Graphics.FillEllipse(redBrush, x, y, width, height)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillEllipse_System_Drawing_Brush_System_Single_System_Single_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillEllipse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillEllipse(Brush,Single,Single,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillEllipse (System.Drawing.Brush brush, float x, float y, float width, float height);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method fills the interior of an ellipse with a <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a>. The ellipse is defined by the bounding rectangle represented by the <code>x</code>, <code>y</code>, <code>width</code>, and <code>height</code> parameters.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a solid red brush.  </p>\n</li>\n<li><p>Creates the location and size of a rectangle that bounds an ellipse.  </p>\n</li>\n<li><p>Fills the ellipse on the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#102\">public:\n   void FillEllipseFloat( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ redBrush = gcnew SolidBrush( Color::Red );\n\n      // Create location and size of ellipse.\n      float x = 0.0F;\n      float y = 0.0F;\n      float width = 200.0F;\n      float height = 100.0F;\n\n      // Fill ellipse on screen.\n      e-&gt;Graphics-&gt;FillEllipse( redBrush, x, y, width, height );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#102\">        public void FillEllipseFloat(PaintEventArgs e)\n        {\n                     \n            // Create solid brush.\n            SolidBrush redBrush = new SolidBrush(Color.Red);\n                     \n            // Create location and size of ellipse.\n            float x = 0.0F;\n            float y = 0.0F;\n            float width = 200.0F;\n            float height = 100.0F;\n                     \n            // Fill ellipse on screen.\n            e.Graphics.FillEllipse(redBrush, x, y, width, height);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#102\">    Public Sub FillEllipseFloat(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim redBrush As New SolidBrush(Color.Red)\n\n        &#39; Create location and size of ellipse.\n        Dim x As Single = 0.0F\n        Dim y As Single = 0.0F\n        Dim width As Single = 200.0F\n        Dim height As Single = 100.0F\n\n        &#39; Fill ellipse on screen.\n        e.Graphics.FillEllipse(redBrush, x, y, width, height)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillPath_System_Drawing_Brush_System_Drawing_Drawing2D_GraphicsPath_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillPath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillPath(Brush,GraphicsPath)</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interior of a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillPath (System.Drawing.Brush brush, System.Drawing.Drawing2D.GraphicsPath path);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> that represents the path to fill.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>path</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> consists of a series of line and curve segments. If the path represented by the <code>path</code> parameter is not closed, an additional segment is added from the last point to the first point to close the path.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a solid red brush.  </p>\n</li>\n<li><p>Creates a graphics path object.  </p>\n</li>\n<li><p>Adds an ellipse to the graphics path.  </p>\n</li>\n<li><p>Fills the path on the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#103\">public:\n   void FillPathEllipse( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ redBrush = gcnew SolidBrush( Color::Red );\n\n      // Create graphics path object and add ellipse.\n      GraphicsPath^ graphPath = gcnew GraphicsPath;\n      graphPath-&gt;AddEllipse( 0, 0, 200, 100 );\n\n      // Fill graphics path to screen.\n      e-&gt;Graphics-&gt;FillPath( redBrush, graphPath );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#103\">        public void FillPathEllipse(PaintEventArgs e)\n        {\n                     \n            // Create solid brush.\n            SolidBrush redBrush = new SolidBrush(Color.Red);\n                     \n            // Create graphics path object and add ellipse.\n            GraphicsPath graphPath = new GraphicsPath();\n            graphPath.AddEllipse(0, 0, 200, 100);\n                     \n            // Fill graphics path to screen.\n            e.Graphics.FillPath(redBrush, graphPath);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#103\">    Public Sub FillPathEllipse(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim redBrush As New SolidBrush(Color.Red)\n\n        &#39; Create graphics path object and add ellipse.\n        Dim graphPath As New GraphicsPath\n        graphPath.AddEllipse(0, 0, 200, 100)\n\n        &#39; Fill graphics path to screen.\n        e.Graphics.FillPath(redBrush, graphPath)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillPie_System_Drawing_Brush_System_Drawing_Rectangle_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillPie_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillPie(Brush,Rectangle,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interior of a pie section defined by an ellipse specified by a <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure and two radial lines.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillPie (System.Drawing.Brush brush, System.Drawing.Rectangle rect, float startAngle, float sweepAngle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that represents the bounding rectangle that defines the ellipse from which the pie section comes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sweepAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Angle in degrees measured clockwise from the <code>startAngle</code> parameter to the second side of the pie section.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method fills the interior of a pie section defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle. The pie section consists of the two radial lines defined by the <code>startAngle</code> and <code>sweepAngle</code> parameters and the arc between the intersections of those radial lines with the ellipse.  </p>\n<p> If the <code>sweepAngle</code> parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a solid red brush.  </p>\n</li>\n<li><p>Creates a rectangle that bounds an ellipse.  </p>\n</li>\n<li><p>Defines the start angle (relative to the x axis) and the sweep angle (both in a clockwise direction).  </p>\n</li>\n<li><p>Fills the pie-shaped area of the ellipse on the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#104\">public:\n   void FillPieRectangle( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ redBrush = gcnew SolidBrush( Color::Red );\n\n      // Create rectangle for ellipse.\n      Rectangle rect = Rectangle(0,0,200,100);\n\n      // Create start and sweep angles.\n      float startAngle = 0.0F;\n      float sweepAngle = 45.0F;\n\n      // Fill pie to screen.\n      e-&gt;Graphics-&gt;FillPie( redBrush, rect, startAngle, sweepAngle );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#104\">        public void FillPieRectangle(PaintEventArgs e)\n        {\n                     \n            // Create solid brush.\n            SolidBrush redBrush = new SolidBrush(Color.Red);\n                     \n            // Create rectangle for ellipse.\n            Rectangle rect = new Rectangle(0, 0, 200, 100);\n                     \n            // Create start and sweep angles.\n            float startAngle =  0.0F;\n            float sweepAngle = 45.0F;\n                     \n            // Fill pie to screen.\n            e.Graphics.FillPie(redBrush, rect, startAngle, sweepAngle);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#104\">    Public Sub FillPieRectangle(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim redBrush As New SolidBrush(Color.Red)\n\n        &#39; Create rectangle for ellipse.\n        Dim rect As New Rectangle(0, 0, 200, 100)\n\n        &#39; Create start and sweep angles.\n        Dim startAngle As Single = 0.0F\n        Dim sweepAngle As Single = 45.0F\n\n        &#39; Fill pie to screen.\n        e.Graphics.FillPie(redBrush, rect, startAngle, sweepAngle)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillPie_System_Drawing_Brush_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillPie_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillPie(Brush,Int32,Int32,Int32,Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillPie (System.Drawing.Brush brush, int x, int y, int width, int height, int startAngle, int sweepAngle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the bounding rectangle that defines the ellipse from which the pie section comes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the bounding rectangle that defines the ellipse from which the pie section comes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sweepAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Angle in degrees measured clockwise from the <code>startAngle</code> parameter to the second side of the pie section.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method fills the interior of a pie section defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle. The pie section consists of the two radial lines defined by the <code>startAngle</code> and <code>sweepAngle</code> parameters and the arc between the intersections of those radial lines with the ellipse.  </p>\n<p> If the <code>sweepAngle</code> parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a solid red brush.  </p>\n</li>\n<li><p>Creates the location and size of a rectangle that bounds an ellipse.  </p>\n</li>\n<li><p>Defines the start angle (relative to the x axis) and the sweep angle (both in a clockwise direction).  </p>\n</li>\n<li><p>Fills the pie-shaped area of the ellipse on the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#105\">public:\n   void FillPieInt( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ redBrush = gcnew SolidBrush( Color::Red );\n\n      // Create location and size of ellipse.\n      int x = 0;\n      int y = 0;\n      int width = 200;\n      int height = 100;\n\n      // Create start and sweep angles.\n      int startAngle = 0;\n      int sweepAngle = 45;\n      \n      // Fill pie to screen.\n      e-&gt;Graphics-&gt;FillPie( redBrush, x, y, width, height, startAngle, sweepAngle );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#105\">        public void FillPieInt(PaintEventArgs e)\n        {\n                     \n            // Create solid brush.\n            SolidBrush redBrush = new SolidBrush(Color.Red);\n                     \n            // Create location and size of ellipse.\n            int x = 0;\n            int y = 0;\n            int width = 200;\n            int height = 100;\n                     \n            // Create start and sweep angles.\n            int startAngle =  0;\n            int sweepAngle = 45;\n                     \n            // Fill pie to screen.\n            e.Graphics.FillPie(redBrush, x, y, width, height, startAngle, sweepAngle);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#105\">    Public Sub FillPieInt(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim redBrush As New SolidBrush(Color.Red)\n\n        &#39; Create location and size of ellipse.\n        Dim x As Integer = 0\n        Dim y As Integer = 0\n        Dim width As Integer = 200\n        Dim height As Integer = 100\n\n        &#39; Create start and sweep angles.\n        Dim startAngle As Integer = 0\n        Dim sweepAngle As Integer = 45\n\n        &#39; Fill pie to screen.\n        e.Graphics.FillPie(redBrush, x, y, width, height, startAngle, _\n        sweepAngle)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillPie_System_Drawing_Brush_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillPie_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillPie(Brush,Single,Single,Single,Single,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillPie (System.Drawing.Brush brush, float x, float y, float width, float height, float startAngle, float sweepAngle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the bounding rectangle that defines the ellipse from which the pie section comes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the bounding rectangle that defines the ellipse from which the pie section comes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sweepAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Angle in degrees measured clockwise from the <code>startAngle</code> parameter to the second side of the pie section.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method fills the interior of a pie section defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle. The pie section consists of the two radial lines defined by the <code>startAngle</code> and <code>sweepAngle</code> parameters, and the arc between the intersections of those radial lines with the ellipse.  </p>\n<p> If the <code>sweepAngle</code> parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a solid red brush.  </p>\n</li>\n<li><p>Creates the location and size of a rectangle that bounds an ellipse.  </p>\n</li>\n<li><p>Defines the start angle (relative to the x axis) and the sweep angle (both in a clockwise direction).  </p>\n</li>\n<li><p>Fills the pie-shaped area of the ellipse on the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#106\">public:\n   void FillPieFloat( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ redBrush = gcnew SolidBrush( Color::Red );\n\n      // Create location and size of ellipse.\n      float x = 0.0F;\n      float y = 0.0F;\n      float width = 200.0F;\n      float height = 100.0F;\n\n      // Create start and sweep angles.\n      float startAngle = 0.0F;\n      float sweepAngle = 45.0F;\n\n      // Fill pie to screen.\n      e-&gt;Graphics-&gt;FillPie( redBrush, x, y, width, height, startAngle, sweepAngle );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#106\">        public void FillPieFloat(PaintEventArgs e)\n        {\n                     \n            // Create solid brush.\n            SolidBrush redBrush = new SolidBrush(Color.Red);\n                     \n            // Create location and size of ellipse.\n            float x = 0.0F;\n            float y = 0.0F;\n            float width = 200.0F;\n            float height = 100.0F;\n                     \n            // Create start and sweep angles.\n            float startAngle =  0.0F;\n            float sweepAngle = 45.0F;\n                     \n            // Fill pie to screen.\n            e.Graphics.FillPie(redBrush, x, y, width, height, startAngle, sweepAngle);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#106\">    Public Sub FillPieFloat(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim redBrush As New SolidBrush(Color.Red)\n\n        &#39; Create location and size of ellipse.\n        Dim x As Single = 0.0F\n        Dim y As Single = 0.0F\n        Dim width As Single = 200.0F\n        Dim height As Single = 100.0F\n\n        &#39; Create start and sweep angles.\n        Dim startAngle As Single = 0.0F\n        Dim sweepAngle As Single = 45.0F\n\n        &#39; Fill pie to screen.\n        e.Graphics.FillPie(redBrush, x, y, width, height, startAngle, _\n        sweepAngle)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillPolygon_System_Drawing_Brush_System_Drawing_Point___\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillPolygon_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillPolygon(Brush,Point[])</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interior of a polygon defined by an array of points specified by <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillPolygon (System.Drawing.Brush brush, System.Drawing.Point[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that represent the vertices of the polygon to fill.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Every two consecutive points in the array specify a side of the polygon. In addition, if the last point and the first point do not coincide, they specify the closing side of the polygon.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a solid blue brush.  </p>\n</li>\n<li><p>Creates an array of seven points to define a polygon.  </p>\n</li>\n<li><p>Fills the polygonal area on the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#107\">public:\n   void FillPolygonPoint( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ blueBrush = gcnew SolidBrush( Color::Blue );\n\n      // Create points that define polygon.\n      Point point1 = Point(50,50);\n      Point point2 = Point(100,25);\n      Point point3 = Point(200,5);\n      Point point4 = Point(250,50);\n      Point point5 = Point(300,100);\n      Point point6 = Point(350,200);\n      Point point7 = Point(250,250);\n      array&lt;Point&gt;^ curvePoints = {point1,point2,point3,point4,point5,point6,point7};\n\n      // Draw polygon to screen.\n      e-&gt;Graphics-&gt;FillPolygon( blueBrush, curvePoints );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#107\">        public void FillPolygonPoint(PaintEventArgs e)\n        {\n\n            // Create solid brush.\n            SolidBrush blueBrush = new SolidBrush(Color.Blue);\n\n            // Create points that define polygon.\n            Point point1 = new Point(50, 50);\n            Point point2 = new Point(100, 25);\n            Point point3 = new Point(200, 5);\n            Point point4 = new Point(250, 50);\n            Point point5 = new Point(300, 100);\n            Point point6 = new Point(350, 200);\n            Point point7 = new Point(250, 250);\n            Point[] curvePoints = {point1, point2, point3, point4, point5, point6, point7};\n\n            // Draw polygon to screen.\n            e.Graphics.FillPolygon(blueBrush, curvePoints);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#107\">    Public Sub FillPolygonPoint(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim blueBrush As New SolidBrush(Color.Blue)\n\n        &#39; Create points that define polygon.\n        Dim point1 As New Point(50, 50)\n        Dim point2 As New Point(100, 25)\n        Dim point3 As New Point(200, 5)\n        Dim point4 As New Point(250, 50)\n        Dim point5 As New Point(300, 100)\n        Dim point6 As New Point(350, 200)\n        Dim point7 As New Point(250, 250)\n        Dim curvePoints As Point() = {point1, point2, point3, point4, _\n        point5, point6, point7}\n\n        &#39; Draw polygon to screen.\n        e.Graphics.FillPolygon(blueBrush, curvePoints)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillPolygon_System_Drawing_Brush_System_Drawing_PointF___\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillPolygon_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillPolygon(Brush,PointF[])</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interior of a polygon defined by an array of points specified by <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillPolygon (System.Drawing.Brush brush, System.Drawing.PointF[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that represent the vertices of the polygon to fill.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Every two consecutive points in the array specify a side of the polygon. In addition, if the last point and the first point do not coincide, they specify the closing side of the polygon.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a solid blue brush.  </p>\n</li>\n<li><p>Creates an array of seven points to define a polygon.  </p>\n</li>\n<li><p>Fills the polygonal area on the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#109\">public:\n   void FillPolygonPointF( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ blueBrush = gcnew SolidBrush( Color::Blue );\n\n      // Create points that define polygon.\n      PointF point1 = PointF(50.0F,50.0F);\n      PointF point2 = PointF(100.0F,25.0F);\n      PointF point3 = PointF(200.0F,5.0F);\n      PointF point4 = PointF(250.0F,50.0F);\n      PointF point5 = PointF(300.0F,100.0F);\n      PointF point6 = PointF(350.0F,200.0F);\n      PointF point7 = PointF(250.0F,250.0F);\n      array&lt;PointF&gt;^ curvePoints = {point1,point2,point3,point4,point5,point6,point7};\n\n      // Fill polygon to screen.\n      e-&gt;Graphics-&gt;FillPolygon( blueBrush, curvePoints );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#109\">        public void FillPolygonPointF(PaintEventArgs e)\n        {\n\n            // Create solid brush.\n            SolidBrush blueBrush = new SolidBrush(Color.Blue);\n\n            // Create points that define polygon.\n            PointF point1 = new PointF(50.0F, 50.0F);\n            PointF point2 = new PointF(100.0F, 25.0F);\n            PointF point3 = new PointF(200.0F, 5.0F);\n            PointF point4 = new PointF(250.0F, 50.0F);\n            PointF point5 = new PointF(300.0F, 100.0F);\n            PointF point6 = new PointF(350.0F, 200.0F);\n            PointF point7 = new PointF(250.0F, 250.0F);\n            PointF[] curvePoints = {point1, point2, point3, point4, point5, point6, point7};\n\n            // Fill polygon to screen.\n            e.Graphics.FillPolygon(blueBrush, curvePoints);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#109\">    Public Sub FillPolygonPointF(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim blueBrush As New SolidBrush(Color.Blue)\n\n        &#39; Create points that define polygon.\n        Dim point1 As New PointF(50.0F, 50.0F)\n        Dim point2 As New PointF(100.0F, 25.0F)\n        Dim point3 As New PointF(200.0F, 5.0F)\n        Dim point4 As New PointF(250.0F, 50.0F)\n        Dim point5 As New PointF(300.0F, 100.0F)\n        Dim point6 As New PointF(350.0F, 200.0F)\n        Dim point7 As New PointF(250.0F, 250.0F)\n        Dim curvePoints As PointF() = {point1, point2, point3, point4, _\n        point5, point6, point7}\n\n        &#39; Fill polygon to screen.\n        e.Graphics.FillPolygon(blueBrush, curvePoints)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillPolygon_System_Drawing_Brush_System_Drawing_Point___System_Drawing_Drawing2D_FillMode_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillPolygon_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillPolygon(Brush,Point[],FillMode)</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interior of a polygon defined by an array of points specified by <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures using the specified fill mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillPolygon (System.Drawing.Brush brush, System.Drawing.Point[] points, System.Drawing.Drawing2D.FillMode fillMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that represent the vertices of the polygon to fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fillMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a> enumeration that determines the style of the fill.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Every two consecutive points in the array specify a side of the polygon. In addition, if the last point and the first point do not coincide, they specify the closing side of the polygon.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a solid blue brush.  </p>\n</li>\n<li><p>Creates an array of seven points to define a polygon.  </p>\n</li>\n<li><p>Sets the fill mode to <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a>.  </p>\n</li>\n<li><p>Fills the polygonal area on the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#108\">public:\n   void FillPolygonPointFillMode( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ blueBrush = gcnew SolidBrush( Color::Blue );\n\n      // Create points that define polygon.\n      Point point1 = Point(50,50);\n      Point point2 = Point(100,25);\n      Point point3 = Point(200,5);\n      Point point4 = Point(250,50);\n      Point point5 = Point(300,100);\n      Point point6 = Point(350,200);\n      Point point7 = Point(250,250);\n      array&lt;Point&gt;^ curvePoints = {point1,point2,point3,point4,point5,point6,point7};\n\n      // Define fill mode.\n      FillMode newFillMode = FillMode::Winding;\n\n      // Draw polygon to screen.\n      e-&gt;Graphics-&gt;FillPolygon( blueBrush, curvePoints, newFillMode );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#108\">        public void FillPolygonPointFillMode(PaintEventArgs e)\n        {\n\n            // Create solid brush.\n            SolidBrush blueBrush = new SolidBrush(Color.Blue);\n\n            // Create points that define polygon.\n            Point point1 = new Point(50, 50);\n            Point point2 = new Point(100, 25);\n            Point point3 = new Point(200, 5);\n            Point point4 = new Point(250, 50);\n            Point point5 = new Point(300, 100);\n            Point point6 = new Point(350, 200);\n            Point point7 = new Point(250, 250);\n            Point[] curvePoints = {point1, point2, point3, point4, point5, point6, point7};\n\n            // Define fill mode.\n            FillMode newFillMode = FillMode.Winding;\n\n            // Draw polygon to screen.\n            e.Graphics.FillPolygon(blueBrush, curvePoints, newFillMode);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#108\">    Public Sub FillPolygonPointFillMode(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim blueBrush As New SolidBrush(Color.Blue)\n\n        &#39; Create points that define polygon.\n        Dim point1 As New Point(50, 50)\n        Dim point2 As New Point(100, 25)\n        Dim point3 As New Point(200, 5)\n        Dim point4 As New Point(250, 50)\n        Dim point5 As New Point(300, 100)\n        Dim point6 As New Point(350, 200)\n        Dim point7 As New Point(250, 250)\n        Dim curvePoints As Point() = {point1, point2, point3, point4, _\n        point5, point6, point7}\n\n        &#39; Define fill mode.\n        Dim newFillMode As FillMode = FillMode.Winding\n\n        &#39; Draw polygon to screen.\n        e.Graphics.FillPolygon(blueBrush, curvePoints, newFillMode)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillPolygon_System_Drawing_Brush_System_Drawing_PointF___System_Drawing_Drawing2D_FillMode_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillPolygon_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillPolygon(Brush,PointF[],FillMode)</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interior of a polygon defined by an array of points specified by <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures using the specified fill mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillPolygon (System.Drawing.Brush brush, System.Drawing.PointF[] points, System.Drawing.Drawing2D.FillMode fillMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that represent the vertices of the polygon to fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fillMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a> enumeration that determines the style of the fill.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>points</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Every two consecutive points in the array specify a side of the polygon. In addition, if the last point and the first point do not coincide, they specify the closing side of the polygon.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following action:  </p>\n<ul>\n<li><p>Creates a solid blue brush.  </p>\n</li>\n<li><p>Creates an array of seven points to define a polygon.  </p>\n</li>\n<li><p>Sets the fill mode to <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a>.  </p>\n</li>\n<li><p>Fills the polygonal area on the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples2#110\">public:\n   void FillPolygonPointFFillMode( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ blueBrush = gcnew SolidBrush( Color::Blue );\n\n      // Create points that define polygon.\n      PointF point1 = PointF(50.0F,50.0F);\n      PointF point2 = PointF(100.0F,25.0F);\n      PointF point3 = PointF(200.0F,5.0F);\n      PointF point4 = PointF(250.0F,50.0F);\n      PointF point5 = PointF(300.0F,100.0F);\n      PointF point6 = PointF(350.0F,200.0F);\n      PointF point7 = PointF(250.0F,250.0F);\n      array&lt;PointF&gt;^ curvePoints = {point1,point2,point3,point4,point5,point6,point7};\n\n      // Define fill mode.\n      FillMode newFillMode = FillMode::Winding;\n\n      // Fill polygon to screen.\n      e-&gt;Graphics-&gt;FillPolygon( blueBrush, curvePoints, newFillMode );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples2#110\">        public void FillPolygonPointFFillMode(PaintEventArgs e)\n        {\n\n            // Create solid brush.\n            SolidBrush blueBrush = new SolidBrush(Color.Blue);\n\n            // Create points that define polygon.\n            PointF point1 = new PointF(50.0F, 50.0F);\n            PointF point2 = new PointF(100.0F, 25.0F);\n            PointF point3 = new PointF(200.0F, 5.0F);\n            PointF point4 = new PointF(250.0F, 50.0F);\n            PointF point5 = new PointF(300.0F, 100.0F);\n            PointF point6 = new PointF(350.0F, 200.0F);\n            PointF point7 = new PointF(250.0F, 250.0F);\n            PointF[] curvePoints = {point1, point2, point3, point4, point5, point6, point7};\n\n            // Define fill mode.\n            FillMode newFillMode = FillMode.Winding;\n\n            // Fill polygon to screen.\n            e.Graphics.FillPolygon(blueBrush, curvePoints, newFillMode);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples2#110\">    Public Sub FillPolygonPointFFillMode(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim blueBrush As New SolidBrush(Color.Blue)\n\n        &#39; Create points that define polygon.\n        Dim point1 As New PointF(50.0F, 50.0F)\n        Dim point2 As New PointF(100.0F, 25.0F)\n        Dim point3 As New PointF(200.0F, 5.0F)\n        Dim point4 As New PointF(250.0F, 50.0F)\n        Dim point5 As New PointF(300.0F, 100.0F)\n        Dim point6 As New PointF(350.0F, 200.0F)\n        Dim point7 As New PointF(250.0F, 250.0F)\n        Dim curvePoints As PointF() = {point1, point2, point3, point4, _\n        point5, point6, point7}\n\n        &#39; Define fill mode.\n        Dim newFillMode As FillMode = FillMode.Winding\n\n        &#39; Fill polygon to screen.\n        e.Graphics.FillPolygon(blueBrush, curvePoints, newFillMode)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillRectangle_System_Drawing_Brush_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillRectangle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillRectangle(Brush,Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interior of a rectangle specified by a <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillRectangle (System.Drawing.Brush brush, System.Drawing.Rectangle rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that represents the rectangle to fill.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method fills the interior of the rectangle defined by the <code>rect</code> parameter, including the specified upper-left corner and up to the calculated lower and bottom edges.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following action:  </p>\n<ul>\n<li><p>Creates a solid blue brush.  </p>\n</li>\n<li><p>Creates a rectangle.  </p>\n</li>\n<li><p>Fills the rectangular area on the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#111\">public:\n   void FillRectangleRectangle( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ blueBrush = gcnew SolidBrush( Color::Blue );\n\n      // Create rectangle.\n      Rectangle rect = Rectangle(0,0,200,200);\n\n      // Fill rectangle to screen.\n      e-&gt;Graphics-&gt;FillRectangle( blueBrush, rect );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#111\">        private void FillRectangleRectangle(PaintEventArgs e)\n        {\n\n            // Create solid brush.\n            SolidBrush blueBrush = new SolidBrush(Color.Blue);\n\n            // Create rectangle.\n            Rectangle rect = new Rectangle(0, 0, 200, 200);\n\n            // Fill rectangle to screen.\n            e.Graphics.FillRectangle(blueBrush, rect);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#111\">    Private Sub FillRectangleRectangle(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim blueBrush As New SolidBrush(Color.Blue)\n\n        &#39; Create rectangle.\n        Dim rect As New Rectangle(0, 0, 200, 200)\n\n        &#39; Fill rectangle to screen.\n        e.Graphics.FillRectangle(blueBrush, rect)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillRectangle_System_Drawing_Brush_System_Drawing_RectangleF_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillRectangle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillRectangle(Brush,RectangleF)</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interior of a rectangle specified by a <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillRectangle (System.Drawing.Brush brush, System.Drawing.RectangleF rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that represents the rectangle to fill.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method fills the interior of the rectangle defined by the <code>rect</code> parameter, including the specified upper-left corner and up to the calculated lower and bottom edges.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following action:  </p>\n<ul>\n<li><p>Creates a solid blue brush.  </p>\n</li>\n<li><p>Creates a rectangle.  </p>\n</li>\n<li><p>Fills the rectangular area on the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#112\">public:\n   void FillRectangleRectangleF( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ blueBrush = gcnew SolidBrush( Color::Blue );\n\n      // Create rectangle.\n      RectangleF rect = RectangleF(0.0F,0.0F,200.0F,200.0F);\n\n      // Fill rectangle to screen.\n      e-&gt;Graphics-&gt;FillRectangle( blueBrush, rect );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#112\">        private void FillRectangleRectangleF(PaintEventArgs e)\n        {\n\n            // Create solid brush.\n            SolidBrush blueBrush = new SolidBrush(Color.Blue);\n\n            // Create rectangle.\n            RectangleF rect = new RectangleF(0.0F, 0.0F, 200.0F, 200.0F);\n\n            // Fill rectangle to screen.\n            e.Graphics.FillRectangle(blueBrush, rect);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#112\">    Private Sub FillRectangleRectangleF(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim blueBrush As New SolidBrush(Color.Blue)\n\n        &#39; Create rectangle.\n        Dim rect As New RectangleF(0.0F, 0.0F, 200.0F, 200.0F)\n\n        &#39; Fill rectangle to screen.\n        e.Graphics.FillRectangle(blueBrush, rect)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillRectangle_System_Drawing_Brush_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillRectangle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillRectangle(Brush,Int32,Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillRectangle (System.Drawing.Brush brush, int x, int y, int width, int height);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the rectangle to fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the rectangle to fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the rectangle to fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the rectangle to fill.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method fills the interior of the rectangle defined by the<code>x</code>, <code>y</code>, <code>width</code>, and <code>height</code> parameters, including the specified upper-left corner and up to the calculated lower and bottom edges.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following action:  </p>\n<ul>\n<li><p>Creates a solid blue brush.  </p>\n</li>\n<li><p>Creates the location and size of a rectangle.  </p>\n</li>\n<li><p>Fills the rectangular area on the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#113\">public:\n   void FillRectangleInt( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ blueBrush = gcnew SolidBrush( Color::Blue );\n\n      // Create location and size of rectangle.\n      int x = 0;\n      int y = 0;\n      int width = 200;\n      int height = 200;\n\n      // Fill rectangle to screen.\n      e-&gt;Graphics-&gt;FillRectangle( blueBrush, x, y, width, height );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#113\">        private void FillRectangleInt(PaintEventArgs e)\n        {\n\n            // Create solid brush.\n            SolidBrush blueBrush = new SolidBrush(Color.Blue);\n\n            // Create location and size of rectangle.\n            int x = 0;\n            int y = 0;\n            int width = 200;\n            int height = 200;\n\n            // Fill rectangle to screen.\n            e.Graphics.FillRectangle(blueBrush, x, y, width, height);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#113\">    Private Sub FillRectangleInt(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim blueBrush As New SolidBrush(Color.Blue)\n\n        &#39; Create location and size of rectangle.\n        Dim x As Integer = 0\n        Dim y As Integer = 0\n        Dim width As Integer = 200\n        Dim height As Integer = 200\n\n        &#39; Fill rectangle to screen.\n        e.Graphics.FillRectangle(blueBrush, x, y, width, height)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillRectangle_System_Drawing_Brush_System_Single_System_Single_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillRectangle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillRectangle(Brush,Single,Single,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillRectangle (System.Drawing.Brush brush, float x, float y, float width, float height);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the rectangle to fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the rectangle to fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the rectangle to fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the rectangle to fill.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method fills the interior of the rectangle defined by the <code>x</code>, <code>y</code>, <code>width</code>, and <code>height</code> parameters, including the specified upper-left corner and up to the calculated lower and bottom edges.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following action:  </p>\n<ul>\n<li><p>Creates a solid blue brush.  </p>\n</li>\n<li><p>Creates the location and size of a rectangle.  </p>\n</li>\n<li><p>Fills the rectangular area on the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#114\">public:\n   void FillRectangleFloat( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ blueBrush = gcnew SolidBrush( Color::Blue );\n\n      // Create location and size of rectangle.\n      float x = 0.0F;\n      float y = 0.0F;\n      float width = 200.0F;\n      float height = 200.0F;\n\n      // Fill rectangle to screen.\n      e-&gt;Graphics-&gt;FillRectangle( blueBrush, x, y, width, height );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#114\">        private void FillRectangleFloat(PaintEventArgs e)\n        {\n\n            // Create solid brush.\n            SolidBrush blueBrush = new SolidBrush(Color.Blue);\n\n            // Create location and size of rectangle.\n            float x = 0.0F;\n            float y = 0.0F;\n            float width = 200.0F;\n            float height = 200.0F;\n\n            // Fill rectangle to screen.\n            e.Graphics.FillRectangle(blueBrush, x, y, width, height);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#114\">    Private Sub FillRectangleFloat(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim blueBrush As New SolidBrush(Color.Blue)\n\n        &#39; Create location and size of rectangle.\n        Dim x As Single = 0.0F\n        Dim y As Single = 0.0F\n        Dim width As Single = 200.0F\n        Dim height As Single = 200.0F\n\n        &#39; Fill rectangle to screen.\n        e.Graphics.FillRectangle(blueBrush, x, y, width, height)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillRectangles_System_Drawing_Brush_System_Drawing_Rectangle___\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillRectangles_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillRectangles(Brush,Rectangle[])</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interiors of a series of rectangles specified by <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillRectangles (System.Drawing.Brush brush, System.Drawing.Rectangle[] rects);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rects</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structures that represent the rectangles to fill.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>rects</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>rects</code> is a zero-length array.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following action:  </p>\n<ul>\n<li><p>Creates a solid blue brush.  </p>\n</li>\n<li><p>Creates an array of three rectangles.  </p>\n</li>\n<li><p>Fills the three rectangular areas on the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#115\">public:\n   void FillRectanglesRectangle( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ blueBrush = gcnew SolidBrush( Color::Blue );\n\n      // Create array of rectangles.\n      array&lt;Rectangle&gt;^ rects = {Rectangle(0,0,100,200),Rectangle(100,200,250,50),Rectangle(300,0,50,100)};\n\n      // Fill rectangles to screen.\n      e-&gt;Graphics-&gt;FillRectangles( blueBrush, rects );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#115\">        private void FillRectanglesRectangle(PaintEventArgs e)\n        {\n\n            // Create solid brush.\n            SolidBrush blueBrush = new SolidBrush(Color.Blue);\n\n            // Create array of rectangles.\n            Rectangle[] rects = { new Rectangle(0, 0, 100, 200), new Rectangle(100, 200, 250, 50), new Rectangle(300, 0, 50, 100) };\n\n            // Fill rectangles to screen.\n            e.Graphics.FillRectangles(blueBrush, rects);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#115\">    Private Sub FillRectanglesRectangle(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim blueBrush As New SolidBrush(Color.Blue)\n\n        &#39; Create array of rectangles.\n        Dim rects As Rectangle() = {New Rectangle(0, 0, 100, 200), _\n        New Rectangle(100, 200, 250, 50), _\n        New Rectangle(300, 0, 50, 100)}\n\n        &#39; Fill rectangles to screen.\n        e.Graphics.FillRectangles(blueBrush, rects)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillRectangles_System_Drawing_Brush_System_Drawing_RectangleF___\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillRectangles_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillRectangles(Brush,RectangleF[])</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interiors of a series of rectangles specified by <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillRectangles (System.Drawing.Brush brush, System.Drawing.RectangleF[] rects);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rects</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structures that represent the rectangles to fill.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>rects</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>Rects</code> is a zero-length array.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following action:  </p>\n<ul>\n<li><p>Creates a solid blue brush.  </p>\n</li>\n<li><p>Creates an array of three rectangles.  </p>\n</li>\n<li><p>Fills the three rectangular areas on the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#116\">public:\n   void FillRectanglesRectangleF( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ blueBrush = gcnew SolidBrush( Color::Blue );\n\n      // Create array of rectangles.\n      array&lt;RectangleF&gt;^ rects = {RectangleF(0.0F,0.0F,100.0F,200.0F),RectangleF(100.0F,200.0F,250.0F,50.0F),RectangleF(300.0F,0.0F,50.0F,100.0F)};\n\n      // Fill rectangles to screen.\n      e-&gt;Graphics-&gt;FillRectangles( blueBrush, rects );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#116\">        private void FillRectanglesRectangleF(PaintEventArgs e)\n        {\n\n            // Create solid brush.\n            SolidBrush blueBrush = new SolidBrush(Color.Blue);\n\n            // Create array of rectangles.\n            RectangleF[] rects = { new RectangleF(0.0F, 0.0F, 100.0F, 200.0F), new RectangleF(100.0F, 200.0F, 250.0F, 50.0F), new RectangleF(300.0F, 0.0F, 50.0F, 100.0F) };\n\n            // Fill rectangles to screen.\n            e.Graphics.FillRectangles(blueBrush, rects);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#116\">    Private Sub FillRectanglesRectangleF(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim blueBrush As New SolidBrush(Color.Blue)\n\n        &#39; Create array of rectangles.\n        Dim rects As RectangleF() = {New RectangleF(0.0F, 0.0F, 100.0F, 200.0F), _\n        New RectangleF(100.0F, 200.0F, 250.0F, 50.0F), _\n        New RectangleF(300.0F, 0.0F, 50.0F, 100.0F)}\n\n        &#39; Fill rectangles to screen.\n        e.Graphics.FillRectangles(blueBrush, rects)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FillRegion_System_Drawing_Brush_System_Drawing_Region_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FillRegion_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillRegion(Brush,Region)</div>        \r\n          </div>\r\n    \r\n            <p>Fills the interior of a <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void FillRegion (System.Drawing.Brush brush, System.Drawing.Region region);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of the fill.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>region</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> that represents the area to fill.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>region</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> is composed of rectangles and paths. If the region is not closed, an additional segment is added from the last point to the first point to close it.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following action:  </p>\n<ul>\n<li><p>Creates a solid blue brush.  </p>\n</li>\n<li><p>Creates a rectangle.  </p>\n</li>\n<li><p>Creates a rectangular region.  </p>\n</li>\n<li><p>Fills the rectangular region on the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#117\">public:\n   void FillRegionRectangle( PaintEventArgs^ e )\n   {\n      // Create solid brush.\n      SolidBrush^ blueBrush = gcnew SolidBrush( Color::Blue );\n\n      // Create rectangle for region.\n      Rectangle fillRect = Rectangle(100,100,200,200);\n\n      // Create region for fill.\n      System::Drawing::Region^ fillRegion = gcnew System::Drawing::Region( fillRect );\n\n      // Fill region to screen.\n      e-&gt;Graphics-&gt;FillRegion( blueBrush, fillRegion );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#117\">        private void FillRegionRectangle(PaintEventArgs e)\n        {\n\n            // Create solid brush.\n            SolidBrush blueBrush = new SolidBrush(Color.Blue);\n\n            // Create rectangle for region.\n            Rectangle fillRect = new Rectangle(100, 100, 200, 200);\n\n            // Create region for fill.\n            Region fillRegion = new Region(fillRect);\n\n            // Fill region to screen.\n            e.Graphics.FillRegion(blueBrush, fillRegion);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#117\">    Private Sub FillRegionRectangle(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush.\n        Dim blueBrush As New SolidBrush(Color.Blue)\n\n        &#39; Create rectangle for region.\n        Dim fillRect As New Rectangle(100, 100, 200, 200)\n\n        &#39; Create region for fill.\n        Dim fillRegion As New [Region](fillRect)\n\n        &#39; Fill region to screen.\n        e.Graphics.FillRegion(blueBrush, fillRegion)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_Finalize\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_Finalize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Finalize()</div>        \r\n          </div>\r\n    \r\n            <p>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">~Graphics ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_Flush\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_Flush_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Flush()</div>        \r\n          </div>\r\n    \r\n            <p>Forces execution of all pending graphics operations and returns immediately without waiting for the operations to finish.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Flush ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method starts a flush and returns immediately without waiting for any currently executing graphics operation to finish.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_Flush_System_Drawing_Drawing2D_FlushIntention_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_Flush_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Flush(FlushIntention)</div>        \r\n          </div>\r\n    \r\n            <p>Forces execution of all pending graphics operations with the method waiting or not waiting, as specified, to return before the operations finish.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Flush (System.Drawing.Drawing2D.FlushIntention intention);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>intention</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.flushintention\" data-linktype=\"relative-path\">FlushIntention</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.drawing2d.flushintention\" data-linktype=\"relative-path\">FlushIntention</a> enumeration that specifies whether the method returns immediately or waits for any existing operations to finish.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A value of <a class=\"xref\" href=\"system.drawing.drawing2d.flushintention\" data-linktype=\"relative-path\">FlushIntention</a> for the <code>intention</code> parameter specifies that the method return immediately after beginning the flush, while a value of <a class=\"xref\" href=\"system.drawing.drawing2d.flushintention\" data-linktype=\"relative-path\">FlushIntention</a> specifies that the method wait before returning until any existing operations finish.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FromHdc_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FromHdc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromHdc(IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> from the specified handle to a device context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Drawing.Graphics FromHdc (IntPtr hdc);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hdc</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Handle to a device context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </div>\r\n                  <p>This method returns a new <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for the specified device context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You should always call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method to release the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> and related resources created by the FromHdc method.  </p>\n<p> Even if the display device has an associated ICM color profile, GDI+ will not use that profile by default. To enable ICM for a <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>, construct the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> from an HDC after you pass the HDC (and ICM_ON) to the <code>SetICMMode</code> function. Then any drawing done by the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> will be adjusted according to the ICM profile associated with the display device. Enabling ICM will result in slower performance.  </p>\n<p> The state of the device context (mapping mode, logical unit, and the like) at the time you call FromHdc can affect rendering done by the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following action:  </p>\n<ul>\n<li><p>Creates an internal pointer type variable <code>hdc</code> and sets it to the handle to the device context of the graphics object of the form.  </p>\n</li>\n<li><p>Creates a new graphics object using <code>hdc</code>.  </p>\n</li>\n<li><p>Draws a rectangle with the new graphics object (on the screen).  </p>\n</li>\n<li><p>Releases the new graphics object using <code>hdc</code>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#118\">public:\n   void FromHdcHdc( PaintEventArgs^ e )\n   {\n      // Get handle to device context.\n      IntPtr hdc = e-&gt;Graphics-&gt;GetHdc();\n\n      // Create new graphics object using handle to device context.\n      Graphics^ newGraphics = Graphics::FromHdc( hdc );\n\n      // Draw rectangle to screen.\n      newGraphics-&gt;DrawRectangle( gcnew Pen( Color::Red,3.0f ), 0, 0, 200, 100 );\n\n      // Release handle to device context and dispose of the      // Graphics object\n      e-&gt;Graphics-&gt;ReleaseHdc( hdc );\n      delete newGraphics;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#118\">        [System.Security.Permissions.SecurityPermission(\n        System.Security.Permissions.SecurityAction.LinkDemand, Flags = \n        System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode)]            \n        private void FromHdcHdc(PaintEventArgs e)\n        {\n\n            // Get handle to device context.\n            IntPtr hdc = e.Graphics.GetHdc();\n\n            // Create new graphics object using handle to device context.\n            Graphics newGraphics = Graphics.FromHdc(hdc);\n\n            // Draw rectangle to screen.\n            newGraphics.DrawRectangle(new Pen(Color.Red, 3), 0, 0, 200, 100);\n\n            // Release handle to device context and dispose of the      // Graphics object\n            e.Graphics.ReleaseHdc(hdc);\n            newGraphics.Dispose();\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#118\">    &lt;System.Security.Permissions.SecurityPermission( _\n    System.Security.Permissions.SecurityAction.LinkDemand, Flags := _\n    System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode)&gt; _\n    Private Sub FromHdcHdc(ByVal e As PaintEventArgs)\n\n        &#39; Get handle to device context.\n        Dim hdc As IntPtr = e.Graphics.GetHdc()\n\n        &#39; Create new graphics object using handle to device context.\n        Dim newGraphics As Graphics = Graphics.FromHdc(hdc)\n\n        &#39; Draw rectangle to screen.\n        newGraphics.DrawRectangle(New Pen(Color.Red, 3), 0, 0, 200, 100)\n\n        &#39; Release handle to device context and dispose of the Graphics \t&#39; object\n        e.Graphics.ReleaseHdc(hdc)\n        newGraphics.Dispose()\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FromHdc_System_IntPtr_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FromHdc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromHdc(IntPtr,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> from the specified handle to a device context and handle to a device.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Drawing.Graphics FromHdc (IntPtr hdc, IntPtr hdevice);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hdc</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Handle to a device context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>hdevice</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Handle to a device.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </div>\r\n                  <p>This method returns a new <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for the specified device context and device.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You should always call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method to release the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> and related resources created by the FromHdc method.  </p>\n<p> Even if the display device has an associated ICM color profile, GDI+ will not use that profile by default. To enable ICM for a <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>, construct the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> from an HDC after you pass the HDC (and ICM_ON) to the <code>SetICMMode</code> function. Then any drawing done by the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> will be adjusted according to the ICM profile associated with the display device. Enabling ICM will result in slower performance.  </p>\n<p> The state of the device context (mapping mode, logical unit, and the like) at the time you call FromHdc can affect rendering done by the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.  </p>\n<p> The device handle is typically used to query specific printer capabilities.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FromHdcInternal_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FromHdcInternal_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromHdcInternal(IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for the specified device context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Drawing.Graphics FromHdcInternal (IntPtr hdc);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hdc</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Handle to a device context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for the specified device context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method should not be used.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FromHwnd_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FromHwnd_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromHwnd(IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> from the specified handle to a window.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Drawing.Graphics FromHwnd (IntPtr hwnd);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hwnd</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Handle to a window.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </div>\r\n                  <p>This method returns a new <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for the specified window handle.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You should always call the<a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method to release the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> and related resources created by the FromHwnd method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler, as well as <code>thisForm</code>, the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> for the example. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a new internal pointer variable <code>hwnd</code> and sets it to the handle of the example&#39;s form.  </p>\n</li>\n<li><p>Creates a new <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> from the handle.  </p>\n</li>\n<li><p>Draws a rectangle to the new <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> using a red pen.  </p>\n</li>\n<li><p>Disposes the new <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#119\">public:\n   void FromHwndHwnd( PaintEventArgs^ /*e*/ )\n   {\n      // Get handle to form.\n      IntPtr hwnd = this-&gt;Handle;\n\n      // Create new graphics object using handle to window.\n      Graphics^ newGraphics = Graphics::FromHwnd( hwnd );\n\n      // Draw rectangle to screen.\n      newGraphics-&gt;DrawRectangle( gcnew Pen( Color::Red,3.0f ), 0, 0, 200, 100 );\n\n      // Dispose of new graphics.\n      delete newGraphics;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#119\">        private void FromHwndHwnd(PaintEventArgs e)\n        {\n\n            // Get handle to form.\n            IntPtr hwnd = this.Handle;\n\n            // Create new graphics object using handle to window.\n            Graphics newGraphics = Graphics.FromHwnd(hwnd);\n\n            // Draw rectangle to screen.\n            newGraphics.DrawRectangle(new Pen(Color.Red, 3), 0, 0, 200, 100);\n\n            // Dispose of new graphics.\n            newGraphics.Dispose();\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#119\">    Private Sub FromHwndHwnd(ByVal e As PaintEventArgs)\n\n        &#39; Get handle to form.\n        Dim hwnd As IntPtr = Me.Handle\n\n\n        &#39; Create new graphics object using handle to window.\n        Dim newGraphics As Graphics = Graphics.FromHwnd(hwnd)\n\n        &#39; Draw rectangle to screen.\n        newGraphics.DrawRectangle(New Pen(Color.Red, 3), 0, 0, 200, 100)\n\n        &#39; Dispose of new graphics.\n        newGraphics.Dispose()\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FromHwndInternal_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FromHwndInternal_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromHwndInternal(IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for the specified windows handle.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Drawing.Graphics FromHwndInternal (IntPtr hwnd);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hwnd</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Handle to a window.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for the specified window handle.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method should not be used.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_FromImage_System_Drawing_Image_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_FromImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromImage(Image)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> from the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Drawing.Graphics FromImage (System.Drawing.Image image);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>image</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> from which to create the new <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </div>\r\n                  <p>This method returns a new <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for the specified <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>image</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p><code>image</code> has an indexed pixel format or its format is undefined.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the image has an indexed pixel format, this method throws an exception with the message, &quot;A Graphics object cannot be created from an image that has an indexed pixel format.&quot; The indexed pixel formats are shown in the following list.  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.drawing.imaging.pixelformat\" data-linktype=\"relative-path\">PixelFormat</a>  \n</li>\n<li><a class=\"xref\" href=\"system.drawing.imaging.pixelformat\" data-linktype=\"relative-path\">PixelFormat</a>  \n</li>\n<li><a class=\"xref\" href=\"system.drawing.imaging.pixelformat\" data-linktype=\"relative-path\">PixelFormat</a>  \n\n<p>You can save the indexed image as another format by using the <a class=\"xref\" href=\"system.drawing.image#System_Drawing_Image_Save_System_String_System_Drawing_Imaging_ImageFormat_\" data-linktype=\"relative-path\">Save(String,ImageFormat)</a> method and then retrieve a <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object for the new image.  </p>\n<p>This method also throws an exception if the image has any of the following pixel formats.  </p>\n</li>\n<li><a class=\"xref\" href=\"system.drawing.imaging.pixelformat\" data-linktype=\"relative-path\">PixelFormat</a>  \n</li>\n<li><a class=\"xref\" href=\"system.drawing.imaging.pixelformat\" data-linktype=\"relative-path\">PixelFormat</a>  \n</li>\n<li><a class=\"xref\" href=\"system.drawing.imaging.pixelformat\" data-linktype=\"relative-path\">PixelFormat</a>  \n</li>\n<li><a class=\"xref\" href=\"system.drawing.imaging.pixelformat\" data-linktype=\"relative-path\">PixelFormat</a>  \n\n<p>You should always call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method to release the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> and related resources created by the FromImage method.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following action:  </p>\n<ul>\n<li><p>Creates an <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> from a graphics file SampImag.jpg in the example folder.  </p>\n</li>\n<li><p>Creates a <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> from the <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a>.  </p>\n</li>\n<li><p>Alters the image by filling a rectangle within it.  </p>\n</li>\n<li><p>Draws the <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> to the screen.  </p>\n</li>\n<li><p>Releases the created <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#120\">public:\n   void FromImageImage( PaintEventArgs^ e )\n   {\n      // Create image.\n      Image^ imageFile = Image::FromFile( &quot;SampImag.jpg&quot; );\n\n      // Create graphics object for alteration.\n      Graphics^ newGraphics = Graphics::FromImage( imageFile );\n\n      // Alter image.\n      newGraphics-&gt;FillRectangle( gcnew SolidBrush( Color::Black ), 100, 50, 100, 100 );\n\n      // Draw image to screen.\n      e-&gt;Graphics-&gt;DrawImage( imageFile, PointF(0.0F,0.0F) );\n\n      // Dispose of graphics object.\n      delete newGraphics;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#120\">        private void FromImageImage(PaintEventArgs e)\n        {\n\n            // Create image.\n            Image imageFile = Image.FromFile(&quot;SampImag.jpg&quot;);\n\n            // Create graphics object for alteration.\n            Graphics newGraphics = Graphics.FromImage(imageFile);\n\n            // Alter image.\n            newGraphics.FillRectangle(new SolidBrush(Color.Black), 100, 50, 100, 100);\n\n            // Draw image to screen.\n            e.Graphics.DrawImage(imageFile, new PointF(0.0F, 0.0F));\n\n            // Dispose of graphics object.\n            newGraphics.Dispose();\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#120\">    Private Sub FromImageImage2(ByVal e As PaintEventArgs)\n\n        &#39; Create image.\n        Dim imageFile As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n\n        &#39; Create graphics object for alteration.\n        Dim newGraphics As Graphics = Graphics.FromImage(imageFile)\n\n        &#39; Alter image.\n        newGraphics.FillRectangle(New SolidBrush(Color.Black), _\n        100, 50, 100, 100)\n\n        &#39; Draw image to screen.\n        e.Graphics.DrawImage(imageFile, New PointF(0.0F, 0.0F))\n\n        &#39; Dispose of graphics object.\n        newGraphics.Dispose()\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_GetContextInfo\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_GetContextInfo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetContextInfo()</div>        \r\n          </div>\r\n    \r\n            <p>Gets the cumulative graphics context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object GetContextInfo ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> representing the cumulative graphics context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The return value is an object array where the first element contains the cumulative clip region and the second element contains the cumulative translate/transform matrix.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_GetHalftonePalette\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_GetHalftonePalette_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHalftonePalette()</div>        \r\n          </div>\r\n    \r\n            <p>Gets a handle to the current Windows halftone palette.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static IntPtr GetHalftonePalette ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </div>\r\n                  <p>Internal pointer that specifies the handle to the palette.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The purpose of the GetHalftonePalette method is to enable GDI+ to produce a better quality halftone when the display uses 8 bits per pixel. To display an image using the halftone palette, use the following procedure.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Defines interoperability <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute\" data-linktype=\"relative-path\">DllImportAttribute</a> attributes for the Windows DLL file gdi32.dll, which contains the necessary GDI functions.  </p>\n</li>\n<li><p>Defines the <code>SelectPalette</code> and <code>RealizePalette</code> functions in that DLL as external.  </p>\n</li>\n<li><p>Creates an image from an existing image file SampImag.jpg (which must be in the same folder as the example code file) and draws the image to the screen.  </p>\n</li>\n<li><p>Creates internal pointer type variables and sets their values to the handle to the graphics object and to the current Windows halftone palette, respectively.  </p>\n</li>\n<li><p>Selects and realizes the halftone palette.  </p>\n</li>\n<li><p>Creates a new graphics object using the <code>hdc</code> parameter.  </p>\n</li>\n<li><p>Draws the image again.  </p>\n</li>\n<li><p>Releases the handle to the device context.  </p>\n<p>The result is two renderings of the sample image: one with the 16-bit palette and one with the 8-bit palette.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#121\">private:\n   [System::Runtime::InteropServices::DllImportAttribute(&quot;gdi32.dll&quot;)]\n   static IntPtr SelectPalette( IntPtr hdc, IntPtr htPalette, bool bForceBackground );\n\n   [System::Runtime::InteropServices::DllImportAttribute(&quot;gdi32.dll&quot;)]\n   static int RealizePalette( IntPtr hdc );\n\npublic:\n   void GetHalftonePaletteVoid( PaintEventArgs^ e )\n   {\n      // Create and draw image.\n      Image^ imageFile = Image::FromFile( &quot;SampImag.jpg&quot; );\n      e-&gt;Graphics-&gt;DrawImage( imageFile, Point(0,0) );\n\n      // Get handle to device context.\n      IntPtr hdc = e-&gt;Graphics-&gt;GetHdc();\n\n      // Get handle to halftone palette.\n      IntPtr htPalette = Graphics::GetHalftonePalette();\n\n      // Select and realize new palette.\n      SelectPalette( hdc, htPalette, true );\n      RealizePalette( hdc );\n\n      // Create new graphics object.\n      Graphics^ newGraphics = Graphics::FromHdc( hdc );\n\n      // Draw image with new palette.\n      newGraphics-&gt;DrawImage( imageFile, 300, 0 );\n\n      // Release handle to device context.\n      e-&gt;Graphics-&gt;ReleaseHdc( hdc );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#121\">        [System.Runtime.InteropServices.DllImportAttribute(&quot;gdi32.dll&quot;)]\n        private static extern IntPtr SelectPalette(\n            IntPtr hdc,\n            IntPtr htPalette,\n            bool bForceBackground);\n        [System.Runtime.InteropServices.DllImportAttribute(&quot;gdi32.dll&quot;)]\n        private static extern int RealizePalette(IntPtr hdc);\n\n        [System.Security.Permissions.SecurityPermission(\n        System.Security.Permissions.SecurityAction.LinkDemand, Flags = \n        System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode)]            \n        private void GetHalftonePaletteVoid(PaintEventArgs e)\n        {\n\n            // Create and draw image.\n            Image imageFile = Image.FromFile(&quot;SampImag.jpg&quot;);\n            e.Graphics.DrawImage(imageFile, new Point(0, 0));\n\n            // Get handle to device context.\n            IntPtr hdc = e.Graphics.GetHdc();\n\n            // Get handle to halftone palette.\n            IntPtr htPalette = Graphics.GetHalftonePalette();\n\n            // Select and realize new palette.\n            SelectPalette(hdc, htPalette, true);\n            RealizePalette(hdc);\n\n            // Create new graphics object.\n            Graphics newGraphics = Graphics.FromHdc(hdc);\n\n            // Draw image with new palette.\n            newGraphics.DrawImage(imageFile, 300, 0);\n\n            // Release handle to device context.\n            e.Graphics.ReleaseHdc(hdc);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#121\">    &lt;System.Runtime.InteropServices.DllImportAttribute(&quot;gdi32.dll&quot;)&gt; _\n    Private Shared Function SelectPalette(ByVal hdc As IntPtr, _\n    ByVal htPalette As IntPtr, ByVal bForceBackground As Boolean) As IntPtr\n    End Function\n\n    &lt;System.Runtime.InteropServices.DllImportAttribute(&quot;gdi32.dll&quot;)&gt; _\n    Private Shared Function RealizePalette(ByVal hdc As IntPtr) As Integer\n    End Function\n\n    &lt;System.Security.Permissions.SecurityPermission( _\n    System.Security.Permissions.SecurityAction.LinkDemand, Flags:= _\n    System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode)&gt; _\n    Private Sub GetHalftonePaletteVoid(ByVal e As PaintEventArgs)\n\n        &#39; Create and draw image.\n        Dim imageFile As Image = Image.FromFile(&quot;SampImag.jpg&quot;)\n        e.Graphics.DrawImage(imageFile, New Point(0, 0))\n\n        &#39; Get handle to device context.\n        Dim hdc As IntPtr = e.Graphics.GetHdc()\n\n        &#39; Get handle to halftone palette.\n        Dim htPalette As IntPtr = Graphics.GetHalftonePalette()\n\n        &#39; Select and realize new palette.\n        SelectPalette(hdc, htPalette, True)\n        RealizePalette(hdc)\n\n        &#39; Create new graphics object.\n        Dim newGraphics As Graphics = Graphics.FromHdc(hdc)\n\n        &#39; Draw image with new palette.\n        newGraphics.DrawImage(imageFile, 300, 0)\n\n        &#39; Release handle to device context.\n        e.Graphics.ReleaseHdc(hdc)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_GetHdc\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_GetHdc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHdc()</div>        \r\n          </div>\r\n    \r\n            <p>Gets the handle to the device context associated with this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public IntPtr GetHdc ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </div>\r\n                  <p>Handle to the device context associated with this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The device context is a Windows structure based on GDI that defines a set of graphical objects and their associated attributes, as well as the graphical modes that affect output. This method returns that device context with the exception of a font. Because a font is not selected, calls to the <a class=\"xref\" href=\"system.drawing.font#System_Drawing_Font_FromHdc_\" data-linktype=\"relative-path\">FromHdc</a> method using a handle returned from the GetHdc method will fail.  </p>\n<p> Calls to the GetHdc and <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_ReleaseHdc_\" data-linktype=\"relative-path\">ReleaseHdc</a> methods must appear in pairs. During the scope of a GetHdc and <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_ReleaseHdc_\" data-linktype=\"relative-path\">ReleaseHdc</a> method pair, you usually make only calls to GDI functions. Calls in that scope made to GDI+ methods of the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> that produced the <code>hdc</code> parameter fail with an <code>ObjectBusy</code> error. Also, GDI+ ignores any state changes made to the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> of the <code>hdc</code> parameter in subsequent operations.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The example illustrates calling a Windows GDI function to perform the same task as a GDI+ <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> method. The code performs the following actions:  </p>\n<ul>\n<li><p>Defines the interoperability <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute\" data-linktype=\"relative-path\">DllImportAttribute</a> attribute for the Windows DLL file gdi32.dll. This DLL contains the desired GDI function.  </p>\n</li>\n<li><p>Defines the <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> function in that DLL as external.  </p>\n</li>\n<li><p>Creates a red pen.  </p>\n</li>\n<li><p>With the pen, draws a rectangle to the screen using the GDI+ <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawRectangle_\" data-linktype=\"relative-path\">DrawRectangle</a> method.  </p>\n</li>\n<li><p>Defines an internal pointer type variable <code>hdc</code> and sets its value to the handle to the device context of the form.  </p>\n</li>\n<li><p>Draws a rectangle to the screen using the GDI <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> function.  </p>\n</li>\n<li><p>Releases the device context represented by the <code>hdc</code> parameter.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#122\">private:\n   [System::Runtime::InteropServices::DllImportAttribute(&quot;gdi32.dll&quot;)]\n   static bool Rectangle( IntPtr hdc, int ulCornerX, int ulCornerY, int lrCornerX, int lrCornerY );\n\npublic:\n   void GetHdcForGDI1( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ redPen = gcnew Pen( Color::Red,1.0f );\n\n      // Draw rectangle with GDI+.\n      e-&gt;Graphics-&gt;DrawRectangle( redPen, 10, 10, 100, 50 );\n\n      // Get handle to device context.\n      IntPtr hdc = e-&gt;Graphics-&gt;GetHdc();\n\n      // Draw rectangle with GDI using default pen.\n      Rectangle( hdc, 10, 70, 110, 120 );\n\n      // Release handle to device context.\n      e-&gt;Graphics-&gt;ReleaseHdc( hdc );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#122\">        public class GDI\n        {\n            [System.Runtime.InteropServices.DllImport(&quot;gdi32.dll&quot;)]\n            internal static extern bool Rectangle(\n               IntPtr hdc,\n               int ulCornerX, int ulCornerY,\n               int lrCornerX, int lrCornerY);\n        }\n\n        [System.Security.Permissions.SecurityPermission(\n        System.Security.Permissions.SecurityAction.LinkDemand, Flags = \n        System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode)]            \n        private void GetHdcForGDI1(PaintEventArgs e)\n        {\n\n            // Create pen.\n            Pen redPen = new Pen(Color.Red, 1);\n\n            // Draw rectangle with GDI+.\n            e.Graphics.DrawRectangle(redPen, 10, 10, 100, 50);\n\n            // Get handle to device context.\n            IntPtr hdc = e.Graphics.GetHdc();\n\n            // Draw rectangle with GDI using default pen.\n            GDI.Rectangle(hdc, 10, 70, 110, 120);\n\n            // Release handle to device context.\n            e.Graphics.ReleaseHdc(hdc);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#122\">    Public Class GDI\n        &lt;System.Runtime.InteropServices.DllImportAttribute(&quot;gdi32.dll&quot;)&gt; _\n        Friend Shared Function Rectangle(ByVal hdc As IntPtr, _\n        ByVal ulCornerX As Integer, ByVal ulCornerY As Integer, ByVal lrCornerX As Integer, _\n        ByVal lrCornerY As Integer) As Boolean\n        End Function\n    End Class\n\n    &lt;System.Security.Permissions.SecurityPermission( _\n    System.Security.Permissions.SecurityAction.LinkDemand, Flags:= _\n    System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode)&gt; _\n    Private Sub GetHdcForGDI1(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim redPen As New Pen(Color.Red, 1)\n\n        &#39; Draw rectangle with GDI+.\n        e.Graphics.DrawRectangle(redPen, 10, 10, 100, 50)\n\n        &#39; Get handle to device context.\n        Dim hdc As IntPtr = e.Graphics.GetHdc()\n\n        &#39; Draw rectangle with GDI using default pen.\n        GDI.Rectangle(hdc, 10, 70, 110, 120)\n\n        &#39; Release handle to device context.\n        e.Graphics.ReleaseHdc(hdc)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_GetNearestColor_System_Drawing_Color_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_GetNearestColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetNearestColor(Color)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the nearest color to the specified <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Color GetNearestColor (System.Drawing.Color color);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>color</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structure for which to find a match.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structure that represents the nearest color to the one specified with the <code>color</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an arbitrary color with ARGB coordinates (255, 165, 63, 136).  </p>\n</li>\n<li><p>Creates a solid brush and sets its color to the specified color.  </p>\n</li>\n<li><p>Fills an ellipse using the arbitrary color.  </p>\n</li>\n<li><p>Creates a second color and sets its value to the nearest system ARGB color.  </p>\n</li>\n<li><p>Fills a second ellipse with this color.  </p>\n<p>The result is two ellipses: the first drawn with the arbitrary specified color and the second drawn with the system color nearest the specified color.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#123\">public:\n   void GetNearestColorColor( PaintEventArgs^ e )\n   {\n      // Create solid brush with arbitrary color.\n      Color arbColor = Color::FromArgb( 255, 165, 63, 136 );\n      SolidBrush^ arbBrush = gcnew SolidBrush( arbColor );\n\n      // Fill ellipse on screen.\n      e-&gt;Graphics-&gt;FillEllipse( arbBrush, 0, 0, 200, 100 );\n\n      // Get nearest color.\n      Color realColor = e-&gt;Graphics-&gt;GetNearestColor( arbColor );\n      SolidBrush^ realBrush = gcnew SolidBrush( realColor );\n\n      // Fill ellipse on screen.\n      e-&gt;Graphics-&gt;FillEllipse( realBrush, 0, 100, 200, 100 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#123\">        private void GetNearestColorColor(PaintEventArgs e)\n        {\n            // Create solid brush with arbitrary color.\n            Color arbColor = Color.FromArgb(255, 165, 63, 136);\n            SolidBrush arbBrush = new SolidBrush(arbColor);\n\n            // Fill ellipse on screen.\n            e.Graphics.FillEllipse(arbBrush, 0, 0, 200, 100);\n\n            // Get nearest color.\n            Color realColor = e.Graphics.GetNearestColor(arbColor);\n            SolidBrush realBrush = new SolidBrush(realColor);\n\n            // Fill ellipse on screen.\n            e.Graphics.FillEllipse(realBrush, 0, 100, 200, 100);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#123\">    Private Sub GetNearestColorColor(ByVal e As PaintEventArgs)\n\n        &#39; Create solid brush with arbitrary color.\n        Dim arbColor As Color = Color.FromArgb(255, 165, 63, 136)\n        Dim arbBrush As New SolidBrush(arbColor)\n\n        &#39; Fill ellipse on screen.\n        e.Graphics.FillEllipse(arbBrush, 0, 0, 200, 100)\n\n        &#39; Get nearest color.\n        Dim realColor As Color = e.Graphics.GetNearestColor(arbColor)\n        Dim realBrush As New SolidBrush(realColor)\n\n        &#39; Fill ellipse on screen.\n        e.Graphics.FillEllipse(realBrush, 0, 100, 200, 100)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_IntersectClip_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_IntersectClip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IntersectClip(Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Updates the clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the intersection of the current clip region and the specified <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void IntersectClip (System.Drawing.Rectangle rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure to intersect with the current clip region.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method assigns to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Clip_\" data-linktype=\"relative-path\">Clip</a> property of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> the area represented by the intersection of the current clip region and the rectangle specified by the <code>rect</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a rectangle with upper-left corner at (0, 0) and sets the clipping region to this rectangle.  </p>\n</li>\n<li><p>Creates a second rectangle with upper-left corner at (100, 100) and sets the clipping region to the intersection of this rectangle and the current clipping region (the first rectangle).  </p>\n</li>\n<li><p>Fills a large rectangle that includes both previous rectangles with a solid blue brush.  </p>\n</li>\n<li><p>Resets the clipping region to infinite.  </p>\n</li>\n<li><p>Draws rectangles around the two clipping regions. It uses a black pen for the first clipping rectangle and a red pen for the second clipping region.  </p>\n<p>The result is that only the intersection of the two rectangles is filled with blue.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#124\">public:\n   void IntersectClipRectangle( PaintEventArgs^ e )\n   {\n      // Set clipping region.\n      Rectangle clipRect = Rectangle(0,0,200,200);\n      e-&gt;Graphics-&gt;SetClip( clipRect );\n\n      // Update clipping region to intersection of\n      // existing region with specified rectangle.\n      Rectangle intersectRect = Rectangle(100,100,200,200);\n      e-&gt;Graphics-&gt;IntersectClip( intersectRect );\n\n      // Fill rectangle to demonstrate effective clipping region.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Blue ), 0, 0, 500, 500 );\n\n      // Reset clipping region to infinite.\n      e-&gt;Graphics-&gt;ResetClip();\n\n      // Draw clipRect and intersectRect to screen.\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Black ), clipRect );\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Red ), intersectRect );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#124\">        private void IntersectClipRectangle(PaintEventArgs e)\n        {\n\n            // Set clipping region.\n            Rectangle clipRect = new Rectangle(0, 0, 200, 200);\n            e.Graphics.SetClip(clipRect);\n\n            // Update clipping region to intersection of\n\n            // existing region with specified rectangle.\n            Rectangle intersectRect = new Rectangle(100, 100, 200, 200);\n            e.Graphics.IntersectClip(intersectRect);\n\n            // Fill rectangle to demonstrate effective clipping region.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Blue), 0, 0, 500, 500);\n\n            // Reset clipping region to infinite.\n            e.Graphics.ResetClip();\n\n            // Draw clipRect and intersectRect to screen.\n            e.Graphics.DrawRectangle(new Pen(Color.Black), clipRect);\n            e.Graphics.DrawRectangle(new Pen(Color.Red), intersectRect);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#124\">    Private Sub IntersectClipRectangle(ByVal e As PaintEventArgs)\n\n        &#39; Set clipping region.\n        Dim clipRect As New Rectangle(0, 0, 200, 200)\n        e.Graphics.SetClip(clipRect)\n\n        &#39; Update clipping region to intersection of\n\n        &#39; existing region with specified rectangle.\n        Dim intersectRect As New Rectangle(100, 100, 200, 200)\n        e.Graphics.IntersectClip(intersectRect)\n\n        &#39; Fill rectangle to demonstrate effective clipping region.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Blue), 0, 0, _\n        500, 500)\n\n        &#39; Reset clipping region to infinite.\n        e.Graphics.ResetClip()\n\n        &#39; Draw clipRect and intersectRect to screen.\n        e.Graphics.DrawRectangle(New Pen(Color.Black), clipRect)\n        e.Graphics.DrawRectangle(New Pen(Color.Red), intersectRect)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_IntersectClip_System_Drawing_RectangleF_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_IntersectClip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IntersectClip(RectangleF)</div>        \r\n          </div>\r\n    \r\n            <p>Updates the clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the intersection of the current clip region and the specified <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void IntersectClip (System.Drawing.RectangleF rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure to intersect with the current clip region.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method assigns to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Clip_\" data-linktype=\"relative-path\">Clip</a> property of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> the area represented by the intersection of the current clip region and the rectangle specified by the <code>rect</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a rectangle with upper-left corner at (0, 0) and sets the clipping region to this rectangle.  </p>\n</li>\n<li><p>Creates a second rectangle with upper-left corner at (100, 100) and sets the clipping region to the intersection of this rectangle and the current clipping region (the first rectangle).  </p>\n</li>\n<li><p>Fills a large rectangle that includes both previous rectangles with a solid blue brush.  </p>\n</li>\n<li><p>Resets the clipping region to infinite.  </p>\n</li>\n<li><p>Draws rectangles around the two clipping regions. It uses a black pen for the first clipping rectangle and a red pen for the second clipping region.  </p>\n<p>The result is that only the intersection of the two rectangles is filled with blue.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#125\">public:\n   void IntersectClipRectangleF1( PaintEventArgs^ e )\n   {\n      // Set clipping region.\n      Rectangle clipRect = Rectangle(0,0,200,200);\n      e-&gt;Graphics-&gt;SetClip( clipRect );\n\n      // Update clipping region to intersection of\n      // existing region with specified rectangle.\n      RectangleF intersectRectF = RectangleF(100.0F,100.0F,200.0F,200.0F);\n      e-&gt;Graphics-&gt;IntersectClip( intersectRectF );\n\n      // Fill rectangle to demonstrate effective clipping region.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Blue ), 0, 0, 500, 500 );\n\n      // Reset clipping region to infinite.\n      e-&gt;Graphics-&gt;ResetClip();\n\n      // Draw clipRect and intersectRect to screen.\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Black ), clipRect );\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Red ), Rectangle::Round( intersectRectF ) );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#125\">        private void IntersectClipRectangleF1(PaintEventArgs e)\n        {\n\n            // Set clipping region.\n            Rectangle clipRect = new Rectangle(0, 0, 200, 200);\n            e.Graphics.SetClip(clipRect);\n\n            // Update clipping region to intersection of\n\n            // existing region with specified rectangle.\n            RectangleF intersectRectF = new RectangleF(100.0F, 100.0F, 200.0F, 200.0F);\n            e.Graphics.IntersectClip(intersectRectF);\n\n            // Fill rectangle to demonstrate effective clipping region.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Blue), 0, 0, 500, 500);\n\n            // Reset clipping region to infinite.\n            e.Graphics.ResetClip();\n\n            // Draw clipRect and intersectRect to screen.\n            e.Graphics.DrawRectangle(new Pen(Color.Black), clipRect);\n            e.Graphics.DrawRectangle(new Pen(Color.Red), Rectangle.Round(intersectRectF));\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#125\">    Private Sub IntersectClipRectangleF1(ByVal e As PaintEventArgs)\n\n        &#39; Set clipping region.\n        Dim clipRect As New Rectangle(0, 0, 200, 200)\n        e.Graphics.SetClip(clipRect)\n\n        &#39; Update clipping region to intersection of\n\n        &#39; existing region with specified rectangle.\n        Dim intersectRectF As New RectangleF(100.0F, 100.0F, 200.0F, 200.0F)\n        e.Graphics.IntersectClip(intersectRectF)\n\n        &#39; Fill rectangle to demonstrate effective clipping region.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Blue), 0, 0, _\n        500, 500)\n\n        &#39; Reset clipping region to infinite.\n        e.Graphics.ResetClip()\n\n        &#39; Draw clipRect and intersectRect to screen.\n        e.Graphics.DrawRectangle(New Pen(Color.Black), clipRect)\n        e.Graphics.DrawRectangle(New Pen(Color.Red), _\n        Rectangle.Round(intersectRectF))\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_IntersectClip_System_Drawing_Region_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_IntersectClip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IntersectClip(Region)</div>        \r\n          </div>\r\n    \r\n            <p>Updates the clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the intersection of the current clip region and the specified <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void IntersectClip (System.Drawing.Region region);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>region</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to intersect with the current region.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method assigns to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Clip_\" data-linktype=\"relative-path\">Clip</a> property of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> the area represented by the intersection of the current clip region and the region specified by the <code>region</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a rectangle with upper-left corner at (0, 0).  </p>\n</li>\n<li><p>Creates a region and sets it to the rectangle, and sets the clipping region to this region.  </p>\n</li>\n<li><p>Creates a second rectangle with upper-left corner at (100, 100).  </p>\n</li>\n<li><p>Creates a region and sets it to the second rectangle, and sets the clipping region to the intersection of this region and the current clipping region (the first rectangle) using a combine mode of <a class=\"xref\" href=\"system.drawing.drawing2d.combinemode\" data-linktype=\"relative-path\">CombineMode</a>.  </p>\n</li>\n<li><p>Fills a large rectangle that includes both previous regions with a solid blue brush.  </p>\n</li>\n<li><p>Resets the clipping region to infinite.  </p>\n</li>\n<li><p>Draws rectangles around the two clipping regions. It uses a black pen for the first clipping region and a red pen for the second clipping region.  </p>\n<p>The result is that only the intersection of the two regions is filled with blue.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#126\">public:\n   void IntersectClipRegion( PaintEventArgs^ e )\n   {\n      // Set clipping region.\n      Rectangle clipRect = Rectangle(0,0,200,200);\n      System::Drawing::Region^ clipRegion = gcnew System::Drawing::Region( clipRect );\n      e-&gt;Graphics-&gt;SetClip( clipRegion, CombineMode::Replace );\n\n      // Update clipping region to intersection of\n      // existing region with specified rectangle.\n      Rectangle intersectRect = Rectangle(100,100,200,200);\n      System::Drawing::Region^ intersectRegion = gcnew System::Drawing::Region( intersectRect );\n      e-&gt;Graphics-&gt;IntersectClip( intersectRegion );\n\n      // Fill rectangle to demonstrate effective clipping region.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Blue ), 0, 0, 500, 500 );\n\n      // Reset clipping region to infinite.\n      e-&gt;Graphics-&gt;ResetClip();\n\n      // Draw clipRect and intersectRect to screen.\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Black ), clipRect );\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Red ), intersectRect );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#126\">        private void IntersectClipRegion(PaintEventArgs e)\n        {\n\n            // Set clipping region.\n            Rectangle clipRect = new Rectangle(0, 0, 200, 200);\n            Region clipRegion = new Region(clipRect);\n            e.Graphics.SetClip(clipRegion, CombineMode.Replace);\n\n            // Update clipping region to intersection of\n\n            // existing region with specified rectangle.\n            Rectangle intersectRect = new Rectangle(100, 100, 200, 200);\n            Region intersectRegion = new Region(intersectRect);\n            e.Graphics.IntersectClip(intersectRegion);\n\n            // Fill rectangle to demonstrate effective clipping region.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Blue), 0, 0, 500, 500);\n\n            // Reset clipping region to infinite.\n            e.Graphics.ResetClip();\n\n            // Draw clipRect and intersectRect to screen.\n            e.Graphics.DrawRectangle(new Pen(Color.Black), clipRect);\n            e.Graphics.DrawRectangle(new Pen(Color.Red), intersectRect);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#126\">    Private Sub IntersectClipRegion(ByVal e As PaintEventArgs)\n\n        &#39; Set clipping region.\n        Dim clipRect As New Rectangle(0, 0, 200, 200)\n        Dim clipRegion As New [Region](clipRect)\n        e.Graphics.SetClip(clipRegion, CombineMode.Replace)\n\n        &#39; Update clipping region to intersection of\n\n        &#39; existing region with specified rectangle.\n        Dim intersectRect As New Rectangle(100, 100, 200, 200)\n        Dim intersectRegion As New [Region](intersectRect)\n        e.Graphics.IntersectClip(intersectRegion)\n\n        &#39; Fill rectangle to demonstrate effective clipping region.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Blue), 0, 0, _\n        500, 500)\n\n        &#39; Reset clipping region to infinite.\n        e.Graphics.ResetClip()\n\n        &#39; Draw clipRect and intersectRect to screen.\n        e.Graphics.DrawRectangle(New Pen(Color.Black), clipRect)\n        e.Graphics.DrawRectangle(New Pen(Color.Red), intersectRect)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_IsVisible_System_Drawing_Point_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(Point)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the specified <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure is contained within the visible clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (System.Drawing.Point point);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>point</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure to test for visibility.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the point specified by the <code>point</code> parameter is contained within the visible clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <a class=\"xref\" href=\"system.drawing.drawing2d.combinemode\" data-linktype=\"relative-path\">CombineMode</a>.  </p>\n</li>\n<li><p>Creates two points, one inside the clipping region and one outside.  </p>\n</li>\n<li><p>Tests each of the points for visibility and draws only the visible one.  </p>\n<p>The result is one small red circle, which is within the clip region.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#127\">public:\n   void IsVisiblePoint( PaintEventArgs^ e )\n   {\n      // Set clip region.\n      System::Drawing::Region^ clipRegion = gcnew System::Drawing::Region( Rectangle(50,50,100,100) );\n      e-&gt;Graphics-&gt;SetClip( clipRegion, CombineMode::Replace );\n\n      // Set up coordinates of points.\n      int x1 = 100;\n      int y1 = 100;\n      int x2 = 200;\n      int y2 = 200;\n      Point point1 = Point(x1,y1);\n      Point point2 = Point(x2,y2);\n\n      // If point is visible, fill ellipse that represents it.\n      if ( e-&gt;Graphics-&gt;IsVisible( point1 ) )\n      {\n         e-&gt;Graphics-&gt;FillEllipse( gcnew SolidBrush( Color::Red ), x1, y1, 10, 10 );\n      }\n\n      if ( e-&gt;Graphics-&gt;IsVisible( point2 ) )\n      {\n         e-&gt;Graphics-&gt;FillEllipse( gcnew SolidBrush( Color::Blue ), x2, y2, 10, 10 );\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#127\">        private void IsVisiblePoint(PaintEventArgs e)\n        {\n\n            // Set clip region.\n            Region clipRegion = new Region(new Rectangle(50, 50, 100, 100));\n            e.Graphics.SetClip(clipRegion, CombineMode.Replace);\n\n            // Set up coordinates of points.\n            int x1 = 100;\n            int y1 = 100;\n            int x2 = 200;\n            int y2 = 200;\n            Point point1 = new Point(x1, y1);\n            Point point2 = new Point(x2, y2);\n\n            // If point is visible, fill ellipse that represents it.\n            if (e.Graphics.IsVisible(point1))\n            {\n                e.Graphics.FillEllipse(new SolidBrush(Color.Red), x1, y1, 10, 10);\n            }\n            if (e.Graphics.IsVisible(point2))\n            {\n                e.Graphics.FillEllipse(new SolidBrush(Color.Blue), x2, y2, 10, 10);\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#127\">    Private Sub IsVisiblePoint(ByVal e As PaintEventArgs)\n\n        &#39; Set clip region.\n        Dim clipRegion As New [Region](New Rectangle(50, 50, 100, 100))\n        e.Graphics.SetClip(clipRegion, CombineMode.Replace)\n\n        &#39; Set up coordinates of points.\n        Dim x1 As Integer = 100\n        Dim y1 As Integer = 100\n        Dim x2 As Integer = 200\n        Dim y2 As Integer = 200\n        Dim point1 As New Point(x1, y1)\n        Dim point2 As New Point(x2, y2)\n\n        &#39; If point is visible, fill ellipse that represents it.\n        If e.Graphics.IsVisible(point1) Then\n            e.Graphics.FillEllipse(New SolidBrush(Color.Red), x1, y1, _\n            10, 10)\n        End If\n        If e.Graphics.IsVisible(point2) Then\n            e.Graphics.FillEllipse(New SolidBrush(Color.Blue), x2, y2, _\n            10, 10)\n        End If\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_IsVisible_System_Drawing_PointF_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(PointF)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the specified <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure is contained within the visible clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (System.Drawing.PointF point);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>point</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure to test for visibility.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the point specified by the <code>point</code> parameter is contained within the visible clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a rectangular clipping region and sets it as the clipping region for the graphics of the form using <a class=\"xref\" href=\"system.drawing.drawing2d.combinemode\" data-linktype=\"relative-path\">CombineMode</a>.  </p>\n</li>\n<li><p>Creates two points, one inside the clipping region and one outside.  </p>\n</li>\n<li><p>Tests each of the points for visibility and draws only the visible one.  </p>\n<p>The result is one small red circle, which is within the clip region.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#128\">public:\n   void IsVisiblePointF( PaintEventArgs^ e )\n   {\n      // Set clip region.\n      System::Drawing::Region^ clipRegion = gcnew System::Drawing::Region( Rectangle(50,50,100,100) );\n      e-&gt;Graphics-&gt;SetClip( clipRegion, CombineMode::Replace );\n\n      // Set up coordinates of points.\n      float x1 = 100.0F;\n      float y1 = 100.0F;\n      float x2 = 200.0F;\n      float y2 = 200.0F;\n      PointF point1 = PointF(x1,y1);\n      PointF point2 = PointF(x2,y2);\n\n      // If point is visible, fill ellipse that represents it.\n      if ( e-&gt;Graphics-&gt;IsVisible( point1 ) )\n      {\n         e-&gt;Graphics-&gt;FillEllipse( gcnew SolidBrush( Color::Red ), x1, y1, 10.0F, 10.0F );\n      }\n\n      if ( e-&gt;Graphics-&gt;IsVisible( point2 ) )\n      {\n         e-&gt;Graphics-&gt;FillEllipse( gcnew SolidBrush( Color::Blue ), x2, y2, 10.0F, 10.0F );\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#128\">        private void IsVisiblePointF(PaintEventArgs e)\n        {\n\n            // Set clip region.\n            Region clipRegion = new Region(new Rectangle(50, 50, 100, 100));\n            e.Graphics.SetClip(clipRegion, CombineMode.Replace);\n\n            // Set up coordinates of points.\n            float x1 = 100.0F;\n            float y1 = 100.0F;\n            float x2 = 200.0F;\n            float y2 = 200.0F;\n            PointF point1 = new PointF(x1, y1);\n            PointF point2 = new PointF(x2, y2);\n\n            // If point is visible, fill ellipse that represents it.\n            if (e.Graphics.IsVisible(point1))\n            {\n                e.Graphics.FillEllipse(new SolidBrush(Color.Red), x1, y1, 10.0F, 10.0F);\n            }\n            if (e.Graphics.IsVisible(point2))\n            {\n                e.Graphics.FillEllipse(new SolidBrush(Color.Blue), x2, y2, 10.0F, 10.0F);\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#128\">    Private Sub IsVisiblePointF(ByVal e As PaintEventArgs)\n\n        &#39; Set clip region.\n        Dim clipRegion As New [Region](New Rectangle(50, 50, 100, 100))\n        e.Graphics.SetClip(clipRegion, CombineMode.Replace)\n\n        &#39; Set up coordinates of points.\n        Dim x1 As Single = 100.0F\n        Dim y1 As Single = 100.0F\n        Dim x2 As Single = 200.0F\n        Dim y2 As Single = 200.0F\n        Dim point1 As New PointF(x1, y1)\n        Dim point2 As New PointF(x2, y2)\n\n        &#39; If point is visible, fill ellipse that represents it.\n        If e.Graphics.IsVisible(point1) Then\n            e.Graphics.FillEllipse(New SolidBrush(Color.Red), x1, y1, _\n            10.0F, 10.0F)\n        End If\n        If e.Graphics.IsVisible(point2) Then\n            e.Graphics.FillEllipse(New SolidBrush(Color.Blue), x2, y2, _\n            10.0F, 10.0F)\n        End If\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_IsVisible_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the rectangle specified by a <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure is contained within the visible clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (System.Drawing.Rectangle rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure to test for visibility.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the rectangle specified by the <code>rect</code> parameter is contained within the visible clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using<a class=\"xref\" href=\"system.drawing.drawing2d.combinemode\" data-linktype=\"relative-path\">CombineMode</a>.  </p>\n</li>\n<li><p>Creates the location and size of two rectangles, one inside the clipping region and one outside.  </p>\n</li>\n<li><p>Tests each of the rectangles for visibility and draws only the visible one.  </p>\n<p>The result is one small red rectangle, which is within the clip region.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#129\">public:\n   void IsVisibleRectangle( PaintEventArgs^ e )\n   {\n      // Set clip region.\n      System::Drawing::Region^ clipRegion = gcnew System::Drawing::Region( Rectangle(50,50,100,100) );\n      e-&gt;Graphics-&gt;SetClip( clipRegion, CombineMode::Replace );\n\n      // Set up coordinates of rectangles.\n      Rectangle rect1 = Rectangle(100,100,20,20);\n      Rectangle rect2 = Rectangle(200,200,20,20);\n\n      // If rectangle is visible, fill it.\n      if ( e-&gt;Graphics-&gt;IsVisible( rect1 ) )\n      {\n         e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Red ), rect1 );\n      }\n\n      if ( e-&gt;Graphics-&gt;IsVisible( rect2 ) )\n      {\n         e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Blue ), rect2 );\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#129\">        private void IsVisibleRectangle(PaintEventArgs e)\n        {\n\n            // Set clip region.\n            Region clipRegion = new Region(new Rectangle(50, 50, 100, 100));\n            e.Graphics.SetClip(clipRegion, CombineMode.Replace);\n\n            // Set up coordinates of rectangles.\n            Rectangle rect1 = new Rectangle(100, 100, 20, 20);\n            Rectangle rect2 = new Rectangle(200, 200, 20, 20);\n\n            // If rectangle is visible, fill it.\n            if (e.Graphics.IsVisible(rect1))\n            {\n                e.Graphics.FillRectangle(new SolidBrush(Color.Red), rect1);\n            }\n            if (e.Graphics.IsVisible(rect2))\n            {\n                e.Graphics.FillRectangle(new SolidBrush(Color.Blue), rect2);\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#129\">    Private Sub IsVisibleRectangle(ByVal e As PaintEventArgs)\n\n        &#39; Set clip region.\n        Dim clipRegion As New [Region](New Rectangle(50, 50, 100, 100))\n        e.Graphics.SetClip(clipRegion, CombineMode.Replace)\n\n        &#39; Set up coordinates of rectangles.\n        Dim rect1 As New Rectangle(100, 100, 20, 20)\n        Dim rect2 As New Rectangle(200, 200, 20, 20)\n\n        &#39; If rectangle is visible, fill it.\n        If e.Graphics.IsVisible(rect1) Then\n            e.Graphics.FillRectangle(New SolidBrush(Color.Red), rect1)\n        End If\n        If e.Graphics.IsVisible(rect2) Then\n            e.Graphics.FillRectangle(New SolidBrush(Color.Blue), rect2)\n        End If\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_IsVisible_System_Drawing_RectangleF_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(RectangleF)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the rectangle specified by a <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure is contained within the visible clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (System.Drawing.RectangleF rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure to test for visibility.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the rectangle specified by the <code>rect</code> parameter is contained within the visible clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <a class=\"xref\" href=\"system.drawing.drawing2d.combinemode\" data-linktype=\"relative-path\">CombineMode</a>.  </p>\n</li>\n<li><p>Creates two rectangles, one inside the clipping region and one outside.  </p>\n</li>\n<li><p>Tests each of the rectangles for visibility and draws only the visible one.  </p>\n<p>The result is one small red rectangle, which is within the clip region.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#130\">public:\n   void IsVisibleRectangleF( PaintEventArgs^ e )\n   {\n      // Set clip region.\n      System::Drawing::Region^ clipRegion = gcnew System::Drawing::Region( Rectangle(50,50,100,100) );\n      e-&gt;Graphics-&gt;SetClip( clipRegion, CombineMode::Replace );\n\n      // Set up coordinates of rectangles.\n      RectangleF rect1 = RectangleF(100.0F,100.0F,20.0F,20.0F);\n      RectangleF rect2 = RectangleF(200.0F,200.0F,20.0F,20.0F);\n\n      // If rectangle is visible, fill it.\n      if ( e-&gt;Graphics-&gt;IsVisible( rect1 ) )\n      {\n         e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Red ), rect1 );\n      }\n\n      if ( e-&gt;Graphics-&gt;IsVisible( rect2 ) )\n      {\n         e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Blue ), rect2 );\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#130\">        private void IsVisibleRectangleF(PaintEventArgs e)\n        {\n\n            // Set clip region.\n            Region clipRegion = new Region(new Rectangle(50, 50, 100, 100));\n            e.Graphics.SetClip(clipRegion, CombineMode.Replace);\n\n            // Set up coordinates of rectangles.\n            RectangleF rect1 = new RectangleF(100.0F, 100.0F, 20.0F, 20.0F);\n            RectangleF rect2 = new RectangleF(200.0F, 200.0F, 20.0F, 20.0F);\n\n            // If rectangle is visible, fill it.\n            if (e.Graphics.IsVisible(rect1))\n            {\n                e.Graphics.FillRectangle(new SolidBrush(Color.Red), rect1);\n            }\n            if (e.Graphics.IsVisible(rect2))\n            {\n                e.Graphics.FillRectangle(new SolidBrush(Color.Blue), rect2);\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#130\">    Private Sub IsVisibleRectangleF(ByVal e As PaintEventArgs)\n\n        &#39; Set clip region.\n        Dim clipRegion As New [Region](New Rectangle(50, 50, 100, 100))\n        e.Graphics.SetClip(clipRegion, CombineMode.Replace)\n\n        &#39; Set up coordinates of rectangles.\n        Dim rect1 As New RectangleF(100.0F, 100.0F, 20.0F, 20.0F)\n        Dim rect2 As New RectangleF(200.0F, 200.0F, 20.0F, 20.0F)\n\n        &#39; If rectangle is visible, fill it.\n        If e.Graphics.IsVisible(rect1) Then\n            e.Graphics.FillRectangle(New SolidBrush(Color.Red), rect1)\n        End If\n        If e.Graphics.IsVisible(rect2) Then\n            e.Graphics.FillRectangle(New SolidBrush(Color.Blue), rect2)\n        End If\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_IsVisible_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the point specified by a pair of coordinates is contained within the visible clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (int x, int y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the point to test for visibility.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the point to test for visibility.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the point defined by the <code>x</code> and <code>y</code> parameters is contained within the visible clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <a class=\"xref\" href=\"system.drawing.drawing2d.combinemode\" data-linktype=\"relative-path\">CombineMode</a>.  </p>\n</li>\n<li><p>Creates two points, one inside the clipping region and one outside.  </p>\n</li>\n<li><p>Tests each of the points for visibility and draws only the visible one.  </p>\n<p>The result is one small red circle, which is within the clip region.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#131\">public:\n   void IsVisibleInt( PaintEventArgs^ e )\n   {\n      // Set clip region.\n      System::Drawing::Region^ clipRegion = gcnew System::Drawing::Region( Rectangle(50,50,100,100) );\n      e-&gt;Graphics-&gt;SetClip( clipRegion, CombineMode::Replace );\n\n      // Set up coordinates of points.\n      int x1 = 100;\n      int y1 = 100;\n      int x2 = 200;\n      int y2 = 200;\n\n      // If point is visible, fill ellipse that represents it.\n      if ( e-&gt;Graphics-&gt;IsVisible( x1, y1 ) )\n      {\n         e-&gt;Graphics-&gt;FillEllipse( gcnew SolidBrush( Color::Red ), x1, y1, 10, 10 );\n      }\n\n      if ( e-&gt;Graphics-&gt;IsVisible( x2, y2 ) )\n      {\n         e-&gt;Graphics-&gt;FillEllipse( gcnew SolidBrush( Color::Blue ), x2, y2, 10, 10 );\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#131\">        private void IsVisibleInt(PaintEventArgs e)\n        {\n\n            // Set clip region.\n            Region clipRegion = new Region(new Rectangle(50, 50, 100, 100));\n            e.Graphics.SetClip(clipRegion, CombineMode.Replace);\n\n            // Set up coordinates of points.\n            int x1 = 100;\n            int y1 = 100;\n            int x2 = 200;\n            int y2 = 200;\n\n            // If point is visible, fill ellipse that represents it.\n            if (e.Graphics.IsVisible(x1, y1))\n            {\n                e.Graphics.FillEllipse(new SolidBrush(Color.Red), x1, y1, 10, 10);\n            }\n            if (e.Graphics.IsVisible(x2, y2))\n            {\n                e.Graphics.FillEllipse(new SolidBrush(Color.Blue), x2, y2, 10, 10);\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#131\">    Private Sub IsVisibleInt(ByVal e As PaintEventArgs)\n\n        &#39; Set clip region.\n        Dim clipRegion As New [Region](New Rectangle(50, 50, 100, 100))\n        e.Graphics.SetClip(clipRegion, CombineMode.Replace)\n\n        &#39; Set up coordinates of points.\n        Dim x1 As Integer = 100\n        Dim y1 As Integer = 100\n        Dim x2 As Integer = 200\n        Dim y2 As Integer = 200\n\n        &#39; If point is visible, fill ellipse that represents it.\n        If e.Graphics.IsVisible(x1, y1) Then\n            e.Graphics.FillEllipse(New SolidBrush(Color.Red), x1, y1, _\n            10, 10)\n        End If\n        If e.Graphics.IsVisible(x2, y2) Then\n            e.Graphics.FillEllipse(New SolidBrush(Color.Blue), x2, y2, _\n            10, 10)\n        End If\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_IsVisible_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the point specified by a pair of coordinates is contained within the visible clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (float x, float y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the point to test for visibility.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the point to test for visibility.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the point defined by the <code>x</code> and <code>y</code> parameters is contained within the visible clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <a class=\"xref\" href=\"system.drawing.drawing2d.combinemode\" data-linktype=\"relative-path\">CombineMode</a>.  </p>\n</li>\n<li><p>Creates two points, one inside the clipping region and one outside.  </p>\n</li>\n<li><p>Tests each of the points for visibility and draws only the visible one.  </p>\n<p>The result is one small red circle, which is within the clip region.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#133\">public:\n   void IsVisibleFloat( PaintEventArgs^ e )\n   {\n      // Set clip region.\n      System::Drawing::Region^ clipRegion = gcnew System::Drawing::Region( Rectangle(50,50,100,100) );\n      e-&gt;Graphics-&gt;SetClip( clipRegion, CombineMode::Replace );\n\n      // Set up coordinates of points.\n      float x1 = 100.0F;\n      float y1 = 100.0F;\n      float x2 = 200.0F;\n      float y2 = 200.0F;\n\n      // If point is visible, fill ellipse that represents it.\n      if ( e-&gt;Graphics-&gt;IsVisible( x1, y1 ) )\n      {\n         e-&gt;Graphics-&gt;FillEllipse( gcnew SolidBrush( Color::Red ), x1, y1, 10.0F, 10.0F );\n      }\n\n      if ( e-&gt;Graphics-&gt;IsVisible( x2, y2 ) )\n      {\n         e-&gt;Graphics-&gt;FillEllipse( gcnew SolidBrush( Color::Blue ), x2, y2, 10.0F, 10.0F );\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#133\">        private void IsVisibleFloat(PaintEventArgs e)\n        {\n\n            // Set clip region.\n            Region clipRegion = new Region(new Rectangle(50, 50, 100, 100));\n            e.Graphics.SetClip(clipRegion, CombineMode.Replace);\n\n            // Set up coordinates of points.\n            float x1 = 100.0F;\n            float y1 = 100.0F;\n            float x2 = 200.0F;\n            float y2 = 200.0F;\n\n            // If point is visible, fill ellipse that represents it.\n            if (e.Graphics.IsVisible(x1, y1))\n            {\n                e.Graphics.FillEllipse(new SolidBrush(Color.Red), x1, y1, 10.0F, 10.0F);\n            }\n            if (e.Graphics.IsVisible(x2, y2))\n            {\n                e.Graphics.FillEllipse(new SolidBrush(Color.Blue), x2, y2, 10.0F, 10.0F);\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#133\">    Private Sub IsVisibleFloat(ByVal e As PaintEventArgs)\n\n        &#39; Set clip region.\n        Dim clipRegion As New [Region](New Rectangle(50, 50, 100, 100))\n        e.Graphics.SetClip(clipRegion, CombineMode.Replace)\n\n        &#39; Set up coordinates of points.\n        Dim x1 As Single = 100.0F\n        Dim y1 As Single = 100.0F\n        Dim x2 As Single = 200.0F\n        Dim y2 As Single = 200.0F\n\n        &#39; If point is visible, fill ellipse that represents it.\n        If e.Graphics.IsVisible(x1, y1) Then\n            e.Graphics.FillEllipse(New SolidBrush(Color.Red), x1, y1, _\n            10.0F, 10.0F)\n        End If\n        If e.Graphics.IsVisible(x2, y2) Then\n            e.Graphics.FillEllipse(New SolidBrush(Color.Blue), x2, y2, _\n            10.0F, 10.0F)\n        End If\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_IsVisible_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(Int32,Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the rectangle specified by a pair of coordinates, a width, and a height is contained within the visible clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (int x, int y, int width, int height);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the rectangle to test for visibility.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the rectangle to test for visibility.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the rectangle to test for visibility.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the rectangle to test for visibility.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the rectangle defined by the <code>x</code>, <code>y</code>, <code>width</code>, and <code>height</code> parameters is contained within the visible clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <a class=\"xref\" href=\"system.drawing.drawing2d.combinemode\" data-linktype=\"relative-path\">CombineMode</a>.  </p>\n</li>\n<li><p>Creates the location and size of two rectangles, one inside the clipping region and one outside.  </p>\n</li>\n<li><p>Tests each of the rectangles for visibility and draws only the visible one.  </p>\n<p>The result is one small red rectangle, which is within the clip region.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#132\">public:\n   void IsVisible4Int( PaintEventArgs^ e )\n   {\n      // Set clip region.\n      System::Drawing::Region^ clipRegion = gcnew System::Drawing::Region( Rectangle(50,50,100,100) );\n      e-&gt;Graphics-&gt;SetClip( clipRegion, CombineMode::Replace );\n\n      // Set up coordinates of rectangles.\n      int x1 = 100;\n      int y1 = 100;\n      int width1 = 20;\n      int height1 = 20;\n      int x2 = 200;\n      int y2 = 200;\n      int width2 = 20;\n      int height2 = 20;\n\n      // If rectangle is visible, fill it.\n      if ( e-&gt;Graphics-&gt;IsVisible( x1, y1, width1, height1 ) )\n      {\n         e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Red ), x1, y1, width1, height1 );\n      }\n\n      if ( e-&gt;Graphics-&gt;IsVisible( x2, y2, width2, height2 ) )\n      {\n         e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Blue ), x2, y2, width2, height2 );\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#132\">        private void IsVisible4Int(PaintEventArgs e)\n        {\n\n            // Set clip region.\n            Region clipRegion = new Region(new Rectangle(50, 50, 100, 100));\n            e.Graphics.SetClip(clipRegion, CombineMode.Replace);\n\n            // Set up coordinates of rectangles.\n            int x1 = 100;\n            int y1 = 100;\n            int width1 = 20;\n            int height1 = 20;\n            int x2 = 200;\n            int y2 = 200;\n            int width2 = 20;\n            int height2 = 20;\n\n            // If rectangle is visible, fill it.\n            if (e.Graphics.IsVisible(x1, y1, width1, height1))\n            {\n                e.Graphics.FillRectangle(new SolidBrush(Color.Red), x1, y1, width1, height1);\n            }\n            if (e.Graphics.IsVisible(x2, y2, width2, height2))\n            {\n                e.Graphics.FillRectangle(new SolidBrush(Color.Blue), x2, y2, width2, height2);\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#132\">    Private Sub IsVisible4Int(ByVal e As PaintEventArgs)\n\n        &#39; Set clip region.\n        Dim clipRegion As New [Region](New Rectangle(50, 50, 100, 100))\n        e.Graphics.SetClip(clipRegion, CombineMode.Replace)\n\n        &#39; Set up coordinates of rectangles.\n        Dim x1 As Integer = 100\n        Dim y1 As Integer = 100\n        Dim width1 As Integer = 20\n        Dim height1 As Integer = 20\n        Dim x2 As Integer = 200\n        Dim y2 As Integer = 200\n        Dim width2 As Integer = 20\n        Dim height2 As Integer = 20\n\n        &#39; If rectangle is visible, fill it.\n        If e.Graphics.IsVisible(x1, y1, width1, height1) Then\n            e.Graphics.FillRectangle(New SolidBrush(Color.Red), x1, y1, _\n            width1, height1)\n        End If\n        If e.Graphics.IsVisible(x2, y2, width2, height2) Then\n            e.Graphics.FillRectangle(New SolidBrush(Color.Blue), x2, y2, _\n            width2, height2)\n        End If\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_IsVisible_System_Single_System_Single_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(Single,Single,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the rectangle specified by a pair of coordinates, a width, and a height is contained within the visible clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (float x, float y, float width, float height);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the rectangle to test for visibility.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the rectangle to test for visibility.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Width of the rectangle to test for visibility.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Height of the rectangle to test for visibility.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the rectangle defined by the <code>x</code>, <code>y</code>, <code>width</code>, and <code>height</code> parameters is contained within the visible clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <a class=\"xref\" href=\"system.drawing.drawing2d.combinemode\" data-linktype=\"relative-path\">CombineMode</a>.  </p>\n</li>\n<li><p>Creates the location and size of two rectangles, one inside the clipping region and one outside.  </p>\n</li>\n<li><p>Tests each of the rectangles for visibility and draws only the visible one.  </p>\n<p>The result is one small red rectangle, which is within the clip region.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#134\">public:\n   void IsVisible4Float( PaintEventArgs^ e )\n   {\n      // Set clip region.\n      System::Drawing::Region^ clipRegion = gcnew System::Drawing::Region( Rectangle(50,50,100,100) );\n      e-&gt;Graphics-&gt;SetClip( clipRegion, CombineMode::Replace );\n\n      // Set up coordinates of rectangles.\n      float x1 = 100.0F;\n      float y1 = 100.0F;\n      float width1 = 20.0F;\n      float height1 = 20.0F;\n      float x2 = 200.0F;\n      float y2 = 200.0F;\n      float width2 = 20.0F;\n      float height2 = 20.0F;\n\n      // If rectangle is visible, fill it.\n      if ( e-&gt;Graphics-&gt;IsVisible( x1, y1, width1, height1 ) )\n      {\n         e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Red ), x1, y1, width1, height1 );\n      }\n\n      if ( e-&gt;Graphics-&gt;IsVisible( x2, y2, width2, height2 ) )\n      {\n         e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Blue ), x2, y2, width2, height2 );\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#134\">        private void IsVisible4Float(PaintEventArgs e)\n        {\n\n            // Set clip region.\n            Region clipRegion = new Region(new Rectangle(50, 50, 100, 100));\n            e.Graphics.SetClip(clipRegion, CombineMode.Replace);\n\n            // Set up coordinates of rectangles.\n            float x1 = 100.0F;\n            float y1 = 100.0F;\n            float width1 = 20.0F;\n            float height1 = 20.0F;\n            float x2 = 200.0F;\n            float y2 = 200.0F;\n            float width2 = 20.0F;\n            float height2 = 20.0F;\n\n            // If rectangle is visible, fill it.\n            if (e.Graphics.IsVisible(x1, y1, width1, height1))\n            {\n                e.Graphics.FillRectangle(new SolidBrush(Color.Red), x1, y1, width1, height1);\n            }\n            if (e.Graphics.IsVisible(x2, y2, width2, height2))\n            {\n                e.Graphics.FillRectangle(new SolidBrush(Color.Blue), x2, y2, width2, height2);\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#134\">    Private Sub IsVisible4Float(ByVal e As PaintEventArgs)\n\n        &#39; Set clip region.\n        Dim clipRegion As New [Region](New Rectangle(50, 50, 100, 100))\n        e.Graphics.SetClip(clipRegion, CombineMode.Replace)\n\n        &#39; Set up coordinates of rectangles.\n        Dim x1 As Single = 100.0F\n        Dim y1 As Single = 100.0F\n        Dim width1 As Single = 20.0F\n        Dim height1 As Single = 20.0F\n        Dim x2 As Single = 200.0F\n        Dim y2 As Single = 200.0F\n        Dim width2 As Single = 20.0F\n        Dim height2 As Single = 20.0F\n\n        &#39; If rectangle is visible, fill it.\n        If e.Graphics.IsVisible(x1, y1, width1, height1) Then\n            e.Graphics.FillRectangle(New SolidBrush(Color.Red), x1, y1, _\n            width1, height1)\n        End If\n        If e.Graphics.IsVisible(x2, y2, width2, height2) Then\n            e.Graphics.FillRectangle(New SolidBrush(Color.Blue), x2, y2, _\n            width2, height2)\n        End If\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_MeasureCharacterRanges_System_String_System_Drawing_Font_System_Drawing_RectangleF_System_Drawing_StringFormat_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_MeasureCharacterRanges_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MeasureCharacterRanges(String,Font,RectangleF,StringFormat)</div>        \r\n          </div>\r\n    \r\n            <p>Gets an array of <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> objects, each of which bounds a range of character positions within the specified string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Region[] MeasureCharacterRanges (string text, System.Drawing.Font font, System.Drawing.RectangleF layoutRect, System.Drawing.StringFormat stringFormat);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>String to measure.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>font</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> that defines the text format of the string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>layoutRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the layout rectangle for the string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>stringFormat</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a> that represents formatting information, such as line spacing, for the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>[]</div>\r\n                  </div>\r\n                  <p>This method returns an array of <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> objects, each of which bounds a range of character positions within the specified string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The regions returned by this method are resolution-dependent, so there might be a slight loss of accuracy if strings are recorded in a metafile at one resolution and later played back at a different resolution.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Sets a string &quot;First and Second ranges&quot; and a font for display of the string (&quot;Times New Roman&quot;, 16 point).  </p>\n</li>\n<li><p>Sets two character ranges within the string (which correspond to the words &quot;First&quot; and &quot;Second&quot;).  </p>\n</li>\n<li><p>Creates a rectangle in which to display the string.  </p>\n</li>\n<li><p>Sets the formatting of the string ¾ including the two character ranges.  </p>\n</li>\n<li><p>Draws the string to the screen.  </p>\n</li>\n<li><p>Measures the character ranges, determines rectangles that bound the two specified ranges.  </p>\n</li>\n<li><p>Draws the two rectangles to the screen.  </p>\n<p>The result is the displayed string with the first range (&quot;First&quot;) bounded by a red rectangle and the second range (&quot;Second&quot;) bounded by a blue rectangle.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#135\">public:\n   void MeasureCharacterRangesRegions( PaintEventArgs^ e )\n   {\n      // Set up string.\n      String^ measureString = &quot;First and Second ranges&quot;;\n      System::Drawing::Font^ stringFont = gcnew System::Drawing::Font( &quot;Times New Roman&quot;,16.0F );\n\n      // Set character ranges to &quot;First&quot; and &quot;Second&quot;.\n      array&lt;CharacterRange&gt;^ characterRanges = {CharacterRange(0,5),CharacterRange(10,6)};\n\n      // Create rectangle for layout.\n      float x = 50.0F;\n      float y = 50.0F;\n      float width = 35.0F;\n      float height = 200.0F;\n      RectangleF layoutRect = RectangleF(x,y,width,height);\n\n      // Set string format.\n      StringFormat^ stringFormat = gcnew StringFormat;\n      stringFormat-&gt;FormatFlags = StringFormatFlags::DirectionVertical;\n      stringFormat-&gt;SetMeasurableCharacterRanges( characterRanges );\n\n      // Draw string to screen.\n      e-&gt;Graphics-&gt;DrawString( measureString, stringFont, Brushes::Black, x, y, stringFormat );\n\n      // Measure two ranges in string.\n      array&lt;System::Drawing::Region^&gt;^stringRegions = e-&gt;Graphics-&gt;MeasureCharacterRanges( measureString, \n\tstringFont, layoutRect, stringFormat );\n\n      // Draw rectangle for first measured range.\n      RectangleF measureRect1 = stringRegions[ 0 ]-&gt;GetBounds( e-&gt;Graphics );\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Red,1.0f ), Rectangle::Round( measureRect1 ) );\n\n      // Draw rectangle for second measured range.\n      RectangleF measureRect2 = stringRegions[ 1 ]-&gt;GetBounds( e-&gt;Graphics );\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Blue,1.0f ), Rectangle::Round( measureRect2 ) );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#135\">        private void MeasureCharacterRangesRegions(PaintEventArgs e)\n        {\n\n            // Set up string.\n            string measureString = &quot;First and Second ranges&quot;;\n            Font stringFont = new Font(&quot;Times New Roman&quot;, 16.0F);\n\n            // Set character ranges to &quot;First&quot; and &quot;Second&quot;.\n            CharacterRange[] characterRanges = { new CharacterRange(0, 5), new CharacterRange(10, 6) };\n\n            // Create rectangle for layout.\n            float x = 50.0F;\n            float y = 50.0F;\n            float width = 35.0F;\n            float height = 200.0F;\n            RectangleF layoutRect = new RectangleF(x, y, width, height);\n\n            // Set string format.\n            StringFormat stringFormat = new StringFormat();\n            stringFormat.FormatFlags = StringFormatFlags.DirectionVertical;\n            stringFormat.SetMeasurableCharacterRanges(characterRanges);\n\n            // Draw string to screen.\n            e.Graphics.DrawString(measureString, stringFont, Brushes.Black, x, y, stringFormat);\n\n            // Measure two ranges in string.\n            Region[] stringRegions = e.Graphics.MeasureCharacterRanges(measureString, \n\t\tstringFont, layoutRect, stringFormat);\n\n            // Draw rectangle for first measured range.\n            RectangleF measureRect1 = stringRegions[0].GetBounds(e.Graphics);\n            e.Graphics.DrawRectangle(new Pen(Color.Red, 1), Rectangle.Round(measureRect1));\n\n            // Draw rectangle for second measured range.\n            RectangleF measureRect2 = stringRegions[1].GetBounds(e.Graphics);\n            e.Graphics.DrawRectangle(new Pen(Color.Blue, 1), Rectangle.Round(measureRect2));\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#135\">    Private Sub MeasureCharacterRangesRegions(ByVal e As PaintEventArgs)\n\n        &#39; Set up string.\n        Dim measureString As String = &quot;First and Second ranges&quot;\n        Dim stringFont As New Font(&quot;Times New Roman&quot;, 16.0F)\n\n        &#39; Set character ranges to &quot;First&quot; and &quot;Second&quot;.\n        Dim characterRanges As CharacterRange() = _\n        {New CharacterRange(0, 5), New CharacterRange(10, 6)}\n\n        &#39; Create rectangle for layout.\n        Dim x As Single = 50.0F\n        Dim y As Single = 50.0F\n        Dim width As Single = 35.0F\n        Dim height As Single = 200.0F\n        Dim layoutRect As New RectangleF(x, y, width, height)\n\n        &#39; Set string format.\n        Dim stringFormat As New StringFormat\n        stringFormat.FormatFlags = StringFormatFlags.DirectionVertical\n        stringFormat.SetMeasurableCharacterRanges(characterRanges)\n\n        &#39; Draw string to screen.\n        e.Graphics.DrawString(measureString, stringFont, Brushes.Black, _\n        x, y, stringFormat)\n\n        &#39; Measure two ranges in string.\n        Dim stringRegions() As [Region] = e.Graphics.MeasureCharacterRanges(measureString, _\n\tstringFont, layoutRect, stringFormat)\n\n        &#39; Draw rectangle for first measured range.\n        Dim measureRect1 As RectangleF = _\n        stringRegions(0).GetBounds(e.Graphics)\n        e.Graphics.DrawRectangle(New Pen(Color.Red, 1), _\n        Rectangle.Round(measureRect1))\n\n        &#39; Draw rectangle for second measured range.\n        Dim measureRect2 As RectangleF = _\n        stringRegions(1).GetBounds(e.Graphics)\n        e.Graphics.DrawRectangle(New Pen(Color.Blue, 1), _\n        Rectangle.Round(measureRect2))\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_MeasureString_System_String_System_Drawing_Font_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_MeasureString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MeasureString(String,Font)</div>        \r\n          </div>\r\n    \r\n            <p>Measures the specified string when drawn with the specified <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>String to measure.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>font</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> that defines the text format of the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a></div>\r\n                  </div>\r\n                  <p>This method returns a <a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a> structure that represents the size, in the units specified by the <span class=\"xref\">stem.Drawing.Graphics.PageUnit*</span> property, of the string specified by the <code>text</code> parameter as drawn with the <code>font</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>font</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureString_\" data-linktype=\"relative-path\">MeasureString</a> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs. Also, the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawString_\" data-linktype=\"relative-path\">DrawString</a> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureString_\" data-linktype=\"relative-path\">MeasureString</a>. To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureCharacterRanges_\" data-linktype=\"relative-path\">MeasureCharacterRanges</a> method or one of the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureString_\" data-linktype=\"relative-path\">MeasureString</a> methods that takes a <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a>, and pass <a class=\"xref\" href=\"system.drawing.stringformat#System_Drawing_StringFormat_GenericTypographic_\" data-linktype=\"relative-path\">GenericTypographic</a>. Also, ensure the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_TextRenderingHint_\" data-linktype=\"relative-path\">TextRenderingHint</a> for the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is <a class=\"xref\" href=\"system.drawing.text.textrenderinghint\" data-linktype=\"relative-path\">TextRenderingHint</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a string to measure.  </p>\n</li>\n<li><p>Creates a font object and sets it to Arial (16 point).  </p>\n</li>\n<li><p>Creates a size object and uses it and the font object to measure the size of the string.  </p>\n</li>\n<li><p>Draws a red rectangle using the measured size of the string.  </p>\n</li>\n<li><p>Draws the string within the drawn rectangle.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#136\">public:\n   void MeasureStringMin( PaintEventArgs^ e )\n   {\n      // Set up string.\n      String^ measureString = &quot;Measure String&quot;;\n      System::Drawing::Font^ stringFont = gcnew System::Drawing::Font( &quot;Arial&quot;,16 );\n\n      // Measure string.\n      SizeF stringSize = e-&gt;Graphics-&gt;MeasureString( measureString, stringFont );\n\n      // Draw rectangle representing size of string.\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Red,1.0f ), 0.0F, 0.0F, stringSize.Width, stringSize.Height );\n\n      // Draw string to screen.\n      e-&gt;Graphics-&gt;DrawString( measureString, stringFont, Brushes::Black, PointF(0,0) );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#136\">        private void MeasureStringMin(PaintEventArgs e)\n        {\n\n            // Set up string.\n            string measureString = &quot;Measure String&quot;;\n            Font stringFont = new Font(&quot;Arial&quot;, 16);\n\n            // Measure string.\n            SizeF stringSize = new SizeF();\n            stringSize = e.Graphics.MeasureString(measureString, stringFont);\n\n            // Draw rectangle representing size of string.\n            e.Graphics.DrawRectangle(new Pen(Color.Red, 1), 0.0F, 0.0F, stringSize.Width, stringSize.Height);\n\n            // Draw string to screen.\n            e.Graphics.DrawString(measureString, stringFont, Brushes.Black, new PointF(0, 0));\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#136\">    Private Sub MeasureStringMin(ByVal e As PaintEventArgs)\n\n        &#39; Set up string.\n        Dim measureString As String = &quot;Measure String&quot;\n        Dim stringFont As New Font(&quot;Arial&quot;, 16)\n\n        &#39; Measure string.\n        Dim stringSize As New SizeF\n        stringSize = e.Graphics.MeasureString(measureString, stringFont)\n\n        &#39; Draw rectangle representing size of string.\n        e.Graphics.DrawRectangle(New Pen(Color.Red, 1), 0.0F, 0.0F, _\n        stringSize.Width, stringSize.Height)\n\n        &#39; Draw string to screen.\n        e.Graphics.DrawString(measureString, stringFont, Brushes.Black, _\n        New PointF(0, 0))\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_MeasureString_System_String_System_Drawing_Font_System_Drawing_SizeF_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_MeasureString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MeasureString(String,Font,SizeF)</div>        \r\n          </div>\r\n    \r\n            <p>Measures the specified string when drawn with the specified <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> within the specified layout area.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.SizeF layoutArea);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>String to measure.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>font</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> defines the text format of the string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>layoutArea</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a> structure that specifies the maximum layout area for the text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a></div>\r\n                  </div>\r\n                  <p>This method returns a <a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a> structure that represents the size, in the units specified by the <span class=\"xref\">stem.Drawing.Graphics.PageUnit*</span> property, of the string specified by the <code>text</code> parameter as drawn with the <code>font</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>font</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureString_\" data-linktype=\"relative-path\">MeasureString</a> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs. Also, the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawString_\" data-linktype=\"relative-path\">DrawString</a> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureString_\" data-linktype=\"relative-path\">MeasureString</a>. To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureCharacterRanges_\" data-linktype=\"relative-path\">MeasureCharacterRanges</a> method or one of the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureString_\" data-linktype=\"relative-path\">MeasureString</a> methods that takes a <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a>, and pass <a class=\"xref\" href=\"system.drawing.stringformat#System_Drawing_StringFormat_GenericTypographic_\" data-linktype=\"relative-path\">GenericTypographic</a>. Also, ensure the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_TextRenderingHint_\" data-linktype=\"relative-path\">TextRenderingHint</a> for the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is <a class=\"xref\" href=\"system.drawing.text.textrenderinghint\" data-linktype=\"relative-path\">TextRenderingHint</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a string to measure and a font object set to Arial (16 point).  </p>\n</li>\n<li><p>Sets the maximum layout size of the string.  </p>\n</li>\n<li><p>Creates a size object and uses it, the font object, and the maximum layout size to measure the size of the string.  </p>\n</li>\n<li><p>Draws a red rectangle using the measured size of the string.  </p>\n</li>\n<li><p>Draws the string within the drawn rectangle.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#138\">public:\n   void MeasureStringSizeF( PaintEventArgs^ e )\n   {\n\n      // Set up string.\n      String^ measureString = &quot;Measure String&quot;;\n      System::Drawing::Font^ stringFont = gcnew System::Drawing::Font( &quot;Arial&quot;,16 );\n\n      // Set maximum layout size.\n      SizeF layoutSize = SizeF(200.0F,50.0F);\n\n      // Measure string.\n      SizeF stringSize = e-&gt;Graphics-&gt;MeasureString( measureString, stringFont, layoutSize );\n\n      // Draw rectangle representing size of string.\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Red,1.0f ), 0.0F, 0.0F, stringSize.Width, stringSize.Height );\n\n      // Draw string to screen.\n      e-&gt;Graphics-&gt;DrawString( measureString, stringFont, Brushes::Black, PointF(0,0) );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#138\">        private void MeasureStringSizeF(PaintEventArgs e)\n        {\n\n            // Set up string.\n            string measureString = &quot;Measure String&quot;;\n            Font stringFont = new Font(&quot;Arial&quot;, 16);\n\n            // Set maximum layout size.\n            SizeF layoutSize = new SizeF(200.0F, 50.0F);\n\n            // Measure string.\n            SizeF stringSize = new SizeF();\n            stringSize = e.Graphics.MeasureString(measureString, stringFont, layoutSize);\n\n            // Draw rectangle representing size of string.\n            e.Graphics.DrawRectangle(new Pen(Color.Red, 1), 0.0F, 0.0F, stringSize.Width, stringSize.Height);\n\n            // Draw string to screen.\n            e.Graphics.DrawString(measureString, stringFont, Brushes.Black, new PointF(0, 0));\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#138\">    Private Sub MeasureStringSizeF(ByVal e As PaintEventArgs)\n\n        &#39; Set up string.\n        Dim measureString As String = &quot;Measure String&quot;\n        Dim stringFont As New Font(&quot;Arial&quot;, 16)\n\n        &#39; Set maximum layout size.\n        Dim layoutSize As New SizeF(200.0F, 50.0F)\n\n        &#39; Measure string.\n        Dim stringSize As New SizeF\n        stringSize = e.Graphics.MeasureString(measureString, stringFont, _\n        layoutSize)\n\n        &#39; Draw rectangle representing size of string.\n        e.Graphics.DrawRectangle(New Pen(Color.Red, 1), 0.0F, 0.0F, _\n        stringSize.Width, stringSize.Height)\n\n        &#39; Draw string to screen.\n        e.Graphics.DrawString(measureString, stringFont, Brushes.Black, _\n        New PointF(0, 0))\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_MeasureString_System_String_System_Drawing_Font_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_MeasureString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MeasureString(String,Font,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Measures the specified string when drawn with the specified <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, int width);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>String to measure.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>font</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> that defines the format of the string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Maximum width of the string in pixels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a></div>\r\n                  </div>\r\n                  <p>This method returns a <a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a> structure that represents the size, in the units specified by the <span class=\"xref\">stem.Drawing.Graphics.PageUnit*</span> property, of the string specified in the <code>text</code> parameter as drawn with the <code>font</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>font</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>width</code> parameter specifies the maximum value of the width component of the returned <a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a> structure (<a class=\"xref\" href=\"system.drawing.sizef#System_Drawing_SizeF_Width_\" data-linktype=\"relative-path\">Width</a>). If the <code>width</code> parameter is less than the actual width of the string, the returned <a class=\"xref\" href=\"system.drawing.sizef#System_Drawing_SizeF_Width_\" data-linktype=\"relative-path\">Width</a> component is truncated to a value representing the maximum number of characters that will fit within the specified width. To accommodate the entire string, the returned <a class=\"xref\" href=\"system.drawing.sizef#System_Drawing_SizeF_Height_\" data-linktype=\"relative-path\">Height</a> component is adjusted to a value that allows displaying the string with character wrap.  </p>\n<p> The <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureString_\" data-linktype=\"relative-path\">MeasureString</a> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs. Also, the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawString_\" data-linktype=\"relative-path\">DrawString</a> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureString_\" data-linktype=\"relative-path\">MeasureString</a>. To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureCharacterRanges_\" data-linktype=\"relative-path\">MeasureCharacterRanges</a> method or one of the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureString_\" data-linktype=\"relative-path\">MeasureString</a> methods that takes a <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a>, and pass <a class=\"xref\" href=\"system.drawing.stringformat#System_Drawing_StringFormat_GenericTypographic_\" data-linktype=\"relative-path\">GenericTypographic</a>. Also, ensure the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_TextRenderingHint_\" data-linktype=\"relative-path\">TextRenderingHint</a> for the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is <a class=\"xref\" href=\"system.drawing.text.textrenderinghint\" data-linktype=\"relative-path\">TextRenderingHint</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a string to measure and a font object set to Arial (16 point).  </p>\n</li>\n<li><p>Sets the maximum width of the string.  </p>\n</li>\n<li><p>Creates a size object and uses it, the font object, and the maximum string width to measure the size of the string.  </p>\n</li>\n<li><p>Draws a red rectangle using the measured size of the string.  </p>\n</li>\n<li><p>Draws the string within the drawn rectangle.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#141\">public:\n   void MeasureStringWidth( PaintEventArgs^ e )\n   {\n      // Set up string.\n      String^ measureString = &quot;Measure String&quot;;\n      System::Drawing::Font^ stringFont = gcnew System::Drawing::Font( &quot;Arial&quot;,16 );\n\n      // Set maximum width of string.\n      int stringWidth = 200;\n\n      // Measure string.\n      SizeF stringSize = e-&gt;Graphics-&gt;MeasureString( measureString, stringFont, stringWidth );\n\n      // Draw rectangle representing size of string.\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Red,1.0f ), 0.0F, 0.0F, stringSize.Width, stringSize.Height );\n\n      // Draw string to screen.\n      e-&gt;Graphics-&gt;DrawString( measureString, stringFont, Brushes::Black, PointF(0,0) );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#141\">        private void MeasureStringWidth(PaintEventArgs e)\n        {\n\n            // Set up string.\n            string measureString = &quot;Measure String&quot;;\n            Font stringFont = new Font(&quot;Arial&quot;, 16);\n\n            // Set maximum width of string.\n            int stringWidth = 200;\n\n            // Measure string.\n            SizeF stringSize = new SizeF();\n            stringSize = e.Graphics.MeasureString(measureString, stringFont, stringWidth);\n\n            // Draw rectangle representing size of string.\n            e.Graphics.DrawRectangle(new Pen(Color.Red, 1), 0.0F, 0.0F, stringSize.Width, stringSize.Height);\n\n            // Draw string to screen.\n            e.Graphics.DrawString(measureString, stringFont, Brushes.Black, new PointF(0, 0));\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#141\">    Private Sub MeasureStringWidth(ByVal e As PaintEventArgs)\n\n        &#39; Set up string.\n        Dim measureString As String = &quot;Measure String&quot;\n        Dim stringFont As New Font(&quot;Arial&quot;, 16)\n\n        &#39; Set maximum width of string.\n        Dim stringWidth As Integer = 200\n\n        &#39; Measure string.\n        Dim stringSize As New SizeF\n        stringSize = e.Graphics.MeasureString(measureString, _\n        stringFont, stringWidth)\n\n        &#39; Draw rectangle representing size of string.\n        e.Graphics.DrawRectangle(New Pen(Color.Red, 1), 0.0F, 0.0F, _\n        stringSize.Width, stringSize.Height)\n\n        &#39; Draw string to screen.\n        e.Graphics.DrawString(measureString, stringFont, Brushes.Black, _\n        New PointF(0, 0))\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_MeasureString_System_String_System_Drawing_Font_System_Drawing_PointF_System_Drawing_StringFormat_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_MeasureString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MeasureString(String,Font,PointF,StringFormat)</div>        \r\n          </div>\r\n    \r\n            <p>Measures the specified string when drawn with the specified <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> and formatted with the specified <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.PointF origin, System.Drawing.StringFormat stringFormat);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>String to measure.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>font</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> defines the text format of the string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>origin</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure that represents the upper-left corner of the string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>stringFormat</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a> that represents formatting information, such as line spacing, for the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a></div>\r\n                  </div>\r\n                  <p>This method returns a <a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a> structure that represents the size, in the units specified by the <span class=\"xref\">stem.Drawing.Graphics.PageUnit*</span> property, of the string specified by the <code>text</code> parameter as drawn with the <code>font</code> parameter and the <code>stringFormat</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>font</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureString_\" data-linktype=\"relative-path\">MeasureString</a> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs. Also, the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawString_\" data-linktype=\"relative-path\">DrawString</a> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureString_\" data-linktype=\"relative-path\">MeasureString</a>. To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureCharacterRanges_\" data-linktype=\"relative-path\">MeasureCharacterRanges</a> method or one of the MeasureString methods that takes a <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a>, and pass <a class=\"xref\" href=\"system.drawing.stringformat#System_Drawing_StringFormat_GenericTypographic_\" data-linktype=\"relative-path\">GenericTypographic</a>. Also, ensure the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_TextRenderingHint_\" data-linktype=\"relative-path\">TextRenderingHint</a> for the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is <a class=\"xref\" href=\"system.drawing.text.textrenderinghint\" data-linktype=\"relative-path\">TextRenderingHint</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a string to measure and a font object set to Arial (16 point)  </p>\n</li>\n<li><p>Creates a point to locate the upper-left corner of the string.  </p>\n</li>\n<li><p>Creates a string format object and sets its format flags to <a class=\"xref\" href=\"system.drawing.stringformatflags\" data-linktype=\"relative-path\">StringFormatFlags</a>.  </p>\n</li>\n<li><p>Creates a size object to measure the string.  </p>\n</li>\n<li><p>Measures the size of the string, using the string, the font object, the locating point, and the string format.  </p>\n</li>\n<li><p>Draws a red rectangle using the locating point and the measured size of the string.  </p>\n</li>\n<li><p>Draws the string within the drawn rectangle.  </p>\n<p>The result is a vertical rectangle enclosing a vertical string.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#137\">public:\n   void MeasureStringPointFFormat( PaintEventArgs^ e )\n   {\n\n      // Set up string.\n      String^ measureString = &quot;Measure String&quot;;\n      System::Drawing::Font^ stringFont = gcnew System::Drawing::Font( &quot;Arial&quot;,16 );\n\n      // Set point for upper-left corner of string.\n      float x = 50.0F;\n      float y = 50.0F;\n      PointF ulCorner = PointF(x,y);\n\n      // Set string format.\n      StringFormat^ newStringFormat = gcnew StringFormat;\n      newStringFormat-&gt;FormatFlags = StringFormatFlags::DirectionVertical;\n\n      // Measure string.\n      SizeF stringSize = e-&gt;Graphics-&gt;MeasureString( measureString, stringFont, ulCorner, newStringFormat );\n\n      // Draw rectangle representing size of string.\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Red,1.0f ), x, y, stringSize.Width, stringSize.Height );\n\n      // Draw string to screen.\n      e-&gt;Graphics-&gt;DrawString( measureString, stringFont, Brushes::Black, ulCorner, newStringFormat );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#137\">        private void MeasureStringPointFFormat(PaintEventArgs e)\n        {\n\n            // Set up string.\n            string measureString = &quot;Measure String&quot;;\n            Font stringFont = new Font(&quot;Arial&quot;, 16);\n\n            // Set point for upper-left corner of string.\n            float x = 50.0F;\n            float y = 50.0F;\n            PointF ulCorner = new PointF(x, y);\n\n            // Set string format.\n            StringFormat newStringFormat = new StringFormat();\n            newStringFormat.FormatFlags = StringFormatFlags.DirectionVertical;\n\n            // Measure string.\n            SizeF stringSize = new SizeF();\n            stringSize = e.Graphics.MeasureString(measureString, stringFont, ulCorner, newStringFormat);\n\n            // Draw rectangle representing size of string.\n            e.Graphics.DrawRectangle(new Pen(Color.Red, 1), x, y, stringSize.Width, stringSize.Height);\n\n            // Draw string to screen.\n            e.Graphics.DrawString(measureString, stringFont, Brushes.Black, ulCorner, newStringFormat);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#137\">    Private Sub MeasureStringPointFFormat(ByVal e As PaintEventArgs)\n\n        &#39; Set up string.\n        Dim measureString As String = &quot;Measure String&quot;\n        Dim stringFont As New Font(&quot;Arial&quot;, 16)\n\n        &#39; Set point for upper-left corner of string.\n        Dim x As Single = 50.0F\n        Dim y As Single = 50.0F\n        Dim ulCorner As New PointF(x, y)\n\n        &#39; Set string format.\n        Dim newStringFormat As New StringFormat\n        newStringFormat.FormatFlags = StringFormatFlags.DirectionVertical\n\n        &#39; Measure string.\n        Dim stringSize As New SizeF\n        stringSize = e.Graphics.MeasureString(measureString, stringFont, _\n        ulCorner, newStringFormat)\n\n        &#39; Draw rectangle representing size of string.\n        e.Graphics.DrawRectangle(New Pen(Color.Red, 1), x, y, _\n        stringSize.Width, stringSize.Height)\n\n        &#39; Draw string to screen.\n        e.Graphics.DrawString(measureString, stringFont, Brushes.Black, _\n        ulCorner, newStringFormat)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_MeasureString_System_String_System_Drawing_Font_System_Drawing_SizeF_System_Drawing_StringFormat_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_MeasureString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MeasureString(String,Font,SizeF,StringFormat)</div>        \r\n          </div>\r\n    \r\n            <p>Measures the specified string when drawn with the specified <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> and formatted with the specified <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.SizeF layoutArea, System.Drawing.StringFormat stringFormat);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>String to measure.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>font</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> defines the text format of the string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>layoutArea</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a> structure that specifies the maximum layout area for the text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>stringFormat</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a> that represents formatting information, such as line spacing, for the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a></div>\r\n                  </div>\r\n                  <p>This method returns a <a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a> structure that represents the size, in the units specified by the <span class=\"xref\">stem.Drawing.Graphics.PageUnit*</span> property, of the string specified in the <code>text</code> parameter as drawn with the <code>font</code> parameter and the <code>stringFormat</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>font</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureString_\" data-linktype=\"relative-path\">MeasureString</a> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs. Also, the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawString_\" data-linktype=\"relative-path\">DrawString</a> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureString_\" data-linktype=\"relative-path\">MeasureString</a>. To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureCharacterRanges_\" data-linktype=\"relative-path\">MeasureCharacterRanges</a> method or one of the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureString_\" data-linktype=\"relative-path\">MeasureString</a> methods that takes a <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a>, and pass <a class=\"xref\" href=\"system.drawing.stringformat#System_Drawing_StringFormat_GenericTypographic_\" data-linktype=\"relative-path\">GenericTypographic</a>. Also, ensure the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_TextRenderingHint_\" data-linktype=\"relative-path\">TextRenderingHint</a> for the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is <a class=\"xref\" href=\"system.drawing.text.textrenderinghint\" data-linktype=\"relative-path\">TextRenderingHint</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a string to measure and a font object set to Arial (16 point).  </p>\n</li>\n<li><p>Sets the maximum layout size of the string, creating a size object to measure the string.  </p>\n</li>\n<li><p>Creates a string format object and sets its format flags to <a class=\"xref\" href=\"system.drawing.stringformatflags\" data-linktype=\"relative-path\">StringFormatFlags</a>.  </p>\n</li>\n<li><p>Measures the size of the string, using the string, the font object, the maximum layout size, and the string format.  </p>\n</li>\n<li><p>Draws a red rectangle using the measured size of the string.  </p>\n</li>\n<li><p>Draws the string within the drawn rectangle.  </p>\n<p>The result is a vertical rectangle enclosing a vertical string.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#139\">public:\n   void MeasureStringSizeFFormat( PaintEventArgs^ e )\n   {\n      // Set up string.\n      String^ measureString = &quot;Measure String&quot;;\n      System::Drawing::Font^ stringFont = gcnew System::Drawing::Font( &quot;Arial&quot;,16 );\n\n      // Set maximum layout size.\n      SizeF layoutSize = SizeF(100.0F,200.0F);\n\n      // Set string format.\n      StringFormat^ newStringFormat = gcnew StringFormat;\n      newStringFormat-&gt;FormatFlags = StringFormatFlags::DirectionVertical;\n\n      // Measure string.\n      SizeF stringSize = e-&gt;Graphics-&gt;MeasureString( measureString, stringFont, layoutSize, newStringFormat );\n\n      // Draw rectangle representing size of string.\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Red,1.0f ), 0.0F, 0.0F, stringSize.Width, stringSize.Height );\n\n      // Draw string to screen.\n      e-&gt;Graphics-&gt;DrawString( measureString, stringFont, Brushes::Black, PointF(0,0), newStringFormat );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#139\">        private void MeasureStringSizeFFormat(PaintEventArgs e)\n        {\n\n            // Set up string.\n            string measureString = &quot;Measure String&quot;;\n            Font stringFont = new Font(&quot;Arial&quot;, 16);\n\n            // Set maximum layout size.\n            SizeF layoutSize = new SizeF(100.0F, 200.0F);\n\n            // Set string format.\n            StringFormat newStringFormat = new StringFormat();\n            newStringFormat.FormatFlags = StringFormatFlags.DirectionVertical;\n\n            // Measure string.\n            SizeF stringSize = new SizeF();\n            stringSize = e.Graphics.MeasureString(measureString, stringFont, layoutSize, newStringFormat);\n\n            // Draw rectangle representing size of string.\n            e.Graphics.DrawRectangle(new Pen(Color.Red, 1), 0.0F, 0.0F, stringSize.Width, stringSize.Height);\n\n            // Draw string to screen.\n            e.Graphics.DrawString(measureString, stringFont, Brushes.Black, new PointF(0, 0), newStringFormat);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#139\">    Private Sub MeasureStringSizeFFormat(ByVal e As PaintEventArgs)\n\n        &#39; Set up string.\n        Dim measureString As String = &quot;Measure String&quot;\n        Dim stringFont As New Font(&quot;Arial&quot;, 16)\n\n        &#39; Set maximum layout size.\n        Dim layoutSize As New SizeF(100.0F, 200.0F)\n\n        &#39; Set string format.\n        Dim newStringFormat As New StringFormat\n        newStringFormat.FormatFlags = StringFormatFlags.DirectionVertical\n\n        &#39; Measure string.\n        Dim stringSize As New SizeF\n        stringSize = e.Graphics.MeasureString(measureString, stringFont, _\n        layoutSize, newStringFormat)\n\n        &#39; Draw rectangle representing size of string.\n        e.Graphics.DrawRectangle(New Pen(Color.Red, 1), 0.0F, 0.0F, _\n        stringSize.Width, stringSize.Height)\n\n        &#39; Draw string to screen.\n        e.Graphics.DrawString(measureString, stringFont, Brushes.Black, _\n        New PointF(0, 0), newStringFormat)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_MeasureString_System_String_System_Drawing_Font_System_Int32_System_Drawing_StringFormat_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_MeasureString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MeasureString(String,Font,Int32,StringFormat)</div>        \r\n          </div>\r\n    \r\n            <p>Measures the specified string when drawn with the specified <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> and formatted with the specified <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, int width, System.Drawing.StringFormat format);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>String to measure.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>font</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> that defines the text format of the string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Maximum width of the string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a> that represents formatting information, such as line spacing, for the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a></div>\r\n                  </div>\r\n                  <p>This method returns a <a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a> structure that represents the size, in the units specified by the <span class=\"xref\">stem.Drawing.Graphics.PageUnit*</span> property, of the string specified in the <code>text</code> parameter as drawn with the <code>font</code> parameter and the <code>stringFormat</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>font</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureString_\" data-linktype=\"relative-path\">MeasureString</a> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs. Also, the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawString_\" data-linktype=\"relative-path\">DrawString</a> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureString_\" data-linktype=\"relative-path\">MeasureString</a>. To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureCharacterRanges_\" data-linktype=\"relative-path\">MeasureCharacterRanges</a> method or one of the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureString_\" data-linktype=\"relative-path\">MeasureString</a> methods that takes a <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a>, and pass <a class=\"xref\" href=\"system.drawing.stringformat#System_Drawing_StringFormat_GenericTypographic_\" data-linktype=\"relative-path\">GenericTypographic</a>. Also, ensure the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_TextRenderingHint_\" data-linktype=\"relative-path\">TextRenderingHint</a> for the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is <a class=\"xref\" href=\"system.drawing.text.textrenderinghint\" data-linktype=\"relative-path\">TextRenderingHint</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a string to measure and a font object set it to Arial (16 point).  </p>\n</li>\n<li><p>Sets the maximum width of the string.  </p>\n</li>\n<li><p>Creates a string format object and sets its format flags to<a class=\"xref\" href=\"system.drawing.stringformatflags\" data-linktype=\"relative-path\">StringFormatFlags</a>.  </p>\n</li>\n<li><p>Creates a size object to measure the string.  </p>\n</li>\n<li><p>Measures the size of the string, using the string, the font object, the maximum width, and the string format.  </p>\n</li>\n<li><p>Draws a red rectangle using the measured size of the string.  </p>\n</li>\n<li><p>Draws the string within the drawn rectangle.  </p>\n<p>The result is a vertical rectangle enclosing a vertical string.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#142\">public:\n   void MeasureStringWidthFormat( PaintEventArgs^ e )\n   {\n      // Set up string.\n      String^ measureString = &quot;Measure String&quot;;\n      System::Drawing::Font^ stringFont = gcnew System::Drawing::Font( &quot;Arial&quot;,16 );\n\n      // Set maximum width of string.\n      int stringWidth = 100;\n\n      // Set string format.\n      StringFormat^ newStringFormat = gcnew StringFormat;\n      newStringFormat-&gt;FormatFlags = StringFormatFlags::DirectionVertical;\n\n      // Measure string.\n      SizeF stringSize = e-&gt;Graphics-&gt;MeasureString( measureString, stringFont, stringWidth, newStringFormat );\n\n      // Draw rectangle representing size of string.\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Red,1.0f ), 0.0F, 0.0F, stringSize.Width, stringSize.Height );\n\n      // Draw string to screen.\n      e-&gt;Graphics-&gt;DrawString( measureString, stringFont, Brushes::Black, PointF(0,0), newStringFormat );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#142\">        private void MeasureStringWidthFormat(PaintEventArgs e)\n        {\n\n            // Set up string.\n            string measureString = &quot;Measure String&quot;;\n            Font stringFont = new Font(&quot;Arial&quot;, 16);\n\n            // Set maximum width of string.\n            int stringWidth = 100;\n\n            // Set string format.\n            StringFormat newStringFormat = new StringFormat();\n            newStringFormat.FormatFlags = StringFormatFlags.DirectionVertical;\n\n            // Measure string.\n            SizeF stringSize = new SizeF();\n            stringSize = e.Graphics.MeasureString(measureString, stringFont, stringWidth, newStringFormat);\n\n            // Draw rectangle representing size of string.\n            e.Graphics.DrawRectangle(new Pen(Color.Red, 1), 0.0F, 0.0F, stringSize.Width, stringSize.Height);\n\n            // Draw string to screen.\n            e.Graphics.DrawString(measureString, stringFont, Brushes.Black, new PointF(0, 0), newStringFormat);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#142\">    Private Sub MeasureStringWidthFormat(ByVal e As PaintEventArgs)\n\n        &#39; Set up string.\n        Dim measureString As String = &quot;Measure String&quot;\n        Dim stringFont As New Font(&quot;Arial&quot;, 16)\n\n        &#39; Set maximum width of string.\n        Dim stringWidth As Integer = 100\n\n        &#39; Set string format.\n        Dim newStringFormat As New StringFormat\n        newStringFormat.FormatFlags = StringFormatFlags.DirectionVertical\n\n        &#39; Measure string.\n        Dim stringSize As New SizeF\n        stringSize = e.Graphics.MeasureString(measureString, stringFont, _\n        stringWidth, newStringFormat)\n\n        &#39; Draw rectangle representing size of string.\n        e.Graphics.DrawRectangle(New Pen(Color.Red, 1), 0.0F, 0.0F, _\n        stringSize.Width, stringSize.Height)\n\n        &#39; Draw string to screen.\n        e.Graphics.DrawString(measureString, stringFont, Brushes.Black, _\n        New PointF(0, 0), newStringFormat)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_MeasureString_System_String_System_Drawing_Font_System_Drawing_SizeF_System_Drawing_StringFormat_System_Int32__System_Int32__\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_MeasureString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MeasureString(String,Font,SizeF,StringFormat,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Measures the specified string when drawn with the specified <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> and formatted with the specified <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.SizeF layoutArea, System.Drawing.StringFormat stringFormat, out int charactersFitted, out int linesFilled);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>String to measure.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>font</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> that defines the text format of the string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>layoutArea</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a> structure that specifies the maximum layout area for the text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>stringFormat</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a> that represents formatting information, such as line spacing, for the string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>charactersFitted</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Number of characters in the string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>linesFilled</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Number of text lines in the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a></div>\r\n                  </div>\r\n                  <p>This method returns a <a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a> structure that represents the size of the string, in the units specified by the <span class=\"xref\">stem.Drawing.Graphics.PageUnit*</span> property, of the <code>text</code> parameter as drawn with the <code>font</code> parameter and the <code>stringFormat</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>font</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureString_\" data-linktype=\"relative-path\">MeasureString</a> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs. Also, the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawString_\" data-linktype=\"relative-path\">DrawString</a> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureString_\" data-linktype=\"relative-path\">MeasureString</a>. To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureCharacterRanges_\" data-linktype=\"relative-path\">MeasureCharacterRanges</a> method or one of the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureString_\" data-linktype=\"relative-path\">MeasureString</a> methods that takes a <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a> and pass <a class=\"xref\" href=\"system.drawing.stringformat#System_Drawing_StringFormat_GenericTypographic_\" data-linktype=\"relative-path\">GenericTypographic</a>. Also ensure the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_TextRenderingHint_\" data-linktype=\"relative-path\">TextRenderingHint</a> for the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is <a class=\"xref\" href=\"system.drawing.text.textrenderinghint\" data-linktype=\"relative-path\">TextRenderingHint</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a string to measure and a font object set to Arial (16 point)  </p>\n</li>\n<li><p>Sets the maximum layout size of the string.  </p>\n</li>\n<li><p>Creates a string format object and sets its format flags to <a class=\"xref\" href=\"system.drawing.stringformatflags\" data-linktype=\"relative-path\">StringFormatFlags</a>.  </p>\n</li>\n<li><p>Creates the integer variables <code>charactersFitted</code> and <code>linesFilled</code> and a size object to measure the string.  </p>\n</li>\n<li><p>Measures the size of the string and determines the number of characters fitted and lines filled, using the string, the font object, the maximum layout size, and the string format.  </p>\n</li>\n<li><p>Draws a red rectangle using the measured size of the string.  </p>\n</li>\n<li><p>Draws the string within the drawn rectangle.  </p>\n</li>\n<li><p>Draws the values of the number of characters fitted and lines filled.  </p>\n<p>The result is a vertical rectangle enclosing a vertical string.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#140\">public:\n   void MeasureStringSizeFFormatInts( PaintEventArgs^ e )\n   {\n      // Set up string.\n      String^ measureString = &quot;Measure String&quot;;\n      System::Drawing::Font^ stringFont = gcnew System::Drawing::Font( &quot;Arial&quot;,16 );\n\n      // Set maximum layout size.\n      SizeF layoutSize = SizeF(100.0F,200.0F);\n\n      // Set string format.\n      StringFormat^ newStringFormat = gcnew StringFormat;\n      newStringFormat-&gt;FormatFlags = StringFormatFlags::DirectionVertical;\n\n      // Measure string.\n      int charactersFitted;\n      int linesFilled;\n      SizeF stringSize = e-&gt;Graphics-&gt;MeasureString( measureString, stringFont, layoutSize, newStringFormat, charactersFitted, linesFilled );\n\n      // Draw rectangle representing size of string.\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Red,1.0f ), 0.0F, 0.0F, stringSize.Width, stringSize.Height );\n\n      // Draw string to screen.\n      e-&gt;Graphics-&gt;DrawString( measureString, stringFont, Brushes::Black, PointF(0,0), newStringFormat );\n\n      // Draw output parameters to screen.\n      String^ outString = String::Format( &quot;chars {0}, lines {1}&quot;, charactersFitted, linesFilled );\n      e-&gt;Graphics-&gt;DrawString( outString, stringFont, Brushes::Black, PointF(100,0) );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#140\">        private void MeasureStringSizeFFormatInts(PaintEventArgs e)\n        {\n\n            // Set up string.\n            string measureString = &quot;Measure String&quot;;\n            Font stringFont = new Font(&quot;Arial&quot;, 16);\n\n            // Set maximum layout size.\n            SizeF layoutSize = new SizeF(100.0F, 200.0F);\n\n            // Set string format.\n            StringFormat newStringFormat = new StringFormat();\n            newStringFormat.FormatFlags = StringFormatFlags.DirectionVertical;\n\n            // Measure string.\n            int charactersFitted;\n            int linesFilled;\n            SizeF stringSize = new SizeF();\n            stringSize = e.Graphics.MeasureString(measureString, stringFont, layoutSize, newStringFormat, out charactersFitted, out linesFilled);\n\n            // Draw rectangle representing size of string.\n            e.Graphics.DrawRectangle(new Pen(Color.Red, 1), 0.0F, 0.0F, stringSize.Width, stringSize.Height);\n\n            // Draw string to screen.\n            e.Graphics.DrawString(measureString, stringFont, Brushes.Black, new PointF(0, 0), newStringFormat);\n\n            // Draw output parameters to screen.\n            string outString = &quot;chars &quot; + charactersFitted + &quot;, lines &quot; + linesFilled;\n            e.Graphics.DrawString(outString, stringFont, Brushes.Black, new PointF(100, 0));\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#140\">    Private Sub MeasureStringSizeFFormatInts(ByVal e As PaintEventArgs)\n\n        &#39; Set up string.\n        Dim measureString As String = &quot;Measure String&quot;\n        Dim stringFont As New Font(&quot;Arial&quot;, 16)\n\n        &#39; Set maximum layout size.\n        Dim layoutSize As New SizeF(100.0F, 200.0F)\n\n        &#39; Set string format.\n        Dim newStringFormat As New StringFormat\n        newStringFormat.FormatFlags = StringFormatFlags.DirectionVertical\n\n        &#39; Measure string.\n        Dim charactersFitted As Integer\n        Dim linesFilled As Integer\n        Dim stringSize As New SizeF\n        stringSize = e.Graphics.MeasureString(measureString, stringFont, _\n        layoutSize, newStringFormat, charactersFitted, linesFilled)\n\n        &#39; Draw rectangle representing size of string.\n        e.Graphics.DrawRectangle(New Pen(Color.Red, 1), 0.0F, 0.0F, _\n        stringSize.Width, stringSize.Height)\n\n        &#39; Draw string to screen.\n        e.Graphics.DrawString(measureString, stringFont, Brushes.Black, _\n        New PointF(0, 0), newStringFormat)\n\n        &#39; Draw output parameters to screen.\n        Dim outString As String = &quot;chars &quot; &amp; charactersFitted &amp; _\n        &quot;, lines &quot; &amp; linesFilled\n        e.Graphics.DrawString(outString, stringFont, Brushes.Black, _\n        New PointF(100, 0))\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_MultiplyTransform_System_Drawing_Drawing2D_Matrix_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_MultiplyTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MultiplyTransform(Matrix)</div>        \r\n          </div>\r\n    \r\n            <p>Multiplies the world transformation of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> and specified the <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>4x4 <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> that multiplies the world transformation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method prepends the matrix specified by the <code>matrix</code> parameter, so that the result is <code>matrix</code> x world transformation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a <code>transformMatrix</code> matrix (a two by two identity matrix plus a zero-translation vector).  </p>\n</li>\n<li><p>Translates the transform matrix by a vector (200, 100).  </p>\n</li>\n<li><p>Rotates the world transformation matrix of the Windows Form by 30 degrees, prepends the rotation matrix for 30 degrees to the form&#39;s transformation matrix.  </p>\n</li>\n<li><p>Multiplies the rotated world transformation matrix by the translated <code>transformMatrix</code>, and prepends the <code>transformMatrix</code> to the world transformation matrix.  </p>\n</li>\n<li><p>Draws a rotated, translated ellipse.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#143\">public:\n   void MultiplyTransformMatrix( PaintEventArgs^ e )\n   {\n      // Create transform matrix.\n      Matrix^ transformMatrix = gcnew Matrix;\n\n      // Translate matrix, prepending translation vector.\n      transformMatrix-&gt;Translate( 200.0F, 100.0F );\n\n      // Rotate transformation matrix of graphics object,\n      // prepending rotation matrix.\n      e-&gt;Graphics-&gt;RotateTransform( 30.0F );\n\n      // Multiply (prepend to) transformation matrix of\n      // graphics object to translate graphics transformation.\n      e-&gt;Graphics-&gt;MultiplyTransform( transformMatrix );\n\n      // Draw rotated, translated ellipse.\n      e-&gt;Graphics-&gt;DrawEllipse( gcnew Pen( Color::Blue,3.0f ), -80, -40, 160, 80 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#143\">        private void MultiplyTransformMatrix(PaintEventArgs e)\n        {\n\n            // Create transform matrix.\n            Matrix transformMatrix = new Matrix();\n\n            // Translate matrix, prepending translation vector.\n            transformMatrix.Translate(200.0F, 100.0F);\n\n            // Rotate transformation matrix of graphics object,\n\n            // prepending rotation matrix.\n            e.Graphics.RotateTransform(30.0F);\n\n            // Multiply (prepend to) transformation matrix of\n\n            // graphics object to translate graphics transformation.\n            e.Graphics.MultiplyTransform(transformMatrix);\n\n            // Draw rotated, translated ellipse.\n            e.Graphics.DrawEllipse(new Pen(Color.Blue, 3), -80, -40, 160, 80);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#143\">    Private Sub MultiplyTransformMatrix(ByVal e As PaintEventArgs)\n\n        &#39; Create transform matrix.\n        Dim transformMatrix As New Matrix\n\n        &#39; Translate matrix, prepending translation vector.\n        transformMatrix.Translate(200.0F, 100.0F)\n\n        &#39; Rotate transformation matrix of graphics object,\n\n        &#39; prepending rotation matrix.\n        e.Graphics.RotateTransform(30.0F)\n\n        &#39; Multiply (prepend to) transformation matrix of\n\n        &#39; graphics object to translate graphics transformation.\n        e.Graphics.MultiplyTransform(transformMatrix)\n\n        &#39; Draw rotated, translated ellipse.\n        e.Graphics.DrawEllipse(New Pen(Color.Blue, 3), -80, -40, 160, 80)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_MultiplyTransform_System_Drawing_Drawing2D_Matrix_System_Drawing_Drawing2D_MatrixOrder_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_MultiplyTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MultiplyTransform(Matrix,MatrixOrder)</div>        \r\n          </div>\r\n    \r\n            <p>Multiplies the world transformation of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> and specified the <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> in the specified order.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>4x4 <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> that multiplies the world transformation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>order</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a> enumeration that determines the order of the multiplication.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A value of<a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a> for the <code>order</code> parameter specifies that the order of the multiplication is <code>matrix</code> x world transformation. A value of <a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a> for <code>order</code> specifies that the order of the multiplication is world transformation x <code>matrix</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a <code>transformMatrix</code> matrix (a two by two identity matrix plus a zero-translation vector).  </p>\n</li>\n<li><p>Translates the transform matrix by a vector (200, 100).  </p>\n</li>\n<li><p>Rotates the world transformation matrix of the Windows Form by 30 degrees, prepending the rotation matrix for 30 degrees to the form&#39;s transformation matrix.  </p>\n</li>\n<li><p>Multiplies the rotated world transformation matrix by the translated <code>transformMatrix</code>, appending the <code>transformMatrix</code> to the world transformation matrix.  </p>\n</li>\n<li><p>Draws a rotated, translated ellipse.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#144\">public:\n   void MultiplyTransformMatrixOrder( PaintEventArgs^ e )\n   {\n      // Create transform matrix.\n      Matrix^ transformMatrix = gcnew Matrix;\n\n      // Translate matrix, prepending translation vector.\n      transformMatrix-&gt;Translate( 200.0F, 100.0F );\n\n      // Rotate transformation matrix of graphics object,\n      // prepending rotation matrix.\n      e-&gt;Graphics-&gt;RotateTransform( 30.0F );\n\n      // Multiply (append to) transformation matrix of\n      // graphics object to translate graphics transformation.\n      e-&gt;Graphics-&gt;MultiplyTransform( transformMatrix, MatrixOrder::Append );\n\n      // Draw rotated, translated ellipse.\n      e-&gt;Graphics-&gt;DrawEllipse( gcnew Pen( Color::Blue,3.0f ), -80, -40, 160, 80 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#144\">        private void MultiplyTransformMatrixOrder(PaintEventArgs e)\n        {\n\n            // Create transform matrix.\n            Matrix transformMatrix = new Matrix();\n\n            // Translate matrix, prepending translation vector.\n            transformMatrix.Translate(200.0F, 100.0F);\n\n            // Rotate transformation matrix of graphics object,\n\n            // prepending rotation matrix.\n            e.Graphics.RotateTransform(30.0F);\n\n            // Multiply (append to) transformation matrix of\n\n            // graphics object to translate graphics transformation.\n            e.Graphics.MultiplyTransform(transformMatrix, MatrixOrder.Append);\n\n            // Draw rotated, translated ellipse.\n            e.Graphics.DrawEllipse(new Pen(Color.Blue, 3), -80, -40, 160, 80);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#144\">    Private Sub MultiplyTransformMatrixOrder(ByVal e As PaintEventArgs)\n\n        &#39; Create transform matrix.\n        Dim transformMatrix As New Matrix\n\n        &#39; Translate matrix, prepending translation vector.\n        transformMatrix.Translate(200.0F, 100.0F)\n\n        &#39; Rotate transformation matrix of graphics object,\n\n        &#39; prepending rotation matrix.\n        e.Graphics.RotateTransform(30.0F)\n\n        &#39; Multiply (append to) transformation matrix of\n\n        &#39; graphics object to translate graphics transformation.\n        e.Graphics.MultiplyTransform(transformMatrix, MatrixOrder.Append)\n\n        &#39; Draw rotated, translated ellipse.\n        e.Graphics.DrawEllipse(New Pen(Color.Blue, 3), -80, -40, 160, 80)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_ReleaseHdc\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_ReleaseHdc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReleaseHdc()</div>        \r\n          </div>\r\n    \r\n            <p>Releases a device context handle obtained by a previous call to the <span class=\"xref\">stem.Drawing.Graphics.GetHdc*</span> method of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ReleaseHdc ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_GetHdc_\" data-linktype=\"relative-path\">GetHdc</a> and <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_ReleaseHdc_\" data-linktype=\"relative-path\">ReleaseHdc</a> are two methods that allow you to get and release the handle for a Windows device. You should always follow a call to <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_GetHdc_\" data-linktype=\"relative-path\">GetHdc</a> with a call to <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_ReleaseHdc_\" data-linktype=\"relative-path\">ReleaseHdc</a> when you are finished with the Windows handle.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_ReleaseHdc_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_ReleaseHdc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReleaseHdc(IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Releases a device context handle obtained by a previous call to the <span class=\"xref\">stem.Drawing.Graphics.GetHdc*</span> method of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ReleaseHdc (IntPtr hdc);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hdc</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Handle to a device context obtained by a previous call to the <span class=\"xref\">stem.Drawing.Graphics.GetHdc*</span> method of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The device context is a Windows structure based on GDI that defines a set of graphical objects and their associated attributes, as well as the graphical modes that affect output.  </p>\n<p> Calls to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_GetHdc_\" data-linktype=\"relative-path\">GetHdc</a> and ReleaseHdc methods must appear in pairs. During the scope of a <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_GetHdc_\" data-linktype=\"relative-path\">GetHdc</a> and ReleaseHdc method pair, you usually make calls only to GDI functions. Calls in that scope made to GDI+ methods of the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> that produced the <code>hdc</code> parameter fail with an <code>ObjectBusy</code> error. Also, GDI+ ignores any state changes made to the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> of the <code>hdc</code> parameter in subsequent operations.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The example illustrates calling a Windows GDI function to perform the same task as a GDI+ <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> method. The code performs the following actions:  </p>\n<ul>\n<li><p>Defines the interoperability <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute\" data-linktype=\"relative-path\">DllImportAttribute</a> attribute for the Windows DLL file gdi32.dll. This DLL contains the desired GDI function, and it defines the <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> function in that DLL as external.  </p>\n</li>\n<li><p>Creates a red pen.  </p>\n</li>\n<li><p>With the pen, draws a rectangle to the screen using the GDI+ <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawRectangle_\" data-linktype=\"relative-path\">DrawRectangle</a> method.  </p>\n</li>\n<li><p>Defines an internal pointer type variable <code>hdc</code> and sets its value to the handle to the device context of the form.  </p>\n</li>\n<li><p>Draws a rectangle to the screen using the GDI <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> function.  </p>\n</li>\n<li><p>Releases the device context represented by the <code>hdc</code> parameter.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#145\">private:\n   [System::Runtime::InteropServices::DllImportAttribute(&quot;gdi32.dll&quot;)]\n   static bool Rectangle2( IntPtr hdc, int ulCornerX, int ulCornerY, int lrCornerX, int lrCornerY );\n\npublic:\n   void GetHdcForGDI2( PaintEventArgs^ e )\n   {\n      // Create pen.\n      Pen^ redPen = gcnew Pen( Color::Red,1.0f );\n\n      // Draw rectangle with GDI+.\n      e-&gt;Graphics-&gt;DrawRectangle( redPen, 10, 10, 100, 50 );\n\n      // Get handle to device context.\n      IntPtr hdc = e-&gt;Graphics-&gt;GetHdc();\n\n      // Draw rectangle with GDI using default pen.\n      Rectangle2( hdc, 10, 70, 110, 120 );\n\n      // Release handle to device context.\n      e-&gt;Graphics-&gt;ReleaseHdc( hdc );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#145\">        [System.Runtime.InteropServices.DllImportAttribute(&quot;gdi32.dll&quot;)]\n        private static extern bool Rectangle2(\n            IntPtr hdc,\n            int ulCornerX, int ulCornerY,\n            int lrCornerX, int lrCornerY);\n\n        [System.Security.Permissions.SecurityPermission(\n        System.Security.Permissions.SecurityAction.LinkDemand, Flags = \n        System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode)]            \n        private void GetHdcForGDI2(PaintEventArgs e)\n        {\n\n            // Create pen.\n            Pen redPen = new Pen(Color.Red, 1);\n\n            // Draw rectangle with GDI+.\n            e.Graphics.DrawRectangle(redPen, 10, 10, 100, 50);\n\n            // Get handle to device context.\n            IntPtr hdc = e.Graphics.GetHdc();\n\n            // Draw rectangle with GDI using default pen.\n            Rectangle2(hdc, 10, 70, 110, 120);\n\n            // Release handle to device context.\n            e.Graphics.ReleaseHdc(hdc);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#145\">    &lt;System.Runtime.InteropServices.DllImportAttribute(&quot;gdi32.dll&quot;)&gt; _\n    Private Shared Function Rectangle2(ByVal hdc As IntPtr, _\n    ByVal ulCornerX As Integer, ByVal ulCornerY As Integer, ByVal lrCornerX As Integer, _\n    ByVal lrCornerY As Integer) As Boolean\n    End Function\n\n    &lt;System.Security.Permissions.SecurityPermission( _\n    System.Security.Permissions.SecurityAction.LinkDemand, Flags:= _\n    System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode)&gt; _\n    Private Sub GetHdcForGDI2(ByVal e As PaintEventArgs)\n\n        &#39; Create pen.\n        Dim redPen As New Pen(Color.Red, 1)\n\n        &#39; Draw rectangle with GDI+.\n        e.Graphics.DrawRectangle(redPen, 10, 10, 100, 50)\n\n        &#39; Get handle to device context.\n        Dim hdc As IntPtr = e.Graphics.GetHdc()\n\n        &#39; Draw rectangle with GDI using default pen.\n        Rectangle2(hdc, 10, 70, 110, 120)\n\n        &#39; Release handle to device context.\n        e.Graphics.ReleaseHdc(hdc)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_ReleaseHdcInternal_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_ReleaseHdcInternal_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReleaseHdcInternal(IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Releases a handle to a device context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ReleaseHdcInternal (IntPtr hdc);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hdc</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Handle to a device context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_ResetClip\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_ResetClip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResetClip()</div>        \r\n          </div>\r\n    \r\n            <p>Resets the clip region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to an infinite region.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ResetClip ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the clipping region of a <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is infinite, items that this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> draws are not clipped.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a rectangle with upper-left corner at (0, 0) and sets the clipping region to this rectangle.  </p>\n</li>\n<li><p>Creates a second rectangle with upper-left corner at (100, 100) and sets the clipping region to the intersection of this rectangle and the current clipping region (the first rectangle).  </p>\n</li>\n<li><p>Fills a large rectangle that includes both previous rectangles with a solid blue brush.  </p>\n</li>\n<li><p>Resets the clipping region to infinite.  </p>\n</li>\n<li><p>Draws rectangles around the two clipping regions; it uses a black pen for the first clipping rectangle and a red pen for the second clipping region.  </p>\n<p>The result is that only the intersection of the two rectangles is filled with blue.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#146\">public:\n   void IntersectClipRectangleF2( PaintEventArgs^ e )\n   {\n      // Set clipping region.\n      Rectangle clipRect = Rectangle(0,0,200,200);\n      e-&gt;Graphics-&gt;SetClip( clipRect );\n\n      // Update clipping region to intersection of\n      // existing region with specified rectangle.\n      RectangleF intersectRectF = RectangleF(100.0F,100.0F,200.0F,200.0F);\n      e-&gt;Graphics-&gt;IntersectClip( intersectRectF );\n\n      // Fill rectangle to demonstrate effective clipping region.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Blue ), 0, 0, 500, 500 );\n\n      // Reset clipping region to infinite.\n      e-&gt;Graphics-&gt;ResetClip();\n\n      // Draw clipRect and intersectRect to screen.\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Black ), clipRect );\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Red ), Rectangle::Round( intersectRectF ) );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#146\">        private void IntersectClipRectangleF2(PaintEventArgs e)\n        {\n\n            // Set clipping region.\n            Rectangle clipRect = new Rectangle(0, 0, 200, 200);\n            e.Graphics.SetClip(clipRect);\n\n            // Update clipping region to intersection of\n\n            // existing region with specified rectangle.\n            RectangleF intersectRectF = new RectangleF(100.0F, 100.0F, 200.0F, 200.0F);\n            e.Graphics.IntersectClip(intersectRectF);\n\n            // Fill rectangle to demonstrate effective clipping region.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Blue), 0, 0, 500, 500);\n\n            // Reset clipping region to infinite.\n            e.Graphics.ResetClip();\n\n            // Draw clipRect and intersectRect to screen.\n            e.Graphics.DrawRectangle(new Pen(Color.Black), clipRect);\n            e.Graphics.DrawRectangle(new Pen(Color.Red), Rectangle.Round(intersectRectF));\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#146\">    Private Sub IntersectClipRectangleF2(ByVal e As PaintEventArgs)\n\n        &#39; Set clipping region.\n        Dim clipRect As New Rectangle(0, 0, 200, 200)\n        e.Graphics.SetClip(clipRect)\n\n        &#39; Update clipping region to intersection of\n\n        &#39; existing region with specified rectangle.\n        Dim intersectRectF As New RectangleF(100.0F, 100.0F, 200.0F, 200.0F)\n        e.Graphics.IntersectClip(intersectRectF)\n\n        &#39; Fill rectangle to demonstrate effective clipping region.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Blue), 0, 0, _\n        500, 500)\n\n        &#39; Reset clipping region to infinite.\n        e.Graphics.ResetClip()\n\n        &#39; Draw clipRect and intersectRect to screen.\n        e.Graphics.DrawRectangle(New Pen(Color.Black), clipRect)\n        e.Graphics.DrawRectangle(New Pen(Color.Red), _\n        Rectangle.Round(intersectRectF))\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_ResetTransform\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_ResetTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResetTransform()</div>        \r\n          </div>\r\n    \r\n            <p>Resets the world transformation matrix of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the identity matrix.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ResetTransform ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The identity matrix represents a transformation with no scaling, rotation, or translation. Resetting the world transformation of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the identity matrix means that its world transformation does not change the geometry of transformed items.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Translates the world transform of the Windows Form by a vector (100, 0).  </p>\n</li>\n<li><p>Saves the graphics state of the form.  </p>\n</li>\n<li><p>Resets the world transform of the form to an identity and fills a rectangle with a solid red brush.  </p>\n</li>\n<li><p>Restores the translated graphics state and fills a rectangle with a solid blue brush.  </p>\n<p>The result is an untranslated red-filled rectangle and a translated blue-filled rectangle.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#147\">public:\n   void SaveRestore1( PaintEventArgs^ e )\n   {\n      // Translate transformation matrix.\n      e-&gt;Graphics-&gt;TranslateTransform( 100, 0 );\n\n      // Save translated graphics state.\n      GraphicsState^ transState = e-&gt;Graphics-&gt;Save();\n\n      // Reset transformation matrix to identity and fill rectangle.\n      e-&gt;Graphics-&gt;ResetTransform();\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Red ), 0, 0, 100, 100 );\n\n      // Restore graphics state to translated state and fill second\n      // rectangle.\n      e-&gt;Graphics-&gt;Restore( transState );\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Blue ), 0, 0, 100, 100 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#147\">        private void SaveRestore1(PaintEventArgs e)\n        {\n\n            // Translate transformation matrix.\n            e.Graphics.TranslateTransform(100, 0);\n\n            // Save translated graphics state.\n            GraphicsState transState = e.Graphics.Save();\n\n            // Reset transformation matrix to identity and fill rectangle.\n            e.Graphics.ResetTransform();\n            e.Graphics.FillRectangle(new SolidBrush(Color.Red), 0, 0, 100, 100);\n\n            // Restore graphics state to translated state and fill second\n\n            // rectangle.\n            e.Graphics.Restore(transState);\n            e.Graphics.FillRectangle(new SolidBrush(Color.Blue), 0, 0, 100, 100);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#147\">    Private Sub SaveRestore1(ByVal e As PaintEventArgs)\n\n        &#39; Translate transformation matrix.\n        e.Graphics.TranslateTransform(100, 0)\n\n        &#39; Save translated graphics state.\n        Dim transState As GraphicsState = e.Graphics.Save()\n\n        &#39; Reset transformation matrix to identity and fill rectangle.\n        e.Graphics.ResetTransform()\n        e.Graphics.FillRectangle(New SolidBrush(Color.Red), 0, 0, 100, 100)\n\n        &#39; Restore graphics state to translated state and fill second\n\n        &#39; rectangle.\n        e.Graphics.Restore(transState)\n        e.Graphics.FillRectangle(New SolidBrush(Color.Blue), 0, 0, _\n        100, 100)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_Restore_System_Drawing_Drawing2D_GraphicsState_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_Restore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Restore(GraphicsState)</div>        \r\n          </div>\r\n    \r\n            <p>Restores the state of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the state represented by a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicsstate\" data-linktype=\"relative-path\">GraphicsState</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Restore (System.Drawing.Drawing2D.GraphicsState gstate);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>gstate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.graphicsstate\" data-linktype=\"relative-path\">GraphicsState</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.drawing2d.graphicsstate\" data-linktype=\"relative-path\">GraphicsState</a> that represents the state to which to restore this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method of a <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>, an information block that holds the state of the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is put on a stack. The <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method returns a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicsstate\" data-linktype=\"relative-path\">GraphicsState</a> that identifies that information block. When you pass the identifying <a class=\"xref\" href=\"system.drawing.drawing2d.graphicsstate\" data-linktype=\"relative-path\">GraphicsState</a> to theRestore method, the information block is removed from the stack and is used to restore the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the state it was in at the time of the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method call. Note that the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicsstate\" data-linktype=\"relative-path\">GraphicsState</a> returned by a given call to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method can be passed only once to the <code>Restore</code> method.  </p>\n<p> Calls to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method can be nested; that is, you can call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method several times before you call the Restore method. Each time you call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method, an information block is put on the stack, and you receive a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicsstate\" data-linktype=\"relative-path\">GraphicsState</a> for the information block. When you pass one of those objects to the Restore method, the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is returned to the state it was in at the time of the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method call that returned that particular <a class=\"xref\" href=\"system.drawing.drawing2d.graphicsstate\" data-linktype=\"relative-path\">GraphicsState</a>. The information block placed on the stack by that <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method call is removed from the stack, and all information blocks placed on that stack after that <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method call are also removed.  </p>\n<p> Calls to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method place information blocks on the same stack as calls to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method. Just as a Restore call is paired with a <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> call, a <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EndContainer_\" data-linktype=\"relative-path\">EndContainer</a> method call is paired with a <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method call.  </p>\n<p> When you call the Restore method, all information blocks placed on the stack (by the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method or by the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method) after the corresponding call to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method are removed from the stack. Likewise, when you call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EndContainer_\" data-linktype=\"relative-path\">EndContainer</a> method, all information blocks placed on the stack (by the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method or by the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method) after the corresponding call to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method are removed from the stack.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Translates the world transform of the Windows Form by a vector (100, 0).  </p>\n</li>\n<li><p>Saves the graphics state of the form.  </p>\n</li>\n<li><p>Resets the world transform of the form to an identity and fills a rectangle with a solid red brush.  </p>\n</li>\n<li><p>Restores the translated graphics state and fills a second rectangle with a solid blue brush.  </p>\n<p>The result is an untranslated red-filled rectangle and a translated blue-filled rectangle.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#148\">public:\n   void SaveRestore2( PaintEventArgs^ e )\n   {\n      // Translate transformation matrix.\n      e-&gt;Graphics-&gt;TranslateTransform( 100, 0 );\n\n      // Save translated graphics state.\n      GraphicsState^ transState = e-&gt;Graphics-&gt;Save();\n\n      // Reset transformation matrix to identity and fill rectangle.\n      e-&gt;Graphics-&gt;ResetTransform();\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Red ), 0, 0, 100, 100 );\n\n      // Restore graphics state to translated state and fill second\n      // rectangle.\n      e-&gt;Graphics-&gt;Restore( transState );\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Blue ), 0, 0, 100, 100 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#148\">        private void SaveRestore2(PaintEventArgs e)\n        {\n\n            // Translate transformation matrix.\n            e.Graphics.TranslateTransform(100, 0);\n\n            // Save translated graphics state.\n            GraphicsState transState = e.Graphics.Save();\n\n            // Reset transformation matrix to identity and fill rectangle.\n            e.Graphics.ResetTransform();\n            e.Graphics.FillRectangle(new SolidBrush(Color.Red), 0, 0, 100, 100);\n\n            // Restore graphics state to translated state and fill second\n\n            // rectangle.\n            e.Graphics.Restore(transState);\n            e.Graphics.FillRectangle(new SolidBrush(Color.Blue), 0, 0, 100, 100);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#148\">    Private Sub SaveRestore2(ByVal e As PaintEventArgs)\n\n        &#39; Translate transformation matrix.\n        e.Graphics.TranslateTransform(100, 0)\n\n        &#39; Save translated graphics state.\n        Dim transState As GraphicsState = e.Graphics.Save()\n\n        &#39; Reset transformation matrix to identity and fill rectangle.\n        e.Graphics.ResetTransform()\n        e.Graphics.FillRectangle(New SolidBrush(Color.Red), 0, 0, 100, 100)\n\n        &#39; Restore graphics state to translated state and fill second\n\n        &#39; rectangle.\n        e.Graphics.Restore(transState)\n        e.Graphics.FillRectangle(New SolidBrush(Color.Blue), 0, 0, _\n        100, 100)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_RotateTransform_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_RotateTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RotateTransform(Single)</div>        \r\n          </div>\r\n    \r\n            <p>Applies the specified rotation to the transformation matrix of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RotateTransform (float angle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>angle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Angle of rotation in degrees.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The rotation operation consists of multiplying the transformation matrix by a matrix whose elements are derived from the <code>angle</code> parameter. This method applies the rotation by prepending it to the transformation matrix.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Translates the world transformation matrix of the Windows Form by the vector (100, 0).  </p>\n</li>\n<li><p>Rotates the world transformation by an angle of 30 degrees, prepending the rotation matrix to the world transformation matrix.  </p>\n</li>\n<li><p>Draws a rotated, translated ellipse with a blue pen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#149\">public:\n   void RotateTransformAngle( PaintEventArgs^ e )\n   {\n      // Set world transform of graphics object to translate.\n      e-&gt;Graphics-&gt;TranslateTransform( 100.0F, 0.0F );\n\n      // Then to rotate, prepending rotation matrix.\n      e-&gt;Graphics-&gt;RotateTransform( 30.0F );\n\n      // Draw rotated, translated ellipse to screen.\n      e-&gt;Graphics-&gt;DrawEllipse( gcnew Pen( Color::Blue,3.0f ), 0, 0, 200, 80 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#149\">        private void RotateTransformAngle(PaintEventArgs e)\n        {\n\n            // Set world transform of graphics object to translate.\n            e.Graphics.TranslateTransform(100.0F, 0.0F);\n\n            // Then to rotate, prepending rotation matrix.\n            e.Graphics.RotateTransform(30.0F);\n\n            // Draw rotated, translated ellipse to screen.\n            e.Graphics.DrawEllipse(new Pen(Color.Blue, 3), 0, 0, 200, 80);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#149\">    Private Sub RotateTransformAngle(ByVal e As PaintEventArgs)\n\n        &#39; Set world transform of graphics object to translate.\n        e.Graphics.TranslateTransform(100.0F, 0.0F)\n\n        &#39; Then to rotate, prepending rotation matrix.\n        e.Graphics.RotateTransform(30.0F)\n\n        &#39; Draw rotated, translated ellipse to screen.\n        e.Graphics.DrawEllipse(New Pen(Color.Blue, 3), 0, 0, 200, 80)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_RotateTransform_System_Single_System_Drawing_Drawing2D_MatrixOrder_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_RotateTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RotateTransform(Single,MatrixOrder)</div>        \r\n          </div>\r\n    \r\n            <p>Applies the specified rotation to the transformation matrix of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> in the specified order.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>angle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Angle of rotation in degrees.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>order</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a> enumeration that specifies whether the rotation is appended or prepended to the matrix transformation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The rotation operation consists of multiplying the transformation matrix by a matrix whose elements are derived from the <code>angle</code> parameter. This method prepends or appends the transformation matrix of the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> by the rotation matrix according to the <code>order</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Translates the world transformation matrix of the Windows Form by the vector (100, 0).  </p>\n</li>\n<li><p>Rotates the world transform by an angle of 30 degrees, appending the rotation matrix to the world transformation matrix with <a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a>.  </p>\n</li>\n<li><p>Draws a translated, rotated ellipse with a blue pen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#150\">public:\n   void RotateTransformAngleMatrixOrder( PaintEventArgs^ e )\n   {\n      // Set world transform of graphics object to translate.\n      e-&gt;Graphics-&gt;TranslateTransform( 100.0F, 0.0F );\n\n      // Then to rotate, appending rotation matrix.\n      e-&gt;Graphics-&gt;RotateTransform( 30.0F, MatrixOrder::Append );\n\n      // Draw translated, rotated ellipse to screen.\n      e-&gt;Graphics-&gt;DrawEllipse( gcnew Pen( Color::Blue,3.0f ), 0, 0, 200, 80 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#150\">        private void RotateTransformAngleMatrixOrder(PaintEventArgs e)\n        {\n\n            // Set world transform of graphics object to translate.\n            e.Graphics.TranslateTransform(100.0F, 0.0F);\n\n            // Then to rotate, appending rotation matrix.\n            e.Graphics.RotateTransform(30.0F, MatrixOrder.Append);\n\n            // Draw translated, rotated ellipse to screen.\n            e.Graphics.DrawEllipse(new Pen(Color.Blue, 3), 0, 0, 200, 80);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#150\">    Private Sub RotateTransformAngleMatrixOrder(ByVal e As PaintEventArgs)\n\n        &#39; Set world transform of graphics object to translate.\n        e.Graphics.TranslateTransform(100.0F, 0.0F)\n\n        &#39; Then to rotate, appending rotation matrix.\n        e.Graphics.RotateTransform(30.0F, MatrixOrder.Append)\n\n        &#39; Draw translated, rotated ellipse to screen.\n        e.Graphics.DrawEllipse(New Pen(Color.Blue, 3), 0, 0, 200, 80)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_Save\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_Save_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Save()</div>        \r\n          </div>\r\n    \r\n            <p>Saves the current state of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> and identifies the saved state with a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicsstate\" data-linktype=\"relative-path\">GraphicsState</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.GraphicsState Save ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.graphicsstate\" data-linktype=\"relative-path\">GraphicsState</a></div>\r\n                  </div>\r\n                  <p>This method returns a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicsstate\" data-linktype=\"relative-path\">GraphicsState</a> that represents the saved state of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you call the Save method of a <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>, an information block that holds the state of the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is put on a stack. The Save method returns a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicsstate\" data-linktype=\"relative-path\">GraphicsState</a> that identifies that information block. When you pass the identifying <a class=\"xref\" href=\"system.drawing.drawing2d.graphicsstate\" data-linktype=\"relative-path\">GraphicsState</a> to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Restore_\" data-linktype=\"relative-path\">Restore</a> method, the information block is removed from the stack and is used to restore the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the state it was in at the time of the Save method call. Note that the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicsstate\" data-linktype=\"relative-path\">GraphicsState</a> returned by a given call to the Save method can be passed only once to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Restore_\" data-linktype=\"relative-path\">Restore</a> method.  </p>\n<p> Calls to the Save method can be nested; that is, you can call the Save method several times before you call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Restore_\" data-linktype=\"relative-path\">Restore</a> method. Each time you call the Save method, an information block is put on the stack, and you receive a<a class=\"xref\" href=\"system.drawing.drawing2d.graphicsstate\" data-linktype=\"relative-path\">GraphicsState</a> for the information block. When you pass one of those objects to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Restore_\" data-linktype=\"relative-path\">Restore</a> method, the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> is returned to the state it was in at the time of the Save method call that returned that particular <a class=\"xref\" href=\"system.drawing.drawing2d.graphicsstate\" data-linktype=\"relative-path\">GraphicsState</a>. The information block placed on the stack by that Save method call is removed from the stack, and all information blocks placed on that stack after that Save method call are also removed.  </p>\n<p> Calls to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method place information blocks on the same stack as calls to the Save method. Just as a <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Restore_\" data-linktype=\"relative-path\">Restore</a> call is paired with a Save call, a <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EndContainer_\" data-linktype=\"relative-path\">EndContainer</a> method call is paired with a <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method call.  </p>\n<p> When you call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Restore_\" data-linktype=\"relative-path\">Restore</a> method, all information blocks placed on the stack (by the Save method or by the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method) after the corresponding call to the Save method are removed from the stack. Likewise, When you call the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_EndContainer_\" data-linktype=\"relative-path\">EndContainer</a> method, all information blocks placed on the stack (by the Save method or by the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method) after the corresponding call to the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_BeginContainer_\" data-linktype=\"relative-path\">BeginContainer</a> method are removed from the stack.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Translates the world transform of the Windows Form by a vector (100, 0).  </p>\n</li>\n<li><p>Saves the graphics state of the form.  </p>\n</li>\n<li><p>Resets the world transform of the form to an identity (2x2 identity matrix plus a zero-vector translation) and fills a rectangle with a solid red brush.  </p>\n</li>\n<li><p>Restores the translated graphics state and fills a rectangle with a solid blue brush.  </p>\n<p>The result is an untranslated red-filled rectangle on the left and a translated blue-filled rectangle on the right of the form.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#151\">public:\n   void SaveRestore3( PaintEventArgs^ e )\n   {\n      // Translate transformation matrix.\n      e-&gt;Graphics-&gt;TranslateTransform( 100, 0 );\n\n      // Save translated graphics state.\n      GraphicsState^ transState = e-&gt;Graphics-&gt;Save();\n\n      // Reset transformation matrix to identity and fill rectangle.\n      e-&gt;Graphics-&gt;ResetTransform();\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Red ), 0, 0, 100, 100 );\n      \n      // Restore graphics state to translated state and fill second\n      // rectangle.\n      e-&gt;Graphics-&gt;Restore( transState );\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Blue ), 0, 0, 100, 100 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#151\">        private void SaveRestore3(PaintEventArgs e)\n        {\n\n            // Translate transformation matrix.\n            e.Graphics.TranslateTransform(100, 0);\n\n            // Save translated graphics state.\n            GraphicsState transState = e.Graphics.Save();\n\n            // Reset transformation matrix to identity and fill rectangle.\n            e.Graphics.ResetTransform();\n            e.Graphics.FillRectangle(new SolidBrush(Color.Red), 0, 0, 100, 100);\n\n            // Restore graphics state to translated state and fill second\n\n            // rectangle.\n            e.Graphics.Restore(transState);\n            e.Graphics.FillRectangle(new SolidBrush(Color.Blue), 0, 0, 100, 100);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#151\">    Private Sub SaveRestore3(ByVal e As PaintEventArgs)\n\n        &#39; Translate transformation matrix.\n        e.Graphics.TranslateTransform(100, 0)\n\n        &#39; Save translated graphics state.\n        Dim transState As GraphicsState = e.Graphics.Save()\n\n        &#39; Reset transformation matrix to identity and fill rectangle.\n        e.Graphics.ResetTransform()\n        e.Graphics.FillRectangle(New SolidBrush(Color.Red), 0, 0, 100, 100)\n\n        &#39; Restore graphics state to translated state and fill second\n\n        &#39; rectangle.\n        e.Graphics.Restore(transState)\n        e.Graphics.FillRectangle(New SolidBrush(Color.Blue), 0, 0, _\n        100, 100)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_ScaleTransform_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_ScaleTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ScaleTransform(Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Applies the specified scaling operation to the transformation matrix of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> by prepending it to the object&#39;s transformation matrix.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ScaleTransform (float sx, float sy);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sx</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Scale factor in the x direction.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sy</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Scale factor in the y direction.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The scaling operation consists of multiplying the transformation matrix by a diagonal matrix whose elements are (<code>sx</code>, <code>sy</code>, 1). This method prepends the transformation matrix of the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> by the scaling matrix.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Rotates the world transformation matrix of the Windows Form by 30 degrees.  </p>\n</li>\n<li><p>Scales that matrix by a factor of 3 in the x direction and a factor of 1 in the y direction by prepending the scaling transformation.  </p>\n</li>\n<li><p>Draws a scaled, rotated rectangle with a blue pen.  </p>\n<p>The result is still a rectangle.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#152\">public:\n   void ScaleTransformFloat( PaintEventArgs^ e )\n   {\n      // Set world transform of graphics object to rotate.\n      e-&gt;Graphics-&gt;RotateTransform( 30.0F );\n\n      // Then to scale, prepending to world transform.\n      e-&gt;Graphics-&gt;ScaleTransform( 3.0F, 1.0F );\n\n      // Draw scaled, rotated rectangle to screen.\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Blue,3.0f ), 50, 0, 100, 40 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#152\">        private void ScaleTransformFloat(PaintEventArgs e)\n        {\n\n            // Set world transform of graphics object to rotate.\n            e.Graphics.RotateTransform(30.0F);\n\n            // Then to scale, prepending to world transform.\n            e.Graphics.ScaleTransform(3.0F, 1.0F);\n\n            // Draw scaled, rotated rectangle to screen.\n            e.Graphics.DrawRectangle(new Pen(Color.Blue, 3), 50, 0, 100, 40);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#152\">    Private Sub ScaleTransformFloat(ByVal e As PaintEventArgs)\n\n        &#39; Set world transform of graphics object to rotate.\n        e.Graphics.RotateTransform(30.0F)\n\n        &#39; Then to scale, prepending to world transform.\n        e.Graphics.ScaleTransform(3.0F, 1.0F)\n\n        &#39; Draw scaled, rotated rectangle to screen.\n        e.Graphics.DrawRectangle(New Pen(Color.Blue, 3), 50, 0, 100, 40)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_ScaleTransform_System_Single_System_Single_System_Drawing_Drawing2D_MatrixOrder_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_ScaleTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ScaleTransform(Single,Single,MatrixOrder)</div>        \r\n          </div>\r\n    \r\n            <p>Applies the specified scaling operation to the transformation matrix of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> in the specified order.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sx</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Scale factor in the x direction.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sy</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Scale factor in the y direction.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>order</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a> enumeration that specifies whether the scaling operation is prepended or appended to the transformation matrix.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The scaling operation consists of multiplying the transformation matrix by a diagonal matrix whose elements are (<code>sx</code>, <code>sy</code>, 1). This method prepends or appends the transformation matrix of the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> by the scaling matrix according to the <code>order</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Rotates the world transformation matrix of the Windows Form by 30 degrees.  </p>\n</li>\n<li><p>Scales that matrix by a factor of 3 in the x direction and a factor of 1 in the y direction by appending the scaling transformation with the <a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a> member.  </p>\n</li>\n<li><p>Draws a rotated, scaled rectangle with a blue pen.  </p>\n<p>The result is a parallelogram.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#153\">public:\n   void ScaleTransformFloatMatrixOrder( PaintEventArgs^ e )\n   {\n      // Set world transform of graphics object to rotate.\n      e-&gt;Graphics-&gt;RotateTransform( 30.0F );\n\n      // Then to scale, appending to world transform.\n      e-&gt;Graphics-&gt;ScaleTransform( 3.0F, 1.0F, MatrixOrder::Append );\n\n      // Draw rotated, scaled rectangle to screen.\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Blue,3.0f ), 50, 0, 100, 40 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#153\">        private void ScaleTransformFloatMatrixOrder(PaintEventArgs e)\n        {\n\n            // Set world transform of graphics object to rotate.\n            e.Graphics.RotateTransform(30.0F);\n\n            // Then to scale, appending to world transform.\n            e.Graphics.ScaleTransform(3.0F, 1.0F, MatrixOrder.Append);\n\n            // Draw rotated, scaled rectangle to screen.\n            e.Graphics.DrawRectangle(new Pen(Color.Blue, 3), 50, 0, 100, 40);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#153\">    Private Sub ScaleTransformFloatMatrixOrder(ByVal e As PaintEventArgs)\n\n        &#39; Set world transform of graphics object to rotate.\n        e.Graphics.RotateTransform(30.0F)\n\n        &#39; Then to scale, appending to world transform.\n        e.Graphics.ScaleTransform(3.0F, 1.0F, MatrixOrder.Append)\n\n        &#39; Draw rotated, scaled rectangle to screen.\n        e.Graphics.DrawRectangle(New Pen(Color.Blue, 3), 50, 0, 100, 40)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_SetClip_System_Drawing_Drawing2D_GraphicsPath_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_SetClip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetClip(GraphicsPath)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the specified <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetClip (System.Drawing.Drawing2D.GraphicsPath path);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> that represents the new clip region.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the graphics path represented by the <code>path</code> parameter is not closed, an additional segment is added from the last point to the first point to close the path.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a graphics path and adds an ellipse to the path.  </p>\n</li>\n<li><p>Sets the clipping region to the elliptical path.  </p>\n</li>\n<li><p>Fills a large rectangle with a solid black brush.  </p>\n<p>The result is a filled, black ellipse.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#154\">public:\n   void SetClipPath( PaintEventArgs^ e )\n   {\n      // Create graphics path.\n      GraphicsPath^ clipPath = gcnew GraphicsPath;\n      clipPath-&gt;AddEllipse( 0, 0, 200, 100 );\n\n      // Set clipping region to path.\n      e-&gt;Graphics-&gt;SetClip( clipPath );\n\n      // Fill rectangle to demonstrate clipping region.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Black ), 0, 0, 500, 300 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#154\">        private void SetClipPath(PaintEventArgs e)\n        {\n\n            // Create graphics path.\n            GraphicsPath clipPath = new GraphicsPath();\n            clipPath.AddEllipse(0, 0, 200, 100);\n\n            // Set clipping region to path.\n            e.Graphics.SetClip(clipPath);\n\n            // Fill rectangle to demonstrate clipping region.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Black), 0, 0, 500, 300);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#154\">    Private Sub SetClipPath(ByVal e As PaintEventArgs)\n\n        &#39; Create graphics path.\n        Dim clipPath As New GraphicsPath\n        clipPath.AddEllipse(0, 0, 200, 100)\n\n        &#39; Set clipping region to path.\n        e.Graphics.SetClip(clipPath)\n\n        &#39; Fill rectangle to demonstrate clipping region.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Black), 0, 0, _\n        500, 300)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_SetClip_System_Drawing_Graphics_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_SetClip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetClip(Graphics)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the <code>Clip</code> property of the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetClip (System.Drawing.Graphics g);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>g</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> from which to take the new clip region.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler, as well as <code>thisForm</code>, the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> for the example. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a temporary <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> from the <code>thisForm</code><a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> of the example.  </p>\n</li>\n<li><p>Sets the clipping region of the temporary <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to a small square.  </p>\n</li>\n<li><p>Updates the clipping region of the form&#39;s graphic object to that of the temporary <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.  </p>\n</li>\n<li><p>Fills a large rectangle with a solid black brush.  </p>\n<p>The result is a small, filled, black square.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#156\">public:\n   void SetClipGraphics( PaintEventArgs^ e )\n   {\n      // Create temporary graphics object and set its clipping region.\n      Graphics^ newGraphics = this-&gt;CreateGraphics();\n      newGraphics-&gt;SetClip( Rectangle(0,0,100,100) );\n\n      // Update clipping region of graphics to clipping region of new\n      // graphics.\n      e-&gt;Graphics-&gt;SetClip( newGraphics );\n\n      // Fill rectangle to demonstrate clip region.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Black ), 0, 0, 500, 300 );\n\n      // Release new graphics.\n      delete newGraphics;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#156\">        private void SetClipGraphics(PaintEventArgs e)\n        {\n\n            // Create temporary graphics object and set its clipping region.\n            Graphics newGraphics = this.CreateGraphics();\n            newGraphics.SetClip(new Rectangle(0, 0, 100, 100));\n\n            // Update clipping region of graphics to clipping region of new\n\n            // graphics.\n            e.Graphics.SetClip(newGraphics);\n\n            // Fill rectangle to demonstrate clip region.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Black), 0, 0, 500, 300);\n\n            // Release new graphics.\n            newGraphics.Dispose();\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#156\">    Private Sub SetClipGraphics(ByVal e As PaintEventArgs)\n\n        &#39; Create temporary graphics object and set its clipping region.\n        Dim newGraphics As Graphics = Me.CreateGraphics()\n        newGraphics.SetClip(New Rectangle(0, 0, 100, 100))\n\n        &#39; Update clipping region of graphics to clipping region of new\n\n        &#39; graphics.\n        e.Graphics.SetClip(newGraphics)\n\n        &#39; Fill rectangle to demonstrate clip region.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Black), 0, 0, _\n        500, 300)\n\n        &#39; Release new graphics.\n        newGraphics.Dispose()\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_SetClip_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_SetClip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetClip(Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the rectangle specified by a <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetClip (System.Drawing.Rectangle rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that represents the new clip region.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a small rectangle for the clipping region.  </p>\n</li>\n<li><p>Sets the clipping region to the rectangle.  </p>\n</li>\n<li><p>Fills a large rectangle with a solid black brush.  </p>\n<p>The result is a small, filled, black rectangle.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#158\">public:\n   void SetClipRectangle( PaintEventArgs^ e )\n   {\n      // Create rectangle for clipping region.\n      Rectangle clipRect = Rectangle(0,0,100,100);\n\n      // Set clipping region of graphics to rectangle.\n      e-&gt;Graphics-&gt;SetClip( clipRect );\n\n      // Fill rectangle to demonstrate clip region.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Black ), 0, 0, 500, 300 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#158\">        private void SetClipRectangle(PaintEventArgs e)\n        {\n\n            // Create rectangle for clipping region.\n            Rectangle clipRect = new Rectangle(0, 0, 100, 100);\n\n            // Set clipping region of graphics to rectangle.\n            e.Graphics.SetClip(clipRect);\n\n            // Fill rectangle to demonstrate clip region.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Black), 0, 0, 500, 300);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#158\">    Private Sub SetClipRectangle(ByVal e As PaintEventArgs)\n\n        &#39; Create rectangle for clipping region.\n        Dim clipRect As New Rectangle(0, 0, 100, 100)\n\n        &#39; Set clipping region of graphics to rectangle.\n        e.Graphics.SetClip(clipRect)\n\n        &#39; Fill rectangle to demonstrate clip region.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Black), 0, 0, _\n        500, 300)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_SetClip_System_Drawing_RectangleF_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_SetClip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetClip(RectangleF)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the rectangle specified by a <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetClip (System.Drawing.RectangleF rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that represents the new clip region.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a small rectangle for the clipping region.  </p>\n</li>\n<li><p>Sets the clipping region to the rectangle.  </p>\n</li>\n<li><p>Fills a large rectangle with a solid black brush.  </p>\n<p>The result is a small, filled, black rectangle.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#160\">public:\n   void SetClipRectangleF( PaintEventArgs^ e )\n   {\n      // Create rectangle for clipping region.\n      RectangleF clipRect = RectangleF(0.0F,0.0F,100.0F,100.0F);\n\n      // Set clipping region of graphics to rectangle.\n      e-&gt;Graphics-&gt;SetClip( clipRect );\n\n      // Fill rectangle to demonstrate clip region.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Black ), 0, 0, 500, 300 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#160\">        private void SetClipRectangleF(PaintEventArgs e)\n        {\n\n            // Create rectangle for clipping region.\n            RectangleF clipRect = new RectangleF(0.0F, 0.0F, 100.0F, 100.0F);\n\n            // Set clipping region of graphics to rectangle.\n            e.Graphics.SetClip(clipRect);\n\n            // Fill rectangle to demonstrate clip region.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Black), 0, 0, 500, 300);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#160\">    Private Sub SetClipRectangleF(ByVal e As PaintEventArgs)\n\n        &#39; Create rectangle for clipping region.\n        Dim clipRect As New RectangleF(0.0F, 0.0F, 100.0F, 100.0F)\n\n        &#39; Set clipping region of graphics to rectangle.\n        e.Graphics.SetClip(clipRect)\n\n        &#39; Fill rectangle to demonstrate clip region.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Black), 0, 0, _\n        500, 300)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_SetClip_System_Drawing_Drawing2D_GraphicsPath_System_Drawing_Drawing2D_CombineMode_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_SetClip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetClip(GraphicsPath,CombineMode)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the result of the specified operation combining the current clip region and the specified <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetClip (System.Drawing.Drawing2D.GraphicsPath path, System.Drawing.Drawing2D.CombineMode combineMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> to combine.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>combineMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.combinemode\" data-linktype=\"relative-path\">CombineMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.drawing2d.combinemode\" data-linktype=\"relative-path\">CombineMode</a> enumeration that specifies the combining operation to use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the graphics path represented by the <code>path</code> parameter is not closed, an additional segment is added from the last point to the first point to close the path.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a graphics path and adds an ellipse to the path.  </p>\n</li>\n<li><p>Sets the clipping region to the elliptical path with the <a class=\"xref\" href=\"system.drawing.drawing2d.combinemode\" data-linktype=\"relative-path\">CombineMode</a> member.  </p>\n</li>\n<li><p>Fills a large rectangle with a solid black brush.  </p>\n<p>The result is a filled, black ellipse.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#155\">public:\n   void SetClipPathCombine( PaintEventArgs^ e )\n   {\n      // Create graphics path.\n      GraphicsPath^ clipPath = gcnew GraphicsPath;\n      clipPath-&gt;AddEllipse( 0, 0, 200, 100 );\n\n      // Set clipping region to path.\n      e-&gt;Graphics-&gt;SetClip( clipPath, CombineMode::Replace );\n\n      // Fill rectangle to demonstrate clipping region.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Black ), 0, 0, 500, 300 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#155\">        private void SetClipPathCombine(PaintEventArgs e)\n        {\n\n            // Create graphics path.\n            GraphicsPath clipPath = new GraphicsPath();\n            clipPath.AddEllipse(0, 0, 200, 100);\n\n            // Set clipping region to path.\n            e.Graphics.SetClip(clipPath, CombineMode.Replace);\n\n            // Fill rectangle to demonstrate clipping region.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Black), 0, 0, 500, 300);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#155\">    Private Sub SetClipPathCombine(ByVal e As PaintEventArgs)\n\n        &#39; Create graphics path.\n        Dim clipPath As New GraphicsPath\n        clipPath.AddEllipse(0, 0, 200, 100)\n\n        &#39; Set clipping region to path.\n        e.Graphics.SetClip(clipPath, CombineMode.Replace)\n\n        &#39; Fill rectangle to demonstrate clipping region.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Black), 0, 0, _\n        500, 300)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_SetClip_System_Drawing_Graphics_System_Drawing_Drawing2D_CombineMode_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_SetClip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetClip(Graphics,CombineMode)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the result of the specified combining operation of the current clip region and the <span class=\"xref\">stem.Drawing.Graphics.Clip*</span> property of the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetClip (System.Drawing.Graphics g, System.Drawing.Drawing2D.CombineMode combineMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>g</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> that specifies the clip region to combine.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>combineMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.combinemode\" data-linktype=\"relative-path\">CombineMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.drawing2d.combinemode\" data-linktype=\"relative-path\">CombineMode</a> enumeration that specifies the combining operation to use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler, as well as <code>thisForm</code>, the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> for the example. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a temporary <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> from the <code>thisForm</code><a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> of the example.  </p>\n</li>\n<li><p>Sets the clipping region of the temporary <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to a small square.  </p>\n</li>\n<li><p>Updates the clipping region of the form&#39;s graphic object to that of the new <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> with the <a class=\"xref\" href=\"system.drawing.drawing2d.combinemode\" data-linktype=\"relative-path\">CombineMode</a> member.  </p>\n</li>\n<li><p>Fills a large rectangle with a solid black brush.  </p>\n<p>The result is a small, filled, black square.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#157\">public:\n   void SetClipGraphicsCombine( PaintEventArgs^ e )\n   {\n      // Create temporary graphics object and set its clipping region.\n      Graphics^ newGraphics = this-&gt;CreateGraphics();\n      newGraphics-&gt;SetClip( Rectangle(0,0,100,100) );\n\n      // Update clipping region of graphics to clipping region of new\n      // graphics.\n      e-&gt;Graphics-&gt;SetClip( newGraphics, CombineMode::Replace );\n\n      // Fill rectangle to demonstrate clip region.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Black ), 0, 0, 500, 300 );\n\n      // Release new graphics.\n      delete newGraphics;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#157\">        private void SetClipGraphicsCombine(PaintEventArgs e)\n        {\n\n            // Create temporary graphics object and set its clipping region.\n            Graphics newGraphics = this.CreateGraphics();\n            newGraphics.SetClip(new Rectangle(0, 0, 100, 100));\n\n            // Update clipping region of graphics to clipping region of new\n\n            // graphics.\n            e.Graphics.SetClip(newGraphics, CombineMode.Replace);\n\n            // Fill rectangle to demonstrate clip region.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Black), 0, 0, 500, 300);\n\n            // Release new graphics.\n            newGraphics.Dispose();\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#157\">    Private Sub SetClipGraphicsCombine(ByVal e As PaintEventArgs)\n\n        &#39; Create temporary graphics object and set its clipping region.\n        Dim newGraphics As Graphics = Me.CreateGraphics()\n        newGraphics.SetClip(New Rectangle(0, 0, 100, 100))\n\n        &#39; Update clipping region of graphics to clipping region of new\n\n        &#39; graphics.\n        e.Graphics.SetClip(newGraphics, CombineMode.Replace)\n\n        &#39; Fill rectangle to demonstrate clip region.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Black), 0, 0, _\n        500, 300)\n\n        &#39; Release new graphics.\n        newGraphics.Dispose()\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_SetClip_System_Drawing_Rectangle_System_Drawing_Drawing2D_CombineMode_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_SetClip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetClip(Rectangle,CombineMode)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the result of the specified operation combining the current clip region and the rectangle specified by a <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetClip (System.Drawing.Rectangle rect, System.Drawing.Drawing2D.CombineMode combineMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure to combine.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>combineMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.combinemode\" data-linktype=\"relative-path\">CombineMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.drawing2d.combinemode\" data-linktype=\"relative-path\">CombineMode</a> enumeration that specifies the combining operation to use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a small rectangle for the clipping region.  </p>\n</li>\n<li><p>Sets the clipping region to the rectangle with the <a class=\"xref\" href=\"system.drawing.drawing2d.combinemode\" data-linktype=\"relative-path\">CombineMode</a> member.  </p>\n</li>\n<li><p>Fills a large rectangle with a solid black brush.  </p>\n<p>The result is a small, filled, black rectangle.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#159\">public:\n   void SetClipRectangleCombine( PaintEventArgs^ e )\n   {\n      // Create rectangle for clipping region.\n      Rectangle clipRect = Rectangle(0,0,100,100);\n\n      // Set clipping region of graphics to rectangle.\n      e-&gt;Graphics-&gt;SetClip( clipRect, CombineMode::Replace );\n\n      // Fill rectangle to demonstrate clip region.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Black ), 0, 0, 500, 300 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#159\">        private void SetClipRectangleCombine(PaintEventArgs e)\n        {\n\n            // Create rectangle for clipping region.\n            Rectangle clipRect = new Rectangle(0, 0, 100, 100);\n\n            // Set clipping region of graphics to rectangle.\n            e.Graphics.SetClip(clipRect, CombineMode.Replace);\n\n            // Fill rectangle to demonstrate clip region.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Black), 0, 0, 500, 300);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#159\">    Private Sub SetClipRectangleCombine(ByVal e As PaintEventArgs)\n\n        &#39; Create rectangle for clipping region.\n        Dim clipRect As New Rectangle(0, 0, 100, 100)\n\n        &#39; Set clipping region of graphics to rectangle.\n        e.Graphics.SetClip(clipRect, CombineMode.Replace)\n\n        &#39; Fill rectangle to demonstrate clip region.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Black), 0, 0, _\n        500, 300)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_SetClip_System_Drawing_RectangleF_System_Drawing_Drawing2D_CombineMode_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_SetClip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetClip(RectangleF,CombineMode)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the result of the specified operation combining the current clip region and the rectangle specified by a <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetClip (System.Drawing.RectangleF rect, System.Drawing.Drawing2D.CombineMode combineMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure to combine.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>combineMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.combinemode\" data-linktype=\"relative-path\">CombineMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.drawing2d.combinemode\" data-linktype=\"relative-path\">CombineMode</a> enumeration that specifies the combining operation to use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a small rectangle for the clipping region.  </p>\n</li>\n<li><p>Sets the clipping region to the rectangle with the <a class=\"xref\" href=\"system.drawing.drawing2d.combinemode\" data-linktype=\"relative-path\">CombineMode</a> member.  </p>\n</li>\n<li><p>Fills a large rectangle with a solid black brush.  </p>\n<p>The result is a small, filled, black rectangle.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#161\">public:\n   void SetClipRectangleFCombine( PaintEventArgs^ e )\n   {\n      // Create rectangle for clipping region.\n      RectangleF clipRect = RectangleF(0.0F,0.0F,100.0F,100.0F);\n\n      // Set clipping region of graphics to rectangle.\n      e-&gt;Graphics-&gt;SetClip( clipRect, CombineMode::Replace );\n\n      // Fill rectangle to demonstrate clip region.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Black ), 0, 0, 500, 300 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#161\">        private void SetClipRectangleFCombine(PaintEventArgs e)\n        {\n\n            // Create rectangle for clipping region.\n            RectangleF clipRect = new RectangleF(0.0F, 0.0F, 100.0F, 100.0F);\n\n            // Set clipping region of graphics to rectangle.\n            e.Graphics.SetClip(clipRect, CombineMode.Replace);\n\n            // Fill rectangle to demonstrate clip region.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Black), 0, 0, 500, 300);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#161\">    Private Sub SetClipRectangleFCombine(ByVal e As PaintEventArgs)\n\n        &#39; Create rectangle for clipping region.\n        Dim clipRect As New RectangleF(0.0F, 0.0F, 100.0F, 100.0F)\n\n        &#39; Set clipping region of graphics to rectangle.\n        e.Graphics.SetClip(clipRect, CombineMode.Replace)\n\n        &#39; Fill rectangle to demonstrate clip region.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Black), 0, 0, _\n        500, 300)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_SetClip_System_Drawing_Region_System_Drawing_Drawing2D_CombineMode_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_SetClip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetClip(Region,CombineMode)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> to the result of the specified operation combining the current clip region and the specified <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetClip (System.Drawing.Region region, System.Drawing.Drawing2D.CombineMode combineMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>region</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to combine.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>combineMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.combinemode\" data-linktype=\"relative-path\">CombineMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member from the <a class=\"xref\" href=\"system.drawing.drawing2d.combinemode\" data-linktype=\"relative-path\">CombineMode</a> enumeration that specifies the combining operation to use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a small rectangle for the clipping region.  </p>\n</li>\n<li><p>Sets the clipping region to the rectangle with the <a class=\"xref\" href=\"system.drawing.drawing2d.combinemode\" data-linktype=\"relative-path\">CombineMode</a> member.  </p>\n</li>\n<li><p>Fills a large rectangle with a solid black brush.  </p>\n<p>The result is a small, filled, black rectangle.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#162\">public:\n   void SetClipRegionCombine( PaintEventArgs^ e )\n   {\n      // Create region for clipping.\n      System::Drawing::Region^ clipRegion = gcnew System::Drawing::Region( Rectangle(0,0,100,100) );\n\n      // Set clipping region of graphics to region.\n      e-&gt;Graphics-&gt;SetClip( clipRegion, CombineMode::Replace );\n\n      // Fill rectangle to demonstrate clip region.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Black ), 0, 0, 500, 300 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#162\">        private void SetClipRegionCombine(PaintEventArgs e)\n        {\n\n            // Create region for clipping.\n            Region clipRegion = new Region(new Rectangle(0, 0, 100, 100));\n\n            // Set clipping region of graphics to region.\n            e.Graphics.SetClip(clipRegion, CombineMode.Replace);\n\n            // Fill rectangle to demonstrate clip region.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Black), 0, 0, 500, 300);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#162\">    Private Sub SetClipRegionCombine(ByVal e As PaintEventArgs)\n\n        &#39; Create region for clipping.\n        Dim clipRegion As New [Region](New Rectangle(0, 0, 100, 100))\n\n        &#39; Set clipping region of graphics to region.\n        e.Graphics.SetClip(clipRegion, CombineMode.Replace)\n\n        &#39; Fill rectangle to demonstrate clip region.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Black), 0, 0, _\n        500, 300)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_TransformPoints_System_Drawing_Drawing2D_CoordinateSpace_System_Drawing_Drawing2D_CoordinateSpace_System_Drawing_Point___\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_TransformPoints_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TransformPoints(CoordinateSpace,CoordinateSpace,Point[])</div>        \r\n          </div>\r\n    \r\n            <p>Transforms an array of points from one coordinate space to another using the current world and page transformations of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void TransformPoints (System.Drawing.Drawing2D.CoordinateSpace destSpace, System.Drawing.Drawing2D.CoordinateSpace srcSpace, System.Drawing.Point[] pts);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>destSpace</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.coordinatespace\" data-linktype=\"relative-path\">CoordinateSpace</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.drawing2d.coordinatespace\" data-linktype=\"relative-path\">CoordinateSpace</a> enumeration that specifies the destination coordinate space.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcSpace</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.coordinatespace\" data-linktype=\"relative-path\">CoordinateSpace</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.drawing2d.coordinatespace\" data-linktype=\"relative-path\">CoordinateSpace</a> enumeration that specifies the source coordinate space.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pts</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that represents the points to transformation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates two points and draws a blue line between them.  </p>\n</li>\n<li><p>Sets the world transform to translate by amounts 40 in the x direction and 30 in the y direction.  </p>\n</li>\n<li><p>Transforms the points from world coordinates (<a class=\"xref\" href=\"system.drawing.drawing2d.coordinatespace\" data-linktype=\"relative-path\">CoordinateSpace</a>) to page coordinates (<a class=\"xref\" href=\"system.drawing.drawing2d.coordinatespace\" data-linktype=\"relative-path\">CoordinateSpace</a>).  </p>\n</li>\n<li><p>Resets the world transformation to the identity.  </p>\n</li>\n<li><p>Draws a red line between the transformed points.  </p>\n<p>The result is a blue line and a translated red line below it.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#163\">public:\n   void TransformPointsPoint( PaintEventArgs^ e )\n   {\n      // Create array of two points.\n      array&lt;Point&gt;^ points = {Point(0,0),Point(100,50)};\n\n      // Draw line connecting two untransformed points.\n      e-&gt;Graphics-&gt;DrawLine( gcnew Pen( Color::Blue,3.0f ), points[ 0 ], points[ 1 ] );\n\n      // Set world transformation of Graphics object to translate.\n      e-&gt;Graphics-&gt;TranslateTransform( 40, 30 );\n\n      // Transform points in array from world to page coordinates.\n      e-&gt;Graphics-&gt;TransformPoints( CoordinateSpace::Page, CoordinateSpace::World, points );\n\n      // Reset world transformation.\n      e-&gt;Graphics-&gt;ResetTransform();\n\n      // Draw line that connects transformed points.\n      e-&gt;Graphics-&gt;DrawLine( gcnew Pen( Color::Red,3.0f ), points[ 0 ], points[ 1 ] );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#163\">        private void TransformPointsPoint(PaintEventArgs e)\n        {\n\n            // Create array of two points.\n            Point[] points = { new Point(0, 0), new Point(100, 50) };\n\n            // Draw line connecting two untransformed points.\n            e.Graphics.DrawLine(new Pen(Color.Blue, 3), points[0], points[1]);\n\n            // Set world transformation of Graphics object to translate.\n            e.Graphics.TranslateTransform(40, 30);\n\n            // Transform points in array from world to page coordinates.\n            e.Graphics.TransformPoints(CoordinateSpace.Page, CoordinateSpace.World, points);\n\n            // Reset world transformation.\n            e.Graphics.ResetTransform();\n\n            // Draw line that connects transformed points.\n            e.Graphics.DrawLine(new Pen(Color.Red, 3), points[0], points[1]);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#163\">    Private Sub TransformPointsPoint(ByVal e As PaintEventArgs)\n\n        &#39; Create array of two points.\n        Dim points As Point() = {New Point(0, 0), New Point(100, 50)}\n\n        &#39; Draw line connecting two untransformed points.\n        e.Graphics.DrawLine(New Pen(Color.Blue, 3), points(0), points(1))\n\n        &#39; Set world transformation of Graphics object to translate.\n        e.Graphics.TranslateTransform(40, 30)\n\n        &#39; Transform points in array from world to page coordinates.\n        e.Graphics.TransformPoints(CoordinateSpace.Page, _\n        CoordinateSpace.World, points)\n\n        &#39; Reset world transformation.\n        e.Graphics.ResetTransform()\n\n        &#39; Draw line that connects transformed points.\n        e.Graphics.DrawLine(New Pen(Color.Red, 3), points(0), points(1))\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_TransformPoints_System_Drawing_Drawing2D_CoordinateSpace_System_Drawing_Drawing2D_CoordinateSpace_System_Drawing_PointF___\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_TransformPoints_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TransformPoints(CoordinateSpace,CoordinateSpace,PointF[])</div>        \r\n          </div>\r\n    \r\n            <p>Transforms an array of points from one coordinate space to another using the current world and page transformations of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void TransformPoints (System.Drawing.Drawing2D.CoordinateSpace destSpace, System.Drawing.Drawing2D.CoordinateSpace srcSpace, System.Drawing.PointF[] pts);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>destSpace</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.coordinatespace\" data-linktype=\"relative-path\">CoordinateSpace</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.drawing2d.coordinatespace\" data-linktype=\"relative-path\">CoordinateSpace</a> enumeration that specifies the destination coordinate space.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcSpace</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.coordinatespace\" data-linktype=\"relative-path\">CoordinateSpace</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.drawing2d.coordinatespace\" data-linktype=\"relative-path\">CoordinateSpace</a> enumeration that specifies the source coordinate space.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pts</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that represent the points to transform.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates two points and draws a blue line between them.  </p>\n</li>\n<li><p>Sets the world transform to translate by amounts 40 in the x direction and 30 in the y direction.  </p>\n</li>\n<li><p>Transforms the points from world coordinates (<a class=\"xref\" href=\"system.drawing.drawing2d.coordinatespace\" data-linktype=\"relative-path\">CoordinateSpace</a>) to page coordinates (<a class=\"xref\" href=\"system.drawing.drawing2d.coordinatespace\" data-linktype=\"relative-path\">CoordinateSpace</a>).  </p>\n</li>\n<li><p>Resets the world transformation to the identity and draws a red line between the transformed points.  </p>\n<p>The result is a blue line and a translated red line below it.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#164\">public:\n   void TransformPointsPointF( PaintEventArgs^ e )\n   {\n      // Create array of two points.\n      array&lt;PointF&gt;^ points = {PointF(0.0F,0.0F),PointF(100.0F,50.0F)};\n\n      // Draw line connecting two untransformed points.\n      e-&gt;Graphics-&gt;DrawLine( gcnew Pen( Color::Blue,3.0f ), points[ 0 ], points[ 1 ] );\n\n      // Set world transformation of Graphics object to translate.\n      e-&gt;Graphics-&gt;TranslateTransform( 40.0F, 30.0F );\n\n      // Transform points in array from world to page coordinates.\n      e-&gt;Graphics-&gt;TransformPoints( CoordinateSpace::Page, CoordinateSpace::World, points );\n\n      // Reset world transformation.\n      e-&gt;Graphics-&gt;ResetTransform();\n\n      // Draw line that connects transformed points.\n      e-&gt;Graphics-&gt;DrawLine( gcnew Pen( Color::Red,3.0f ), points[ 0 ], points[ 1 ] );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#164\">        private void TransformPointsPointF(PaintEventArgs e)\n        {\n\n            // Create array of two points.\n            PointF[] points = { new PointF(0.0F, 0.0F), new PointF(100.0F, 50.0F) };\n\n            // Draw line connecting two untransformed points.\n            e.Graphics.DrawLine(new Pen(Color.Blue, 3), points[0], points[1]);\n\n            // Set world transformation of Graphics object to translate.\n            e.Graphics.TranslateTransform(40.0F, 30.0F);\n\n            // Transform points in array from world to page coordinates.\n            e.Graphics.TransformPoints(CoordinateSpace.Page, CoordinateSpace.World, points);\n\n            // Reset world transformation.\n            e.Graphics.ResetTransform();\n\n            // Draw line that connects transformed points.\n            e.Graphics.DrawLine(new Pen(Color.Red, 3), points[0], points[1]);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#164\">    Private Sub TransformPointsPointF(ByVal e As PaintEventArgs)\n\n        &#39; Create array of two points.\n        Dim points As PointF() = {New PointF(0.0F, 0.0F), New PointF(100.0F, _\n        50.0F)}\n\n        &#39; Draw line connecting two untransformed points.\n        e.Graphics.DrawLine(New Pen(Color.Blue, 3), points(0), points(1))\n\n        &#39; Set world transformation of Graphics object to translate.\n        e.Graphics.TranslateTransform(40.0F, 30.0F)\n\n        &#39; Transform points in array from world to page coordinates.\n        e.Graphics.TransformPoints(CoordinateSpace.Page, _\n        CoordinateSpace.World, points)\n\n        &#39; Reset world transformation.\n        e.Graphics.ResetTransform()\n\n        &#39; Draw line that connects transformed points.\n        e.Graphics.DrawLine(New Pen(Color.Red, 3), points(0), points(1))\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_TranslateClip_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_TranslateClip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TranslateClip(Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Translates the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> by specified amounts in the horizontal and vertical directions.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void TranslateClip (int dx, int dy);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dx</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the translation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dy</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the translation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a rectangle for the clipping region.  </p>\n</li>\n<li><p>Sets the clipping region to the rectangle.  </p>\n</li>\n<li><p>Translates the clipping region by a vector (50, 50).  </p>\n</li>\n<li><p>Fills a large rectangle with a solid black brush.  </p>\n<p>The result is a translated, small, black rectangle.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#165\">public:\n   void TranslateClipInt( PaintEventArgs^ e )\n   {\n      // Create rectangle for clipping region.\n      Rectangle clipRect = Rectangle(0,0,100,100);\n\n      // Set clipping region of graphics to rectangle.\n      e-&gt;Graphics-&gt;SetClip( clipRect );\n\n      // Translate clipping region.\n      int dx = 50;\n      int dy = 50;\n      e-&gt;Graphics-&gt;TranslateClip( dx, dy );\n\n      // Fill rectangle to demonstrate translated clip region.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Black ), 0, 0, 500, 300 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#165\">        private void TranslateClipInt(PaintEventArgs e)\n        {\n\n            // Create rectangle for clipping region.\n            Rectangle clipRect = new Rectangle(0, 0, 100, 100);\n\n            // Set clipping region of graphics to rectangle.\n            e.Graphics.SetClip(clipRect);\n\n            // Translate clipping region.\n            int dx = 50;\n            int dy = 50;\n            e.Graphics.TranslateClip(dx, dy);\n\n            // Fill rectangle to demonstrate translated clip region.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Black), 0, 0, 500, 300);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#165\">    Private Sub TranslateClipInt(ByVal e As PaintEventArgs)\n\n        &#39; Create rectangle for clipping region.\n        Dim clipRect As New Rectangle(0, 0, 100, 100)\n\n        &#39; Set clipping region of graphics to rectangle.\n        e.Graphics.SetClip(clipRect)\n\n        &#39; Translate clipping region.\n        Dim dx As Integer = 50\n        Dim dy As Integer = 50\n        e.Graphics.TranslateClip(dx, dy)\n\n        &#39; Fill rectangle to demonstrate translated clip region.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Black), 0, 0, _\n        500, 300)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_TranslateClip_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_TranslateClip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TranslateClip(Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Translates the clipping region of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> by specified amounts in the horizontal and vertical directions.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void TranslateClip (float dx, float dy);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dx</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the translation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dy</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the translation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a rectangle for the clipping region.  </p>\n</li>\n<li><p>Sets the clipping region to the rectangle.  </p>\n</li>\n<li><p>Translates the clipping region by a vector (50.0F, 50.0F).  </p>\n</li>\n<li><p>Fills a large rectangle with a solid black brush.  </p>\n<p>The result is a translated, small, black rectangle.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#166\">public:\n   void TranslateClipFloat( PaintEventArgs^ e )\n   {\n      // Create rectangle for clipping region.\n      RectangleF clipRect = RectangleF(0.0F,0.0F,100.0F,100.0F);\n\n      // Set clipping region of graphics to rectangle.\n      e-&gt;Graphics-&gt;SetClip( clipRect );\n\n      // Translate clipping region.\n      float dx = 50.0F;\n      float dy = 50.0F;\n      e-&gt;Graphics-&gt;TranslateClip( dx, dy );\n\n      // Fill rectangle to demonstrate translated clip region.\n      e-&gt;Graphics-&gt;FillRectangle( gcnew SolidBrush( Color::Black ), 0, 0, 500, 300 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#166\">        private void TranslateClipFloat(PaintEventArgs e)\n        {\n\n            // Create rectangle for clipping region.\n            RectangleF clipRect = new RectangleF(0.0F, 0.0F, 100.0F, 100.0F);\n\n            // Set clipping region of graphics to rectangle.\n            e.Graphics.SetClip(clipRect);\n\n            // Translate clipping region.\n            float dx = 50.0F;\n            float dy = 50.0F;\n            e.Graphics.TranslateClip(dx, dy);\n\n            // Fill rectangle to demonstrate translated clip region.\n            e.Graphics.FillRectangle(new SolidBrush(Color.Black), 0, 0, 500, 300);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#166\">    Private Sub TranslateClipFloat(ByVal e As PaintEventArgs)\n\n        &#39; Create rectangle for clipping region.\n        Dim clipRect As New RectangleF(0.0F, 0.0F, 100.0F, 100.0F)\n\n        &#39; Set clipping region of graphics to rectangle.\n        e.Graphics.SetClip(clipRect)\n\n        &#39; Translate clipping region.\n        Dim dx As Single = 50.0F\n        Dim dy As Single = 50.0F\n        e.Graphics.TranslateClip(dx, dy)\n\n        &#39; Fill rectangle to demonstrate translated clip region.\n        e.Graphics.FillRectangle(New SolidBrush(Color.Black), 0, 0, _\n        500, 300)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_TranslateTransform_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_TranslateTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TranslateTransform(Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Changes the origin of the coordinate system by prepending the specified translation to the transformation matrix of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void TranslateTransform (float dx, float dy);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dx</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the translation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dy</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the translation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The origin is typically the upper-left-hand corner of the drawing surface.  The translation operation consists of multiplying the transformation matrix by a matrix whose translation part is the <code>dx</code> and <code>dy</code> parameters. This method applies the translation by prepending the translation matrix to the transformation matrix.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Rotates the world transformation matrix of the Windows Form by 30.0F degrees.  </p>\n</li>\n<li><p>Moves the origin of the graphics object by calling TranslateTransform, prepending the translation to the transformation matrix.  </p>\n</li>\n<li><p>Draws a translated, rotated ellipse with a blue pen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#167\">public:\n   void TranslateTransformAngle( PaintEventArgs^ e )\n   {\n      // Set world transform of graphics object to rotate.\n      e-&gt;Graphics-&gt;RotateTransform( 30.0F );\n\n      // Then to translate, prepending to world transform.\n      e-&gt;Graphics-&gt;TranslateTransform( 100.0F, 0.0F );\n\n      // Draw translated, rotated ellipse to screen.\n      e-&gt;Graphics-&gt;DrawEllipse( gcnew Pen( Color::Blue,3.0f ), 0, 0, 200, 80 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#167\">        private void TranslateTransformAngle(PaintEventArgs e)\n        {\n\n            // Set world transform of graphics object to rotate.\n            e.Graphics.RotateTransform(30.0F);\n\n            // Then to translate, prepending to world transform.\n            e.Graphics.TranslateTransform(100.0F, 0.0F);\n\n            // Draw translated, rotated ellipse to screen.\n            e.Graphics.DrawEllipse(new Pen(Color.Blue, 3), 0, 0, 200, 80);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#167\">    Private Sub TranslateTransformAngle(ByVal e As PaintEventArgs)\n\n        &#39; Set world transform of graphics object to rotate.\n        e.Graphics.RotateTransform(30.0F)\n\n        &#39; Then to translate, prepending to world transform.\n        e.Graphics.TranslateTransform(100.0F, 0.0F)\n\n        &#39; Draw translated, rotated ellipse to screen.\n        e.Graphics.DrawEllipse(New Pen(Color.Blue, 3), 0, 0, 200, 80)\n    End Sub\n</code></pre><p>The following illustration shows the output of running the previous code example.  </p>\n<p><img src=\"add/media/ndp-tranlatetransform.png\" alt=\"Translated and transformed ellipse\" title=\"Translated and transformed ellipse\" data-linktype=\"relative-path\"></p>\n</li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Graphics_TranslateTransform_System_Single_System_Single_System_Drawing_Drawing2D_MatrixOrder_\">\r\n    \r\n            <a id=\"System_Drawing_Graphics_TranslateTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TranslateTransform(Single,Single,MatrixOrder)</div>        \r\n          </div>\r\n    \r\n            <p>Changes the origin of the coordinate system by applying the specified translation to the transformation matrix of this <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> in the specified order.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dx</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the translation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dy</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the translation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>order</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Member of the <a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a> enumeration that specifies whether the translation is prepended or appended to the transformation matrix.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The translation operation consists of multiplying the transformation matrix by a matrix whose translation part is the <code>dx</code> and <code>dy</code> parameters. This method prepends or appends the transformation matrix of the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> by the translation matrix according to the <code>order</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Rotates the world transformation matrix of the Windows Form by 30.0F degrees.  </p>\n</li>\n<li><p>Moves the graphics object&#39;s origin by calling TranslateTransform, appending the translation to the world transformation matrix.  </p>\n</li>\n<li><p>Draws a rotated, translated ellipse with a blue pen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicGraphicsExamples3#168\">public:\n   void TranslateTransformAngleMatrixOrder( PaintEventArgs^ e )\n   {\n      // Set world transform of graphics object to rotate.\n      e-&gt;Graphics-&gt;RotateTransform( 30.0F );\n\n      // Then to translate, appending to world transform.\n      e-&gt;Graphics-&gt;TranslateTransform( 100.0F, 0.0F, MatrixOrder::Append );\n\n      // Draw rotated, translated ellipse to screen.\n      e-&gt;Graphics-&gt;DrawEllipse( gcnew Pen( Color::Blue,3.0f ), 0, 0, 200, 80 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicGraphicsExamples3#168\">        private void TranslateTransformAngleMatrixOrder(PaintEventArgs e)\n        {\n\n            // Set world transform of graphics object to rotate.\n            e.Graphics.RotateTransform(30.0F);\n\n            // Then to translate, appending to world transform.\n            e.Graphics.TranslateTransform(100.0F, 0.0F, MatrixOrder.Append);\n\n            // Draw rotated, translated ellipse to screen.\n            e.Graphics.DrawEllipse(new Pen(Color.Blue, 3), 0, 0, 200, 80);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicGraphicsExamples3#168\">    Private Sub TranslateTransformAngleMatrixOrder(ByVal e As PaintEventArgs)\n\n        &#39; Set world transform of graphics object to rotate.\n        e.Graphics.RotateTransform(30.0F)\n\n        &#39; Then to translate, appending to world transform.\n        e.Graphics.TranslateTransform(100.0F, 0.0F, MatrixOrder.Append)\n\n        &#39; Draw rotated, translated ellipse to screen.\n        e.Graphics.DrawEllipse(New Pen(Color.Blue, 3), 0, 0, 200, 80)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Drawing.Graphics.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Drawing.Graphics.yml\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.AddMetafileComment\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.BeginContainer\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.Clear\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.Clip\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.ClipBounds\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.CompositingMode\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.CompositingQuality\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.CopyFromScreen\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.DpiX\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.DpiY\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.DrawArc\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.DrawBezier\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.DrawBeziers\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.DrawClosedCurve\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.DrawCurve\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.DrawEllipse\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.DrawIcon\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.DrawIconUnstretched\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.DrawImage\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.DrawImageUnscaled\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.DrawImageUnscaledAndClipped\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.DrawLine\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.DrawLines\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.DrawPath\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.DrawPie\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.DrawPolygon\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.DrawRectangle\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.DrawRectangles\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.DrawString\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.EndContainer\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.EnumerateMetafile\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.ExcludeClip\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.FillClosedCurve\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.FillEllipse\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.FillPath\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.FillPie\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.FillPolygon\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.FillRectangle\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.FillRectangles\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.FillRegion\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.Finalize\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.Flush\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.FromHdc\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.FromHdcInternal\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.FromHwnd\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.FromHwndInternal\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.FromImage\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.GetContextInfo\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.GetHalftonePalette\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.GetHdc\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.GetNearestColor\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.InterpolationMode\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.IntersectClip\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.IsClipEmpty\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.IsVisible\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.IsVisibleClipEmpty\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.MeasureCharacterRanges\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.MeasureString\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.MultiplyTransform\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.PageScale\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.PageUnit\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.PixelOffsetMode\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.ReleaseHdc\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.ReleaseHdcInternal\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.RenderingOrigin\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.ResetClip\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.ResetTransform\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.Restore\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.RotateTransform\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.Save\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.ScaleTransform\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.SetClip\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.SmoothingMode\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.TextContrast\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.TextRenderingHint\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.Transform\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.TransformPoints\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.TranslateClip\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.TranslateTransform\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Graphics.VisibleClipBounds\">\r\n<meta name=\"APILocation\" content=\"System.Drawing.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"c1da96cf-c3db-cf09-4d9c-e20468bfcc1d\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Encapsulates a GDI+ drawing surface. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Drawing/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Drawing.Graphics\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Drawing.Graphics.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Drawing.Graphics.yml","open_to_public_contributors":true,"api_name":["System.Drawing.Graphics","System.Drawing.Graphics.AddMetafileComment","System.Drawing.Graphics.BeginContainer","System.Drawing.Graphics.Clear","System.Drawing.Graphics.Clip","System.Drawing.Graphics.ClipBounds","System.Drawing.Graphics.CompositingMode","System.Drawing.Graphics.CompositingQuality","System.Drawing.Graphics.CopyFromScreen","System.Drawing.Graphics.Dispose","System.Drawing.Graphics.DpiX","System.Drawing.Graphics.DpiY","System.Drawing.Graphics.DrawArc","System.Drawing.Graphics.DrawBezier","System.Drawing.Graphics.DrawBeziers","System.Drawing.Graphics.DrawClosedCurve","System.Drawing.Graphics.DrawCurve","System.Drawing.Graphics.DrawEllipse","System.Drawing.Graphics.DrawIcon","System.Drawing.Graphics.DrawIconUnstretched","System.Drawing.Graphics.DrawImage","System.Drawing.Graphics.DrawImageUnscaled","System.Drawing.Graphics.DrawImageUnscaledAndClipped","System.Drawing.Graphics.DrawLine","System.Drawing.Graphics.DrawLines","System.Drawing.Graphics.DrawPath","System.Drawing.Graphics.DrawPie","System.Drawing.Graphics.DrawPolygon","System.Drawing.Graphics.DrawRectangle","System.Drawing.Graphics.DrawRectangles","System.Drawing.Graphics.DrawString","System.Drawing.Graphics.EndContainer","System.Drawing.Graphics.EnumerateMetafile","System.Drawing.Graphics.ExcludeClip","System.Drawing.Graphics.FillClosedCurve","System.Drawing.Graphics.FillEllipse","System.Drawing.Graphics.FillPath","System.Drawing.Graphics.FillPie","System.Drawing.Graphics.FillPolygon","System.Drawing.Graphics.FillRectangle","System.Drawing.Graphics.FillRectangles","System.Drawing.Graphics.FillRegion","System.Drawing.Graphics.Finalize","System.Drawing.Graphics.Flush","System.Drawing.Graphics.FromHdc","System.Drawing.Graphics.FromHdcInternal","System.Drawing.Graphics.FromHwnd","System.Drawing.Graphics.FromHwndInternal","System.Drawing.Graphics.FromImage","System.Drawing.Graphics.GetContextInfo","System.Drawing.Graphics.GetHalftonePalette","System.Drawing.Graphics.GetHdc","System.Drawing.Graphics.GetNearestColor","System.Drawing.Graphics.InterpolationMode","System.Drawing.Graphics.IntersectClip","System.Drawing.Graphics.IsClipEmpty","System.Drawing.Graphics.IsVisible","System.Drawing.Graphics.IsVisibleClipEmpty","System.Drawing.Graphics.MeasureCharacterRanges","System.Drawing.Graphics.MeasureString","System.Drawing.Graphics.MultiplyTransform","System.Drawing.Graphics.PageScale","System.Drawing.Graphics.PageUnit","System.Drawing.Graphics.PixelOffsetMode","System.Drawing.Graphics.ReleaseHdc","System.Drawing.Graphics.ReleaseHdcInternal","System.Drawing.Graphics.RenderingOrigin","System.Drawing.Graphics.ResetClip","System.Drawing.Graphics.ResetTransform","System.Drawing.Graphics.Restore","System.Drawing.Graphics.RotateTransform","System.Drawing.Graphics.Save","System.Drawing.Graphics.ScaleTransform","System.Drawing.Graphics.SetClip","System.Drawing.Graphics.SmoothingMode","System.Drawing.Graphics.TextContrast","System.Drawing.Graphics.TextRenderingHint","System.Drawing.Graphics.Transform","System.Drawing.Graphics.TransformPoints","System.Drawing.Graphics.TranslateClip","System.Drawing.Graphics.TranslateTransform","System.Drawing.Graphics.VisibleClipBounds"],"api_location":["System.Drawing.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Drawing.Graphics","System::Drawing::Graphics","System.Drawing.Graphics.AddMetafileComment","System::Drawing::Graphics::AddMetafileComment","System.Drawing.Graphics.BeginContainer","System::Drawing::Graphics::BeginContainer","System.Drawing.Graphics.Clear","System::Drawing::Graphics::Clear","System.Drawing.Graphics.Clip","System::Drawing::Graphics::Clip","System.Drawing.Graphics.ClipBounds","System::Drawing::Graphics::ClipBounds","System.Drawing.Graphics.CompositingMode","System::Drawing::Graphics::CompositingMode","System.Drawing.Graphics.CompositingQuality","System::Drawing::Graphics::CompositingQuality","System.Drawing.Graphics.CopyFromScreen","System::Drawing::Graphics::CopyFromScreen","System.Drawing.Graphics.Dispose","System::Drawing::Graphics::Dispose","System.Drawing.Graphics.DpiX","System::Drawing::Graphics::DpiX","System.Drawing.Graphics.DpiY","System::Drawing::Graphics::DpiY","System.Drawing.Graphics.DrawArc","System::Drawing::Graphics::DrawArc","System.Drawing.Graphics.DrawBezier","System::Drawing::Graphics::DrawBezier","System.Drawing.Graphics.DrawBeziers","System::Drawing::Graphics::DrawBeziers","System.Drawing.Graphics.DrawClosedCurve","System::Drawing::Graphics::DrawClosedCurve","System.Drawing.Graphics.DrawCurve","System::Drawing::Graphics::DrawCurve","System.Drawing.Graphics.DrawEllipse","System::Drawing::Graphics::DrawEllipse","System.Drawing.Graphics.DrawIcon","System::Drawing::Graphics::DrawIcon","System.Drawing.Graphics.DrawIconUnstretched","System::Drawing::Graphics::DrawIconUnstretched","System.Drawing.Graphics.DrawImage","System::Drawing::Graphics::DrawImage","System.Drawing.Graphics.DrawImageUnscaled","System::Drawing::Graphics::DrawImageUnscaled","System.Drawing.Graphics.DrawImageUnscaledAndClipped","System::Drawing::Graphics::DrawImageUnscaledAndClipped","System.Drawing.Graphics.DrawLine","System::Drawing::Graphics::DrawLine","System.Drawing.Graphics.DrawLines","System::Drawing::Graphics::DrawLines","System.Drawing.Graphics.DrawPath","System::Drawing::Graphics::DrawPath","System.Drawing.Graphics.DrawPie","System::Drawing::Graphics::DrawPie","System.Drawing.Graphics.DrawPolygon","System::Drawing::Graphics::DrawPolygon","System.Drawing.Graphics.DrawRectangle","System::Drawing::Graphics::DrawRectangle","System.Drawing.Graphics.DrawRectangles","System::Drawing::Graphics::DrawRectangles","System.Drawing.Graphics.DrawString","System::Drawing::Graphics::DrawString","System.Drawing.Graphics.EndContainer","System::Drawing::Graphics::EndContainer","System.Drawing.Graphics.EnumerateMetafile","System::Drawing::Graphics::EnumerateMetafile","System.Drawing.Graphics.ExcludeClip","System::Drawing::Graphics::ExcludeClip","System.Drawing.Graphics.FillClosedCurve","System::Drawing::Graphics::FillClosedCurve","System.Drawing.Graphics.FillEllipse","System::Drawing::Graphics::FillEllipse","System.Drawing.Graphics.FillPath","System::Drawing::Graphics::FillPath","System.Drawing.Graphics.FillPie","System::Drawing::Graphics::FillPie","System.Drawing.Graphics.FillPolygon","System::Drawing::Graphics::FillPolygon","System.Drawing.Graphics.FillRectangle","System::Drawing::Graphics::FillRectangle","System.Drawing.Graphics.FillRectangles","System::Drawing::Graphics::FillRectangles","System.Drawing.Graphics.FillRegion","System::Drawing::Graphics::FillRegion","System.Drawing.Graphics.Finalize","System::Drawing::Graphics::Finalize","System.Drawing.Graphics.Flush","System::Drawing::Graphics::Flush","System.Drawing.Graphics.FromHdc","System::Drawing::Graphics::FromHdc","System.Drawing.Graphics.FromHdcInternal","System::Drawing::Graphics::FromHdcInternal","System.Drawing.Graphics.FromHwnd","System::Drawing::Graphics::FromHwnd","System.Drawing.Graphics.FromHwndInternal","System::Drawing::Graphics::FromHwndInternal","System.Drawing.Graphics.FromImage","System::Drawing::Graphics::FromImage","System.Drawing.Graphics.GetContextInfo","System::Drawing::Graphics::GetContextInfo","System.Drawing.Graphics.GetHalftonePalette","System::Drawing::Graphics::GetHalftonePalette","System.Drawing.Graphics.GetHdc","System::Drawing::Graphics::GetHdc","System.Drawing.Graphics.GetNearestColor","System::Drawing::Graphics::GetNearestColor","System.Drawing.Graphics.InterpolationMode","System::Drawing::Graphics::InterpolationMode","System.Drawing.Graphics.IntersectClip","System::Drawing::Graphics::IntersectClip","System.Drawing.Graphics.IsClipEmpty","System::Drawing::Graphics::IsClipEmpty","System.Drawing.Graphics.IsVisible","System::Drawing::Graphics::IsVisible","System.Drawing.Graphics.IsVisibleClipEmpty","System::Drawing::Graphics::IsVisibleClipEmpty","System.Drawing.Graphics.MeasureCharacterRanges","System::Drawing::Graphics::MeasureCharacterRanges","System.Drawing.Graphics.MeasureString","System::Drawing::Graphics::MeasureString","System.Drawing.Graphics.MultiplyTransform","System::Drawing::Graphics::MultiplyTransform","System.Drawing.Graphics.PageScale","System::Drawing::Graphics::PageScale","System.Drawing.Graphics.PageUnit","System::Drawing::Graphics::PageUnit","System.Drawing.Graphics.PixelOffsetMode","System::Drawing::Graphics::PixelOffsetMode","System.Drawing.Graphics.ReleaseHdc","System::Drawing::Graphics::ReleaseHdc","System.Drawing.Graphics.ReleaseHdcInternal","System::Drawing::Graphics::ReleaseHdcInternal","System.Drawing.Graphics.RenderingOrigin","System::Drawing::Graphics::RenderingOrigin","System.Drawing.Graphics.ResetClip","System::Drawing::Graphics::ResetClip","System.Drawing.Graphics.ResetTransform","System::Drawing::Graphics::ResetTransform","System.Drawing.Graphics.Restore","System::Drawing::Graphics::Restore","System.Drawing.Graphics.RotateTransform","System::Drawing::Graphics::RotateTransform","System.Drawing.Graphics.Save","System::Drawing::Graphics::Save","System.Drawing.Graphics.ScaleTransform","System::Drawing::Graphics::ScaleTransform","System.Drawing.Graphics.SetClip","System::Drawing::Graphics::SetClip","System.Drawing.Graphics.SmoothingMode","System::Drawing::Graphics::SmoothingMode","System.Drawing.Graphics.TextContrast","System::Drawing::Graphics::TextContrast","System.Drawing.Graphics.TextRenderingHint","System::Drawing::Graphics::TextRenderingHint","System.Drawing.Graphics.Transform","System::Drawing::Graphics::Transform","System.Drawing.Graphics.TransformPoints","System::Drawing::Graphics::TransformPoints","System.Drawing.Graphics.TranslateClip","System::Drawing::Graphics::TranslateClip","System.Drawing.Graphics.TranslateTransform","System::Drawing::Graphics::TranslateTransform","System.Drawing.Graphics.VisibleClipBounds","System::Drawing::Graphics::VisibleClipBounds"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"c1da96cf-c3db-cf09-4d9c-e20468bfcc1d","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Drawing/Graphics.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Graphics class | Microsoft Docs","_op_ogTitle":"Graphics class","description":"Encapsulates a GDI+ drawing surface. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Drawing/toc.json","toc_rel":"_splitted/System.Drawing/toc.json","source_url":"","ms.assetid":"System.Drawing.Graphics","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.drawing.graphics","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.drawing.graphics","fileRelativePath":"System.Drawing.Graphics.html"},"themesRelativePathToOutputRoot":"_themes/"}