{"content":"    \r\n    <h1 id=\"System_Net_WebRequest\">\r\n      <span class=\"lang-csharp\">WebRequest</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Makes a request to a Uniform Resource Identifier (URI). This is an <code>abstract</code> class.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class WebRequest : MarshalByRefObject, System.Runtime.Serialization.ISerializable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">System.MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">WebRequest</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>WebRequest is the <code>abstract</code> base class for the .NET Framework&#39;s request/response model for accessing data from the Internet. An application that uses the request/response model can request data from the Internet in a protocol-agnostic manner, in which the application works with instances of the WebRequest class while protocol-specific descendant classes carry out the details of the request.  </p>\n<p> Requests are sent from an application to a particular URI, such as a Web page on a server. The URI determines the proper descendant class to create from a list of WebRequest descendants registered for the application. WebRequest descendants are typically registered to handle a specific protocol, such as HTTP or FTP, but can be registered to handle a request to a specific server or path on a server.  </p>\n<p> The WebRequest class throws a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> when errors occur while accessing an Internet resource. The <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property is one of the <a class=\"xref\" href=\"system.net.webexceptionstatus\" data-linktype=\"relative-path\">WebExceptionStatus</a> values that indicates the source of the error. When <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> is <a class=\"xref\" href=\"system.net.webexceptionstatus\" data-linktype=\"relative-path\">System.Net.WebExceptionStatus</a>, the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Response_\" data-linktype=\"relative-path\">Response</a> property contains the <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> received from the Internet resource.  </p>\n<p> Because the WebRequest class is an <code>abstract</code> class, the actual behavior of WebRequest instances at run time is determined by the descendant class returned by <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method. For more information about default values and exceptions, see the documentation for the descendant classes, such as <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> and <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Use the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method to initialize new WebRequest instances. Do not use the WebRequest constructor.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> If the application that creates the WebRequest object runs with the credentials of a Normal user, the application will not be able to access certificates installed in the local machine store unless permission has been explicitly given to the user to do so.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest__ctor\" data-linktype=\"self-bookmark\">WebRequest()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">WebRequest(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class from the specified instances of the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> and <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> classes.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_AuthenticationLevel\" data-linktype=\"self-bookmark\">AuthenticationLevel</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets values indicating the level of authentication and impersonation used for this request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_CachePolicy\" data-linktype=\"self-bookmark\">CachePolicy</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the cache policy for this request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_ConnectionGroupName\" data-linktype=\"self-bookmark\">ConnectionGroupName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a descendant class, gets or sets the name of the connection group for the request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_ContentLength\" data-linktype=\"self-bookmark\">ContentLength</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a descendant class, gets or sets the content length of the request data being sent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_ContentType\" data-linktype=\"self-bookmark\">ContentType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a descendant class, gets or sets the content type of the request data being sent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_CreatorInstance\" data-linktype=\"self-bookmark\">CreatorInstance</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a descendant class, gets the factory object derived from the <a class=\"xref\" href=\"system.net.iwebrequestcreate\" data-linktype=\"relative-path\">IWebRequestCreate</a> class used to create the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instantiated for making the request to the specified URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_Credentials\" data-linktype=\"self-bookmark\">Credentials</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a descendant class, gets or sets the network credentials used for authenticating the request with the Internet resource.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_DefaultCachePolicy\" data-linktype=\"self-bookmark\">DefaultCachePolicy</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the default cache policy for this request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_DefaultWebProxy\" data-linktype=\"self-bookmark\">DefaultWebProxy</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the global HTTP proxy.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_Headers\" data-linktype=\"self-bookmark\">Headers</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a descendant class, gets or sets the collection of header name/value pairs associated with the request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_ImpersonationLevel\" data-linktype=\"self-bookmark\">ImpersonationLevel</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the impersonation level for the current request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_Method\" data-linktype=\"self-bookmark\">Method</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a descendant class, gets or sets the protocol method to use in this request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_PreAuthenticate\" data-linktype=\"self-bookmark\">PreAuthenticate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a descendant class, indicates whether to pre-authenticate the request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_Proxy\" data-linktype=\"self-bookmark\">Proxy</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a descendant class, gets or sets the network proxy to use to access this Internet resource.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_RequestUri\" data-linktype=\"self-bookmark\">RequestUri</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a descendant class, gets the URI of the Internet resource associated with the request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_Timeout\" data-linktype=\"self-bookmark\">Timeout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the length of time, in milliseconds, before the request times out.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_UseDefaultCredentials\" data-linktype=\"self-bookmark\">UseDefaultCredentials</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a descendant class, gets or sets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that controls whether <span class=\"xref\">stem.Net.CredentialCache.DefaultCredentials*</span> are sent with requests.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_Abort\" data-linktype=\"self-bookmark\">Abort()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Aborts the Request</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_BeginGetRequestStream_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginGetRequestStream(AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a descendant class, provides an asynchronous version of the <span class=\"xref\">stem.Net.WebRequest.GetRequestStream*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_BeginGetResponse_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginGetResponse(AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a descendant class, begins an asynchronous request for an Internet resource.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_Create_System_String_\" data-linktype=\"self-bookmark\">Create(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instance for the specified URI scheme.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_Create_System_Uri_\" data-linktype=\"self-bookmark\">Create(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instance for the specified URI scheme.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_CreateDefault_System_Uri_\" data-linktype=\"self-bookmark\">CreateDefault(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instance for the specified URI scheme.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_CreateHttp_System_String_\" data-linktype=\"self-bookmark\">CreateHttp(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> instance for the specified URI string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_CreateHttp_System_Uri_\" data-linktype=\"self-bookmark\">CreateHttp(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> instance for the specified URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_EndGetRequestStream_System_IAsyncResult_\" data-linktype=\"self-bookmark\">EndGetRequestStream(IAsyncResult)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a descendant class, returns a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> for writing data to the Internet resource.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_EndGetResponse_System_IAsyncResult_\" data-linktype=\"self-bookmark\">EndGetResponse(IAsyncResult)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a descendant class, returns a <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">GetObjectData(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Populates a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> with the data needed to serialize the target object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_GetRequestStream\" data-linktype=\"self-bookmark\">GetRequestStream()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a descendant class, returns a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> for writing data to the Internet resource.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_GetRequestStreamAsync\" data-linktype=\"self-bookmark\">GetRequestStreamAsync()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a descendant class, returns a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> for writing data to the Internet resource as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_GetResponse\" data-linktype=\"self-bookmark\">GetResponse()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a descendant class, returns a response to an Internet request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_GetResponseAsync\" data-linktype=\"self-bookmark\">GetResponseAsync()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a descendant class, returns a response to an Internet request as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_GetSystemWebProxy\" data-linktype=\"self-bookmark\">GetSystemWebProxy()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a proxy configured with the Internet Explorer settings of the currently impersonated user.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_RegisterPortableWebRequestCreator_System_Net_IWebRequestCreate_\" data-linktype=\"self-bookmark\">RegisterPortableWebRequestCreator(IWebRequestCreate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Register an <a class=\"xref\" href=\"system.net.iwebrequestcreate\" data-linktype=\"relative-path\">IWebRequestCreate</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_RegisterPrefix_System_String_System_Net_IWebRequestCreate_\" data-linktype=\"self-bookmark\">RegisterPrefix(String,IWebRequestCreate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers a <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> descendant for the specified URI.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebRequest_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a descendant class, populates a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> instance with the data needed to serialize the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest__ctor\">\r\n    \r\n            <a id=\"System_Net_WebRequest__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WebRequest()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected WebRequest ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method to initialize new <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instances. Do not use the constructor.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to create a <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instance by calling the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method on the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic WebRequest.WebRequest Example#1\">      WebRequest^ myRequest = WebRequest::Create( &quot;http://www.contoso.com&quot; );\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebRequest.WebRequest Example#1\">Dim myRequest As WebRequest = WebRequest.Create(&quot;http://www.contoso.com&quot;)\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebRequest.WebRequest Example#1\">WebRequest myRequest = WebRequest.Create(&quot;http://www.contoso.com&quot;);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Net_WebRequest__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WebRequest(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class from the specified instances of the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> and <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> classes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected WebRequest (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializationInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> that contains the information required to serialize the new <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>streamingContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> that indicates the source of the serialized stream associated with the new <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Any attempt is made to access the constructor, when the constructor is not overridden in a descendant class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When implemented by a descendant class, this constructor implements the <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface for the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> descendant.  </p>\n<p> Notice that an application must run in full trust mode when using serialization.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_AuthenticationLevel\">\r\n    \r\n            <a id=\"System_Net_WebRequest_AuthenticationLevel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AuthenticationLevel</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets values indicating the level of authentication and impersonation used for this request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.Security.AuthenticationLevel AuthenticationLevel { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.security.authenticationlevel\" data-linktype=\"relative-path\">AuthenticationLevel</a></div>\r\n                  </div>\r\n                  <p>A bitwise combination of the <a class=\"xref\" href=\"system.net.security.authenticationlevel\" data-linktype=\"relative-path\">AuthenticationLevel</a> values. The default value is <a class=\"xref\" href=\"system.net.security.authenticationlevel\" data-linktype=\"relative-path\">AuthenticationLevel</a>.  </p>\n<p> In mutual authentication, both the client and server present credentials to establish their identity. The <a class=\"xref\" href=\"system.net.security.authenticationlevel\" data-linktype=\"relative-path\">AuthenticationLevel</a> and <a class=\"xref\" href=\"system.net.security.authenticationlevel\" data-linktype=\"relative-path\">AuthenticationLevel</a> values are relevant for Kerberos authentication. Kerberos authentication can be supported directly, or can be used if the Negotiate security protocol is used to select the actual security protocol. For more information about authentication protocols, see <a href=\"../Topic/Internet%20Authentication.md\" data-linktype=\"relative-path\">Internet Authentication</a>.  </p>\n<p> To determine whether mutual authentication occurred, check the <span class=\"xref\">stem.Net.WebResponse.IsMutuallyAuthenticated*</span> property.  </p>\n<p> If you specify the <a class=\"xref\" href=\"system.net.security.authenticationlevel\" data-linktype=\"relative-path\">AuthenticationLevel</a> authentication flag value and mutual authentication does not occur, your application will receive an <a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a> with a <a class=\"xref\" href=\"system.net.protocolviolationexception\" data-linktype=\"relative-path\">ProtocolViolationException</a> inner exception indicating that mutual authentication failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example sets the value of this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclCredPolicy#1\">   // The following example uses the System, System.Net, \n   // and System.IO namespaces.\n   static void RequestMutualAuth( Uri^ resource )\n   {\n      // Create a new HttpWebRequest object for the specified resource.\n      WebRequest^ request = dynamic_cast&lt;WebRequest^&gt;(WebRequest::Create( resource ));\n\n      // Request mutual authentication.\n      request-&gt;AuthenticationLevel = AuthenticationLevel::MutualAuthRequested;\n\n      // Supply client credentials.\n      request-&gt;Credentials = CredentialCache::DefaultCredentials;\n      HttpWebResponse^ response = dynamic_cast&lt;HttpWebResponse^&gt;(request-&gt;GetResponse());\n\n      // Determine whether mutual authentication was used.\n      Console::WriteLine( L&quot;Is mutually authenticated? {0}&quot;, response-&gt;IsMutuallyAuthenticated );\n\n      // Read and display the response.\n      Stream^ streamResponse = response-&gt;GetResponseStream();\n      StreamReader^ streamRead = gcnew StreamReader( streamResponse );\n      String^ responseString = streamRead-&gt;ReadToEnd();\n      Console::WriteLine( responseString );\n\n      // Close the stream objects.\n      streamResponse-&gt;Close();\n      streamRead-&gt;Close();\n\n      // Release the HttpWebResponse.\n      response-&gt;Close();\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"NclCredPolicy#1\">\n        // The following example uses the System, System.Net, \n        // and System.IO namespaces.\n        \n        public static void RequestMutualAuth(Uri resource)\n        {\n            // Create a new HttpWebRequest object for the specified resource.\n            WebRequest request=(WebRequest) WebRequest.Create(resource);\n            // Request mutual authentication.\n           request.AuthenticationLevel = AuthenticationLevel.MutualAuthRequested;\n            // Supply client credentials.\n            request.Credentials = CredentialCache.DefaultCredentials;\n            HttpWebResponse response = (HttpWebResponse) request.GetResponse();\n            // Determine whether mutual authentication was used.\n            Console.WriteLine(&quot;Is mutually authenticated? {0}&quot;, response.IsMutuallyAuthenticated);\n            // Read and display the response.\n            Stream streamResponse = response.GetResponseStream();\n            StreamReader streamRead = new StreamReader(streamResponse);\n            string responseString = streamRead.ReadToEnd();\n           Console.WriteLine(responseString);\n            // Close the stream objects.\n            streamResponse.Close();\n            streamRead.Close();\n            // Release the HttpWebResponse.\n            response.Close();\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_CachePolicy\">\r\n    \r\n            <a id=\"System_Net_WebRequest_CachePolicy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CachePolicy</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the cache policy for this request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Net.Cache.RequestCachePolicy CachePolicy { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.cache.requestcachepolicy\" data-linktype=\"relative-path\">RequestCachePolicy</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.cache.requestcachepolicy\" data-linktype=\"relative-path\">RequestCachePolicy</a> object that defines a cache policy.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current cache policy and the presence of the requested resource in the cache determine whether a response can be retrieved from the cache. Using cached responses usually improves application performance, but there is a risk that the response in the cache does not match the response on the server.  </p>\n<p> Default cache policy can be specified in the Machine.config configuration file or by setting the <a class=\"xref\" href=\"system.net.httpwebrequest#System_Net_HttpWebRequest_DefaultCachePolicy_\" data-linktype=\"relative-path\">DefaultCachePolicy</a> property for requests that use the Hypertext Transfer Protocol (HTTP) or Secure Hypertext Transfer Protocol (HTTPS) URI scheme.  </p>\n<p> A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream. So another request for the same resource could use a cached copy, depending on the cache policy level for this request.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates setting the cache policy for a Web request.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLSimpleCache#2\">   // The following method demonstrates overriding the\n   // caching policy for a request.\n   static WebResponse^ GetResponseNoCache( Uri^ uri )\n   {\n      // Set a default policy level for the &quot;http:&quot; and &quot;https&quot; schemes.\n      HttpRequestCachePolicy^ policy = gcnew HttpRequestCachePolicy( HttpRequestCacheLevel::Default );\n      HttpWebRequest::DefaultCachePolicy = policy;\n\n      // Create the request.\n      WebRequest^ request = WebRequest::Create( uri );\n\n      // Define a cache policy for this request only. \n      HttpRequestCachePolicy^ noCachePolicy = gcnew HttpRequestCachePolicy( HttpRequestCacheLevel::NoCacheNoStore );\n      request-&gt;CachePolicy = noCachePolicy;\n      WebResponse^ response = request-&gt;GetResponse();\n      Console::WriteLine( L&quot;IsFromCache? {0}&quot;, response-&gt;IsFromCache );\n      \n      return response;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLSimpleCache#2\">        // The following method demonstrates overriding the\n        // caching policy for a request.\n        public static WebResponse GetResponseNoCache(Uri uri)\n        {\n            // Set a default policy level for the &quot;http:&quot; and &quot;https&quot; schemes.\n            HttpRequestCachePolicy policy = new HttpRequestCachePolicy(HttpRequestCacheLevel.Default);\n            HttpWebRequest.DefaultCachePolicy = policy;\n            // Create the request.\n            WebRequest request = WebRequest.Create(uri);\n            // Define a cache policy for this request only. \n            HttpRequestCachePolicy noCachePolicy = new HttpRequestCachePolicy(HttpRequestCacheLevel.NoCacheNoStore);\n            request.CachePolicy = noCachePolicy;\n            WebResponse response = request.GetResponse();\n            Console.WriteLine(&quot;IsFromCache? {0}&quot;, response.IsFromCache);            \n            return response;\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_ConnectionGroupName\">\r\n    \r\n            <a id=\"System_Net_WebRequest_ConnectionGroupName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConnectionGroupName</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a descendant class, gets or sets the name of the connection group for the request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string ConnectionGroupName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the connection group for the request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ConnectionGroupName property associates specific requests within an application to one or more connection pools.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class is an <code>abstract</code> class. The actual behavior of <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instances at run time is determined by the descendant class returned by the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method. For more information about default values and exceptions, see the documentation for the descendant classes, such as <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> and <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_ContentLength\">\r\n    \r\n            <a id=\"System_Net_WebRequest_ContentLength_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContentLength</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a descendant class, gets or sets the content length of the request data being sent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual long ContentLength { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The number of bytes of request data being sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ContentLength property contains the number of bytes of data sent to the Internet resource by the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instance.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class is an <code>abstract</code> class. The actual behavior of <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instances at run time is determined by the descendant class returned by the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method. For more information about default values and exceptions, see the documentation for the descendant classes, such as <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> and <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example sets the ContentLength property to the amount of bytes in the outgoing byte buffer.  </p>\n<pre><code class=\"lang-cs\" name=\"WebRequest_ContentType#4\">\n\t\t\t// Set the &#39;ContentType&#39; property of the WebRequest.\n\t\t\tmyWebRequest.ContentType=&quot;application/x-www-form-urlencoded&quot;;\n\n\t\t\t// Set the &#39;ContentLength&#39; property of the WebRequest.\n\t\t\tmyWebRequest.ContentLength=byteArray.Length;\n\t\t\tStream newStream=myWebRequest.GetRequestStream();\n\t\t\tnewStream.Write(byteArray,0,byteArray.Length);\n\n\t\t\t// Close the Stream object.\n\t\t\tnewStream.Close();\n\n\t\t\t// Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n\t\t\tWebResponse myWebResponse=myWebRequest.GetResponse();\n\t\t\t\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebRequest_ContentType#4\">      // Set the &#39;ContentType&#39; property of the WebRequest.\n      myWebRequest-&gt;ContentType = &quot;application/x-www-form-urlencoded&quot;;\n      \n      // Set the &#39;ContentLength&#39; property of the WebRequest.\n      myWebRequest-&gt;ContentLength = byteArray-&gt;Length;\n      Stream^ newStream = myWebRequest-&gt;GetRequestStream();\n      newStream-&gt;Write( byteArray, 0, byteArray-&gt;Length );\n      \n      // Close the Stream object.\n      newStream-&gt;Close();\n      \n      // Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n      WebResponse^ myWebResponse = myWebRequest-&gt;GetResponse();\n</code></pre><pre><code class=\"lang-vb\" name=\"WebRequest_ContentType#4\">\n\n            &#39; Set the &#39;ContentType&#39; property of the WebRequest.\n            myWebRequest.ContentType = &quot;application/x-www-form-urlencoded&quot;\n\n            &#39; Set the &#39;ContentLength&#39; property of the WebRequest.\n            myWebRequest.ContentLength = byteArray.Length\n            Dim newStream As Stream = myWebRequest.GetRequestStream()\n            newStream.Write(byteArray, 0, byteArray.Length)\n\n            &#39; Close the Stream object.\n            newStream.Close()\n\n            &#39; Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n            Dim myWebResponse As WebResponse = myWebRequest.GetResponse()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_ContentType\">\r\n    \r\n            <a id=\"System_Net_WebRequest_ContentType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContentType</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a descendant class, gets or sets the content type of the request data being sent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string ContentType { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The content type of the request data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ContentType property contains the media type of the request. This is typically the MIME encoding of the content.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class is an <code>abstract</code> class. The actual behavior of <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instances at run time is determined by the descendant class returned by the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method. For more information about default values and exceptions, see the documentation for the descendant classes, such as <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> and <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example sets the ContentType property to the appropriate media type.  </p>\n<pre><code class=\"lang-cs\" name=\"WebRequest_ContentType#4\">\n\t\t\t// Set the &#39;ContentType&#39; property of the WebRequest.\n\t\t\tmyWebRequest.ContentType=&quot;application/x-www-form-urlencoded&quot;;\n\n\t\t\t// Set the &#39;ContentLength&#39; property of the WebRequest.\n\t\t\tmyWebRequest.ContentLength=byteArray.Length;\n\t\t\tStream newStream=myWebRequest.GetRequestStream();\n\t\t\tnewStream.Write(byteArray,0,byteArray.Length);\n\n\t\t\t// Close the Stream object.\n\t\t\tnewStream.Close();\n\n\t\t\t// Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n\t\t\tWebResponse myWebResponse=myWebRequest.GetResponse();\n\t\t\t\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebRequest_ContentType#4\">      // Set the &#39;ContentType&#39; property of the WebRequest.\n      myWebRequest-&gt;ContentType = &quot;application/x-www-form-urlencoded&quot;;\n      \n      // Set the &#39;ContentLength&#39; property of the WebRequest.\n      myWebRequest-&gt;ContentLength = byteArray-&gt;Length;\n      Stream^ newStream = myWebRequest-&gt;GetRequestStream();\n      newStream-&gt;Write( byteArray, 0, byteArray-&gt;Length );\n      \n      // Close the Stream object.\n      newStream-&gt;Close();\n      \n      // Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n      WebResponse^ myWebResponse = myWebRequest-&gt;GetResponse();\n</code></pre><pre><code class=\"lang-vb\" name=\"WebRequest_ContentType#4\">\n\n            &#39; Set the &#39;ContentType&#39; property of the WebRequest.\n            myWebRequest.ContentType = &quot;application/x-www-form-urlencoded&quot;\n\n            &#39; Set the &#39;ContentLength&#39; property of the WebRequest.\n            myWebRequest.ContentLength = byteArray.Length\n            Dim newStream As Stream = myWebRequest.GetRequestStream()\n            newStream.Write(byteArray, 0, byteArray.Length)\n\n            &#39; Close the Stream object.\n            newStream.Close()\n\n            &#39; Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n            Dim myWebResponse As WebResponse = myWebRequest.GetResponse()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_CreatorInstance\">\r\n    \r\n            <a id=\"System_Net_WebRequest_CreatorInstance_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreatorInstance</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a descendant class, gets the factory object derived from the <a class=\"xref\" href=\"system.net.iwebrequestcreate\" data-linktype=\"relative-path\">IWebRequestCreate</a> class used to create the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instantiated for making the request to the specified URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Net.IWebRequestCreate CreatorInstance { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.iwebrequestcreate\" data-linktype=\"relative-path\">IWebRequestCreate</a></div>\r\n                  </div>\r\n                  <p>Returns <a class=\"xref\" href=\"system.net.iwebrequestcreate\" data-linktype=\"relative-path\">IWebRequestCreate</a>.  </p>\n<p> The derived <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> type returned by the <span class=\"xref\">stem.Net.IWebRequestCreate.Create*</span> method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property allows an application to determine which <a class=\"xref\" href=\"system.net.iwebrequestcreate\" data-linktype=\"relative-path\">IWebRequestCreate</a> derived factory object was used to create the request. This object may be <a href=\"https://msdn.microsoft.com/subscriptions/index/system.net.browser.webrequestcreator.browserhttp(v=vs.95).aspx\" data-linktype=\"external\">System.Net.Browser.WebRequestCreator.BrowserHttp</a> or &lt;xref:System.Net.Browser.WebRequestCreator.ClientHttp%2A?displayProperty=fullName&gt;, but it may also be a custom instance derived from <a class=\"xref\" href=\"system.net.iwebrequestcreate\" data-linktype=\"relative-path\">IWebRequestCreate</a>. This allows an application to determine whether the browser hosting Silverlight, the Silverlight client, or some custom object handles HTTP requests and responses for the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instance. The <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_RegisterPrefix_\" data-linktype=\"relative-path\">RegisterPrefix</a> method allows an application to configure which derived <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> type will be instantiated when making a request to a specific URI. <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> creators are typically registered to handle a specific protocol, such HTTP or HTTPS, but can be registered to handle a request to a specific server or path on a server. This is useful when more than one derived <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> type can process requests for the same protocol. The Microsoft Silverlight 3 and later runtime supports multiple HTTP handlers each having different capabilities. For example, a web service that uses Representational State Transfer (REST) might require the &lt;xref:System.Net.Browser.WebRequestCreator.ClientHttp%2A?displayProperty=fullName&gt; handler while a SOAP web service might be able to use the default <a href=\"https://msdn.microsoft.com/subscriptions/index/system.net.browser.webrequestcreator.browserhttp(v=vs.95).aspx\" data-linktype=\"external\">System.Net.Browser.WebRequestCreator.BrowserHttp</a> handler.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_Credentials\">\r\n    \r\n            <a id=\"System_Net_WebRequest_Credentials_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Credentials</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a descendant class, gets or sets the network credentials used for authenticating the request with the Internet resource.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Net.ICredentials Credentials { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.icredentials\" data-linktype=\"relative-path\">ICredentials</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.net.icredentials\" data-linktype=\"relative-path\">ICredentials</a> containing the authentication credentials associated with the request. The default is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Credentials property contains the authentication credentials required to access the Internet resource.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class is an <code>abstract</code> class. The actual behavior of <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instances at run time is determined by the descendant class returned by the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method. For more information about default values and exceptions, see the documentation for the descendant classes, such as <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> and <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example sets the Credentials property using the default credentials of the current user. When the request is made, credentials stored in this property are used to validate the client. This is identical to setting the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_UseDefaultCredentials_\" data-linktype=\"relative-path\">UseDefaultCredentials</a> property to <code>true</code>.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclWebRequestSimple#2\">   // Create a request for the URL.   \n   WebRequest^ request = WebRequest::Create( &quot;http://www.contoso.com/default.html&quot; );\n   \n   // If required by the server, set the credentials.\n   request-&gt;Credentials = CredentialCache::DefaultCredentials;\n   \n   // Get the response.\n   HttpWebResponse^ response = dynamic_cast&lt;HttpWebResponse^&gt;(request-&gt;GetResponse());\n   \n</code></pre><pre><code class=\"lang-cs\" name=\"NclWebRequestSimple#2\">            // Create a request for the URL. \t\t\n            WebRequest request = WebRequest.Create (&quot;http://www.contoso.com/default.html&quot;);\n            // If required by the server, set the credentials.\n            request.Credentials = CredentialCache.DefaultCredentials;\n            // Get the response.\n            HttpWebResponse response = (HttpWebResponse)request.GetResponse ();\n</code></pre><pre><code class=\"lang-vb\" name=\"NclWebRequestSimple#2\">            &#39; Create a request for the URL. \t\t\n            Dim request As WebRequest = WebRequest.Create(&quot;http://www.contoso.com/default.html&quot;)\n            &#39; If required by the server, set the credentials.\n            request.Credentials = CredentialCache.DefaultCredentials\n            &#39; Get the response.\n            Dim response As HttpWebResponse = CType(request.GetResponse(), HttpWebResponse)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_DefaultCachePolicy\">\r\n    \r\n            <a id=\"System_Net_WebRequest_DefaultCachePolicy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultCachePolicy</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the default cache policy for this request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.cache.requestcachepolicy\" data-linktype=\"relative-path\">RequestCachePolicy</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.cache.httprequestcachepolicy\" data-linktype=\"relative-path\">HttpRequestCachePolicy</a> that specifies the cache policy in effect for this request when no other policy is applicable.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This policy is used for this request if the following conditions exist:  </p>\n<ul>\n<li><p>There is no <a class=\"xref\" href=\"system.net.httpwebrequest#System_Net_HttpWebRequest_DefaultCachePolicy_\" data-linktype=\"relative-path\">DefaultCachePolicy</a> property specified for this request.  </p>\n</li>\n<li><p>The machine and application configuration files do not specify a cache policy that is applicable to the Uniform Resource Identifier (URI) used to create this request.  </p>\n<p>The cache policy determines whether the requested resource can be taken from a cache instead of sending the request to the resource host computer.  </p>\n<p>A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream. So another request for the same resource could use a cached copy, depending on the cache policy level for this request.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates setting the default cache policy for Web requests.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLSimpleCache#15\">   static WebResponse^ GetResponseFromServer2( Uri^ uri )\n   {\n      RequestCachePolicy^ policy = gcnew RequestCachePolicy( RequestCacheLevel::NoCacheNoStore );\n      WebRequest^ request = WebRequest::Create( uri );\n      WebRequest::DefaultCachePolicy = policy;\n      WebResponse^ response = request-&gt;GetResponse();\n      Console::WriteLine( L&quot;Policy is {0}.&quot;, policy );\n      Console::WriteLine( L&quot;Is the response from the cache? {0}&quot;, response-&gt;IsFromCache );\n      return response;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLSimpleCache#15\">                public static WebResponse GetResponseFromServer2(Uri uri)\n        {\n             RequestCachePolicy policy = \n                new  RequestCachePolicy( RequestCacheLevel.NoCacheNoStore);\n            WebRequest request = WebRequest.Create(uri);\n            WebRequest.DefaultCachePolicy = policy;\n            WebResponse response = request.GetResponse();\n            Console.WriteLine(&quot;Policy is {0}.&quot;, policy.ToString());\n            Console.WriteLine(&quot;Is the response from the cache? {0}&quot;, response.IsFromCache);  \n            return response;\n        } \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_DefaultWebProxy\">\r\n    \r\n            <a id=\"System_Net_WebRequest_DefaultWebProxy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultWebProxy</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the global HTTP proxy.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Net.IWebProxy DefaultWebProxy { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.iwebproxy\" data-linktype=\"relative-path\">IWebProxy</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.net.iwebproxy\" data-linktype=\"relative-path\">IWebProxy</a> used by every call to instances of <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The DefaultWebProxy property gets or sets the global proxy. The DefaultWebProxy property determines the default proxy that all <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instances use if the request supports proxies and no proxy is set explicitly using the <a class=\"xref\" href=\"system.net.httpwebrequest#System_Net_HttpWebRequest_Proxy_\" data-linktype=\"relative-path\">Proxy</a> property. Proxies are currently supported by <a class=\"xref\" href=\"system.net.ftpwebrequest\" data-linktype=\"relative-path\">FtpWebRequest</a> and <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a>.  </p>\n<p> The DefaultWebProxy property reads proxy settings from the app.config file. If there is no config file, the current user&#39;s Internet Explorer (IE) proxy settings are used.  </p>\n<p> If the DefaultWebProxy property is set to null, all subsequent instances of the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class created by the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> or <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_CreateDefault_\" data-linktype=\"relative-path\">CreateDefault</a> methods do not have a proxy.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_Headers\">\r\n    \r\n            <a id=\"System_Net_WebRequest_Headers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Headers</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a descendant class, gets or sets the collection of header name/value pairs associated with the request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Net.WebHeaderCollection Headers { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a> containing the header name/value pairs associated with this request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Headers property contains a <a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a> instance containing the header information to send to the Internet resource.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class is an <code>abstract</code> class. The actual behavior of <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instances at run time is determined by the descendant class returned by the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method. For more information about default values and exceptions, see the documentation for the descendant classes, such as <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> and <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the header name/value pairs associated with this request.  </p>\n<pre><code class=\"lang-cpp\" name=\"WebRequest_Headers#1\">      // Create a new request to the mentioned URL.\n      WebRequest^ myWebRequest = WebRequest::Create( &quot;http://www.contoso.com&quot; );\n      \n      // Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n      WebResponse^ myWebResponse = myWebRequest-&gt;GetResponse();\n      \n      // Release the resources of response object.\n      myWebResponse-&gt;Close();\n      Console::WriteLine( &quot;<br>The HttpHeaders are <br> {0}&quot;, myWebRequest-&gt;Headers );\n</code></pre><pre><code class=\"lang-cs\" name=\"WebRequest_Headers#1\">\n                     // Create a new request to the mentioned URL.\t\n\t\t\tWebRequest myWebRequest=WebRequest.Create(&quot;http://www.contoso.com&quot;);\t\t\n\n\t\t\t// Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n\t\t\tWebResponse myWebResponse=myWebRequest.GetResponse();\n\n\t\t\t// Release the resources of response object.\n\t\t\tmyWebResponse.Close();\n\t\t\tConsole.WriteLine(&quot;<br>The HttpHeaders are <br>{0}&quot;,myWebRequest.Headers);\t\n\t\t\t\n</code></pre><pre><code class=\"lang-vb\" name=\"WebRequest_Headers#1\">\n            &#39; Create a new request to the mentioned URL.\t\n            Dim myWebRequest As WebRequest = WebRequest.Create(&quot;http://www.contoso.com&quot;)\n            \n           &#39; Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n           \n            Dim myWebResponse As WebResponse = myWebRequest.GetResponse()\n           &#39; Release the resources of response object.\n           \n\t     myWebResponse.Close()\n\t    Console.WriteLine(ControlChars.Cr + &quot;The HttpHeaders are &quot; + ControlChars.Cr + &quot;{0}&quot;, myWebRequest.Headers)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_ImpersonationLevel\">\r\n    \r\n            <a id=\"System_Net_WebRequest_ImpersonationLevel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ImpersonationLevel</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the impersonation level for the current request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.tokenimpersonationlevel\" data-linktype=\"relative-path\">TokenImpersonationLevel</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.security.principal.tokenimpersonationlevel\" data-linktype=\"relative-path\">TokenImpersonationLevel</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The impersonation level determines how the server can use the client&#39;s credentials.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_Method\">\r\n    \r\n            <a id=\"System_Net_WebRequest_Method_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Method</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a descendant class, gets or sets the protocol method to use in this request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string Method { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The protocol method to use in this request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>If the property is not overridden in a descendant class, any attempt is made to get or set the property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When overridden in a descendant class, the Method property contains the request method to use in this request.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class is an <code>abstract</code> class. The actual behavior of <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instances at run time is determined by the descendant class returned by the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method. For more information about default values and exceptions, see the documentation for the descendant classes, such as <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> and <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example sets the Method property to POST to indicate that the request will post data to the target host.  </p>\n<pre><code class=\"lang-cpp\" name=\"WebRequest_BeginGetRequest#3\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Net;\nusing namespace System::IO;\nusing namespace System::Text;\nusing namespace System::Threading;\npublic ref class RequestState\n{\npublic:\n\n   // This class stores the request state of the request.\n   WebRequest^ request;\n   RequestState()\n   {\n      request = nullptr;\n   }\n\n};\n\nref class WebRequest_BeginGetRequeststream\n{\npublic:\n   static ManualResetEvent^ allDone = gcnew ManualResetEvent( false );\n   static void ReadCallback( IAsyncResult^ asynchronousResult )\n   {\n      RequestState^ myRequestState = dynamic_cast&lt;RequestState^&gt;(asynchronousResult-&gt;AsyncState);\n      WebRequest^ myWebRequest = myRequestState-&gt;request;\n      \n      // End of the Asynchronus request.\n      Stream^ streamResponse = myWebRequest-&gt;EndGetRequestStream( asynchronousResult );\n      \n      // Create a string that is to be posted to the uri.\n      Console::WriteLine( &quot;Please enter a string to be posted:&quot; );\n      String^ postData = Console::ReadLine();\n      \n      // Convert  the string into a Byte array.\n      array&lt;Byte&gt;^byteArray = Encoding::UTF8-&gt;GetBytes( postData );\n      \n      // Write data to the stream.\n      streamResponse-&gt;Write( byteArray, 0, postData-&gt;Length );\n      streamResponse-&gt;Close();\n      allDone-&gt;Set();\n   }\n\n};\n\nint main()\n{\n   \n   // Create a new request to the mentioned URL.\n   WebRequest^ myWebRequest = WebRequest::Create( &quot;http://www.contoso.com&quot; );\n   \n   // Create an instance of the RequestState and assign &#39;myWebRequest&#39; to its request field.\n   RequestState^ myRequestState = gcnew RequestState;\n   myRequestState-&gt;request = myWebRequest;\n   myWebRequest-&gt;ContentType = &quot;application/x-www-form-urlencoded&quot;;\n   \n   // Set the &#39;Method&#39; prperty  to &#39;POST&#39; to post data to a Uri.\n   myRequestState-&gt;request-&gt;Method = &quot;POST&quot;;\n   \n   // Start the Asynchronous &#39;BeginGetRequestStream&#39; method call.\n   IAsyncResult^ r = dynamic_cast&lt;IAsyncResult^&gt;(myWebRequest-&gt;BeginGetRequestStream( gcnew AsyncCallback( WebRequest_BeginGetRequeststream::ReadCallback ), myRequestState ));\n   WebRequest_BeginGetRequeststream::allDone-&gt;WaitOne();\n   WebResponse^ myWebResponse = myWebRequest-&gt;GetResponse();\n   Console::WriteLine( &quot;The String* entered has been posted.&quot; );\n   Console::WriteLine( &quot;Please wait for the response...&quot; );\n   Stream^ streamResponse = myWebResponse-&gt;GetResponseStream();\n   StreamReader^ streamRead = gcnew StreamReader( streamResponse );\n   array&lt;Char&gt;^readBuff = gcnew array&lt;Char&gt;(256);\n   int count = streamRead-&gt;Read( readBuff, 0, 256 );\n   Console::WriteLine( &quot;The contents of the HTML page are &quot; );\n   while ( count &gt; 0 )\n   {\n      String^ outputData = gcnew String( readBuff,0,count );\n      Console::Write( outputData );\n      count = streamRead-&gt;Read( readBuff, 0, 256 );\n   }\n\n   streamResponse-&gt;Close();\n   streamRead-&gt;Close();\n   \n   // Release the HttpWebResponse Resource.\n   myWebResponse-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"WebRequest_BeginGetRequest#3\">using System;\nusing System.Net;\nusing System.IO;\nusing System.Text;\nusing System.Threading;\n\npublic class RequestState\n{\n    // This class stores the request state of the request.\n    public WebRequest request;    \n    public RequestState()\n    {\n        request = null;\n    }\n}\n\nclass WebRequest_BeginGetRequeststream\n{\n    public static ManualResetEvent allDone= new ManualResetEvent(false);\n    static void Main()\n    {\n            // Create a new request to the mentioned URL.    \n            WebRequest myWebRequest= WebRequest.Create(&quot;http://www.contoso.com&quot;);\n\n            // Create an instance of the RequestState and assign \n            // &#39;myWebRequest&#39; to it&#39;s request field.    \n            RequestState myRequestState = new RequestState();\n            myRequestState.request = myWebRequest;            \n            myWebRequest.ContentType=&quot;application/x-www-form-urlencoded&quot;;\n\n            // Set the &#39;Method&#39; property  to &#39;POST&#39; to post data to a Uri.\n            myRequestState.request.Method=&quot;POST&quot;;\n            // Start the Asynchronous &#39;BeginGetRequestStream&#39; method call.    \n            IAsyncResult r=(IAsyncResult) myWebRequest.BeginGetRequestStream(\n                new AsyncCallback(ReadCallback),myRequestState);\n            // Pause the current thread until the async operation completes.\n            Console.WriteLine(&quot;main thread waiting...&quot;);\n            allDone.WaitOne();   \n            // Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n            WebResponse myWebResponse = myWebRequest.GetResponse();\n            Console.WriteLine(&quot;The string has been posted.&quot;);    \n            Console.WriteLine(&quot;Please wait for the response...&quot;);\n\n            Stream streamResponse = myWebResponse.GetResponseStream();\n            StreamReader streamRead = new StreamReader( streamResponse );\n            Char[] readBuff = new Char[256];\n            int count = streamRead.Read( readBuff, 0, 256 );\n            Console.WriteLine(&quot;<br>The contents of the HTML page are &quot;);    \n\n            while (count &gt; 0) \n            {\n                String outputData = new String(readBuff, 0, count);\n                Console.Write(outputData);\n                count = streamRead.Read(readBuff, 0, 256);\n            }\n\n            // Close the Stream Object.\n            streamResponse.Close();\n            streamRead.Close();\n \n\n            // Release the HttpWebResponse Resource.\n            myWebResponse.Close();            \n    }\n    private static void ReadCallback(IAsyncResult asynchronousResult)\n    {\n            RequestState myRequestState =(RequestState) asynchronousResult.AsyncState;\n            WebRequest  myWebRequest = myRequestState.request;\n\n            // End the Asynchronus request.\n            Stream streamResponse = myWebRequest.EndGetRequestStream(asynchronousResult);\n\n            // Create a string that is to be posted to the uri.\n            Console.WriteLine(&quot;Please enter a string to be posted:&quot;);\n            string postData = Console.ReadLine();\n            // Convert the string into a byte array.\n            byte[] byteArray = Encoding.UTF8.GetBytes(postData);\n\n            // Write the data to the stream.\n            streamResponse.Write(byteArray,0,postData.Length);\n            streamResponse.Close();\n            allDone.Set();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WebRequest_BeginGetRequest#3\">Imports System\nImports System.Net\nImports System.IO\nImports System.Text\nImports System.Threading\nImports Microsoft.VisualBasic\n\nPublic Class RequestState\n    &#39; This class stores the request state of the request.\n    Public request As WebRequest\n    \n    Public Sub New()\n        request = Nothing\n    End Sub &#39; New\nEnd Class &#39; RequestState\n\n\nClass WebRequest_BeginGetRequeststream\n    Public Shared allDone As New ManualResetEvent(False)\n    \n    Shared Sub Main()\n          &#39; Create a new request.\n            Dim myWebRequest As WebRequest = WebRequest.Create(&quot;http://www.contoso.com/codesnippets/next.asp&quot;)\n &#39; Create an instance of the RequestState and assign \n            &#39; myWebRequest&#39; to it&#39;s request field.\n            Dim myRequestState As New RequestState()\n            myRequestState.request = myWebRequest\n            myWebRequest.ContentType = &quot;application/x-www-form-urlencoded&quot;\n\n            &#39; Set the &#39;Method&#39; property  to &#39;POST&#39; to post data to a Uri.\n            myRequestState.request.Method = &quot;POST&quot;\n            &#39; Start the asynchronous &#39;BeginGetRequestStream&#39; method call.\n            Dim r As IAsyncResult = CType(myWebRequest.BeginGetRequestStream(AddressOf ReadCallback, myRequestState), IAsyncResult)\n            &#39; Pause the current thread until the async operation completes.\n            allDone.WaitOne()\n            &#39; Send the Post and get the response.\n            Dim myWebResponse As WebResponse = myWebRequest.GetResponse()\n            Console.WriteLine(ControlChars.Cr + &quot;The string has been posted.&quot;)\n            Console.WriteLine(&quot;Please wait for the response....&quot;)\n            Dim streamResponse As Stream = myWebResponse.GetResponseStream()\n            Dim streamRead As New StreamReader(streamResponse)\n            Dim readBuff(256) As [Char]\n            Dim count As Integer = streamRead.Read(readBuff, 0, 256)\n            Console.WriteLine(ControlChars.Cr + &quot;The contents of the HTML page are &quot;)\n            While count &gt; 0\n                Dim outputData As New [String](readBuff, 0, count)\n                Console.WriteLine(outputData)\n                count = streamRead.Read(readBuff, 0, 256)\n            End While\n\n           &#39; Close the Stream Object.\n            streamResponse.Close()\n            streamRead.Close()\n            &#39; Release the HttpWebResponse Resource.\n             myWebResponse.Close()\n    End Sub &#39; Main\n     \n    Private Shared Sub ReadCallback(asynchronousResult As IAsyncResult)\n            Dim myRequestState As RequestState = CType(asynchronousResult.AsyncState, RequestState)\n            Dim myWebRequest As WebRequest = myRequestState.request\n            &#39; End the request.\n            Dim streamResponse As Stream = myWebRequest.EndGetRequestStream(asynchronousResult)\n            &#39; Create a string that is to be posted to the uri.\n            Console.WriteLine(ControlChars.Cr + &quot;Please enter a string to be posted:&quot;)\n            Dim postData As String = Console.ReadLine()\n            Dim encoder As New ASCIIEncoding()\n            &#39; Convert  the string into a byte array.\n            Dim byteArray As Byte() = Encoding.UTF8.GetBytes(postData)\n            &#39; Write the data to the stream.\n            streamResponse.Write(byteArray, 0, postData.Length)\n            streamResponse.Close()\n            &#39; Allow the main thread to resume.\n            allDone.Set()\n    End Sub &#39; ReadCallback \nEnd Class &#39; WebRequest_BeginGetRequeststream \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_PreAuthenticate\">\r\n    \r\n            <a id=\"System_Net_WebRequest_PreAuthenticate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PreAuthenticate</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a descendant class, indicates whether to pre-authenticate the request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool PreAuthenticate { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to pre-authenticate; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>With the exception of the first request, the PreAuthenticate property indicates whether to send authentication information with subsequent requests without waiting to be challenged by the server. When PreAuthenticate is <code>false</code>, the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> waits for an authentication challenge before sending authentication information.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class is an <code>abstract</code> class. The actual behavior of <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instances at run time is determined by the descendant class returned by the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method. For more information about default values and exceptions, see the documentation for the descendant classes, such as <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> and <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example sets the PreAuthenticate property to <code>true</code> so that the <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> stored in the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Credentials_\" data-linktype=\"relative-path\">Credentials</a> property will be sent to along with the resource request.  </p>\n<pre><code class=\"lang-cpp\" name=\"WebRequest_PreAuthenticate#1\">      // Create a new webrequest to the mentioned URL.\n      WebRequest^ myWebRequest = WebRequest::Create( url );\n      \n      // Set &#39;Preauthenticate&#39; property to true. Credentials will be sent with the request.\n      myWebRequest-&gt;PreAuthenticate = true;\n\n      Console::WriteLine( &quot;<br>Please enter your credentials for the requested Url&quot; );\n      Console::WriteLine( &quot;UserName&quot; );\n      String^ UserName = Console::ReadLine();\n      Console::WriteLine( &quot;Password&quot; );\n      String^ Password = Console::ReadLine();\n      \n      // Create a New &#39;NetworkCredential&#39; object.\n      NetworkCredential^ networkCredential = gcnew NetworkCredential( UserName,Password );\n      \n      // Associate the &#39;NetworkCredential&#39; object with the &#39;WebRequest&#39; object.\n      myWebRequest-&gt;Credentials = networkCredential;\n      \n      // Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n      WebResponse^ myWebResponse = myWebRequest-&gt;GetResponse();\n</code></pre><pre><code class=\"lang-cs\" name=\"WebRequest_PreAuthenticate#1\">\n                     // Create a new webrequest to the mentioned URL.\n\t\t\tWebRequest myWebRequest=WebRequest.Create(url);\n\n\t\t\t// Set &#39;Preauthenticate&#39;  property to true.  Credentials will be sent with the request.\n\t\t\tmyWebRequest.PreAuthenticate=true;\n\n\t\t\tConsole.WriteLine(&quot;<br>Please enter your credentials for the requested Url&quot;);\n                     Console.WriteLine(&quot;UserName&quot;);\n\t\t\tstring UserName=Console.ReadLine();\n\t\t\tConsole.WriteLine(&quot;Password&quot;);\n\t\t\tstring Password=Console.ReadLine();\n\n\t\t\t// Create a New &#39;NetworkCredential&#39; object.\n\t\t\tNetworkCredential networkCredential=new NetworkCredential(UserName,Password);\n\n\t\t\t// Associate the &#39;NetworkCredential&#39; object with the &#39;WebRequest&#39; object.\n\t\t\tmyWebRequest.Credentials=networkCredential;\n\n\t\t\t// Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n\t\t\tWebResponse myWebResponse=myWebRequest.GetResponse();\n\t\t\t\n</code></pre><pre><code class=\"lang-vb\" name=\"WebRequest_PreAuthenticate#1\">\n            &#39; Create a new webrequest to the mentioned URL.\n            Dim myWebRequest As WebRequest = WebRequest.Create(url)\n\n            &#39; Set &#39;Preauthenticate&#39;  property to true.\n            myWebRequest.PreAuthenticate = True\n            Console.WriteLine(ControlChars.Cr + &quot;Please enter your credentials for the requested Url&quot;)\n            Console.WriteLine(&quot;UserName&quot;)\n            Dim UserName As String = Console.ReadLine()\n            Console.WriteLine(&quot;Password&quot;)\n            Dim Password As String = Console.ReadLine()\n\n            &#39; Create a New &#39;NetworkCredential&#39; object.\n            Dim networkCredential As New NetworkCredential(UserName, Password)\n\n            &#39; Associate the &#39;NetworkCredential&#39; object with the &#39;WebRequest&#39; object.\n            myWebRequest.Credentials = networkCredential\n\n            &#39; Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n            Dim myWebResponse As WebResponse = myWebRequest.GetResponse()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_Proxy\">\r\n    \r\n            <a id=\"System_Net_WebRequest_Proxy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Proxy</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a descendant class, gets or sets the network proxy to use to access this Internet resource.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Net.IWebProxy Proxy { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.iwebproxy\" data-linktype=\"relative-path\">IWebProxy</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.net.iwebproxy\" data-linktype=\"relative-path\">IWebProxy</a> to use to access the Internet resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Proxy property identifies the network proxy that the request uses to access the Internet resource. The request is made through the proxy server rather than directly to the Internet resource.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class is an <code>abstract</code> class. The actual behavior of <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instances at run time is determined by the descendant class returned by the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method. For more information about default values and exceptions, see the documentation for the descendant classes, such as <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> and <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the current network proxy address and allows the user to assign a new network proxy address and port number.  </p>\n<pre><code class=\"lang-cs\" name=\"WebRequest_Proxy#1\">\t\t\t// Create a new request to the mentioned URL.\t\t\t\t\n\t\t\tWebRequest myWebRequest=WebRequest.Create(&quot;http://www.contoso.com&quot;);\n\n\t\t\tWebProxy myProxy=new WebProxy();\n\t\t\t// Obtain the Proxy Prperty of the  Default browser.  \n\t\t\tmyProxy=(WebProxy)myWebRequest.Proxy;\n\n\t\t\t// Print myProxy address to the console.\n\t\t\tConsole.WriteLine(&quot;<br>The actual default Proxy settings are {0}&quot;,myProxy.Address);\n         try\n\t\t\t{\n\t\t\t\tConsole.WriteLine(&quot;<br>Please enter the new Proxy Address to be set &quot;);\n\t\t\t\tConsole.WriteLine(&quot;The format of the address should be http://proxyUriAddress:portaddress&quot;);\n\t\t\t\tConsole.WriteLine(&quot;Example:http://proxyadress.com:8080&quot;);\n\t\t\t\tstring proxyAddress;\n\t\t\t\tproxyAddress =Console.ReadLine();\n\n\t\t\t\tif(proxyAddress.Length==0)\n\t\t\t\t{\n\t\t\t\t\tmyWebRequest.Proxy=myProxy;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tConsole.WriteLine(&quot;<br>Please enter the Credentials&quot;);\n\t\t\t\t\tConsole.WriteLine(&quot;Username:&quot;);\n\t\t\t\t\tstring username;\n\t\t\t\t\tusername =Console.ReadLine();\n\t\t\t\t\tConsole.WriteLine(&quot;<br>Password:&quot;);\n\t\t\t\t\tstring password;\n\t\t\t\t\tpassword =Console.ReadLine();\n\n\t\t\t\t\t// Create a new Uri object.\n\t\t\t\t\tUri newUri=new Uri(proxyAddress);\n\n\t\t\t\t\t// Associate the new Uri object to the myProxy object.\n\t\t\t\t\tmyProxy.Address=newUri;\n\n\t\t\t\t\t// Create a NetworkCredential object and is assign to the Credentials property of the Proxy object.\n\t\t\t\t\tmyProxy.Credentials=new NetworkCredential(username,password);\n\t\t\t\t\tmyWebRequest.Proxy=myProxy;\n\t\t\t\t}\n\t\t\t\tConsole.WriteLine(&quot;<br>The Address of the  new Proxy settings are {0}&quot;,myProxy.Address);\n\t\t\t\tWebResponse myWebResponse=myWebRequest.GetResponse();\n\n\t\t\t\t// Print the  HTML contents of the page to the console.\n\t\t\t\tStream streamResponse=myWebResponse.GetResponseStream();\n\t\t\t\tStreamReader streamRead = new StreamReader( streamResponse );\n\t\t\t\tChar[] readBuff = new Char[256];\n\t\t\t\tint count = streamRead.Read( readBuff, 0, 256 );\n\t\t\t\tConsole.WriteLine(&quot;<br>The contents of the Html pages are :&quot;);\t\n\t\t\t\twhile (count &gt; 0) \n\t\t\t\t{\n\t\t\t\t\tString outputData = new String(readBuff, 0, count);\n\t\t\t\t\tConsole.Write(outputData);\n\t\t\t\t\tcount = streamRead.Read(readBuff, 0, 256);\n\t\t\t\t}\n\n\t\t\t\t// Close the Stream object.\n\t\t\t\tstreamResponse.Close();\n\t\t\t\tstreamRead.Close();\n\n\t\t\t\t// Release the HttpWebResponse Resource.\n\t\t\t\tmyWebResponse.Close();\n\t\t\t\tConsole.WriteLine(&quot;<br>Press any key to continue.........&quot;);\n\t\t\t\tConsole.Read();\t\t\t\t\n\t\t\t}\n\t\t\tcatch(UriFormatException e)\n\t\t\t{\n\t\t\t\tConsole.WriteLine(&quot;<br>UriFormatException is thrown.Message is {0}&quot;,e.Message);\n\t\t\t\tConsole.WriteLine(&quot;<br>The format of the myProxy address you entered is invalid&quot;);\n\t\t\t\tConsole.WriteLine(&quot;<br>Press any key to continue.........&quot;);\n\t\t\t\tConsole.Read();\n\t\t\t}\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebRequest_Proxy#1\">      // Create a new request to the mentioned URL.\n      WebRequest^ myWebRequest = WebRequest::Create( &quot;http://www.contoso.com&quot; );\n\n      WebProxy^ myProxy = gcnew WebProxy;\n      // Obtain the Proxy Prperty of the  Default browser.\n      myProxy = (WebProxy^)(myWebRequest-&gt;Proxy);\n      \n      // Print myProxy address to the console.\n      Console::WriteLine( &quot;<br>The actual default Proxy settings are {0}&quot;, myProxy-&gt;Address );\n      try\n      {\n         Console::WriteLine( &quot;<br>Please enter the new Proxy Address to be set &quot; );\n         Console::WriteLine( &quot;The format of the address should be http://proxyUriAddress:portaddress&quot; );\n         Console::WriteLine( &quot;Example:http://proxyadress.com:8080&quot; );\n         String^ proxyAddress;\n         proxyAddress = Console::ReadLine();\n\n         if ( proxyAddress-&gt;Length == 0 )\n         {\n            myWebRequest-&gt;Proxy = myProxy;\n         }\n         else\n         {\n            Console::WriteLine( &quot;<br>Please enter the Credentials&quot; );\n            Console::WriteLine( &quot;Username:&quot; );\n            String^ username;\n            username = Console::ReadLine();\n            Console::WriteLine( &quot;<br>Password:&quot; );\n            String^ password;\n            password = Console::ReadLine();\n            \n            // Create a new Uri object.\n            Uri^ newUri = gcnew Uri( proxyAddress );\n            \n            // Associate the new Uri object to the myProxy object.\n            myProxy-&gt;Address = newUri;\n            \n            // Create a NetworkCredential object and is assign to the Credentials\n            // property of the Proxy object.\n            myProxy-&gt;Credentials = gcnew NetworkCredential( username,password );\n            myWebRequest-&gt;Proxy = myProxy;\n         }\n         Console::WriteLine( &quot;<br>The Address of the  new Proxy settings are {0}&quot;, myProxy-&gt;Address );\n         WebResponse^ myWebResponse = myWebRequest-&gt;GetResponse();\n         \n         // Print the  HTML contents of the page to the console.\n         Stream^ streamResponse = myWebResponse-&gt;GetResponseStream();\n         StreamReader^ streamRead = gcnew StreamReader( streamResponse );\n         array&lt;Char&gt;^ readBuff = gcnew array&lt;Char&gt;(256);\n         int count = streamRead-&gt;Read( readBuff, 0, 256 );\n         Console::WriteLine( &quot;<br>The contents of the Html pages are :&quot; );\n         while ( count &gt; 0 )\n         {\n            String^ outputData = gcnew String( readBuff,0,count );\n            Console::Write( outputData );\n            count = streamRead-&gt;Read( readBuff, 0, 256 );\n         }\n         \n         // Close the Stream object.\n         streamResponse-&gt;Close();\n         streamRead-&gt;Close();\n         \n         // Release the HttpWebResponse Resource.\n         myWebResponse-&gt;Close();\n         Console::WriteLine( &quot;<br>Press any key to continue.........&quot; );\n         Console::Read();\n      }\n      catch ( UriFormatException^ e ) \n      {\n         Console::WriteLine( &quot;<br>UriFormatException is thrown-&gt;Message is {0}&quot;, e-&gt;Message );\n         Console::WriteLine( &quot;<br>The format of the myProxy address you entered is invalid&quot; );\n         Console::WriteLine( &quot;<br>Press any key to continue.........&quot; );\n         Console::Read();\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"WebRequest_Proxy#1\">\n            &#39; Create a new request to the mentioned URL.\t\t\t\t\n            Dim myWebRequest As WebRequest = WebRequest.Create(&quot;http://www.contoso.com&quot;)\n            Dim myProxy As New WebProxy()\n\n            &#39; Obtain the Proxy Prperty of the  Default browser. \n             myProxy = CType(myWebRequest.Proxy, WebProxy)\n\n            &#39; Print myProxy address to the console.\n            Console.WriteLine(ControlChars.Cr + &quot;The actual default Proxy settings are {0}&quot;, myProxy.Address)\n\n            Try\n                Console.WriteLine(ControlChars.Cr + &quot;Please enter the new Proxy Address to be set &quot;)\n                Console.WriteLine(&quot;The format of the address should be http://proxyUriAddress:portaddress&quot;)\n                Console.WriteLine(&quot;Example:http://moon.proxy.com:8080&quot;)\n                Dim proxyAddress As String\n                proxyAddress = Console.ReadLine()\n\n                If proxyAddress.Length = 0 Then\n                    myWebRequest.Proxy = myProxy\n                Else\n                    Console.WriteLine(ControlChars.Cr + &quot;Please enter the Credentials&quot;)\n                    Console.WriteLine(&quot;Username:&quot;)\n                    Dim username As String\n                    username = Console.ReadLine()\n                    Console.WriteLine(ControlChars.Cr + &quot;Password:&quot;)\n                    Dim password As String\n                    password = Console.ReadLine()\n\n                   &#39; Create a new Uri object.\n                    Dim newUri As New Uri(proxyAddress)\n\n                    &#39; Associate the new Uri object to the myProxy object.\n                    myProxy.Address = newUri\n\n                    &#39; Create a NetworkCredential object and is assign to the Credentials property of the Proxy object.\n                    myProxy.Credentials = New NetworkCredential(username, password)\n                    myWebRequest.Proxy = myProxy\n                    \n                End If\n                Console.WriteLine(ControlChars.Cr + &quot;The Address of the  new Proxy settings are {0}&quot;, myProxy.Address)\n                Dim myWebResponse As WebResponse = myWebRequest.GetResponse()\n\n                &#39; Print the  HTML contents of the page to the console.\n                Dim streamResponse As Stream = myWebResponse.GetResponseStream()\n\n                Dim streamRead As New StreamReader(streamResponse)\n                Dim readBuff(256) As [Char]\n                Dim count As Integer = streamRead.Read(readBuff, 0, 256)\n                Console.WriteLine(ControlChars.Cr + &quot;The contents of the Html pages are :&quot;)\n\n                While count &gt; 0\n                    Dim outputData As New [String](readBuff, 0, count)\n                    Console.Write(outputData)\n                    count = streamRead.Read(readBuff, 0, 256)\n\n                End While\n\n\t       &#39; Close the Stream object.\n                streamResponse.Close()\n\t\t  streamRead.Close()\n\n\t      &#39; Release the HttpWebResponse Resource.\n\t        myWebResponse.Close()\n                Console.WriteLine(ControlChars.Cr + &quot;Press any key to continue.........&quot;)\n                Console.Read()\n            Catch e As UriFormatException\n                Console.WriteLine(ControlChars.Cr + &quot;{0}&quot;, e.Message)\n                Console.WriteLine(ControlChars.Cr + &quot;The format of the myProxy address you entered is invalid&quot;)\n             End Try\n             \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_RequestUri\">\r\n    \r\n            <a id=\"System_Net_WebRequest_RequestUri_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RequestUri</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a descendant class, gets the URI of the Internet resource associated with the request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual Uri RequestUri { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> representing the resource associated with the request</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When overridden in a descendant class, the RequestUri property contains the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance that <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method uses to create the request.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class is an <code>abstract</code> class. The actual behavior of <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instances at run time is determined by the descendant class returned by the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method. For more information about default values and exceptions, see the documentation for the descendant classes, such as <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> and <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example checks the RequestUri property to determine the site originally requested.  </p>\n<pre><code class=\"lang-cs\" name=\"WebRequest_RequestUri1#1\">\t\t\t// Create a new WebRequest Object to the mentioned URL.\n\t\t\tWebRequest myWebRequest=WebRequest.Create(&quot;http://www.contoso.com&quot;);\n\t\t\tConsole.WriteLine(&quot;<br>The Uri that was requested is {0}&quot;,myWebRequest.RequestUri);\n\t\t\t// Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n\t\t\tWebResponse myWebResponse=myWebRequest.GetResponse();\n\t\t\t// Get the stream containing content returned by the server.\n\t\t\tStream streamResponse=myWebResponse.GetResponseStream();\n\t\t\tConsole.WriteLine(&quot;<br>The Uri that responded to the WebRequest is &#39;{0}&#39;&quot;,myWebResponse.ResponseUri);\n      StreamReader reader = new StreamReader (streamResponse);\n\t\t\t// Read the content.\n      string responseFromServer = reader.ReadToEnd ();\n      // Display the content.\n      Console.WriteLine(&quot;<br>The HTML Contents received:&quot;);\n      Console.WriteLine (responseFromServer);\n      // Cleanup the streams and the response.\n      reader.Close ();\n      streamResponse.Close ();\n      myWebResponse.Close ();\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebRequest_RequestUri1#1\">      // Create a new WebRequest object to the mentioned URL.\n      WebRequest^ myWebRequest = WebRequest::Create( &quot;http://www.contoso.com&quot; );\n      Console::WriteLine( &quot;<br>The Uri requested is {0}&quot;, myWebRequest-&gt;RequestUri);\n      // Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n      WebResponse^ myWebResponse = myWebRequest-&gt;GetResponse();\n\t\t\t// Get the stream containing content returned by the server.\n      Stream^ streamResponse = myWebResponse-&gt;GetResponseStream();\n\t\t\tConsole::WriteLine(&quot;<br>The Uri that responded to the request is &#39;{0}&#39;&quot;,myWebResponse-&gt;ResponseUri);\n      StreamReader^ reader = gcnew StreamReader(streamResponse);\n\t\t\t// Read the content.\n      String^ responseFromServer = reader-&gt;ReadToEnd();\n      // Display the content.\n      Console::WriteLine(&quot;<br>The HTML Contents received:&quot;);\n      Console::WriteLine (responseFromServer);\n      // Cleanup the streams and the response.\n      reader-&gt;Close();\n      streamResponse-&gt;Close();\n      myWebResponse-&gt;Close();\n</code></pre><pre><code class=\"lang-vb\" name=\"WebRequest_RequestUri1#1\">            &#39; Create a new WebRequest Object to the mentioned URL.\n            Dim myWebRequest As WebRequest = WebRequest.Create(&quot;http://www.contoso.com&quot;)\n            Console.WriteLine(ControlChars.Cr + ControlChars.Lf +&quot;The Uri that was requested is {0}&quot;, myWebRequest.RequestUri)\n            &#39; Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n            Dim myWebResponse As WebResponse = myWebRequest.GetResponse()\n\t\t\t      &#39; Get the stream containing content returned by the server.\n            Dim streamResponse As Stream = myWebResponse.GetResponseStream()\n            Console.WriteLine(ControlChars.Cr + ControlChars.Lf + &quot;The Uri that responded to the request is {0}&quot;, myWebResponse.ResponseUri)\n            &#39; Print the HTML contents of the page to the console. \n            Dim reader As New StreamReader(streamResponse)\n\t\t\t      &#39; Read the content.\n\t\t\t      Dim responseFRomServer As String = reader.ReadToEnd()\n            &#39; Display the content.\n            Console.WriteLine(ControlChars.Cr + ControlChars.Lf +&quot;The HTML Contents received:&quot;)\n            Console.WriteLine (responseFromServer)\n            &#39; Cleanup the streams and the response.\n            reader.Close ()\n            streamResponse.Close ()\n            myWebResponse.Close ()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_Timeout\">\r\n    \r\n            <a id=\"System_Net_WebRequest_Timeout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Timeout</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the length of time, in milliseconds, before the request times out.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int Timeout { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The length of time, in milliseconds, until the request times out, or the value <a class=\"xref\" href=\"system.threading.timeout#System_Threading_Timeout_Infinite\" data-linktype=\"relative-path\">Infinite</a> to indicate that the request does not time out. The default value is defined by the descendant class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Timeout property indicates the length of time, in milliseconds, until the request times out and throws a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a>. The Timeout property affects only synchronous requests made with the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_GetResponse_\" data-linktype=\"relative-path\">GetResponse</a> method. To time out asynchronous requests, use the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Abort_\" data-linktype=\"relative-path\">Abort</a> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class is an <code>abstract</code> class. The actual behavior of <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instances at run time is determined by the descendant class returned by the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method. For more information about default values and exceptions, see the documentation for the descendant classes, such as <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> and <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example sets the Timeout property to 10000 milliseconds. If the timeout period expires before the resource can be returned, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown.  </p>\n<pre><code class=\"lang-cs\" name=\"WebRequest_Timeout#1\">\n                     // Create a new WebRequest Object to the mentioned URL.\n\t\t\tWebRequest myWebRequest=WebRequest.Create(&quot;http://www.contoso.com&quot;);\n\t\t\tConsole.WriteLine(&quot;<br>The Timeout time of the request before setting is : {0} milliseconds&quot;,myWebRequest.Timeout);\n\n\t\t\t// Set the &#39;Timeout&#39; property in Milliseconds.\n\t\t\tmyWebRequest.Timeout=10000;\n\n\t\t\t// This request will throw a WebException if it reaches the timeout limit before it is able to fetch the resource.\n                     WebResponse myWebResponse=myWebRequest.GetResponse();\n\t\t\t\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebRequest_Timeout#1\">      // Create a new WebRequest Object to the mentioned URL.\n      WebRequest^ myWebRequest = WebRequest::Create( &quot;http://www.contoso.com&quot; );\n      Console::WriteLine( &quot;<br>The Timeout time of the request before setting is : {0} milliseconds&quot;, myWebRequest-&gt;Timeout );\n      \n      // Set the &#39;Timeout&#39; property in Milliseconds.\n      myWebRequest-&gt;Timeout = 10000;\n      \n      // This request will throw a WebException if it reaches the timeout limit\n      // before it is able to fetch the resource.\n      WebResponse^ myWebResponse = myWebRequest-&gt;GetResponse();\n</code></pre><pre><code class=\"lang-vb\" name=\"WebRequest_Timeout#1\">\n            &#39; Create a new WebRequest Object to the mentioned URL.\n            Dim myWebRequest As WebRequest = WebRequest.Create(&quot;http://www.contoso.com&quot;)\n            Console.WriteLine(ControlChars.Cr + &quot;The Timeout time of the request before setting is : {0} milliseconds&quot;, myWebRequest.Timeout)\n\n            &#39; Set the &#39;Timeout&#39; property in Milliseconds.\n\t     myWebRequest.Timeout = 10000\n\n           &#39; Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n            Dim myWebResponse As WebResponse = myWebRequest.GetResponse()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_UseDefaultCredentials\">\r\n    \r\n            <a id=\"System_Net_WebRequest_UseDefaultCredentials_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UseDefaultCredentials</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a descendant class, gets or sets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that controls whether <span class=\"xref\">stem.Net.CredentialCache.DefaultCredentials*</span> are sent with requests.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool UseDefaultCredentials { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the default credentials are used; otherwise <code>false</code>. The default value is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>You attempted to set this property after the request was sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Any attempt is made to access the property, when the property is not overridden in a descendant class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Set this property to <code>true</code> when requests made by this <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> object should, if requested by the server, be authenticated using the credentials of the currently logged on user. For client applications, this is the desired behavior in most scenarios. For middle tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Credentials_\" data-linktype=\"relative-path\">Credentials</a> property to the credentials of the client on whose behalf the request is made.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_Abort\">\r\n    \r\n            <a id=\"System_Net_WebRequest_Abort_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Abort()</div>        \r\n          </div>\r\n    \r\n            <p>Aborts the Request</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void Abort ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Any attempt is made to access the method, when the method is not overridden in a descendant class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Abort method cancels asynchronous requests to Internet resources started with the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_BeginGetResponse_\" data-linktype=\"relative-path\">BeginGetResponse</a> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class is an <code>abstract</code> class. The actual behavior of <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instances at run time is determined by the descendant class returned by the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method. For more information about default values and exceptions, see the documentation for the descendant classes, such as <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> and <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_BeginGetRequestStream_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_Net_WebRequest_BeginGetRequestStream_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginGetRequestStream(AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a descendant class, provides an asynchronous version of the <span class=\"xref\">stem.Net.WebRequest.GetRequestStream*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing state information for this asynchronous request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that references the asynchronous request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Any attempt is made to access the method, when the method is not overridden in a descendant class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The BeginGetRequestStream method starts an asynchronous request for a stream used to send data to an Internet resource. The callback method that implements the <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate uses the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_EndGetRequestStream_\" data-linktype=\"relative-path\">EndGetRequestStream</a> method to return the request stream.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class is an <code>abstract</code> class. The actual behavior of <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instances at run time is determined by the descendant class returned by the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method. For more information about default values and exceptions, see the documentation for the descendant classes, such as <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> and <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the BeginGetRequestStream to asynchronously obtain the request stream.  </p>\n<pre><code class=\"lang-cpp\" name=\"WebRequest_BeginGetRequest#3\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Net;\nusing namespace System::IO;\nusing namespace System::Text;\nusing namespace System::Threading;\npublic ref class RequestState\n{\npublic:\n\n   // This class stores the request state of the request.\n   WebRequest^ request;\n   RequestState()\n   {\n      request = nullptr;\n   }\n\n};\n\nref class WebRequest_BeginGetRequeststream\n{\npublic:\n   static ManualResetEvent^ allDone = gcnew ManualResetEvent( false );\n   static void ReadCallback( IAsyncResult^ asynchronousResult )\n   {\n      RequestState^ myRequestState = dynamic_cast&lt;RequestState^&gt;(asynchronousResult-&gt;AsyncState);\n      WebRequest^ myWebRequest = myRequestState-&gt;request;\n      \n      // End of the Asynchronus request.\n      Stream^ streamResponse = myWebRequest-&gt;EndGetRequestStream( asynchronousResult );\n      \n      // Create a string that is to be posted to the uri.\n      Console::WriteLine( &quot;Please enter a string to be posted:&quot; );\n      String^ postData = Console::ReadLine();\n      \n      // Convert  the string into a Byte array.\n      array&lt;Byte&gt;^byteArray = Encoding::UTF8-&gt;GetBytes( postData );\n      \n      // Write data to the stream.\n      streamResponse-&gt;Write( byteArray, 0, postData-&gt;Length );\n      streamResponse-&gt;Close();\n      allDone-&gt;Set();\n   }\n\n};\n\nint main()\n{\n   \n   // Create a new request to the mentioned URL.\n   WebRequest^ myWebRequest = WebRequest::Create( &quot;http://www.contoso.com&quot; );\n   \n   // Create an instance of the RequestState and assign &#39;myWebRequest&#39; to its request field.\n   RequestState^ myRequestState = gcnew RequestState;\n   myRequestState-&gt;request = myWebRequest;\n   myWebRequest-&gt;ContentType = &quot;application/x-www-form-urlencoded&quot;;\n   \n   // Set the &#39;Method&#39; prperty  to &#39;POST&#39; to post data to a Uri.\n   myRequestState-&gt;request-&gt;Method = &quot;POST&quot;;\n   \n   // Start the Asynchronous &#39;BeginGetRequestStream&#39; method call.\n   IAsyncResult^ r = dynamic_cast&lt;IAsyncResult^&gt;(myWebRequest-&gt;BeginGetRequestStream( gcnew AsyncCallback( WebRequest_BeginGetRequeststream::ReadCallback ), myRequestState ));\n   WebRequest_BeginGetRequeststream::allDone-&gt;WaitOne();\n   WebResponse^ myWebResponse = myWebRequest-&gt;GetResponse();\n   Console::WriteLine( &quot;The String* entered has been posted.&quot; );\n   Console::WriteLine( &quot;Please wait for the response...&quot; );\n   Stream^ streamResponse = myWebResponse-&gt;GetResponseStream();\n   StreamReader^ streamRead = gcnew StreamReader( streamResponse );\n   array&lt;Char&gt;^readBuff = gcnew array&lt;Char&gt;(256);\n   int count = streamRead-&gt;Read( readBuff, 0, 256 );\n   Console::WriteLine( &quot;The contents of the HTML page are &quot; );\n   while ( count &gt; 0 )\n   {\n      String^ outputData = gcnew String( readBuff,0,count );\n      Console::Write( outputData );\n      count = streamRead-&gt;Read( readBuff, 0, 256 );\n   }\n\n   streamResponse-&gt;Close();\n   streamRead-&gt;Close();\n   \n   // Release the HttpWebResponse Resource.\n   myWebResponse-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"WebRequest_BeginGetRequest#3\">using System;\nusing System.Net;\nusing System.IO;\nusing System.Text;\nusing System.Threading;\n\npublic class RequestState\n{\n    // This class stores the request state of the request.\n    public WebRequest request;    \n    public RequestState()\n    {\n        request = null;\n    }\n}\n\nclass WebRequest_BeginGetRequeststream\n{\n    public static ManualResetEvent allDone= new ManualResetEvent(false);\n    static void Main()\n    {\n            // Create a new request to the mentioned URL.    \n            WebRequest myWebRequest= WebRequest.Create(&quot;http://www.contoso.com&quot;);\n\n            // Create an instance of the RequestState and assign \n            // &#39;myWebRequest&#39; to it&#39;s request field.    \n            RequestState myRequestState = new RequestState();\n            myRequestState.request = myWebRequest;            \n            myWebRequest.ContentType=&quot;application/x-www-form-urlencoded&quot;;\n\n            // Set the &#39;Method&#39; property  to &#39;POST&#39; to post data to a Uri.\n            myRequestState.request.Method=&quot;POST&quot;;\n            // Start the Asynchronous &#39;BeginGetRequestStream&#39; method call.    \n            IAsyncResult r=(IAsyncResult) myWebRequest.BeginGetRequestStream(\n                new AsyncCallback(ReadCallback),myRequestState);\n            // Pause the current thread until the async operation completes.\n            Console.WriteLine(&quot;main thread waiting...&quot;);\n            allDone.WaitOne();   \n            // Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n            WebResponse myWebResponse = myWebRequest.GetResponse();\n            Console.WriteLine(&quot;The string has been posted.&quot;);    \n            Console.WriteLine(&quot;Please wait for the response...&quot;);\n\n            Stream streamResponse = myWebResponse.GetResponseStream();\n            StreamReader streamRead = new StreamReader( streamResponse );\n            Char[] readBuff = new Char[256];\n            int count = streamRead.Read( readBuff, 0, 256 );\n            Console.WriteLine(&quot;<br>The contents of the HTML page are &quot;);    \n\n            while (count &gt; 0) \n            {\n                String outputData = new String(readBuff, 0, count);\n                Console.Write(outputData);\n                count = streamRead.Read(readBuff, 0, 256);\n            }\n\n            // Close the Stream Object.\n            streamResponse.Close();\n            streamRead.Close();\n \n\n            // Release the HttpWebResponse Resource.\n            myWebResponse.Close();            \n    }\n    private static void ReadCallback(IAsyncResult asynchronousResult)\n    {\n            RequestState myRequestState =(RequestState) asynchronousResult.AsyncState;\n            WebRequest  myWebRequest = myRequestState.request;\n\n            // End the Asynchronus request.\n            Stream streamResponse = myWebRequest.EndGetRequestStream(asynchronousResult);\n\n            // Create a string that is to be posted to the uri.\n            Console.WriteLine(&quot;Please enter a string to be posted:&quot;);\n            string postData = Console.ReadLine();\n            // Convert the string into a byte array.\n            byte[] byteArray = Encoding.UTF8.GetBytes(postData);\n\n            // Write the data to the stream.\n            streamResponse.Write(byteArray,0,postData.Length);\n            streamResponse.Close();\n            allDone.Set();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WebRequest_BeginGetRequest#3\">Imports System\nImports System.Net\nImports System.IO\nImports System.Text\nImports System.Threading\nImports Microsoft.VisualBasic\n\nPublic Class RequestState\n    &#39; This class stores the request state of the request.\n    Public request As WebRequest\n    \n    Public Sub New()\n        request = Nothing\n    End Sub &#39; New\nEnd Class &#39; RequestState\n\n\nClass WebRequest_BeginGetRequeststream\n    Public Shared allDone As New ManualResetEvent(False)\n    \n    Shared Sub Main()\n          &#39; Create a new request.\n            Dim myWebRequest As WebRequest = WebRequest.Create(&quot;http://www.contoso.com/codesnippets/next.asp&quot;)\n &#39; Create an instance of the RequestState and assign \n            &#39; myWebRequest&#39; to it&#39;s request field.\n            Dim myRequestState As New RequestState()\n            myRequestState.request = myWebRequest\n            myWebRequest.ContentType = &quot;application/x-www-form-urlencoded&quot;\n\n            &#39; Set the &#39;Method&#39; property  to &#39;POST&#39; to post data to a Uri.\n            myRequestState.request.Method = &quot;POST&quot;\n            &#39; Start the asynchronous &#39;BeginGetRequestStream&#39; method call.\n            Dim r As IAsyncResult = CType(myWebRequest.BeginGetRequestStream(AddressOf ReadCallback, myRequestState), IAsyncResult)\n            &#39; Pause the current thread until the async operation completes.\n            allDone.WaitOne()\n            &#39; Send the Post and get the response.\n            Dim myWebResponse As WebResponse = myWebRequest.GetResponse()\n            Console.WriteLine(ControlChars.Cr + &quot;The string has been posted.&quot;)\n            Console.WriteLine(&quot;Please wait for the response....&quot;)\n            Dim streamResponse As Stream = myWebResponse.GetResponseStream()\n            Dim streamRead As New StreamReader(streamResponse)\n            Dim readBuff(256) As [Char]\n            Dim count As Integer = streamRead.Read(readBuff, 0, 256)\n            Console.WriteLine(ControlChars.Cr + &quot;The contents of the HTML page are &quot;)\n            While count &gt; 0\n                Dim outputData As New [String](readBuff, 0, count)\n                Console.WriteLine(outputData)\n                count = streamRead.Read(readBuff, 0, 256)\n            End While\n\n           &#39; Close the Stream Object.\n            streamResponse.Close()\n            streamRead.Close()\n            &#39; Release the HttpWebResponse Resource.\n             myWebResponse.Close()\n    End Sub &#39; Main\n     \n    Private Shared Sub ReadCallback(asynchronousResult As IAsyncResult)\n            Dim myRequestState As RequestState = CType(asynchronousResult.AsyncState, RequestState)\n            Dim myWebRequest As WebRequest = myRequestState.request\n            &#39; End the request.\n            Dim streamResponse As Stream = myWebRequest.EndGetRequestStream(asynchronousResult)\n            &#39; Create a string that is to be posted to the uri.\n            Console.WriteLine(ControlChars.Cr + &quot;Please enter a string to be posted:&quot;)\n            Dim postData As String = Console.ReadLine()\n            Dim encoder As New ASCIIEncoding()\n            &#39; Convert  the string into a byte array.\n            Dim byteArray As Byte() = Encoding.UTF8.GetBytes(postData)\n            &#39; Write the data to the stream.\n            streamResponse.Write(byteArray, 0, postData.Length)\n            streamResponse.Close()\n            &#39; Allow the main thread to resume.\n            allDone.Set()\n    End Sub &#39; ReadCallback \nEnd Class &#39; WebRequest_BeginGetRequeststream \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_BeginGetResponse_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_Net_WebRequest_BeginGetResponse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginGetResponse(AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a descendant class, begins an asynchronous request for an Internet resource.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual IAsyncResult BeginGetResponse (AsyncCallback callback, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing state information for this asynchronous request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that references the asynchronous request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Any attempt is made to access the method, when the method is not overridden in a descendant class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The BeginGetResponse method starts an asynchronous request for a response. The callback method that implements the <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate uses the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_EndGetResponse_\" data-linktype=\"relative-path\">EndGetResponse</a> method to return the <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> from the Internet resource.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class is an <code>abstract</code> class. The actual behavior of <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instances at run time is determined by the descendant class returned by the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method. For more information about default values and exceptions, see the documentation for the descendant classes, such as <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> and <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a>.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> If a WebException is thrown, use the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Response_\" data-linktype=\"relative-path\">Response</a> and <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> properties of the exception to determine the response from the server.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses BeginGetResponse to asynchronously request the target resource. When the resource has been obtained, the specified callback method will be executed.  </p>\n<pre><code class=\"lang-vb\" name=\"WebRequest_BeginGetResponse#2\">\nImports System\nImports System.Net\nImports System.IO\nImports System.Text\nImports System.Threading\nImports Microsoft.VisualBasic\n\n\n\nPublic Class RequestState\n  &#39; This class stores the state of the request\n  Private Shared BUFFER_SIZE As Integer = 1024\n  Public requestData As StringBuilder\n  Public bufferRead() As Byte\n  Public request As WebRequest\n  Public response As WebResponse\n  Public responseStream As Stream\n  \n  Public Sub New()\n    bufferRead = New Byte(BUFFER_SIZE) {}\n    requestData = New StringBuilder(&quot;&quot;)\n    request = Nothing\n    responseStream = Nothing\n  End Sub &#39; New\nEnd Class &#39; RequestState\n\nClass WebRequest_BeginGetResponse\n  Public Shared allDone As New ManualResetEvent(False)\n  Private Shared BUFFER_SIZE As Integer = 1024\n  \n  Shared Sub Main()\n    Try\n\n\n      &#39; Create a new webrequest to the mentioned URL.\n      Dim myWebRequest As WebRequest = WebRequest.Create(&quot;http://www.contoso.com&quot;)\n      &#39;Please, set the proxy to a correct value.\n      Dim proxy As New WebProxy(&quot;itgproxy:80&quot;)\n      proxy.Credentials = New NetworkCredential(&quot;srikun&quot;, &quot;simrin123&quot;)\n      myWebRequest.Proxy = proxy\n      &#39; Create a new instance of the RequestState.\n      Dim myRequestState As New RequestState()\n      &#39; The &#39;WebRequest&#39; object is associated to the &#39;RequestState&#39; object.\n      myRequestState.request = myWebRequest\n      &#39; Start the Asynchronous call for response.\n      Dim asyncResult As IAsyncResult = CType(myWebRequest.BeginGetResponse(AddressOf RespCallback, myRequestState), IAsyncResult)\n      allDone.WaitOne()\n\t  &#39; Release the WebResponse resource.\n\t  myRequestState.response.Close()\n      Console.Read()\n    Catch e As WebException\n      Console.WriteLine(&quot;WebException raised!&quot;)\n      Console.WriteLine(ControlChars.Cr + &quot;{0}&quot;, e.Message)\n      Console.WriteLine(ControlChars.Cr + &quot;{0}&quot;, e.Status)\n    Catch e As Exception\n      Console.WriteLine(&quot;Exception raised!&quot;)\n      Console.WriteLine((&quot;Source : &quot; + e.Source))\n      Console.WriteLine((&quot;Message : &quot; + e.Message))\n    End Try\n  End Sub &#39; Main\n\n  Private Shared Sub RespCallback(asynchronousResult As IAsyncResult)\n    Try\n      &#39; Set the State of request to asynchronous.\n      Dim myRequestState As RequestState = CType(asynchronousResult.AsyncState, RequestState)\n      Dim myWebRequest1 As WebRequest = myRequestState.request\n      &#39; End the Asynchronous response.\n      myRequestState.response = myWebRequest1.EndGetResponse(asynchronousResult)\n      &#39; Read the response into a &#39;Stream&#39; object.\n      Dim responseStream As Stream = myRequestState.response.GetResponseStream()\n      myRequestState.responseStream = responseStream\n      &#39; Begin the reading of the contents of the HTML page and print it to the console.\n      Dim asynchronousResultRead As IAsyncResult = responseStream.BeginRead(myRequestState.bufferRead, 0, BUFFER_SIZE, AddressOf ReadCallBack, myRequestState)\n    Catch e As WebException\n      Console.WriteLine(&quot;WebException raised!&quot;)\n      Console.WriteLine(ControlChars.Cr + &quot;{0}&quot;, e.Message)\n      Console.WriteLine(ControlChars.Cr + &quot;{0}&quot;, e.Status)\n    Catch e As Exception\n      Console.WriteLine(&quot;Exception raised!&quot;)\n      Console.WriteLine((&quot;Source : &quot; + e.Source))\n      Console.WriteLine((&quot;Message : &quot; + e.Message))\n    End Try\n  End Sub &#39; RespCallback\n  Private Shared Sub ReadCallBack(asyncResult As IAsyncResult)\n    Try\n      &#39; Result state is set to AsyncState.\n      Dim myRequestState As RequestState = CType(asyncResult.AsyncState, RequestState)\n      Dim responseStream As Stream = myRequestState.responseStream\n      Dim read As Integer = responseStream.EndRead(asyncResult)\n      &#39; Read the contents of the HTML page and then print to the console.\n      If read &gt; 0 Then\n        myRequestState.requestData.Append(Encoding.ASCII.GetString(myRequestState.bufferRead, 0, read))\n        Dim asynchronousResult As IAsyncResult = responseStream.BeginRead(myRequestState.bufferRead, 0, BUFFER_SIZE, AddressOf ReadCallBack, myRequestState)\n      Else\n        Console.WriteLine(ControlChars.Cr + &quot;The HTML page Contents are:  &quot;)\n        If myRequestState.requestData.Length &gt; 1 Then\n          Dim sringContent As String\n          sringContent = myRequestState.requestData.ToString()\n          Console.WriteLine(sringContent)\n        End If\n        Console.WriteLine(ControlChars.Cr + &quot;Press &#39;Enter&#39; key to continue........&quot;)\n        responseStream.Close()\n\t       allDone.Set()\n      End If\n    Catch e As WebException\n      Console.WriteLine(&quot;WebException raised!&quot;)\n      Console.WriteLine(ControlChars.Cr + &quot;{0}&quot;, e.Message)\n      Console.WriteLine(ControlChars.Cr + &quot;{0}&quot;, e.Status)\n    Catch e As Exception\n      Console.WriteLine(&quot;Exception raised!&quot;)\n      Console.WriteLine(&quot;Source :{0} &quot;, e.Source)\n      Console.WriteLine(&quot;Message :{0} &quot;, e.Message)\n    End Try\n  End Sub &#39; ReadCallBack \n\nEnd Class &#39; WebRequest_BeginGetResponse\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebRequest_BeginGetResponse#2\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Net;\nusing namespace System::IO;\nusing namespace System::Text;\nusing namespace System::Threading;\npublic ref class RequestState\n{\nprivate:\n\n   // This class stores the state of the request.\n   literal int BUFFER_SIZE = 1024;\n\npublic:\n   StringBuilder^ requestData;\n   array&lt;Byte&gt;^bufferRead;\n   WebRequest^ request;\n   WebResponse^ response;\n   Stream^ responseStream;\n   RequestState()\n   {\n      bufferRead = gcnew array&lt;Byte&gt;(BUFFER_SIZE);\n      requestData = gcnew StringBuilder( &quot;&quot; );\n      request = nullptr;\n      responseStream = nullptr;\n   }\n\n};\n\nref class WebRequest_BeginGetResponse\n{\npublic:\n   static ManualResetEvent^ allDone = gcnew ManualResetEvent( false );\n   literal int BUFFER_SIZE = 1024;\n   static void RespCallback( IAsyncResult^ asynchronousResult )\n   {\n      try\n      {\n         \n         // Set the State of request to asynchronous.\n         RequestState^ myRequestState = dynamic_cast&lt;RequestState^&gt;(asynchronousResult-&gt;AsyncState);\n         WebRequest^ myWebRequest1 = myRequestState-&gt;request;\n         \n         // End the Asynchronous response.\n         myRequestState-&gt;response = myWebRequest1-&gt;EndGetResponse( asynchronousResult );\n         \n         // Read the response into a &#39;Stream&#39; object.\n         Stream^ responseStream = myRequestState-&gt;response-&gt;GetResponseStream();\n         myRequestState-&gt;responseStream = responseStream;\n         \n         // Begin the reading of the contents of the HTML page and print it to the console.\n         IAsyncResult^ asynchronousResultRead = responseStream-&gt;BeginRead( myRequestState-&gt;bufferRead, 0, BUFFER_SIZE, gcnew AsyncCallback( ReadCallBack ), myRequestState );\n      }\n      catch ( WebException^ e ) \n      {\n         Console::WriteLine( &quot;WebException raised!&quot; );\n         Console::WriteLine( &quot;<br> {0}&quot;, e-&gt;Message );\n         Console::WriteLine( &quot;<br> {0}&quot;, e-&gt;Status );\n      }\n      catch ( Exception^ e ) \n      {\n         Console::WriteLine( &quot;Exception raised!&quot; );\n         Console::WriteLine( &quot;Source : {0}&quot;, e-&gt;Source );\n         Console::WriteLine( &quot;Message : {0}&quot;, e-&gt;Message );\n      }\n\n   }\n\n   static void ReadCallBack( IAsyncResult^ asyncResult )\n   {\n      try\n      {\n         \n         // Result state is set to AsyncState.\n         RequestState^ myRequestState = dynamic_cast&lt;RequestState^&gt;(asyncResult-&gt;AsyncState);\n         Stream^ responseStream = myRequestState-&gt;responseStream;\n         int read = responseStream-&gt;EndRead( asyncResult );\n         \n         // Read the contents of the HTML page and then print to the console.\n         if ( read &gt; 0 )\n         {\n            myRequestState-&gt;requestData-&gt;Append( Encoding::ASCII-&gt;GetString( myRequestState-&gt;bufferRead, 0, read ) );\n            IAsyncResult^ asynchronousResult = responseStream-&gt;BeginRead( myRequestState-&gt;bufferRead, 0, BUFFER_SIZE, gcnew AsyncCallback( ReadCallBack ), myRequestState );\n         }\n         else\n         {\n            Console::WriteLine( &quot;<br>The HTML page Contents are:  &quot; );\n            if ( myRequestState-&gt;requestData-&gt;Length &gt; 1 )\n            {\n               String^ sringContent;\n               sringContent = myRequestState-&gt;requestData-&gt;ToString();\n               Console::WriteLine( sringContent );\n            }\n            Console::WriteLine( &quot;<br>Press &#39;Enter&#39; key to continue........&quot; );\n            responseStream-&gt;Close();\n            allDone-&gt;Set();\n         }\n      }\n      catch ( WebException^ e ) \n      {\n         Console::WriteLine( &quot;WebException raised!&quot; );\n         Console::WriteLine( &quot;<br> {0}&quot;, e-&gt;Message );\n         Console::WriteLine( &quot;<br> {0}&quot;, e-&gt;Status );\n      }\n      catch ( Exception^ e ) \n      {\n         Console::WriteLine( &quot;Exception raised!&quot; );\n         Console::WriteLine( &quot;Source : {0}&quot;, e-&gt;Source );\n         Console::WriteLine( &quot;Message : {0}&quot;, e-&gt;Message );\n      }\n\n   }\n\n};\n\nint main()\n{\n   try\n   {\n      \n      // Create a new webrequest to the mentioned URL.\n      WebRequest^ myWebRequest = WebRequest::Create( &quot;http://www.contoso.com&quot; );\n      \n      // Please, set the proxy to a correct value.\n      WebProxy^ proxy = gcnew WebProxy( &quot;myproxy:80&quot; );\n      proxy-&gt;Credentials = gcnew NetworkCredential( &quot;srikun&quot;,&quot;simrin123&quot; );\n      myWebRequest-&gt;Proxy = proxy;\n      \n      // Create a new instance of the RequestState.\n      RequestState^ myRequestState = gcnew RequestState;\n      \n      // The &#39;WebRequest&#39; object is associated to the &#39;RequestState&#39; object.\n      myRequestState-&gt;request = myWebRequest;\n      \n      // Start the Asynchronous call for response.\n      IAsyncResult^ asyncResult = dynamic_cast&lt;IAsyncResult^&gt;(myWebRequest-&gt;BeginGetResponse( gcnew AsyncCallback( WebRequest_BeginGetResponse::RespCallback ), myRequestState ));\n      WebRequest_BeginGetResponse::allDone-&gt;WaitOne();\n      \n      // Release the WebResponse resource.\n      myRequestState-&gt;response-&gt;Close();\n      Console::Read();\n   }\n   catch ( WebException^ e ) \n   {\n      Console::WriteLine( &quot;WebException raised!&quot; );\n      Console::WriteLine( &quot;<br> {0}&quot;, e-&gt;Message );\n      Console::WriteLine( &quot;<br> {0}&quot;, e-&gt;Status );\n   }\n   catch ( Exception^ e ) \n   {\n      Console::WriteLine( &quot;Exception raised!&quot; );\n      Console::WriteLine( &quot;Source : {0}&quot;, e-&gt;Source );\n      Console::WriteLine( &quot;Message : {0}&quot;, e-&gt;Message );\n   }\n\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"WebRequest_BeginGetResponse#2\">\nusing System;\nusing System.Net;\nusing System.IO;\nusing System.Text;\nusing System.Threading;\n\n\n\npublic class RequestState\n{\n  // This class stores the state of the request.\n  const int BUFFER_SIZE = 1024;\n  public StringBuilder requestData;\n  public byte[] bufferRead;\n  public WebRequest request;\n  public WebResponse response;\n  public Stream responseStream;\n  public RequestState()\n  {\n    bufferRead = new byte[BUFFER_SIZE];\n    requestData = new StringBuilder(&quot;&quot;);\n    request = null;\n    responseStream = null;\n  }\n}\nclass WebRequest_BeginGetResponse\n{\n  public static ManualResetEvent allDone= new ManualResetEvent(false);\n  const int BUFFER_SIZE = 1024;\n  static void Main()\n  {\n    try\n    {\n      // Create a new webrequest to the mentioned URL.   \n      WebRequest myWebRequest= WebRequest.Create(&quot;http://www.contoso.com&quot;);\n      \n      // Please, set the proxy to a correct value. \n      WebProxy proxy=new WebProxy(&quot;myproxy:80&quot;);\n\n      proxy.Credentials=new NetworkCredential(&quot;srikun&quot;,&quot;simrin123&quot;);\n      myWebRequest.Proxy=proxy;\n      // Create a new instance of the RequestState.\n      RequestState myRequestState = new RequestState();\n      // The &#39;WebRequest&#39; object is associated to the &#39;RequestState&#39; object.\n      myRequestState.request = myWebRequest;\n      // Start the Asynchronous call for response.\n      IAsyncResult asyncResult=(IAsyncResult) myWebRequest.BeginGetResponse(new AsyncCallback(RespCallback),myRequestState);\n      allDone.WaitOne();\n      // Release the WebResponse resource.\n      myRequestState.response.Close();\n      Console.Read();\n    }\n    catch(WebException e)\n    {\n      Console.WriteLine(&quot;WebException raised!&quot;);\n      Console.WriteLine(&quot;<br>{0}&quot;,e.Message);\n      Console.WriteLine(&quot;<br>{0}&quot;,e.Status);\n    } \n    catch(Exception e)\n    {\n      Console.WriteLine(&quot;Exception raised!&quot;);\n      Console.WriteLine(&quot;Source : &quot; + e.Source);\n      Console.WriteLine(&quot;Message : &quot; + e.Message);\n    }\n  }\n  private static void RespCallback(IAsyncResult asynchronousResult)\n  {  \n    try\n    {\n      // Set the State of request to asynchronous.\n      RequestState myRequestState=(RequestState) asynchronousResult.AsyncState;\n      WebRequest  myWebRequest1=myRequestState.request;\n      // End the Asynchronous response.\n      myRequestState.response =  myWebRequest1.EndGetResponse(asynchronousResult);\n      // Read the response into a &#39;Stream&#39; object.\n      Stream responseStream = myRequestState.response.GetResponseStream();\n      myRequestState.responseStream=responseStream;\n      // Begin the reading of the contents of the HTML page and print it to the console.\n      IAsyncResult asynchronousResultRead = responseStream.BeginRead(myRequestState.bufferRead, 0, BUFFER_SIZE, new AsyncCallback(ReadCallBack), myRequestState);\n    \n    }\n    catch(WebException e)\n    {\n      Console.WriteLine(&quot;WebException raised!&quot;);\n      Console.WriteLine(&quot;<br>{0}&quot;,e.Message);\n      Console.WriteLine(&quot;<br>{0}&quot;,e.Status);\n    } \n    catch(Exception e)\n    {\n      Console.WriteLine(&quot;Exception raised!&quot;);\n      Console.WriteLine(&quot;Source : &quot; + e.Source);\n      Console.WriteLine(&quot;Message : &quot; + e.Message);\n    }\n  }\n  private static  void ReadCallBack(IAsyncResult asyncResult)\n  {\n    try\n    {\n      // Result state is set to AsyncState.\n      RequestState myRequestState = (RequestState)asyncResult.AsyncState;\n      Stream responseStream = myRequestState.responseStream;\n      int read = responseStream.EndRead( asyncResult );\n      // Read the contents of the HTML page and then print to the console.\n      if (read &gt; 0)\n      {\n        myRequestState.requestData.Append(Encoding.ASCII.GetString(myRequestState.bufferRead, 0, read));\n        IAsyncResult asynchronousResult = responseStream.BeginRead( myRequestState.bufferRead, 0, BUFFER_SIZE, new AsyncCallback(ReadCallBack), myRequestState);\n      }\n      else\n      {\n        Console.WriteLine(&quot;<br>The HTML page Contents are:  &quot;);\n        if(myRequestState.requestData.Length&gt;1)\n        {\n          string sringContent;\n          sringContent = myRequestState.requestData.ToString();\n          Console.WriteLine(sringContent);\n        }\n        Console.WriteLine(&quot;<br>Press &#39;Enter&#39; key to continue........&quot;);\n        responseStream.Close();\n        allDone.Set();\n      }\n    }\n    catch(WebException e)\n    {\n      Console.WriteLine(&quot;WebException raised!&quot;);\n      Console.WriteLine(&quot;<br>{0}&quot;,e.Message);\n      Console.WriteLine(&quot;<br>{0}&quot;,e.Status);\n    } \n    catch(Exception e)\n    {\n      Console.WriteLine(&quot;Exception raised!&quot;);\n      Console.WriteLine(&quot;Source : {0}&quot; , e.Source);\n      Console.WriteLine(&quot;Message : {0}&quot; , e.Message);\n    }\n\n  }\n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_Create_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebRequest_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instance for the specified URI scheme.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Net.WebRequest Create (string requestUriString);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUriString</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI that identifies the Internet resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> descendant for the specific URI scheme.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The request scheme specified in <code>requestUriString</code> has not been registered.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>requestUriString</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have permission to connect to the requested URI or a URI that the request is redirected to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uriformatexception\" data-linktype=\"relative-path\">UriFormatException</a></div>\r\n                  </div>\r\n                  <div class=\"alert NOTE\"><br> In the <a href=\"http://go.microsoft.com/fwlink/?LinkID=247912\" data-linktype=\"external\">.NET for Windows Store apps</a> or the <a href=\"../Topic/Cross-Platform%20Development%20with%20the%20Portable%20Class%20Library.md\" data-linktype=\"relative-path\">Portable Class Library</a>, catch the base class exception, <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>, instead.<br>\n</div>  \n\n<p> The URI specified in <code>requestUriString</code> is not a valid URI.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method returns a descendant of the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class determined at run time as the closest registered match for <code>requestUri</code>.  </p>\n<p> For example, when a URI beginning with <code>http://</code> or <code>https://</code> is passed in <code>requestUri</code>, an <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> is returned by <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a>. If a URI beginning with <code>ftp://</code> is passed instead, the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method will return a <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a> instance. If a URI beginning with <code>file://</code> is passed instead, the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method will return a <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a> instance.  </p>\n<p> The pre-registered reserve types already registered include the following:  </p>\n<ul>\n<li><p><code>http://</code>  </p>\n</li>\n<li><p><code>https://</code>  </p>\n</li>\n<li><p><code>ftp://</code>  </p>\n</li>\n<li><p><code>file://</code>  </p>\n<p>The .NET Framework includes support for the <code>http://</code>, <code>https://</code>, <code>ftp://</code>, and <code>file://</code> URI schemes. Custom <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> descendants to handle other requests are registered with the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_RegisterPrefix_\" data-linktype=\"relative-path\">RegisterPrefix</a> method.  </p>\n<p>The <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method uses the <code>requestUriString</code> parameter to create a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance that it passes to the new <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a>.  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> to instantiate an <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> instance. A string representing the target URL is used as the constructor parameter.  </p>\n<pre><code class=\"lang-vb\" name=\"WebResponse_ResponseUri#1\">\n            Dim ourUri As New Uri(url)\n            &#39; Create a &#39;WebRequest&#39; object with the specified url. \n\n            Dim myWebRequest As WebRequest = WebRequest.Create(url)\n\n            &#39; Send the &#39;WebRequest&#39; and wait for response.\n            Dim myWebResponse As WebResponse = myWebRequest.GetResponse()\n            \n            &#39; &quot;ResponseUri&quot; property is used to get the actual Uri from where the response was attained.\n            If ourUri.Equals(myWebResponse.ResponseUri) Then\n                Console.WriteLine(ControlChars.Cr + &quot;Request Url : {0} was not redirected&quot;, url)\n            Else\n                Console.WriteLine(ControlChars.Cr + &quot;Request Url : {0} was redirected to {1}&quot;, url, myWebResponse.ResponseUri)\n            End If \n\n            &#39; Release resources of response object.\n            myWebResponse.Close()\n            \n</code></pre><pre><code class=\"lang-cpp\" name=\"WebResponse_ResponseUri#1\">      Uri^ ourUri = gcnew Uri( url );\n      \n      // Create a &#39;WebRequest&#39; object with the specified url.\n      WebRequest^ myWebRequest = WebRequest::Create( url );\n      \n      // Send the &#39;WebRequest&#39; and wait for response.\n      WebResponse^ myWebResponse = myWebRequest-&gt;GetResponse();\n      \n      // Use &quot;ResponseUri&quot; property to get the actual Uri from where the response was attained.\n      if ( ourUri-&gt;Equals( myWebResponse-&gt;ResponseUri ) )\n      {\n         Console::WriteLine( &quot;<br>Request Url : {0} was not redirected&quot;, url );\n      }\n      else\n      {\n         Console::WriteLine( &quot;<br>Request Url : {0} was redirected to {1}&quot;, url, myWebResponse-&gt;ResponseUri );\n      }\n      \n      // Release resources of response object.\n      myWebResponse-&gt;Close();\n</code></pre><pre><code class=\"lang-cs\" name=\"WebResponse_ResponseUri#1\">\t\t\tUri ourUri = new Uri(url);            \n\n\t\t\t// Create a &#39;WebRequest&#39; object with the specified url. \n\t\t\tWebRequest myWebRequest = WebRequest.Create(url); \n\n\t\t\t// Send the &#39;WebRequest&#39; and wait for response.\n\t\t\tWebResponse myWebResponse = myWebRequest.GetResponse(); \n\t\t\t\n\t\t\t// Use &quot;ResponseUri&quot; property to get the actual Uri from where the response was attained.\n\t\t\tif (ourUri.Equals(myWebResponse.ResponseUri))\n\t\t\t\tConsole.WriteLine(&quot;<br>Request Url : {0} was not redirected&quot;,url);   \n\t\t\telse\n\t\t\t\tConsole.WriteLine(&quot;<br>Request Url : {0} was redirected to {1}&quot;,url,myWebResponse.ResponseUri);   \n\t\t\t// Release resources of response object.\n\t\t\tmyWebResponse.Close(); \n\t\t\t\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_Create_System_Uri_\">\r\n    \r\n            <a id=\"System_Net_WebRequest_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instance for the specified URI scheme.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Net.WebRequest Create (Uri requestUri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> containing the URI of the requested resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> descendant for the specified URI scheme.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The request scheme specified in <code>requestUri</code> is not registered.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>requestUri</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have permission to connect to the requested URI or a URI that the request is redirected to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Create method returns a descendant of the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class determined at run time as the closest registered match for <code>requestUri</code>.  </p>\n<p> For example, if you create a <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> descendant, Handler1, to handle requests to <code>http://www.contoso.com/text/</code> and another named Handler2 to handle requests to <code>http://www.contoso.com/code/</code>, you can use Create method to return the WebRequest descendant associated with either specified URI.  </p>\n<p> To return a descendant of the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class based on only the scheme portion of a URI, use the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_CreateDefault_\" data-linktype=\"relative-path\">CreateDefault</a> method.  </p>\n<p> For example, when a URI beginning with <code>http://</code> or <code>https://</code> is passed in <code>requestUri</code>, an <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> is returned by Create. If a URI beginning with <code>ftp://</code> is passed instead, the Create method will return a <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a> instance. If a URI beginning with <code>file://</code> is passed instead, the Create method will return a <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a> instance.  </p>\n<p> The pre-registered reserve types already registered include the following:  </p>\n<ul>\n<li><p><code>http://</code>  </p>\n</li>\n<li><p><code>https://</code>  </p>\n</li>\n<li><p><code>ftp://</code>  </p>\n</li>\n<li><p><code>file://</code>  </p>\n<p>The .NET Framework includes support for the <code>http://</code>, <code>https://</code>, <code>ftp://</code>, and <code>file://</code> URI schemes. Custom <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> descendants to handle other requests are registered with the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_RegisterPrefix_\" data-linktype=\"relative-path\">RegisterPrefix</a> method.  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses Create to instantiate an <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> instance. A Uri representing the target URL is used as the constructor parameter.  </p>\n<pre><code class=\"lang-cpp\" name=\"WebRequest_Create#1\">      // Create a new &#39;Uri&#39; object with the specified string.\n      Uri^ myUri = gcnew Uri( &quot;http://www.contoso.com&quot; );\n      // Create a new request to the above mentioned URL.\n      WebRequest^ myWebRequest = WebRequest::Create( myUri );\n      // Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n      WebResponse^ myWebResponse = myWebRequest-&gt;GetResponse();\n</code></pre><pre><code class=\"lang-vb\" name=\"WebRequest_Create#1\">            &#39; Create a new &#39;Uri&#39; object with the specified string.\n            Dim myUri As New Uri(&quot;http://www.contoso.com&quot;)\n            &#39; Create a new request to the above mentioned URL.\t\n            Dim myWebRequest As WebRequest = WebRequest.Create(myUri)\n            &#39;  Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n            Dim myWebResponse As WebResponse = myWebRequest.GetResponse()\n</code></pre><pre><code class=\"lang-cs\" name=\"WebRequest_Create#1\">\t\t\t// Create a new &#39;Uri&#39; object with the specified string.\n\t\t\tUri myUri =new Uri(&quot;http://www.contoso.com&quot;);\n\t\t\t// Create a new request to the above mentioned URL.\t\n\t\t\tWebRequest myWebRequest= WebRequest.Create(myUri);\n\t\t\t// Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n\t\t\tWebResponse myWebResponse= myWebRequest.GetResponse();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_CreateDefault_System_Uri_\">\r\n    \r\n            <a id=\"System_Net_WebRequest_CreateDefault_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateDefault(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instance for the specified URI scheme.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Net.WebRequest CreateDefault (Uri requestUri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> containing the URI of the requested resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> descendant for the specified URI scheme.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The request scheme specified in <code>requestUri</code> is not registered.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>requestUri</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have permission to connect to the requested URI or a URI that the request is redirected to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CreateDefault method returns a <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> descendant instance based on only the scheme portion of a URI.  </p>\n<p> For example, when a URI beginning with <code>http://</code> is passed in <code>requestUri</code>, an <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> is returned by CreateDefault. If a URI beginning with <code>file://</code> is passed instead, the CreateDefault method will return a <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_CreateHttp_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebRequest_CreateHttp_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateHttp(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> instance for the specified URI string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Net.HttpWebRequest CreateHttp (string requestUriString);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUriString</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A URI string that identifies the Internet resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a></div>\r\n                  </div>\r\n                  <p>Returns <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a>.  </p>\n<p> An <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> instance for the specific URI string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The request scheme specified in <code>requestUriString</code> is the http or https scheme.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>requestUriString</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have permission to connect to the requested URI or a URI that the request is redirected to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uriformatexception\" data-linktype=\"relative-path\">UriFormatException</a></div>\r\n                  </div>\r\n                  <p>The URI specified in <code>requestUriString</code> is not a valid URI.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CreateHttp method returns an instance of the <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> class for the <code>requestUriString</code>.  </p>\n<p> When a URI that begins with <code>http://</code> or <code>http://</code> is passed in the <code>requestUriString</code> parameter, a <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> is returned by CreateHttp. Another other scheme will throw an <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.  </p>\n<p> The CreateHttp method uses the <code>requestUriString</code> parameter to create a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance that it passes to the new <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a>. If the method is successful, the <a class=\"xref\" href=\"system.net.httpwebrequest#System_Net_HttpWebRequest_AllowReadStreamBuffering_\" data-linktype=\"relative-path\">AllowReadStreamBuffering</a> property on the returned <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> instance is set to <code>false</code>.  </p>\n<p> The .NET Framework includes support for the <code>http://</code> and  <code>https://</code> URI schemes. Custom <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> descendants to handle other requests are registered with the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_RegisterPrefix_\" data-linktype=\"relative-path\">RegisterPrefix</a> method. The <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_System_String_\" data-linktype=\"relative-path\">Create(String)</a> method can be used to create a descendant of the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class for other schemes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_CreateHttp_System_Uri_\">\r\n    \r\n            <a id=\"System_Net_WebRequest_CreateHttp_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateHttp(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> instance for the specified URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Net.HttpWebRequest CreateHttp (Uri requestUri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A URI that identifies the Internet resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a></div>\r\n                  </div>\r\n                  <p>Returns <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a>.  </p>\n<p> An <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> instance for the specific URI string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The request scheme specified in <code>requestUri</code> is the http or https scheme.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>requestUri</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have permission to connect to the requested URI or a URI that the request is redirected to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uriformatexception\" data-linktype=\"relative-path\">UriFormatException</a></div>\r\n                  </div>\r\n                  <p>The URI specified in <code>requestUri</code> is not a valid URI.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CreateHttp method returns an instance of the <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> class for the <code>requestUri</code>.  </p>\n<p> When a URI that begins with <code>http://</code> or <code>http://</code> is passed in the <code>requestUri</code> parameter, an <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> is returned by CreateHttp. Another other scheme will throw a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.  </p>\n<p> The CreateHttp method uses the <code>requestUri</code> parameter to create a new <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> instance. If the method is successful, the <a class=\"xref\" href=\"system.net.httpwebrequest#System_Net_HttpWebRequest_AllowReadStreamBuffering_\" data-linktype=\"relative-path\">AllowReadStreamBuffering</a> property on the returned <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> instance is set to <code>false</code>.  </p>\n<p> The .NET Framework includes support for the <code>http://</code> and  <code>https://</code> URI schemes. Custom <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> descendants to handle other requests are registered with the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_RegisterPrefix_\" data-linktype=\"relative-path\">RegisterPrefix</a> method. The <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_System_Uri_\" data-linktype=\"relative-path\">Create(Uri)</a> method can be used to create a descendant of the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class for other schemes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_EndGetRequestStream_System_IAsyncResult_\">\r\n    \r\n            <a id=\"System_Net_WebRequest_EndGetRequestStream_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndGetRequestStream(IAsyncResult)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a descendant class, returns a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> for writing data to the Internet resource.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that references a pending request for a stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to write data to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Any attempt is made to access the method, when the method is not overridden in a descendant class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The EndGetRequestStream method completes an asynchronous stream request that was started by the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_BeginGetRequestStream_\" data-linktype=\"relative-path\">BeginGetRequestStream</a> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To avoid timing issues with garbage collection, be sure to close the response stream by calling the <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a> method on the stream returned by <a class=\"xref\" href=\"system.net.webresponse#System_Net_WebResponse_GetResponseStream_\" data-linktype=\"relative-path\">GetResponseStream</a> after calling <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_EndGetResponse_\" data-linktype=\"relative-path\">EndGetResponse</a>.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class is an <code>abstract</code> class. The actual behavior of <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instances at run time is determined by the descendant class returned by the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method. For more information about default values and exceptions, see the documentation for the descendant classes, such as <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> and <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example obtains and uses the request stream by calling the EndGetRequestStream. The EndGetRequestStream method completes the asynchronous call to <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_BeginGetRequestStream_\" data-linktype=\"relative-path\">BeginGetRequestStream</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"WebRequest_BeginGetRequest#3\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Net;\nusing namespace System::IO;\nusing namespace System::Text;\nusing namespace System::Threading;\npublic ref class RequestState\n{\npublic:\n\n   // This class stores the request state of the request.\n   WebRequest^ request;\n   RequestState()\n   {\n      request = nullptr;\n   }\n\n};\n\nref class WebRequest_BeginGetRequeststream\n{\npublic:\n   static ManualResetEvent^ allDone = gcnew ManualResetEvent( false );\n   static void ReadCallback( IAsyncResult^ asynchronousResult )\n   {\n      RequestState^ myRequestState = dynamic_cast&lt;RequestState^&gt;(asynchronousResult-&gt;AsyncState);\n      WebRequest^ myWebRequest = myRequestState-&gt;request;\n      \n      // End of the Asynchronus request.\n      Stream^ streamResponse = myWebRequest-&gt;EndGetRequestStream( asynchronousResult );\n      \n      // Create a string that is to be posted to the uri.\n      Console::WriteLine( &quot;Please enter a string to be posted:&quot; );\n      String^ postData = Console::ReadLine();\n      \n      // Convert  the string into a Byte array.\n      array&lt;Byte&gt;^byteArray = Encoding::UTF8-&gt;GetBytes( postData );\n      \n      // Write data to the stream.\n      streamResponse-&gt;Write( byteArray, 0, postData-&gt;Length );\n      streamResponse-&gt;Close();\n      allDone-&gt;Set();\n   }\n\n};\n\nint main()\n{\n   \n   // Create a new request to the mentioned URL.\n   WebRequest^ myWebRequest = WebRequest::Create( &quot;http://www.contoso.com&quot; );\n   \n   // Create an instance of the RequestState and assign &#39;myWebRequest&#39; to its request field.\n   RequestState^ myRequestState = gcnew RequestState;\n   myRequestState-&gt;request = myWebRequest;\n   myWebRequest-&gt;ContentType = &quot;application/x-www-form-urlencoded&quot;;\n   \n   // Set the &#39;Method&#39; prperty  to &#39;POST&#39; to post data to a Uri.\n   myRequestState-&gt;request-&gt;Method = &quot;POST&quot;;\n   \n   // Start the Asynchronous &#39;BeginGetRequestStream&#39; method call.\n   IAsyncResult^ r = dynamic_cast&lt;IAsyncResult^&gt;(myWebRequest-&gt;BeginGetRequestStream( gcnew AsyncCallback( WebRequest_BeginGetRequeststream::ReadCallback ), myRequestState ));\n   WebRequest_BeginGetRequeststream::allDone-&gt;WaitOne();\n   WebResponse^ myWebResponse = myWebRequest-&gt;GetResponse();\n   Console::WriteLine( &quot;The String* entered has been posted.&quot; );\n   Console::WriteLine( &quot;Please wait for the response...&quot; );\n   Stream^ streamResponse = myWebResponse-&gt;GetResponseStream();\n   StreamReader^ streamRead = gcnew StreamReader( streamResponse );\n   array&lt;Char&gt;^readBuff = gcnew array&lt;Char&gt;(256);\n   int count = streamRead-&gt;Read( readBuff, 0, 256 );\n   Console::WriteLine( &quot;The contents of the HTML page are &quot; );\n   while ( count &gt; 0 )\n   {\n      String^ outputData = gcnew String( readBuff,0,count );\n      Console::Write( outputData );\n      count = streamRead-&gt;Read( readBuff, 0, 256 );\n   }\n\n   streamResponse-&gt;Close();\n   streamRead-&gt;Close();\n   \n   // Release the HttpWebResponse Resource.\n   myWebResponse-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"WebRequest_BeginGetRequest#3\">using System;\nusing System.Net;\nusing System.IO;\nusing System.Text;\nusing System.Threading;\n\npublic class RequestState\n{\n    // This class stores the request state of the request.\n    public WebRequest request;    \n    public RequestState()\n    {\n        request = null;\n    }\n}\n\nclass WebRequest_BeginGetRequeststream\n{\n    public static ManualResetEvent allDone= new ManualResetEvent(false);\n    static void Main()\n    {\n            // Create a new request to the mentioned URL.    \n            WebRequest myWebRequest= WebRequest.Create(&quot;http://www.contoso.com&quot;);\n\n            // Create an instance of the RequestState and assign \n            // &#39;myWebRequest&#39; to it&#39;s request field.    \n            RequestState myRequestState = new RequestState();\n            myRequestState.request = myWebRequest;            \n            myWebRequest.ContentType=&quot;application/x-www-form-urlencoded&quot;;\n\n            // Set the &#39;Method&#39; property  to &#39;POST&#39; to post data to a Uri.\n            myRequestState.request.Method=&quot;POST&quot;;\n            // Start the Asynchronous &#39;BeginGetRequestStream&#39; method call.    \n            IAsyncResult r=(IAsyncResult) myWebRequest.BeginGetRequestStream(\n                new AsyncCallback(ReadCallback),myRequestState);\n            // Pause the current thread until the async operation completes.\n            Console.WriteLine(&quot;main thread waiting...&quot;);\n            allDone.WaitOne();   \n            // Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n            WebResponse myWebResponse = myWebRequest.GetResponse();\n            Console.WriteLine(&quot;The string has been posted.&quot;);    \n            Console.WriteLine(&quot;Please wait for the response...&quot;);\n\n            Stream streamResponse = myWebResponse.GetResponseStream();\n            StreamReader streamRead = new StreamReader( streamResponse );\n            Char[] readBuff = new Char[256];\n            int count = streamRead.Read( readBuff, 0, 256 );\n            Console.WriteLine(&quot;<br>The contents of the HTML page are &quot;);    \n\n            while (count &gt; 0) \n            {\n                String outputData = new String(readBuff, 0, count);\n                Console.Write(outputData);\n                count = streamRead.Read(readBuff, 0, 256);\n            }\n\n            // Close the Stream Object.\n            streamResponse.Close();\n            streamRead.Close();\n \n\n            // Release the HttpWebResponse Resource.\n            myWebResponse.Close();            \n    }\n    private static void ReadCallback(IAsyncResult asynchronousResult)\n    {\n            RequestState myRequestState =(RequestState) asynchronousResult.AsyncState;\n            WebRequest  myWebRequest = myRequestState.request;\n\n            // End the Asynchronus request.\n            Stream streamResponse = myWebRequest.EndGetRequestStream(asynchronousResult);\n\n            // Create a string that is to be posted to the uri.\n            Console.WriteLine(&quot;Please enter a string to be posted:&quot;);\n            string postData = Console.ReadLine();\n            // Convert the string into a byte array.\n            byte[] byteArray = Encoding.UTF8.GetBytes(postData);\n\n            // Write the data to the stream.\n            streamResponse.Write(byteArray,0,postData.Length);\n            streamResponse.Close();\n            allDone.Set();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WebRequest_BeginGetRequest#3\">Imports System\nImports System.Net\nImports System.IO\nImports System.Text\nImports System.Threading\nImports Microsoft.VisualBasic\n\nPublic Class RequestState\n    &#39; This class stores the request state of the request.\n    Public request As WebRequest\n    \n    Public Sub New()\n        request = Nothing\n    End Sub &#39; New\nEnd Class &#39; RequestState\n\n\nClass WebRequest_BeginGetRequeststream\n    Public Shared allDone As New ManualResetEvent(False)\n    \n    Shared Sub Main()\n          &#39; Create a new request.\n            Dim myWebRequest As WebRequest = WebRequest.Create(&quot;http://www.contoso.com/codesnippets/next.asp&quot;)\n &#39; Create an instance of the RequestState and assign \n            &#39; myWebRequest&#39; to it&#39;s request field.\n            Dim myRequestState As New RequestState()\n            myRequestState.request = myWebRequest\n            myWebRequest.ContentType = &quot;application/x-www-form-urlencoded&quot;\n\n            &#39; Set the &#39;Method&#39; property  to &#39;POST&#39; to post data to a Uri.\n            myRequestState.request.Method = &quot;POST&quot;\n            &#39; Start the asynchronous &#39;BeginGetRequestStream&#39; method call.\n            Dim r As IAsyncResult = CType(myWebRequest.BeginGetRequestStream(AddressOf ReadCallback, myRequestState), IAsyncResult)\n            &#39; Pause the current thread until the async operation completes.\n            allDone.WaitOne()\n            &#39; Send the Post and get the response.\n            Dim myWebResponse As WebResponse = myWebRequest.GetResponse()\n            Console.WriteLine(ControlChars.Cr + &quot;The string has been posted.&quot;)\n            Console.WriteLine(&quot;Please wait for the response....&quot;)\n            Dim streamResponse As Stream = myWebResponse.GetResponseStream()\n            Dim streamRead As New StreamReader(streamResponse)\n            Dim readBuff(256) As [Char]\n            Dim count As Integer = streamRead.Read(readBuff, 0, 256)\n            Console.WriteLine(ControlChars.Cr + &quot;The contents of the HTML page are &quot;)\n            While count &gt; 0\n                Dim outputData As New [String](readBuff, 0, count)\n                Console.WriteLine(outputData)\n                count = streamRead.Read(readBuff, 0, 256)\n            End While\n\n           &#39; Close the Stream Object.\n            streamResponse.Close()\n            streamRead.Close()\n            &#39; Release the HttpWebResponse Resource.\n             myWebResponse.Close()\n    End Sub &#39; Main\n     \n    Private Shared Sub ReadCallback(asynchronousResult As IAsyncResult)\n            Dim myRequestState As RequestState = CType(asynchronousResult.AsyncState, RequestState)\n            Dim myWebRequest As WebRequest = myRequestState.request\n            &#39; End the request.\n            Dim streamResponse As Stream = myWebRequest.EndGetRequestStream(asynchronousResult)\n            &#39; Create a string that is to be posted to the uri.\n            Console.WriteLine(ControlChars.Cr + &quot;Please enter a string to be posted:&quot;)\n            Dim postData As String = Console.ReadLine()\n            Dim encoder As New ASCIIEncoding()\n            &#39; Convert  the string into a byte array.\n            Dim byteArray As Byte() = Encoding.UTF8.GetBytes(postData)\n            &#39; Write the data to the stream.\n            streamResponse.Write(byteArray, 0, postData.Length)\n            streamResponse.Close()\n            &#39; Allow the main thread to resume.\n            allDone.Set()\n    End Sub &#39; ReadCallback \nEnd Class &#39; WebRequest_BeginGetRequeststream \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_EndGetResponse_System_IAsyncResult_\">\r\n    \r\n            <a id=\"System_Net_WebRequest_EndGetResponse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndGetResponse(IAsyncResult)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a descendant class, returns a <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that references a pending request for a response.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> that contains a response to the Internet request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Any attempt is made to access the method, when the method is not overridden in a descendant class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The EndGetResponse method completes an asynchronous request for an Internet resource that was started with the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_BeginGetResponse_\" data-linktype=\"relative-path\">BeginGetResponse</a> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class is an <code>abstract</code> class. The actual behavior of <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instances at run time is determined by the descendant class returned by the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method. For more information about default values and exceptions, see the documentation for the descendant classes, such as <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> and <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls the EndGetResponse to retrieve the target resource.  </p>\n<pre><code class=\"lang-vb\" name=\"WebRequest_BeginGetResponse#1\">\nImports System\nImports System.Net\nImports System.IO\nImports System.Text\nImports System.Threading\nImports Microsoft.VisualBasic\n\n\n\nPublic Class RequestState\n  &#39; This class stores the state of the request\n  Private Shared BUFFER_SIZE As Integer = 1024\n  Public requestData As StringBuilder\n  Public bufferRead() As Byte\n  Public request As WebRequest\n  Public response As WebResponse\n  Public responseStream As Stream\n  \n  Public Sub New()\n    bufferRead = New Byte(BUFFER_SIZE) {}\n    requestData = New StringBuilder(&quot;&quot;)\n    request = Nothing\n    responseStream = Nothing\n  End Sub &#39; New\nEnd Class &#39; RequestState\n\nClass WebRequest_BeginGetResponse\n  Public Shared allDone As New ManualResetEvent(False)\n  Private Shared BUFFER_SIZE As Integer = 1024\n  \n  Shared Sub Main()\n    Try\n\n\n      &#39; Create a new webrequest to the mentioned URL.\n      Dim myWebRequest As WebRequest = WebRequest.Create(&quot;http://www.contoso.com&quot;)\n      &#39;Please, set the proxy to a correct value.\n      Dim proxy As New WebProxy(&quot;itgproxy:80&quot;)\n      proxy.Credentials = New NetworkCredential(&quot;srikun&quot;, &quot;simrin123&quot;)\n      myWebRequest.Proxy = proxy\n      &#39; Create a new instance of the RequestState.\n      Dim myRequestState As New RequestState()\n      &#39; The &#39;WebRequest&#39; object is associated to the &#39;RequestState&#39; object.\n      myRequestState.request = myWebRequest\n      &#39; Start the Asynchronous call for response.\n      Dim asyncResult As IAsyncResult = CType(myWebRequest.BeginGetResponse(AddressOf RespCallback, myRequestState), IAsyncResult)\n      allDone.WaitOne()\n\t  &#39; Release the WebResponse resource.\n\t  myRequestState.response.Close()\n      Console.Read()\n    Catch e As WebException\n      Console.WriteLine(&quot;WebException raised!&quot;)\n      Console.WriteLine(ControlChars.Cr + &quot;{0}&quot;, e.Message)\n      Console.WriteLine(ControlChars.Cr + &quot;{0}&quot;, e.Status)\n    Catch e As Exception\n      Console.WriteLine(&quot;Exception raised!&quot;)\n      Console.WriteLine((&quot;Source : &quot; + e.Source))\n      Console.WriteLine((&quot;Message : &quot; + e.Message))\n    End Try\n  End Sub &#39; Main\n\n  Private Shared Sub RespCallback(asynchronousResult As IAsyncResult)\n    Try\n      &#39; Set the State of request to asynchronous.\n      Dim myRequestState As RequestState = CType(asynchronousResult.AsyncState, RequestState)\n      Dim myWebRequest1 As WebRequest = myRequestState.request\n      &#39; End the Asynchronous response.\n      myRequestState.response = myWebRequest1.EndGetResponse(asynchronousResult)\n      &#39; Read the response into a &#39;Stream&#39; object.\n      Dim responseStream As Stream = myRequestState.response.GetResponseStream()\n      myRequestState.responseStream = responseStream\n      &#39; Begin the reading of the contents of the HTML page and print it to the console.\n      Dim asynchronousResultRead As IAsyncResult = responseStream.BeginRead(myRequestState.bufferRead, 0, BUFFER_SIZE, AddressOf ReadCallBack, myRequestState)\n    Catch e As WebException\n      Console.WriteLine(&quot;WebException raised!&quot;)\n      Console.WriteLine(ControlChars.Cr + &quot;{0}&quot;, e.Message)\n      Console.WriteLine(ControlChars.Cr + &quot;{0}&quot;, e.Status)\n    Catch e As Exception\n      Console.WriteLine(&quot;Exception raised!&quot;)\n      Console.WriteLine((&quot;Source : &quot; + e.Source))\n      Console.WriteLine((&quot;Message : &quot; + e.Message))\n    End Try\n  End Sub &#39; RespCallback\n  Private Shared Sub ReadCallBack(asyncResult As IAsyncResult)\n    Try\n      &#39; Result state is set to AsyncState.\n      Dim myRequestState As RequestState = CType(asyncResult.AsyncState, RequestState)\n      Dim responseStream As Stream = myRequestState.responseStream\n      Dim read As Integer = responseStream.EndRead(asyncResult)\n      &#39; Read the contents of the HTML page and then print to the console.\n      If read &gt; 0 Then\n        myRequestState.requestData.Append(Encoding.ASCII.GetString(myRequestState.bufferRead, 0, read))\n        Dim asynchronousResult As IAsyncResult = responseStream.BeginRead(myRequestState.bufferRead, 0, BUFFER_SIZE, AddressOf ReadCallBack, myRequestState)\n      Else\n        Console.WriteLine(ControlChars.Cr + &quot;The HTML page Contents are:  &quot;)\n        If myRequestState.requestData.Length &gt; 1 Then\n          Dim sringContent As String\n          sringContent = myRequestState.requestData.ToString()\n          Console.WriteLine(sringContent)\n        End If\n        Console.WriteLine(ControlChars.Cr + &quot;Press &#39;Enter&#39; key to continue........&quot;)\n        responseStream.Close()\n\t       allDone.Set()\n      End If\n    Catch e As WebException\n      Console.WriteLine(&quot;WebException raised!&quot;)\n      Console.WriteLine(ControlChars.Cr + &quot;{0}&quot;, e.Message)\n      Console.WriteLine(ControlChars.Cr + &quot;{0}&quot;, e.Status)\n    Catch e As Exception\n      Console.WriteLine(&quot;Exception raised!&quot;)\n      Console.WriteLine(&quot;Source :{0} &quot;, e.Source)\n      Console.WriteLine(&quot;Message :{0} &quot;, e.Message)\n    End Try\n  End Sub &#39; ReadCallBack \n\nEnd Class &#39; WebRequest_BeginGetResponse\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebRequest_BeginGetResponse#1\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Net;\nusing namespace System::IO;\nusing namespace System::Text;\nusing namespace System::Threading;\npublic ref class RequestState\n{\nprivate:\n\n   // This class stores the state of the request.\n   literal int BUFFER_SIZE = 1024;\n\npublic:\n   StringBuilder^ requestData;\n   array&lt;Byte&gt;^bufferRead;\n   WebRequest^ request;\n   WebResponse^ response;\n   Stream^ responseStream;\n   RequestState()\n   {\n      bufferRead = gcnew array&lt;Byte&gt;(BUFFER_SIZE);\n      requestData = gcnew StringBuilder( &quot;&quot; );\n      request = nullptr;\n      responseStream = nullptr;\n   }\n\n};\n\nref class WebRequest_BeginGetResponse\n{\npublic:\n   static ManualResetEvent^ allDone = gcnew ManualResetEvent( false );\n   literal int BUFFER_SIZE = 1024;\n   static void RespCallback( IAsyncResult^ asynchronousResult )\n   {\n      try\n      {\n         \n         // Set the State of request to asynchronous.\n         RequestState^ myRequestState = dynamic_cast&lt;RequestState^&gt;(asynchronousResult-&gt;AsyncState);\n         WebRequest^ myWebRequest1 = myRequestState-&gt;request;\n         \n         // End the Asynchronous response.\n         myRequestState-&gt;response = myWebRequest1-&gt;EndGetResponse( asynchronousResult );\n         \n         // Read the response into a &#39;Stream&#39; object.\n         Stream^ responseStream = myRequestState-&gt;response-&gt;GetResponseStream();\n         myRequestState-&gt;responseStream = responseStream;\n         \n         // Begin the reading of the contents of the HTML page and print it to the console.\n         IAsyncResult^ asynchronousResultRead = responseStream-&gt;BeginRead( myRequestState-&gt;bufferRead, 0, BUFFER_SIZE, gcnew AsyncCallback( ReadCallBack ), myRequestState );\n      }\n      catch ( WebException^ e ) \n      {\n         Console::WriteLine( &quot;WebException raised!&quot; );\n         Console::WriteLine( &quot;<br> {0}&quot;, e-&gt;Message );\n         Console::WriteLine( &quot;<br> {0}&quot;, e-&gt;Status );\n      }\n      catch ( Exception^ e ) \n      {\n         Console::WriteLine( &quot;Exception raised!&quot; );\n         Console::WriteLine( &quot;Source : {0}&quot;, e-&gt;Source );\n         Console::WriteLine( &quot;Message : {0}&quot;, e-&gt;Message );\n      }\n\n   }\n\n   static void ReadCallBack( IAsyncResult^ asyncResult )\n   {\n      try\n      {\n         \n         // Result state is set to AsyncState.\n         RequestState^ myRequestState = dynamic_cast&lt;RequestState^&gt;(asyncResult-&gt;AsyncState);\n         Stream^ responseStream = myRequestState-&gt;responseStream;\n         int read = responseStream-&gt;EndRead( asyncResult );\n         \n         // Read the contents of the HTML page and then print to the console.\n         if ( read &gt; 0 )\n         {\n            myRequestState-&gt;requestData-&gt;Append( Encoding::ASCII-&gt;GetString( myRequestState-&gt;bufferRead, 0, read ) );\n            IAsyncResult^ asynchronousResult = responseStream-&gt;BeginRead( myRequestState-&gt;bufferRead, 0, BUFFER_SIZE, gcnew AsyncCallback( ReadCallBack ), myRequestState );\n         }\n         else\n         {\n            Console::WriteLine( &quot;<br>The HTML page Contents are:  &quot; );\n            if ( myRequestState-&gt;requestData-&gt;Length &gt; 1 )\n            {\n               String^ sringContent;\n               sringContent = myRequestState-&gt;requestData-&gt;ToString();\n               Console::WriteLine( sringContent );\n            }\n            Console::WriteLine( &quot;<br>Press &#39;Enter&#39; key to continue........&quot; );\n            responseStream-&gt;Close();\n            allDone-&gt;Set();\n         }\n      }\n      catch ( WebException^ e ) \n      {\n         Console::WriteLine( &quot;WebException raised!&quot; );\n         Console::WriteLine( &quot;<br> {0}&quot;, e-&gt;Message );\n         Console::WriteLine( &quot;<br> {0}&quot;, e-&gt;Status );\n      }\n      catch ( Exception^ e ) \n      {\n         Console::WriteLine( &quot;Exception raised!&quot; );\n         Console::WriteLine( &quot;Source : {0}&quot;, e-&gt;Source );\n         Console::WriteLine( &quot;Message : {0}&quot;, e-&gt;Message );\n      }\n\n   }\n\n};\n\nint main()\n{\n   try\n   {\n      \n      // Create a new webrequest to the mentioned URL.\n      WebRequest^ myWebRequest = WebRequest::Create( &quot;http://www.contoso.com&quot; );\n      \n      // Please, set the proxy to a correct value.\n      WebProxy^ proxy = gcnew WebProxy( &quot;myproxy:80&quot; );\n      proxy-&gt;Credentials = gcnew NetworkCredential( &quot;srikun&quot;,&quot;simrin123&quot; );\n      myWebRequest-&gt;Proxy = proxy;\n      \n      // Create a new instance of the RequestState.\n      RequestState^ myRequestState = gcnew RequestState;\n      \n      // The &#39;WebRequest&#39; object is associated to the &#39;RequestState&#39; object.\n      myRequestState-&gt;request = myWebRequest;\n      \n      // Start the Asynchronous call for response.\n      IAsyncResult^ asyncResult = dynamic_cast&lt;IAsyncResult^&gt;(myWebRequest-&gt;BeginGetResponse( gcnew AsyncCallback( WebRequest_BeginGetResponse::RespCallback ), myRequestState ));\n      WebRequest_BeginGetResponse::allDone-&gt;WaitOne();\n      \n      // Release the WebResponse resource.\n      myRequestState-&gt;response-&gt;Close();\n      Console::Read();\n   }\n   catch ( WebException^ e ) \n   {\n      Console::WriteLine( &quot;WebException raised!&quot; );\n      Console::WriteLine( &quot;<br> {0}&quot;, e-&gt;Message );\n      Console::WriteLine( &quot;<br> {0}&quot;, e-&gt;Status );\n   }\n   catch ( Exception^ e ) \n   {\n      Console::WriteLine( &quot;Exception raised!&quot; );\n      Console::WriteLine( &quot;Source : {0}&quot;, e-&gt;Source );\n      Console::WriteLine( &quot;Message : {0}&quot;, e-&gt;Message );\n   }\n\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"WebRequest_BeginGetResponse#1\">\nusing System;\nusing System.Net;\nusing System.IO;\nusing System.Text;\nusing System.Threading;\n\n\n\npublic class RequestState\n{\n  // This class stores the state of the request.\n  const int BUFFER_SIZE = 1024;\n  public StringBuilder requestData;\n  public byte[] bufferRead;\n  public WebRequest request;\n  public WebResponse response;\n  public Stream responseStream;\n  public RequestState()\n  {\n    bufferRead = new byte[BUFFER_SIZE];\n    requestData = new StringBuilder(&quot;&quot;);\n    request = null;\n    responseStream = null;\n  }\n}\nclass WebRequest_BeginGetResponse\n{\n  public static ManualResetEvent allDone= new ManualResetEvent(false);\n  const int BUFFER_SIZE = 1024;\n  static void Main()\n  {\n    try\n    {\n      // Create a new webrequest to the mentioned URL.   \n      WebRequest myWebRequest= WebRequest.Create(&quot;http://www.contoso.com&quot;);\n      \n      // Please, set the proxy to a correct value. \n      WebProxy proxy=new WebProxy(&quot;myproxy:80&quot;);\n\n      proxy.Credentials=new NetworkCredential(&quot;srikun&quot;,&quot;simrin123&quot;);\n      myWebRequest.Proxy=proxy;\n      // Create a new instance of the RequestState.\n      RequestState myRequestState = new RequestState();\n      // The &#39;WebRequest&#39; object is associated to the &#39;RequestState&#39; object.\n      myRequestState.request = myWebRequest;\n      // Start the Asynchronous call for response.\n      IAsyncResult asyncResult=(IAsyncResult) myWebRequest.BeginGetResponse(new AsyncCallback(RespCallback),myRequestState);\n      allDone.WaitOne();\n      // Release the WebResponse resource.\n      myRequestState.response.Close();\n      Console.Read();\n    }\n    catch(WebException e)\n    {\n      Console.WriteLine(&quot;WebException raised!&quot;);\n      Console.WriteLine(&quot;<br>{0}&quot;,e.Message);\n      Console.WriteLine(&quot;<br>{0}&quot;,e.Status);\n    } \n    catch(Exception e)\n    {\n      Console.WriteLine(&quot;Exception raised!&quot;);\n      Console.WriteLine(&quot;Source : &quot; + e.Source);\n      Console.WriteLine(&quot;Message : &quot; + e.Message);\n    }\n  }\n  private static void RespCallback(IAsyncResult asynchronousResult)\n  {  \n    try\n    {\n      // Set the State of request to asynchronous.\n      RequestState myRequestState=(RequestState) asynchronousResult.AsyncState;\n      WebRequest  myWebRequest1=myRequestState.request;\n      // End the Asynchronous response.\n      myRequestState.response =  myWebRequest1.EndGetResponse(asynchronousResult);\n      // Read the response into a &#39;Stream&#39; object.\n      Stream responseStream = myRequestState.response.GetResponseStream();\n      myRequestState.responseStream=responseStream;\n      // Begin the reading of the contents of the HTML page and print it to the console.\n      IAsyncResult asynchronousResultRead = responseStream.BeginRead(myRequestState.bufferRead, 0, BUFFER_SIZE, new AsyncCallback(ReadCallBack), myRequestState);\n    \n    }\n    catch(WebException e)\n    {\n      Console.WriteLine(&quot;WebException raised!&quot;);\n      Console.WriteLine(&quot;<br>{0}&quot;,e.Message);\n      Console.WriteLine(&quot;<br>{0}&quot;,e.Status);\n    } \n    catch(Exception e)\n    {\n      Console.WriteLine(&quot;Exception raised!&quot;);\n      Console.WriteLine(&quot;Source : &quot; + e.Source);\n      Console.WriteLine(&quot;Message : &quot; + e.Message);\n    }\n  }\n  private static  void ReadCallBack(IAsyncResult asyncResult)\n  {\n    try\n    {\n      // Result state is set to AsyncState.\n      RequestState myRequestState = (RequestState)asyncResult.AsyncState;\n      Stream responseStream = myRequestState.responseStream;\n      int read = responseStream.EndRead( asyncResult );\n      // Read the contents of the HTML page and then print to the console.\n      if (read &gt; 0)\n      {\n        myRequestState.requestData.Append(Encoding.ASCII.GetString(myRequestState.bufferRead, 0, read));\n        IAsyncResult asynchronousResult = responseStream.BeginRead( myRequestState.bufferRead, 0, BUFFER_SIZE, new AsyncCallback(ReadCallBack), myRequestState);\n      }\n      else\n      {\n        Console.WriteLine(&quot;<br>The HTML page Contents are:  &quot;);\n        if(myRequestState.requestData.Length&gt;1)\n        {\n          string sringContent;\n          sringContent = myRequestState.requestData.ToString();\n          Console.WriteLine(sringContent);\n        }\n        Console.WriteLine(&quot;<br>Press &#39;Enter&#39; key to continue........&quot;);\n        responseStream.Close();\n        allDone.Set();\n      }\n    }\n    catch(WebException e)\n    {\n      Console.WriteLine(&quot;WebException raised!&quot;);\n      Console.WriteLine(&quot;<br>{0}&quot;,e.Message);\n      Console.WriteLine(&quot;<br>{0}&quot;,e.Status);\n    } \n    catch(Exception e)\n    {\n      Console.WriteLine(&quot;Exception raised!&quot;);\n      Console.WriteLine(&quot;Source : {0}&quot; , e.Source);\n      Console.WriteLine(&quot;Message : {0}&quot; , e.Message);\n    }\n\n  }\n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Net_WebRequest_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetObjectData(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Populates a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> with the data needed to serialize the target object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializationInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> to populate with data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>streamingContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> that specifies the destination for this serialization.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Any objects included in the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> are automatically tracked and serialized by the formatter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_GetRequestStream\">\r\n    \r\n            <a id=\"System_Net_WebRequest_GetRequestStream_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetRequestStream()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a descendant class, returns a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> for writing data to the Internet resource.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.IO.Stream GetRequestStream ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> for writing data to the Internet resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Any attempt is made to access the method, when the method is not overridden in a descendant class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GetRequestStream method initiates a request to send data to the Internet resource and returns a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance for sending data to the Internet resource.  </p>\n<p> The GetRequestStream method provides synchronous access to the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>. For asynchronous access, use the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_BeginGetRequestStream_\" data-linktype=\"relative-path\">BeginGetRequestStream</a> and <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_EndGetRequestStream_\" data-linktype=\"relative-path\">EndGetRequestStream</a> methods.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class is an <code>abstract</code> class. The actual behavior of <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instances at run time is determined by the descendant class returned by the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method. For more information about default values and exceptions, see the documentation for the descendant classes, such as <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> and <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the GetRequestStream method to obtain a stream and then writes data that stream.  </p>\n<pre><code class=\"lang-cs\" name=\"WebRequest_ContentType#4\">\n\t\t\t// Set the &#39;ContentType&#39; property of the WebRequest.\n\t\t\tmyWebRequest.ContentType=&quot;application/x-www-form-urlencoded&quot;;\n\n\t\t\t// Set the &#39;ContentLength&#39; property of the WebRequest.\n\t\t\tmyWebRequest.ContentLength=byteArray.Length;\n\t\t\tStream newStream=myWebRequest.GetRequestStream();\n\t\t\tnewStream.Write(byteArray,0,byteArray.Length);\n\n\t\t\t// Close the Stream object.\n\t\t\tnewStream.Close();\n\n\t\t\t// Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n\t\t\tWebResponse myWebResponse=myWebRequest.GetResponse();\n\t\t\t\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebRequest_ContentType#4\">      // Set the &#39;ContentType&#39; property of the WebRequest.\n      myWebRequest-&gt;ContentType = &quot;application/x-www-form-urlencoded&quot;;\n      \n      // Set the &#39;ContentLength&#39; property of the WebRequest.\n      myWebRequest-&gt;ContentLength = byteArray-&gt;Length;\n      Stream^ newStream = myWebRequest-&gt;GetRequestStream();\n      newStream-&gt;Write( byteArray, 0, byteArray-&gt;Length );\n      \n      // Close the Stream object.\n      newStream-&gt;Close();\n      \n      // Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n      WebResponse^ myWebResponse = myWebRequest-&gt;GetResponse();\n</code></pre><pre><code class=\"lang-vb\" name=\"WebRequest_ContentType#4\">\n\n            &#39; Set the &#39;ContentType&#39; property of the WebRequest.\n            myWebRequest.ContentType = &quot;application/x-www-form-urlencoded&quot;\n\n            &#39; Set the &#39;ContentLength&#39; property of the WebRequest.\n            myWebRequest.ContentLength = byteArray.Length\n            Dim newStream As Stream = myWebRequest.GetRequestStream()\n            newStream.Write(byteArray, 0, byteArray.Length)\n\n            &#39; Close the Stream object.\n            newStream.Close()\n\n            &#39; Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n            Dim myWebResponse As WebResponse = myWebRequest.GetResponse()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_GetRequestStreamAsync\">\r\n    \r\n            <a id=\"System_Net_WebRequest_GetRequestStreamAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetRequestStreamAsync()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a descendant class, returns a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> for writing data to the Internet resource as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetRequestStreamAsync ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a>object will complete when the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> for writing data to the Internet resource is available.  </p>\n<p> After you call GetRequestStreamAsync, make sure you close the request stream before you call <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_GetResponseAsync_\" data-linktype=\"relative-path\">GetResponseAsync</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_GetResponse\">\r\n    \r\n            <a id=\"System_Net_WebRequest_GetResponse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetResponse()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a descendant class, returns a response to an Internet request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Net.WebResponse GetResponse ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> containing the response to the Internet request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Any attempt is made to access the method, when the method is not overridden in a descendant class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GetResponse method sends a request to an Internet resource and returns a <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> instance. If the request has already been initiated by a call to <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_GetRequestStream_\" data-linktype=\"relative-path\">GetRequestStream</a>, the GetResponse method completes the request and returns any response.  </p>\n<p> The GetResponse method provides synchronous access to the <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a>. For asynchronous access, use the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_BeginGetResponse_\" data-linktype=\"relative-path\">BeginGetResponse</a> and <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_EndGetResponse_\" data-linktype=\"relative-path\">EndGetResponse</a> methods.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class is an <code>abstract</code> class. The actual behavior of <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> instances at run time is determined by the descendant class returned by the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method. For more information about default values and exceptions, see the documentation for the descendant classes, such as <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> and <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a>.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> If a WebException is thrown, use the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Response_\" data-linktype=\"relative-path\">Response</a> and <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> properties of the exception to determine the response from the server.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example sets the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Timeout_\" data-linktype=\"relative-path\">Timeout</a> property to 10000 milliseconds. If the timeout period expires before the resource can be returned, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown.  </p>\n<pre><code class=\"lang-cs\" name=\"WebRequest_Timeout#1\">\n                     // Create a new WebRequest Object to the mentioned URL.\n\t\t\tWebRequest myWebRequest=WebRequest.Create(&quot;http://www.contoso.com&quot;);\n\t\t\tConsole.WriteLine(&quot;<br>The Timeout time of the request before setting is : {0} milliseconds&quot;,myWebRequest.Timeout);\n\n\t\t\t// Set the &#39;Timeout&#39; property in Milliseconds.\n\t\t\tmyWebRequest.Timeout=10000;\n\n\t\t\t// This request will throw a WebException if it reaches the timeout limit before it is able to fetch the resource.\n                     WebResponse myWebResponse=myWebRequest.GetResponse();\n\t\t\t\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebRequest_Timeout#1\">      // Create a new WebRequest Object to the mentioned URL.\n      WebRequest^ myWebRequest = WebRequest::Create( &quot;http://www.contoso.com&quot; );\n      Console::WriteLine( &quot;<br>The Timeout time of the request before setting is : {0} milliseconds&quot;, myWebRequest-&gt;Timeout );\n      \n      // Set the &#39;Timeout&#39; property in Milliseconds.\n      myWebRequest-&gt;Timeout = 10000;\n      \n      // This request will throw a WebException if it reaches the timeout limit\n      // before it is able to fetch the resource.\n      WebResponse^ myWebResponse = myWebRequest-&gt;GetResponse();\n</code></pre><pre><code class=\"lang-vb\" name=\"WebRequest_Timeout#1\">\n            &#39; Create a new WebRequest Object to the mentioned URL.\n            Dim myWebRequest As WebRequest = WebRequest.Create(&quot;http://www.contoso.com&quot;)\n            Console.WriteLine(ControlChars.Cr + &quot;The Timeout time of the request before setting is : {0} milliseconds&quot;, myWebRequest.Timeout)\n\n            &#39; Set the &#39;Timeout&#39; property in Milliseconds.\n\t     myWebRequest.Timeout = 10000\n\n           &#39; Assign the response object of &#39;WebRequest&#39; to a &#39;WebResponse&#39; variable.\n            Dim myWebResponse As WebResponse = myWebRequest.GetResponse()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_GetResponseAsync\">\r\n    \r\n            <a id=\"System_Net_WebRequest_GetResponseAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetResponseAsync()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a descendant class, returns a response to an Internet request as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt; GetResponseAsync ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after a response to an Internet request is available.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_GetSystemWebProxy\">\r\n    \r\n            <a id=\"System_Net_WebRequest_GetSystemWebProxy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSystemWebProxy()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a proxy configured with the Internet Explorer settings of the currently impersonated user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Net.IWebProxy GetSystemWebProxy ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.iwebproxy\" data-linktype=\"relative-path\">IWebProxy</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.net.iwebproxy\" data-linktype=\"relative-path\">IWebProxy</a> used by every call to instances of <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>GetSystemWebProxy method reads the current user&#39;s Internet Explorer (IE) proxy settings. This process includes the IE options to automatically detect proxy settings, use an automatic configuration script, manual proxy server settings, and advanced manual proxy server settings.  </p>\n<p> If your application is impersonating several users, you can use the GetSystemWebProxy method to retrieve a proxy for each impersonated user.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_RegisterPortableWebRequestCreator_System_Net_IWebRequestCreate_\">\r\n    \r\n            <a id=\"System_Net_WebRequest_RegisterPortableWebRequestCreator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterPortableWebRequestCreator(IWebRequestCreate)</div>        \r\n          </div>\r\n    \r\n            <p>Register an <a class=\"xref\" href=\"system.net.iwebrequestcreate\" data-linktype=\"relative-path\">IWebRequestCreate</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RegisterPortableWebRequestCreator (System.Net.IWebRequestCreate creator);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>creator</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.iwebrequestcreate\" data-linktype=\"relative-path\">IWebRequestCreate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.net.iwebrequestcreate\" data-linktype=\"relative-path\">IWebRequestCreate</a> object to register.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_RegisterPrefix_System_String_System_Net_IWebRequestCreate_\">\r\n    \r\n            <a id=\"System_Net_WebRequest_RegisterPrefix_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterPrefix(String,IWebRequestCreate)</div>        \r\n          </div>\r\n    \r\n            <p>Registers a <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> descendant for the specified URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool RegisterPrefix (string prefix, System.Net.IWebRequestCreate creator);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>prefix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The complete URI or URI prefix that the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> descendant services.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>creator</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.iwebrequestcreate\" data-linktype=\"relative-path\">IWebRequestCreate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The create method that the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> calls to create the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> descendant.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if registration is successful; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>prefix</code> is <code>null</code>  </p>\n<p> -or-  </p>\n<p> <code>creator</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RegisterPrefix method registers <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> descendants to service requests. <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> descendants are typically registered to handle a specific protocol, such HTTP or FTP, but can be registered to handle a request to a specific server or path on a server.  </p>\n<p> The pre-registered reserve types already registered include the following:  </p>\n<ul>\n<li><p><code>http://</code>  </p>\n</li>\n<li><p><code>https://</code>  </p>\n</li>\n<li><p><code>ftp://</code>  </p>\n</li>\n<li><p><code>file://</code>  </p>\n<p>For more information, see the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_System_String_\" data-linktype=\"relative-path\">Create(String)</a> and <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_System_Uri_\" data-linktype=\"relative-path\">Create(Uri)</a> methods.  </p>\n<p>Duplicate prefixes are not allowed. RegisterPrefix returns <code>false</code> if an attempt is made to register a duplicate prefix.  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> class is registered to service requests for HTTP and HTTPS schemes by default. Attempts to register a different <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> descendant for these schemes will fail.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebRequest_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Net_WebRequest_System_Runtime_Serialization_ISerializable_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a descendant class, populates a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> instance with the data needed to serialize the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializationInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>, which holds the serialized data for the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>streamingContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> that contains the destination of the serialized stream associated with the new <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>An attempt is made to serialize the object, when the interface is not overridden in a descendant class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.WebRequest.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.Abort\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.AuthenticationLevel\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.BeginGetRequestStream\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.BeginGetResponse\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.CachePolicy\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.ConnectionGroupName\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.ContentLength\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.ContentType\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.Create\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.CreateDefault\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.CreateHttp\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.CreatorInstance\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.Credentials\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.DefaultCachePolicy\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.DefaultWebProxy\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.EndGetRequestStream\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.EndGetResponse\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.GetRequestStream\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.GetRequestStreamAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.GetResponse\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.GetResponseAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.GetSystemWebProxy\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.Headers\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.ImpersonationLevel\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.Method\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.PreAuthenticate\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.Proxy\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.RegisterPortableWebRequestCreator\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.RegisterPrefix\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.RequestUri\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.ISerializable.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.Timeout\">\r\n<meta name=\"APIName\" content=\"System.Net.WebRequest.UseDefaultCredentials\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-16 06:20 AM\">\r\n<meta name=\"document_id\" content=\"c65550f1-614d-1512-8c64-000ce76e67ca\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Makes a request to a Uniform Resource Identifier (URI). This is an abstract class.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.WebRequest\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.WebRequest.yml","open_to_public_contributors":true,"api_name":["System.Net.WebRequest","System.Net.WebRequest..ctor","System.Net.WebRequest.Abort","System.Net.WebRequest.AuthenticationLevel","System.Net.WebRequest.BeginGetRequestStream","System.Net.WebRequest.BeginGetResponse","System.Net.WebRequest.CachePolicy","System.Net.WebRequest.ConnectionGroupName","System.Net.WebRequest.ContentLength","System.Net.WebRequest.ContentType","System.Net.WebRequest.Create","System.Net.WebRequest.CreateDefault","System.Net.WebRequest.CreateHttp","System.Net.WebRequest.CreatorInstance","System.Net.WebRequest.Credentials","System.Net.WebRequest.DefaultCachePolicy","System.Net.WebRequest.DefaultWebProxy","System.Net.WebRequest.EndGetRequestStream","System.Net.WebRequest.EndGetResponse","System.Net.WebRequest.GetObjectData","System.Net.WebRequest.GetRequestStream","System.Net.WebRequest.GetRequestStreamAsync","System.Net.WebRequest.GetResponse","System.Net.WebRequest.GetResponseAsync","System.Net.WebRequest.GetSystemWebProxy","System.Net.WebRequest.Headers","System.Net.WebRequest.ImpersonationLevel","System.Net.WebRequest.Method","System.Net.WebRequest.PreAuthenticate","System.Net.WebRequest.Proxy","System.Net.WebRequest.RegisterPortableWebRequestCreator","System.Net.WebRequest.RegisterPrefix","System.Net.WebRequest.RequestUri","System.Net.WebRequest.ISerializable.GetObjectData","System.Net.WebRequest.Timeout","System.Net.WebRequest.UseDefaultCredentials"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.WebRequest","System::Net::WebRequest","System.Net.WebRequest.#ctor","System::Net::WebRequest::#ctor","System.Net.WebRequest.Abort","System::Net::WebRequest::Abort","System.Net.WebRequest.AuthenticationLevel","System::Net::WebRequest::AuthenticationLevel","System.Net.WebRequest.BeginGetRequestStream","System::Net::WebRequest::BeginGetRequestStream","System.Net.WebRequest.BeginGetResponse","System::Net::WebRequest::BeginGetResponse","System.Net.WebRequest.CachePolicy","System::Net::WebRequest::CachePolicy","System.Net.WebRequest.ConnectionGroupName","System::Net::WebRequest::ConnectionGroupName","System.Net.WebRequest.ContentLength","System::Net::WebRequest::ContentLength","System.Net.WebRequest.ContentType","System::Net::WebRequest::ContentType","System.Net.WebRequest.Create","System::Net::WebRequest::Create","System.Net.WebRequest.CreateDefault","System::Net::WebRequest::CreateDefault","System.Net.WebRequest.CreateHttp","System::Net::WebRequest::CreateHttp","System.Net.WebRequest.CreatorInstance","System::Net::WebRequest::CreatorInstance","System.Net.WebRequest.Credentials","System::Net::WebRequest::Credentials","System.Net.WebRequest.DefaultCachePolicy","System::Net::WebRequest::DefaultCachePolicy","System.Net.WebRequest.DefaultWebProxy","System::Net::WebRequest::DefaultWebProxy","System.Net.WebRequest.EndGetRequestStream","System::Net::WebRequest::EndGetRequestStream","System.Net.WebRequest.EndGetResponse","System::Net::WebRequest::EndGetResponse","System.Net.WebRequest.GetObjectData","System::Net::WebRequest::GetObjectData","System.Net.WebRequest.GetRequestStream","System::Net::WebRequest::GetRequestStream","System.Net.WebRequest.GetRequestStreamAsync","System::Net::WebRequest::GetRequestStreamAsync","System.Net.WebRequest.GetResponse","System::Net::WebRequest::GetResponse","System.Net.WebRequest.GetResponseAsync","System::Net::WebRequest::GetResponseAsync","System.Net.WebRequest.GetSystemWebProxy","System::Net::WebRequest::GetSystemWebProxy","System.Net.WebRequest.Headers","System::Net::WebRequest::Headers","System.Net.WebRequest.ImpersonationLevel","System::Net::WebRequest::ImpersonationLevel","System.Net.WebRequest.Method","System::Net::WebRequest::Method","System.Net.WebRequest.PreAuthenticate","System::Net::WebRequest::PreAuthenticate","System.Net.WebRequest.Proxy","System::Net::WebRequest::Proxy","System.Net.WebRequest.RegisterPortableWebRequestCreator","System::Net::WebRequest::RegisterPortableWebRequestCreator","System.Net.WebRequest.RegisterPrefix","System::Net::WebRequest::RegisterPrefix","System.Net.WebRequest.RequestUri","System::Net::WebRequest::RequestUri","System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData","System::Net::WebRequest::System#Runtime#Serialization#ISerializable#GetObjectData","System.Net.WebRequest.Timeout","System::Net::WebRequest::Timeout","System.Net.WebRequest.UseDefaultCredentials","System::Net::WebRequest::UseDefaultCredentials"],"dev_langs":["csharp"],"updated_at":"2017-03-16 06:20 AM","document_id":"c65550f1-614d-1512-8c64-000ce76e67ca","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net/WebRequest.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"WebRequest class | Microsoft Docs","_op_ogTitle":"WebRequest class","description":"Makes a request to a Uniform Resource Identifier (URI). This is an abstract class.\n","toc_asset_id":"_splitted/System.Net/toc.json","toc_rel":"_splitted/System.Net/toc.json","source_url":"","ms.assetid":"System.Net.WebRequest","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.webrequest","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.webrequest","fileRelativePath":"System.Net.WebRequest.html"},"themesRelativePathToOutputRoot":"_themes/"}