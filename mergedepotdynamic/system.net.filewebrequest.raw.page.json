{"content":"    \r\n    <h1 id=\"System_Net_FileWebRequest\">\r\n      <span class=\"lang-csharp\">FileWebRequest</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a file system implementation of the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class FileWebRequest : System.Net.WebRequest, System.Runtime.Serialization.ISerializable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">System.Net.WebRequest</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">FileWebRequest</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_AuthenticationLevel\" data-linktype=\"relative-path\">AuthenticationLevel</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_CachePolicy\" data-linktype=\"relative-path\">CachePolicy</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_System_String_\" data-linktype=\"relative-path\">Create(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_System_Uri_\" data-linktype=\"relative-path\">Create(Uri)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_CreateDefault_System_Uri_\" data-linktype=\"relative-path\">CreateDefault(Uri)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_CreateHttp_System_String_\" data-linktype=\"relative-path\">CreateHttp(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_CreateHttp_System_Uri_\" data-linktype=\"relative-path\">CreateHttp(Uri)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_CreatorInstance\" data-linktype=\"relative-path\">CreatorInstance</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_DefaultCachePolicy\" data-linktype=\"relative-path\">DefaultCachePolicy</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_DefaultWebProxy\" data-linktype=\"relative-path\">DefaultWebProxy</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_GetRequestStreamAsync\" data-linktype=\"relative-path\">GetRequestStreamAsync()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_GetResponseAsync\" data-linktype=\"relative-path\">GetResponseAsync()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_GetSystemWebProxy\" data-linktype=\"relative-path\">GetSystemWebProxy()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_ImpersonationLevel\" data-linktype=\"relative-path\">ImpersonationLevel</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_RegisterPortableWebRequestCreator_System_Net_IWebRequestCreate_\" data-linktype=\"relative-path\">RegisterPortableWebRequestCreator(IWebRequestCreate)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_RegisterPrefix_System_String_System_Net_IWebRequestCreate_\" data-linktype=\"relative-path\">RegisterPrefix(String,IWebRequestCreate)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The FileWebRequest class implements the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a><code>abstract</code> base class for Uniform Resource Identifiers (URIs) that use the <code>file://</code> scheme to request local files.  </p>\n<p> Do not use the <a class=\"xref\" href=\"system.net.filewebrequest#System_Net_FileWebRequest__ctor_\" data-linktype=\"relative-path\">FileWebRequest</a> constructor. Use the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method to initialize new instances of the FileWebRequest class. If the URI scheme is <code>file://</code>, the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Create_\" data-linktype=\"relative-path\">Create</a> method returns a FileWebRequest object.  </p>\n<p> The <a class=\"xref\" href=\"system.net.filewebrequest#System_Net_FileWebRequest_GetResponse_\" data-linktype=\"relative-path\">GetResponse</a> method makes a synchronous request for the file specified in the <a class=\"xref\" href=\"system.net.filewebrequest#System_Net_FileWebRequest_RequestUri_\" data-linktype=\"relative-path\">RequestUri</a> property and returns a <a class=\"xref\" href=\"system.net.filewebresponse\" data-linktype=\"relative-path\">FileWebResponse</a> object that contains the response. You can make an asynchronous request for the file using the <a class=\"xref\" href=\"system.net.filewebrequest#System_Net_FileWebRequest_BeginGetResponse_\" data-linktype=\"relative-path\">BeginGetResponse</a> and <a class=\"xref\" href=\"system.net.filewebrequest#System_Net_FileWebRequest_EndGetResponse_\" data-linktype=\"relative-path\">EndGetResponse</a> methods.  </p>\n<p> When you want to write data to a file, the <a class=\"xref\" href=\"system.net.filewebrequest#System_Net_FileWebRequest_GetRequestStream_\" data-linktype=\"relative-path\">GetRequestStream</a> method returns a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance to write to. The <a class=\"xref\" href=\"system.net.filewebrequest#System_Net_FileWebRequest_BeginGetRequestStream_\" data-linktype=\"relative-path\">BeginGetRequestStream</a> and <a class=\"xref\" href=\"system.net.filewebrequest#System_Net_FileWebRequest_EndGetRequestStream_\" data-linktype=\"relative-path\">EndGetRequestStream</a> methods provide asynchronous access to the write data stream.  </p>\n<p> The FileWebRequest class relies on the <a class=\"xref\" href=\"system.io.file\" data-linktype=\"relative-path\">File</a> class for error handling and code access security.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FileWebRequest__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">FileWebRequest(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a> class from the specified instances of the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> and <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> classes.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FileWebRequest_ConnectionGroupName\" data-linktype=\"self-bookmark\">ConnectionGroupName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the connection group for the request. This property is reserved for future use.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FileWebRequest_ContentLength\" data-linktype=\"self-bookmark\">ContentLength</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the content length of the data being sent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FileWebRequest_ContentType\" data-linktype=\"self-bookmark\">ContentType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the content type of the data being sent. This property is reserved for future use.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FileWebRequest_Credentials\" data-linktype=\"self-bookmark\">Credentials</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the credentials that are associated with this request. This property is reserved for future use.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FileWebRequest_Headers\" data-linktype=\"self-bookmark\">Headers</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of the name/value pairs that are associated with the request. This property is reserved for future use.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FileWebRequest_Method\" data-linktype=\"self-bookmark\">Method</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the protocol method used for the request. This property is reserved for future use.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FileWebRequest_PreAuthenticate\" data-linktype=\"self-bookmark\">PreAuthenticate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether to preauthenticate a request. This property is reserved for future use.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FileWebRequest_Proxy\" data-linktype=\"self-bookmark\">Proxy</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the network proxy to use for this request. This property is reserved for future use.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FileWebRequest_RequestUri\" data-linktype=\"self-bookmark\">RequestUri</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the Uniform Resource Identifier (URI) of the request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FileWebRequest_Timeout\" data-linktype=\"self-bookmark\">Timeout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the length of time until the request times out.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FileWebRequest_UseDefaultCredentials\" data-linktype=\"self-bookmark\">UseDefaultCredentials</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Always throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FileWebRequest_Abort\" data-linktype=\"self-bookmark\">Abort()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Cancels a request to an Internet resource.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FileWebRequest_BeginGetRequestStream_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginGetRequestStream(AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Begins an asynchronous request for a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object to use to write data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FileWebRequest_BeginGetResponse_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginGetResponse(AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Begins an asynchronous request for a file system resource.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FileWebRequest_EndGetRequestStream_System_IAsyncResult_\" data-linktype=\"self-bookmark\">EndGetRequestStream(IAsyncResult)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Ends an asynchronous request for a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance that the application uses to write data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FileWebRequest_EndGetResponse_System_IAsyncResult_\" data-linktype=\"self-bookmark\">EndGetResponse(IAsyncResult)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Ends an asynchronous request for a file system resource.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FileWebRequest_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">GetObjectData(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Populates a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> with the data needed to serialize the target object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FileWebRequest_GetRequestStream\" data-linktype=\"self-bookmark\">GetRequestStream()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object for writing data to the file system resource.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FileWebRequest_GetResponse\" data-linktype=\"self-bookmark\">GetResponse()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a response to a file system request.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FileWebRequest_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Populates a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object with the required data to serialize the <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FileWebRequest__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Net_FileWebRequest__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FileWebRequest(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a> class from the specified instances of the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> and <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> classes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected FileWebRequest (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializationInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object that contains the information that is required to serialize the new <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a> object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>streamingContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> object that contains the source of the serialized stream that is associated with the new <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor implements the <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface for the <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FileWebRequest_ConnectionGroupName\">\r\n    \r\n            <a id=\"System_Net_FileWebRequest_ConnectionGroupName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConnectionGroupName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the connection group for the request. This property is reserved for future use.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ConnectionGroupName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the connection group for the request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ConnectionGroupName property is currently not used by the <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FileWebRequest_ContentLength\">\r\n    \r\n            <a id=\"System_Net_FileWebRequest_ContentLength_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContentLength</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the content length of the data being sent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override long ContentLength { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The number of bytes of request data being sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>ContentLength is less than 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example sets the content length of the data being sent. Refer to the complete example in the <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Net.FileWebRequest#4\">                // Set the ContentLength property.\n                myFileWebRequest.ContentLength = byteArray.Length;\n\n                string contentLength = myFileWebRequest.ContentLength.ToString ();\n\n                Console.WriteLine (&quot;<br>The content length is {0}.&quot;, contentLength);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Net.FileWebRequest#4\">                    &#39; Set the ContentLength property.\n                    myFileWebRequest.ContentLength = byteArray.Length\n\n                    Dim contentLength As String = myFileWebRequest.ContentLength.ToString()\n\n                    Console.WriteLine(ControlChars.Lf + &quot;The content length is {0}.&quot;, contentLength)\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Net.FileWebRequest#4\">         // Set the ContentLength property.\n         myFileWebRequest-&gt;ContentLength = byteArray-&gt;Length;\n         String^ contentLength = myFileWebRequest-&gt;ContentLength.ToString();\n         Console::WriteLine( &quot;<br>The content length is {0}.&quot;, contentLength );\n         \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FileWebRequest_ContentType\">\r\n    \r\n            <a id=\"System_Net_FileWebRequest_ContentType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContentType</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the content type of the data being sent. This property is reserved for future use.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ContentType { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The content type of the data being sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ContentType property contains the media type of the data being sent. This is typically the MIME encoding of the content. The ContentType property is currently not used by the <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FileWebRequest_Credentials\">\r\n    \r\n            <a id=\"System_Net_FileWebRequest_Credentials_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Credentials</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the credentials that are associated with this request. This property is reserved for future use.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Net.ICredentials Credentials { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.icredentials\" data-linktype=\"relative-path\">ICredentials</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.net.icredentials\" data-linktype=\"relative-path\">ICredentials</a> that contains the authentication credentials that are associated with this request. The default is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Because the <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a> class does not authenticate requests for files from the local file system, it ignores the contents, if any, of the Credentials property. Authentication for <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a> is handled by the access control lists for the file resource in the underlying file system.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FileWebRequest_Headers\">\r\n    \r\n            <a id=\"System_Net_FileWebRequest_Headers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Headers</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of the name/value pairs that are associated with the request. This property is reserved for future use.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Net.WebHeaderCollection Headers { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a> that contains header name/value pairs associated with this request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Headers property is currently not used by the <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FileWebRequest_Method\">\r\n    \r\n            <a id=\"System_Net_FileWebRequest_Method_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Method</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the protocol method used for the request. This property is reserved for future use.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string Method { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The protocol method to use in this request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The method is invalid.  </p>\n<p> - or -  </p>\n<p> The method is not supported.  </p>\n<p> - or -  </p>\n<p> Multiple methods were specified.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Method property is currently not used by the <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example sets the protocol method used for the request. Refer to the complete example in the <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Net.FileWebRequest#2\">                // Create a Uri object. \n                Uri myUrl = new Uri (&quot;file://&quot; + fileName);\n\n                // Create a FileWebRequest object.\n                myFileWebRequest = (FileWebRequest)WebRequest.CreateDefault (myUrl);\n\n                // Set the time-out to the value selected by the user.\n                myFileWebRequest.Timeout = timeout;\n\n                // Set the Method property to POST  \n                myFileWebRequest.Method = &quot;POST&quot;;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Net.FileWebRequest#2\">                    &#39; Create a Uri object.to access the file requested by the user. \n                    Dim myUrl As New Uri(&quot;file://&quot; + fileName)\n\n                    &#39; Create a FileWebRequest object.for the requeste file.\n                    myFileWebRequest = CType(WebRequest.CreateDefault(myUrl), FileWebRequest)\n\n                    &#39; Set the time-out to the value selected by the user.\n                    myFileWebRequest.Timeout = timeout\n\n                    &#39; Set the Method property to POST  \n                    myFileWebRequest.Method = &quot;POST&quot;\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Net.FileWebRequest#2\">         // Create a Uri object.\n         Uri^ myUrl = gcnew Uri( String::Format( &quot;file://{0}&quot;, fileName ) );\n         \n         // Create a FileWebRequest object.\n         myFileWebRequest = dynamic_cast&lt;FileWebRequest^&gt;(WebRequest::CreateDefault( myUrl ));\n         \n         // Set the timeout to the value selected by the user.\n         myFileWebRequest-&gt;Timeout = timeout;\n         \n         // Set the Method property to POST\n         myFileWebRequest-&gt;Method = &quot;POST&quot;;\n         \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FileWebRequest_PreAuthenticate\">\r\n    \r\n            <a id=\"System_Net_FileWebRequest_PreAuthenticate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PreAuthenticate</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether to preauthenticate a request. This property is reserved for future use.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool PreAuthenticate { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to preauthenticate; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The PreAuthenticate property is currently not used by the <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FileWebRequest_Proxy\">\r\n    \r\n            <a id=\"System_Net_FileWebRequest_Proxy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Proxy</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the network proxy to use for this request. This property is reserved for future use.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Net.IWebProxy Proxy { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.iwebproxy\" data-linktype=\"relative-path\">IWebProxy</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.net.iwebproxy\" data-linktype=\"relative-path\">IWebProxy</a> that indicates the network proxy to use for this request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Proxy property is currently not used by the <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FileWebRequest_RequestUri\">\r\n    \r\n            <a id=\"System_Net_FileWebRequest_RequestUri_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RequestUri</div>        \r\n          </div>\r\n    \r\n            <p>Gets the Uniform Resource Identifier (URI) of the request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override Uri RequestUri { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> that contains the URI of the request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the RequestUri property to get the URI of the request.  </p>\n<pre><code class=\"lang-cs\" name=\"FileWebRequest_ContentLength#2\">                  // Compare the file name and &#39;RequestUri&#39; is same or not.\n                  if(myFileWebRequest.RequestUri.Equals(myUrl))\n                  {\n                      // &#39;GetRequestStream&#39; method returns the stream handler for writing into the file.\n                      Stream readStream =myFileWebRequest.GetRequestStream();\n                      // Write to the stream\n                      readStream.Write(byteArray,0,userInput.Length);\n                     readStream.Close();\n                  }\n\n                  Console.WriteLine(&quot;<br>The String you entered was successfully written into the file.&quot;);    \n                  Console.WriteLine(&quot;The content length sent to the server is &quot;+myFileWebRequest.ContentLength+&quot;.&quot;);    \n                  \n</code></pre><pre><code class=\"lang-vb\" name=\"FileWebRequest_ContentLength#2\">                &#39; Compare the file name and &#39;RequestUri&#39; is same or not.\n                If myFileWebRequest.RequestUri.Equals(myUrl) Then\n                    &#39;&#39;GetRequestStream&#39; method returns the stream handler for writing into the file.\n                    Dim readStream As Stream = myFileWebRequest.GetRequestStream()\n                    &#39; Write to the stream.\n                    readStream.Write(byteArray, 0, userInput.Length)\n                    readStream.Close()\n                End If\n\n                Console.WriteLine(&quot;The String you entered was successfully written into the file.&quot;)\n                Console.WriteLine((ControlChars.Cr +&quot;The content length sent to the server is &quot; + myFileWebRequest.ContentLength.ToString() + &quot;.&quot;))\n</code></pre><pre><code class=\"lang-cpp\" name=\"FileWebRequest_ContentLength#2\">         // Compare the file name and &#39;RequestUri&#39; is same or not.\n         if ( myFileWebRequest-&gt;RequestUri-&gt;Equals( myUrl ) )\n         {\n            // &#39;GetRequestStream&#39; method returns the stream handler for writing into the file.\n            Stream^ readStream = myFileWebRequest-&gt;GetRequestStream();\n            // Write to the stream\n            readStream-&gt;Write( byteArray, 0, userInput-&gt;Length );\n            readStream-&gt;Close();\n         }\n\n         Console::WriteLine( &quot;<br>The String you entered was successfully written into the file.&quot; );\n         Console::WriteLine( &quot;The content length sent to the server is {0}.&quot;, myFileWebRequest-&gt;ContentLength );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FileWebRequest_Timeout\">\r\n    \r\n            <a id=\"System_Net_FileWebRequest_Timeout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Timeout</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the length of time until the request times out.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int Timeout { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The time, in milliseconds, until the request times out, or the value <a class=\"xref\" href=\"system.threading.timeout#System_Threading_Timeout_Infinite\" data-linktype=\"relative-path\">Infinite</a> to indicate that the request does not time out.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value specified is less than or equal to zero and is not <a class=\"xref\" href=\"system.threading.timeout#System_Threading_Timeout_Infinite\" data-linktype=\"relative-path\">Infinite</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A Domain Name System (DNS) query may take up to 15 seconds to return or time out. If your request contains a host name that requires resolution and you set Timeout to a value less than 15 seconds, it may take 15 seconds or more before a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown to indicate a time-out on your request.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example sets the Timeout property. Refer to the complete example in the <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Net.FileWebRequest#3\">                // Create a Uri object. \n                Uri myUrl = new Uri (&quot;file://&quot; + fileName);\n\n                // Create a FileWebRequest object.\n                myFileWebRequest = (FileWebRequest)WebRequest.CreateDefault (myUrl);\n\n                // Set the time-out to the value selected by the user.\n                myFileWebRequest.Timeout = timeout;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Net.FileWebRequest#3\">                    &#39; Create a Uri object.to access the file requested by the user. \n                    Dim myUrl As New Uri(&quot;file://&quot; + fileName)\n\n                    &#39; Create a FileWebRequest object.for the requeste file.\n                    myFileWebRequest = CType(WebRequest.CreateDefault(myUrl), FileWebRequest)\n\n                    &#39; Set the time-out to the value selected by the user.\n                    myFileWebRequest.Timeout = timeout\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Net.FileWebRequest#3\">         // Create a Uri object.\n         Uri^ myUrl = gcnew Uri( String::Format( &quot;file://{0}&quot;, fileName ) );\n         \n         // Create a FileWebRequest object.\n         myFileWebRequest = dynamic_cast&lt;FileWebRequest^&gt;(WebRequest::CreateDefault( myUrl ));\n         \n         // Set the timeout to the value selected by the user.\n         myFileWebRequest-&gt;Timeout = timeout;\n         \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FileWebRequest_UseDefaultCredentials\">\r\n    \r\n            <a id=\"System_Net_FileWebRequest_UseDefaultCredentials_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UseDefaultCredentials</div>        \r\n          </div>\r\n    \r\n            <p>Always throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool UseDefaultCredentials { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Always throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Default credentials are not supported for file Uniform Resource Identifiers (URIs).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The UseDefaultCredentials property is provided only for compatibility with other implementations of the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> and <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> classes. There is no reason to use UseDefaultCredentials.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FileWebRequest_Abort\">\r\n    \r\n            <a id=\"System_Net_FileWebRequest_Abort_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Abort()</div>        \r\n          </div>\r\n    \r\n            <p>Cancels a request to an Internet resource.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Abort ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Abort method cancels a request to a resource. After a request is canceled, calling the <a class=\"xref\" href=\"system.net.filewebrequest#System_Net_FileWebRequest_GetResponse_\" data-linktype=\"relative-path\">GetResponse</a>, <a class=\"xref\" href=\"system.net.filewebrequest#System_Net_FileWebRequest_BeginGetResponse_\" data-linktype=\"relative-path\">BeginGetResponse</a>, <a class=\"xref\" href=\"system.net.filewebrequest#System_Net_FileWebRequest_EndGetResponse_\" data-linktype=\"relative-path\">EndGetResponse</a>, <a class=\"xref\" href=\"system.net.filewebrequest#System_Net_FileWebRequest_GetRequestStream_\" data-linktype=\"relative-path\">GetRequestStream</a>, <a class=\"xref\" href=\"system.net.filewebrequest#System_Net_FileWebRequest_BeginGetRequestStream_\" data-linktype=\"relative-path\">BeginGetRequestStream</a>, or <a class=\"xref\" href=\"system.net.filewebrequest#System_Net_FileWebRequest_EndGetRequestStream_\" data-linktype=\"relative-path\">EndGetRequestStream</a> method causes a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to <a class=\"xref\" href=\"system.net.webexceptionstatus\" data-linktype=\"relative-path\">WebExceptionStatus</a>.  </p>\n<p> <strong>Note</strong> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FileWebRequest_BeginGetRequestStream_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_Net_FileWebRequest_BeginGetRequestStream_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginGetRequestStream(AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Begins an asynchronous request for a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object to use to write data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that contains state information for this request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that references the asynchronous request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.protocolviolationexception\" data-linktype=\"relative-path\">ProtocolViolationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Net.FileWebRequest.Method*</span> property is <code>GET</code> and the application writes to the stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The stream is being used by a previous call to BeginGetRequestStream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.applicationexception\" data-linktype=\"relative-path\">ApplicationException</a></div>\r\n                  </div>\r\n                  <p>No write stream is available.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a> was aborted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The BeginGetRequestStream method starts an asynchronous request for a stream used to send data to a file system resource. The callback method that implements the <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate uses the <a class=\"xref\" href=\"system.net.filewebrequest#System_Net_FileWebRequest_EndGetRequestStream_\" data-linktype=\"relative-path\">EndGetRequestStream</a> method to return the request stream.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses BeginGetRequestStream to make an asynchronous request for a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object.  </p>\n<pre><code class=\"lang-cpp\" name=\"FileWebRequest_ReqBeginEnd#2\">public ref class RequestDeclare\n{\npublic:\n   FileWebRequest^ myFileWebRequest;\n   String^ userinput;\n   RequestDeclare()\n   {\n      myFileWebRequest = nullptr;\n   }\n\n};\n\nref class FileWebRequest_reqbeginend\n{\npublic:\n   static ManualResetEvent^ allDone = gcnew ManualResetEvent( false );\n   static void ReadCallback( IAsyncResult^ ar )\n   {\n      try\n      {\n         \n         // State of the request is asynchronous.\n         RequestDeclare^ requestDeclare = dynamic_cast&lt;RequestDeclare^&gt;(ar-&gt;AsyncState);\n         FileWebRequest^ myFileWebRequest = requestDeclare-&gt;myFileWebRequest;\n         String^ sendToFile = requestDeclare-&gt;userinput;\n         \n         // End the Asynchronus request by calling the &#39;EndGetRequestStream()&#39; method.\n         Stream^ readStream = myFileWebRequest-&gt;EndGetRequestStream( ar );\n         \n         // Convert the String* into Byte array.\n         ASCIIEncoding^ encoder = gcnew ASCIIEncoding;\n         array&lt;Byte&gt;^byteArray = encoder-&gt;GetBytes( sendToFile );\n         \n         // Write to the stream.\n         readStream-&gt;Write( byteArray, 0, sendToFile-&gt;Length );\n         readStream-&gt;Close();\n         allDone-&gt;Set();\n         Console::WriteLine( &quot;<br>The String you entered was successfully written into the file.&quot; );\n         Console::WriteLine( &quot;<br>Press Enter to continue.&quot; );\n      }\n      catch ( ApplicationException^ e ) \n      {\n         Console::WriteLine( &quot;ApplicationException is : {0}&quot;, e-&gt;Message );\n      }\n\n   }\n\n};\n\nint main()\n{\n   array&lt;String^&gt;^args = Environment::GetCommandLineArgs();\n   if ( args-&gt;Length &lt; 2 )\n   {\n      Console::WriteLine( &quot;<br>Please enter the file name as command line parameter:&quot; );\n      Console::WriteLine( &quot;Usage:FileWebRequest_reqbeginend &lt;systemname&gt;/&lt;sharedfoldername&gt;/&lt;filename&gt;<br>&quot; );\n      Console::WriteLine( &quot;Example:FileWebRequest_reqbeginend shafeeque/shaf/hello.txt&quot; );\n   }\n   else\n   {\n      try\n      {\n         \n         // Place a webrequest.\n         WebRequest^ myWebRequest = WebRequest::Create( String::Concat( &quot;file://&quot;, args[ 1 ] ) );\n         \n         // Create an instance of the &#39;RequestDeclare&#39; and associate the &#39;myWebRequest&#39; to it.\n         RequestDeclare^ requestDeclare = gcnew RequestDeclare;\n         requestDeclare-&gt;myFileWebRequest = dynamic_cast&lt;FileWebRequest^&gt;(myWebRequest);\n         \n         // Set the &#39;Method&#39; property of &#39;FileWebRequest&#39; Object* to &#39;POST&#39; method.\n         requestDeclare-&gt;myFileWebRequest-&gt;Method = &quot;POST&quot;;\n         Console::WriteLine( &quot;Enter the String* you want to write into the file:&quot; );\n         requestDeclare-&gt;userinput = Console::ReadLine();\n         \n         // Begin the Asynchronous request for getting file content using &#39;BeginGetRequestStream()&#39; method .\n         IAsyncResult^ r = dynamic_cast&lt;IAsyncResult^&gt;(requestDeclare-&gt;myFileWebRequest-&gt;BeginGetRequestStream( gcnew AsyncCallback( &amp;FileWebRequest_reqbeginend::ReadCallback ), requestDeclare ));\n         FileWebRequest_reqbeginend::allDone-&gt;WaitOne();\n         Console::Read();\n      }\n      catch ( ProtocolViolationException^ e ) \n      {\n         Console::WriteLine( &quot;ProtocolViolationException is : {0}&quot;, e-&gt;Message );\n      }\n      catch ( InvalidOperationException^ e ) \n      {\n         Console::WriteLine( &quot;InvalidOperationException is : {0}&quot;, e-&gt;Message );\n      }\n      catch ( UriFormatException^ e ) \n      {\n         Console::WriteLine( &quot;UriFormatExceptionException is : {0}&quot;, e-&gt;Message );\n      }\n\n   }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"FileWebRequest_ReqBeginEnd#2\">\n\tpublic class RequestDeclare\n\t{\n\t\t public FileWebRequest myFileWebRequest;\t\n\t\t public String userinput;\n       \n \t\tpublic RequestDeclare()\n\t\t{\n\t\t\tmyFileWebRequest = null;\n\t\t}\n\t}\n\t\n\tclass FileWebRequest_reqbeginend\n\t{\n\t\tpublic static ManualResetEvent allDone = new ManualResetEvent(false);\n\n\t\tstatic void Main(string[] args)\n\t\t{\n\t\t  if (args.Length &lt; 1)\n\t\t  {\n   \t\t    Console.WriteLine(&quot;<br>Please enter the file name as command line parameter:&quot;);\n \t\t       Console.WriteLine(&quot;Usage:FileWebRequest_reqbeginend &lt;systemname&gt;/&lt;sharedfoldername&gt;/&lt;filename&gt;<br>Example:FileWebRequest_reqbeginend shafeeque/shaf/hello.txt&quot;);\n\t\t    \n\t\t  }  \n\t\t  else\n\t\t  {\n\n\t\t    try\n\t\t\t {\n\n\t\t\t      // Place a webrequest.\n\t\t\t      WebRequest myWebRequest= WebRequest.Create(&quot;file://&quot;+args[0]);\n   \t\t\t\n\t    \t      // Create an instance of the &#39;RequestDeclare&#39; and associate the &#39;myWebRequest&#39; to it.\t\t\n\t\t\t      RequestDeclare requestDeclare = new RequestDeclare();\n\t\t\t      requestDeclare.myFileWebRequest = (FileWebRequest)myWebRequest;\n\t\t\t      // Set the &#39;Method&#39; property of &#39;FileWebRequest&#39; object to &#39;POST&#39; method.\n\t\t\t      requestDeclare.myFileWebRequest.Method=&quot;POST&quot;;\n\t\t\t      Console.WriteLine(&quot;Enter the string you want to write into the file:&quot;);\n\t\t\t      requestDeclare.userinput = Console.ReadLine();\n\n\t\t\t      // Begin the Asynchronous request for getting file content using &#39;BeginGetRequestStream()&#39; method .\n\t\t\t      IAsyncResult r=(IAsyncResult) requestDeclare.myFileWebRequest.BeginGetRequestStream(new AsyncCallback(ReadCallback),requestDeclare);\t\t\t\n\t\t\t      allDone.WaitOne();\n\n\t\t\t      Console.Read();\n\t\t    }\n\t\t    catch(ProtocolViolationException e)\n\t\t    {\n\t\t          Console.WriteLine(&quot;ProtocolViolationException is :&quot;+e.Message);\n\t\t    }\n\t\t    catch(InvalidOperationException e)\n\t\t    {\n\t\t\t   \tConsole.WriteLine(&quot;InvalidOperationException is :&quot;+e.Message);\n\t\t    }\n\t\t    catch(UriFormatException e)\n\t\t    {\n\t\t\t\tConsole.WriteLine(&quot;UriFormatExceptionException is :&quot;+e.Message);\n\t\t\t }\n\t\t }\n\t\t}\n\n\t\tprivate static void ReadCallback(IAsyncResult ar)\n\t\t{\t\n\n\t     try\n   \t  {\n\n\t\t\t  // State of the request is asynchronous.\n\t\t\t  RequestDeclare requestDeclare=(RequestDeclare) ar.AsyncState;\n\t\t\t  FileWebRequest myFileWebRequest=requestDeclare.myFileWebRequest;\n\t\t\t  String sendToFile = requestDeclare.userinput;\n\n\t\t\t  // End the Asynchronus request by calling the &#39;EndGetRequestStream()&#39; method.\n\t\t\t  Stream readStream=myFileWebRequest.EndGetRequestStream(ar);\n\t\t\t\t\t\t\n\t\t\t  // Convert the string into byte array.\n\t\t\t\t\n\t\t\t  ASCIIEncoding encoder = new ASCIIEncoding();\n\t\t\t  byte[] byteArray = encoder.GetBytes(sendToFile);\n\t\t\t\n\t\t\t  // Write to the stream.\n\t\t\t  readStream.Write(byteArray,0,sendToFile.Length);\n\t\t\t  readStream.Close();\n\t\t\t  allDone.Set();\n\t\t\t\t\n\t\t\t  Console.WriteLine(&quot;<br>The String you entered was successfully written into the file.&quot;);\n\t   \t  Console.WriteLine(&quot;<br>Press Enter to continue.&quot;);\t\n\n\n         }\n        catch(ApplicationException e)\n\t\t  {\n\t\t\t  Console.WriteLine(&quot;ApplicationException is :&quot;+e.Message);\n\t\t  }\t\t\t\t\n\n\t\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"FileWebRequest_ReqBeginEnd#2\">Public Class RequestDeclare\n    Public myFileWebRequest As FileWebRequest\n    Public userinput As [String]\n    \n    \n    Public Sub New()\n        myFileWebRequest = Nothing\n    End Sub &#39; New\nEnd Class &#39; RequestDeclare\n\n\nClass FileWebRequest_reqbeginend\n    Public Shared allDone As New ManualResetEvent(False)\n    \n    &#39; Entry point which delegates to C-style main Private Function.\n    Public Overloads Shared Sub Main()\n        Main(System.Environment.GetCommandLineArgs())\n    End Sub\n    \n    \n    Overloads Shared Sub Main(args() As String)\n        If args.Length &lt; 2 Then\n            Console.WriteLine(ControlChars.Cr + &quot;Please enter the file name as command line parameter:&quot;)\n            Console.WriteLine(&quot;Usage:FileWebRequest_reqbeginend &lt;systemname&gt;/&lt;sharedfoldername&gt;/&lt;filename&gt;&quot;)\n\t    Console.WriteLine(&quot;Example: FileWebRequest_reqbeginend shafeeque/shaf/hello.txt&quot;)\n        \n        Else\n            Try\n\n                &#39; Place a webrequest.\n                Dim myWebRequest As WebRequest = WebRequest.Create((&quot;file://&quot; + args(1)))\n                \n                &#39; Create an instance of the &#39;RequestDeclare&#39; and associate the &#39;myWebRequest&#39; to it.\t\t\n                Dim requestDeclare As New RequestDeclare()\n                requestDeclare.myFileWebRequest = CType(myWebRequest, FileWebRequest)\n                &#39; Set the &#39;Method&#39; property of &#39;FileWebRequest&#39; object to &#39;POST&#39; method.\n                requestDeclare.myFileWebRequest.Method = &quot;POST&quot;\n                Console.WriteLine(&quot;Enter the string you want to write into the file:&quot;)\n                requestDeclare.userinput = Console.ReadLine()\n                \n                &#39; Begin the Asynchronous request for getting file content using &#39;BeginGetRequestStream()&#39; method .\n                Dim r As IAsyncResult = CType(requestDeclare.myFileWebRequest.BeginGetRequestStream(AddressOf ReadCallback, requestDeclare), IAsyncResult)\n                allDone.WaitOne()\n                \n                Console.Read()\n            Catch e As ProtocolViolationException\n                Console.WriteLine((&quot;ProtocolViolationException is :&quot; + e.Message))\n            Catch e As InvalidOperationException\n                Console.WriteLine((&quot;InvalidOperationException is :&quot; + e.Message))\n            Catch e As UriFormatException\n                Console.WriteLine((&quot;UriFormatExceptionException is :&quot; + e.Message))\n            End Try\n\n        End If \n    End Sub &#39;Main\n    \n    \n    Private Shared Sub ReadCallback(ar As IAsyncResult)\n        Try\n\n            &#39; State of the request is asynchronous.\n            Dim requestDeclare As RequestDeclare = CType(ar.AsyncState, RequestDeclare)\n            Dim myFileWebRequest As FileWebRequest = requestDeclare.myFileWebRequest\n            Dim sendToFile As [String] = requestDeclare.userinput\n            \n            &#39; End the Asynchronus request by calling the &#39;EndGetRequestStream()&#39; method.\n            Dim readStream As Stream = myFileWebRequest.EndGetRequestStream(ar)\n            \n            &#39; Convert the string into byte array.\n            Dim encoder As New ASCIIEncoding()\n            Dim byteArray As Byte() = encoder.GetBytes(sendToFile)\n            \n            &#39; Write to the stream.\n            readStream.Write(byteArray, 0, sendToFile.Length)\n            readStream.Close()\n            allDone.Set()\n\n            \n            Console.WriteLine(ControlChars.Cr +&quot;The String you entered was successfully written into the file.&quot;)\n            Console.WriteLine(ControlChars.Cr +&quot;Press Enter to continue.&quot;)\n\n            Catch e As ApplicationException\n            Console.WriteLine((&quot;ApplicationException is :&quot; + e.Message))\n        End Try\n\n    End Sub &#39; ReadCallback \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FileWebRequest_BeginGetResponse_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_Net_FileWebRequest_BeginGetResponse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginGetResponse(AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Begins an asynchronous request for a file system resource.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override IAsyncResult BeginGetResponse (AsyncCallback callback, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that contains state information for this request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that references the asynchronous request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The stream is already in use by a previous call to BeginGetResponse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a> was aborted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The asynchronous callback method that implements the <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate uses the <a class=\"xref\" href=\"system.net.filewebrequest#System_Net_FileWebRequest_EndGetResponse_\" data-linktype=\"relative-path\">EndGetResponse</a> method to return the actual <a class=\"xref\" href=\"system.net.filewebresponse\" data-linktype=\"relative-path\">FileWebResponse</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the BeginGetResponse method to asynchronously access a file system resource.  </p>\n<pre><code class=\"lang-cs\" name=\"FileWebRequest_ResBeginEnd#2\">\n\tpublic class RequestDeclare\n\t{\n   \tpublic FileWebRequest myFileWebRequest;\t\n       \n \t\tpublic RequestDeclare()\n\t\t{\n\t\t\tmyFileWebRequest = null;\n\t\t}\n\t}\n\t\n\t\n\tclass FileWebRequest_resbeginend\n\t{\n\n\t\tpublic static ManualResetEvent allDone = new ManualResetEvent(false);\n\n\t\tstatic void Main(string[] args)\n\t\t{\n\t\t\t\n\t\t    if (args.Length &lt; 1)\n\t\t    {\n\t\t       Console.WriteLine(&quot;<br>Please enter the file name as command line parameter:&quot;);\n \t\t       Console.WriteLine(&quot;Usage:FileWebRequest_resbeginend &lt;systemname&gt;/&lt;sharedfoldername&gt;/&lt;filename&gt;<br>Example:FileWebRequest_resbeginend shafeeque/shaf/hello.txt&quot;);\n\t\t    }  \n\t\t    else\n\t\t    {\n\t\t      try\n            {\n\n\n\t\t\t      // Place a &#39;Webrequest&#39;.\n\t\t\t      WebRequest myWebRequest= WebRequest.Create(&quot;file://&quot;+args[0]);\n\t\t\t      // Create an instance of the &#39;RequestDeclare&#39; and associating the &#39;myWebRequest&#39; to it.\t\t\n\t\t\t      RequestDeclare myRequestDeclare = new RequestDeclare();\n\t\t\t      myRequestDeclare.myFileWebRequest = (FileWebRequest)myWebRequest;\n\t\t\t  \n\n\t\t\t      // Begin the Asynchronous request for getting file content using &#39;BeginGetResponse()&#39; method.\t\n\t\t\t      IAsyncResult asyncResult =(IAsyncResult) myRequestDeclare.myFileWebRequest.BeginGetResponse(new AsyncCallback(RespCallback),myRequestDeclare);\t\t\t\n\t\t\t      allDone.WaitOne();\n\n\t        \n\t\t\t   }\n            catch(ArgumentNullException e)\n\t\t\t   {\n\t\t\t      Console.WriteLine(&quot;ArgumentNullException is :&quot;+e.Message);\n\t\t\t   }\n\t\t\t   catch(UriFormatException e)\n\t\t      {\n\t\t\t      Console.WriteLine(&quot;UriFormatException is :&quot;+e.Message);\n\t\t      }\n\t\t   }\n\t\t}\n\n\t  private static void RespCallback(IAsyncResult ar)\n\t  {\t\n\n\n\t\t\t   // State of request is asynchronous.\n\t\t\t\tRequestDeclare requestDeclare=(RequestDeclare) ar.AsyncState;\n\t\t\t\t\t\n\t\t\t\tFileWebRequest  myFileWebRequest=requestDeclare.myFileWebRequest;\n\t\t\t\n\t\t\t   // End the Asynchronus request by calling the &#39;EndGetResponse()&#39; method.\n\t\t\t\t\n\t\t\t\tFileWebResponse myFileWebResponse = (FileWebResponse) myFileWebRequest.EndGetResponse(ar);\n\n\n\t\t\t    // Reade the response into Stream.\n\t\t\t\tStreamReader streamReader= new StreamReader(myFileWebResponse.GetResponseStream());\n\n\n\t\t\t\tChar[] readBuffer = new Char[256];\n\t\t\t\t\t\n\t\t\t\tint count = streamReader.Read( readBuffer, 0, 256 );\n\n\t\t\t\tConsole.WriteLine(&quot;The contents of the file are :<br>&quot;);\n\t\t\n\t\t\t\twhile (count &gt; 0) \n\t\t\t\t{\n\t\t\t\t\tString str = new String(readBuffer, 0, count);\n\t\t\t\t\tConsole.WriteLine(str);\n\t\t\t\t\tcount = streamReader.Read(readBuffer, 0, 256);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstreamReader.Close();\n\t\t\t\t// Release the response object resources.\n\t\t\t\tmyFileWebResponse.Close();\n\t\t\t\tallDone.Set();\n\t\t\t\tConsole.WriteLine(&quot;File reading is over.&quot;);\t\n\t\t}\n\n\t}\n</code></pre><pre><code class=\"lang-cpp\" name=\"FileWebRequest_ResBeginEnd#2\">public ref class RequestDeclare\n{\npublic:\n   FileWebRequest^ myFileWebRequest;\n   RequestDeclare()\n   {\n      myFileWebRequest = nullptr;\n   }\n\n};\n\nref class FileWebRequest_resbeginend\n{\npublic:\n   static ManualResetEvent^ allDone = gcnew ManualResetEvent( false );\n   static void RespCallback( IAsyncResult^ ar )\n   {\n      \n      // State of request is asynchronous.\n      RequestDeclare^ requestDeclare = dynamic_cast&lt;RequestDeclare^&gt;(ar-&gt;AsyncState);\n      FileWebRequest^ myFileWebRequest = requestDeclare-&gt;myFileWebRequest;\n      \n      // End the Asynchronus request by calling the &#39;EndGetResponse()&#39; method.\n      FileWebResponse^ myFileWebResponse = dynamic_cast&lt;FileWebResponse^&gt;(myFileWebRequest-&gt;EndGetResponse( ar ));\n      \n      // Reade the response into Stream.\n      StreamReader^ streamReader = gcnew StreamReader( myFileWebResponse-&gt;GetResponseStream() );\n      array&lt;Char&gt;^readBuffer = gcnew array&lt;Char&gt;(256);\n      int count = streamReader-&gt;Read( readBuffer, 0, 256 );\n      Console::WriteLine( &quot;The contents of the file are :<br>&quot; );\n      while ( count &gt; 0 )\n      {\n         String^ str = gcnew String( readBuffer,0,count );\n         Console::WriteLine( str );\n         count = streamReader-&gt;Read( readBuffer, 0, 256 );\n      }\n\n      streamReader-&gt;Close();\n      \n      // Release the response Object* resources.\n      myFileWebResponse-&gt;Close();\n      allDone-&gt;Set();\n      Console::WriteLine( &quot;File reading is over.&quot; );\n   }\n\n};\n\nint main()\n{\n   array&lt;String^&gt;^args = Environment::GetCommandLineArgs();\n   if ( args-&gt;Length &lt; 2 )\n   {\n      Console::WriteLine( &quot;<br>Please enter the file name as command line parameter:&quot; );\n      Console::WriteLine( &quot;Usage:FileWebRequest_resbeginend &lt;systemname&gt;/&lt;sharedfoldername&gt;/&lt;filename&gt;<br>&quot; );\n      Console::WriteLine( &quot;Example:FileWebRequest_resbeginend shafeeque/shaf/hello.txt&quot; );\n   }\n   else\n   {\n      try\n      {\n         \n         // Place a &#39;Webrequest&#39;.\n         WebRequest^ myWebRequest = WebRequest::Create( String::Concat( &quot;file://&quot;, args[ 1 ] ) );\n         \n         // Create an instance of the &#39;RequestDeclare&#39; and associating the &#39;myWebRequest&#39; to it.\n         RequestDeclare^ myRequestDeclare = gcnew RequestDeclare;\n         myRequestDeclare-&gt;myFileWebRequest = dynamic_cast&lt;FileWebRequest^&gt;(myWebRequest);\n         \n         // Begin the Asynchronous request for getting file content using &#39;BeginGetResponse()&#39; method.\n         IAsyncResult^ asyncResult = dynamic_cast&lt;IAsyncResult^&gt;(myRequestDeclare-&gt;myFileWebRequest-&gt;BeginGetResponse( gcnew AsyncCallback( &amp;FileWebRequest_resbeginend::RespCallback ), myRequestDeclare ));\n         FileWebRequest_resbeginend::allDone-&gt;WaitOne();\n      }\n      catch ( ArgumentNullException^ e ) \n      {\n         Console::WriteLine( &quot;ArgumentNullException is : {0}&quot;, e-&gt;Message );\n      }\n      catch ( UriFormatException^ e ) \n      {\n         Console::WriteLine( &quot;UriFormatException is : {0}&quot;, e-&gt;Message );\n      }\n\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"FileWebRequest_ResBeginEnd#2\">Public Class RequestDeclare\n    Public myFileWebRequest As FileWebRequest\n     \n    Public Sub New()\n        myFileWebRequest = Nothing\n    End Sub &#39; New\nEnd Class &#39; RequestDeclare\n\n\n\nClass FileWebRequest_resbeginend\n    \n    Public Shared allDone As New ManualResetEvent(False)\n    \n    &#39; Entry point which delegates to C-style main Private Function.\n    Public Overloads Shared Sub Main()\n        Main(GetCommandLineArgs())\n    End Sub\n    \n    Overloads Shared Sub Main(args() As String)\n        \n        If args.Length &lt; 2 Then\n            Console.WriteLine(ControlChars.Cr + &quot;Please enter the file name as command line parameter:&quot;)\n            Console.WriteLine(&quot;Usage:FileWebRequest_resbeginend &quot; + ChrW(60) + &quot;systemname&quot; + ChrW(62) + &quot;/&quot; + ChrW(60) + &quot;sharedfoldername&quot; + ChrW(62) + &quot;/&quot; + ChrW(60) + &quot;filename&quot; + ChrW(62) + ControlChars.Cr + &quot;Example:FileWebRequest_resbeginend shafeeque/shaf/hello.txt&quot;)\n        \n        Else\n            Try\n\n                &#39; Place a webrequest.\n                Dim myWebRequest As WebRequest = WebRequest.Create((&quot;file://&quot; + args(1)))\n                &#39; Create an instance of the &#39;RequestDeclare&#39; and associating the &#39;myWebRequest&#39; to it.\t\t\n                Dim myRequestDeclare As New RequestDeclare()\n                myRequestDeclare.myFileWebRequest = CType(myWebRequest, FileWebRequest)\n                \n                &#39; Begin the Asynchronous request for getting file content using &#39;BeginGetResponse()&#39; method.\t\n                 Dim asyncResult As IAsyncResult = CType(myRequestDeclare.myFileWebRequest.BeginGetResponse(AddressOf RespCallback, myRequestDeclare), IAsyncResult)\n                 allDone.WaitOne()\n\n            \n            Catch e As ArgumentNullException\n                Console.WriteLine((&quot;ArgumentNullException is :&quot; + e.Message))\n            Catch e As UriFormatException\n                Console.WriteLine((&quot;UriFormatException is :&quot; + e.Message))\n            End Try\n        End If\n    End Sub &#39; Main\n    \n    \n    Private Shared Sub RespCallback(ar As IAsyncResult)\n\n\n\n        &#39; State of request is asynchronous.\n        Dim requestDeclare As RequestDeclare = CType(ar.AsyncState, RequestDeclare)\n        \n        Dim myFileWebRequest As FileWebRequest = requestDeclare.myFileWebRequest\n        \n        &#39; End the Asynchronus request by calling the &#39;EndGetResponse()&#39; method.\n        Dim myFileWebResponse As FileWebResponse = CType(myFileWebRequest.EndGetResponse(ar), FileWebResponse)\n        \n        &#39; Reade the response into Stream.\n        Dim streamReader As New StreamReader(myFileWebResponse.GetResponseStream())\n\n       \n        Dim readBuffer(256) As [Char]\n        \n        Dim count As Integer = streamReader.Read(readBuffer, 0, 256)\n        \n        Console.WriteLine(&quot;The contents of the file are :&quot;+ControlChars.Cr)\n        \n        While count &gt; 0\n            Dim str As New [String](readBuffer, 0, count)\n            Console.WriteLine(str)\n            count = streamReader.Read(readBuffer, 0, 256)\n        End While\n\t     streamReader.Close()\n        &#39; Release the response object resources.\n\t     myFileWebResponse.Close()\n        allDone.Set()\n        Console.WriteLine(&quot;File reading is over.&quot;)\n    End Sub &#39; RespCallback \nEnd Class &#39; FileWebRequest_resbeginend\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FileWebRequest_EndGetRequestStream_System_IAsyncResult_\">\r\n    \r\n            <a id=\"System_Net_FileWebRequest_EndGetRequestStream_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndGetRequestStream(IAsyncResult)</div>        \r\n          </div>\r\n    \r\n            <p>Ends an asynchronous request for a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance that the application uses to write data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that references the pending request for a stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object that the application uses to write data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>asyncResult</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The EndGetRequestStream method completes an asynchronous stream request that was started by the <a class=\"xref\" href=\"system.net.filewebrequest#System_Net_FileWebRequest_BeginGetRequestStream_\" data-linktype=\"relative-path\">BeginGetRequestStream</a> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To avoid timing issues with garbage collection, be sure to close the response stream by calling the <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a> method on the stream returned by the <a class=\"xref\" href=\"system.net.filewebresponse#System_Net_FileWebResponse_GetResponseStream_\" data-linktype=\"relative-path\">GetResponseStream</a> method after calling the <a class=\"xref\" href=\"system.net.filewebrequest#System_Net_FileWebRequest_EndGetResponse_\" data-linktype=\"relative-path\">EndGetResponse</a> method.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the EndGetRequestStream method to end the asynchronous request for a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object.  </p>\n<pre><code class=\"lang-cpp\" name=\"FileWebRequest_ReqBeginEnd#2\">public ref class RequestDeclare\n{\npublic:\n   FileWebRequest^ myFileWebRequest;\n   String^ userinput;\n   RequestDeclare()\n   {\n      myFileWebRequest = nullptr;\n   }\n\n};\n\nref class FileWebRequest_reqbeginend\n{\npublic:\n   static ManualResetEvent^ allDone = gcnew ManualResetEvent( false );\n   static void ReadCallback( IAsyncResult^ ar )\n   {\n      try\n      {\n         \n         // State of the request is asynchronous.\n         RequestDeclare^ requestDeclare = dynamic_cast&lt;RequestDeclare^&gt;(ar-&gt;AsyncState);\n         FileWebRequest^ myFileWebRequest = requestDeclare-&gt;myFileWebRequest;\n         String^ sendToFile = requestDeclare-&gt;userinput;\n         \n         // End the Asynchronus request by calling the &#39;EndGetRequestStream()&#39; method.\n         Stream^ readStream = myFileWebRequest-&gt;EndGetRequestStream( ar );\n         \n         // Convert the String* into Byte array.\n         ASCIIEncoding^ encoder = gcnew ASCIIEncoding;\n         array&lt;Byte&gt;^byteArray = encoder-&gt;GetBytes( sendToFile );\n         \n         // Write to the stream.\n         readStream-&gt;Write( byteArray, 0, sendToFile-&gt;Length );\n         readStream-&gt;Close();\n         allDone-&gt;Set();\n         Console::WriteLine( &quot;<br>The String you entered was successfully written into the file.&quot; );\n         Console::WriteLine( &quot;<br>Press Enter to continue.&quot; );\n      }\n      catch ( ApplicationException^ e ) \n      {\n         Console::WriteLine( &quot;ApplicationException is : {0}&quot;, e-&gt;Message );\n      }\n\n   }\n\n};\n\nint main()\n{\n   array&lt;String^&gt;^args = Environment::GetCommandLineArgs();\n   if ( args-&gt;Length &lt; 2 )\n   {\n      Console::WriteLine( &quot;<br>Please enter the file name as command line parameter:&quot; );\n      Console::WriteLine( &quot;Usage:FileWebRequest_reqbeginend &lt;systemname&gt;/&lt;sharedfoldername&gt;/&lt;filename&gt;<br>&quot; );\n      Console::WriteLine( &quot;Example:FileWebRequest_reqbeginend shafeeque/shaf/hello.txt&quot; );\n   }\n   else\n   {\n      try\n      {\n         \n         // Place a webrequest.\n         WebRequest^ myWebRequest = WebRequest::Create( String::Concat( &quot;file://&quot;, args[ 1 ] ) );\n         \n         // Create an instance of the &#39;RequestDeclare&#39; and associate the &#39;myWebRequest&#39; to it.\n         RequestDeclare^ requestDeclare = gcnew RequestDeclare;\n         requestDeclare-&gt;myFileWebRequest = dynamic_cast&lt;FileWebRequest^&gt;(myWebRequest);\n         \n         // Set the &#39;Method&#39; property of &#39;FileWebRequest&#39; Object* to &#39;POST&#39; method.\n         requestDeclare-&gt;myFileWebRequest-&gt;Method = &quot;POST&quot;;\n         Console::WriteLine( &quot;Enter the String* you want to write into the file:&quot; );\n         requestDeclare-&gt;userinput = Console::ReadLine();\n         \n         // Begin the Asynchronous request for getting file content using &#39;BeginGetRequestStream()&#39; method .\n         IAsyncResult^ r = dynamic_cast&lt;IAsyncResult^&gt;(requestDeclare-&gt;myFileWebRequest-&gt;BeginGetRequestStream( gcnew AsyncCallback( &amp;FileWebRequest_reqbeginend::ReadCallback ), requestDeclare ));\n         FileWebRequest_reqbeginend::allDone-&gt;WaitOne();\n         Console::Read();\n      }\n      catch ( ProtocolViolationException^ e ) \n      {\n         Console::WriteLine( &quot;ProtocolViolationException is : {0}&quot;, e-&gt;Message );\n      }\n      catch ( InvalidOperationException^ e ) \n      {\n         Console::WriteLine( &quot;InvalidOperationException is : {0}&quot;, e-&gt;Message );\n      }\n      catch ( UriFormatException^ e ) \n      {\n         Console::WriteLine( &quot;UriFormatExceptionException is : {0}&quot;, e-&gt;Message );\n      }\n\n   }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"FileWebRequest_ReqBeginEnd#2\">\n\tpublic class RequestDeclare\n\t{\n\t\t public FileWebRequest myFileWebRequest;\t\n\t\t public String userinput;\n       \n \t\tpublic RequestDeclare()\n\t\t{\n\t\t\tmyFileWebRequest = null;\n\t\t}\n\t}\n\t\n\tclass FileWebRequest_reqbeginend\n\t{\n\t\tpublic static ManualResetEvent allDone = new ManualResetEvent(false);\n\n\t\tstatic void Main(string[] args)\n\t\t{\n\t\t  if (args.Length &lt; 1)\n\t\t  {\n   \t\t    Console.WriteLine(&quot;<br>Please enter the file name as command line parameter:&quot;);\n \t\t       Console.WriteLine(&quot;Usage:FileWebRequest_reqbeginend &lt;systemname&gt;/&lt;sharedfoldername&gt;/&lt;filename&gt;<br>Example:FileWebRequest_reqbeginend shafeeque/shaf/hello.txt&quot;);\n\t\t    \n\t\t  }  \n\t\t  else\n\t\t  {\n\n\t\t    try\n\t\t\t {\n\n\t\t\t      // Place a webrequest.\n\t\t\t      WebRequest myWebRequest= WebRequest.Create(&quot;file://&quot;+args[0]);\n   \t\t\t\n\t    \t      // Create an instance of the &#39;RequestDeclare&#39; and associate the &#39;myWebRequest&#39; to it.\t\t\n\t\t\t      RequestDeclare requestDeclare = new RequestDeclare();\n\t\t\t      requestDeclare.myFileWebRequest = (FileWebRequest)myWebRequest;\n\t\t\t      // Set the &#39;Method&#39; property of &#39;FileWebRequest&#39; object to &#39;POST&#39; method.\n\t\t\t      requestDeclare.myFileWebRequest.Method=&quot;POST&quot;;\n\t\t\t      Console.WriteLine(&quot;Enter the string you want to write into the file:&quot;);\n\t\t\t      requestDeclare.userinput = Console.ReadLine();\n\n\t\t\t      // Begin the Asynchronous request for getting file content using &#39;BeginGetRequestStream()&#39; method .\n\t\t\t      IAsyncResult r=(IAsyncResult) requestDeclare.myFileWebRequest.BeginGetRequestStream(new AsyncCallback(ReadCallback),requestDeclare);\t\t\t\n\t\t\t      allDone.WaitOne();\n\n\t\t\t      Console.Read();\n\t\t    }\n\t\t    catch(ProtocolViolationException e)\n\t\t    {\n\t\t          Console.WriteLine(&quot;ProtocolViolationException is :&quot;+e.Message);\n\t\t    }\n\t\t    catch(InvalidOperationException e)\n\t\t    {\n\t\t\t   \tConsole.WriteLine(&quot;InvalidOperationException is :&quot;+e.Message);\n\t\t    }\n\t\t    catch(UriFormatException e)\n\t\t    {\n\t\t\t\tConsole.WriteLine(&quot;UriFormatExceptionException is :&quot;+e.Message);\n\t\t\t }\n\t\t }\n\t\t}\n\n\t\tprivate static void ReadCallback(IAsyncResult ar)\n\t\t{\t\n\n\t     try\n   \t  {\n\n\t\t\t  // State of the request is asynchronous.\n\t\t\t  RequestDeclare requestDeclare=(RequestDeclare) ar.AsyncState;\n\t\t\t  FileWebRequest myFileWebRequest=requestDeclare.myFileWebRequest;\n\t\t\t  String sendToFile = requestDeclare.userinput;\n\n\t\t\t  // End the Asynchronus request by calling the &#39;EndGetRequestStream()&#39; method.\n\t\t\t  Stream readStream=myFileWebRequest.EndGetRequestStream(ar);\n\t\t\t\t\t\t\n\t\t\t  // Convert the string into byte array.\n\t\t\t\t\n\t\t\t  ASCIIEncoding encoder = new ASCIIEncoding();\n\t\t\t  byte[] byteArray = encoder.GetBytes(sendToFile);\n\t\t\t\n\t\t\t  // Write to the stream.\n\t\t\t  readStream.Write(byteArray,0,sendToFile.Length);\n\t\t\t  readStream.Close();\n\t\t\t  allDone.Set();\n\t\t\t\t\n\t\t\t  Console.WriteLine(&quot;<br>The String you entered was successfully written into the file.&quot;);\n\t   \t  Console.WriteLine(&quot;<br>Press Enter to continue.&quot;);\t\n\n\n         }\n        catch(ApplicationException e)\n\t\t  {\n\t\t\t  Console.WriteLine(&quot;ApplicationException is :&quot;+e.Message);\n\t\t  }\t\t\t\t\n\n\t\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"FileWebRequest_ReqBeginEnd#2\">Public Class RequestDeclare\n    Public myFileWebRequest As FileWebRequest\n    Public userinput As [String]\n    \n    \n    Public Sub New()\n        myFileWebRequest = Nothing\n    End Sub &#39; New\nEnd Class &#39; RequestDeclare\n\n\nClass FileWebRequest_reqbeginend\n    Public Shared allDone As New ManualResetEvent(False)\n    \n    &#39; Entry point which delegates to C-style main Private Function.\n    Public Overloads Shared Sub Main()\n        Main(System.Environment.GetCommandLineArgs())\n    End Sub\n    \n    \n    Overloads Shared Sub Main(args() As String)\n        If args.Length &lt; 2 Then\n            Console.WriteLine(ControlChars.Cr + &quot;Please enter the file name as command line parameter:&quot;)\n            Console.WriteLine(&quot;Usage:FileWebRequest_reqbeginend &lt;systemname&gt;/&lt;sharedfoldername&gt;/&lt;filename&gt;&quot;)\n\t    Console.WriteLine(&quot;Example: FileWebRequest_reqbeginend shafeeque/shaf/hello.txt&quot;)\n        \n        Else\n            Try\n\n                &#39; Place a webrequest.\n                Dim myWebRequest As WebRequest = WebRequest.Create((&quot;file://&quot; + args(1)))\n                \n                &#39; Create an instance of the &#39;RequestDeclare&#39; and associate the &#39;myWebRequest&#39; to it.\t\t\n                Dim requestDeclare As New RequestDeclare()\n                requestDeclare.myFileWebRequest = CType(myWebRequest, FileWebRequest)\n                &#39; Set the &#39;Method&#39; property of &#39;FileWebRequest&#39; object to &#39;POST&#39; method.\n                requestDeclare.myFileWebRequest.Method = &quot;POST&quot;\n                Console.WriteLine(&quot;Enter the string you want to write into the file:&quot;)\n                requestDeclare.userinput = Console.ReadLine()\n                \n                &#39; Begin the Asynchronous request for getting file content using &#39;BeginGetRequestStream()&#39; method .\n                Dim r As IAsyncResult = CType(requestDeclare.myFileWebRequest.BeginGetRequestStream(AddressOf ReadCallback, requestDeclare), IAsyncResult)\n                allDone.WaitOne()\n                \n                Console.Read()\n            Catch e As ProtocolViolationException\n                Console.WriteLine((&quot;ProtocolViolationException is :&quot; + e.Message))\n            Catch e As InvalidOperationException\n                Console.WriteLine((&quot;InvalidOperationException is :&quot; + e.Message))\n            Catch e As UriFormatException\n                Console.WriteLine((&quot;UriFormatExceptionException is :&quot; + e.Message))\n            End Try\n\n        End If \n    End Sub &#39;Main\n    \n    \n    Private Shared Sub ReadCallback(ar As IAsyncResult)\n        Try\n\n            &#39; State of the request is asynchronous.\n            Dim requestDeclare As RequestDeclare = CType(ar.AsyncState, RequestDeclare)\n            Dim myFileWebRequest As FileWebRequest = requestDeclare.myFileWebRequest\n            Dim sendToFile As [String] = requestDeclare.userinput\n            \n            &#39; End the Asynchronus request by calling the &#39;EndGetRequestStream()&#39; method.\n            Dim readStream As Stream = myFileWebRequest.EndGetRequestStream(ar)\n            \n            &#39; Convert the string into byte array.\n            Dim encoder As New ASCIIEncoding()\n            Dim byteArray As Byte() = encoder.GetBytes(sendToFile)\n            \n            &#39; Write to the stream.\n            readStream.Write(byteArray, 0, sendToFile.Length)\n            readStream.Close()\n            allDone.Set()\n\n            \n            Console.WriteLine(ControlChars.Cr +&quot;The String you entered was successfully written into the file.&quot;)\n            Console.WriteLine(ControlChars.Cr +&quot;Press Enter to continue.&quot;)\n\n            Catch e As ApplicationException\n            Console.WriteLine((&quot;ApplicationException is :&quot; + e.Message))\n        End Try\n\n    End Sub &#39; ReadCallback \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FileWebRequest_EndGetResponse_System_IAsyncResult_\">\r\n    \r\n            <a id=\"System_Net_FileWebRequest_EndGetResponse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndGetResponse(IAsyncResult)</div>        \r\n          </div>\r\n    \r\n            <p>Ends an asynchronous request for a file system resource.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that references the pending request for a response.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> that contains the response from the file system resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>asyncResult</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The EndGetResponse method completes an asynchronous request for a file system resource that was started with the <a class=\"xref\" href=\"system.net.filewebrequest#System_Net_FileWebRequest_BeginGetResponse_\" data-linktype=\"relative-path\">BeginGetResponse</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the EndGetResponse method to end an asynchronous request for a file system resource.  </p>\n<pre><code class=\"lang-cs\" name=\"FileWebRequest_ResBeginEnd#2\">\n\tpublic class RequestDeclare\n\t{\n   \tpublic FileWebRequest myFileWebRequest;\t\n       \n \t\tpublic RequestDeclare()\n\t\t{\n\t\t\tmyFileWebRequest = null;\n\t\t}\n\t}\n\t\n\t\n\tclass FileWebRequest_resbeginend\n\t{\n\n\t\tpublic static ManualResetEvent allDone = new ManualResetEvent(false);\n\n\t\tstatic void Main(string[] args)\n\t\t{\n\t\t\t\n\t\t    if (args.Length &lt; 1)\n\t\t    {\n\t\t       Console.WriteLine(&quot;<br>Please enter the file name as command line parameter:&quot;);\n \t\t       Console.WriteLine(&quot;Usage:FileWebRequest_resbeginend &lt;systemname&gt;/&lt;sharedfoldername&gt;/&lt;filename&gt;<br>Example:FileWebRequest_resbeginend shafeeque/shaf/hello.txt&quot;);\n\t\t    }  \n\t\t    else\n\t\t    {\n\t\t      try\n            {\n\n\n\t\t\t      // Place a &#39;Webrequest&#39;.\n\t\t\t      WebRequest myWebRequest= WebRequest.Create(&quot;file://&quot;+args[0]);\n\t\t\t      // Create an instance of the &#39;RequestDeclare&#39; and associating the &#39;myWebRequest&#39; to it.\t\t\n\t\t\t      RequestDeclare myRequestDeclare = new RequestDeclare();\n\t\t\t      myRequestDeclare.myFileWebRequest = (FileWebRequest)myWebRequest;\n\t\t\t  \n\n\t\t\t      // Begin the Asynchronous request for getting file content using &#39;BeginGetResponse()&#39; method.\t\n\t\t\t      IAsyncResult asyncResult =(IAsyncResult) myRequestDeclare.myFileWebRequest.BeginGetResponse(new AsyncCallback(RespCallback),myRequestDeclare);\t\t\t\n\t\t\t      allDone.WaitOne();\n\n\t        \n\t\t\t   }\n            catch(ArgumentNullException e)\n\t\t\t   {\n\t\t\t      Console.WriteLine(&quot;ArgumentNullException is :&quot;+e.Message);\n\t\t\t   }\n\t\t\t   catch(UriFormatException e)\n\t\t      {\n\t\t\t      Console.WriteLine(&quot;UriFormatException is :&quot;+e.Message);\n\t\t      }\n\t\t   }\n\t\t}\n\n\t  private static void RespCallback(IAsyncResult ar)\n\t  {\t\n\n\n\t\t\t   // State of request is asynchronous.\n\t\t\t\tRequestDeclare requestDeclare=(RequestDeclare) ar.AsyncState;\n\t\t\t\t\t\n\t\t\t\tFileWebRequest  myFileWebRequest=requestDeclare.myFileWebRequest;\n\t\t\t\n\t\t\t   // End the Asynchronus request by calling the &#39;EndGetResponse()&#39; method.\n\t\t\t\t\n\t\t\t\tFileWebResponse myFileWebResponse = (FileWebResponse) myFileWebRequest.EndGetResponse(ar);\n\n\n\t\t\t    // Reade the response into Stream.\n\t\t\t\tStreamReader streamReader= new StreamReader(myFileWebResponse.GetResponseStream());\n\n\n\t\t\t\tChar[] readBuffer = new Char[256];\n\t\t\t\t\t\n\t\t\t\tint count = streamReader.Read( readBuffer, 0, 256 );\n\n\t\t\t\tConsole.WriteLine(&quot;The contents of the file are :<br>&quot;);\n\t\t\n\t\t\t\twhile (count &gt; 0) \n\t\t\t\t{\n\t\t\t\t\tString str = new String(readBuffer, 0, count);\n\t\t\t\t\tConsole.WriteLine(str);\n\t\t\t\t\tcount = streamReader.Read(readBuffer, 0, 256);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstreamReader.Close();\n\t\t\t\t// Release the response object resources.\n\t\t\t\tmyFileWebResponse.Close();\n\t\t\t\tallDone.Set();\n\t\t\t\tConsole.WriteLine(&quot;File reading is over.&quot;);\t\n\t\t}\n\n\t}\n</code></pre><pre><code class=\"lang-cpp\" name=\"FileWebRequest_ResBeginEnd#2\">public ref class RequestDeclare\n{\npublic:\n   FileWebRequest^ myFileWebRequest;\n   RequestDeclare()\n   {\n      myFileWebRequest = nullptr;\n   }\n\n};\n\nref class FileWebRequest_resbeginend\n{\npublic:\n   static ManualResetEvent^ allDone = gcnew ManualResetEvent( false );\n   static void RespCallback( IAsyncResult^ ar )\n   {\n      \n      // State of request is asynchronous.\n      RequestDeclare^ requestDeclare = dynamic_cast&lt;RequestDeclare^&gt;(ar-&gt;AsyncState);\n      FileWebRequest^ myFileWebRequest = requestDeclare-&gt;myFileWebRequest;\n      \n      // End the Asynchronus request by calling the &#39;EndGetResponse()&#39; method.\n      FileWebResponse^ myFileWebResponse = dynamic_cast&lt;FileWebResponse^&gt;(myFileWebRequest-&gt;EndGetResponse( ar ));\n      \n      // Reade the response into Stream.\n      StreamReader^ streamReader = gcnew StreamReader( myFileWebResponse-&gt;GetResponseStream() );\n      array&lt;Char&gt;^readBuffer = gcnew array&lt;Char&gt;(256);\n      int count = streamReader-&gt;Read( readBuffer, 0, 256 );\n      Console::WriteLine( &quot;The contents of the file are :<br>&quot; );\n      while ( count &gt; 0 )\n      {\n         String^ str = gcnew String( readBuffer,0,count );\n         Console::WriteLine( str );\n         count = streamReader-&gt;Read( readBuffer, 0, 256 );\n      }\n\n      streamReader-&gt;Close();\n      \n      // Release the response Object* resources.\n      myFileWebResponse-&gt;Close();\n      allDone-&gt;Set();\n      Console::WriteLine( &quot;File reading is over.&quot; );\n   }\n\n};\n\nint main()\n{\n   array&lt;String^&gt;^args = Environment::GetCommandLineArgs();\n   if ( args-&gt;Length &lt; 2 )\n   {\n      Console::WriteLine( &quot;<br>Please enter the file name as command line parameter:&quot; );\n      Console::WriteLine( &quot;Usage:FileWebRequest_resbeginend &lt;systemname&gt;/&lt;sharedfoldername&gt;/&lt;filename&gt;<br>&quot; );\n      Console::WriteLine( &quot;Example:FileWebRequest_resbeginend shafeeque/shaf/hello.txt&quot; );\n   }\n   else\n   {\n      try\n      {\n         \n         // Place a &#39;Webrequest&#39;.\n         WebRequest^ myWebRequest = WebRequest::Create( String::Concat( &quot;file://&quot;, args[ 1 ] ) );\n         \n         // Create an instance of the &#39;RequestDeclare&#39; and associating the &#39;myWebRequest&#39; to it.\n         RequestDeclare^ myRequestDeclare = gcnew RequestDeclare;\n         myRequestDeclare-&gt;myFileWebRequest = dynamic_cast&lt;FileWebRequest^&gt;(myWebRequest);\n         \n         // Begin the Asynchronous request for getting file content using &#39;BeginGetResponse()&#39; method.\n         IAsyncResult^ asyncResult = dynamic_cast&lt;IAsyncResult^&gt;(myRequestDeclare-&gt;myFileWebRequest-&gt;BeginGetResponse( gcnew AsyncCallback( &amp;FileWebRequest_resbeginend::RespCallback ), myRequestDeclare ));\n         FileWebRequest_resbeginend::allDone-&gt;WaitOne();\n      }\n      catch ( ArgumentNullException^ e ) \n      {\n         Console::WriteLine( &quot;ArgumentNullException is : {0}&quot;, e-&gt;Message );\n      }\n      catch ( UriFormatException^ e ) \n      {\n         Console::WriteLine( &quot;UriFormatException is : {0}&quot;, e-&gt;Message );\n      }\n\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"FileWebRequest_ResBeginEnd#2\">Public Class RequestDeclare\n    Public myFileWebRequest As FileWebRequest\n     \n    Public Sub New()\n        myFileWebRequest = Nothing\n    End Sub &#39; New\nEnd Class &#39; RequestDeclare\n\n\n\nClass FileWebRequest_resbeginend\n    \n    Public Shared allDone As New ManualResetEvent(False)\n    \n    &#39; Entry point which delegates to C-style main Private Function.\n    Public Overloads Shared Sub Main()\n        Main(GetCommandLineArgs())\n    End Sub\n    \n    Overloads Shared Sub Main(args() As String)\n        \n        If args.Length &lt; 2 Then\n            Console.WriteLine(ControlChars.Cr + &quot;Please enter the file name as command line parameter:&quot;)\n            Console.WriteLine(&quot;Usage:FileWebRequest_resbeginend &quot; + ChrW(60) + &quot;systemname&quot; + ChrW(62) + &quot;/&quot; + ChrW(60) + &quot;sharedfoldername&quot; + ChrW(62) + &quot;/&quot; + ChrW(60) + &quot;filename&quot; + ChrW(62) + ControlChars.Cr + &quot;Example:FileWebRequest_resbeginend shafeeque/shaf/hello.txt&quot;)\n        \n        Else\n            Try\n\n                &#39; Place a webrequest.\n                Dim myWebRequest As WebRequest = WebRequest.Create((&quot;file://&quot; + args(1)))\n                &#39; Create an instance of the &#39;RequestDeclare&#39; and associating the &#39;myWebRequest&#39; to it.\t\t\n                Dim myRequestDeclare As New RequestDeclare()\n                myRequestDeclare.myFileWebRequest = CType(myWebRequest, FileWebRequest)\n                \n                &#39; Begin the Asynchronous request for getting file content using &#39;BeginGetResponse()&#39; method.\t\n                 Dim asyncResult As IAsyncResult = CType(myRequestDeclare.myFileWebRequest.BeginGetResponse(AddressOf RespCallback, myRequestDeclare), IAsyncResult)\n                 allDone.WaitOne()\n\n            \n            Catch e As ArgumentNullException\n                Console.WriteLine((&quot;ArgumentNullException is :&quot; + e.Message))\n            Catch e As UriFormatException\n                Console.WriteLine((&quot;UriFormatException is :&quot; + e.Message))\n            End Try\n        End If\n    End Sub &#39; Main\n    \n    \n    Private Shared Sub RespCallback(ar As IAsyncResult)\n\n\n\n        &#39; State of request is asynchronous.\n        Dim requestDeclare As RequestDeclare = CType(ar.AsyncState, RequestDeclare)\n        \n        Dim myFileWebRequest As FileWebRequest = requestDeclare.myFileWebRequest\n        \n        &#39; End the Asynchronus request by calling the &#39;EndGetResponse()&#39; method.\n        Dim myFileWebResponse As FileWebResponse = CType(myFileWebRequest.EndGetResponse(ar), FileWebResponse)\n        \n        &#39; Reade the response into Stream.\n        Dim streamReader As New StreamReader(myFileWebResponse.GetResponseStream())\n\n       \n        Dim readBuffer(256) As [Char]\n        \n        Dim count As Integer = streamReader.Read(readBuffer, 0, 256)\n        \n        Console.WriteLine(&quot;The contents of the file are :&quot;+ControlChars.Cr)\n        \n        While count &gt; 0\n            Dim str As New [String](readBuffer, 0, count)\n            Console.WriteLine(str)\n            count = streamReader.Read(readBuffer, 0, 256)\n        End While\n\t     streamReader.Close()\n        &#39; Release the response object resources.\n\t     myFileWebResponse.Close()\n        allDone.Set()\n        Console.WriteLine(&quot;File reading is over.&quot;)\n    End Sub &#39; RespCallback \nEnd Class &#39; FileWebRequest_resbeginend\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FileWebRequest_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Net_FileWebRequest_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetObjectData(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Populates a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> with the data needed to serialize the target object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializationInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> to populate with data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>streamingContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> that specifies the destination for this serialization.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Any objects that are included in the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> are automatically tracked and serialized by the formatter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FileWebRequest_GetRequestStream\">\r\n    \r\n            <a id=\"System_Net_FileWebRequest_GetRequestStream_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetRequestStream()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object for writing data to the file system resource.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.IO.Stream GetRequestStream ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> for writing data to the file system resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The request times out.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GetRequestStream method provides synchronous access to the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>. For asynchronous access, use the <a class=\"xref\" href=\"system.net.filewebrequest#System_Net_FileWebRequest_BeginGetRequestStream_\" data-linktype=\"relative-path\">BeginGetRequestStream</a> and <a class=\"xref\" href=\"system.net.filewebrequest#System_Net_FileWebRequest_EndGetRequestStream_\" data-linktype=\"relative-path\">EndGetRequestStream</a> methods.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the GetRequestStream method to obtain a stream instance used to write to the file. Refer to the complete example in the <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Net.FileWebRequest#5\">                // Enter the string to write to the file.\n                Console.WriteLine (&quot;Enter the string you want to write:&quot;);\n\n                string userInput = Console.ReadLine ();\n\n                // Convert the string to a byte array.\n                ASCIIEncoding encoder = new ASCIIEncoding ();\n                byte[] byteArray = encoder.GetBytes (userInput);\n\n                // Set the ContentLength property.\n                myFileWebRequest.ContentLength = byteArray.Length;\n\n                string contentLength = myFileWebRequest.ContentLength.ToString ();\n\n                Console.WriteLine (&quot;<br>The content length is {0}.&quot;, contentLength);\n\n                // Get the file stream handler to write to the file.\n                Stream readStream = myFileWebRequest.GetRequestStream ();\n\n                // Write to the file stream. \n                // Note.  For this to work, the file must be accessible\n                // on the network. This can be accomplished by setting the property\n                // sharing of the folder containg the file. \n                // FileWebRequest.Credentials property cannot be used for this purpose.\n                readStream.Write (byteArray, 0, userInput.Length);\n                Console.WriteLine (&quot;<br>The String you entered was successfully written to the file.&quot;);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Net.FileWebRequest#5\">                    &#39; Enter the string to write to the file.\n                    Console.WriteLine(&quot;Enter the string you want to write:&quot;)\n                    Dim userInput As String = Console.ReadLine()\n\n                    &#39; Convert the string to a byte array.\n                    Dim encoder As New ASCIIEncoding\n                    Dim byteArray As Byte() = encoder.GetBytes(userInput)\n\n                    &#39; Set the ContentLength property.\n                    myFileWebRequest.ContentLength = byteArray.Length\n\n                    Dim contentLength As String = myFileWebRequest.ContentLength.ToString()\n\n                    Console.WriteLine(ControlChars.Lf + &quot;The content length is {0}.&quot;, contentLength)\n\n\n                    &#39; Get the file stream handler to write to the file.\n                    Dim readStream As Stream = myFileWebRequest.GetRequestStream()\n\n                    &#39; Write to the stream. \n                    &#39; Note. For this to work the file must be accessible\n                    &#39; on the network. This can be accomplished by setting the property\n                    &#39; sharing of the folder containg the file.  \n                    &#39; FileWebRequest.Credentials property cannot be used for this purpose.\n                    readStream.Write(byteArray, 0, userInput.Length)\n\n\n                    Console.WriteLine(ControlChars.Lf + &quot;The String you entered was successfully written to the file.&quot;)\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Net.FileWebRequest#5\">         // Enter the string to write into the file.\n         Console::WriteLine( &quot;Enter the string you want to write:&quot; );\n         String^ userInput = Console::ReadLine();\n         \n         // Convert the string to Byte array.\n         ASCIIEncoding^ encoder = gcnew ASCIIEncoding;\n         array&lt;Byte&gt;^byteArray = encoder-&gt;GetBytes( userInput );\n         \n         // Set the ContentLength property.\n         myFileWebRequest-&gt;ContentLength = byteArray-&gt;Length;\n         String^ contentLength = myFileWebRequest-&gt;ContentLength.ToString();\n         Console::WriteLine( &quot;<br>The content length is {0}.&quot;, contentLength );\n         \n         // Get the file stream handler to write into the file.\n         Stream^ readStream = myFileWebRequest-&gt;GetRequestStream();\n         \n         // Write to the file stream.\n         // Note. In order for this to work the file must be accessible\n         // on the network. This can be accomplished by setting the property\n         // sharing of the folder containg the file. The permissions\n         // can be set so everyone can modify the file.\n         // FileWebRequest::Credentials property cannot be used for this purpose.\n         readStream-&gt;Write( byteArray, 0, userInput-&gt;Length );\n         Console::WriteLine( &quot;<br>The String you entered was successfully written into the file.&quot; );\n         \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FileWebRequest_GetResponse\">\r\n    \r\n            <a id=\"System_Net_FileWebRequest_GetResponse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetResponse()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a response to a file system request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Net.WebResponse GetResponse ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> that contains the response from the file system resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The request timed out.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GetResponse method returns a <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> object that contains the response from the file system resource.  </p>\n<p> The GetResponse method provides synchronous access to the <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a>. For asynchronous access, use the <a class=\"xref\" href=\"system.net.filewebrequest#System_Net_FileWebRequest_BeginGetResponse_\" data-linktype=\"relative-path\">BeginGetResponse</a> and <a class=\"xref\" href=\"system.net.filewebrequest#System_Net_FileWebRequest_EndGetResponse_\" data-linktype=\"relative-path\">EndGetResponse</a> methods.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the GetResponse method to return a file system request response.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Net.FilewebRequest.GetResponse#1\">//\n// This program shows how to use the FileWebRequest::GetResponse method \n// to read and display the content of a file passed by the user.\n// Note. In order for this program to work, the folder containing the test file\n// must be shared with its permissions set to allow read access. \n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Net;\nusing namespace System::IO;\nref class TestGetResponse\n{\nprivate:\n   static FileWebResponse^ myFileWebResponse;\n   static void showUsage()\n   {\n      Console::WriteLine( &quot;<br>Please enter file name:&quot; );\n      Console::WriteLine( &quot;Usage: cs_getresponse &lt;systemname&gt;/&lt;sharedfoldername&gt;/&lt;filename&gt;&quot; );\n      Console::WriteLine( &quot;Example: cs_getresponse ndpue/temp/hello.txt&quot; );\n   }\n\n   static bool makeFileRequest( String^ fileName )\n   {\n      bool requestOk = false;\n      try\n      {\n         Uri^ myUrl = gcnew Uri( String::Format( &quot;file://{0}&quot;, fileName ) );\n         \n         // Create a Filewebrequest object using the passed Uri. \n         FileWebRequest^ myFileWebRequest = dynamic_cast&lt;FileWebRequest^&gt;(WebRequest::Create( myUrl ));\n         \n         // Get the FileWebResponse object.\n         myFileWebResponse = dynamic_cast&lt;FileWebResponse^&gt;(myFileWebRequest-&gt;GetResponse());\n         requestOk = true;\n      }\n      catch ( WebException^ e ) \n      {\n         Console::WriteLine( &quot;WebException: {0}&quot;, e-&gt;Message );\n      }\n      catch ( UriFormatException^ e ) \n      {\n         Console::WriteLine( &quot;UriFormatWebException: {0}&quot;, e-&gt;Message );\n      }\n\n      return requestOk;\n   }\n\n   static void readFile()\n   {\n      try\n      {\n         \n         // Create the file stream. \n         Stream^ receiveStream = myFileWebResponse-&gt;GetResponseStream();\n         \n         // Create a reader object to read the file content.\n         StreamReader^ readStream = gcnew StreamReader( receiveStream );\n         \n         // Create a local buffer for a temporary storage of the \n         // read data.\n         array&lt;Char&gt;^readBuffer = gcnew array&lt;Char&gt;(256);\n         \n         // Read the first up to 256 bytes.\n         int count = readStream-&gt;Read( readBuffer, 0, 256 );\n         Console::WriteLine( &quot;The file content is:&quot; );\n         Console::WriteLine( &quot;&quot; );\n         \n         // Loop to read the remaining bytes in 256 blocks\n         // and display the data on the console.\n         while ( count &gt; 0 )\n         {\n            String^ str = gcnew String( readBuffer,0,count );\n            Console::WriteLine(  &quot;{0}<br>&quot;, str );\n            count = readStream-&gt;Read( readBuffer, 0, 256 );\n         }\n         readStream-&gt;Close();\n         \n         // Release the response object resources.\n         myFileWebResponse-&gt;Close();\n      }\n      catch ( WebException^ e ) \n      {\n         Console::WriteLine( &quot;The WebException: {0}&quot;, e-&gt;Message );\n      }\n      catch ( UriFormatException^ e ) \n      {\n         Console::WriteLine( &quot;The UriFormatException: {0}&quot;, e-&gt;Message );\n      }\n\n   }\n\n\npublic:\n   static void Main()\n   {\n      array&lt;String^&gt;^args = Environment::GetCommandLineArgs();\n      if ( args-&gt;Length &lt; 2 )\n            showUsage();\n      else\n      {\n         if ( makeFileRequest( args[ 1 ] ) )\n                  readFile();\n      }\n   }\n\n};\n\nint main()\n{\n   TestGetResponse::Main();\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Net.FilewebRequest.GetResponse#1\">//\n// This example shows how to use the FileWebRequest.GetResponse method \n// to read and display the contents of a file passed by the user.\n// Note.  For this program to work, the folder containing the test file\n// must be shared, with its permissions set to allow read access. \n\nusing System;\nusing System.Net;\nusing System.IO;\n\nnamespace Mssc.PluggableProtocols.File\n{\n  \n  class TestGetResponse\n  {\n    private static FileWebResponse myFileWebResponse;\n\n    private static void showUsage()\n    {\n      Console.WriteLine(&quot;<br>Please enter file name:&quot;);\n      Console.WriteLine(&quot;Usage: cs_getresponse &lt;systemname&gt;/&lt;sharedfoldername&gt;/&lt;filename&gt;&quot;);\n    }\n\n    private static bool makeFileRequest(string fileName)\n    {\n      bool requestOk = false;\n      try\n      {\n        Uri myUrl = new Uri(&quot;file://&quot; + fileName);\n    \n        // Create a FileWebRequest object using the passed URI. \n        FileWebRequest myFileWebRequest = (FileWebRequest)WebRequest.Create(myUrl);\n\n        // Get the FileWebResponse object.\n        myFileWebResponse =(FileWebResponse)myFileWebRequest.GetResponse();\n        \n        requestOk = true;\n      }\n      catch(WebException e)\n      {\n        Console.WriteLine(&quot;WebException: &quot;+e.Message);\n      }\n      catch(UriFormatException e)\n      {\n        Console.WriteLine(&quot;UriFormatWebException: &quot;+e.Message);\n      }\n      \n      return requestOk;\n\n    }\n    \n    private static void readFile()\n    {\n      try\n      {\n        // Create the file stream. \n        Stream receiveStream=myFileWebResponse.GetResponseStream();\n        \n        // Create a reader object to read the file content.\n        StreamReader readStream = new StreamReader( receiveStream );\n        \n        // Create a local buffer for a temporary storage of the \n        // read data.\n        char[] readBuffer = new Char[256];\n        \n        // Read the first 256 bytes.\n        int count = readStream.Read( readBuffer, 0, 256 );\n\n        Console.WriteLine(&quot;The file content is:&quot;);\n        Console.WriteLine(&quot;&quot;);\n     \n        // Loop to read the remaining data in blocks of 256 bytes\n        // and display the data on the console.\n        while (count &gt; 0) \n        {\n          String str = new String(readBuffer, 0, count);\n          Console.WriteLine(str+&quot;<br>&quot;);\n          count = readStream.Read(readBuffer, 0, 256);\n        }\n \n        readStream.Close();\n        \n        // Release the response object resources.\n        myFileWebResponse.Close();\n      \n      }\n      catch(WebException e)\n      {\n        Console.WriteLine(&quot;The WebException: &quot;+e.Message);\n      }\n      catch(UriFormatException e)\n      {\n        Console.WriteLine(&quot;The UriFormatException: &quot;+e.Message);\n      }\n      \n    }\n\n    static void Main(string[] args)\n    {\n\n      if (args.Length &lt; 1)\n        showUsage();\n      else\n      {\n        if (makeFileRequest(args[0])== true)\n          readFile();\n      }   \n    }\n  }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Net.FilewebRequest.GetResponse#1\">&#39;\n&#39; This example shows how to use the FileWebRequest.GetResponse method \n&#39; to read and display the contents of a file passed by the user.\n&#39; Note.  For this program to work, the folder containing the test file\n&#39; must be shared, with its permissions set to allow read access. \n\n\nImports System\nImports System.Net\nImports System.IO\n\n\nNamespace Mssc.PluggableProtocols.File\n\n  Module M_TestGetResponse\n\n    Class TestGetResponse\n      Private Shared myFileWebResponse As FileWebResponse\n\n\n      Private Shared Sub showUsage()\n        Console.WriteLine(ControlChars.Lf + &quot;Please enter file name:&quot;)\n        Console.WriteLine(&quot;Usage: cs_getresponse &lt;systemname&gt;/&lt;sharedfoldername&gt;/&lt;filename&gt;&quot;)\n      End Sub &#39;showUsage\n\n\n      Private Shared Function makeFileRequest(ByVal fileName As String) As Boolean\n        Dim requestOk As Boolean = False\n        Try\n          Dim myUrl As New Uri(&quot;file://&quot; + fileName)\n\n          &#39; Create a FileWebRequest object using the passed URI. \n          Dim myFileWebRequest As FileWebRequest = CType(WebRequest.Create(myUrl), FileWebRequest)\n\n          &#39; Get the FileWebResponse object.\n          myFileWebResponse = CType(myFileWebRequest.GetResponse(), FileWebResponse)\n\n          requestOk = True\n        Catch e As WebException\n          Console.WriteLine((&quot;WebException: &quot; + e.Message))\n        Catch e As UriFormatException\n          Console.WriteLine((&quot;UriFormatWebException: &quot; + e.Message))\n        End Try\n\n        Return requestOk\n      End Function &#39;makeFileRequest\n\n\n      Private Shared Sub readFile()\n        Try\n          &#39; Create the file stream. \n          Dim receiveStream As Stream = myFileWebResponse.GetResponseStream()\n\n          &#39; Create a reader object to read the file content.\n          Dim readStream As New StreamReader(receiveStream)\n\n          &#39; Create a local buffer for a temporary storage of the \n          &#39; read data.\n          Dim readBuffer() As Char = New [Char](255) {}\n\n          &#39; Read the first 256 bytes.\n          Dim count As Integer = readStream.Read(readBuffer, 0, 256)\n\n          Console.WriteLine(&quot;The file content is:&quot;)\n          Console.WriteLine(&quot;&quot;)\n\n          &#39;Loop to read the remaining data in blocks of 256 bytes\n          &#39;and display the data on the console.\n          While count &gt; 0\n            Dim str As New [String](readBuffer, 0, count)\n            Console.WriteLine((str + ControlChars.Lf))\n            count = readStream.Read(readBuffer, 0, 256)\n          End While\n\n          readStream.Close()\n\n          &#39; Release the response object resources.\n          myFileWebResponse.Close()\n\n        Catch e As WebException\n          Console.WriteLine((&quot;The WebException: &quot; + e.Message))\n        Catch e As UriFormatException\n          Console.WriteLine((&quot;The UriFormatException: &quot; + e.Message))\n        End Try\n      End Sub &#39;readFile\n\n      &#39;Entry point which delegates to C-style main Private Function\n      Public Shared Sub Main(ByVal args() As String)\n\n        If args.Length &lt; 1 Then\n          showUsage()\n        Else\n          If makeFileRequest(args(0)) = True Then\n            readFile()\n          End If\n        End If\n      End Sub &#39;Main\n    End Class &#39;TestGetResponse\n\n  End Module\n\nEnd Namespace\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FileWebRequest_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Net_FileWebRequest_System_Runtime_Serialization_ISerializable_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Populates a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object with the required data to serialize the <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializationInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> that holds the serialized data for the <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>streamingContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> that contains the destination of the serialized stream that is associated with the new <a class=\"xref\" href=\"system.net.filewebrequest\" data-linktype=\"relative-path\">FileWebRequest</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.FileWebRequest.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.FileWebRequest.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.FileWebRequest\">\r\n<meta name=\"APIName\" content=\"System.Net.FileWebRequest..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.FileWebRequest.Abort\">\r\n<meta name=\"APIName\" content=\"System.Net.FileWebRequest.BeginGetRequestStream\">\r\n<meta name=\"APIName\" content=\"System.Net.FileWebRequest.BeginGetResponse\">\r\n<meta name=\"APIName\" content=\"System.Net.FileWebRequest.ConnectionGroupName\">\r\n<meta name=\"APIName\" content=\"System.Net.FileWebRequest.ContentLength\">\r\n<meta name=\"APIName\" content=\"System.Net.FileWebRequest.ContentType\">\r\n<meta name=\"APIName\" content=\"System.Net.FileWebRequest.Credentials\">\r\n<meta name=\"APIName\" content=\"System.Net.FileWebRequest.EndGetRequestStream\">\r\n<meta name=\"APIName\" content=\"System.Net.FileWebRequest.EndGetResponse\">\r\n<meta name=\"APIName\" content=\"System.Net.FileWebRequest.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.Net.FileWebRequest.GetRequestStream\">\r\n<meta name=\"APIName\" content=\"System.Net.FileWebRequest.GetResponse\">\r\n<meta name=\"APIName\" content=\"System.Net.FileWebRequest.Headers\">\r\n<meta name=\"APIName\" content=\"System.Net.FileWebRequest.Method\">\r\n<meta name=\"APIName\" content=\"System.Net.FileWebRequest.PreAuthenticate\">\r\n<meta name=\"APIName\" content=\"System.Net.FileWebRequest.Proxy\">\r\n<meta name=\"APIName\" content=\"System.Net.FileWebRequest.RequestUri\">\r\n<meta name=\"APIName\" content=\"System.Net.FileWebRequest.ISerializable.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.Net.FileWebRequest.Timeout\">\r\n<meta name=\"APIName\" content=\"System.Net.FileWebRequest.UseDefaultCredentials\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"6a6188be-bcfc-043e-3568-3505ac7fec48\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a file system implementation of the  class.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.FileWebRequest\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.FileWebRequest.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.FileWebRequest.yml","open_to_public_contributors":true,"api_name":["System.Net.FileWebRequest","System.Net.FileWebRequest..ctor","System.Net.FileWebRequest.Abort","System.Net.FileWebRequest.BeginGetRequestStream","System.Net.FileWebRequest.BeginGetResponse","System.Net.FileWebRequest.ConnectionGroupName","System.Net.FileWebRequest.ContentLength","System.Net.FileWebRequest.ContentType","System.Net.FileWebRequest.Credentials","System.Net.FileWebRequest.EndGetRequestStream","System.Net.FileWebRequest.EndGetResponse","System.Net.FileWebRequest.GetObjectData","System.Net.FileWebRequest.GetRequestStream","System.Net.FileWebRequest.GetResponse","System.Net.FileWebRequest.Headers","System.Net.FileWebRequest.Method","System.Net.FileWebRequest.PreAuthenticate","System.Net.FileWebRequest.Proxy","System.Net.FileWebRequest.RequestUri","System.Net.FileWebRequest.ISerializable.GetObjectData","System.Net.FileWebRequest.Timeout","System.Net.FileWebRequest.UseDefaultCredentials"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.FileWebRequest","System::Net::FileWebRequest","System.Net.FileWebRequest.#ctor","System::Net::FileWebRequest::#ctor","System.Net.FileWebRequest.Abort","System::Net::FileWebRequest::Abort","System.Net.FileWebRequest.BeginGetRequestStream","System::Net::FileWebRequest::BeginGetRequestStream","System.Net.FileWebRequest.BeginGetResponse","System::Net::FileWebRequest::BeginGetResponse","System.Net.FileWebRequest.ConnectionGroupName","System::Net::FileWebRequest::ConnectionGroupName","System.Net.FileWebRequest.ContentLength","System::Net::FileWebRequest::ContentLength","System.Net.FileWebRequest.ContentType","System::Net::FileWebRequest::ContentType","System.Net.FileWebRequest.Credentials","System::Net::FileWebRequest::Credentials","System.Net.FileWebRequest.EndGetRequestStream","System::Net::FileWebRequest::EndGetRequestStream","System.Net.FileWebRequest.EndGetResponse","System::Net::FileWebRequest::EndGetResponse","System.Net.FileWebRequest.GetObjectData","System::Net::FileWebRequest::GetObjectData","System.Net.FileWebRequest.GetRequestStream","System::Net::FileWebRequest::GetRequestStream","System.Net.FileWebRequest.GetResponse","System::Net::FileWebRequest::GetResponse","System.Net.FileWebRequest.Headers","System::Net::FileWebRequest::Headers","System.Net.FileWebRequest.Method","System::Net::FileWebRequest::Method","System.Net.FileWebRequest.PreAuthenticate","System::Net::FileWebRequest::PreAuthenticate","System.Net.FileWebRequest.Proxy","System::Net::FileWebRequest::Proxy","System.Net.FileWebRequest.RequestUri","System::Net::FileWebRequest::RequestUri","System.Net.FileWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData","System::Net::FileWebRequest::System#Runtime#Serialization#ISerializable#GetObjectData","System.Net.FileWebRequest.Timeout","System::Net::FileWebRequest::Timeout","System.Net.FileWebRequest.UseDefaultCredentials","System::Net::FileWebRequest::UseDefaultCredentials"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"6a6188be-bcfc-043e-3568-3505ac7fec48","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net/FileWebRequest.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"FileWebRequest class | Microsoft Docs","_op_ogTitle":"FileWebRequest class","description":"Provides a file system implementation of the  class.\n","toc_asset_id":"_splitted/System.Net/toc.json","toc_rel":"_splitted/System.Net/toc.json","source_url":"","ms.assetid":"System.Net.FileWebRequest","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.filewebrequest","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.filewebrequest","fileRelativePath":"System.Net.FileWebRequest.html"},"themesRelativePathToOutputRoot":"_themes/"}