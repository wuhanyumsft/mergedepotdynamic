{"content":"    \r\n    <h1 id=\"System_ComponentModel_ISynchronizeInvoke\">\r\n      <span class=\"lang-csharp\">ISynchronizeInvoke</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a way to synchronously or asynchronously execute a delegate.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface ISynchronizeInvoke</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The ISynchronizeInvoke interface provides synchronous and asynchronous communication between objects about the occurrence of an event. Objects that implement this interface can receive notification that an event has occurred, and they can respond to queries about the event. In this way, clients can ensure that one request has been processed before they submit a subsequent request that depends on completion of the first.  </p>\n<p> The ISynchronizeInvoke class provides two ways to invoke a process:  </p>\n<ol>\n<li><p>Asynchronously, by using the [BeginInvoke(Delegate,â€‚Object&lt;xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A&gt; method. <a class=\"xref\" href=\"system.componentmodel.isynchronizeinvoke#System_ComponentModel_ISynchronizeInvoke_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> starts a process and then returns immediately. Use <a class=\"xref\" href=\"system.componentmodel.isynchronizeinvoke#System_ComponentModel_ISynchronizeInvoke_EndInvoke_\" data-linktype=\"relative-path\">EndInvoke</a> to wait until the process started by <a class=\"xref\" href=\"system.componentmodel.isynchronizeinvoke#System_ComponentModel_ISynchronizeInvoke_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> completes.  </p>\n</li>\n<li><p>Synchronously, by using the <a class=\"xref\" href=\"system.componentmodel.isynchronizeinvoke#System_ComponentModel_ISynchronizeInvoke_Invoke_\" data-linktype=\"relative-path\">Invoke</a> method. <a class=\"xref\" href=\"system.componentmodel.isynchronizeinvoke#System_ComponentModel_ISynchronizeInvoke_Invoke_\" data-linktype=\"relative-path\">Invoke</a> starts a process, waits until it completes, and then returns. Use <a class=\"xref\" href=\"system.componentmodel.isynchronizeinvoke#System_ComponentModel_ISynchronizeInvoke_Invoke_\" data-linktype=\"relative-path\">Invoke</a> when the control&#39;s main thread is different from the calling thread to marshal the call to the proper thread.  </p>\n</li>\n</ol>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.security.permissions.hostprotectionattribute\" data-linktype=\"relative-path\">HostProtectionAttribute</a> attribute applied to this class has the following <a class=\"xref\" href=\"system.security.permissions.hostprotectionattribute#System_Security_Permissions_HostProtectionAttribute_Resources_\" data-linktype=\"relative-path\">Resources</a> property value: <a class=\"xref\" href=\"system.security.permissions.hostprotectionresource\" data-linktype=\"relative-path\">HostProtectionResource</a> &#124; <a class=\"xref\" href=\"system.security.permissions.hostprotectionresource\" data-linktype=\"relative-path\">HostProtectionResource</a>. The <a class=\"xref\" href=\"system.security.permissions.hostprotectionattribute\" data-linktype=\"relative-path\">HostProtectionAttribute</a> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <a class=\"xref\" href=\"system.security.permissions.hostprotectionattribute\" data-linktype=\"relative-path\">HostProtectionAttribute</a> class or <a href=\"../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md\" data-linktype=\"relative-path\">SQL Server Programming and Host Protection Attributes</a>.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_ISynchronizeInvoke_InvokeRequired\" data-linktype=\"self-bookmark\">InvokeRequired</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the caller must call <span class=\"xref\">stem.ComponentModel.ISynchronizeInvoke.Invoke*</span> when calling an object that implements this interface.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_ISynchronizeInvoke_BeginInvoke_System_Delegate_System_Object___\" data-linktype=\"self-bookmark\">BeginInvoke(Delegate,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously executes the delegate on the thread that created this object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_ISynchronizeInvoke_EndInvoke_System_IAsyncResult_\" data-linktype=\"self-bookmark\">EndInvoke(IAsyncResult)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Waits until the process started by calling <span class=\"xref\">stem.ComponentModel.ISynchronizeInvoke.BeginInvoke*</span> completes, and then returns the value generated by the process.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_ISynchronizeInvoke_Invoke_System_Delegate_System_Object___\" data-linktype=\"self-bookmark\">Invoke(Delegate,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Synchronously executes the delegate on the thread that created this object and marshals the call to the creating thread.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_ISynchronizeInvoke_InvokeRequired\">\r\n    \r\n            <a id=\"System_ComponentModel_ISynchronizeInvoke_InvokeRequired_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InvokeRequired</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the caller must call <span class=\"xref\">stem.ComponentModel.ISynchronizeInvoke.Invoke*</span> when calling an object that implements this interface.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool InvokeRequired { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the caller must call <span class=\"xref\">stem.ComponentModel.ISynchronizeInvoke.Invoke*</span>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property determines whether the caller must call <a class=\"xref\" href=\"system.componentmodel.isynchronizeinvoke#System_ComponentModel_ISynchronizeInvoke_Invoke_\" data-linktype=\"relative-path\">Invoke</a> when making method calls to an object that implements this interface. Such objects are bound to a specific thread and are not thread-safe. If you are calling a method from a different thread, you must use the <a class=\"xref\" href=\"system.componentmodel.isynchronizeinvoke#System_ComponentModel_ISynchronizeInvoke_Invoke_\" data-linktype=\"relative-path\">Invoke</a> method to marshal the call to the proper thread.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_ISynchronizeInvoke_BeginInvoke_System_Delegate_System_Object___\">\r\n    \r\n            <a id=\"System_ComponentModel_ISynchronizeInvoke_BeginInvoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginInvoke(Delegate,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously executes the delegate on the thread that created this object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public IAsyncResult BeginInvoke (Delegate method, object[] args);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a> to a method that takes parameters of the same number and type that are contained in <code>args</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of type <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to pass as arguments to the given method. This can be <code>null</code> if no arguments are needed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> interface that represents the asynchronous operation started by calling this method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>method</code> delegate is executed on the thread that created the object, instead of the thread on which BeginInvoke was called.  </p>\n<p> The delegate is called asynchronously, and this method returns immediately. You can call this method from any thread. If you need the return value from a process started with this method, call <a class=\"xref\" href=\"system.componentmodel.isynchronizeinvoke#System_ComponentModel_ISynchronizeInvoke_EndInvoke_\" data-linktype=\"relative-path\">EndInvoke</a> to get the value.  </p>\n<p> If you need to call the delegate synchronously, use the <a class=\"xref\" href=\"system.componentmodel.isynchronizeinvoke#System_ComponentModel_ISynchronizeInvoke_Invoke_\" data-linktype=\"relative-path\">Invoke</a> method instead.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_ISynchronizeInvoke_EndInvoke_System_IAsyncResult_\">\r\n    \r\n            <a id=\"System_ComponentModel_ISynchronizeInvoke_EndInvoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndInvoke(IAsyncResult)</div>        \r\n          </div>\r\n    \r\n            <p>Waits until the process started by calling <span class=\"xref\">stem.ComponentModel.ISynchronizeInvoke.BeginInvoke*</span> completes, and then returns the value generated by the process.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object EndInvoke (IAsyncResult result);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>result</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> interface that represents the asynchronous operation started by calling <span class=\"xref\">stem.ComponentModel.ISynchronizeInvoke.BeginInvoke*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the return value generated by the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method gets the return value of the asynchronous operation represented by the <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> passed by this interface. If the asynchronous operation has not completed, this method will wait until the result is available.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_ISynchronizeInvoke_Invoke_System_Delegate_System_Object___\">\r\n    \r\n            <a id=\"System_ComponentModel_ISynchronizeInvoke_Invoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke(Delegate,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Synchronously executes the delegate on the thread that created this object and marshals the call to the creating thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Invoke (Delegate method, object[] args);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a> that contains a method to call, in the context of the thread for the control.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of type <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the arguments to pass to the given method. This can be <code>null</code> if no arguments are needed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the return value from the delegate being invoked, or <code>null</code> if the delegate has no return value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Unlike <a class=\"xref\" href=\"system.componentmodel.isynchronizeinvoke#System_ComponentModel_ISynchronizeInvoke_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a>, this method operates synchronously, that is, it waits until the process completes before returning. Exceptions raised during the call are propagated back to the caller.  </p>\n<p> Use this method when calling a method from a different thread to marshal the call to the proper thread.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ComponentModel.ISynchronizeInvoke.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ComponentModel.ISynchronizeInvoke.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.ISynchronizeInvoke\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.ISynchronizeInvoke.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.ISynchronizeInvoke.EndInvoke\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.ISynchronizeInvoke.Invoke\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.ISynchronizeInvoke.InvokeRequired\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"210fadeb-160b-2d33-7af8-5b6e2ccd69bc\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.ComponentModel\\ISynchronizeInvoke.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a way to synchronously or asynchronously execute a delegate.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.ComponentModel/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.ISynchronizeInvoke\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ComponentModel.ISynchronizeInvoke.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ComponentModel.ISynchronizeInvoke.yml","open_to_public_contributors":true,"api_name":["System.ComponentModel.ISynchronizeInvoke","System.ComponentModel.ISynchronizeInvoke.BeginInvoke","System.ComponentModel.ISynchronizeInvoke.EndInvoke","System.ComponentModel.ISynchronizeInvoke.Invoke","System.ComponentModel.ISynchronizeInvoke.InvokeRequired"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.ISynchronizeInvoke","System::ComponentModel::ISynchronizeInvoke","System.ComponentModel.ISynchronizeInvoke.BeginInvoke","System::ComponentModel::ISynchronizeInvoke::BeginInvoke","System.ComponentModel.ISynchronizeInvoke.EndInvoke","System::ComponentModel::ISynchronizeInvoke::EndInvoke","System.ComponentModel.ISynchronizeInvoke.Invoke","System::ComponentModel::ISynchronizeInvoke::Invoke","System.ComponentModel.ISynchronizeInvoke.InvokeRequired","System::ComponentModel::ISynchronizeInvoke::InvokeRequired"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"210fadeb-160b-2d33-7af8-5b6e2ccd69bc","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.ComponentModel\\ISynchronizeInvoke.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.ComponentModel/ISynchronizeInvoke.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ISynchronizeInvoke interface | Microsoft Docs","_op_ogTitle":"ISynchronizeInvoke interface","description":"Provides a way to synchronously or asynchronously execute a delegate.\n","toc_asset_id":"_splitted/System.ComponentModel/toc.json","toc_rel":"_splitted/System.ComponentModel/toc.json","source_url":"","ms.assetid":"System.ComponentModel.ISynchronizeInvoke","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.componentmodel.isynchronizeinvoke","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.componentmodel.isynchronizeinvoke","fileRelativePath":"System.ComponentModel.ISynchronizeInvoke.html"},"themesRelativePathToOutputRoot":"_themes/"}