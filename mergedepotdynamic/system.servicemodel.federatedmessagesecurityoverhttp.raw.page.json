{"content":"    \r\n    <h1 id=\"System_ServiceModel_FederatedMessageSecurityOverHttp\">\r\n      <span class=\"lang-csharp\">FederatedMessageSecurityOverHttp</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Configures the message-level security of the <code>WSFederationHttpBinding</code> binding.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class FederatedMessageSecurityOverHttp</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">FederatedMessageSecurityOverHttp</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class contains properties that provide control over various aspects of the security configuration between the client and the service, including details related to the issuer from which the service expects the client to retrieve a federated credential.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_FederatedMessageSecurityOverHttp__ctor\" data-linktype=\"self-bookmark\">FederatedMessageSecurityOverHttp()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.servicemodel.federatedmessagesecurityoverhttp\" data-linktype=\"relative-path\">FederatedMessageSecurityOverHttp</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_FederatedMessageSecurityOverHttp_AlgorithmSuite\" data-linktype=\"self-bookmark\">AlgorithmSuite</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets and sets the algorithm suite that specifies the message encryption and key-wrap algorithms.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_FederatedMessageSecurityOverHttp_ClaimTypeRequirements\" data-linktype=\"self-bookmark\">ClaimTypeRequirements</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of the <a class=\"xref\" href=\"system.servicemodel.security.tokens.claimtyperequirement\" data-linktype=\"relative-path\">ClaimTypeRequirement</a> instances for this binding.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_FederatedMessageSecurityOverHttp_EstablishSecurityContext\" data-linktype=\"self-bookmark\">EstablishSecurityContext</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets whether a security context requires being put into place.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_FederatedMessageSecurityOverHttp_IssuedKeyType\" data-linktype=\"self-bookmark\">IssuedKeyType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies the type of key to be issued.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_FederatedMessageSecurityOverHttp_IssuedTokenType\" data-linktype=\"self-bookmark\">IssuedTokenType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies the type of token which should be issued by the security token service.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_FederatedMessageSecurityOverHttp_IssuerAddress\" data-linktype=\"self-bookmark\">IssuerAddress</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the endpoint address of the security token service that issues credentials for the service.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_FederatedMessageSecurityOverHttp_IssuerBinding\" data-linktype=\"self-bookmark\">IssuerBinding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the binding to be used by the client when communicating with the security token service whose endpoint address equals <span class=\"xref\">stem.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_FederatedMessageSecurityOverHttp_IssuerMetadataAddress\" data-linktype=\"self-bookmark\">IssuerMetadataAddress</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the endpoint address for communicating with the security token service out of band.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_FederatedMessageSecurityOverHttp_NegotiateServiceCredential\" data-linktype=\"self-bookmark\">NegotiateServiceCredential</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies whether a message level SSL negotiation is done to obtain the serviceâ€™s certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_FederatedMessageSecurityOverHttp_TokenRequestParameters\" data-linktype=\"self-bookmark\">TokenRequestParameters</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of XML elements to be sent in the message body to the security token service when requesting a token.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_FederatedMessageSecurityOverHttp_ShouldSerializeAlgorithmSuite\" data-linktype=\"self-bookmark\">ShouldSerializeAlgorithmSuite()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether the algorithm suite to be used for securing messages at the SOAP level should be serialized.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_FederatedMessageSecurityOverHttp_ShouldSerializeClaimTypeRequirements\" data-linktype=\"self-bookmark\">ShouldSerializeClaimTypeRequirements()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns that any existing claim type requirements can be serialized.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_FederatedMessageSecurityOverHttp_ShouldSerializeEstablishSecurityContext\" data-linktype=\"self-bookmark\">ShouldSerializeEstablishSecurityContext()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an indication whether the security context is not the default and therefore should be serialized.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_FederatedMessageSecurityOverHttp_ShouldSerializeIssuedKeyType\" data-linktype=\"self-bookmark\">ShouldSerializeIssuedKeyType()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an indication whether the issued key type is not the default and therefore should be serialized.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_FederatedMessageSecurityOverHttp_ShouldSerializeNegotiateServiceCredential\" data-linktype=\"self-bookmark\">ShouldSerializeNegotiateServiceCredential()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an indication whether the process of negotiating for service credentials is not the default process and therefore should be serialized.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_FederatedMessageSecurityOverHttp_ShouldSerializeTokenRequestParameters\" data-linktype=\"self-bookmark\">ShouldSerializeTokenRequestParameters()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an indication that any existing token request parameters can be serialized.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_FederatedMessageSecurityOverHttp__ctor\">\r\n    \r\n            <a id=\"System_ServiceModel_FederatedMessageSecurityOverHttp__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FederatedMessageSecurityOverHttp()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.servicemodel.federatedmessagesecurityoverhttp\" data-linktype=\"relative-path\">FederatedMessageSecurityOverHttp</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public FederatedMessageSecurityOverHttp ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_AlgorithmSuite\">\r\n    \r\n            <a id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_AlgorithmSuite_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AlgorithmSuite</div>        \r\n          </div>\r\n    \r\n            <p>Gets and sets the algorithm suite that specifies the message encryption and key-wrap algorithms.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.ServiceModel.Security.SecurityAlgorithmSuite AlgorithmSuite { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.security.securityalgorithmsuite\" data-linktype=\"relative-path\">SecurityAlgorithmSuite</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.servicemodel.security.securityalgorithmsuite\" data-linktype=\"relative-path\">SecurityAlgorithmSuite</a>. The default is <span class=\"xref\">stem.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The value is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.servicemodel.security.securityalgorithmsuite\" data-linktype=\"relative-path\">SecurityAlgorithmSuite</a> object that is returned contains numerous properties that specify security algorithms to use in specific conditions. It also describes various security capabilities of the service.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to access this property from the binding, and set it.  </p>\n<pre><code class=\"lang-vb\" name=\"WSFederationHttpSecurity#5\">\t&#39; This method creates a WSFederationHttpBinding.\n\tPublic Shared Function CreateWSFederationHttpBinding(ByVal isClient As Boolean) As WSFederationHttpBinding\n\t  &#39; Create an instance of the WSFederationHttpBinding.\n\t  Dim b As New WSFederationHttpBinding()\n\n\t  &#39; Set the security mode to Message.\n\t  b.Security.Mode = WSFederationHttpSecurityMode.Message\n\n\t  &#39; Set the Algorithm Suite to Basic256Rsa15.\n\t  b.Security.Message.AlgorithmSuite = SecurityAlgorithmSuite.Basic256Rsa15\n</code></pre><pre><code class=\"lang-cs\" name=\"WSFederationHttpSecurity#5\">\t// This method creates a WSFederationHttpBinding.\n\tpublic static WSFederationHttpBinding \n        CreateWSFederationHttpBinding(bool isClient)\n\t{\n\t  // Create an instance of the WSFederationHttpBinding.\n\t  WSFederationHttpBinding b = new WSFederationHttpBinding();\n\n\t  // Set the security mode to Message.\n\t  b.Security.Mode = WSFederationHttpSecurityMode.Message;\n\t  \n\t  // Set the Algorithm Suite to Basic256Rsa15.\n\t  b.Security.Message.AlgorithmSuite = SecurityAlgorithmSuite.Basic256Rsa15;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_ClaimTypeRequirements\">\r\n    \r\n            <a id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_ClaimTypeRequirements_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClaimTypeRequirements</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of the <a class=\"xref\" href=\"system.servicemodel.security.tokens.claimtyperequirement\" data-linktype=\"relative-path\">ClaimTypeRequirement</a> instances for this binding.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Security.Tokens.ClaimTypeRequirement&gt; ClaimTypeRequirements { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.collection-1\" data-linktype=\"relative-path\">Collection</a>&lt;<a class=\"xref\" href=\"system.servicemodel.security.tokens.claimtyperequirement\" data-linktype=\"relative-path\">ClaimTypeRequirement</a>&gt;</div>\r\n                  </div>\r\n                  <p>A <span class=\"xref\">stem.Collections.ObjectModel.Collection`1</span> of type <a class=\"xref\" href=\"system.servicemodel.security.tokens.claimtyperequirement\" data-linktype=\"relative-path\">ClaimTypeRequirement</a>. The default is an empty collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The collection returned by this property is used by the service to specify any required and optional claims which must be in the issued token the client uses to access the service. The service exposes the required claim types in metadata if WSDL publishing is enabled but WCF does not require the issued token contain the specified claim types.  Services wishing to enforce required claim types are present should do using authorization policy.  </p>\n<p> On federated clients this collection contains the list of required and optional claims which is sent to the security token service in the clientâ€™s request for an issued token.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to access this property from the binding, and set it.  </p>\n<pre><code class=\"lang-vb\" name=\"WSFederationHttpSecurity#11\">\t&#39; This method creates a WSFederationHttpBinding.\n\tPublic Shared Function CreateWSFederationHttpBinding(ByVal isClient As Boolean) As WSFederationHttpBinding\n\t  &#39; Create an instance of the WSFederationHttpBinding.\n\t  Dim b As New WSFederationHttpBinding()\n\n\t  &#39; Set the security mode to Message.\n\t  b.Security.Mode = WSFederationHttpSecurityMode.Message\n\n\t  &#39; Set the Algorithm Suite to Basic256Rsa15.\n\t  b.Security.Message.AlgorithmSuite = SecurityAlgorithmSuite.Basic256Rsa15\n\n\t  &#39; Set NegotiateServiceCredential to true.\n\t  b.Security.Message.NegotiateServiceCredential = True\n\n\t  &#39; Set IssuedKeyType to Symmetric.\n\t  b.Security.Message.IssuedKeyType = SecurityKeyType.SymmetricKey\n\n\t  &#39; Set IssuedTokenType to SAML 1.1\n\t  b.Security.Message.IssuedTokenType = &quot;http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#samlv1.1&quot;\n\n\t  &#39; Extract the STS certificate from the certificate store.\n\t  Dim store As New X509Store(StoreName.TrustedPeople, StoreLocation.CurrentUser)\n\t  store.Open(OpenFlags.ReadOnly)\n\t  Dim certs As X509Certificate2Collection = store.Certificates.Find(X509FindType.FindByThumbprint, &quot;0000000000000000000000000000000000000000&quot;, False)\n\t  store.Close()\n\n\t  &#39; Create an EndpointIdentity from the STS certificate.\n\t  Dim identity As EndpointIdentity = EndpointIdentity.CreateX509CertificateIdentity (certs(0))\n\n\t  &#39; Set the IssuerAddress using the address of the STS and the previously created \n\t  &#39; EndpointIdentity.\n\t  b.Security.Message.IssuerAddress = New EndpointAddress(New Uri(&quot;http://localhost:8000/sts/x509&quot;), identity)\n\n\t  &#39; Set the IssuerBinding to a WSHttpBinding loaded from configuration. \n\t  &#39; The IssuerBinding is only used on federated clients.\n\t  If isClient Then\n\t\t  b.Security.Message.IssuerBinding = New WSHttpBinding(&quot;Issuer&quot;)\n\n\t  &#39; Set the IssuerMetadataAddress using the metadata address of the STS and the\n\t  &#39; previously created EndpointIdentity. The IssuerMetadataAddress is only used \n\t  &#39; on federated services.\n\t  Else\n\t\t  b.Security.Message.IssuerMetadataAddress = New EndpointAddress(New Uri(&quot;http://localhost:8001/sts/mex&quot;), identity)\n\t  End If\n\n\t  &#39; Create a ClaimTypeRequirement.\n\t  Dim ctr As New ClaimTypeRequirement(&quot;http://example.org/claim/c1&quot;, False)\n\n\t  &#39; Add the ClaimTypeRequirement to ClaimTypeRequirements\n\t  b.Security.Message.ClaimTypeRequirements.Add(ctr)\n</code></pre><pre><code class=\"lang-cs\" name=\"WSFederationHttpSecurity#11\">\t// This method creates a WSFederationHttpBinding.\n\tpublic static WSFederationHttpBinding \n        CreateWSFederationHttpBinding(bool isClient)\n\t{\n\t  // Create an instance of the WSFederationHttpBinding.\n\t  WSFederationHttpBinding b = new WSFederationHttpBinding();\n\n\t  // Set the security mode to Message.\n\t  b.Security.Mode = WSFederationHttpSecurityMode.Message;\n\t  \n\t  // Set the Algorithm Suite to Basic256Rsa15.\n\t  b.Security.Message.AlgorithmSuite = SecurityAlgorithmSuite.Basic256Rsa15;\n\n\t  // Set NegotiateServiceCredential to true.\n\t  b.Security.Message.NegotiateServiceCredential = true;\n\n\t  // Set IssuedKeyType to Symmetric.\n\t  b.Security.Message.IssuedKeyType = SecurityKeyType.SymmetricKey;\n\n\t  // Set IssuedTokenType to SAML 1.1\n\t  b.Security.Message.IssuedTokenType = \n          &quot;http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#samlv1.1&quot;;\n\n\t  // Extract the STS certificate from the certificate store.\n\t  X509Store store = new X509Store(StoreName.TrustedPeople, StoreLocation.CurrentUser);\n\t  store.Open(OpenFlags.ReadOnly);\n\t  X509Certificate2Collection certs = store.Certificates.Find(\n          X509FindType.FindByThumbprint, &quot;0000000000000000000000000000000000000000&quot;, false);\n\t  store.Close();\n\t  \n\t  // Create an EndpointIdentity from the STS certificate.\n\t  EndpointIdentity identity = EndpointIdentity.CreateX509CertificateIdentity ( certs[0] );\n\t  \n\t  // Set the IssuerAddress using the address of the STS and the previously created \n      // EndpointIdentity.\n\t  b.Security.Message.IssuerAddress = \n          new EndpointAddress(new Uri(&quot;http://localhost:8000/sts/x509&quot;), identity);\n\n\t  // Set the IssuerBinding to a WSHttpBinding loaded from configuration. \n      // The IssuerBinding is only used on federated clients.\n      if (isClient)\n      {\n          b.Security.Message.IssuerBinding = new WSHttpBinding(&quot;Issuer&quot;);\n      }\n\n      // Set the IssuerMetadataAddress using the metadata address of the STS and the\n      // previously created EndpointIdentity. The IssuerMetadataAddress is only used \n      // on federated services.\n      else\n      {\n          b.Security.Message.IssuerMetadataAddress =\n              new EndpointAddress(new Uri(&quot;http://localhost:8001/sts/mex&quot;), identity);\n      }\n\n      // Create a ClaimTypeRequirement.\n\t  ClaimTypeRequirement ctr = new ClaimTypeRequirement \n          (&quot;http://example.org/claim/c1&quot;, false);\n\n\t  // Add the ClaimTypeRequirement to ClaimTypeRequirements\n\t  b.Security.Message.ClaimTypeRequirements.Add(ctr);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_EstablishSecurityContext\">\r\n    \r\n            <a id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_EstablishSecurityContext_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EstablishSecurityContext</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets whether a security context requires being put into place.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool EstablishSecurityContext { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if security context requires placing; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_IssuedKeyType\">\r\n    \r\n            <a id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_IssuedKeyType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IssuedKeyType</div>        \r\n          </div>\r\n    \r\n            <p>Specifies the type of key to be issued.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IdentityModel.Tokens.SecurityKeyType IssuedKeyType { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitykeytype\" data-linktype=\"relative-path\">SecurityKeyType</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.identitymodel.tokens.securitykeytype\" data-linktype=\"relative-path\">SecurityKeyType</a>. The default is <a class=\"xref\" href=\"system.identitymodel.tokens.securitykeytype\" data-linktype=\"relative-path\">SecurityKeyType</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value is not a valid <a class=\"xref\" href=\"system.identitymodel.tokens.securitykeytype\" data-linktype=\"relative-path\">SecurityKeyType</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Valid values of <a class=\"xref\" href=\"system.identitymodel.tokens.securitykeytype\" data-linktype=\"relative-path\">SecurityKeyType</a> are <a class=\"xref\" href=\"system.identitymodel.tokens.securitykeytype\" data-linktype=\"relative-path\">SecurityKeyType</a> and <a class=\"xref\" href=\"system.identitymodel.tokens.securitykeytype\" data-linktype=\"relative-path\">SecurityKeyType</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to access this property from the binding, and set it.  </p>\n<pre><code class=\"lang-vb\" name=\"WSFederationHttpSecurity#7\">\t&#39; This method creates a WSFederationHttpBinding.\n\tPublic Shared Function CreateWSFederationHttpBinding(ByVal isClient As Boolean) As WSFederationHttpBinding\n\t  &#39; Create an instance of the WSFederationHttpBinding.\n\t  Dim b As New WSFederationHttpBinding()\n\n\t  &#39; Set the security mode to Message.\n\t  b.Security.Mode = WSFederationHttpSecurityMode.Message\n\n\t  &#39; Set the Algorithm Suite to Basic256Rsa15.\n\t  b.Security.Message.AlgorithmSuite = SecurityAlgorithmSuite.Basic256Rsa15\n\n\t  &#39; Set NegotiateServiceCredential to true.\n\t  b.Security.Message.NegotiateServiceCredential = True\n\n\t  &#39; Set IssuedKeyType to Symmetric.\n\t  b.Security.Message.IssuedKeyType = SecurityKeyType.SymmetricKey\n</code></pre><pre><code class=\"lang-cs\" name=\"WSFederationHttpSecurity#7\">\t// This method creates a WSFederationHttpBinding.\n\tpublic static WSFederationHttpBinding \n        CreateWSFederationHttpBinding(bool isClient)\n\t{\n\t  // Create an instance of the WSFederationHttpBinding.\n\t  WSFederationHttpBinding b = new WSFederationHttpBinding();\n\n\t  // Set the security mode to Message.\n\t  b.Security.Mode = WSFederationHttpSecurityMode.Message;\n\t  \n\t  // Set the Algorithm Suite to Basic256Rsa15.\n\t  b.Security.Message.AlgorithmSuite = SecurityAlgorithmSuite.Basic256Rsa15;\n\n\t  // Set NegotiateServiceCredential to true.\n\t  b.Security.Message.NegotiateServiceCredential = true;\n\n\t  // Set IssuedKeyType to Symmetric.\n\t  b.Security.Message.IssuedKeyType = SecurityKeyType.SymmetricKey;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_IssuedTokenType\">\r\n    \r\n            <a id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_IssuedTokenType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IssuedTokenType</div>        \r\n          </div>\r\n    \r\n            <p>Specifies the type of token which should be issued by the security token service.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string IssuedTokenType { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The type of token to be issued. The default is <code>null</code>, which causes WCF to request a SAML security token from the STS.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property indicates the type of token that the service expects and controls which SecurityTokenAuthenticator is created on the service. On the client it controls the type which is sent to the security token service in the clientâ€™s request for an issued token.  </p>\n<p> The IssuedTokenType typically takes the form of a URI.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to access this property from the binding, and set it.  </p>\n<pre><code class=\"lang-vb\" name=\"WSFederationHttpSecurity#4\">\t&#39; This method creates a WSFederationHttpBinding.\n\tPublic Shared Function CreateWSFederationHttpBinding(ByVal isClient As Boolean) As WSFederationHttpBinding\n\t  &#39; Create an instance of the WSFederationHttpBinding.\n\t  Dim b As New WSFederationHttpBinding()\n\n\t  &#39; Set the security mode to Message.\n\t  b.Security.Mode = WSFederationHttpSecurityMode.Message\n\n\t  &#39; Set the Algorithm Suite to Basic256Rsa15.\n\t  b.Security.Message.AlgorithmSuite = SecurityAlgorithmSuite.Basic256Rsa15\n\n\t  &#39; Set NegotiateServiceCredential to true.\n\t  b.Security.Message.NegotiateServiceCredential = True\n\n\t  &#39; Set IssuedKeyType to Symmetric.\n\t  b.Security.Message.IssuedKeyType = SecurityKeyType.SymmetricKey\n\n\t  &#39; Set IssuedTokenType to SAML 1.1\n\t  b.Security.Message.IssuedTokenType = &quot;http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#samlv1.1&quot;\n</code></pre><pre><code class=\"lang-cs\" name=\"WSFederationHttpSecurity#4\">\t// This method creates a WSFederationHttpBinding.\n\tpublic static WSFederationHttpBinding \n        CreateWSFederationHttpBinding(bool isClient)\n\t{\n\t  // Create an instance of the WSFederationHttpBinding.\n\t  WSFederationHttpBinding b = new WSFederationHttpBinding();\n\n\t  // Set the security mode to Message.\n\t  b.Security.Mode = WSFederationHttpSecurityMode.Message;\n\t  \n\t  // Set the Algorithm Suite to Basic256Rsa15.\n\t  b.Security.Message.AlgorithmSuite = SecurityAlgorithmSuite.Basic256Rsa15;\n\n\t  // Set NegotiateServiceCredential to true.\n\t  b.Security.Message.NegotiateServiceCredential = true;\n\n\t  // Set IssuedKeyType to Symmetric.\n\t  b.Security.Message.IssuedKeyType = SecurityKeyType.SymmetricKey;\n\n\t  // Set IssuedTokenType to SAML 1.1\n\t  b.Security.Message.IssuedTokenType = \n          &quot;http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#samlv1.1&quot;;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_IssuerAddress\">\r\n    \r\n            <a id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_IssuerAddress_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IssuerAddress</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the endpoint address of the security token service that issues credentials for the service.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.ServiceModel.EndpointAddress IssuerAddress { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.endpointaddress\" data-linktype=\"relative-path\">EndpointAddress</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.servicemodel.endpointaddress\" data-linktype=\"relative-path\">EndpointAddress</a> of the security token service.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This address is used as the endpoint for the security token service that issues credentials for the service. Services expose the issuer address in metadata if WSDL is enabled but make no other use of it. Clients use the issuer address to communicate with the security token service. If the IssuerAddress is null clients may fall back to using the security token service specified via the LocalIssuerAddress and LocalIssuerBinding properties on IssuedTokenClientCredential.  </p>\n<p> Setting this value to <code>null</code> or the WS-AddressingIdentity anonymous URI on the client causes CardSpace to activate if ClientCredentials.SupportInteractive is true under certain circumstances.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to access this property from the binding, and set it.  </p>\n<pre><code class=\"lang-vb\" name=\"WSFederationHttpSecurity#8\">\t&#39; This method creates a WSFederationHttpBinding.\n\tPublic Shared Function CreateWSFederationHttpBinding(ByVal isClient As Boolean) As WSFederationHttpBinding\n\t  &#39; Create an instance of the WSFederationHttpBinding.\n\t  Dim b As New WSFederationHttpBinding()\n\n\t  &#39; Set the security mode to Message.\n\t  b.Security.Mode = WSFederationHttpSecurityMode.Message\n\n\t  &#39; Set the Algorithm Suite to Basic256Rsa15.\n\t  b.Security.Message.AlgorithmSuite = SecurityAlgorithmSuite.Basic256Rsa15\n\n\t  &#39; Set NegotiateServiceCredential to true.\n\t  b.Security.Message.NegotiateServiceCredential = True\n\n\t  &#39; Set IssuedKeyType to Symmetric.\n\t  b.Security.Message.IssuedKeyType = SecurityKeyType.SymmetricKey\n\n\t  &#39; Set IssuedTokenType to SAML 1.1\n\t  b.Security.Message.IssuedTokenType = &quot;http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#samlv1.1&quot;\n\n\t  &#39; Extract the STS certificate from the certificate store.\n\t  Dim store As New X509Store(StoreName.TrustedPeople, StoreLocation.CurrentUser)\n\t  store.Open(OpenFlags.ReadOnly)\n\t  Dim certs As X509Certificate2Collection = store.Certificates.Find(X509FindType.FindByThumbprint, &quot;0000000000000000000000000000000000000000&quot;, False)\n\t  store.Close()\n\n\t  &#39; Create an EndpointIdentity from the STS certificate.\n\t  Dim identity As EndpointIdentity = EndpointIdentity.CreateX509CertificateIdentity (certs(0))\n\n\t  &#39; Set the IssuerAddress using the address of the STS and the previously created \n\t  &#39; EndpointIdentity.\n\t  b.Security.Message.IssuerAddress = New EndpointAddress(New Uri(&quot;http://localhost:8000/sts/x509&quot;), identity)\n</code></pre><pre><code class=\"lang-cs\" name=\"WSFederationHttpSecurity#8\">\t// This method creates a WSFederationHttpBinding.\n\tpublic static WSFederationHttpBinding \n        CreateWSFederationHttpBinding(bool isClient)\n\t{\n\t  // Create an instance of the WSFederationHttpBinding.\n\t  WSFederationHttpBinding b = new WSFederationHttpBinding();\n\n\t  // Set the security mode to Message.\n\t  b.Security.Mode = WSFederationHttpSecurityMode.Message;\n\t  \n\t  // Set the Algorithm Suite to Basic256Rsa15.\n\t  b.Security.Message.AlgorithmSuite = SecurityAlgorithmSuite.Basic256Rsa15;\n\n\t  // Set NegotiateServiceCredential to true.\n\t  b.Security.Message.NegotiateServiceCredential = true;\n\n\t  // Set IssuedKeyType to Symmetric.\n\t  b.Security.Message.IssuedKeyType = SecurityKeyType.SymmetricKey;\n\n\t  // Set IssuedTokenType to SAML 1.1\n\t  b.Security.Message.IssuedTokenType = \n          &quot;http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#samlv1.1&quot;;\n\n\t  // Extract the STS certificate from the certificate store.\n\t  X509Store store = new X509Store(StoreName.TrustedPeople, StoreLocation.CurrentUser);\n\t  store.Open(OpenFlags.ReadOnly);\n\t  X509Certificate2Collection certs = store.Certificates.Find(\n          X509FindType.FindByThumbprint, &quot;0000000000000000000000000000000000000000&quot;, false);\n\t  store.Close();\n\t  \n\t  // Create an EndpointIdentity from the STS certificate.\n\t  EndpointIdentity identity = EndpointIdentity.CreateX509CertificateIdentity ( certs[0] );\n\t  \n\t  // Set the IssuerAddress using the address of the STS and the previously created \n      // EndpointIdentity.\n\t  b.Security.Message.IssuerAddress = \n          new EndpointAddress(new Uri(&quot;http://localhost:8000/sts/x509&quot;), identity);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_IssuerBinding\">\r\n    \r\n            <a id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_IssuerBinding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IssuerBinding</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the binding to be used by the client when communicating with the security token service whose endpoint address equals <span class=\"xref\">stem.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.ServiceModel.Channels.Binding IssuerBinding { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.channels.binding\" data-linktype=\"relative-path\">Binding</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.servicemodel.channels.binding\" data-linktype=\"relative-path\">Binding</a> to be used by the client when communicating with the security token service.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is used to specify the binding that is used by the client between the client and the security token service when obtaining credentials for the service.  </p>\n<p> Note that this property does not need to be populated on the service, since it is only consumed by the client.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to access this property from the binding, and set it.  </p>\n<pre><code class=\"lang-vb\" name=\"WSFederationHttpSecurity#9\">\t&#39; This method creates a WSFederationHttpBinding.\n\tPublic Shared Function CreateWSFederationHttpBinding(ByVal isClient As Boolean) As WSFederationHttpBinding\n\t  &#39; Create an instance of the WSFederationHttpBinding.\n\t  Dim b As New WSFederationHttpBinding()\n\n\t  &#39; Set the security mode to Message.\n\t  b.Security.Mode = WSFederationHttpSecurityMode.Message\n\n\t  &#39; Set the Algorithm Suite to Basic256Rsa15.\n\t  b.Security.Message.AlgorithmSuite = SecurityAlgorithmSuite.Basic256Rsa15\n\n\t  &#39; Set NegotiateServiceCredential to true.\n\t  b.Security.Message.NegotiateServiceCredential = True\n\n\t  &#39; Set IssuedKeyType to Symmetric.\n\t  b.Security.Message.IssuedKeyType = SecurityKeyType.SymmetricKey\n\n\t  &#39; Set IssuedTokenType to SAML 1.1\n\t  b.Security.Message.IssuedTokenType = &quot;http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#samlv1.1&quot;\n\n\t  &#39; Extract the STS certificate from the certificate store.\n\t  Dim store As New X509Store(StoreName.TrustedPeople, StoreLocation.CurrentUser)\n\t  store.Open(OpenFlags.ReadOnly)\n\t  Dim certs As X509Certificate2Collection = store.Certificates.Find(X509FindType.FindByThumbprint, &quot;0000000000000000000000000000000000000000&quot;, False)\n\t  store.Close()\n\n\t  &#39; Create an EndpointIdentity from the STS certificate.\n\t  Dim identity As EndpointIdentity = EndpointIdentity.CreateX509CertificateIdentity (certs(0))\n\n\t  &#39; Set the IssuerAddress using the address of the STS and the previously created \n\t  &#39; EndpointIdentity.\n\t  b.Security.Message.IssuerAddress = New EndpointAddress(New Uri(&quot;http://localhost:8000/sts/x509&quot;), identity)\n\n\t  &#39; Set the IssuerBinding to a WSHttpBinding loaded from configuration. \n\t  &#39; The IssuerBinding is only used on federated clients.\n\t  If isClient Then\n\t\t  b.Security.Message.IssuerBinding = New WSHttpBinding(&quot;Issuer&quot;)\n</code></pre><pre><code class=\"lang-cs\" name=\"WSFederationHttpSecurity#9\">\t// This method creates a WSFederationHttpBinding.\n\tpublic static WSFederationHttpBinding \n        CreateWSFederationHttpBinding(bool isClient)\n\t{\n\t  // Create an instance of the WSFederationHttpBinding.\n\t  WSFederationHttpBinding b = new WSFederationHttpBinding();\n\n\t  // Set the security mode to Message.\n\t  b.Security.Mode = WSFederationHttpSecurityMode.Message;\n\t  \n\t  // Set the Algorithm Suite to Basic256Rsa15.\n\t  b.Security.Message.AlgorithmSuite = SecurityAlgorithmSuite.Basic256Rsa15;\n\n\t  // Set NegotiateServiceCredential to true.\n\t  b.Security.Message.NegotiateServiceCredential = true;\n\n\t  // Set IssuedKeyType to Symmetric.\n\t  b.Security.Message.IssuedKeyType = SecurityKeyType.SymmetricKey;\n\n\t  // Set IssuedTokenType to SAML 1.1\n\t  b.Security.Message.IssuedTokenType = \n          &quot;http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#samlv1.1&quot;;\n\n\t  // Extract the STS certificate from the certificate store.\n\t  X509Store store = new X509Store(StoreName.TrustedPeople, StoreLocation.CurrentUser);\n\t  store.Open(OpenFlags.ReadOnly);\n\t  X509Certificate2Collection certs = store.Certificates.Find(\n          X509FindType.FindByThumbprint, &quot;0000000000000000000000000000000000000000&quot;, false);\n\t  store.Close();\n\t  \n\t  // Create an EndpointIdentity from the STS certificate.\n\t  EndpointIdentity identity = EndpointIdentity.CreateX509CertificateIdentity ( certs[0] );\n\t  \n\t  // Set the IssuerAddress using the address of the STS and the previously created \n      // EndpointIdentity.\n\t  b.Security.Message.IssuerAddress = \n          new EndpointAddress(new Uri(&quot;http://localhost:8000/sts/x509&quot;), identity);\n\n\t  // Set the IssuerBinding to a WSHttpBinding loaded from configuration. \n      // The IssuerBinding is only used on federated clients.\n      if (isClient)\n      {\n          b.Security.Message.IssuerBinding = new WSHttpBinding(&quot;Issuer&quot;);\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_IssuerMetadataAddress\">\r\n    \r\n            <a id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_IssuerMetadataAddress_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IssuerMetadataAddress</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the endpoint address for communicating with the security token service out of band.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.ServiceModel.EndpointAddress IssuerMetadataAddress { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.endpointaddress\" data-linktype=\"relative-path\">EndpointAddress</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.servicemodel.channels.binding\" data-linktype=\"relative-path\">Binding</a> to be used when communicating with the security token service out of band.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This address is used as the endpoint for the security token service that issues credentials for the service out of band.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to access this property from the binding, and set it.  </p>\n<pre><code class=\"lang-vb\" name=\"WSFederationHttpSecurity#10\">\t&#39; This method creates a WSFederationHttpBinding.\n\tPublic Shared Function CreateWSFederationHttpBinding(ByVal isClient As Boolean) As WSFederationHttpBinding\n\t  &#39; Create an instance of the WSFederationHttpBinding.\n\t  Dim b As New WSFederationHttpBinding()\n\n\t  &#39; Set the security mode to Message.\n\t  b.Security.Mode = WSFederationHttpSecurityMode.Message\n\n\t  &#39; Set the Algorithm Suite to Basic256Rsa15.\n\t  b.Security.Message.AlgorithmSuite = SecurityAlgorithmSuite.Basic256Rsa15\n\n\t  &#39; Set NegotiateServiceCredential to true.\n\t  b.Security.Message.NegotiateServiceCredential = True\n\n\t  &#39; Set IssuedKeyType to Symmetric.\n\t  b.Security.Message.IssuedKeyType = SecurityKeyType.SymmetricKey\n\n\t  &#39; Set IssuedTokenType to SAML 1.1\n\t  b.Security.Message.IssuedTokenType = &quot;http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#samlv1.1&quot;\n\n\t  &#39; Extract the STS certificate from the certificate store.\n\t  Dim store As New X509Store(StoreName.TrustedPeople, StoreLocation.CurrentUser)\n\t  store.Open(OpenFlags.ReadOnly)\n\t  Dim certs As X509Certificate2Collection = store.Certificates.Find(X509FindType.FindByThumbprint, &quot;0000000000000000000000000000000000000000&quot;, False)\n\t  store.Close()\n\n\t  &#39; Create an EndpointIdentity from the STS certificate.\n\t  Dim identity As EndpointIdentity = EndpointIdentity.CreateX509CertificateIdentity (certs(0))\n\n\t  &#39; Set the IssuerAddress using the address of the STS and the previously created \n\t  &#39; EndpointIdentity.\n\t  b.Security.Message.IssuerAddress = New EndpointAddress(New Uri(&quot;http://localhost:8000/sts/x509&quot;), identity)\n\n\t  &#39; Set the IssuerBinding to a WSHttpBinding loaded from configuration. \n\t  &#39; The IssuerBinding is only used on federated clients.\n\t  If isClient Then\n\t\t  b.Security.Message.IssuerBinding = New WSHttpBinding(&quot;Issuer&quot;)\n\n\t  &#39; Set the IssuerMetadataAddress using the metadata address of the STS and the\n\t  &#39; previously created EndpointIdentity. The IssuerMetadataAddress is only used \n\t  &#39; on federated services.\n\t  Else\n\t\t  b.Security.Message.IssuerMetadataAddress = New EndpointAddress(New Uri(&quot;http://localhost:8001/sts/mex&quot;), identity)\n\t  End If\n</code></pre><pre><code class=\"lang-cs\" name=\"WSFederationHttpSecurity#10\">\t// This method creates a WSFederationHttpBinding.\n\tpublic static WSFederationHttpBinding \n        CreateWSFederationHttpBinding(bool isClient)\n\t{\n\t  // Create an instance of the WSFederationHttpBinding.\n\t  WSFederationHttpBinding b = new WSFederationHttpBinding();\n\n\t  // Set the security mode to Message.\n\t  b.Security.Mode = WSFederationHttpSecurityMode.Message;\n\t  \n\t  // Set the Algorithm Suite to Basic256Rsa15.\n\t  b.Security.Message.AlgorithmSuite = SecurityAlgorithmSuite.Basic256Rsa15;\n\n\t  // Set NegotiateServiceCredential to true.\n\t  b.Security.Message.NegotiateServiceCredential = true;\n\n\t  // Set IssuedKeyType to Symmetric.\n\t  b.Security.Message.IssuedKeyType = SecurityKeyType.SymmetricKey;\n\n\t  // Set IssuedTokenType to SAML 1.1\n\t  b.Security.Message.IssuedTokenType = \n          &quot;http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#samlv1.1&quot;;\n\n\t  // Extract the STS certificate from the certificate store.\n\t  X509Store store = new X509Store(StoreName.TrustedPeople, StoreLocation.CurrentUser);\n\t  store.Open(OpenFlags.ReadOnly);\n\t  X509Certificate2Collection certs = store.Certificates.Find(\n          X509FindType.FindByThumbprint, &quot;0000000000000000000000000000000000000000&quot;, false);\n\t  store.Close();\n\t  \n\t  // Create an EndpointIdentity from the STS certificate.\n\t  EndpointIdentity identity = EndpointIdentity.CreateX509CertificateIdentity ( certs[0] );\n\t  \n\t  // Set the IssuerAddress using the address of the STS and the previously created \n      // EndpointIdentity.\n\t  b.Security.Message.IssuerAddress = \n          new EndpointAddress(new Uri(&quot;http://localhost:8000/sts/x509&quot;), identity);\n\n\t  // Set the IssuerBinding to a WSHttpBinding loaded from configuration. \n      // The IssuerBinding is only used on federated clients.\n      if (isClient)\n      {\n          b.Security.Message.IssuerBinding = new WSHttpBinding(&quot;Issuer&quot;);\n      }\n\n      // Set the IssuerMetadataAddress using the metadata address of the STS and the\n      // previously created EndpointIdentity. The IssuerMetadataAddress is only used \n      // on federated services.\n      else\n      {\n          b.Security.Message.IssuerMetadataAddress =\n              new EndpointAddress(new Uri(&quot;http://localhost:8001/sts/mex&quot;), identity);\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_NegotiateServiceCredential\">\r\n    \r\n            <a id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_NegotiateServiceCredential_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NegotiateServiceCredential</div>        \r\n          </div>\r\n    \r\n            <p>Specifies whether a message level SSL negotiation is done to obtain the serviceâ€™s certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool NegotiateServiceCredential { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the service certificate is negotiated; <code>false</code> if the service certificate is available out of band. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property indicates whether the service certificate is negotiated automatically between the client and the service. If this property is <code>true</code>, then such negotiation occurs. If this property is <code>false</code>, then the service certificate must be specified at the client before communication with the service can occur.  </p>\n<p> Services must always specify a certificate.  </p>\n<p> If this property is true, the message level SSL negotiation for the service certificate occurs before the security token service specified via the IssuerAddress and IssuerBinding properties (or LocalIssuerAddress and LocalIssuerBinding properties) is requested to issue a security token.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to access this property from the binding, and set it.  </p>\n<pre><code class=\"lang-vb\" name=\"WSFederationHttpSecurity#6\">\t&#39; This method creates a WSFederationHttpBinding.\n\tPublic Shared Function CreateWSFederationHttpBinding(ByVal isClient As Boolean) As WSFederationHttpBinding\n\t  &#39; Create an instance of the WSFederationHttpBinding.\n\t  Dim b As New WSFederationHttpBinding()\n\n\t  &#39; Set the security mode to Message.\n\t  b.Security.Mode = WSFederationHttpSecurityMode.Message\n\n\t  &#39; Set the Algorithm Suite to Basic256Rsa15.\n\t  b.Security.Message.AlgorithmSuite = SecurityAlgorithmSuite.Basic256Rsa15\n\n\t  &#39; Set NegotiateServiceCredential to true.\n\t  b.Security.Message.NegotiateServiceCredential = True\n</code></pre><pre><code class=\"lang-cs\" name=\"WSFederationHttpSecurity#6\">\t// This method creates a WSFederationHttpBinding.\n\tpublic static WSFederationHttpBinding \n        CreateWSFederationHttpBinding(bool isClient)\n\t{\n\t  // Create an instance of the WSFederationHttpBinding.\n\t  WSFederationHttpBinding b = new WSFederationHttpBinding();\n\n\t  // Set the security mode to Message.\n\t  b.Security.Mode = WSFederationHttpSecurityMode.Message;\n\t  \n\t  // Set the Algorithm Suite to Basic256Rsa15.\n\t  b.Security.Message.AlgorithmSuite = SecurityAlgorithmSuite.Basic256Rsa15;\n\n\t  // Set NegotiateServiceCredential to true.\n\t  b.Security.Message.NegotiateServiceCredential = true;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_TokenRequestParameters\">\r\n    \r\n            <a id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_TokenRequestParameters_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TokenRequestParameters</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of XML elements to be sent in the message body to the security token service when requesting a token.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.ObjectModel.Collection&lt;System.Xml.XmlElement&gt; TokenRequestParameters { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.collection-1\" data-linktype=\"relative-path\">Collection</a>&lt;<a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a>&gt;</div>\r\n                  </div>\r\n                  <p>A <span class=\"xref\">stem.Collections.ObjectModel.Collection`1</span> of type <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The collection returned by this property can be used to specify additional XML elements to be sent in the message body to the security token service when requesting a token.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_ShouldSerializeAlgorithmSuite\">\r\n    \r\n            <a id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_ShouldSerializeAlgorithmSuite_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShouldSerializeAlgorithmSuite()</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether the algorithm suite to be used for securing messages at the SOAP level should be serialized.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShouldSerializeAlgorithmSuite ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the algorithm suite should be serialized; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_ShouldSerializeClaimTypeRequirements\">\r\n    \r\n            <a id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_ShouldSerializeClaimTypeRequirements_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShouldSerializeClaimTypeRequirements()</div>        \r\n          </div>\r\n    \r\n            <p>Returns that any existing claim type requirements can be serialized.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShouldSerializeClaimTypeRequirements ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if there are requirements to serialize; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_ShouldSerializeEstablishSecurityContext\">\r\n    \r\n            <a id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_ShouldSerializeEstablishSecurityContext_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShouldSerializeEstablishSecurityContext()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an indication whether the security context is not the default and therefore should be serialized.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShouldSerializeEstablishSecurityContext ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the context should be serialized; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_ShouldSerializeIssuedKeyType\">\r\n    \r\n            <a id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_ShouldSerializeIssuedKeyType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShouldSerializeIssuedKeyType()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an indication whether the issued key type is not the default and therefore should be serialized.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShouldSerializeIssuedKeyType ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the type should be serialized; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_ShouldSerializeNegotiateServiceCredential\">\r\n    \r\n            <a id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_ShouldSerializeNegotiateServiceCredential_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShouldSerializeNegotiateServiceCredential()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an indication whether the process of negotiating for service credentials is not the default process and therefore should be serialized.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShouldSerializeNegotiateServiceCredential ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the process should be serialized; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_ShouldSerializeTokenRequestParameters\">\r\n    \r\n            <a id=\"System_ServiceModel_FederatedMessageSecurityOverHttp_ShouldSerializeTokenRequestParameters_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShouldSerializeTokenRequestParameters()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an indication that any existing token request parameters can be serialized.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShouldSerializeTokenRequestParameters ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if there are parameters to be serialized; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ServiceModel.FederatedMessageSecurityOverHttp.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ServiceModel.FederatedMessageSecurityOverHttp.yml\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.FederatedMessageSecurityOverHttp\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.FederatedMessageSecurityOverHttp..ctor\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters\">\r\n<meta name=\"APILocation\" content=\"System.ServiceModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"8551fd19-100d-be81-60ea-6d0221000c08\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.ServiceModel\\FederatedMessageSecurityOverHttp.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Configures the message-level security of the WSFederationHttpBinding binding.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.ServiceModel/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ServiceModel.FederatedMessageSecurityOverHttp\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ServiceModel.FederatedMessageSecurityOverHttp.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ServiceModel.FederatedMessageSecurityOverHttp.yml","open_to_public_contributors":true,"api_name":["System.ServiceModel.FederatedMessageSecurityOverHttp","System.ServiceModel.FederatedMessageSecurityOverHttp..ctor","System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite","System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements","System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext","System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType","System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType","System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress","System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding","System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress","System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential","System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite","System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements","System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext","System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType","System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential","System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters","System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters"],"api_location":["System.ServiceModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ServiceModel.FederatedMessageSecurityOverHttp","System::ServiceModel::FederatedMessageSecurityOverHttp","System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor","System::ServiceModel::FederatedMessageSecurityOverHttp::#ctor","System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite","System::ServiceModel::FederatedMessageSecurityOverHttp::AlgorithmSuite","System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements","System::ServiceModel::FederatedMessageSecurityOverHttp::ClaimTypeRequirements","System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext","System::ServiceModel::FederatedMessageSecurityOverHttp::EstablishSecurityContext","System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType","System::ServiceModel::FederatedMessageSecurityOverHttp::IssuedKeyType","System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType","System::ServiceModel::FederatedMessageSecurityOverHttp::IssuedTokenType","System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress","System::ServiceModel::FederatedMessageSecurityOverHttp::IssuerAddress","System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding","System::ServiceModel::FederatedMessageSecurityOverHttp::IssuerBinding","System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress","System::ServiceModel::FederatedMessageSecurityOverHttp::IssuerMetadataAddress","System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential","System::ServiceModel::FederatedMessageSecurityOverHttp::NegotiateServiceCredential","System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite","System::ServiceModel::FederatedMessageSecurityOverHttp::ShouldSerializeAlgorithmSuite","System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements","System::ServiceModel::FederatedMessageSecurityOverHttp::ShouldSerializeClaimTypeRequirements","System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext","System::ServiceModel::FederatedMessageSecurityOverHttp::ShouldSerializeEstablishSecurityContext","System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType","System::ServiceModel::FederatedMessageSecurityOverHttp::ShouldSerializeIssuedKeyType","System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential","System::ServiceModel::FederatedMessageSecurityOverHttp::ShouldSerializeNegotiateServiceCredential","System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters","System::ServiceModel::FederatedMessageSecurityOverHttp::ShouldSerializeTokenRequestParameters","System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters","System::ServiceModel::FederatedMessageSecurityOverHttp::TokenRequestParameters"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"8551fd19-100d-be81-60ea-6d0221000c08","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.ServiceModel\\FederatedMessageSecurityOverHttp.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.ServiceModel/FederatedMessageSecurityOverHttp.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"FederatedMessageSecurityOverHttp class | Microsoft Docs","_op_ogTitle":"FederatedMessageSecurityOverHttp class","description":"Configures the message-level security of the WSFederationHttpBinding binding.\n","toc_asset_id":"_splitted/System.ServiceModel/toc.json","toc_rel":"_splitted/System.ServiceModel/toc.json","source_url":"","ms.assetid":"System.ServiceModel.FederatedMessageSecurityOverHttp","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.servicemodel.federatedmessagesecurityoverhttp","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.servicemodel.federatedmessagesecurityoverhttp","fileRelativePath":"System.ServiceModel.FederatedMessageSecurityOverHttp.html"},"themesRelativePathToOutputRoot":"_themes/"}