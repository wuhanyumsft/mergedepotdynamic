{"content":"    \r\n    <h1 id=\"System_Security_Cryptography_X509Certificates_X509Store\">\r\n      <span class=\"lang-csharp\">X509Store</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents an X.509 store, which is a physical store where certificates are persisted and managed. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class X509Store : IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">X509Store</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Use this class to work with an X.509 store.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Starting with the .NET Framework 4.6, this type implements the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method in a <code>try</code>/<code>catch</code> block. To dispose of it indirectly, use a language construct such as <code>using</code> (in C#) or <code>Using</code> (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface topic.  </p>\n<p> For apps that target the .NET Framework 4.5.2 and earlier versions, the X509Store class does not implement the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface and therefore does not have a <code>Dispose</code> method.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Store__ctor\" data-linktype=\"self-bookmark\">X509Store()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a> class using the personal certificates of the current user store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Store__ctor_System_IntPtr_\" data-linktype=\"self-bookmark\">X509Store(IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a> class using an Intptr handle to an <code>HCERTSTORE</code> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Store__ctor_System_Security_Cryptography_X509Certificates_StoreLocation_\" data-linktype=\"self-bookmark\">X509Store(StoreLocation)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a> class using the specified <a class=\"xref\" href=\"system.security.cryptography.x509certificates.storelocation\" data-linktype=\"relative-path\">StoreLocation</a> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Store__ctor_System_Security_Cryptography_X509Certificates_StoreName_\" data-linktype=\"self-bookmark\">X509Store(StoreName)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a> class using the specified <a class=\"xref\" href=\"system.security.cryptography.x509certificates.storename\" data-linktype=\"relative-path\">StoreName</a> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Store__ctor_System_String_\" data-linktype=\"self-bookmark\">X509Store(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a> class using the specified store name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Store__ctor_System_Security_Cryptography_X509Certificates_StoreName_System_Security_Cryptography_X509Certificates_StoreLocation_\" data-linktype=\"self-bookmark\">X509Store(StoreName,StoreLocation)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a> class using the specified <a class=\"xref\" href=\"system.security.cryptography.x509certificates.storename\" data-linktype=\"relative-path\">StoreName</a> and <a class=\"xref\" href=\"system.security.cryptography.x509certificates.storelocation\" data-linktype=\"relative-path\">StoreLocation</a> values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Store__ctor_System_String_System_Security_Cryptography_X509Certificates_StoreLocation_\" data-linktype=\"self-bookmark\">X509Store(String,StoreLocation)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a> class using a string that represents a value from the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.storename\" data-linktype=\"relative-path\">StoreName</a> enumeration and a value from the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.storelocation\" data-linktype=\"relative-path\">StoreLocation</a> enumeration.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Store_Certificates\" data-linktype=\"self-bookmark\">Certificates</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a collection of certificates located in an X.509 certificate store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Store_Location\" data-linktype=\"self-bookmark\">Location</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the location of the X.509 certificate store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Store_Name\" data-linktype=\"self-bookmark\">Name</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the X.509 certificate store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Store_StoreHandle\" data-linktype=\"self-bookmark\">StoreHandle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> handle to an <code>HCERTSTORE</code> store.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Store_Add_System_Security_Cryptography_X509Certificates_X509Certificate2_\" data-linktype=\"self-bookmark\">Add(X509Certificate2)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a certificate to an X.509 certificate store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Store_AddRange_System_Security_Cryptography_X509Certificates_X509Certificate2Collection_\" data-linktype=\"self-bookmark\">AddRange(X509Certificate2Collection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a collection of certificates to an X.509 certificate store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Store_Close\" data-linktype=\"self-bookmark\">Close()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Closes an X.509 certificate store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Store_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the resources used by this <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Store_Open_System_Security_Cryptography_X509Certificates_OpenFlags_\" data-linktype=\"self-bookmark\">Open(OpenFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens an X.509 certificate store or creates a new store, depending on <a class=\"xref\" href=\"system.security.cryptography.x509certificates.openflags\" data-linktype=\"relative-path\">OpenFlags</a> flag settings.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Store_Remove_System_Security_Cryptography_X509Certificates_X509Certificate2_\" data-linktype=\"self-bookmark\">Remove(X509Certificate2)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes a certificate from an X.509 certificate store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Store_RemoveRange_System_Security_Cryptography_X509Certificates_X509Certificate2Collection_\" data-linktype=\"self-bookmark\">RemoveRange(X509Certificate2Collection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes a range of certificates from an X.509 certificate store.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Store__ctor\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Store__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X509Store()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a> class using the personal certificates of the current user store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X509Store ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor to create an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a> object using the personal X.509 certificate store for the current user.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example opens an X.509 certificate store, adds and deletes certificates, and then closes the store. It assumes that you have three certificates to add to and remove from a local store.  </p>\n<pre><code class=\"lang-cs\" name=\"x509store2#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\nusing System.IO;\n\npublic class X509store2\n{\n\tpublic static void Main (string[] args)\n\t{\n\t\t//Create new X509 store called teststore from the local certificate store.\n\t\tX509Store store = new X509Store (&quot;teststore&quot;, StoreLocation.CurrentUser);\n\t\tstore.Open (OpenFlags.ReadWrite);\n\t\tX509Certificate2 certificate = new X509Certificate2 ();\n\n\t\t//Create certificates from certificate files.\n\t\t//You must put in a valid path to three certificates in the following constructors.\n\t\tX509Certificate2 certificate1 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate2 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate5 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\n\t\t//Create a collection and add two of the certificates.\n\t\tX509Certificate2Collection collection = new X509Certificate2Collection ();\n\t\tcollection.Add (certificate2);\n\t\tcollection.Add (certificate5);\n\n\t\t//Add certificates to the store.\n\t\tstore.Add (certificate1);\n\t\tstore.AddRange (collection);\n\n\t\tX509Certificate2Collection storecollection = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;Store name: {0}&quot;, store.Name);\n\t\tConsole.WriteLine (&quot;Store location: {0}&quot;, store.Location);\n\t\tforeach (X509Certificate2 x509 in storecollection)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;certificate name: {0}&quot;,x509.Subject);\n\t\t}\n\n\t\t//Remove a certificate.\n\t\tstore.Remove (certificate1);\n\t\tX509Certificate2Collection storecollection2 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tforeach (X509Certificate2 x509 in storecollection2)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t}\n\n\t\t//Remove a range of certificates.\n\t\tstore.RemoveRange (collection);\n\t\tX509Certificate2Collection storecollection3 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tif (storecollection3.Count == 0)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;Store contains no certificates.&quot;);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tforeach (X509Certificate2 x509 in storecollection3)\n\t\t\t{\n\t\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t\t}\n\t\t}\n\n\t\t//Close the store.\n\t\tstore.Close ();\n\t}\t\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"x509store2#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\nusing namespace System::IO;\nint main()\n{\n   \n   //Create new X509 store called teststore from the local certificate store.\n   X509Store ^ store = gcnew X509Store( &quot;teststore&quot;,StoreLocation::CurrentUser );\n   store-&gt;Open( OpenFlags::ReadWrite );\n   X509Certificate2 ^ certificate = gcnew X509Certificate2;\n   \n   //Create certificates from certificate files.\n   //You must put in a valid path to three certificates in the following constructors.\n   X509Certificate2 ^ certificate1 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate2 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate5 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   \n   //Create a collection and add two of the certificates.\n   X509Certificate2Collection ^ collection = gcnew X509Certificate2Collection;\n   collection-&gt;Add( certificate2 );\n   collection-&gt;Add( certificate5 );\n   \n   //Add certificates to the store.\n   store-&gt;Add( certificate1 );\n   store-&gt;AddRange( collection );\n   X509Certificate2Collection ^ storecollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;Store name: {0}&quot;, store-&gt;Name );\n   Console::WriteLine( &quot;Store location: {0}&quot;, store-&gt;Location );\n   System::Collections::IEnumerator^ myEnum = storecollection-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a certificate.\n   store-&gt;Remove( certificate1 );\n   X509Certificate2Collection ^ storecollection2 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   System::Collections::IEnumerator^ myEnum1 = storecollection2-&gt;GetEnumerator();\n   while ( myEnum1-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum1-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a range of certificates.\n   store-&gt;RemoveRange( collection );\n   X509Certificate2Collection ^ storecollection3 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   if ( storecollection3-&gt;Count == 0 )\n   {\n      Console::WriteLine( &quot;Store contains no certificates.&quot; );\n   }\n   else\n   {\n      System::Collections::IEnumerator^ myEnum2 = storecollection3-&gt;GetEnumerator();\n      while ( myEnum2-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum2-&gt;Current);\n         Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n      }\n   }\n\n   \n   //Close the store.\n   store-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"x509store2#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\nImports System.IO\n\n\n\nClass X509store2\n\n    Shared Sub Main(ByVal args() As String)\n        &#39;Create new X509 store called teststore from the local certificate store.\n        Dim store As New X509Store(&quot;teststore&quot;, StoreLocation.CurrentUser)\n        store.Open(OpenFlags.ReadWrite)\n        Dim certificate As New X509Certificate2()\n\n        &#39;Create certificates from certificate files.\n        &#39;You must put in a valid path to three certificates in the following constructors.\n        Dim certificate1 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate2 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate5 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n\n        &#39;Create a collection and add two of the certificates.\n        Dim collection As New X509Certificate2Collection()\n        collection.Add(certificate2)\n        collection.Add(certificate5)\n\n        &#39;Add certificates to the store.\n        store.Add(certificate1)\n        store.AddRange(collection)\n\n        Dim storecollection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;Store name: {0}&quot;, store.Name)\n        Console.WriteLine(&quot;Store location: {0}&quot;, store.Location)\n        Dim x509 As X509Certificate2\n        For Each x509 In storecollection\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509.Subject)\n        Next x509\n\n        &#39;Remove a certificate.\n        store.Remove(certificate1)\n        Dim storecollection2 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        Dim x509a As X509Certificate2\n        For Each x509a In storecollection2\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509a.Subject)\n        Next x509a\n\n        &#39;Remove a range of certificates.\n        store.RemoveRange(collection)\n        Dim storecollection3 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        If storecollection3.Count = 0 Then\n            Console.WriteLine(&quot;Store contains no certificates.&quot;)\n        Else\n            Dim x509b As X509Certificate2\n            For Each x509b In storecollection3\n                Console.WriteLine(&quot;certificate name: {0}&quot;, x509b.Subject)\n            Next x509b\n        End If\n\n        &#39;Close the store.\n        store.Close()\n\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Store__ctor_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Store__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X509Store(IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a> class using an Intptr handle to an <code>HCERTSTORE</code> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X509Store (IntPtr storeHandle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>storeHandle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A handle to an <code>HCERTSTORE</code> store.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>storeHandle</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The <code>storeHandle</code> parameter points to an invalid context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor to provide compatibility with the unmanaged Microsoft Cryptographic API (CAPI).  </p>\n<p> For more information about the <code>HCERTSTORE</code> handle, see the unmanaged CAPI documentation in the Platform SDK section of the <a href=\"http://go.microsoft.com/fwlink/?linkid=37118\" data-linktype=\"external\">MSDN Library</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Store__ctor_System_Security_Cryptography_X509Certificates_StoreLocation_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Store__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X509Store(StoreLocation)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a> class using the specified <a class=\"xref\" href=\"system.security.cryptography.x509certificates.storelocation\" data-linktype=\"relative-path\">StoreLocation</a> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X509Store (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>storeLocation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.storelocation\" data-linktype=\"relative-path\">StoreLocation</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the enumeration values that specifies the location of the X.509 certificate store.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor to create an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a> object, specifying the store location, which is either the location for the current user or the local computer.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example opens an X.509 certificate store, adds and deletes certificates, and then closes the store. It assumes that you have three certificates to add to and remove from a local store.  </p>\n<pre><code class=\"lang-cs\" name=\"x509store2#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\nusing System.IO;\n\npublic class X509store2\n{\n\tpublic static void Main (string[] args)\n\t{\n\t\t//Create new X509 store called teststore from the local certificate store.\n\t\tX509Store store = new X509Store (&quot;teststore&quot;, StoreLocation.CurrentUser);\n\t\tstore.Open (OpenFlags.ReadWrite);\n\t\tX509Certificate2 certificate = new X509Certificate2 ();\n\n\t\t//Create certificates from certificate files.\n\t\t//You must put in a valid path to three certificates in the following constructors.\n\t\tX509Certificate2 certificate1 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate2 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate5 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\n\t\t//Create a collection and add two of the certificates.\n\t\tX509Certificate2Collection collection = new X509Certificate2Collection ();\n\t\tcollection.Add (certificate2);\n\t\tcollection.Add (certificate5);\n\n\t\t//Add certificates to the store.\n\t\tstore.Add (certificate1);\n\t\tstore.AddRange (collection);\n\n\t\tX509Certificate2Collection storecollection = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;Store name: {0}&quot;, store.Name);\n\t\tConsole.WriteLine (&quot;Store location: {0}&quot;, store.Location);\n\t\tforeach (X509Certificate2 x509 in storecollection)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;certificate name: {0}&quot;,x509.Subject);\n\t\t}\n\n\t\t//Remove a certificate.\n\t\tstore.Remove (certificate1);\n\t\tX509Certificate2Collection storecollection2 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tforeach (X509Certificate2 x509 in storecollection2)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t}\n\n\t\t//Remove a range of certificates.\n\t\tstore.RemoveRange (collection);\n\t\tX509Certificate2Collection storecollection3 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tif (storecollection3.Count == 0)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;Store contains no certificates.&quot;);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tforeach (X509Certificate2 x509 in storecollection3)\n\t\t\t{\n\t\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t\t}\n\t\t}\n\n\t\t//Close the store.\n\t\tstore.Close ();\n\t}\t\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"x509store2#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\nusing namespace System::IO;\nint main()\n{\n   \n   //Create new X509 store called teststore from the local certificate store.\n   X509Store ^ store = gcnew X509Store( &quot;teststore&quot;,StoreLocation::CurrentUser );\n   store-&gt;Open( OpenFlags::ReadWrite );\n   X509Certificate2 ^ certificate = gcnew X509Certificate2;\n   \n   //Create certificates from certificate files.\n   //You must put in a valid path to three certificates in the following constructors.\n   X509Certificate2 ^ certificate1 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate2 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate5 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   \n   //Create a collection and add two of the certificates.\n   X509Certificate2Collection ^ collection = gcnew X509Certificate2Collection;\n   collection-&gt;Add( certificate2 );\n   collection-&gt;Add( certificate5 );\n   \n   //Add certificates to the store.\n   store-&gt;Add( certificate1 );\n   store-&gt;AddRange( collection );\n   X509Certificate2Collection ^ storecollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;Store name: {0}&quot;, store-&gt;Name );\n   Console::WriteLine( &quot;Store location: {0}&quot;, store-&gt;Location );\n   System::Collections::IEnumerator^ myEnum = storecollection-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a certificate.\n   store-&gt;Remove( certificate1 );\n   X509Certificate2Collection ^ storecollection2 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   System::Collections::IEnumerator^ myEnum1 = storecollection2-&gt;GetEnumerator();\n   while ( myEnum1-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum1-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a range of certificates.\n   store-&gt;RemoveRange( collection );\n   X509Certificate2Collection ^ storecollection3 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   if ( storecollection3-&gt;Count == 0 )\n   {\n      Console::WriteLine( &quot;Store contains no certificates.&quot; );\n   }\n   else\n   {\n      System::Collections::IEnumerator^ myEnum2 = storecollection3-&gt;GetEnumerator();\n      while ( myEnum2-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum2-&gt;Current);\n         Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n      }\n   }\n\n   \n   //Close the store.\n   store-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"x509store2#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\nImports System.IO\n\n\n\nClass X509store2\n\n    Shared Sub Main(ByVal args() As String)\n        &#39;Create new X509 store called teststore from the local certificate store.\n        Dim store As New X509Store(&quot;teststore&quot;, StoreLocation.CurrentUser)\n        store.Open(OpenFlags.ReadWrite)\n        Dim certificate As New X509Certificate2()\n\n        &#39;Create certificates from certificate files.\n        &#39;You must put in a valid path to three certificates in the following constructors.\n        Dim certificate1 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate2 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate5 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n\n        &#39;Create a collection and add two of the certificates.\n        Dim collection As New X509Certificate2Collection()\n        collection.Add(certificate2)\n        collection.Add(certificate5)\n\n        &#39;Add certificates to the store.\n        store.Add(certificate1)\n        store.AddRange(collection)\n\n        Dim storecollection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;Store name: {0}&quot;, store.Name)\n        Console.WriteLine(&quot;Store location: {0}&quot;, store.Location)\n        Dim x509 As X509Certificate2\n        For Each x509 In storecollection\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509.Subject)\n        Next x509\n\n        &#39;Remove a certificate.\n        store.Remove(certificate1)\n        Dim storecollection2 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        Dim x509a As X509Certificate2\n        For Each x509a In storecollection2\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509a.Subject)\n        Next x509a\n\n        &#39;Remove a range of certificates.\n        store.RemoveRange(collection)\n        Dim storecollection3 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        If storecollection3.Count = 0 Then\n            Console.WriteLine(&quot;Store contains no certificates.&quot;)\n        Else\n            Dim x509b As X509Certificate2\n            For Each x509b In storecollection3\n                Console.WriteLine(&quot;certificate name: {0}&quot;, x509b.Subject)\n            Next x509b\n        End If\n\n        &#39;Close the store.\n        store.Close()\n\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Store__ctor_System_Security_Cryptography_X509Certificates_StoreName_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Store__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X509Store(StoreName)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a> class using the specified <a class=\"xref\" href=\"system.security.cryptography.x509certificates.storename\" data-linktype=\"relative-path\">StoreName</a> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X509Store (System.Security.Cryptography.X509Certificates.StoreName storeName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>storeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.storename\" data-linktype=\"relative-path\">StoreName</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the enumeration values that specifies the name of the X.509 certificate store.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor to create an X.509 store for the current user that corresponds to values enumerated by <a class=\"xref\" href=\"system.security.cryptography.x509certificates.storename\" data-linktype=\"relative-path\">StoreName</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example opens an X.509 certificate store, adds and deletes certificates, and then closes the store. It assumes that you have three certificates to add to and remove from a local store.  </p>\n<pre><code class=\"lang-cs\" name=\"x509store2#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\nusing System.IO;\n\npublic class X509store2\n{\n\tpublic static void Main (string[] args)\n\t{\n\t\t//Create new X509 store called teststore from the local certificate store.\n\t\tX509Store store = new X509Store (&quot;teststore&quot;, StoreLocation.CurrentUser);\n\t\tstore.Open (OpenFlags.ReadWrite);\n\t\tX509Certificate2 certificate = new X509Certificate2 ();\n\n\t\t//Create certificates from certificate files.\n\t\t//You must put in a valid path to three certificates in the following constructors.\n\t\tX509Certificate2 certificate1 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate2 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate5 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\n\t\t//Create a collection and add two of the certificates.\n\t\tX509Certificate2Collection collection = new X509Certificate2Collection ();\n\t\tcollection.Add (certificate2);\n\t\tcollection.Add (certificate5);\n\n\t\t//Add certificates to the store.\n\t\tstore.Add (certificate1);\n\t\tstore.AddRange (collection);\n\n\t\tX509Certificate2Collection storecollection = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;Store name: {0}&quot;, store.Name);\n\t\tConsole.WriteLine (&quot;Store location: {0}&quot;, store.Location);\n\t\tforeach (X509Certificate2 x509 in storecollection)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;certificate name: {0}&quot;,x509.Subject);\n\t\t}\n\n\t\t//Remove a certificate.\n\t\tstore.Remove (certificate1);\n\t\tX509Certificate2Collection storecollection2 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tforeach (X509Certificate2 x509 in storecollection2)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t}\n\n\t\t//Remove a range of certificates.\n\t\tstore.RemoveRange (collection);\n\t\tX509Certificate2Collection storecollection3 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tif (storecollection3.Count == 0)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;Store contains no certificates.&quot;);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tforeach (X509Certificate2 x509 in storecollection3)\n\t\t\t{\n\t\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t\t}\n\t\t}\n\n\t\t//Close the store.\n\t\tstore.Close ();\n\t}\t\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"x509store2#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\nusing namespace System::IO;\nint main()\n{\n   \n   //Create new X509 store called teststore from the local certificate store.\n   X509Store ^ store = gcnew X509Store( &quot;teststore&quot;,StoreLocation::CurrentUser );\n   store-&gt;Open( OpenFlags::ReadWrite );\n   X509Certificate2 ^ certificate = gcnew X509Certificate2;\n   \n   //Create certificates from certificate files.\n   //You must put in a valid path to three certificates in the following constructors.\n   X509Certificate2 ^ certificate1 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate2 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate5 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   \n   //Create a collection and add two of the certificates.\n   X509Certificate2Collection ^ collection = gcnew X509Certificate2Collection;\n   collection-&gt;Add( certificate2 );\n   collection-&gt;Add( certificate5 );\n   \n   //Add certificates to the store.\n   store-&gt;Add( certificate1 );\n   store-&gt;AddRange( collection );\n   X509Certificate2Collection ^ storecollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;Store name: {0}&quot;, store-&gt;Name );\n   Console::WriteLine( &quot;Store location: {0}&quot;, store-&gt;Location );\n   System::Collections::IEnumerator^ myEnum = storecollection-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a certificate.\n   store-&gt;Remove( certificate1 );\n   X509Certificate2Collection ^ storecollection2 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   System::Collections::IEnumerator^ myEnum1 = storecollection2-&gt;GetEnumerator();\n   while ( myEnum1-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum1-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a range of certificates.\n   store-&gt;RemoveRange( collection );\n   X509Certificate2Collection ^ storecollection3 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   if ( storecollection3-&gt;Count == 0 )\n   {\n      Console::WriteLine( &quot;Store contains no certificates.&quot; );\n   }\n   else\n   {\n      System::Collections::IEnumerator^ myEnum2 = storecollection3-&gt;GetEnumerator();\n      while ( myEnum2-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum2-&gt;Current);\n         Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n      }\n   }\n\n   \n   //Close the store.\n   store-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"x509store2#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\nImports System.IO\n\n\n\nClass X509store2\n\n    Shared Sub Main(ByVal args() As String)\n        &#39;Create new X509 store called teststore from the local certificate store.\n        Dim store As New X509Store(&quot;teststore&quot;, StoreLocation.CurrentUser)\n        store.Open(OpenFlags.ReadWrite)\n        Dim certificate As New X509Certificate2()\n\n        &#39;Create certificates from certificate files.\n        &#39;You must put in a valid path to three certificates in the following constructors.\n        Dim certificate1 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate2 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate5 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n\n        &#39;Create a collection and add two of the certificates.\n        Dim collection As New X509Certificate2Collection()\n        collection.Add(certificate2)\n        collection.Add(certificate5)\n\n        &#39;Add certificates to the store.\n        store.Add(certificate1)\n        store.AddRange(collection)\n\n        Dim storecollection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;Store name: {0}&quot;, store.Name)\n        Console.WriteLine(&quot;Store location: {0}&quot;, store.Location)\n        Dim x509 As X509Certificate2\n        For Each x509 In storecollection\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509.Subject)\n        Next x509\n\n        &#39;Remove a certificate.\n        store.Remove(certificate1)\n        Dim storecollection2 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        Dim x509a As X509Certificate2\n        For Each x509a In storecollection2\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509a.Subject)\n        Next x509a\n\n        &#39;Remove a range of certificates.\n        store.RemoveRange(collection)\n        Dim storecollection3 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        If storecollection3.Count = 0 Then\n            Console.WriteLine(&quot;Store contains no certificates.&quot;)\n        Else\n            Dim x509b As X509Certificate2\n            For Each x509b In storecollection3\n                Console.WriteLine(&quot;certificate name: {0}&quot;, x509b.Subject)\n            Next x509b\n        End If\n\n        &#39;Close the store.\n        store.Close()\n\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Store__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Store__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X509Store(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a> class using the specified store name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X509Store (string storeName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>storeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string value that represents the store name. See <a class=\"xref\" href=\"system.security.cryptography.x509certificates.storename\" data-linktype=\"relative-path\">StoreName</a> for more information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor to create an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a> object using a particular X.509 store name for the current user. To create a new store, specify a name that does not exist. A new store will be created with that name.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example opens an X.509 certificate store, adds and deletes certificates, and then closes the store. It assumes that you have three certificates to add to and remove from a local store.  </p>\n<pre><code class=\"lang-cs\" name=\"x509store2#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\nusing System.IO;\n\npublic class X509store2\n{\n\tpublic static void Main (string[] args)\n\t{\n\t\t//Create new X509 store called teststore from the local certificate store.\n\t\tX509Store store = new X509Store (&quot;teststore&quot;, StoreLocation.CurrentUser);\n\t\tstore.Open (OpenFlags.ReadWrite);\n\t\tX509Certificate2 certificate = new X509Certificate2 ();\n\n\t\t//Create certificates from certificate files.\n\t\t//You must put in a valid path to three certificates in the following constructors.\n\t\tX509Certificate2 certificate1 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate2 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate5 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\n\t\t//Create a collection and add two of the certificates.\n\t\tX509Certificate2Collection collection = new X509Certificate2Collection ();\n\t\tcollection.Add (certificate2);\n\t\tcollection.Add (certificate5);\n\n\t\t//Add certificates to the store.\n\t\tstore.Add (certificate1);\n\t\tstore.AddRange (collection);\n\n\t\tX509Certificate2Collection storecollection = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;Store name: {0}&quot;, store.Name);\n\t\tConsole.WriteLine (&quot;Store location: {0}&quot;, store.Location);\n\t\tforeach (X509Certificate2 x509 in storecollection)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;certificate name: {0}&quot;,x509.Subject);\n\t\t}\n\n\t\t//Remove a certificate.\n\t\tstore.Remove (certificate1);\n\t\tX509Certificate2Collection storecollection2 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tforeach (X509Certificate2 x509 in storecollection2)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t}\n\n\t\t//Remove a range of certificates.\n\t\tstore.RemoveRange (collection);\n\t\tX509Certificate2Collection storecollection3 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tif (storecollection3.Count == 0)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;Store contains no certificates.&quot;);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tforeach (X509Certificate2 x509 in storecollection3)\n\t\t\t{\n\t\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t\t}\n\t\t}\n\n\t\t//Close the store.\n\t\tstore.Close ();\n\t}\t\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"x509store2#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\nusing namespace System::IO;\nint main()\n{\n   \n   //Create new X509 store called teststore from the local certificate store.\n   X509Store ^ store = gcnew X509Store( &quot;teststore&quot;,StoreLocation::CurrentUser );\n   store-&gt;Open( OpenFlags::ReadWrite );\n   X509Certificate2 ^ certificate = gcnew X509Certificate2;\n   \n   //Create certificates from certificate files.\n   //You must put in a valid path to three certificates in the following constructors.\n   X509Certificate2 ^ certificate1 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate2 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate5 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   \n   //Create a collection and add two of the certificates.\n   X509Certificate2Collection ^ collection = gcnew X509Certificate2Collection;\n   collection-&gt;Add( certificate2 );\n   collection-&gt;Add( certificate5 );\n   \n   //Add certificates to the store.\n   store-&gt;Add( certificate1 );\n   store-&gt;AddRange( collection );\n   X509Certificate2Collection ^ storecollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;Store name: {0}&quot;, store-&gt;Name );\n   Console::WriteLine( &quot;Store location: {0}&quot;, store-&gt;Location );\n   System::Collections::IEnumerator^ myEnum = storecollection-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a certificate.\n   store-&gt;Remove( certificate1 );\n   X509Certificate2Collection ^ storecollection2 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   System::Collections::IEnumerator^ myEnum1 = storecollection2-&gt;GetEnumerator();\n   while ( myEnum1-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum1-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a range of certificates.\n   store-&gt;RemoveRange( collection );\n   X509Certificate2Collection ^ storecollection3 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   if ( storecollection3-&gt;Count == 0 )\n   {\n      Console::WriteLine( &quot;Store contains no certificates.&quot; );\n   }\n   else\n   {\n      System::Collections::IEnumerator^ myEnum2 = storecollection3-&gt;GetEnumerator();\n      while ( myEnum2-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum2-&gt;Current);\n         Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n      }\n   }\n\n   \n   //Close the store.\n   store-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"x509store2#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\nImports System.IO\n\n\n\nClass X509store2\n\n    Shared Sub Main(ByVal args() As String)\n        &#39;Create new X509 store called teststore from the local certificate store.\n        Dim store As New X509Store(&quot;teststore&quot;, StoreLocation.CurrentUser)\n        store.Open(OpenFlags.ReadWrite)\n        Dim certificate As New X509Certificate2()\n\n        &#39;Create certificates from certificate files.\n        &#39;You must put in a valid path to three certificates in the following constructors.\n        Dim certificate1 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate2 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate5 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n\n        &#39;Create a collection and add two of the certificates.\n        Dim collection As New X509Certificate2Collection()\n        collection.Add(certificate2)\n        collection.Add(certificate5)\n\n        &#39;Add certificates to the store.\n        store.Add(certificate1)\n        store.AddRange(collection)\n\n        Dim storecollection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;Store name: {0}&quot;, store.Name)\n        Console.WriteLine(&quot;Store location: {0}&quot;, store.Location)\n        Dim x509 As X509Certificate2\n        For Each x509 In storecollection\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509.Subject)\n        Next x509\n\n        &#39;Remove a certificate.\n        store.Remove(certificate1)\n        Dim storecollection2 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        Dim x509a As X509Certificate2\n        For Each x509a In storecollection2\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509a.Subject)\n        Next x509a\n\n        &#39;Remove a range of certificates.\n        store.RemoveRange(collection)\n        Dim storecollection3 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        If storecollection3.Count = 0 Then\n            Console.WriteLine(&quot;Store contains no certificates.&quot;)\n        Else\n            Dim x509b As X509Certificate2\n            For Each x509b In storecollection3\n                Console.WriteLine(&quot;certificate name: {0}&quot;, x509b.Subject)\n            Next x509b\n        End If\n\n        &#39;Close the store.\n        store.Close()\n\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Store__ctor_System_Security_Cryptography_X509Certificates_StoreName_System_Security_Cryptography_X509Certificates_StoreLocation_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Store__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X509Store(StoreName,StoreLocation)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a> class using the specified <a class=\"xref\" href=\"system.security.cryptography.x509certificates.storename\" data-linktype=\"relative-path\">StoreName</a> and <a class=\"xref\" href=\"system.security.cryptography.x509certificates.storelocation\" data-linktype=\"relative-path\">StoreLocation</a> values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X509Store (System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>storeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.storename\" data-linktype=\"relative-path\">StoreName</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the enumeration values that specifies the name of the X.509 certificate store.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>storeLocation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.storelocation\" data-linktype=\"relative-path\">StoreLocation</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the enumeration values that specifies the location of the X.509 certificate store.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>storeLocation</code> is not a valid location or <code>storeName</code> is not a valid name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor to create an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a> object, specifying both the store name and the store location.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example opens an X.509 certificate store, adds and deletes certificates, and then closes the store. It assumes that you have three certificates to add to and remove from a local store.  </p>\n<pre><code class=\"lang-cs\" name=\"x509store2#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\nusing System.IO;\n\npublic class X509store2\n{\n\tpublic static void Main (string[] args)\n\t{\n\t\t//Create new X509 store called teststore from the local certificate store.\n\t\tX509Store store = new X509Store (&quot;teststore&quot;, StoreLocation.CurrentUser);\n\t\tstore.Open (OpenFlags.ReadWrite);\n\t\tX509Certificate2 certificate = new X509Certificate2 ();\n\n\t\t//Create certificates from certificate files.\n\t\t//You must put in a valid path to three certificates in the following constructors.\n\t\tX509Certificate2 certificate1 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate2 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate5 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\n\t\t//Create a collection and add two of the certificates.\n\t\tX509Certificate2Collection collection = new X509Certificate2Collection ();\n\t\tcollection.Add (certificate2);\n\t\tcollection.Add (certificate5);\n\n\t\t//Add certificates to the store.\n\t\tstore.Add (certificate1);\n\t\tstore.AddRange (collection);\n\n\t\tX509Certificate2Collection storecollection = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;Store name: {0}&quot;, store.Name);\n\t\tConsole.WriteLine (&quot;Store location: {0}&quot;, store.Location);\n\t\tforeach (X509Certificate2 x509 in storecollection)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;certificate name: {0}&quot;,x509.Subject);\n\t\t}\n\n\t\t//Remove a certificate.\n\t\tstore.Remove (certificate1);\n\t\tX509Certificate2Collection storecollection2 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tforeach (X509Certificate2 x509 in storecollection2)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t}\n\n\t\t//Remove a range of certificates.\n\t\tstore.RemoveRange (collection);\n\t\tX509Certificate2Collection storecollection3 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tif (storecollection3.Count == 0)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;Store contains no certificates.&quot;);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tforeach (X509Certificate2 x509 in storecollection3)\n\t\t\t{\n\t\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t\t}\n\t\t}\n\n\t\t//Close the store.\n\t\tstore.Close ();\n\t}\t\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"x509store2#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\nusing namespace System::IO;\nint main()\n{\n   \n   //Create new X509 store called teststore from the local certificate store.\n   X509Store ^ store = gcnew X509Store( &quot;teststore&quot;,StoreLocation::CurrentUser );\n   store-&gt;Open( OpenFlags::ReadWrite );\n   X509Certificate2 ^ certificate = gcnew X509Certificate2;\n   \n   //Create certificates from certificate files.\n   //You must put in a valid path to three certificates in the following constructors.\n   X509Certificate2 ^ certificate1 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate2 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate5 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   \n   //Create a collection and add two of the certificates.\n   X509Certificate2Collection ^ collection = gcnew X509Certificate2Collection;\n   collection-&gt;Add( certificate2 );\n   collection-&gt;Add( certificate5 );\n   \n   //Add certificates to the store.\n   store-&gt;Add( certificate1 );\n   store-&gt;AddRange( collection );\n   X509Certificate2Collection ^ storecollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;Store name: {0}&quot;, store-&gt;Name );\n   Console::WriteLine( &quot;Store location: {0}&quot;, store-&gt;Location );\n   System::Collections::IEnumerator^ myEnum = storecollection-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a certificate.\n   store-&gt;Remove( certificate1 );\n   X509Certificate2Collection ^ storecollection2 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   System::Collections::IEnumerator^ myEnum1 = storecollection2-&gt;GetEnumerator();\n   while ( myEnum1-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum1-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a range of certificates.\n   store-&gt;RemoveRange( collection );\n   X509Certificate2Collection ^ storecollection3 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   if ( storecollection3-&gt;Count == 0 )\n   {\n      Console::WriteLine( &quot;Store contains no certificates.&quot; );\n   }\n   else\n   {\n      System::Collections::IEnumerator^ myEnum2 = storecollection3-&gt;GetEnumerator();\n      while ( myEnum2-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum2-&gt;Current);\n         Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n      }\n   }\n\n   \n   //Close the store.\n   store-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"x509store2#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\nImports System.IO\n\n\n\nClass X509store2\n\n    Shared Sub Main(ByVal args() As String)\n        &#39;Create new X509 store called teststore from the local certificate store.\n        Dim store As New X509Store(&quot;teststore&quot;, StoreLocation.CurrentUser)\n        store.Open(OpenFlags.ReadWrite)\n        Dim certificate As New X509Certificate2()\n\n        &#39;Create certificates from certificate files.\n        &#39;You must put in a valid path to three certificates in the following constructors.\n        Dim certificate1 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate2 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate5 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n\n        &#39;Create a collection and add two of the certificates.\n        Dim collection As New X509Certificate2Collection()\n        collection.Add(certificate2)\n        collection.Add(certificate5)\n\n        &#39;Add certificates to the store.\n        store.Add(certificate1)\n        store.AddRange(collection)\n\n        Dim storecollection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;Store name: {0}&quot;, store.Name)\n        Console.WriteLine(&quot;Store location: {0}&quot;, store.Location)\n        Dim x509 As X509Certificate2\n        For Each x509 In storecollection\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509.Subject)\n        Next x509\n\n        &#39;Remove a certificate.\n        store.Remove(certificate1)\n        Dim storecollection2 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        Dim x509a As X509Certificate2\n        For Each x509a In storecollection2\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509a.Subject)\n        Next x509a\n\n        &#39;Remove a range of certificates.\n        store.RemoveRange(collection)\n        Dim storecollection3 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        If storecollection3.Count = 0 Then\n            Console.WriteLine(&quot;Store contains no certificates.&quot;)\n        Else\n            Dim x509b As X509Certificate2\n            For Each x509b In storecollection3\n                Console.WriteLine(&quot;certificate name: {0}&quot;, x509b.Subject)\n            Next x509b\n        End If\n\n        &#39;Close the store.\n        store.Close()\n\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Store__ctor_System_String_System_Security_Cryptography_X509Certificates_StoreLocation_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Store__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X509Store(String,StoreLocation)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a> class using a string that represents a value from the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.storename\" data-linktype=\"relative-path\">StoreName</a> enumeration and a value from the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.storelocation\" data-linktype=\"relative-path\">StoreLocation</a> enumeration.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X509Store (string storeName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>storeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that represents a value from the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.storename\" data-linktype=\"relative-path\">StoreName</a> enumeration.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>storeLocation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.storelocation\" data-linktype=\"relative-path\">StoreLocation</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the enumeration values that specifies the location of the X.509 certificate store.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>storeLocation</code> contains invalid values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor to create an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a> object using a store name and location. To create a new store, specify a name that does not exist. A new store will be created with that name.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example opens an X.509 certificate store, adds and deletes certificates, and then closes the store. It assumes that you have three certificates to add to and remove from a local store.  </p>\n<pre><code class=\"lang-cs\" name=\"x509store2#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\nusing System.IO;\n\npublic class X509store2\n{\n\tpublic static void Main (string[] args)\n\t{\n\t\t//Create new X509 store called teststore from the local certificate store.\n\t\tX509Store store = new X509Store (&quot;teststore&quot;, StoreLocation.CurrentUser);\n\t\tstore.Open (OpenFlags.ReadWrite);\n\t\tX509Certificate2 certificate = new X509Certificate2 ();\n\n\t\t//Create certificates from certificate files.\n\t\t//You must put in a valid path to three certificates in the following constructors.\n\t\tX509Certificate2 certificate1 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate2 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate5 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\n\t\t//Create a collection and add two of the certificates.\n\t\tX509Certificate2Collection collection = new X509Certificate2Collection ();\n\t\tcollection.Add (certificate2);\n\t\tcollection.Add (certificate5);\n\n\t\t//Add certificates to the store.\n\t\tstore.Add (certificate1);\n\t\tstore.AddRange (collection);\n\n\t\tX509Certificate2Collection storecollection = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;Store name: {0}&quot;, store.Name);\n\t\tConsole.WriteLine (&quot;Store location: {0}&quot;, store.Location);\n\t\tforeach (X509Certificate2 x509 in storecollection)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;certificate name: {0}&quot;,x509.Subject);\n\t\t}\n\n\t\t//Remove a certificate.\n\t\tstore.Remove (certificate1);\n\t\tX509Certificate2Collection storecollection2 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tforeach (X509Certificate2 x509 in storecollection2)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t}\n\n\t\t//Remove a range of certificates.\n\t\tstore.RemoveRange (collection);\n\t\tX509Certificate2Collection storecollection3 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tif (storecollection3.Count == 0)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;Store contains no certificates.&quot;);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tforeach (X509Certificate2 x509 in storecollection3)\n\t\t\t{\n\t\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t\t}\n\t\t}\n\n\t\t//Close the store.\n\t\tstore.Close ();\n\t}\t\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"x509store2#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\nusing namespace System::IO;\nint main()\n{\n   \n   //Create new X509 store called teststore from the local certificate store.\n   X509Store ^ store = gcnew X509Store( &quot;teststore&quot;,StoreLocation::CurrentUser );\n   store-&gt;Open( OpenFlags::ReadWrite );\n   X509Certificate2 ^ certificate = gcnew X509Certificate2;\n   \n   //Create certificates from certificate files.\n   //You must put in a valid path to three certificates in the following constructors.\n   X509Certificate2 ^ certificate1 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate2 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate5 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   \n   //Create a collection and add two of the certificates.\n   X509Certificate2Collection ^ collection = gcnew X509Certificate2Collection;\n   collection-&gt;Add( certificate2 );\n   collection-&gt;Add( certificate5 );\n   \n   //Add certificates to the store.\n   store-&gt;Add( certificate1 );\n   store-&gt;AddRange( collection );\n   X509Certificate2Collection ^ storecollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;Store name: {0}&quot;, store-&gt;Name );\n   Console::WriteLine( &quot;Store location: {0}&quot;, store-&gt;Location );\n   System::Collections::IEnumerator^ myEnum = storecollection-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a certificate.\n   store-&gt;Remove( certificate1 );\n   X509Certificate2Collection ^ storecollection2 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   System::Collections::IEnumerator^ myEnum1 = storecollection2-&gt;GetEnumerator();\n   while ( myEnum1-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum1-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a range of certificates.\n   store-&gt;RemoveRange( collection );\n   X509Certificate2Collection ^ storecollection3 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   if ( storecollection3-&gt;Count == 0 )\n   {\n      Console::WriteLine( &quot;Store contains no certificates.&quot; );\n   }\n   else\n   {\n      System::Collections::IEnumerator^ myEnum2 = storecollection3-&gt;GetEnumerator();\n      while ( myEnum2-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum2-&gt;Current);\n         Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n      }\n   }\n\n   \n   //Close the store.\n   store-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"x509store2#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\nImports System.IO\n\n\n\nClass X509store2\n\n    Shared Sub Main(ByVal args() As String)\n        &#39;Create new X509 store called teststore from the local certificate store.\n        Dim store As New X509Store(&quot;teststore&quot;, StoreLocation.CurrentUser)\n        store.Open(OpenFlags.ReadWrite)\n        Dim certificate As New X509Certificate2()\n\n        &#39;Create certificates from certificate files.\n        &#39;You must put in a valid path to three certificates in the following constructors.\n        Dim certificate1 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate2 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate5 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n\n        &#39;Create a collection and add two of the certificates.\n        Dim collection As New X509Certificate2Collection()\n        collection.Add(certificate2)\n        collection.Add(certificate5)\n\n        &#39;Add certificates to the store.\n        store.Add(certificate1)\n        store.AddRange(collection)\n\n        Dim storecollection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;Store name: {0}&quot;, store.Name)\n        Console.WriteLine(&quot;Store location: {0}&quot;, store.Location)\n        Dim x509 As X509Certificate2\n        For Each x509 In storecollection\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509.Subject)\n        Next x509\n\n        &#39;Remove a certificate.\n        store.Remove(certificate1)\n        Dim storecollection2 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        Dim x509a As X509Certificate2\n        For Each x509a In storecollection2\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509a.Subject)\n        Next x509a\n\n        &#39;Remove a range of certificates.\n        store.RemoveRange(collection)\n        Dim storecollection3 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        If storecollection3.Count = 0 Then\n            Console.WriteLine(&quot;Store contains no certificates.&quot;)\n        Else\n            Dim x509b As X509Certificate2\n            For Each x509b In storecollection3\n                Console.WriteLine(&quot;certificate name: {0}&quot;, x509b.Subject)\n            Next x509b\n        End If\n\n        &#39;Close the store.\n        store.Close()\n\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Store_Certificates\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Store_Certificates_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Certificates</div>        \r\n          </div>\r\n    \r\n            <p>Returns a collection of certificates located in an X.509 certificate store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Cryptography.X509Certificates.X509Certificate2Collection Certificates { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2collection\" data-linktype=\"relative-path\">X509Certificate2Collection</a></div>\r\n                  </div>\r\n                  <p>A collection of certificates.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method returns a snapshot of the X.509 certificate store. Note that subsequent <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store#System_Security_Cryptography_X509Certificates_X509Store_Add_\" data-linktype=\"relative-path\">Add</a> or <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store#System_Security_Cryptography_X509Certificates_X509Store_Remove_\" data-linktype=\"relative-path\">Remove</a> operations performed on the store will not have any effect on the collection that is returned. This snapshot is recalculated each time the property is called, so the use of this property inside an iterative function is not recommended.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section contains two examples. The first example demonstrates how you can open standard X.509 stores and list the number of certificates in each.  </p>\n<p> The second example demonstrates how you can add and remove single certificates and ranges of certificates.  </p>\n<p> <strong>Example 1</strong>  </p>\n<p> This example tries to open each standard store in each standard location on the current computer. It prints a summary that shows whether each store exists and, if so, the number of certificates it contains.  </p>\n<p> The example creates an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a> object for each combination of standard name and standard location. It calls the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store#System_Security_Cryptography_X509Certificates_X509Store_Open_\" data-linktype=\"relative-path\">Open</a> method with the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.openflags\" data-linktype=\"relative-path\">System.Security.Cryptography.X509Certificates.OpenFlags</a> flag, which opens the physical store only if it already exists. If the physical store exists, the example uses the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store#System_Security_Cryptography_X509Certificates_X509Store_Name_\" data-linktype=\"relative-path\">Name</a>, <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store#System_Security_Cryptography_X509Certificates_X509Store_Location_\" data-linktype=\"relative-path\">Location</a>, and Certificates properties to display the number of certificates in the store.  </p>\n<pre><code class=\"lang-cs\" name=\"x509store2#2\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\n\npublic class Example\n{\n    static void Main()\n    {\n        Console.WriteLine(&quot;\\r<br>Exists Certs Name and Location&quot;);\n        Console.WriteLine(&quot;------ ----- -------------------------&quot;);\n\n        foreach (StoreLocation storeLocation in (StoreLocation[]) \n            Enum.GetValues(typeof(StoreLocation)))\n        {\n            foreach (StoreName storeName in (StoreName[]) \n                Enum.GetValues(typeof(StoreName)))\n            {\n                X509Store store = new X509Store(storeName, storeLocation);\n\n                try\n                {\n                    store.Open(OpenFlags.OpenExistingOnly);\n\n                    Console.WriteLine(&quot;Yes    {0,4}  {1}, {2}&quot;, \n                        store.Certificates.Count, store.Name, store.Location);\n                }   \n                catch (CryptographicException)\n                {\n                    Console.WriteLine(&quot;No           {0}, {1}&quot;, \n                        store.Name, store.Location);\n                }\n            }\n            Console.WriteLine();\n        }\n    }\n}\n\n/* This example produces output similar to the following:\n\nExists Certs Name and Location\n------ ----- -------------------------\nYes       1  AddressBook, CurrentUser\nYes      25  AuthRoot, CurrentUser\nYes     136  CA, CurrentUser\nYes      55  Disallowed, CurrentUser\nYes      20  My, CurrentUser\nYes      36  Root, CurrentUser\nYes       0  TrustedPeople, CurrentUser\nYes       1  TrustedPublisher, CurrentUser\n\nNo           AddressBook, LocalMachine\nYes      25  AuthRoot, LocalMachine\nYes     131  CA, LocalMachine\nYes      55  Disallowed, LocalMachine\nYes       3  My, LocalMachine\nYes      36  Root, LocalMachine\nYes       0  TrustedPeople, LocalMachine\nYes       1  TrustedPublisher, LocalMachine\n\n */\n</code></pre><pre><code class=\"lang-vb\" name=\"x509store2#2\">Option Strict On\n\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\n\nModule Example\n\n    Sub Main()\n\n        Console.WriteLine(vbCrLf &amp; &quot;Exists Certs Name and Location&quot;)\n        Console.WriteLine(&quot;------ ----- -------------------------&quot;)\n\n        For Each storeLocation As StoreLocation In _\n                CType([Enum].GetValues(GetType(StoreLocation)), StoreLocation())\n\n            For Each storeName As StoreName In _\n                    CType([Enum].GetValues(GetType(StoreName)), StoreName())\n\n                Dim store As New X509Store(StoreName, StoreLocation)\n\n                Try\n                    store.Open(OpenFlags.OpenExistingOnly)\n                    Console.WriteLine(&quot;Yes    {0,4}  {1}, {2}&quot;, _\n                        store.Certificates.Count, store.Name, store.Location)\n                Catch e As CryptographicException\n                    Console.WriteLine(&quot;No           {0}, {1}&quot;, _\n                        store.Name, store.Location)\n                End Try\n            Next\n\n            Console.WriteLine()\n        Next\n    End Sub\nEnd Module\n\n&#39; This example produces output similar to the following:\n\n&#39;Exists Certs Name and Location\n&#39;------ ----- -------------------------\n&#39;Yes       1  AddressBook, CurrentUser\n&#39;Yes      25  AuthRoot, CurrentUser\n&#39;Yes     136  CA, CurrentUser\n&#39;Yes      55  Disallowed, CurrentUser\n&#39;Yes      20  My, CurrentUser\n&#39;Yes      36  Root, CurrentUser\n&#39;Yes       0  TrustedPeople, CurrentUser\n&#39;Yes       1  TrustedPublisher, CurrentUser\n\n&#39;No           AddressBook, LocalMachine\n&#39;Yes      25  AuthRoot, LocalMachine\n&#39;Yes     131  CA, LocalMachine\n&#39;Yes      55  Disallowed, LocalMachine\n&#39;Yes       3  My, LocalMachine\n&#39;Yes      36  Root, LocalMachine\n&#39;Yes       0  TrustedPeople, LocalMachine\n&#39;Yes       1  TrustedPublisher, LocalMachine\n</code></pre><p> <strong>Example 2</strong>  </p>\n<p> This example opens an X.509 certificate store, adds and deletes certificates, and then closes the store. It assumes that you have three certificates to add to and remove from a local store.  </p>\n<pre><code class=\"lang-cs\" name=\"x509store2#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\nusing System.IO;\n\npublic class X509store2\n{\n\tpublic static void Main (string[] args)\n\t{\n\t\t//Create new X509 store called teststore from the local certificate store.\n\t\tX509Store store = new X509Store (&quot;teststore&quot;, StoreLocation.CurrentUser);\n\t\tstore.Open (OpenFlags.ReadWrite);\n\t\tX509Certificate2 certificate = new X509Certificate2 ();\n\n\t\t//Create certificates from certificate files.\n\t\t//You must put in a valid path to three certificates in the following constructors.\n\t\tX509Certificate2 certificate1 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate2 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate5 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\n\t\t//Create a collection and add two of the certificates.\n\t\tX509Certificate2Collection collection = new X509Certificate2Collection ();\n\t\tcollection.Add (certificate2);\n\t\tcollection.Add (certificate5);\n\n\t\t//Add certificates to the store.\n\t\tstore.Add (certificate1);\n\t\tstore.AddRange (collection);\n\n\t\tX509Certificate2Collection storecollection = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;Store name: {0}&quot;, store.Name);\n\t\tConsole.WriteLine (&quot;Store location: {0}&quot;, store.Location);\n\t\tforeach (X509Certificate2 x509 in storecollection)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;certificate name: {0}&quot;,x509.Subject);\n\t\t}\n\n\t\t//Remove a certificate.\n\t\tstore.Remove (certificate1);\n\t\tX509Certificate2Collection storecollection2 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tforeach (X509Certificate2 x509 in storecollection2)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t}\n\n\t\t//Remove a range of certificates.\n\t\tstore.RemoveRange (collection);\n\t\tX509Certificate2Collection storecollection3 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tif (storecollection3.Count == 0)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;Store contains no certificates.&quot;);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tforeach (X509Certificate2 x509 in storecollection3)\n\t\t\t{\n\t\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t\t}\n\t\t}\n\n\t\t//Close the store.\n\t\tstore.Close ();\n\t}\t\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"x509store2#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\nusing namespace System::IO;\nint main()\n{\n   \n   //Create new X509 store called teststore from the local certificate store.\n   X509Store ^ store = gcnew X509Store( &quot;teststore&quot;,StoreLocation::CurrentUser );\n   store-&gt;Open( OpenFlags::ReadWrite );\n   X509Certificate2 ^ certificate = gcnew X509Certificate2;\n   \n   //Create certificates from certificate files.\n   //You must put in a valid path to three certificates in the following constructors.\n   X509Certificate2 ^ certificate1 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate2 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate5 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   \n   //Create a collection and add two of the certificates.\n   X509Certificate2Collection ^ collection = gcnew X509Certificate2Collection;\n   collection-&gt;Add( certificate2 );\n   collection-&gt;Add( certificate5 );\n   \n   //Add certificates to the store.\n   store-&gt;Add( certificate1 );\n   store-&gt;AddRange( collection );\n   X509Certificate2Collection ^ storecollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;Store name: {0}&quot;, store-&gt;Name );\n   Console::WriteLine( &quot;Store location: {0}&quot;, store-&gt;Location );\n   System::Collections::IEnumerator^ myEnum = storecollection-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a certificate.\n   store-&gt;Remove( certificate1 );\n   X509Certificate2Collection ^ storecollection2 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   System::Collections::IEnumerator^ myEnum1 = storecollection2-&gt;GetEnumerator();\n   while ( myEnum1-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum1-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a range of certificates.\n   store-&gt;RemoveRange( collection );\n   X509Certificate2Collection ^ storecollection3 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   if ( storecollection3-&gt;Count == 0 )\n   {\n      Console::WriteLine( &quot;Store contains no certificates.&quot; );\n   }\n   else\n   {\n      System::Collections::IEnumerator^ myEnum2 = storecollection3-&gt;GetEnumerator();\n      while ( myEnum2-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum2-&gt;Current);\n         Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n      }\n   }\n\n   \n   //Close the store.\n   store-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"x509store2#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\nImports System.IO\n\n\n\nClass X509store2\n\n    Shared Sub Main(ByVal args() As String)\n        &#39;Create new X509 store called teststore from the local certificate store.\n        Dim store As New X509Store(&quot;teststore&quot;, StoreLocation.CurrentUser)\n        store.Open(OpenFlags.ReadWrite)\n        Dim certificate As New X509Certificate2()\n\n        &#39;Create certificates from certificate files.\n        &#39;You must put in a valid path to three certificates in the following constructors.\n        Dim certificate1 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate2 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate5 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n\n        &#39;Create a collection and add two of the certificates.\n        Dim collection As New X509Certificate2Collection()\n        collection.Add(certificate2)\n        collection.Add(certificate5)\n\n        &#39;Add certificates to the store.\n        store.Add(certificate1)\n        store.AddRange(collection)\n\n        Dim storecollection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;Store name: {0}&quot;, store.Name)\n        Console.WriteLine(&quot;Store location: {0}&quot;, store.Location)\n        Dim x509 As X509Certificate2\n        For Each x509 In storecollection\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509.Subject)\n        Next x509\n\n        &#39;Remove a certificate.\n        store.Remove(certificate1)\n        Dim storecollection2 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        Dim x509a As X509Certificate2\n        For Each x509a In storecollection2\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509a.Subject)\n        Next x509a\n\n        &#39;Remove a range of certificates.\n        store.RemoveRange(collection)\n        Dim storecollection3 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        If storecollection3.Count = 0 Then\n            Console.WriteLine(&quot;Store contains no certificates.&quot;)\n        Else\n            Dim x509b As X509Certificate2\n            For Each x509b In storecollection3\n                Console.WriteLine(&quot;certificate name: {0}&quot;, x509b.Subject)\n            Next x509b\n        End If\n\n        &#39;Close the store.\n        store.Close()\n\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Store_Location\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Store_Location_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Location</div>        \r\n          </div>\r\n    \r\n            <p>Gets the location of the X.509 certificate store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Cryptography.X509Certificates.StoreLocation Location { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.storelocation\" data-linktype=\"relative-path\">StoreLocation</a></div>\r\n                  </div>\r\n                  <p>The location of the certificate store.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property returns the X.509 certificate store location of either the store for the current user or the store for the local computer.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section contains two examples. The first example demonstrates how you can open standard X.509 stores and list the number of certificates in each.  </p>\n<p> The second example demonstrates how you can add and remove single certificates and ranges of certificates.  </p>\n<p> <strong>Example 1</strong>  </p>\n<p> This example tries to open each standard store in each standard location on the current computer. It prints a summary that shows whether each store exists and, if so, the number of certificates it contains.  </p>\n<p> The example creates an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a> object for each combination of standard name and standard location. It calls the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store#System_Security_Cryptography_X509Certificates_X509Store_Open_\" data-linktype=\"relative-path\">Open</a> method with the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.openflags\" data-linktype=\"relative-path\">System.Security.Cryptography.X509Certificates.OpenFlags</a> flag, which opens the physical store only if it already exists. If the physical store exists, the example uses the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store#System_Security_Cryptography_X509Certificates_X509Store_Name_\" data-linktype=\"relative-path\">Name</a>, Location, and <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store#System_Security_Cryptography_X509Certificates_X509Store_Certificates_\" data-linktype=\"relative-path\">Certificates</a> properties to display the number of certificates in the store.  </p>\n<pre><code class=\"lang-cs\" name=\"x509store2#2\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\n\npublic class Example\n{\n    static void Main()\n    {\n        Console.WriteLine(&quot;\\r<br>Exists Certs Name and Location&quot;);\n        Console.WriteLine(&quot;------ ----- -------------------------&quot;);\n\n        foreach (StoreLocation storeLocation in (StoreLocation[]) \n            Enum.GetValues(typeof(StoreLocation)))\n        {\n            foreach (StoreName storeName in (StoreName[]) \n                Enum.GetValues(typeof(StoreName)))\n            {\n                X509Store store = new X509Store(storeName, storeLocation);\n\n                try\n                {\n                    store.Open(OpenFlags.OpenExistingOnly);\n\n                    Console.WriteLine(&quot;Yes    {0,4}  {1}, {2}&quot;, \n                        store.Certificates.Count, store.Name, store.Location);\n                }   \n                catch (CryptographicException)\n                {\n                    Console.WriteLine(&quot;No           {0}, {1}&quot;, \n                        store.Name, store.Location);\n                }\n            }\n            Console.WriteLine();\n        }\n    }\n}\n\n/* This example produces output similar to the following:\n\nExists Certs Name and Location\n------ ----- -------------------------\nYes       1  AddressBook, CurrentUser\nYes      25  AuthRoot, CurrentUser\nYes     136  CA, CurrentUser\nYes      55  Disallowed, CurrentUser\nYes      20  My, CurrentUser\nYes      36  Root, CurrentUser\nYes       0  TrustedPeople, CurrentUser\nYes       1  TrustedPublisher, CurrentUser\n\nNo           AddressBook, LocalMachine\nYes      25  AuthRoot, LocalMachine\nYes     131  CA, LocalMachine\nYes      55  Disallowed, LocalMachine\nYes       3  My, LocalMachine\nYes      36  Root, LocalMachine\nYes       0  TrustedPeople, LocalMachine\nYes       1  TrustedPublisher, LocalMachine\n\n */\n</code></pre><pre><code class=\"lang-vb\" name=\"x509store2#2\">Option Strict On\n\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\n\nModule Example\n\n    Sub Main()\n\n        Console.WriteLine(vbCrLf &amp; &quot;Exists Certs Name and Location&quot;)\n        Console.WriteLine(&quot;------ ----- -------------------------&quot;)\n\n        For Each storeLocation As StoreLocation In _\n                CType([Enum].GetValues(GetType(StoreLocation)), StoreLocation())\n\n            For Each storeName As StoreName In _\n                    CType([Enum].GetValues(GetType(StoreName)), StoreName())\n\n                Dim store As New X509Store(StoreName, StoreLocation)\n\n                Try\n                    store.Open(OpenFlags.OpenExistingOnly)\n                    Console.WriteLine(&quot;Yes    {0,4}  {1}, {2}&quot;, _\n                        store.Certificates.Count, store.Name, store.Location)\n                Catch e As CryptographicException\n                    Console.WriteLine(&quot;No           {0}, {1}&quot;, _\n                        store.Name, store.Location)\n                End Try\n            Next\n\n            Console.WriteLine()\n        Next\n    End Sub\nEnd Module\n\n&#39; This example produces output similar to the following:\n\n&#39;Exists Certs Name and Location\n&#39;------ ----- -------------------------\n&#39;Yes       1  AddressBook, CurrentUser\n&#39;Yes      25  AuthRoot, CurrentUser\n&#39;Yes     136  CA, CurrentUser\n&#39;Yes      55  Disallowed, CurrentUser\n&#39;Yes      20  My, CurrentUser\n&#39;Yes      36  Root, CurrentUser\n&#39;Yes       0  TrustedPeople, CurrentUser\n&#39;Yes       1  TrustedPublisher, CurrentUser\n\n&#39;No           AddressBook, LocalMachine\n&#39;Yes      25  AuthRoot, LocalMachine\n&#39;Yes     131  CA, LocalMachine\n&#39;Yes      55  Disallowed, LocalMachine\n&#39;Yes       3  My, LocalMachine\n&#39;Yes      36  Root, LocalMachine\n&#39;Yes       0  TrustedPeople, LocalMachine\n&#39;Yes       1  TrustedPublisher, LocalMachine\n</code></pre><p> <strong>Example 2</strong>  </p>\n<p> This example opens an X.509 certificate store, adds and deletes certificates, and then closes the store. It assumes that you have three certificates to add to and remove from a local store.  </p>\n<pre><code class=\"lang-cs\" name=\"x509store2#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\nusing System.IO;\n\npublic class X509store2\n{\n\tpublic static void Main (string[] args)\n\t{\n\t\t//Create new X509 store called teststore from the local certificate store.\n\t\tX509Store store = new X509Store (&quot;teststore&quot;, StoreLocation.CurrentUser);\n\t\tstore.Open (OpenFlags.ReadWrite);\n\t\tX509Certificate2 certificate = new X509Certificate2 ();\n\n\t\t//Create certificates from certificate files.\n\t\t//You must put in a valid path to three certificates in the following constructors.\n\t\tX509Certificate2 certificate1 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate2 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate5 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\n\t\t//Create a collection and add two of the certificates.\n\t\tX509Certificate2Collection collection = new X509Certificate2Collection ();\n\t\tcollection.Add (certificate2);\n\t\tcollection.Add (certificate5);\n\n\t\t//Add certificates to the store.\n\t\tstore.Add (certificate1);\n\t\tstore.AddRange (collection);\n\n\t\tX509Certificate2Collection storecollection = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;Store name: {0}&quot;, store.Name);\n\t\tConsole.WriteLine (&quot;Store location: {0}&quot;, store.Location);\n\t\tforeach (X509Certificate2 x509 in storecollection)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;certificate name: {0}&quot;,x509.Subject);\n\t\t}\n\n\t\t//Remove a certificate.\n\t\tstore.Remove (certificate1);\n\t\tX509Certificate2Collection storecollection2 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tforeach (X509Certificate2 x509 in storecollection2)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t}\n\n\t\t//Remove a range of certificates.\n\t\tstore.RemoveRange (collection);\n\t\tX509Certificate2Collection storecollection3 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tif (storecollection3.Count == 0)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;Store contains no certificates.&quot;);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tforeach (X509Certificate2 x509 in storecollection3)\n\t\t\t{\n\t\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t\t}\n\t\t}\n\n\t\t//Close the store.\n\t\tstore.Close ();\n\t}\t\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"x509store2#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\nusing namespace System::IO;\nint main()\n{\n   \n   //Create new X509 store called teststore from the local certificate store.\n   X509Store ^ store = gcnew X509Store( &quot;teststore&quot;,StoreLocation::CurrentUser );\n   store-&gt;Open( OpenFlags::ReadWrite );\n   X509Certificate2 ^ certificate = gcnew X509Certificate2;\n   \n   //Create certificates from certificate files.\n   //You must put in a valid path to three certificates in the following constructors.\n   X509Certificate2 ^ certificate1 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate2 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate5 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   \n   //Create a collection and add two of the certificates.\n   X509Certificate2Collection ^ collection = gcnew X509Certificate2Collection;\n   collection-&gt;Add( certificate2 );\n   collection-&gt;Add( certificate5 );\n   \n   //Add certificates to the store.\n   store-&gt;Add( certificate1 );\n   store-&gt;AddRange( collection );\n   X509Certificate2Collection ^ storecollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;Store name: {0}&quot;, store-&gt;Name );\n   Console::WriteLine( &quot;Store location: {0}&quot;, store-&gt;Location );\n   System::Collections::IEnumerator^ myEnum = storecollection-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a certificate.\n   store-&gt;Remove( certificate1 );\n   X509Certificate2Collection ^ storecollection2 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   System::Collections::IEnumerator^ myEnum1 = storecollection2-&gt;GetEnumerator();\n   while ( myEnum1-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum1-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a range of certificates.\n   store-&gt;RemoveRange( collection );\n   X509Certificate2Collection ^ storecollection3 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   if ( storecollection3-&gt;Count == 0 )\n   {\n      Console::WriteLine( &quot;Store contains no certificates.&quot; );\n   }\n   else\n   {\n      System::Collections::IEnumerator^ myEnum2 = storecollection3-&gt;GetEnumerator();\n      while ( myEnum2-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum2-&gt;Current);\n         Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n      }\n   }\n\n   \n   //Close the store.\n   store-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"x509store2#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\nImports System.IO\n\n\n\nClass X509store2\n\n    Shared Sub Main(ByVal args() As String)\n        &#39;Create new X509 store called teststore from the local certificate store.\n        Dim store As New X509Store(&quot;teststore&quot;, StoreLocation.CurrentUser)\n        store.Open(OpenFlags.ReadWrite)\n        Dim certificate As New X509Certificate2()\n\n        &#39;Create certificates from certificate files.\n        &#39;You must put in a valid path to three certificates in the following constructors.\n        Dim certificate1 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate2 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate5 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n\n        &#39;Create a collection and add two of the certificates.\n        Dim collection As New X509Certificate2Collection()\n        collection.Add(certificate2)\n        collection.Add(certificate5)\n\n        &#39;Add certificates to the store.\n        store.Add(certificate1)\n        store.AddRange(collection)\n\n        Dim storecollection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;Store name: {0}&quot;, store.Name)\n        Console.WriteLine(&quot;Store location: {0}&quot;, store.Location)\n        Dim x509 As X509Certificate2\n        For Each x509 In storecollection\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509.Subject)\n        Next x509\n\n        &#39;Remove a certificate.\n        store.Remove(certificate1)\n        Dim storecollection2 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        Dim x509a As X509Certificate2\n        For Each x509a In storecollection2\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509a.Subject)\n        Next x509a\n\n        &#39;Remove a range of certificates.\n        store.RemoveRange(collection)\n        Dim storecollection3 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        If storecollection3.Count = 0 Then\n            Console.WriteLine(&quot;Store contains no certificates.&quot;)\n        Else\n            Dim x509b As X509Certificate2\n            For Each x509b In storecollection3\n                Console.WriteLine(&quot;certificate name: {0}&quot;, x509b.Subject)\n            Next x509b\n        End If\n\n        &#39;Close the store.\n        store.Close()\n\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Store_Name\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Store_Name_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Name</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the X.509 certificate store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Name { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the certificate store.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property returns the X.509 certificate store name. This value can indicate the type of certificates stored, such as root certificates or certificates from trusted publishers.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section contains two examples. The first example demonstrates how you can open standard X.509 stores and list the number of certificates in each.  </p>\n<p> The second example demonstrates how you can add and remove single certificates and ranges of certificates.  </p>\n<p> <strong>Example 1</strong>  </p>\n<p> This example tries to open each standard store in each standard location on the current computer. It prints a summary that shows whether each store exists and, if so, the number of certificates it contains.  </p>\n<p> The example creates an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a> object for each combination of standard name and standard location. It calls the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store#System_Security_Cryptography_X509Certificates_X509Store_Open_\" data-linktype=\"relative-path\">Open</a> method with the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.openflags\" data-linktype=\"relative-path\">System.Security.Cryptography.X509Certificates.OpenFlags</a> flag, which opens the physical store only if it already exists. If the physical store exists, the example uses the Name, <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store#System_Security_Cryptography_X509Certificates_X509Store_Location_\" data-linktype=\"relative-path\">Location</a>, and <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store#System_Security_Cryptography_X509Certificates_X509Store_Certificates_\" data-linktype=\"relative-path\">Certificates</a> properties to display the number of certificates in the store.  </p>\n<pre><code class=\"lang-cs\" name=\"x509store2#2\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\n\npublic class Example\n{\n    static void Main()\n    {\n        Console.WriteLine(&quot;\\r<br>Exists Certs Name and Location&quot;);\n        Console.WriteLine(&quot;------ ----- -------------------------&quot;);\n\n        foreach (StoreLocation storeLocation in (StoreLocation[]) \n            Enum.GetValues(typeof(StoreLocation)))\n        {\n            foreach (StoreName storeName in (StoreName[]) \n                Enum.GetValues(typeof(StoreName)))\n            {\n                X509Store store = new X509Store(storeName, storeLocation);\n\n                try\n                {\n                    store.Open(OpenFlags.OpenExistingOnly);\n\n                    Console.WriteLine(&quot;Yes    {0,4}  {1}, {2}&quot;, \n                        store.Certificates.Count, store.Name, store.Location);\n                }   \n                catch (CryptographicException)\n                {\n                    Console.WriteLine(&quot;No           {0}, {1}&quot;, \n                        store.Name, store.Location);\n                }\n            }\n            Console.WriteLine();\n        }\n    }\n}\n\n/* This example produces output similar to the following:\n\nExists Certs Name and Location\n------ ----- -------------------------\nYes       1  AddressBook, CurrentUser\nYes      25  AuthRoot, CurrentUser\nYes     136  CA, CurrentUser\nYes      55  Disallowed, CurrentUser\nYes      20  My, CurrentUser\nYes      36  Root, CurrentUser\nYes       0  TrustedPeople, CurrentUser\nYes       1  TrustedPublisher, CurrentUser\n\nNo           AddressBook, LocalMachine\nYes      25  AuthRoot, LocalMachine\nYes     131  CA, LocalMachine\nYes      55  Disallowed, LocalMachine\nYes       3  My, LocalMachine\nYes      36  Root, LocalMachine\nYes       0  TrustedPeople, LocalMachine\nYes       1  TrustedPublisher, LocalMachine\n\n */\n</code></pre><pre><code class=\"lang-vb\" name=\"x509store2#2\">Option Strict On\n\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\n\nModule Example\n\n    Sub Main()\n\n        Console.WriteLine(vbCrLf &amp; &quot;Exists Certs Name and Location&quot;)\n        Console.WriteLine(&quot;------ ----- -------------------------&quot;)\n\n        For Each storeLocation As StoreLocation In _\n                CType([Enum].GetValues(GetType(StoreLocation)), StoreLocation())\n\n            For Each storeName As StoreName In _\n                    CType([Enum].GetValues(GetType(StoreName)), StoreName())\n\n                Dim store As New X509Store(StoreName, StoreLocation)\n\n                Try\n                    store.Open(OpenFlags.OpenExistingOnly)\n                    Console.WriteLine(&quot;Yes    {0,4}  {1}, {2}&quot;, _\n                        store.Certificates.Count, store.Name, store.Location)\n                Catch e As CryptographicException\n                    Console.WriteLine(&quot;No           {0}, {1}&quot;, _\n                        store.Name, store.Location)\n                End Try\n            Next\n\n            Console.WriteLine()\n        Next\n    End Sub\nEnd Module\n\n&#39; This example produces output similar to the following:\n\n&#39;Exists Certs Name and Location\n&#39;------ ----- -------------------------\n&#39;Yes       1  AddressBook, CurrentUser\n&#39;Yes      25  AuthRoot, CurrentUser\n&#39;Yes     136  CA, CurrentUser\n&#39;Yes      55  Disallowed, CurrentUser\n&#39;Yes      20  My, CurrentUser\n&#39;Yes      36  Root, CurrentUser\n&#39;Yes       0  TrustedPeople, CurrentUser\n&#39;Yes       1  TrustedPublisher, CurrentUser\n\n&#39;No           AddressBook, LocalMachine\n&#39;Yes      25  AuthRoot, LocalMachine\n&#39;Yes     131  CA, LocalMachine\n&#39;Yes      55  Disallowed, LocalMachine\n&#39;Yes       3  My, LocalMachine\n&#39;Yes      36  Root, LocalMachine\n&#39;Yes       0  TrustedPeople, LocalMachine\n&#39;Yes       1  TrustedPublisher, LocalMachine\n</code></pre><p> <strong>Example 2</strong>  </p>\n<p> This example opens an X.509 certificate store, adds and deletes certificates, and then closes the store. It assumes that you have three certificates to add to and remove from a local store.  </p>\n<pre><code class=\"lang-cs\" name=\"x509store2#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\nusing System.IO;\n\npublic class X509store2\n{\n\tpublic static void Main (string[] args)\n\t{\n\t\t//Create new X509 store called teststore from the local certificate store.\n\t\tX509Store store = new X509Store (&quot;teststore&quot;, StoreLocation.CurrentUser);\n\t\tstore.Open (OpenFlags.ReadWrite);\n\t\tX509Certificate2 certificate = new X509Certificate2 ();\n\n\t\t//Create certificates from certificate files.\n\t\t//You must put in a valid path to three certificates in the following constructors.\n\t\tX509Certificate2 certificate1 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate2 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate5 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\n\t\t//Create a collection and add two of the certificates.\n\t\tX509Certificate2Collection collection = new X509Certificate2Collection ();\n\t\tcollection.Add (certificate2);\n\t\tcollection.Add (certificate5);\n\n\t\t//Add certificates to the store.\n\t\tstore.Add (certificate1);\n\t\tstore.AddRange (collection);\n\n\t\tX509Certificate2Collection storecollection = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;Store name: {0}&quot;, store.Name);\n\t\tConsole.WriteLine (&quot;Store location: {0}&quot;, store.Location);\n\t\tforeach (X509Certificate2 x509 in storecollection)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;certificate name: {0}&quot;,x509.Subject);\n\t\t}\n\n\t\t//Remove a certificate.\n\t\tstore.Remove (certificate1);\n\t\tX509Certificate2Collection storecollection2 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tforeach (X509Certificate2 x509 in storecollection2)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t}\n\n\t\t//Remove a range of certificates.\n\t\tstore.RemoveRange (collection);\n\t\tX509Certificate2Collection storecollection3 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tif (storecollection3.Count == 0)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;Store contains no certificates.&quot;);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tforeach (X509Certificate2 x509 in storecollection3)\n\t\t\t{\n\t\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t\t}\n\t\t}\n\n\t\t//Close the store.\n\t\tstore.Close ();\n\t}\t\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"x509store2#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\nusing namespace System::IO;\nint main()\n{\n   \n   //Create new X509 store called teststore from the local certificate store.\n   X509Store ^ store = gcnew X509Store( &quot;teststore&quot;,StoreLocation::CurrentUser );\n   store-&gt;Open( OpenFlags::ReadWrite );\n   X509Certificate2 ^ certificate = gcnew X509Certificate2;\n   \n   //Create certificates from certificate files.\n   //You must put in a valid path to three certificates in the following constructors.\n   X509Certificate2 ^ certificate1 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate2 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate5 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   \n   //Create a collection and add two of the certificates.\n   X509Certificate2Collection ^ collection = gcnew X509Certificate2Collection;\n   collection-&gt;Add( certificate2 );\n   collection-&gt;Add( certificate5 );\n   \n   //Add certificates to the store.\n   store-&gt;Add( certificate1 );\n   store-&gt;AddRange( collection );\n   X509Certificate2Collection ^ storecollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;Store name: {0}&quot;, store-&gt;Name );\n   Console::WriteLine( &quot;Store location: {0}&quot;, store-&gt;Location );\n   System::Collections::IEnumerator^ myEnum = storecollection-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a certificate.\n   store-&gt;Remove( certificate1 );\n   X509Certificate2Collection ^ storecollection2 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   System::Collections::IEnumerator^ myEnum1 = storecollection2-&gt;GetEnumerator();\n   while ( myEnum1-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum1-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a range of certificates.\n   store-&gt;RemoveRange( collection );\n   X509Certificate2Collection ^ storecollection3 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   if ( storecollection3-&gt;Count == 0 )\n   {\n      Console::WriteLine( &quot;Store contains no certificates.&quot; );\n   }\n   else\n   {\n      System::Collections::IEnumerator^ myEnum2 = storecollection3-&gt;GetEnumerator();\n      while ( myEnum2-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum2-&gt;Current);\n         Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n      }\n   }\n\n   \n   //Close the store.\n   store-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"x509store2#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\nImports System.IO\n\n\n\nClass X509store2\n\n    Shared Sub Main(ByVal args() As String)\n        &#39;Create new X509 store called teststore from the local certificate store.\n        Dim store As New X509Store(&quot;teststore&quot;, StoreLocation.CurrentUser)\n        store.Open(OpenFlags.ReadWrite)\n        Dim certificate As New X509Certificate2()\n\n        &#39;Create certificates from certificate files.\n        &#39;You must put in a valid path to three certificates in the following constructors.\n        Dim certificate1 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate2 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate5 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n\n        &#39;Create a collection and add two of the certificates.\n        Dim collection As New X509Certificate2Collection()\n        collection.Add(certificate2)\n        collection.Add(certificate5)\n\n        &#39;Add certificates to the store.\n        store.Add(certificate1)\n        store.AddRange(collection)\n\n        Dim storecollection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;Store name: {0}&quot;, store.Name)\n        Console.WriteLine(&quot;Store location: {0}&quot;, store.Location)\n        Dim x509 As X509Certificate2\n        For Each x509 In storecollection\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509.Subject)\n        Next x509\n\n        &#39;Remove a certificate.\n        store.Remove(certificate1)\n        Dim storecollection2 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        Dim x509a As X509Certificate2\n        For Each x509a In storecollection2\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509a.Subject)\n        Next x509a\n\n        &#39;Remove a range of certificates.\n        store.RemoveRange(collection)\n        Dim storecollection3 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        If storecollection3.Count = 0 Then\n            Console.WriteLine(&quot;Store contains no certificates.&quot;)\n        Else\n            Dim x509b As X509Certificate2\n            For Each x509b In storecollection3\n                Console.WriteLine(&quot;certificate name: {0}&quot;, x509b.Subject)\n            Next x509b\n        End If\n\n        &#39;Close the store.\n        store.Close()\n\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Store_StoreHandle\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Store_StoreHandle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StoreHandle</div>        \r\n          </div>\r\n    \r\n            <p>Gets an <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> handle to an <code>HCERTSTORE</code> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public IntPtr StoreHandle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </div>\r\n                  <p>A handle to an <code>HCERTSTORE</code> store.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The store is not open.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the StoreHandle property to provide compatibility with the unmanaged Microsoft Cryptographic API (CAPI).  </p>\n<p> For more information about the <code>HCERTSTORE</code> handle, see the unmanaged CAPI documentation in the Platform SDK section of the <a href=\"http://go.microsoft.com/fwlink/?linkid=37118\" data-linktype=\"external\">MSDN Library</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Store_Add_System_Security_Cryptography_X509Certificates_X509Certificate2_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Store_Add_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Add(X509Certificate2)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a certificate to an X.509 certificate store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Add (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>certificate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2\" data-linktype=\"relative-path\">X509Certificate2</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The certificate to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>certificate</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The certificate could not be added to the store.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to add a single certificate to an X.509 store.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example opens an X.509 certificate store, adds and deletes certificates, and then closes the store. It assumes that you have three certificates to add to and remove from a local store.  </p>\n<pre><code class=\"lang-cs\" name=\"x509store2#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\nusing System.IO;\n\npublic class X509store2\n{\n\tpublic static void Main (string[] args)\n\t{\n\t\t//Create new X509 store called teststore from the local certificate store.\n\t\tX509Store store = new X509Store (&quot;teststore&quot;, StoreLocation.CurrentUser);\n\t\tstore.Open (OpenFlags.ReadWrite);\n\t\tX509Certificate2 certificate = new X509Certificate2 ();\n\n\t\t//Create certificates from certificate files.\n\t\t//You must put in a valid path to three certificates in the following constructors.\n\t\tX509Certificate2 certificate1 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate2 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate5 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\n\t\t//Create a collection and add two of the certificates.\n\t\tX509Certificate2Collection collection = new X509Certificate2Collection ();\n\t\tcollection.Add (certificate2);\n\t\tcollection.Add (certificate5);\n\n\t\t//Add certificates to the store.\n\t\tstore.Add (certificate1);\n\t\tstore.AddRange (collection);\n\n\t\tX509Certificate2Collection storecollection = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;Store name: {0}&quot;, store.Name);\n\t\tConsole.WriteLine (&quot;Store location: {0}&quot;, store.Location);\n\t\tforeach (X509Certificate2 x509 in storecollection)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;certificate name: {0}&quot;,x509.Subject);\n\t\t}\n\n\t\t//Remove a certificate.\n\t\tstore.Remove (certificate1);\n\t\tX509Certificate2Collection storecollection2 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tforeach (X509Certificate2 x509 in storecollection2)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t}\n\n\t\t//Remove a range of certificates.\n\t\tstore.RemoveRange (collection);\n\t\tX509Certificate2Collection storecollection3 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tif (storecollection3.Count == 0)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;Store contains no certificates.&quot;);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tforeach (X509Certificate2 x509 in storecollection3)\n\t\t\t{\n\t\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t\t}\n\t\t}\n\n\t\t//Close the store.\n\t\tstore.Close ();\n\t}\t\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"x509store2#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\nusing namespace System::IO;\nint main()\n{\n   \n   //Create new X509 store called teststore from the local certificate store.\n   X509Store ^ store = gcnew X509Store( &quot;teststore&quot;,StoreLocation::CurrentUser );\n   store-&gt;Open( OpenFlags::ReadWrite );\n   X509Certificate2 ^ certificate = gcnew X509Certificate2;\n   \n   //Create certificates from certificate files.\n   //You must put in a valid path to three certificates in the following constructors.\n   X509Certificate2 ^ certificate1 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate2 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate5 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   \n   //Create a collection and add two of the certificates.\n   X509Certificate2Collection ^ collection = gcnew X509Certificate2Collection;\n   collection-&gt;Add( certificate2 );\n   collection-&gt;Add( certificate5 );\n   \n   //Add certificates to the store.\n   store-&gt;Add( certificate1 );\n   store-&gt;AddRange( collection );\n   X509Certificate2Collection ^ storecollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;Store name: {0}&quot;, store-&gt;Name );\n   Console::WriteLine( &quot;Store location: {0}&quot;, store-&gt;Location );\n   System::Collections::IEnumerator^ myEnum = storecollection-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a certificate.\n   store-&gt;Remove( certificate1 );\n   X509Certificate2Collection ^ storecollection2 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   System::Collections::IEnumerator^ myEnum1 = storecollection2-&gt;GetEnumerator();\n   while ( myEnum1-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum1-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a range of certificates.\n   store-&gt;RemoveRange( collection );\n   X509Certificate2Collection ^ storecollection3 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   if ( storecollection3-&gt;Count == 0 )\n   {\n      Console::WriteLine( &quot;Store contains no certificates.&quot; );\n   }\n   else\n   {\n      System::Collections::IEnumerator^ myEnum2 = storecollection3-&gt;GetEnumerator();\n      while ( myEnum2-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum2-&gt;Current);\n         Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n      }\n   }\n\n   \n   //Close the store.\n   store-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"x509store2#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\nImports System.IO\n\n\n\nClass X509store2\n\n    Shared Sub Main(ByVal args() As String)\n        &#39;Create new X509 store called teststore from the local certificate store.\n        Dim store As New X509Store(&quot;teststore&quot;, StoreLocation.CurrentUser)\n        store.Open(OpenFlags.ReadWrite)\n        Dim certificate As New X509Certificate2()\n\n        &#39;Create certificates from certificate files.\n        &#39;You must put in a valid path to three certificates in the following constructors.\n        Dim certificate1 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate2 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate5 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n\n        &#39;Create a collection and add two of the certificates.\n        Dim collection As New X509Certificate2Collection()\n        collection.Add(certificate2)\n        collection.Add(certificate5)\n\n        &#39;Add certificates to the store.\n        store.Add(certificate1)\n        store.AddRange(collection)\n\n        Dim storecollection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;Store name: {0}&quot;, store.Name)\n        Console.WriteLine(&quot;Store location: {0}&quot;, store.Location)\n        Dim x509 As X509Certificate2\n        For Each x509 In storecollection\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509.Subject)\n        Next x509\n\n        &#39;Remove a certificate.\n        store.Remove(certificate1)\n        Dim storecollection2 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        Dim x509a As X509Certificate2\n        For Each x509a In storecollection2\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509a.Subject)\n        Next x509a\n\n        &#39;Remove a range of certificates.\n        store.RemoveRange(collection)\n        Dim storecollection3 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        If storecollection3.Count = 0 Then\n            Console.WriteLine(&quot;Store contains no certificates.&quot;)\n        Else\n            Dim x509b As X509Certificate2\n            For Each x509b In storecollection3\n                Console.WriteLine(&quot;certificate name: {0}&quot;, x509b.Subject)\n            Next x509b\n        End If\n\n        &#39;Close the store.\n        store.Close()\n\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Store_AddRange_System_Security_Cryptography_X509Certificates_X509Certificate2Collection_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Store_AddRange_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddRange(X509Certificate2Collection)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a collection of certificates to an X.509 certificate store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddRange (System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificates);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>certificates</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2collection\" data-linktype=\"relative-path\">X509Certificate2Collection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The collection of certificates to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>certificates</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the required permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method adds more than one certificate to an X.509 certificate store; if one certificate addition fails, the operation is reverted and no certificates are added.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example opens an X.509 certificate store, adds and deletes certificates, and then closes the store. It assumes that you have three certificates to add to and remove from a local store.  </p>\n<pre><code class=\"lang-cs\" name=\"x509store2#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\nusing System.IO;\n\npublic class X509store2\n{\n\tpublic static void Main (string[] args)\n\t{\n\t\t//Create new X509 store called teststore from the local certificate store.\n\t\tX509Store store = new X509Store (&quot;teststore&quot;, StoreLocation.CurrentUser);\n\t\tstore.Open (OpenFlags.ReadWrite);\n\t\tX509Certificate2 certificate = new X509Certificate2 ();\n\n\t\t//Create certificates from certificate files.\n\t\t//You must put in a valid path to three certificates in the following constructors.\n\t\tX509Certificate2 certificate1 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate2 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate5 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\n\t\t//Create a collection and add two of the certificates.\n\t\tX509Certificate2Collection collection = new X509Certificate2Collection ();\n\t\tcollection.Add (certificate2);\n\t\tcollection.Add (certificate5);\n\n\t\t//Add certificates to the store.\n\t\tstore.Add (certificate1);\n\t\tstore.AddRange (collection);\n\n\t\tX509Certificate2Collection storecollection = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;Store name: {0}&quot;, store.Name);\n\t\tConsole.WriteLine (&quot;Store location: {0}&quot;, store.Location);\n\t\tforeach (X509Certificate2 x509 in storecollection)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;certificate name: {0}&quot;,x509.Subject);\n\t\t}\n\n\t\t//Remove a certificate.\n\t\tstore.Remove (certificate1);\n\t\tX509Certificate2Collection storecollection2 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tforeach (X509Certificate2 x509 in storecollection2)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t}\n\n\t\t//Remove a range of certificates.\n\t\tstore.RemoveRange (collection);\n\t\tX509Certificate2Collection storecollection3 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tif (storecollection3.Count == 0)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;Store contains no certificates.&quot;);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tforeach (X509Certificate2 x509 in storecollection3)\n\t\t\t{\n\t\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t\t}\n\t\t}\n\n\t\t//Close the store.\n\t\tstore.Close ();\n\t}\t\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"x509store2#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\nusing namespace System::IO;\nint main()\n{\n   \n   //Create new X509 store called teststore from the local certificate store.\n   X509Store ^ store = gcnew X509Store( &quot;teststore&quot;,StoreLocation::CurrentUser );\n   store-&gt;Open( OpenFlags::ReadWrite );\n   X509Certificate2 ^ certificate = gcnew X509Certificate2;\n   \n   //Create certificates from certificate files.\n   //You must put in a valid path to three certificates in the following constructors.\n   X509Certificate2 ^ certificate1 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate2 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate5 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   \n   //Create a collection and add two of the certificates.\n   X509Certificate2Collection ^ collection = gcnew X509Certificate2Collection;\n   collection-&gt;Add( certificate2 );\n   collection-&gt;Add( certificate5 );\n   \n   //Add certificates to the store.\n   store-&gt;Add( certificate1 );\n   store-&gt;AddRange( collection );\n   X509Certificate2Collection ^ storecollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;Store name: {0}&quot;, store-&gt;Name );\n   Console::WriteLine( &quot;Store location: {0}&quot;, store-&gt;Location );\n   System::Collections::IEnumerator^ myEnum = storecollection-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a certificate.\n   store-&gt;Remove( certificate1 );\n   X509Certificate2Collection ^ storecollection2 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   System::Collections::IEnumerator^ myEnum1 = storecollection2-&gt;GetEnumerator();\n   while ( myEnum1-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum1-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a range of certificates.\n   store-&gt;RemoveRange( collection );\n   X509Certificate2Collection ^ storecollection3 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   if ( storecollection3-&gt;Count == 0 )\n   {\n      Console::WriteLine( &quot;Store contains no certificates.&quot; );\n   }\n   else\n   {\n      System::Collections::IEnumerator^ myEnum2 = storecollection3-&gt;GetEnumerator();\n      while ( myEnum2-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum2-&gt;Current);\n         Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n      }\n   }\n\n   \n   //Close the store.\n   store-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"x509store2#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\nImports System.IO\n\n\n\nClass X509store2\n\n    Shared Sub Main(ByVal args() As String)\n        &#39;Create new X509 store called teststore from the local certificate store.\n        Dim store As New X509Store(&quot;teststore&quot;, StoreLocation.CurrentUser)\n        store.Open(OpenFlags.ReadWrite)\n        Dim certificate As New X509Certificate2()\n\n        &#39;Create certificates from certificate files.\n        &#39;You must put in a valid path to three certificates in the following constructors.\n        Dim certificate1 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate2 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate5 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n\n        &#39;Create a collection and add two of the certificates.\n        Dim collection As New X509Certificate2Collection()\n        collection.Add(certificate2)\n        collection.Add(certificate5)\n\n        &#39;Add certificates to the store.\n        store.Add(certificate1)\n        store.AddRange(collection)\n\n        Dim storecollection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;Store name: {0}&quot;, store.Name)\n        Console.WriteLine(&quot;Store location: {0}&quot;, store.Location)\n        Dim x509 As X509Certificate2\n        For Each x509 In storecollection\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509.Subject)\n        Next x509\n\n        &#39;Remove a certificate.\n        store.Remove(certificate1)\n        Dim storecollection2 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        Dim x509a As X509Certificate2\n        For Each x509a In storecollection2\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509a.Subject)\n        Next x509a\n\n        &#39;Remove a range of certificates.\n        store.RemoveRange(collection)\n        Dim storecollection3 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        If storecollection3.Count = 0 Then\n            Console.WriteLine(&quot;Store contains no certificates.&quot;)\n        Else\n            Dim x509b As X509Certificate2\n            For Each x509b In storecollection3\n                Console.WriteLine(&quot;certificate name: {0}&quot;, x509b.Subject)\n            Next x509b\n        End If\n\n        &#39;Close the store.\n        store.Close()\n\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Store_Close\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Store_Close_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Close()</div>        \r\n          </div>\r\n    \r\n            <p>Closes an X.509 certificate store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Close ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method releases all resources associated with the store. You should always close an X.509 certificate store after use.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example opens an X.509 certificate store, adds and deletes certificates, and then closes the store. It assumes that you have three certificates to add to and remove from a local store.  </p>\n<pre><code class=\"lang-cs\" name=\"x509store2#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\nusing System.IO;\n\npublic class X509store2\n{\n\tpublic static void Main (string[] args)\n\t{\n\t\t//Create new X509 store called teststore from the local certificate store.\n\t\tX509Store store = new X509Store (&quot;teststore&quot;, StoreLocation.CurrentUser);\n\t\tstore.Open (OpenFlags.ReadWrite);\n\t\tX509Certificate2 certificate = new X509Certificate2 ();\n\n\t\t//Create certificates from certificate files.\n\t\t//You must put in a valid path to three certificates in the following constructors.\n\t\tX509Certificate2 certificate1 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate2 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate5 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\n\t\t//Create a collection and add two of the certificates.\n\t\tX509Certificate2Collection collection = new X509Certificate2Collection ();\n\t\tcollection.Add (certificate2);\n\t\tcollection.Add (certificate5);\n\n\t\t//Add certificates to the store.\n\t\tstore.Add (certificate1);\n\t\tstore.AddRange (collection);\n\n\t\tX509Certificate2Collection storecollection = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;Store name: {0}&quot;, store.Name);\n\t\tConsole.WriteLine (&quot;Store location: {0}&quot;, store.Location);\n\t\tforeach (X509Certificate2 x509 in storecollection)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;certificate name: {0}&quot;,x509.Subject);\n\t\t}\n\n\t\t//Remove a certificate.\n\t\tstore.Remove (certificate1);\n\t\tX509Certificate2Collection storecollection2 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tforeach (X509Certificate2 x509 in storecollection2)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t}\n\n\t\t//Remove a range of certificates.\n\t\tstore.RemoveRange (collection);\n\t\tX509Certificate2Collection storecollection3 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tif (storecollection3.Count == 0)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;Store contains no certificates.&quot;);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tforeach (X509Certificate2 x509 in storecollection3)\n\t\t\t{\n\t\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t\t}\n\t\t}\n\n\t\t//Close the store.\n\t\tstore.Close ();\n\t}\t\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"x509store2#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\nusing namespace System::IO;\nint main()\n{\n   \n   //Create new X509 store called teststore from the local certificate store.\n   X509Store ^ store = gcnew X509Store( &quot;teststore&quot;,StoreLocation::CurrentUser );\n   store-&gt;Open( OpenFlags::ReadWrite );\n   X509Certificate2 ^ certificate = gcnew X509Certificate2;\n   \n   //Create certificates from certificate files.\n   //You must put in a valid path to three certificates in the following constructors.\n   X509Certificate2 ^ certificate1 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate2 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate5 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   \n   //Create a collection and add two of the certificates.\n   X509Certificate2Collection ^ collection = gcnew X509Certificate2Collection;\n   collection-&gt;Add( certificate2 );\n   collection-&gt;Add( certificate5 );\n   \n   //Add certificates to the store.\n   store-&gt;Add( certificate1 );\n   store-&gt;AddRange( collection );\n   X509Certificate2Collection ^ storecollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;Store name: {0}&quot;, store-&gt;Name );\n   Console::WriteLine( &quot;Store location: {0}&quot;, store-&gt;Location );\n   System::Collections::IEnumerator^ myEnum = storecollection-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a certificate.\n   store-&gt;Remove( certificate1 );\n   X509Certificate2Collection ^ storecollection2 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   System::Collections::IEnumerator^ myEnum1 = storecollection2-&gt;GetEnumerator();\n   while ( myEnum1-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum1-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a range of certificates.\n   store-&gt;RemoveRange( collection );\n   X509Certificate2Collection ^ storecollection3 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   if ( storecollection3-&gt;Count == 0 )\n   {\n      Console::WriteLine( &quot;Store contains no certificates.&quot; );\n   }\n   else\n   {\n      System::Collections::IEnumerator^ myEnum2 = storecollection3-&gt;GetEnumerator();\n      while ( myEnum2-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum2-&gt;Current);\n         Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n      }\n   }\n\n   \n   //Close the store.\n   store-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"x509store2#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\nImports System.IO\n\n\n\nClass X509store2\n\n    Shared Sub Main(ByVal args() As String)\n        &#39;Create new X509 store called teststore from the local certificate store.\n        Dim store As New X509Store(&quot;teststore&quot;, StoreLocation.CurrentUser)\n        store.Open(OpenFlags.ReadWrite)\n        Dim certificate As New X509Certificate2()\n\n        &#39;Create certificates from certificate files.\n        &#39;You must put in a valid path to three certificates in the following constructors.\n        Dim certificate1 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate2 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate5 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n\n        &#39;Create a collection and add two of the certificates.\n        Dim collection As New X509Certificate2Collection()\n        collection.Add(certificate2)\n        collection.Add(certificate5)\n\n        &#39;Add certificates to the store.\n        store.Add(certificate1)\n        store.AddRange(collection)\n\n        Dim storecollection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;Store name: {0}&quot;, store.Name)\n        Console.WriteLine(&quot;Store location: {0}&quot;, store.Location)\n        Dim x509 As X509Certificate2\n        For Each x509 In storecollection\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509.Subject)\n        Next x509\n\n        &#39;Remove a certificate.\n        store.Remove(certificate1)\n        Dim storecollection2 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        Dim x509a As X509Certificate2\n        For Each x509a In storecollection2\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509a.Subject)\n        Next x509a\n\n        &#39;Remove a range of certificates.\n        store.RemoveRange(collection)\n        Dim storecollection3 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        If storecollection3.Count = 0 Then\n            Console.WriteLine(&quot;Store contains no certificates.&quot;)\n        Else\n            Dim x509b As X509Certificate2\n            For Each x509b In storecollection3\n                Console.WriteLine(&quot;certificate name: {0}&quot;, x509b.Subject)\n            Next x509b\n        End If\n\n        &#39;Close the store.\n        store.Close()\n\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Store_Dispose\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Store_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases the resources used by this <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a> implements the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface starting with the .NET Framework 4.6; in previous versions of the .NET Framework, the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509store\" data-linktype=\"relative-path\">X509Store</a> class does not implement this interface, and therefore the <code>Dispose</code> method does not exist.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Store_Open_System_Security_Cryptography_X509Certificates_OpenFlags_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Store_Open_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Open(OpenFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Opens an X.509 certificate store or creates a new store, depending on <a class=\"xref\" href=\"system.security.cryptography.x509certificates.openflags\" data-linktype=\"relative-path\">OpenFlags</a> flag settings.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Open (System.Security.Cryptography.X509Certificates.OpenFlags flags);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>flags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.openflags\" data-linktype=\"relative-path\">OpenFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of enumeration values that specifies the way to open the X.509 certificate store.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The store is unreadable.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the required permission.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The store contains invalid values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to open an existing X.509 store. Note that you must have additional permissions, specified by <a class=\"xref\" href=\"system.security.permissions.storepermissionflags\" data-linktype=\"relative-path\">StorePermissionFlags</a>, to enumerate the certificates in the store. You can create a new store by passing a store name that does not exist to the class constructor, and then using any of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.openflags\" data-linktype=\"relative-path\">OpenFlags</a> flags except <a class=\"xref\" href=\"system.security.cryptography.x509certificates.openflags\" data-linktype=\"relative-path\">OpenFlags</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example opens an X.509 certificate store, adds and deletes certificates, and then closes the store. It assumes that you have three certificates to add to and remove from a local store.  </p>\n<pre><code class=\"lang-cs\" name=\"x509store2#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\nusing System.IO;\n\npublic class X509store2\n{\n\tpublic static void Main (string[] args)\n\t{\n\t\t//Create new X509 store called teststore from the local certificate store.\n\t\tX509Store store = new X509Store (&quot;teststore&quot;, StoreLocation.CurrentUser);\n\t\tstore.Open (OpenFlags.ReadWrite);\n\t\tX509Certificate2 certificate = new X509Certificate2 ();\n\n\t\t//Create certificates from certificate files.\n\t\t//You must put in a valid path to three certificates in the following constructors.\n\t\tX509Certificate2 certificate1 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate2 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate5 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\n\t\t//Create a collection and add two of the certificates.\n\t\tX509Certificate2Collection collection = new X509Certificate2Collection ();\n\t\tcollection.Add (certificate2);\n\t\tcollection.Add (certificate5);\n\n\t\t//Add certificates to the store.\n\t\tstore.Add (certificate1);\n\t\tstore.AddRange (collection);\n\n\t\tX509Certificate2Collection storecollection = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;Store name: {0}&quot;, store.Name);\n\t\tConsole.WriteLine (&quot;Store location: {0}&quot;, store.Location);\n\t\tforeach (X509Certificate2 x509 in storecollection)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;certificate name: {0}&quot;,x509.Subject);\n\t\t}\n\n\t\t//Remove a certificate.\n\t\tstore.Remove (certificate1);\n\t\tX509Certificate2Collection storecollection2 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tforeach (X509Certificate2 x509 in storecollection2)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t}\n\n\t\t//Remove a range of certificates.\n\t\tstore.RemoveRange (collection);\n\t\tX509Certificate2Collection storecollection3 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tif (storecollection3.Count == 0)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;Store contains no certificates.&quot;);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tforeach (X509Certificate2 x509 in storecollection3)\n\t\t\t{\n\t\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t\t}\n\t\t}\n\n\t\t//Close the store.\n\t\tstore.Close ();\n\t}\t\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"x509store2#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\nusing namespace System::IO;\nint main()\n{\n   \n   //Create new X509 store called teststore from the local certificate store.\n   X509Store ^ store = gcnew X509Store( &quot;teststore&quot;,StoreLocation::CurrentUser );\n   store-&gt;Open( OpenFlags::ReadWrite );\n   X509Certificate2 ^ certificate = gcnew X509Certificate2;\n   \n   //Create certificates from certificate files.\n   //You must put in a valid path to three certificates in the following constructors.\n   X509Certificate2 ^ certificate1 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate2 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate5 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   \n   //Create a collection and add two of the certificates.\n   X509Certificate2Collection ^ collection = gcnew X509Certificate2Collection;\n   collection-&gt;Add( certificate2 );\n   collection-&gt;Add( certificate5 );\n   \n   //Add certificates to the store.\n   store-&gt;Add( certificate1 );\n   store-&gt;AddRange( collection );\n   X509Certificate2Collection ^ storecollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;Store name: {0}&quot;, store-&gt;Name );\n   Console::WriteLine( &quot;Store location: {0}&quot;, store-&gt;Location );\n   System::Collections::IEnumerator^ myEnum = storecollection-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a certificate.\n   store-&gt;Remove( certificate1 );\n   X509Certificate2Collection ^ storecollection2 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   System::Collections::IEnumerator^ myEnum1 = storecollection2-&gt;GetEnumerator();\n   while ( myEnum1-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum1-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a range of certificates.\n   store-&gt;RemoveRange( collection );\n   X509Certificate2Collection ^ storecollection3 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   if ( storecollection3-&gt;Count == 0 )\n   {\n      Console::WriteLine( &quot;Store contains no certificates.&quot; );\n   }\n   else\n   {\n      System::Collections::IEnumerator^ myEnum2 = storecollection3-&gt;GetEnumerator();\n      while ( myEnum2-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum2-&gt;Current);\n         Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n      }\n   }\n\n   \n   //Close the store.\n   store-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"x509store2#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\nImports System.IO\n\n\n\nClass X509store2\n\n    Shared Sub Main(ByVal args() As String)\n        &#39;Create new X509 store called teststore from the local certificate store.\n        Dim store As New X509Store(&quot;teststore&quot;, StoreLocation.CurrentUser)\n        store.Open(OpenFlags.ReadWrite)\n        Dim certificate As New X509Certificate2()\n\n        &#39;Create certificates from certificate files.\n        &#39;You must put in a valid path to three certificates in the following constructors.\n        Dim certificate1 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate2 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate5 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n\n        &#39;Create a collection and add two of the certificates.\n        Dim collection As New X509Certificate2Collection()\n        collection.Add(certificate2)\n        collection.Add(certificate5)\n\n        &#39;Add certificates to the store.\n        store.Add(certificate1)\n        store.AddRange(collection)\n\n        Dim storecollection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;Store name: {0}&quot;, store.Name)\n        Console.WriteLine(&quot;Store location: {0}&quot;, store.Location)\n        Dim x509 As X509Certificate2\n        For Each x509 In storecollection\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509.Subject)\n        Next x509\n\n        &#39;Remove a certificate.\n        store.Remove(certificate1)\n        Dim storecollection2 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        Dim x509a As X509Certificate2\n        For Each x509a In storecollection2\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509a.Subject)\n        Next x509a\n\n        &#39;Remove a range of certificates.\n        store.RemoveRange(collection)\n        Dim storecollection3 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        If storecollection3.Count = 0 Then\n            Console.WriteLine(&quot;Store contains no certificates.&quot;)\n        Else\n            Dim x509b As X509Certificate2\n            For Each x509b In storecollection3\n                Console.WriteLine(&quot;certificate name: {0}&quot;, x509b.Subject)\n            Next x509b\n        End If\n\n        &#39;Close the store.\n        store.Close()\n\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Store_Remove_System_Security_Cryptography_X509Certificates_X509Certificate2_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Store_Remove_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Remove(X509Certificate2)</div>        \r\n          </div>\r\n    \r\n            <p>Removes a certificate from an X.509 certificate store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Remove (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>certificate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2\" data-linktype=\"relative-path\">X509Certificate2</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The certificate to remove.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>certificate</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the required permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to remove a single certificate from an X.509 store.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example opens an X.509 certificate store, adds and deletes certificates, and then closes the store. It assumes that you have three certificates to add to and remove from a local store.  </p>\n<pre><code class=\"lang-cs\" name=\"x509store2#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\nusing System.IO;\n\npublic class X509store2\n{\n\tpublic static void Main (string[] args)\n\t{\n\t\t//Create new X509 store called teststore from the local certificate store.\n\t\tX509Store store = new X509Store (&quot;teststore&quot;, StoreLocation.CurrentUser);\n\t\tstore.Open (OpenFlags.ReadWrite);\n\t\tX509Certificate2 certificate = new X509Certificate2 ();\n\n\t\t//Create certificates from certificate files.\n\t\t//You must put in a valid path to three certificates in the following constructors.\n\t\tX509Certificate2 certificate1 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate2 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate5 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\n\t\t//Create a collection and add two of the certificates.\n\t\tX509Certificate2Collection collection = new X509Certificate2Collection ();\n\t\tcollection.Add (certificate2);\n\t\tcollection.Add (certificate5);\n\n\t\t//Add certificates to the store.\n\t\tstore.Add (certificate1);\n\t\tstore.AddRange (collection);\n\n\t\tX509Certificate2Collection storecollection = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;Store name: {0}&quot;, store.Name);\n\t\tConsole.WriteLine (&quot;Store location: {0}&quot;, store.Location);\n\t\tforeach (X509Certificate2 x509 in storecollection)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;certificate name: {0}&quot;,x509.Subject);\n\t\t}\n\n\t\t//Remove a certificate.\n\t\tstore.Remove (certificate1);\n\t\tX509Certificate2Collection storecollection2 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tforeach (X509Certificate2 x509 in storecollection2)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t}\n\n\t\t//Remove a range of certificates.\n\t\tstore.RemoveRange (collection);\n\t\tX509Certificate2Collection storecollection3 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tif (storecollection3.Count == 0)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;Store contains no certificates.&quot;);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tforeach (X509Certificate2 x509 in storecollection3)\n\t\t\t{\n\t\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t\t}\n\t\t}\n\n\t\t//Close the store.\n\t\tstore.Close ();\n\t}\t\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"x509store2#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\nusing namespace System::IO;\nint main()\n{\n   \n   //Create new X509 store called teststore from the local certificate store.\n   X509Store ^ store = gcnew X509Store( &quot;teststore&quot;,StoreLocation::CurrentUser );\n   store-&gt;Open( OpenFlags::ReadWrite );\n   X509Certificate2 ^ certificate = gcnew X509Certificate2;\n   \n   //Create certificates from certificate files.\n   //You must put in a valid path to three certificates in the following constructors.\n   X509Certificate2 ^ certificate1 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate2 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate5 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   \n   //Create a collection and add two of the certificates.\n   X509Certificate2Collection ^ collection = gcnew X509Certificate2Collection;\n   collection-&gt;Add( certificate2 );\n   collection-&gt;Add( certificate5 );\n   \n   //Add certificates to the store.\n   store-&gt;Add( certificate1 );\n   store-&gt;AddRange( collection );\n   X509Certificate2Collection ^ storecollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;Store name: {0}&quot;, store-&gt;Name );\n   Console::WriteLine( &quot;Store location: {0}&quot;, store-&gt;Location );\n   System::Collections::IEnumerator^ myEnum = storecollection-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a certificate.\n   store-&gt;Remove( certificate1 );\n   X509Certificate2Collection ^ storecollection2 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   System::Collections::IEnumerator^ myEnum1 = storecollection2-&gt;GetEnumerator();\n   while ( myEnum1-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum1-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a range of certificates.\n   store-&gt;RemoveRange( collection );\n   X509Certificate2Collection ^ storecollection3 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   if ( storecollection3-&gt;Count == 0 )\n   {\n      Console::WriteLine( &quot;Store contains no certificates.&quot; );\n   }\n   else\n   {\n      System::Collections::IEnumerator^ myEnum2 = storecollection3-&gt;GetEnumerator();\n      while ( myEnum2-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum2-&gt;Current);\n         Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n      }\n   }\n\n   \n   //Close the store.\n   store-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"x509store2#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\nImports System.IO\n\n\n\nClass X509store2\n\n    Shared Sub Main(ByVal args() As String)\n        &#39;Create new X509 store called teststore from the local certificate store.\n        Dim store As New X509Store(&quot;teststore&quot;, StoreLocation.CurrentUser)\n        store.Open(OpenFlags.ReadWrite)\n        Dim certificate As New X509Certificate2()\n\n        &#39;Create certificates from certificate files.\n        &#39;You must put in a valid path to three certificates in the following constructors.\n        Dim certificate1 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate2 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate5 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n\n        &#39;Create a collection and add two of the certificates.\n        Dim collection As New X509Certificate2Collection()\n        collection.Add(certificate2)\n        collection.Add(certificate5)\n\n        &#39;Add certificates to the store.\n        store.Add(certificate1)\n        store.AddRange(collection)\n\n        Dim storecollection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;Store name: {0}&quot;, store.Name)\n        Console.WriteLine(&quot;Store location: {0}&quot;, store.Location)\n        Dim x509 As X509Certificate2\n        For Each x509 In storecollection\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509.Subject)\n        Next x509\n\n        &#39;Remove a certificate.\n        store.Remove(certificate1)\n        Dim storecollection2 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        Dim x509a As X509Certificate2\n        For Each x509a In storecollection2\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509a.Subject)\n        Next x509a\n\n        &#39;Remove a range of certificates.\n        store.RemoveRange(collection)\n        Dim storecollection3 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        If storecollection3.Count = 0 Then\n            Console.WriteLine(&quot;Store contains no certificates.&quot;)\n        Else\n            Dim x509b As X509Certificate2\n            For Each x509b In storecollection3\n                Console.WriteLine(&quot;certificate name: {0}&quot;, x509b.Subject)\n            Next x509b\n        End If\n\n        &#39;Close the store.\n        store.Close()\n\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Store_RemoveRange_System_Security_Cryptography_X509Certificates_X509Certificate2Collection_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Store_RemoveRange_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveRange(X509Certificate2Collection)</div>        \r\n          </div>\r\n    \r\n            <p>Removes a range of certificates from an X.509 certificate store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RemoveRange (System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificates);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>certificates</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2collection\" data-linktype=\"relative-path\">X509Certificate2Collection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A range of certificates to remove.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>certificates</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the required permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"IMPORTANT\"><h5>Important</h5><p> This type implements the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method in a <code>try</code>/<code>catch</code> block. To dispose of it indirectly, use a language construct such as <code>using</code> (in C#) or <code>Using</code> (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface topic.  </p>\n</div>\n<p> This method removes more than one certificate from an X.509 certificate store; if one certificate removal fails, the operation is reverted and no certificates are removed.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example opens an X.509 certificate store, adds and deletes certificates, and then closes the store. It assumes that you have three certificates to add to and remove from a local store.  </p>\n<pre><code class=\"lang-cs\" name=\"x509store2#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\nusing System.IO;\n\npublic class X509store2\n{\n\tpublic static void Main (string[] args)\n\t{\n\t\t//Create new X509 store called teststore from the local certificate store.\n\t\tX509Store store = new X509Store (&quot;teststore&quot;, StoreLocation.CurrentUser);\n\t\tstore.Open (OpenFlags.ReadWrite);\n\t\tX509Certificate2 certificate = new X509Certificate2 ();\n\n\t\t//Create certificates from certificate files.\n\t\t//You must put in a valid path to three certificates in the following constructors.\n\t\tX509Certificate2 certificate1 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate2 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\t\tX509Certificate2 certificate5 = new X509Certificate2 (&quot;c:\\\\mycerts\\\\*****.cer&quot;);\n\n\t\t//Create a collection and add two of the certificates.\n\t\tX509Certificate2Collection collection = new X509Certificate2Collection ();\n\t\tcollection.Add (certificate2);\n\t\tcollection.Add (certificate5);\n\n\t\t//Add certificates to the store.\n\t\tstore.Add (certificate1);\n\t\tstore.AddRange (collection);\n\n\t\tX509Certificate2Collection storecollection = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;Store name: {0}&quot;, store.Name);\n\t\tConsole.WriteLine (&quot;Store location: {0}&quot;, store.Location);\n\t\tforeach (X509Certificate2 x509 in storecollection)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;certificate name: {0}&quot;,x509.Subject);\n\t\t}\n\n\t\t//Remove a certificate.\n\t\tstore.Remove (certificate1);\n\t\tX509Certificate2Collection storecollection2 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tforeach (X509Certificate2 x509 in storecollection2)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t}\n\n\t\t//Remove a range of certificates.\n\t\tstore.RemoveRange (collection);\n\t\tX509Certificate2Collection storecollection3 = (X509Certificate2Collection)store.Certificates;\n\t\tConsole.WriteLine (&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine);\n\t\tif (storecollection3.Count == 0)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;Store contains no certificates.&quot;);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tforeach (X509Certificate2 x509 in storecollection3)\n\t\t\t{\n\t\t\t\tConsole.WriteLine (&quot;certificate name: {0}&quot;, x509.Subject);\n\t\t\t}\n\t\t}\n\n\t\t//Close the store.\n\t\tstore.Close ();\n\t}\t\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"x509store2#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\nusing namespace System::IO;\nint main()\n{\n   \n   //Create new X509 store called teststore from the local certificate store.\n   X509Store ^ store = gcnew X509Store( &quot;teststore&quot;,StoreLocation::CurrentUser );\n   store-&gt;Open( OpenFlags::ReadWrite );\n   X509Certificate2 ^ certificate = gcnew X509Certificate2;\n   \n   //Create certificates from certificate files.\n   //You must put in a valid path to three certificates in the following constructors.\n   X509Certificate2 ^ certificate1 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate2 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   X509Certificate2 ^ certificate5 = gcnew X509Certificate2( &quot;c:\\\\mycerts\\\\*****.cer&quot; );\n   \n   //Create a collection and add two of the certificates.\n   X509Certificate2Collection ^ collection = gcnew X509Certificate2Collection;\n   collection-&gt;Add( certificate2 );\n   collection-&gt;Add( certificate5 );\n   \n   //Add certificates to the store.\n   store-&gt;Add( certificate1 );\n   store-&gt;AddRange( collection );\n   X509Certificate2Collection ^ storecollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;Store name: {0}&quot;, store-&gt;Name );\n   Console::WriteLine( &quot;Store location: {0}&quot;, store-&gt;Location );\n   System::Collections::IEnumerator^ myEnum = storecollection-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a certificate.\n   store-&gt;Remove( certificate1 );\n   X509Certificate2Collection ^ storecollection2 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   System::Collections::IEnumerator^ myEnum1 = storecollection2-&gt;GetEnumerator();\n   while ( myEnum1-&gt;MoveNext() )\n   {\n      X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum1-&gt;Current);\n      Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n   }\n\n   \n   //Remove a range of certificates.\n   store-&gt;RemoveRange( collection );\n   X509Certificate2Collection ^ storecollection3 = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n   Console::WriteLine( &quot;{1}Store name: {0}&quot;, store-&gt;Name, Environment::NewLine );\n   if ( storecollection3-&gt;Count == 0 )\n   {\n      Console::WriteLine( &quot;Store contains no certificates.&quot; );\n   }\n   else\n   {\n      System::Collections::IEnumerator^ myEnum2 = storecollection3-&gt;GetEnumerator();\n      while ( myEnum2-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum2-&gt;Current);\n         Console::WriteLine( &quot;certificate name: {0}&quot;, x509-&gt;Subject );\n      }\n   }\n\n   \n   //Close the store.\n   store-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"x509store2#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\nImports System.IO\n\n\n\nClass X509store2\n\n    Shared Sub Main(ByVal args() As String)\n        &#39;Create new X509 store called teststore from the local certificate store.\n        Dim store As New X509Store(&quot;teststore&quot;, StoreLocation.CurrentUser)\n        store.Open(OpenFlags.ReadWrite)\n        Dim certificate As New X509Certificate2()\n\n        &#39;Create certificates from certificate files.\n        &#39;You must put in a valid path to three certificates in the following constructors.\n        Dim certificate1 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate2 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n        Dim certificate5 As New X509Certificate2(&quot;c:\\mycerts\\*****.cer&quot;)\n\n        &#39;Create a collection and add two of the certificates.\n        Dim collection As New X509Certificate2Collection()\n        collection.Add(certificate2)\n        collection.Add(certificate5)\n\n        &#39;Add certificates to the store.\n        store.Add(certificate1)\n        store.AddRange(collection)\n\n        Dim storecollection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;Store name: {0}&quot;, store.Name)\n        Console.WriteLine(&quot;Store location: {0}&quot;, store.Location)\n        Dim x509 As X509Certificate2\n        For Each x509 In storecollection\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509.Subject)\n        Next x509\n\n        &#39;Remove a certificate.\n        store.Remove(certificate1)\n        Dim storecollection2 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        Dim x509a As X509Certificate2\n        For Each x509a In storecollection2\n            Console.WriteLine(&quot;certificate name: {0}&quot;, x509a.Subject)\n        Next x509a\n\n        &#39;Remove a range of certificates.\n        store.RemoveRange(collection)\n        Dim storecollection3 As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Console.WriteLine(&quot;{1}Store name: {0}&quot;, store.Name, Environment.NewLine)\n        If storecollection3.Count = 0 Then\n            Console.WriteLine(&quot;Store contains no certificates.&quot;)\n        Else\n            Dim x509b As X509Certificate2\n            For Each x509b In storecollection3\n                Console.WriteLine(&quot;certificate name: {0}&quot;, x509b.Subject)\n            Next x509b\n        End If\n\n        &#39;Close the store.\n        store.Close()\n\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.X509Certificates.X509Store.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.X509Certificates.X509Store.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Store\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Store..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Store.Add\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Store.AddRange\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Store.Certificates\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Store.Close\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Store.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Store.Location\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Store.Name\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Store.Open\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Store.Remove\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Store.RemoveRange\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Store.StoreHandle\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"8131d923-5ae3-000c-66bf-ae1446797e8c\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents an X.509 store, which is a physical store where certificates are persisted and managed. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Cryptography.X509Certificates/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.X509Certificates.X509Store\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.X509Certificates.X509Store.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.X509Certificates.X509Store.yml","open_to_public_contributors":true,"api_name":["System.Security.Cryptography.X509Certificates.X509Store","System.Security.Cryptography.X509Certificates.X509Store..ctor","System.Security.Cryptography.X509Certificates.X509Store.Add","System.Security.Cryptography.X509Certificates.X509Store.AddRange","System.Security.Cryptography.X509Certificates.X509Store.Certificates","System.Security.Cryptography.X509Certificates.X509Store.Close","System.Security.Cryptography.X509Certificates.X509Store.Dispose","System.Security.Cryptography.X509Certificates.X509Store.Location","System.Security.Cryptography.X509Certificates.X509Store.Name","System.Security.Cryptography.X509Certificates.X509Store.Open","System.Security.Cryptography.X509Certificates.X509Store.Remove","System.Security.Cryptography.X509Certificates.X509Store.RemoveRange","System.Security.Cryptography.X509Certificates.X509Store.StoreHandle"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.X509Certificates.X509Store","System::Security::Cryptography::X509Certificates::X509Store","System.Security.Cryptography.X509Certificates.X509Store.#ctor","System::Security::Cryptography::X509Certificates::X509Store::#ctor","System.Security.Cryptography.X509Certificates.X509Store.Add","System::Security::Cryptography::X509Certificates::X509Store::Add","System.Security.Cryptography.X509Certificates.X509Store.AddRange","System::Security::Cryptography::X509Certificates::X509Store::AddRange","System.Security.Cryptography.X509Certificates.X509Store.Certificates","System::Security::Cryptography::X509Certificates::X509Store::Certificates","System.Security.Cryptography.X509Certificates.X509Store.Close","System::Security::Cryptography::X509Certificates::X509Store::Close","System.Security.Cryptography.X509Certificates.X509Store.Dispose","System::Security::Cryptography::X509Certificates::X509Store::Dispose","System.Security.Cryptography.X509Certificates.X509Store.Location","System::Security::Cryptography::X509Certificates::X509Store::Location","System.Security.Cryptography.X509Certificates.X509Store.Name","System::Security::Cryptography::X509Certificates::X509Store::Name","System.Security.Cryptography.X509Certificates.X509Store.Open","System::Security::Cryptography::X509Certificates::X509Store::Open","System.Security.Cryptography.X509Certificates.X509Store.Remove","System::Security::Cryptography::X509Certificates::X509Store::Remove","System.Security.Cryptography.X509Certificates.X509Store.RemoveRange","System::Security::Cryptography::X509Certificates::X509Store::RemoveRange","System.Security.Cryptography.X509Certificates.X509Store.StoreHandle","System::Security::Cryptography::X509Certificates::X509Store::StoreHandle"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"8131d923-5ae3-000c-66bf-ae1446797e8c","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Cryptography.X509Certificates/X509Store.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"X509Store class | Microsoft Docs","_op_ogTitle":"X509Store class","description":"Represents an X.509 store, which is a physical store where certificates are persisted and managed. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Security.Cryptography.X509Certificates/toc.json","toc_rel":"_splitted/System.Security.Cryptography.X509Certificates/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.X509Certificates.X509Store","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.x509certificates.x509store","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.x509certificates.x509store","fileRelativePath":"System.Security.Cryptography.X509Certificates.X509Store.html"},"themesRelativePathToOutputRoot":"_themes/"}