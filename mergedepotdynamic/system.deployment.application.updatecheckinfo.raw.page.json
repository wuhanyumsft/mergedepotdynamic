{"content":"    \r\n    <h1 id=\"System_Deployment_Application_UpdateCheckInfo\">\r\n      <span class=\"lang-csharp\">UpdateCheckInfo</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents detailed update information obtained through a call to <span class=\"xref\">stem.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate*</span>.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class UpdateCheckInfo</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">UpdateCheckInfo</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>With UpdateCheckInfo, you can decide whether to upgrade your ClickOnce application based on information about the newest version. <a class=\"xref\" href=\"system.deployment.application.updatecheckinfo#System_Deployment_Application_UpdateCheckInfo_UpdateAvailable_\" data-linktype=\"relative-path\">UpdateAvailable</a> will return a Boolean value indicating whether there is a new update at all. The <a class=\"xref\" href=\"system.deployment.application.updatecheckinfo#System_Deployment_Application_UpdateCheckInfo_AvailableVersion_\" data-linktype=\"relative-path\">AvailableVersion</a> property provides the version number of the new version, while <a class=\"xref\" href=\"system.deployment.application.updatecheckinfo#System_Deployment_Application_UpdateCheckInfo_MinimumRequiredVersion_\" data-linktype=\"relative-path\">MinimumRequiredVersion</a> provides the earliest version that the user should have installed. <a class=\"xref\" href=\"system.deployment.application.updatecheckinfo#System_Deployment_Application_UpdateCheckInfo_IsUpdateRequired_\" data-linktype=\"relative-path\">IsUpdateRequired</a> expresses whether the latest available update is required of the user. Finally, <a class=\"xref\" href=\"system.deployment.application.updatecheckinfo#System_Deployment_Application_UpdateCheckInfo_UpdateSizeBytes_\" data-linktype=\"relative-path\">UpdateSizeBytes</a> expresses the total size of the update.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Visual Studio adds the <code>&lt;deploymentProvider&gt;</code> element to the manifest only if the application is set to check for updates, so you either have to check <strong>The application should check for updates</strong> or specify an update URL in <strong>Update location</strong> in the <a href=\"http://msdn.microsoft.com/en-us/8eca8743-8e68-4d04-bfd5-4dc0a9b2934f\" data-linktype=\"external\">Application Updates Dialog Box</a>.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Deployment_Application_UpdateCheckInfo_AvailableVersion\" data-linktype=\"self-bookmark\">AvailableVersion</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the version number of the latest uninstalled version.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Deployment_Application_UpdateCheckInfo_IsUpdateRequired\" data-linktype=\"self-bookmark\">IsUpdateRequired</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the update must be installed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Deployment_Application_UpdateCheckInfo_MinimumRequiredVersion\" data-linktype=\"self-bookmark\">MinimumRequiredVersion</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the minimum version that the user must have installed on the computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Deployment_Application_UpdateCheckInfo_UpdateAvailable\" data-linktype=\"self-bookmark\">UpdateAvailable</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets whether an uninstalled update is available.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Deployment_Application_UpdateCheckInfo_UpdateSizeBytes\" data-linktype=\"self-bookmark\">UpdateSizeBytes</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the size of the available update.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Deployment_Application_UpdateCheckInfo_AvailableVersion\">\r\n    \r\n            <a id=\"System_Deployment_Application_UpdateCheckInfo_AvailableVersion_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AvailableVersion</div>        \r\n          </div>\r\n    \r\n            <p>Gets the version number of the latest uninstalled version.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Version AvailableVersion { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.version\" data-linktype=\"relative-path\">Version</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.version\" data-linktype=\"relative-path\">Version</a> expressing the major and minor build and revision numbers of the latest version.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use AvailableVersion to decide whether to install the update based on the severity of the update. For example, if only the <a class=\"xref\" href=\"system.version#System_Version_Build_\" data-linktype=\"relative-path\">Build</a> or <a class=\"xref\" href=\"system.version#System_Version_Revision_\" data-linktype=\"relative-path\">Revision</a> version properties have changed, your application may not need to update until either the <a class=\"xref\" href=\"system.version#System_Version_Minor_\" data-linktype=\"relative-path\">Minor</a> or <a class=\"xref\" href=\"system.version#System_Version_Major_\" data-linktype=\"relative-path\">Major</a> properties change.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Deployment_Application_UpdateCheckInfo_IsUpdateRequired\">\r\n    \r\n            <a id=\"System_Deployment_Application_UpdateCheckInfo_IsUpdateRequired_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsUpdateRequired</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the update must be installed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsUpdateRequired { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the update is required; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you deploy an update to your ClickOnce application, you can mark it as a required update, signaling to your application that it should upgrade immediately. You want to mark the application if the latest version contains a critical update, or if it is incompatible with file formats or back-end data sources used by the former version.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses IsUpdateRequired to determine whether to ask the user to install the update, or to install it without prompting.  </p>\n<pre><code class=\"lang-cs\" name=\"ClickOnceAPI#6\">private void InstallUpdateSyncWithInfo()\n{\n    UpdateCheckInfo info = null;\n\n    if (ApplicationDeployment.IsNetworkDeployed)\n    {\n        ApplicationDeployment ad = ApplicationDeployment.CurrentDeployment;\n\n        try\n        {\n            info = ad.CheckForDetailedUpdate();\n\n        }\n        catch (DeploymentDownloadException dde)\n        {\n            MessageBox.Show(&quot;The new version of the application cannot be downloaded at this time. <br><br>Please check your network connection, or try again later. Error: &quot; + dde.Message);\n            return;\n        }\n        catch (InvalidDeploymentException ide)\n        {\n            MessageBox.Show(&quot;Cannot check for a new version of the application. The ClickOnce deployment is corrupt. Please redeploy the application and try again. Error: &quot; + ide.Message);\n            return;\n        }\n        catch (InvalidOperationException ioe)\n        {\n            MessageBox.Show(&quot;This application cannot be updated. It is likely not a ClickOnce application. Error: &quot; + ioe.Message);\n            return;\n        }\n\n        if (info.UpdateAvailable)\n        {\n            Boolean doUpdate = true;\n\n            if (!info.IsUpdateRequired)\n            {\n                DialogResult dr = MessageBox.Show(&quot;An update is available. Would you like to update the application now?&quot;, &quot;Update Available&quot;, MessageBoxButtons.OKCancel);\n                if (!(DialogResult.OK == dr))\n                {\n                    doUpdate = false;\n                }\n            }\n            else\n            {\n                // Display a message that the app MUST reboot. Display the minimum required version.\n                MessageBox.Show(&quot;This application has detected a mandatory update from your current &quot; + \n                    &quot;version to version &quot; + info.MinimumRequiredVersion.ToString() + \n                    &quot;. The application will now install the update and restart.&quot;, \n                    &quot;Update Available&quot;, MessageBoxButtons.OK, \n                    MessageBoxIcon.Information);\n            }\n\n            if (doUpdate)\n            {\n                try\n                {\n                    ad.Update();\n                    MessageBox.Show(&quot;The application has been upgraded, and will now restart.&quot;);\n                    Application.Restart();\n                }\n                catch (DeploymentDownloadException dde)\n                {\n                    MessageBox.Show(&quot;Cannot install the latest version of the application. <br><br>Please check your network connection, or try again later. Error: &quot; + dde);\n                    return;\n                }\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"ClickOnceAPI#6\">    public:\n        void InstallUpdateSync()\n        {\n            if (ApplicationDeployment::IsNetworkDeployed)\n            {\n                bool isUpdateAvailable = false;\n                ApplicationDeployment^ appDeployment =\n                    ApplicationDeployment::CurrentDeployment;\n\n                try\n                {\n                    isUpdateAvailable = appDeployment-&gt;CheckForUpdate();\n                }\n                catch (InvalidOperationException^ ex)\n                {\n                    MessageBox::Show(&quot;The update check failed. Error: {0}&quot;,\n                        ex-&gt;Message);\n                    return;\n                }\n\n                if (isUpdateAvailable)\n                {\n                    try\n                    {\n                        appDeployment-&gt;Update();\n                        MessageBox::Show(\n                            &quot;The application has been upgraded, and will now &quot; +\n                            &quot;restart.&quot;);\n                        Application::Restart();\n                    }\n                    catch (Exception^ ex)\n                    {\n                        MessageBox::Show(&quot;The update failed. Error: {0}&quot;,\n                            ex-&gt;Message);\n                        return;\n                    }\n\n                }\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"ClickOnceAPI#6\">Private Sub InstallUpdateSyncWithInfo()\n    Dim info As UpdateCheckInfo = Nothing\n\n    If (ApplicationDeployment.IsNetworkDeployed) Then\n        Dim AD As ApplicationDeployment = ApplicationDeployment.CurrentDeployment\n\n        Try\n            info = AD.CheckForDetailedUpdate()\n        Catch dde As DeploymentDownloadException\n            MessageBox.Show(&quot;The new version of the application cannot be downloaded at this time. &quot; + ControlChars.Lf &amp; ControlChars.Lf &amp; &quot;Please check your network connection, or try again later. Error: &quot; + dde.Message)\n            Return\n        Catch ioe As InvalidOperationException\n            MessageBox.Show(&quot;This application cannot be updated. It is likely not a ClickOnce application. Error: &quot; &amp; ioe.Message)\n            Return\n        End Try\n\n        If (info.UpdateAvailable) Then\n            Dim doUpdate As Boolean = True\n\n            If (Not info.IsUpdateRequired) Then\n                Dim dr As DialogResult = MessageBox.Show(&quot;An update is available. Would you like to update the application now?&quot;, &quot;Update Available&quot;, MessageBoxButtons.OKCancel)\n                If (Not System.Windows.Forms.DialogResult.OK = dr) Then\n                    doUpdate = False\n                End If\n            Else\n                &#39; Display a message that the app MUST reboot. Display the minimum required version.\n                MessageBox.Show(&quot;This application has detected a mandatory update from your current &quot; &amp; _\n                    &quot;version to version &quot; &amp; info.MinimumRequiredVersion.ToString() &amp; _\n                    &quot;. The application will now install the update and restart.&quot;, _\n                    &quot;Update Available&quot;, MessageBoxButtons.OK, _\n                    MessageBoxIcon.Information)\n            End If\n\n            If (doUpdate) Then\n                Try\n                    AD.Update()\n                    MessageBox.Show(&quot;The application has been upgraded, and will now restart.&quot;)\n                    Application.Restart()\n                Catch dde As DeploymentDownloadException\n                    MessageBox.Show(&quot;Cannot install the latest version of the application. &quot; &amp; ControlChars.Lf &amp; ControlChars.Lf &amp; &quot;Please check your network connection, or try again later.&quot;)\n                    Return\n                End Try\n            End If\n        End If\n        End If\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Deployment_Application_UpdateCheckInfo_MinimumRequiredVersion\">\r\n    \r\n            <a id=\"System_Deployment_Application_UpdateCheckInfo_MinimumRequiredVersion_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MinimumRequiredVersion</div>        \r\n          </div>\r\n    \r\n            <p>Gets the minimum version that the user must have installed on the computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Version MinimumRequiredVersion { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.version\" data-linktype=\"relative-path\">Version</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.version\" data-linktype=\"relative-path\">Version</a> expressing the least version that the user must install.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>There is no new version available to install.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Applications can miss required updates when the user takes on a special assignment or is away from the computer for weeks or months. Use  </p>\n<p> MinimumRequiredVersion to determine if the user has not upgraded the application in a while, and has missed one or more required updates.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates displaying the MinimumRequiredVersion property to the user when there is a required update available.  </p>\n<pre><code class=\"lang-cs\" name=\"ClickOnceAPI#6\">private void InstallUpdateSyncWithInfo()\n{\n    UpdateCheckInfo info = null;\n\n    if (ApplicationDeployment.IsNetworkDeployed)\n    {\n        ApplicationDeployment ad = ApplicationDeployment.CurrentDeployment;\n\n        try\n        {\n            info = ad.CheckForDetailedUpdate();\n\n        }\n        catch (DeploymentDownloadException dde)\n        {\n            MessageBox.Show(&quot;The new version of the application cannot be downloaded at this time. <br><br>Please check your network connection, or try again later. Error: &quot; + dde.Message);\n            return;\n        }\n        catch (InvalidDeploymentException ide)\n        {\n            MessageBox.Show(&quot;Cannot check for a new version of the application. The ClickOnce deployment is corrupt. Please redeploy the application and try again. Error: &quot; + ide.Message);\n            return;\n        }\n        catch (InvalidOperationException ioe)\n        {\n            MessageBox.Show(&quot;This application cannot be updated. It is likely not a ClickOnce application. Error: &quot; + ioe.Message);\n            return;\n        }\n\n        if (info.UpdateAvailable)\n        {\n            Boolean doUpdate = true;\n\n            if (!info.IsUpdateRequired)\n            {\n                DialogResult dr = MessageBox.Show(&quot;An update is available. Would you like to update the application now?&quot;, &quot;Update Available&quot;, MessageBoxButtons.OKCancel);\n                if (!(DialogResult.OK == dr))\n                {\n                    doUpdate = false;\n                }\n            }\n            else\n            {\n                // Display a message that the app MUST reboot. Display the minimum required version.\n                MessageBox.Show(&quot;This application has detected a mandatory update from your current &quot; + \n                    &quot;version to version &quot; + info.MinimumRequiredVersion.ToString() + \n                    &quot;. The application will now install the update and restart.&quot;, \n                    &quot;Update Available&quot;, MessageBoxButtons.OK, \n                    MessageBoxIcon.Information);\n            }\n\n            if (doUpdate)\n            {\n                try\n                {\n                    ad.Update();\n                    MessageBox.Show(&quot;The application has been upgraded, and will now restart.&quot;);\n                    Application.Restart();\n                }\n                catch (DeploymentDownloadException dde)\n                {\n                    MessageBox.Show(&quot;Cannot install the latest version of the application. <br><br>Please check your network connection, or try again later. Error: &quot; + dde);\n                    return;\n                }\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"ClickOnceAPI#6\">    public:\n        void InstallUpdateSync()\n        {\n            if (ApplicationDeployment::IsNetworkDeployed)\n            {\n                bool isUpdateAvailable = false;\n                ApplicationDeployment^ appDeployment =\n                    ApplicationDeployment::CurrentDeployment;\n\n                try\n                {\n                    isUpdateAvailable = appDeployment-&gt;CheckForUpdate();\n                }\n                catch (InvalidOperationException^ ex)\n                {\n                    MessageBox::Show(&quot;The update check failed. Error: {0}&quot;,\n                        ex-&gt;Message);\n                    return;\n                }\n\n                if (isUpdateAvailable)\n                {\n                    try\n                    {\n                        appDeployment-&gt;Update();\n                        MessageBox::Show(\n                            &quot;The application has been upgraded, and will now &quot; +\n                            &quot;restart.&quot;);\n                        Application::Restart();\n                    }\n                    catch (Exception^ ex)\n                    {\n                        MessageBox::Show(&quot;The update failed. Error: {0}&quot;,\n                            ex-&gt;Message);\n                        return;\n                    }\n\n                }\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"ClickOnceAPI#6\">Private Sub InstallUpdateSyncWithInfo()\n    Dim info As UpdateCheckInfo = Nothing\n\n    If (ApplicationDeployment.IsNetworkDeployed) Then\n        Dim AD As ApplicationDeployment = ApplicationDeployment.CurrentDeployment\n\n        Try\n            info = AD.CheckForDetailedUpdate()\n        Catch dde As DeploymentDownloadException\n            MessageBox.Show(&quot;The new version of the application cannot be downloaded at this time. &quot; + ControlChars.Lf &amp; ControlChars.Lf &amp; &quot;Please check your network connection, or try again later. Error: &quot; + dde.Message)\n            Return\n        Catch ioe As InvalidOperationException\n            MessageBox.Show(&quot;This application cannot be updated. It is likely not a ClickOnce application. Error: &quot; &amp; ioe.Message)\n            Return\n        End Try\n\n        If (info.UpdateAvailable) Then\n            Dim doUpdate As Boolean = True\n\n            If (Not info.IsUpdateRequired) Then\n                Dim dr As DialogResult = MessageBox.Show(&quot;An update is available. Would you like to update the application now?&quot;, &quot;Update Available&quot;, MessageBoxButtons.OKCancel)\n                If (Not System.Windows.Forms.DialogResult.OK = dr) Then\n                    doUpdate = False\n                End If\n            Else\n                &#39; Display a message that the app MUST reboot. Display the minimum required version.\n                MessageBox.Show(&quot;This application has detected a mandatory update from your current &quot; &amp; _\n                    &quot;version to version &quot; &amp; info.MinimumRequiredVersion.ToString() &amp; _\n                    &quot;. The application will now install the update and restart.&quot;, _\n                    &quot;Update Available&quot;, MessageBoxButtons.OK, _\n                    MessageBoxIcon.Information)\n            End If\n\n            If (doUpdate) Then\n                Try\n                    AD.Update()\n                    MessageBox.Show(&quot;The application has been upgraded, and will now restart.&quot;)\n                    Application.Restart()\n                Catch dde As DeploymentDownloadException\n                    MessageBox.Show(&quot;Cannot install the latest version of the application. &quot; &amp; ControlChars.Lf &amp; ControlChars.Lf &amp; &quot;Please check your network connection, or try again later.&quot;)\n                    Return\n                End Try\n            End If\n        End If\n        End If\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Deployment_Application_UpdateCheckInfo_UpdateAvailable\">\r\n    \r\n            <a id=\"System_Deployment_Application_UpdateCheckInfo_UpdateAvailable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UpdateAvailable</div>        \r\n          </div>\r\n    \r\n            <p>Gets whether an uninstalled update is available.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool UpdateAvailable { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if new version of the application is available; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example inspects UpdateAvailable to determine whether there is an update to install.  </p>\n<pre><code class=\"lang-cs\" name=\"ClickOnceAPI#6\">private void InstallUpdateSyncWithInfo()\n{\n    UpdateCheckInfo info = null;\n\n    if (ApplicationDeployment.IsNetworkDeployed)\n    {\n        ApplicationDeployment ad = ApplicationDeployment.CurrentDeployment;\n\n        try\n        {\n            info = ad.CheckForDetailedUpdate();\n\n        }\n        catch (DeploymentDownloadException dde)\n        {\n            MessageBox.Show(&quot;The new version of the application cannot be downloaded at this time. <br><br>Please check your network connection, or try again later. Error: &quot; + dde.Message);\n            return;\n        }\n        catch (InvalidDeploymentException ide)\n        {\n            MessageBox.Show(&quot;Cannot check for a new version of the application. The ClickOnce deployment is corrupt. Please redeploy the application and try again. Error: &quot; + ide.Message);\n            return;\n        }\n        catch (InvalidOperationException ioe)\n        {\n            MessageBox.Show(&quot;This application cannot be updated. It is likely not a ClickOnce application. Error: &quot; + ioe.Message);\n            return;\n        }\n\n        if (info.UpdateAvailable)\n        {\n            Boolean doUpdate = true;\n\n            if (!info.IsUpdateRequired)\n            {\n                DialogResult dr = MessageBox.Show(&quot;An update is available. Would you like to update the application now?&quot;, &quot;Update Available&quot;, MessageBoxButtons.OKCancel);\n                if (!(DialogResult.OK == dr))\n                {\n                    doUpdate = false;\n                }\n            }\n            else\n            {\n                // Display a message that the app MUST reboot. Display the minimum required version.\n                MessageBox.Show(&quot;This application has detected a mandatory update from your current &quot; + \n                    &quot;version to version &quot; + info.MinimumRequiredVersion.ToString() + \n                    &quot;. The application will now install the update and restart.&quot;, \n                    &quot;Update Available&quot;, MessageBoxButtons.OK, \n                    MessageBoxIcon.Information);\n            }\n\n            if (doUpdate)\n            {\n                try\n                {\n                    ad.Update();\n                    MessageBox.Show(&quot;The application has been upgraded, and will now restart.&quot;);\n                    Application.Restart();\n                }\n                catch (DeploymentDownloadException dde)\n                {\n                    MessageBox.Show(&quot;Cannot install the latest version of the application. <br><br>Please check your network connection, or try again later. Error: &quot; + dde);\n                    return;\n                }\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"ClickOnceAPI#6\">    public:\n        void InstallUpdateSync()\n        {\n            if (ApplicationDeployment::IsNetworkDeployed)\n            {\n                bool isUpdateAvailable = false;\n                ApplicationDeployment^ appDeployment =\n                    ApplicationDeployment::CurrentDeployment;\n\n                try\n                {\n                    isUpdateAvailable = appDeployment-&gt;CheckForUpdate();\n                }\n                catch (InvalidOperationException^ ex)\n                {\n                    MessageBox::Show(&quot;The update check failed. Error: {0}&quot;,\n                        ex-&gt;Message);\n                    return;\n                }\n\n                if (isUpdateAvailable)\n                {\n                    try\n                    {\n                        appDeployment-&gt;Update();\n                        MessageBox::Show(\n                            &quot;The application has been upgraded, and will now &quot; +\n                            &quot;restart.&quot;);\n                        Application::Restart();\n                    }\n                    catch (Exception^ ex)\n                    {\n                        MessageBox::Show(&quot;The update failed. Error: {0}&quot;,\n                            ex-&gt;Message);\n                        return;\n                    }\n\n                }\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"ClickOnceAPI#6\">Private Sub InstallUpdateSyncWithInfo()\n    Dim info As UpdateCheckInfo = Nothing\n\n    If (ApplicationDeployment.IsNetworkDeployed) Then\n        Dim AD As ApplicationDeployment = ApplicationDeployment.CurrentDeployment\n\n        Try\n            info = AD.CheckForDetailedUpdate()\n        Catch dde As DeploymentDownloadException\n            MessageBox.Show(&quot;The new version of the application cannot be downloaded at this time. &quot; + ControlChars.Lf &amp; ControlChars.Lf &amp; &quot;Please check your network connection, or try again later. Error: &quot; + dde.Message)\n            Return\n        Catch ioe As InvalidOperationException\n            MessageBox.Show(&quot;This application cannot be updated. It is likely not a ClickOnce application. Error: &quot; &amp; ioe.Message)\n            Return\n        End Try\n\n        If (info.UpdateAvailable) Then\n            Dim doUpdate As Boolean = True\n\n            If (Not info.IsUpdateRequired) Then\n                Dim dr As DialogResult = MessageBox.Show(&quot;An update is available. Would you like to update the application now?&quot;, &quot;Update Available&quot;, MessageBoxButtons.OKCancel)\n                If (Not System.Windows.Forms.DialogResult.OK = dr) Then\n                    doUpdate = False\n                End If\n            Else\n                &#39; Display a message that the app MUST reboot. Display the minimum required version.\n                MessageBox.Show(&quot;This application has detected a mandatory update from your current &quot; &amp; _\n                    &quot;version to version &quot; &amp; info.MinimumRequiredVersion.ToString() &amp; _\n                    &quot;. The application will now install the update and restart.&quot;, _\n                    &quot;Update Available&quot;, MessageBoxButtons.OK, _\n                    MessageBoxIcon.Information)\n            End If\n\n            If (doUpdate) Then\n                Try\n                    AD.Update()\n                    MessageBox.Show(&quot;The application has been upgraded, and will now restart.&quot;)\n                    Application.Restart()\n                Catch dde As DeploymentDownloadException\n                    MessageBox.Show(&quot;Cannot install the latest version of the application. &quot; &amp; ControlChars.Lf &amp; ControlChars.Lf &amp; &quot;Please check your network connection, or try again later.&quot;)\n                    Return\n                End Try\n            End If\n        End If\n        End If\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Deployment_Application_UpdateCheckInfo_UpdateSizeBytes\">\r\n    \r\n            <a id=\"System_Deployment_Application_UpdateCheckInfo_UpdateSizeBytes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UpdateSizeBytes</div>        \r\n          </div>\r\n    \r\n            <p>Gets the size of the available update.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public long UpdateSizeBytes { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> describing the size, in bytes, of the available update. If no update is available, returns 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Deployment.Application.UpdateCheckInfo.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Deployment.Application.UpdateCheckInfo.yml\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.UpdateCheckInfo\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.UpdateCheckInfo.AvailableVersion\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.UpdateCheckInfo.UpdateAvailable\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes\">\r\n<meta name=\"APILocation\" content=\"System.Deployment.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"e5521fff-5bcc-d382-6fed-1bfb8e9a8086\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents detailed update information obtained through a call to .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Deployment.Application/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Deployment.Application.UpdateCheckInfo\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Deployment.Application.UpdateCheckInfo.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Deployment.Application.UpdateCheckInfo.yml","open_to_public_contributors":true,"api_name":["System.Deployment.Application.UpdateCheckInfo","System.Deployment.Application.UpdateCheckInfo.AvailableVersion","System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired","System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion","System.Deployment.Application.UpdateCheckInfo.UpdateAvailable","System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes"],"api_location":["System.Deployment.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Deployment.Application.UpdateCheckInfo","System::Deployment::Application::UpdateCheckInfo","System.Deployment.Application.UpdateCheckInfo.AvailableVersion","System::Deployment::Application::UpdateCheckInfo::AvailableVersion","System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired","System::Deployment::Application::UpdateCheckInfo::IsUpdateRequired","System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion","System::Deployment::Application::UpdateCheckInfo::MinimumRequiredVersion","System.Deployment.Application.UpdateCheckInfo.UpdateAvailable","System::Deployment::Application::UpdateCheckInfo::UpdateAvailable","System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes","System::Deployment::Application::UpdateCheckInfo::UpdateSizeBytes"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"e5521fff-5bcc-d382-6fed-1bfb8e9a8086","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Deployment.Application/UpdateCheckInfo.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"UpdateCheckInfo class | Microsoft Docs","_op_ogTitle":"UpdateCheckInfo class","description":"Represents detailed update information obtained through a call to .\n","toc_asset_id":"_splitted/System.Deployment.Application/toc.json","toc_rel":"_splitted/System.Deployment.Application/toc.json","source_url":"","ms.assetid":"System.Deployment.Application.UpdateCheckInfo","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.deployment.application.updatecheckinfo","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.deployment.application.updatecheckinfo","fileRelativePath":"System.Deployment.Application.UpdateCheckInfo.html"},"themesRelativePathToOutputRoot":"_themes/"}