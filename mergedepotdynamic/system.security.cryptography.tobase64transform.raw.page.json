{"content":"    \r\n    <h1 id=\"System_Security_Cryptography_ToBase64Transform\">\r\n      <span class=\"lang-csharp\">ToBase64Transform</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Converts a <a class=\"xref\" href=\"system.security.cryptography.cryptostream\" data-linktype=\"relative-path\">CryptoStream</a> to base 64.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class ToBase64Transform : System.Security.Cryptography.ICryptoTransform</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ToBase64Transform</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Base 64 Content-Transfer-Encoding represents arbitrary bit sequences in a form that is not human readable.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_ToBase64Transform__ctor\" data-linktype=\"self-bookmark\">ToBase64Transform()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_ToBase64Transform_CanReuseTransform\" data-linktype=\"self-bookmark\">CanReuseTransform</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the current transform can be reused.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_ToBase64Transform_CanTransformMultipleBlocks\" data-linktype=\"self-bookmark\">CanTransformMultipleBlocks</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether multiple blocks can be transformed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_ToBase64Transform_InputBlockSize\" data-linktype=\"self-bookmark\">InputBlockSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the input block size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_ToBase64Transform_OutputBlockSize\" data-linktype=\"self-bookmark\">OutputBlockSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the output block size.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_ToBase64Transform_Clear\" data-linktype=\"self-bookmark\">Clear()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by the <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_ToBase64Transform_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by the current instance of the <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_ToBase64Transform_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a> and optionally releases the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_ToBase64Transform_Finalize\" data-linktype=\"self-bookmark\">Finalize()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_ToBase64Transform_TransformBlock_System_Byte___System_Int32_System_Int32_System_Byte___System_Int32_\" data-linktype=\"self-bookmark\">TransformBlock(Byte[],Int32,Int32,Byte[],Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the specified region of the input byte array to base 64 and copies the result to the specified region of the output byte array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_ToBase64Transform_TransformFinalBlock_System_Byte___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">TransformFinalBlock(Byte[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the specified region of the specified byte array to base 64.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_ToBase64Transform__ctor\">\r\n    \r\n            <a id=\"System_Security_Cryptography_ToBase64Transform__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToBase64Transform()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ToBase64Transform ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_ToBase64Transform_CanReuseTransform\">\r\n    \r\n            <a id=\"System_Security_Cryptography_ToBase64Transform_CanReuseTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanReuseTransform</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the current transform can be reused.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool CanReuseTransform { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Always <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call the CanReuseTransform property to determine if the current transform can be reused. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Cryptography.ToBase64Transform#3\">        if (! base64Transform.CanReuseTransform)\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Cryptography.ToBase64Transform#3\">        If (Not base64Transform.CanReuseTransform) Then\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Cryptography.ToBase64Transform#3\">      if (  !base64Transform-&gt;CanReuseTransform )\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_ToBase64Transform_CanTransformMultipleBlocks\">\r\n    \r\n            <a id=\"System_Security_Cryptography_ToBase64Transform_CanTransformMultipleBlocks_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanTransformMultipleBlocks</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether multiple blocks can be transformed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CanTransformMultipleBlocks { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Always <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In the current implementation, only one block can be transformed at a time, so this property is always <code>false</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call the CanTransformMultipleBlocks method to verify that multiple blocks can be transformed. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Cryptography.ToBase64Transform#4\">        if (!base64Transform.CanTransformMultipleBlocks)\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Cryptography.ToBase64Transform#4\">        If (Not base64Transform.CanTransformMultipleBlocks) Then\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Cryptography.ToBase64Transform#4\">      if (  !base64Transform-&gt;CanTransformMultipleBlocks )\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_ToBase64Transform_InputBlockSize\">\r\n    \r\n            <a id=\"System_Security_Cryptography_ToBase64Transform_InputBlockSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InputBlockSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets the input block size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int InputBlockSize { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The size of the input data blocks in bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The input block size for this transformation is 3 bytes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call the InputBlockSize property to retrieve the input block size of the current transform. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Cryptography.ToBase64Transform#5\">            int inputBlockSize = base64Transform.InputBlockSize;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Cryptography.ToBase64Transform#5\">            Dim inputBlockSize As Integer = base64Transform.InputBlockSize\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Cryptography.ToBase64Transform#5\">         int inputBlockSize = base64Transform-&gt;InputBlockSize;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_ToBase64Transform_OutputBlockSize\">\r\n    \r\n            <a id=\"System_Security_Cryptography_ToBase64Transform_OutputBlockSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OutputBlockSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets the output block size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int OutputBlockSize { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The size of the output data blocks in bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The output block size for this transformation is 4 bytes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call the OutputBlockSize property to create a new byte array with the size of the output block size. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Cryptography.ToBase64Transform#6\">        byte[] outputBytes = new byte[base64Transform.OutputBlockSize];\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Cryptography.ToBase64Transform#6\">        Dim outputBytes(base64Transform.OutputBlockSize) As Byte\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Cryptography.ToBase64Transform#6\">      array&lt;Byte&gt;^outputBytes = gcnew array&lt;Byte&gt;(\n         base64Transform-&gt;OutputBlockSize);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_ToBase64Transform_Clear\">\r\n    \r\n            <a id=\"System_Security_Cryptography_ToBase64Transform_Clear_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clear()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by the <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Clear ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is a simple call to <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a>.  </p>\n<p> Calling <code>Dispose</code> allows the resources used by the <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a> to be reallocated for other purposes. For more information about <code>Dispose</code>, see <a href=\"../Topic/Cleaning%20Up%20Unmanaged%20Resources.md\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call the Clear method to free up unused resources by the current transform. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Cryptography.ToBase64Transform#7\">            base64Transform.Clear();\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Cryptography.ToBase64Transform#7\">            base64Transform.Clear()\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Cryptography.ToBase64Transform#7\">         base64Transform-&gt;Clear();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_ToBase64Transform_Dispose\">\r\n    \r\n            <a id=\"System_Security_Cryptography_ToBase64Transform_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by the current instance of the <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call <code>Dispose</code> when you are finished using the <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a>. The <code>Dispose</code> method leaves the <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a> in an unusable state. After calling <code>Dispose</code>, you must release all references to the <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a> so the garbage collector can reclaim the memory that the <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a> was occupying.  </p>\n<p> For more information, see <a href=\"../Topic/Cleaning%20Up%20Unmanaged%20Resources.md\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a> and <a href=\"../Topic/Implementing%20a%20Dispose%20Method.md\" data-linktype=\"relative-path\">Implementing a Dispose Method</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Always call <code>Dispose</code> before you release your last reference to the <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a> object&#39;s <code>Finalize</code> method.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_ToBase64Transform_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_ToBase64Transform_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a> and optionally releases the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by the public <code>Dispose()</code> method and the <code>Finalize</code> method. <code>Dispose()</code> invokes the protected <code>Dispose(Boolean)</code> method with the disposing parameter set to <code>true</code>. <code>Finalize</code> invokes <code>Dispose</code> with disposing set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is <code>true</code>, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a> references. This method invokes the <code>Dispose()</code> method of each referenced object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_ToBase64Transform_Finalize\">\r\n    \r\n            <a id=\"System_Security_Cryptography_ToBase64Transform_Finalize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Finalize()</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">~ToBase64Transform ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_ToBase64Transform_TransformBlock_System_Byte___System_Int32_System_Int32_System_Byte___System_Int32_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_ToBase64Transform_TransformBlock_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TransformBlock(Byte[],Int32,Int32,Byte[],Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the specified region of the input byte array to base 64 and copies the result to the specified region of the output byte array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>inputBuffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The input to compute to base 64.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>inputOffset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The offset into the input byte array from which to begin using data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>inputCount</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes in the input byte array to use as data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>outputBuffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The output to which to write the result.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>outputOffset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The offset into the output byte array from which to begin writing data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of bytes written.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The current <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a> object has already been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The data size is not valid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>inputBuffer</code> parameter contains an invalid offset length.  </p>\n<p> -or-  </p>\n<p> The <code>inputCount</code> parameter contains an invalid value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>inputBuffer</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>inputBuffer</code> parameter requires a non-negative number.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a> class is a block algorithm that processes input blocks of 3 bytes and creates output blocks of 4 bytes.  The TransformBlock method transforms an input block of 24 bits into 32 bits of character data.  You must maintain 3 byte input boundaries to 4 byte output boundaries in order to match the block transform.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call the TransformBlock method to iterate through <code>inputBytes</code> transforming by <code>blockSize</code>. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Cryptography.ToBase64Transform#8\">            int inputBlockSize = base64Transform.InputBlockSize;\n\n            while(inputBytes.Length - inputOffset &gt; inputBlockSize)\n            {\n                base64Transform.TransformBlock(\n                    inputBytes,\n                    inputOffset,\n                    inputBytes.Length - inputOffset,\n                    outputBytes,\n                    0);\n\n                inputOffset += base64Transform.InputBlockSize;\n                outputFileStream.Write(\n                    outputBytes, \n                    0, \n                    base64Transform.OutputBlockSize);\n            }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Cryptography.ToBase64Transform#8\">            Dim inputBlockSize As Integer = base64Transform.InputBlockSize\n\n            While (inputBytes.Length - inputOffset &gt; inputBlockSize)\n                base64Transform.TransformBlock( _\n                    inputBytes, _\n                    inputOffset, _\n                    inputBytes.Length - inputOffset, _\n                    outputBytes, _\n                    0)\n\n                inputOffset += base64Transform.InputBlockSize\n                outputFileStream.Write(outputBytes, _\n                    0, _\n                    base64Transform.OutputBlockSize)\n            End While\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Cryptography.ToBase64Transform#8\">         int inputBlockSize = base64Transform-&gt;InputBlockSize;\n         while ( inputBytes-&gt;Length - inputOffset &gt; inputBlockSize )\n         {\n            base64Transform-&gt;TransformBlock(\n               inputBytes,\n               inputOffset,\n               inputBytes-&gt;Length - inputOffset,\n               outputBytes,\n               0 );\n\n            inputOffset += base64Transform-&gt;InputBlockSize;\n            outputFileStream-&gt;Write(\n               outputBytes,\n               0,\n               base64Transform-&gt;OutputBlockSize );\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_ToBase64Transform_TransformFinalBlock_System_Byte___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_ToBase64Transform_TransformFinalBlock_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TransformFinalBlock(Byte[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the specified region of the specified byte array to base 64.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>inputBuffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The input to convert to base 64.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>inputOffset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The offset into the byte array from which to begin using data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>inputCount</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes in the byte array to use as data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>The computed base 64 conversion.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The current <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a> object has already been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>inputBuffer</code> parameter contains an invalid offset length.  </p>\n<p> -or-  </p>\n<p> The <code>inputCount</code> parameter contains an invalid value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>inputBuffer</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>inputBuffer</code> parameter requires a non-negative number.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call the TransformFinalBlock method to transform the final block of data. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.cryptography.tobase64transform\" data-linktype=\"relative-path\">ToBase64Transform</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Cryptography.ToBase64Transform#9\">            outputBytes = base64Transform.TransformFinalBlock(\n                inputBytes,\n                inputOffset,\n                inputBytes.Length - inputOffset);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Cryptography.ToBase64Transform#9\">            outputBytes = base64Transform.TransformFinalBlock( _\n                inputBytes, _\n                inputOffset, _\n                inputBytes.Length - inputOffset)\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Cryptography.ToBase64Transform#9\">         outputBytes = base64Transform-&gt;TransformFinalBlock(\n            inputBytes,\n            inputOffset,\n            inputBytes-&gt;Length - inputOffset );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.ToBase64Transform.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.ToBase64Transform.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.ToBase64Transform\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.ToBase64Transform..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.ToBase64Transform.CanReuseTransform\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.ToBase64Transform.Clear\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.ToBase64Transform.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.ToBase64Transform.Finalize\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.ToBase64Transform.InputBlockSize\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.ToBase64Transform.OutputBlockSize\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.ToBase64Transform.TransformBlock\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.ToBase64Transform.TransformFinalBlock\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"48e1904e-6d12-1546-c4d0-8dba3404392e\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Converts a  to base 64.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Cryptography/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.ToBase64Transform\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.ToBase64Transform.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.ToBase64Transform.yml","open_to_public_contributors":true,"api_name":["System.Security.Cryptography.ToBase64Transform","System.Security.Cryptography.ToBase64Transform..ctor","System.Security.Cryptography.ToBase64Transform.CanReuseTransform","System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks","System.Security.Cryptography.ToBase64Transform.Clear","System.Security.Cryptography.ToBase64Transform.Dispose","System.Security.Cryptography.ToBase64Transform.Finalize","System.Security.Cryptography.ToBase64Transform.InputBlockSize","System.Security.Cryptography.ToBase64Transform.OutputBlockSize","System.Security.Cryptography.ToBase64Transform.TransformBlock","System.Security.Cryptography.ToBase64Transform.TransformFinalBlock"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.ToBase64Transform","System::Security::Cryptography::ToBase64Transform","System.Security.Cryptography.ToBase64Transform.#ctor","System::Security::Cryptography::ToBase64Transform::#ctor","System.Security.Cryptography.ToBase64Transform.CanReuseTransform","System::Security::Cryptography::ToBase64Transform::CanReuseTransform","System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks","System::Security::Cryptography::ToBase64Transform::CanTransformMultipleBlocks","System.Security.Cryptography.ToBase64Transform.Clear","System::Security::Cryptography::ToBase64Transform::Clear","System.Security.Cryptography.ToBase64Transform.Dispose","System::Security::Cryptography::ToBase64Transform::Dispose","System.Security.Cryptography.ToBase64Transform.Finalize","System::Security::Cryptography::ToBase64Transform::Finalize","System.Security.Cryptography.ToBase64Transform.InputBlockSize","System::Security::Cryptography::ToBase64Transform::InputBlockSize","System.Security.Cryptography.ToBase64Transform.OutputBlockSize","System::Security::Cryptography::ToBase64Transform::OutputBlockSize","System.Security.Cryptography.ToBase64Transform.TransformBlock","System::Security::Cryptography::ToBase64Transform::TransformBlock","System.Security.Cryptography.ToBase64Transform.TransformFinalBlock","System::Security::Cryptography::ToBase64Transform::TransformFinalBlock"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"48e1904e-6d12-1546-c4d0-8dba3404392e","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Cryptography/ToBase64Transform.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ToBase64Transform class | Microsoft Docs","_op_ogTitle":"ToBase64Transform class","description":"Converts a  to base 64.\n","toc_asset_id":"_splitted/System.Security.Cryptography/toc.json","toc_rel":"_splitted/System.Security.Cryptography/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.ToBase64Transform","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.tobase64transform","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.tobase64transform","fileRelativePath":"System.Security.Cryptography.ToBase64Transform.html"},"themesRelativePathToOutputRoot":"_themes/"}