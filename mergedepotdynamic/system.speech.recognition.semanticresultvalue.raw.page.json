{"content":"    \r\n    <h1 id=\"System_Speech_Recognition_SemanticResultValue\">\r\n      <span class=\"lang-csharp\">SemanticResultValue</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a semantic value and optionally associates the value with a component of a speech recognition grammar.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Diagnostics.DebuggerDisplay(&quot;{_tag.DebugSummary}&quot;)]\npublic class SemanticResultValue</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SemanticResultValue</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Use of SemanticResultValue and <a class=\"xref\" href=\"system.speech.recognition.semanticresultkey\" data-linktype=\"relative-path\">SemanticResultKey</a> objects, in conjunction with <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a> and <a class=\"xref\" href=\"system.speech.recognition.choices\" data-linktype=\"relative-path\">Choices</a>, is the easiest way to design a semantic structure for a <a class=\"xref\" href=\"system.speech.recognition.grammar\" data-linktype=\"relative-path\">Grammar</a>. Semantic information for a phrase is accessed by obtaining an instance of <a class=\"xref\" href=\"system.speech.recognition.semanticvalue\" data-linktype=\"relative-path\">SemanticValue</a>, through the <a class=\"xref\" href=\"system.speech.recognition.recognizedphrase#System_Speech_Recognition_RecognizedPhrase_Semantics_\" data-linktype=\"relative-path\">Semantics</a> property on <a class=\"xref\" href=\"system.speech.recognition.recognizedphrase\" data-linktype=\"relative-path\">RecognizedPhrase</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Values managed by SemanticResultValue objects are defined by <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> instances passed to their constructors. The underlying type of this <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> must be <code>bool</code>, <code>int</code>, <code>float</code>, or <code>string</code>. Any other type will prevent construction of a <a class=\"xref\" href=\"system.speech.recognition.grammar\" data-linktype=\"relative-path\">Grammar</a> instance with the SemanticResultValue.  </p>\n</div>\n<p> The typical use of a SemanticResultValue instance associates the instance with a recognizable component of a <a class=\"xref\" href=\"system.speech.recognition.grammar\" data-linktype=\"relative-path\">Grammar</a>, such as a phrase, a rule, or a <a class=\"xref\" href=\"system.speech.recognition.choices\" data-linktype=\"relative-path\">Choices</a> object. If the associated component is used as part of a recognition operation, the SemanticResultValue is used to define a value in the semantics of the returned phrase.  </p>\n<p> There are two basic methods for associating a SemanticResultValue instance with a grammar element, depending on the constructor used to create the SemanticResultValue.  </p>\n<ul>\n<li><p>If only the value (specified by an instance of <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>) is used to construct a SemanticResultValue object, the SemanticResultValue is associated with the grammar component that preceded it, in addition to a <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a> object.  </p>\n<p> For instance, in the code fragment below, if a <a class=\"xref\" href=\"system.speech.recognition.grammar\" data-linktype=\"relative-path\">Grammar</a> constructed using this <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a> instance recognizes the word &quot;background&quot;, a value of <code>true</code> is set in the recognized phrase semantics.  </p>\n<pre><code class=\"lang-c#\">GrammarBuilder backgroundGB=new GrammarBuilder(&quot;background&quot;);  \nbackgroundGB.Append(new SemanticResultValue(true));  \n</code></pre><p> For more information, see the description of <a class=\"xref\" href=\"system.speech.recognition.semanticresultvalue#System_Speech_Recognition_SemanticResultValue__ctor_System_Object_\" data-linktype=\"relative-path\">SemanticResultValue(Object)</a>.  </p>\n</li>\n<li><p>If a string value phrase or specific <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a> instance is used, together with a <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that specifies a SemanticResultValue value, that value is automatically associated with the string value phrase or the <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a> instance.  If the phrase or <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a> object is used in the process of recognition, the value will be assigned to the semantics of the recognized phrase.  </p>\n<p> The following example illustrates this, and is functionally equivalent to the preceding example, which used explicit calls to <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder#System_Speech_Recognition_GrammarBuilder_Append_\" data-linktype=\"relative-path\">Append</a> and <a class=\"xref\" href=\"system.speech.recognition.semanticresultvalue#System_Speech_Recognition_SemanticResultValue__ctor_System_Object_\" data-linktype=\"relative-path\">SemanticResultValue(Object)</a>. If the recognition logic uses the word &quot;background&quot;, the value <code>true</code> will be added to the recognized semantics.  </p>\n<pre><code class=\"lang-c#\">fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue(&quot;background&quot;, true));  \n</code></pre><p> For more information, see the description of <a class=\"xref\" href=\"system.speech.recognition.semanticresultvalue#System_Speech_Recognition_SemanticResultValue__ctor_System_Speech_Recognition_GrammarBuilder_System_Object_\" data-linktype=\"relative-path\">SemanticResultValue(GrammarBuilder,Object)</a> and <a class=\"xref\" href=\"system.speech.recognition.semanticresultvalue#System_Speech_Recognition_SemanticResultValue__ctor_System_String_System_Object_\" data-linktype=\"relative-path\">SemanticResultValue(String,Object)</a>.  </p>\n<p>To be used by a <a class=\"xref\" href=\"system.speech.recognition.grammar\" data-linktype=\"relative-path\">Grammar</a> in recognition, all SemanticResultValue instances must be associated with one of the <a class=\"xref\" href=\"system.speech.recognition.semanticvalue\" data-linktype=\"relative-path\">SemanticValue</a> objects used by that <a class=\"xref\" href=\"system.speech.recognition.grammar\" data-linktype=\"relative-path\">Grammar</a>. This is done by associating a semantic key with the SemanticResultValue.  </p>\n<p>Semantic keys can be explicitly attached to a SemanticResultValue, using a <a class=\"xref\" href=\"system.speech.recognition.semanticresultkey\" data-linktype=\"relative-path\">SemanticResultKey</a> object.  SemanticResultValue instances not explicitly attached to a key are attached to the root key of the default <a class=\"xref\" href=\"system.speech.recognition.semanticvalue\" data-linktype=\"relative-path\">SemanticValue</a>.  </p>\n<p>After a SemanticResultValue has been used to set the <a class=\"xref\" href=\"system.speech.recognition.semanticvalue#System_Speech_Recognition_SemanticValue_Value_\" data-linktype=\"relative-path\">Value</a>, whether it is tagged with the default root key or by any particular <a class=\"xref\" href=\"system.speech.recognition.semanticresultkey\" data-linktype=\"relative-path\">SemanticResultKey</a>, that value must not be modified or an exception will occur during recognition operations.  </p>\n<p>The following example will cause an exception because it sets and then modifies the root <a class=\"xref\" href=\"system.speech.recognition.semanticvalue#System_Speech_Recognition_SemanticValue_Value_\" data-linktype=\"relative-path\">Value</a> of a <a class=\"xref\" href=\"system.speech.recognition.grammar\" data-linktype=\"relative-path\">Grammar</a>.  </p>\n</li>\n</ul>\n<pre><code class=\"lang-c#\">GrammarBuilder gb=new GrammarBuilder();  \ngb.Append(new SemanticResultValue(&quot;One&quot;));  \ngb.Append(new SemanticResultValue(&quot;Two&quot;));  \n</code></pre><p> On the other hand, the code in the following example is permitted. Although it defines multiple instances of SemanticResultValue, they are included in a <a class=\"xref\" href=\"system.speech.recognition.choices\" data-linktype=\"relative-path\">Choices</a> object, and only one will ever be used to set the value of the key <code>bgOrfgText</code>.  </p>\n<pre><code class=\"lang-c#\">Choices fgOrbgChoice = new Choices();  \nfgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue(&quot;background&quot;));  \nfgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue(&quot;foreground&quot;));  \nSemanticResultKey fgOrbgChoiceKey = new SemanticResultKey(&quot;BgOrFgText&quot;, fgOrbgChoice);  \n</code></pre><p> For more information about using SemanticResultValue and <a class=\"xref\" href=\"system.speech.recognition.semanticresultkey\" data-linktype=\"relative-path\">SemanticResultKey</a> objects, see <a href=\"http://msdn.microsoft.com/en-us/0fea1236-5261-4608-89b3-9ce9ffc22a1c\" data-linktype=\"external\">Understanding SemanticResultValue and SemanticResultKey Objects</a> and <a href=\"http://msdn.microsoft.com/en-us/198e29b8-845f-4cec-a25e-f55c0eaf46aa\" data-linktype=\"external\">Using a SemanticResultKey to Extract a SemanticResultValue</a> in the <a href=\"http://msdn.microsoft.com/en-us/610116c7-3817-40ff-857b-5d41e8511043\" data-linktype=\"external\">System Speech Programming Guide for .NET Framework 4.0</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Recognition_SemanticResultValue__ctor_System_Object_\" data-linktype=\"self-bookmark\">SemanticResultValue(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.speech.recognition.semanticresultvalue\" data-linktype=\"relative-path\">SemanticResultValue</a> class and specifies a semantic value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Recognition_SemanticResultValue__ctor_System_Speech_Recognition_GrammarBuilder_System_Object_\" data-linktype=\"self-bookmark\">SemanticResultValue(GrammarBuilder,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.speech.recognition.semanticresultvalue\" data-linktype=\"relative-path\">SemanticResultValue</a> class and associates a semantic value with a <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Recognition_SemanticResultValue__ctor_System_String_System_Object_\" data-linktype=\"self-bookmark\">SemanticResultValue(String,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.speech.recognition.semanticresultvalue\" data-linktype=\"relative-path\">SemanticResultValue</a> class and associates a semantic value with a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Recognition_SemanticResultValue_ToGrammarBuilder\" data-linktype=\"self-bookmark\">ToGrammarBuilder()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an instance of <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a> constructed from the current <a class=\"xref\" href=\"system.speech.recognition.semanticresultvalue\" data-linktype=\"relative-path\">SemanticResultValue</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Recognition_SemanticResultValue__ctor_System_Object_\">\r\n    \r\n            <a id=\"System_Speech_Recognition_SemanticResultValue__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SemanticResultValue(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.speech.recognition.semanticresultvalue\" data-linktype=\"relative-path\">SemanticResultValue</a> class and specifies a semantic value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SemanticResultValue (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value managed by <a class=\"xref\" href=\"system.speech.recognition.semanticresultvalue\" data-linktype=\"relative-path\">SemanticResultValue</a>. Must be of type <code>bool</code>, <code>int</code>, <code>float</code>, or <code>string</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <code>SemanticResultValue</code> returned by this constructor is not associated with any particular grammar element. The association must be made explicit by using the instance of <code>SemanticResultValue</code> in conjunction with <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a>.  </p>\n<p> For instance, in the code fragment below, if a <a class=\"xref\" href=\"system.speech.recognition.grammar\" data-linktype=\"relative-path\">Grammar</a> constructed using this <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a> instance recognizes the word &quot;background&quot;, a value of <code>true</code> is set in the recognized phrase semantics.  </p>\n<pre><code class=\"lang-c#\">GrammarBuilder backgroundGB=new GrammarBuilder(&quot;background&quot;);  \nbackgroundGB.Append(new SemanticResultValue(true));  \n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example returns a <a class=\"xref\" href=\"system.speech.recognition.grammar\" data-linktype=\"relative-path\">Grammar</a> that recognizes the command &quot;Set/Change/Alter Foreground/Background â€¦ [color list]&quot;. <a class=\"xref\" href=\"system.speech.recognition.semanticresultvalue\" data-linktype=\"relative-path\">SemanticResultValue</a> and <a class=\"xref\" href=\"system.speech.recognition.semanticresultkey\" data-linktype=\"relative-path\">SemanticResultKey</a> instances (in conjunction with <a class=\"xref\" href=\"system.speech.recognition.choices\" data-linktype=\"relative-path\">Choices</a> and <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a> objects) are used to define semantics that can be parsed on recognition.  The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.  </p>\n<pre><code class=\"lang-c#\">\nprivate Grammar FgBgColorGrammar()   \n{  \n  Grammar grammar = null;  \n\n  // Allow the command to begin with set, alter, change.  \n  Choices introChoices = new Choices();  \n  foreach (string introString in new string[] { &quot;Change&quot;, &quot;Set&quot;, &quot;Alter&quot; })   \n  {  \n    GrammarBuilder introGB = new GrammarBuilder(introString);  \n    introChoices.Add(  \n                  new SemanticResultValue(introGB,  \n                  String.Format(&quot;Command: {0}&quot;, introString)));  \n  }           \n\n  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  \n\n  // Define the arguments for the command to select foreground or background   \n  // and to change their color as semantic values.  \n  Choices fgOrbgChoice = new Choices();  \n  GrammarBuilder backgroundGB=new GrammarBuilder(&quot;background&quot;);  \n  backgroundGB.Append(new SemanticResultValue(true));  \n  fgOrbgChoice.Add(backgroundGB);  \n  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue(&quot;foreground&quot;, false));  \n  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey(&quot;BgOrFgBool&quot;, fgOrbgChoice);  \n  Choices colorChoice = new Choices();  \n  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   \n  {  \n\n    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      \n    colorChoice.Add(  \n                 (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  \n  }  \n\n  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  \n  // semantic keys.  \n  GrammarBuilder cmdArgs = new GrammarBuilder();  \n  cmdArgs.Append(new SemanticResultKey(&quot;BgOrFgBool&quot;, fgOrbgChoice));  \n  cmdArgs.AppendWildcard();  \n  cmdArgs.Append(new SemanticResultKey(&quot;colorStringList&quot;, colorChoice));  \n\n  GrammarBuilder cmds =   \n      GrammarBuilder.Add(  \n        cmdIntro,   \n        new GrammarBuilder(new SemanticResultKey(&quot;Cmd Args&quot;, cmdArgs)));  \n  grammar = new Grammar(cmds);  \n  grammar.Name = &quot;Tree [Set,change,alter] [foreground,background] * color&quot;;  \n  return grammar;  \n}  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Recognition_SemanticResultValue__ctor_System_Speech_Recognition_GrammarBuilder_System_Object_\">\r\n    \r\n            <a id=\"System_Speech_Recognition_SemanticResultValue__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SemanticResultValue(GrammarBuilder,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.speech.recognition.semanticresultvalue\" data-linktype=\"relative-path\">SemanticResultValue</a> class and associates a semantic value with a <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SemanticResultValue (System.Speech.Recognition.GrammarBuilder builder, object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>builder</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A grammar component to be used in recognition.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value managed by <a class=\"xref\" href=\"system.speech.recognition.semanticresultvalue\" data-linktype=\"relative-path\">SemanticResultValue</a>. Must be of type <code>bool</code>, <code>int</code>, <code>float</code>, or <code>string</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the grammar element specified by <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a> is used in the recognition logic, <code>value</code> will be set in the semantics of the recognized output.  </p>\n<p> In the code fragment below, if the recognition logic constructed with the <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a> instance (<code>myGb</code>) uses the <a class=\"xref\" href=\"system.speech.recognition.choices\" data-linktype=\"relative-path\">Choices</a> object (<code>myChoice</code>) to identify input, the value <code>true</code> is added to the recognized semantics.  </p>\n<pre><code class=\"lang-c#\">myGb.Append(new SemanticResultValue(myChoice, true);  \n</code></pre><p> As <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a> supports implicit conversion for <a class=\"xref\" href=\"system.speech.recognition.choices\" data-linktype=\"relative-path\">Choices</a>,  <code>SemanticResultValue</code>, and <a class=\"xref\" href=\"system.speech.recognition.semanticresultkey\" data-linktype=\"relative-path\">SemanticResultKey</a>, this constructor can use those objects as well.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example returns a <a class=\"xref\" href=\"system.speech.recognition.grammar\" data-linktype=\"relative-path\">Grammar</a> that recognizes the command &quot;Set/Change/Alter Foreground/Background â€¦ [color list]&quot;. <a class=\"xref\" href=\"system.speech.recognition.semanticresultvalue\" data-linktype=\"relative-path\">SemanticResultValue</a> and <a class=\"xref\" href=\"system.speech.recognition.semanticresultkey\" data-linktype=\"relative-path\">SemanticResultKey</a> instances (in conjunction with <a class=\"xref\" href=\"system.speech.recognition.choices\" data-linktype=\"relative-path\">Choices</a> and <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a> objects) are used to define semantics that can be parsed on recognition.  The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.  </p>\n<pre><code class=\"lang-c#\">\nprivate Grammar FgBgColorGrammar()   \n{  \n  Grammar grammar = null;  \n\n  // Allow the command to begin with set, alter, change.  \n  Choices introChoices = new Choices();  \n  foreach (string introString in new string[] { &quot;Change&quot;, &quot;Set&quot;, &quot;Alter&quot; })   \n  {  \n    GrammarBuilder introGB = new GrammarBuilder(introString);  \n    introChoices.Add(  \n                  new SemanticResultValue(introGB,  \n                  String.Format(&quot;Command: {0}&quot;, introString)));  \n  }           \n  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  \n\n  // Define the arguments for the command to select foreground or background   \n  // and to change their color as semantic values.  \n  Choices fgOrbgChoice = new Choices();  \n  GrammarBuilder backgroundGB=new GrammarBuilder(&quot;background&quot;);  \n  backgroundGB.Append(new SemanticResultValue(true));  \n  fgOrbgChoice.Add(backgroundGB);  \n  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue(&quot;foreground&quot;, false));  \n  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey(&quot;BgOrFgBool&quot;, fgOrbgChoice);  \n  Choices colorChoice = new Choices();  \n  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   \n  {  \n\n    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      \n    colorChoice.Add(  \n              (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  \n    }  \n\n  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  \n  // semantic keys.  \n  GrammarBuilder cmdArgs = new GrammarBuilder();  \n  cmdArgs.Append(new SemanticResultKey(&quot;BgOrFgBool&quot;, fgOrbgChoice));  \n  cmdArgs.AppendWildcard();  \n  cmdArgs.Append(new SemanticResultKey(&quot;colorStringList&quot;, colorChoice));  \n\n  GrammarBuilder cmds =   \n      GrammarBuilder.Add(  \n                      cmdIntro,  \n                      new GrammarBuilder(new SemanticResultKey(&quot;Cmd Args&quot;, cmdArgs)));  \n  grammar = new Grammar(cmds);  \n  grammar.Name = &quot;Tree [Set,change,alter] [foreground,background] * color&quot;;  \n  return grammar;  \n}  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Recognition_SemanticResultValue__ctor_System_String_System_Object_\">\r\n    \r\n            <a id=\"System_Speech_Recognition_SemanticResultValue__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SemanticResultValue(String,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.speech.recognition.semanticresultvalue\" data-linktype=\"relative-path\">SemanticResultValue</a> class and associates a semantic value with a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SemanticResultValue (string phrase, object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>phrase</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A phrase to be used in recognition.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value managed by <a class=\"xref\" href=\"system.speech.recognition.semanticresultvalue\" data-linktype=\"relative-path\">SemanticResultValue</a>. Must be of type <code>bool</code>, <code>int</code>, <code>float</code>, or <code>string</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the string specified by <code>phrase</code> is used in the recognition logic, <code>value</code> will be set in the semantics of the recognized output.  </p>\n<p> In the following code fragment, if the recognition logic constructed with the <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a> instance (<code>myGb</code>) uses the string &quot;my mortgage&quot; to identify input, the value <code>true</code> will be added to the recognized semantics.  </p>\n<pre><code class=\"lang-c#\">myGb.Append(new SemanticResultValue(&quot;my mortgage&quot;, true);  \n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example returns a <a class=\"xref\" href=\"system.speech.recognition.grammar\" data-linktype=\"relative-path\">Grammar</a> that recognizes the command &quot;Set/Change/Alter Foreground/Background â€¦ [color list]&quot;. <a class=\"xref\" href=\"system.speech.recognition.semanticresultvalue\" data-linktype=\"relative-path\">SemanticResultValue</a> and <a class=\"xref\" href=\"system.speech.recognition.semanticresultkey\" data-linktype=\"relative-path\">SemanticResultKey</a> instances (in conjunction with <a class=\"xref\" href=\"system.speech.recognition.choices\" data-linktype=\"relative-path\">Choices</a> and <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a> objects) are used to define semantics that can be parsed on recognition.  The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.  </p>\n<pre><code>private Grammar FgBgColorGrammar()   \n{  \n  Grammar grammar = null;  \n\n  // Allow command to begin with set, alter, change.  \n  Choices introChoices = new Choices();  \n  foreach (string introString in new string[] { &quot;Change&quot;, &quot;Set&quot;, &quot;Alter&quot; })   \n  {  \n    GrammarBuilder introGB = new GrammarBuilder(introString);  \n    introChoices.Add(  \n                  new SemanticResultValue(introGB,  \n                  String.Format(&quot;Command: {0}&quot;, introString)));  \n  }  \n\n  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  \n\n  // Define the arguments for the command to select foreground or background   \n  // and to change their color as semantic values.  \n  Choices fgOrbgChoice = new Choices();  \n  GrammarBuilder backgroundGB=new GrammarBuilder(&quot;background&quot;);  \n  backgroundGB.Append(new SemanticResultValue(true));  \n  fgOrbgChoice.Add(backgroundGB);  \n  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue(&quot;foreground&quot;, false));  \n  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey(&quot;BgOrFgBool&quot;, fgOrbgChoice);  \n  Choices colorChoice = new Choices();  \n  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   \n  {  \n\n    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      \n    colorChoice.Add(  \n          (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  \n  }  \n\n  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  \n  // semantic keys.  \n  GrammarBuilder cmdArgs = new GrammarBuilder();  \n  cmdArgs.Append(new SemanticResultKey(&quot;BgOrFgBool&quot;, fgOrbgChoice));  \n  cmdArgs.AppendWildcard();  \n  cmdArgs.Append(new SemanticResultKey(&quot;colorStringList&quot;, colorChoice));  \n\n  GrammarBuilder cmds =   \n      GrammarBuilder.Add(cmdIntro,  \n                         new GrammarBuilder(new SemanticResultKey(&quot;Cmd Args&quot;, cmdArgs)));  \n  grammar = new Grammar(cmds);  \n  grammar.Name = &quot;Tree [Set,change,alter] [foreground,background] * color&quot;;  \n  return grammar;  \n}  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Recognition_SemanticResultValue_ToGrammarBuilder\">\r\n    \r\n            <a id=\"System_Speech_Recognition_SemanticResultValue_ToGrammarBuilder_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToGrammarBuilder()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an instance of <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a> constructed from the current <a class=\"xref\" href=\"system.speech.recognition.semanticresultvalue\" data-linktype=\"relative-path\">SemanticResultValue</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a></div>\r\n                  </div>\r\n                  <p>Returns an instance of <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a> constructed from the current <a class=\"xref\" href=\"system.speech.recognition.semanticresultvalue\" data-linktype=\"relative-path\">SemanticResultValue</a> instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The use of ToGrammarBuilder is equivalent to using the <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a> constructor that takes a <a class=\"xref\" href=\"system.speech.recognition.semanticresultvalue\" data-linktype=\"relative-path\">SemanticResultValue</a> as an argument (<a class=\"xref\" href=\"system.speech.recognition.grammarbuilder#System_Speech_Recognition_GrammarBuilder__ctor_System_Speech_Recognition_SemanticResultValue_\" data-linktype=\"relative-path\">GrammarBuilder(SemanticResultValue)</a>).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates <a class=\"xref\" href=\"system.speech.recognition.grammar\" data-linktype=\"relative-path\">Grammar</a> objects that support commands to change the background color.  </p>\n<p> A <a class=\"xref\" href=\"system.speech.recognition.choices\" data-linktype=\"relative-path\">Choices</a> object (<code>colorChoice</code>) containing the list of options for background colors is filled using the [Add(GrammarBuilder&lt;xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29&gt; method with <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a> instances that are obtained from the <a class=\"xref\" href=\"system.speech.recognition.semanticresultkey#System_Speech_Recognition_SemanticResultKey_ToGrammarBuilder\" data-linktype=\"relative-path\">ToGrammarBuilder()</a> method on the <code>SemanticResultValue</code> objects created from color strings.  </p>\n<p> A <a class=\"xref\" href=\"system.speech.recognition.grammarbuilder\" data-linktype=\"relative-path\">GrammarBuilder</a> is then obtained by calling <a class=\"xref\" href=\"system.speech.recognition.semanticresultkey#System_Speech_Recognition_SemanticResultKey_ToGrammarBuilder\" data-linktype=\"relative-path\">ToGrammarBuilder()</a> on a <a class=\"xref\" href=\"system.speech.recognition.semanticresultkey\" data-linktype=\"relative-path\">SemanticResultKey</a> instance, which will be used to key the semantic choices in the <code>colorChoice</code> instance.  </p>\n<pre><code class=\"lang-c#\">\nprivate Grammar CreateGrammarBuilderRGBSemantics()   \n{  \n\n  // Create a set of choices, each a lookup from a color name to RBG.  \n  // Choices constructors do not take a SemanticResultValue parameter, so  \n  // cast SemanticResultValue to GrammarBuilder.  \n  Choices colorChoice = new Choices();  \n  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   \n  {  \n\n    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      \n    SemanticResultValue colorValue =   \n        new SemanticResultValue(colorName, Color.FromName(colorName).ToArgb());  \n    colorChoice.Add(colorValue.ToGrammarBuilder());  \n  }  \n\n  SemanticResultKey choiceKey = new SemanticResultKey(&quot;rgb&quot;, colorChoice);  \n  GrammarBuilder choiceBuilder = choiceKey.ToGrammarBuilder();  \n\n  // Create two intermediate grammars with an introductory phrase and the  \n  // color choice.  \n  GrammarBuilder makeBackgroundBuilder = &quot;Make background&quot;;  \n  makeBackgroundBuilder.Append(choiceBuilder);  \n\n  GrammarBuilder configureBackgroundBuilder = new GrammarBuilder(&quot;Configure background as&quot;);  \n  configureBackgroundBuilder.Append((new SemanticResultKey(&quot;rgb&quot;, colorChoice)).ToGrammarBuilder());  \n\n  // Create the final grammar, which recognizes either intermediate grammar.  \n  Grammar grammar = new Grammar(new Choices(new GrammarBuilder[] { makeBackgroundBuilder, configureBackgroundBuilder }));  \n  grammar.Name = &quot;Set Background Color&quot;;  \n\n  return grammar;  \n}  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Speech.Recognition.SemanticResultValue.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Speech.Recognition.SemanticResultValue.yml\">\r\n<meta name=\"APIName\" content=\"System.Speech.Recognition.SemanticResultValue\">\r\n<meta name=\"APIName\" content=\"System.Speech.Recognition.SemanticResultValue..ctor\">\r\n<meta name=\"APIName\" content=\"System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder\">\r\n<meta name=\"APILocation\" content=\"System.Speech.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"2b83d4fc-cd2b-3fb9-e7ff-48fc3b09cbd1\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a semantic value and optionally associates the value with a component of a speech recognition grammar.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Speech.Recognition/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Speech.Recognition.SemanticResultValue\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Speech.Recognition.SemanticResultValue.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Speech.Recognition.SemanticResultValue.yml","open_to_public_contributors":true,"api_name":["System.Speech.Recognition.SemanticResultValue","System.Speech.Recognition.SemanticResultValue..ctor","System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder"],"api_location":["System.Speech.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Speech.Recognition.SemanticResultValue","System::Speech::Recognition::SemanticResultValue","System.Speech.Recognition.SemanticResultValue.#ctor","System::Speech::Recognition::SemanticResultValue::#ctor","System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder","System::Speech::Recognition::SemanticResultValue::ToGrammarBuilder"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"2b83d4fc-cd2b-3fb9-e7ff-48fc3b09cbd1","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Speech.Recognition/SemanticResultValue.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SemanticResultValue class | Microsoft Docs","_op_ogTitle":"SemanticResultValue class","description":"Represents a semantic value and optionally associates the value with a component of a speech recognition grammar.\n","toc_asset_id":"_splitted/System.Speech.Recognition/toc.json","toc_rel":"_splitted/System.Speech.Recognition/toc.json","source_url":"","ms.assetid":"System.Speech.Recognition.SemanticResultValue","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.speech.recognition.semanticresultvalue","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.speech.recognition.semanticresultvalue","fileRelativePath":"System.Speech.Recognition.SemanticResultValue.html"},"themesRelativePathToOutputRoot":"_themes/"}