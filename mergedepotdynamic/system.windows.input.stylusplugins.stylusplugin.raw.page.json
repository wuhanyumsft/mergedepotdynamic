{"content":"    \r\n    <h1 id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn\">\r\n      <span class=\"lang-csharp\">StylusPlugIn</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a plug-in that can be added to a control&#39;s <span class=\"xref\">stem.Windows.UIElement.StylusPlugIns*</span> property.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class StylusPlugIn</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">StylusPlugIn</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The StylusPlugIn allows you to manipulate <a class=\"xref\" href=\"system.windows.input.styluspoint\" data-linktype=\"relative-path\">StylusPoint</a> objects on separate threads. Separate threads are used so that the ink still renders as the tablet pen inputs data even if the application is doing something else.  </p>\n<p> To intercept stylus points from the hardware, create a class that inherits from the StylusPlugIn class.  The StylusPlugIn class has the following methods that you can override to manipulate <a class=\"xref\" href=\"system.windows.input.styluspoint\" data-linktype=\"relative-path\">StylusPoint</a> objects on a thread in the pen thread pool.  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusDown_\" data-linktype=\"relative-path\">OnStylusDown</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusUp_\" data-linktype=\"relative-path\">OnStylusUp</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusMove_\" data-linktype=\"relative-path\">OnStylusMove</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusEnter_\" data-linktype=\"relative-path\">OnStylusEnter</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusLeave_\" data-linktype=\"relative-path\">OnStylusLeave</a>  \n\n<p>The pen&#39;s input is routed to an element&#39;s StylusPlugIn on the pen thread. Since accurate hit-testing cannot be performed on the pen thread, some elements might occasionally receive stylus input intended for other elements. If you need to make sure the input was routed correctly before performing an operation, subscribe to and perform the operation in the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusDownProcessed_\" data-linktype=\"relative-path\">OnStylusDownProcessed</a>, <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusMoveProcessed_\" data-linktype=\"relative-path\">OnStylusMoveProcessed</a>, or <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusUpProcessed_\" data-linktype=\"relative-path\">OnStylusUpProcessed</a> method. These methods are invoked by the main application thread after accurate hit-testing has been performed. To subscribe to these methods, call the <a class=\"xref\" href=\"system.windows.input.stylusplugins.rawstylusinput#System_Windows_Input_StylusPlugIns_RawStylusInput_NotifyWhenProcessed_\" data-linktype=\"relative-path\">NotifyWhenProcessed</a> method in the method that occurs on the pen thread. For example, if you call <a class=\"xref\" href=\"system.windows.input.stylusplugins.rawstylusinput#System_Windows_Input_StylusPlugIns_RawStylusInput_NotifyWhenProcessed_\" data-linktype=\"relative-path\">NotifyWhenProcessed</a> in <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusMove_\" data-linktype=\"relative-path\">OnStylusMove</a>, the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusMoveProcessed_\" data-linktype=\"relative-path\">OnStylusMoveProcessed</a> occurs.  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> If you use a StylusPlugIn inside a control, you should test the plug-in and control extensively to make sure they do not throw any unintended exceptions.  </p>\n</div>\n<p><a name=\"xamlTextUsage_StylusPlugIn\"></a>   </p>\n<h2 id=\"xaml-text-usage\">XAML Text Usage</h2>\n<p> This class is not typically used in XAML.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_StylusPlugIns_StylusPlugIn__ctor\" data-linktype=\"self-bookmark\">StylusPlugIn()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_StylusPlugIns_StylusPlugIn_Element\" data-linktype=\"self-bookmark\">Element</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> to which the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> is attached.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_StylusPlugIns_StylusPlugIn_ElementBounds\" data-linktype=\"self-bookmark\">ElementBounds</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the cached bounds of the element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_StylusPlugIns_StylusPlugIn_Enabled\" data-linktype=\"self-bookmark\">Enabled</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets whether the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> is active.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_StylusPlugIns_StylusPlugIn_IsActiveForInput\" data-linktype=\"self-bookmark\">IsActiveForInput</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets whether the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> is able to accept input.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnAdded\" data-linktype=\"self-bookmark\">OnAdded()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> is added to an element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnEnabledChanged\" data-linktype=\"self-bookmark\">OnEnabledChanged()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Input.StylusPlugIns.StylusPlugIn.Enabled*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnIsActiveForInputChanged\" data-linktype=\"self-bookmark\">OnIsActiveForInputChanged()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Input.StylusPlugIns.StylusPlugIn.IsActiveForInput*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnRemoved\" data-linktype=\"self-bookmark\">OnRemoved()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> is removed from an element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusDown_System_Windows_Input_StylusPlugIns_RawStylusInput_\" data-linktype=\"self-bookmark\">OnStylusDown(RawStylusInput)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs on a thread in the pen thread pool when the tablet pen touches the digitizer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusDownProcessed_System_Object_System_Boolean_\" data-linktype=\"self-bookmark\">OnStylusDownProcessed(Object,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs on the application UI (user interface) thread when the tablet pen touches the digitizer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusEnter_System_Windows_Input_StylusPlugIns_RawStylusInput_System_Boolean_\" data-linktype=\"self-bookmark\">OnStylusEnter(RawStylusInput,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs on a pen thread when the cursor enters the bounds of an element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusLeave_System_Windows_Input_StylusPlugIns_RawStylusInput_System_Boolean_\" data-linktype=\"self-bookmark\">OnStylusLeave(RawStylusInput,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs on a pen thread when the cursor leaves the bounds of an element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusMove_System_Windows_Input_StylusPlugIns_RawStylusInput_\" data-linktype=\"self-bookmark\">OnStylusMove(RawStylusInput)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs on a pen thread when the tablet pen moves on the digitizer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusMoveProcessed_System_Object_System_Boolean_\" data-linktype=\"self-bookmark\">OnStylusMoveProcessed(Object,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs on the application UI (user interface) thread when the tablet pen moves on the digitizer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusUp_System_Windows_Input_StylusPlugIns_RawStylusInput_\" data-linktype=\"self-bookmark\">OnStylusUp(RawStylusInput)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs on a pen thread when the user lifts the tablet pen from the digitizer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusUpProcessed_System_Object_System_Boolean_\" data-linktype=\"self-bookmark\">OnStylusUpProcessed(Object,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs on the application UI (user interface) thread when the user lifts the tablet pen from the digitizer.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn__ctor\">\r\n    \r\n            <a id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StylusPlugIn()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected StylusPlugIn ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_Element\">\r\n    \r\n            <a id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_Element_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Element</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> to which the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> is attached.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.UIElement Element { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> to which the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> is attached.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows the Element of the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> when it is added to the <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusPlugIns_\" data-linktype=\"relative-path\">StylusPlugIns</a> collection.  </p>\n<pre><code class=\"lang-vb\" name=\"StylusPluginSamples#22\">Protected Overrides Sub OnAdded()\n\n    MyBase.OnAdded()\n\n    MessageBox.Show(Me.Element.ToString())\n\nEnd Sub &#39;OnAdded\n</code></pre><pre><code class=\"lang-cs\" name=\"StylusPluginSamples#22\">protected override void OnAdded()\n{\n    base.OnAdded();\n     \n    MessageBox.Show(this.Element.ToString());\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_ElementBounds\">\r\n    \r\n            <a id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_ElementBounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ElementBounds</div>        \r\n          </div>\r\n    \r\n            <p>Gets the cached bounds of the element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Rect ElementBounds { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.rect\" data-linktype=\"relative-path\">Rect</a></div>\r\n                  </div>\r\n                  <p>The cached bounds of the element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> caches the bounds of its element to perform hit testing.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how a <a class=\"xref\" href=\"system.windows.input.stylusplugins.dynamicrenderer\" data-linktype=\"relative-path\">DynamicRenderer</a>, which inherits from <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a>, uses an <a class=\"xref\" href=\"system.windows.media.imagebrush\" data-linktype=\"relative-path\">ImageBrush</a> to render a stroke.  This brush partially draws the image file specified by <code>imageFile</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"StylusPluginSamples#17\">If imageBrush Is Nothing Then\n    &#39; Create an ImageBrush.  imageFile is a string that&#39;s a path to an image file.\n    image1 = New BitmapImage(New Uri(imageFile))\n    imageBrush = New ImageBrush(image1)\n    \n    &#39; Don&#39;t tile, don&#39;t stretch; align to top/left.\n    imageBrush.TileMode = TileMode.None\n    imageBrush.Stretch = Stretch.None\n    imageBrush.AlignmentX = AlignmentX.Left\n    imageBrush.AlignmentY = AlignmentY.Top\n    \n    &#39; Map the brush to the entire bounds of the element.\n    imageBrush.ViewportUnits = BrushMappingMode.Absolute\n    imageBrush.Viewport = ElementBounds\n    imageBrush.Freeze()\nEnd If \n</code></pre><pre><code class=\"lang-cs\" name=\"StylusPluginSamples#17\">if (imageBrush == null)\n{\n    // Create an ImageBrush.  imageFile is a string that&#39;s a path to an image file.\n    image1 = new BitmapImage(new Uri(imageFile));\n    imageBrush = new ImageBrush(image1);\n\n    // Don&#39;t tile, don&#39;t stretch; align to top/left.\n    imageBrush.TileMode = TileMode.None;\n    imageBrush.Stretch = Stretch.None;\n    imageBrush.AlignmentX = AlignmentX.Left;\n    imageBrush.AlignmentY = AlignmentY.Top;\n\n    // Map the brush to the entire bounds of the element.\n    imageBrush.ViewportUnits = BrushMappingMode.Absolute;\n    imageBrush.Viewport = this.ElementBounds;\n    imageBrush.Freeze();\n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_Enabled\">\r\n    \r\n            <a id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_Enabled_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Enabled</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets whether the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> is active.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Enabled { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> is active; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a name=\"xamlTextUsage_Enabled\"></a>   </p>\n<h2 id=\"xaml-text-usage\">XAML Text Usage</h2>\n<p> This property is not typically used in XAML.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example checks the value of the Enabled property in the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnEnabledChanged_\" data-linktype=\"relative-path\">OnEnabledChanged</a> method.  </p>\n<pre><code class=\"lang-vb\" name=\"StylusPluginSamples#16\">Protected Overrides Sub OnEnabledChanged()\n\n    MyBase.OnEnabledChanged()\n\n    If Me.Enabled Then\n        MessageBox.Show(&quot;The StylusPlugin is enabled.&quot;)\n    Else\n        MessageBox.Show(&quot;The StylusPlugin is not enabled.&quot;)\n    End If\n\nEnd Sub &#39;OnEnabledChanged\n</code></pre><pre><code class=\"lang-cs\" name=\"StylusPluginSamples#16\">protected override void OnEnabledChanged()\n{\n    base.OnEnabledChanged();\n\n    if (this.Enabled)\n    {\n        MessageBox.Show(&quot;The StylusPlugin is enabled.&quot;);\n    }\n    else\n    {\n        MessageBox.Show(&quot;The StylusPlugin is not enabled.&quot;);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_IsActiveForInput\">\r\n    \r\n            <a id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_IsActiveForInput_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsActiveForInput</div>        \r\n          </div>\r\n    \r\n            <p>Gets whether the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> is able to accept input.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsActiveForInput { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> is able to accept input; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following conditions must be met for the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> to accept input:  </p>\n<ul>\n<li><p>The <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> is a member of a <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugincollection\" data-linktype=\"relative-path\">StylusPlugInCollection</a>.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin#System_Windows_Input_StylusPlugIns_StylusPlugIn_Element_\" data-linktype=\"relative-path\">Element</a> of the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> is visible and enabled.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to override the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnIsActiveForInputChanged_\" data-linktype=\"relative-path\">OnIsActiveForInputChanged</a> method.  </p>\n<pre><code class=\"lang-vb\" name=\"StylusPluginSamples#18\">Protected Overrides Sub OnIsActiveForInputChanged()\n\n    MyBase.OnIsActiveForInputChanged()\n\n    If Not Me.IsActiveForInput Then\n        &#39; Clean up any resources the plug-in uses.\n    Else\n        &#39; Allocate the resources the plug-in uses.\n    End If\n\nEnd Sub &#39;OnIsActiveForInputChanged\n</code></pre><pre><code class=\"lang-cs\" name=\"StylusPluginSamples#18\">protected override void OnIsActiveForInputChanged()\n{\n    base.OnIsActiveForInputChanged();\n\n    if (!this.IsActiveForInput)\n    {\n        // Clean up any resources the plug-in uses.\n    }\n    else\n    {\n        // Allocate the resources the plug-in uses.\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_OnAdded\">\r\n    \r\n            <a id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_OnAdded_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnAdded()</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> is added to an element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnAdded ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin#System_Windows_Input_StylusPlugIns_StylusPlugIn_Element_\" data-linktype=\"relative-path\">Element</a> of the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> when it is added to the <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusPlugIns_\" data-linktype=\"relative-path\">StylusPlugIns</a> collection.  </p>\n<pre><code class=\"lang-vb\" name=\"StylusPluginSamples#22\">Protected Overrides Sub OnAdded()\n\n    MyBase.OnAdded()\n\n    MessageBox.Show(Me.Element.ToString())\n\nEnd Sub &#39;OnAdded\n</code></pre><pre><code class=\"lang-cs\" name=\"StylusPluginSamples#22\">protected override void OnAdded()\n{\n    base.OnAdded();\n     \n    MessageBox.Show(this.Element.ToString());\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_OnEnabledChanged\">\r\n    \r\n            <a id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_OnEnabledChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnEnabledChanged()</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Input.StylusPlugIns.StylusPlugIn.Enabled*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnEnabledChanged ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example checks the value of the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin#System_Windows_Input_StylusPlugIns_StylusPlugIn_Enabled_\" data-linktype=\"relative-path\">Enabled</a> property in the OnEnabledChanged method.  </p>\n<pre><code class=\"lang-vb\" name=\"StylusPluginSamples#16\">Protected Overrides Sub OnEnabledChanged()\n\n    MyBase.OnEnabledChanged()\n\n    If Me.Enabled Then\n        MessageBox.Show(&quot;The StylusPlugin is enabled.&quot;)\n    Else\n        MessageBox.Show(&quot;The StylusPlugin is not enabled.&quot;)\n    End If\n\nEnd Sub &#39;OnEnabledChanged\n</code></pre><pre><code class=\"lang-cs\" name=\"StylusPluginSamples#16\">protected override void OnEnabledChanged()\n{\n    base.OnEnabledChanged();\n\n    if (this.Enabled)\n    {\n        MessageBox.Show(&quot;The StylusPlugin is enabled.&quot;);\n    }\n    else\n    {\n        MessageBox.Show(&quot;The StylusPlugin is not enabled.&quot;);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_OnIsActiveForInputChanged\">\r\n    \r\n            <a id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_OnIsActiveForInputChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnIsActiveForInputChanged()</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Input.StylusPlugIns.StylusPlugIn.IsActiveForInput*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnIsActiveForInputChanged ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the OnIsActiveForInputChanged method to allocate and clean up resources used by the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to override the OnIsActiveForInputChanged method.  </p>\n<pre><code class=\"lang-vb\" name=\"StylusPluginSamples#18\">Protected Overrides Sub OnIsActiveForInputChanged()\n\n    MyBase.OnIsActiveForInputChanged()\n\n    If Not Me.IsActiveForInput Then\n        &#39; Clean up any resources the plug-in uses.\n    Else\n        &#39; Allocate the resources the plug-in uses.\n    End If\n\nEnd Sub &#39;OnIsActiveForInputChanged\n</code></pre><pre><code class=\"lang-cs\" name=\"StylusPluginSamples#18\">protected override void OnIsActiveForInputChanged()\n{\n    base.OnIsActiveForInputChanged();\n\n    if (!this.IsActiveForInput)\n    {\n        // Clean up any resources the plug-in uses.\n    }\n    else\n    {\n        // Allocate the resources the plug-in uses.\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_OnRemoved\">\r\n    \r\n            <a id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_OnRemoved_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRemoved()</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> is removed from an element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRemoved ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusDown_System_Windows_Input_StylusPlugIns_RawStylusInput_\">\r\n    \r\n            <a id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusDown_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnStylusDown(RawStylusInput)</div>        \r\n          </div>\r\n    \r\n            <p>Occurs on a thread in the pen thread pool when the tablet pen touches the digitizer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnStylusDown (System.Windows.Input.StylusPlugIns.RawStylusInput rawStylusInput);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rawStylusInput</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.stylusplugins.rawstylusinput\" data-linktype=\"relative-path\">RawStylusInput</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.input.stylusplugins.rawstylusinput\" data-linktype=\"relative-path\">RawStylusInput</a> that contains information about input from the pen.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method occurs on a pen thread, so minimize work in this method to avoid impacting performance.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to override the OnStylusDown method. To create a <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> that restricts ink to a certain area, see the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> overview.  </p>\n<pre><code class=\"lang-cs\" name=\"StylusPluginSamples#8\">protected override void OnStylusDown(RawStylusInput rawStylusInput)\n{\n    // Run the base class before modifying the data\n    base.OnStylusDown(rawStylusInput);\n\n    // Get the StylusPoints that have come in\n    StylusPointCollection stylusPoints = rawStylusInput.GetStylusPoints();\n\n    // Modify the (X,Y) data to move the points \n    // inside the acceptable input area, if necessary\n    for (int i = 0; i &lt; stylusPoints.Count; i++)\n    {\n        StylusPoint sp = stylusPoints[i];\n        if (sp.X &lt; 50) sp.X = 50;\n        if (sp.X &gt; 250) sp.X = 250;\n        if (sp.Y &lt; 50) sp.Y = 50;\n        if (sp.Y &gt; 250) sp.Y = 250;\n        stylusPoints[i] = sp;\n    }\n\n    // Copy the modified StylusPoints back to the RawStylusInput\n    rawStylusInput.SetStylusPoints(stylusPoints);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"StylusPluginSamples#8\">Protected Overrides Sub OnStylusDown(ByVal rawStylusInput As RawStylusInput) \n    &#39; Run the base class before we modify the data\n    MyBase.OnStylusDown(rawStylusInput)\n    \n    &#39; Get the StylusPoints that have come in\n    Dim stylusPoints As StylusPointCollection = rawStylusInput.GetStylusPoints()\n    \n    &#39; Modify the (X,Y) data to move the points \n    &#39; inside the acceptable input area, if necessary.\n    Dim i As Integer\n\n    For i = 0 To stylusPoints.Count - 1\n\n        Dim sp As StylusPoint = stylusPoints(i)\n\n        If sp.X &lt; 50 Then\n            sp.X = 50\n        End If\n\n        If sp.X &gt; 250 Then\n            sp.X = 250\n        End If\n\n        If sp.Y &lt; 50 Then\n            sp.Y = 50\n        End If\n\n        If sp.Y &gt; 250 Then\n            sp.Y = 250\n        End If\n\n        stylusPoints(i) = sp\n    Next i\n    \n    &#39; Copy the modified StylusPoints back to the RawStylusInput\n    rawStylusInput.SetStylusPoints(stylusPoints)\n\nEnd Sub &#39;OnStylusDown\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusDownProcessed_System_Object_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusDownProcessed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnStylusDownProcessed(Object,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Occurs on the application UI (user interface) thread when the tablet pen touches the digitizer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnStylusDownProcessed (object callbackData, bool targetVerified);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object that the application passed to the <span class=\"xref\">stem.Windows.Input.StylusPlugIns.RawStylusInput.NotifyWhenProcessed*</span> method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetVerified</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if the pen&#39;s input was correctly routed to the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To subscribe to this method, call <a class=\"xref\" href=\"system.windows.input.stylusplugins.rawstylusinput#System_Windows_Input_StylusPlugIns_RawStylusInput_NotifyWhenProcessed_\" data-linktype=\"relative-path\">NotifyWhenProcessed</a> in the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusDown_\" data-linktype=\"relative-path\">OnStylusDown</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> that checks for the <a class=\"xref\" href=\"system.windows.ink.applicationgesture\" data-linktype=\"relative-path\">ApplicationGesture</a> gesture. The <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> calls <a class=\"xref\" href=\"system.windows.input.stylusplugins.rawstylusinput#System_Windows_Input_StylusPlugIns_RawStylusInput_NotifyWhenProcessed_\" data-linktype=\"relative-path\">NotifyWhenProcessed</a> in <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusUp_\" data-linktype=\"relative-path\">OnStylusUp</a> to subscribe to the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusUpProcessed_\" data-linktype=\"relative-path\">OnStylusUpProcessed</a> method, which is called from the application UI thread. The relationship between <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusDown_\" data-linktype=\"relative-path\">OnStylusDown</a> and on OnStylusDownProcessed is identical.  </p>\n<pre><code class=\"lang-cs\" name=\"StylusPluginSamples#12\">class RecognizerPlugin : StylusPlugIn\n{\n    GestureRecognizer recognizer;\n    \n    // StylusPointCollection that contains the stylus points of the current\n    // stroke.\n    StylusPointCollection points;\n\n    // Keeps track of the stylus to check whether two styluses are used on the\n    // digitizer.\n    int currentStylus;\n\n    public RecognizerPlugin()\n        : base()\n    {\n        recognizer = new GestureRecognizer();\n    }\n\n    // Collect the points as the user draws the stroke.\n    protected override void OnStylusDown(RawStylusInput rawStylusInput)\n    {\n        // If points is not null, there is already a stroke taking place\n        // on the digitizer, so don&#39;t create a new StylusPointsCollection.\n        if (points == null)\n        {\n            points = new StylusPointCollection(rawStylusInput.GetStylusPoints().Description);\n            points.Add(rawStylusInput.GetStylusPoints());\n            currentStylus = rawStylusInput.StylusDeviceId;\n        }\n    }\n\n    // Collect the points as the user draws the stroke.\n    protected override void OnStylusMove(RawStylusInput rawStylusInput)\n    {\n        // Check whether the stylus that started the stroke is the same, and\n        // that the element hasn&#39;t lost focus since the stroke began.\n            if (points != null &amp;&amp; currentStylus == rawStylusInput.StylusDeviceId)\n        {\n            points.Add(rawStylusInput.GetStylusPoints());\n        }\n    }\n\n    // Collect the points as the user draws the stroke.\n    protected override void OnStylusUp(RawStylusInput rawStylusInput)\n    {\n        // Check whether the stylus that started the stroke is the same, and\n        // that the element hasn&#39;t lost focus since the stroke began.\n        if (points != null &amp;&amp; currentStylus == rawStylusInput.StylusDeviceId)\n        {\n            points.Add(rawStylusInput.GetStylusPoints());\n\n            // Subscribe to the OnStylusUpProcessed method.\n            rawStylusInput.NotifyWhenProcessed(points);\n        }\n\n        points = null;\n        currentStylus = 0;\n    }\n        \n    // If the element loses focus, stop collecting the points and don&#39;t\n    // perform gesture recognition.\n    protected override void OnStylusLeave(RawStylusInput rawStylusInput, bool confirmed)\n    {\n        if (confirmed)\n        {\n            // Clear the StylusPointCollection\n            points = null;\n            currentStylus = 0;\n        }\n    }\n\n    // This method is called on the application thread.\n    protected override void OnStylusUpProcessed(object callbackData, bool targetVerified)\n    {\n        // Check that the element actually receive the OnStylusUp input.\n        if (targetVerified &amp;&amp; recognizer.IsRecognizerAvailable)\n        {\n            StylusPointCollection strokePoints = callbackData as StylusPointCollection;\n\n            if (strokePoints == null)\n            {\n                return;\n            }\n\n            // Create a StrokeCollection to pass to the GestureRecognizer.\n            Stroke newStroke = new Stroke(strokePoints);\n            StrokeCollection strokes = new StrokeCollection();\n            strokes.Add(newStroke);\n\n            ReadOnlyCollection&lt;GestureRecognitionResult&gt; results = recognizer.Recognize(strokes);\n\n            // If the GestureRecognizer recognizes the stroke as a Down\n            // gesture with strong confidence, raise an event.\n            if (results[0].ApplicationGesture == ApplicationGesture.Down &amp;&amp;\n                results[0].RecognitionConfidence == RecognitionConfidence.Strong)\n            {\n                //raise event\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"StylusPluginSamples#12\">Class RecognizerPlugin\n    Inherits StylusPlugIn\n    Private recognizer As GestureRecognizer\n\n    &#39; StylusPointCollection that contains the stylus points of the current\n    &#39; stroke.\n    Private points As StylusPointCollection\n\n    &#39; Keeps track of the stylus to check whether two styluses are used on the\n    &#39; digitizer.\n    Private currentStylus As Integer\n\n    Public Sub New()\n        recognizer = New GestureRecognizer()\n\n    End Sub &#39;New\n\n\n    &#39; Collect the points as the user draws the stroke.\n    Protected Overrides Sub OnStylusDown(ByVal rawStylusInput As RawStylusInput)\n\n        &#39; If points is not null, there is already a stroke taking place\n        &#39; on the digitizer, so don&#39;t create a new StylusPointsCollection.\n        If points Is Nothing Then\n            points = New StylusPointCollection(rawStylusInput.GetStylusPoints().Description)\n            points.Add(rawStylusInput.GetStylusPoints())\n            currentStylus = rawStylusInput.StylusDeviceId\n        End If\n\n    End Sub &#39;OnStylusDown\n\n    &#39; Collect the points as the user draws the stroke.\n    Protected Overrides Sub OnStylusMove(ByVal rawStylusInput As RawStylusInput)\n\n        &#39; Check whether the stylus that started the stroke is the same, and\n        &#39; that the element hasn&#39;t lost focus since the stroke began.\n        If Not (points Is Nothing) AndAlso currentStylus = rawStylusInput.StylusDeviceId Then\n            points.Add(rawStylusInput.GetStylusPoints())\n        End If\n\n    End Sub &#39;OnStylusMove\n\n    &#39; Collect the points as the user draws the stroke.\n    Protected Overrides Sub OnStylusUp(ByVal rawStylusInput As RawStylusInput)\n\n        &#39; Check whether the stylus that started the stroke is the same, and\n        &#39; that the element hasn&#39;t lost focus since the stroke began.\n        If Not (points Is Nothing) AndAlso currentStylus = rawStylusInput.StylusDeviceId Then\n            points.Add(rawStylusInput.GetStylusPoints())\n\n            &#39; Subscribe to the OnStylusUpProcessed method.\n            rawStylusInput.NotifyWhenProcessed(points)\n        End If\n\n        points = Nothing\n        currentStylus = 0\n\n    End Sub &#39;OnStylusUp\n\n    &#39; If the element loses focus, stop collecting the points and don&#39;t\n    &#39; perform gesture recognition.\n    Protected Overrides Sub OnStylusLeave(ByVal rawStylusInput As RawStylusInput, ByVal confirmed As Boolean)\n\n        If confirmed Then\n            &#39; Clear the StylusPointCollection\n            points = Nothing\n            currentStylus = 0\n        End If\n\n    End Sub &#39;OnStylusLeave\n\n    &#39; This method is called on the application thread.\n    Protected Overrides Sub OnStylusUpProcessed(ByVal callbackData As Object, ByVal targetVerified As Boolean)\n\n        &#39; Check that the element actually receive the OnStylusUp input.\n        If targetVerified AndAlso recognizer.IsRecognizerAvailable Then\n\n            Dim strokePoints As StylusPointCollection = callbackData\n\n            If strokePoints Is Nothing Then\n                Return\n            End If\n\n            &#39; Create a StrokeCollection to pass to the GestureRecognizer.\n            Dim newStroke As New Stroke(strokePoints)\n            Dim strokes As New StrokeCollection()\n            strokes.Add(newStroke)\n\n            Dim results As ReadOnlyCollection(Of GestureRecognitionResult) = recognizer.Recognize(strokes)\n\n            &#39; If the GestureRecognizer recognizes the stroke as a Down\n            &#39; gesture with strong confidence, raise an event.\n            If results(0).ApplicationGesture = ApplicationGesture.Down AndAlso _\n               results(0).RecognitionConfidence = RecognitionConfidence.Strong Then\n                &#39;raise event\n            End If\n        End If\n\n    End Sub &#39;OnStylusUpProcessed \nEnd Class &#39;RecognizerPlugin\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusEnter_System_Windows_Input_StylusPlugIns_RawStylusInput_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusEnter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnStylusEnter(RawStylusInput,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Occurs on a pen thread when the cursor enters the bounds of an element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnStylusEnter (System.Windows.Input.StylusPlugIns.RawStylusInput rawStylusInput, bool confirmed);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rawStylusInput</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.stylusplugins.rawstylusinput\" data-linktype=\"relative-path\">RawStylusInput</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.input.stylusplugins.rawstylusinput\" data-linktype=\"relative-path\">RawStylusInput</a> that contains information about input from the pen.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>confirmed</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if the pen actually entered the bounds of the element; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method occurs on a pen thread, so minimize work in this method to avoid impacting performance.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusLeave_System_Windows_Input_StylusPlugIns_RawStylusInput_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusLeave_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnStylusLeave(RawStylusInput,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Occurs on a pen thread when the cursor leaves the bounds of an element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnStylusLeave (System.Windows.Input.StylusPlugIns.RawStylusInput rawStylusInput, bool confirmed);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rawStylusInput</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.stylusplugins.rawstylusinput\" data-linktype=\"relative-path\">RawStylusInput</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.input.stylusplugins.rawstylusinput\" data-linktype=\"relative-path\">RawStylusInput</a> that contains information about input from the pen.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>confirmed</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if the pen actually left the bounds of the element; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method occurs on a pen thread, so minimize work in this method to avoid impacting performance.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example resets the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> when the cursor leaves the bounds of the element.  </p>\n<pre><code class=\"lang-cs\" name=\"StylusPluginSamples#20\">// StylusPointCollection that contains the stylus points of the current\n// stroke.\nStylusPointCollection points;\n\n// Keeps track of the stylus to check whether two styluses are used on the\n// digitizer.\nint currentStylus;\n</code></pre><pre><code class=\"lang-vb\" name=\"StylusPluginSamples#20\">&#39; StylusPointCollection that contains the stylus points of the current\n&#39; stroke.\nPrivate points As StylusPointCollection\n\n&#39; Keeps track of the stylus to check whether two styluses are used on the\n&#39; digitizer.\nPrivate currentStylus As Integer\n</code></pre><pre><code class=\"lang-cs\" name=\"StylusPluginSamples#14\">// If the element loses focus, stop collecting the points and don&#39;t\n// perform gesture recognition.\nprotected override void OnStylusLeave(RawStylusInput rawStylusInput, bool confirmed)\n{\n    if (confirmed)\n    {\n        // Clear the StylusPointCollection\n        points = null;\n        currentStylus = 0;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"StylusPluginSamples#14\">&#39; If the element loses focus, stop collecting the points and don&#39;t\n&#39; perform gesture recognition.\nProtected Overrides Sub OnStylusLeave(ByVal rawStylusInput As RawStylusInput, ByVal confirmed As Boolean)\n\n    If confirmed Then\n        &#39; Clear the StylusPointCollection\n        points = Nothing\n        currentStylus = 0\n    End If\n\nEnd Sub &#39;OnStylusLeave\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusMove_System_Windows_Input_StylusPlugIns_RawStylusInput_\">\r\n    \r\n            <a id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusMove_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnStylusMove(RawStylusInput)</div>        \r\n          </div>\r\n    \r\n            <p>Occurs on a pen thread when the tablet pen moves on the digitizer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnStylusMove (System.Windows.Input.StylusPlugIns.RawStylusInput rawStylusInput);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rawStylusInput</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.stylusplugins.rawstylusinput\" data-linktype=\"relative-path\">RawStylusInput</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.input.stylusplugins.rawstylusinput\" data-linktype=\"relative-path\">RawStylusInput</a> that contains information about input from the pen.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method occurs on a pen thread, so minimize work in this method to avoid impacting performance.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to override the OnStylusMove method. To create a <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> that restricts ink to a certain area, see the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> overview.  </p>\n<pre><code class=\"lang-cs\" name=\"StylusPluginSamples#9\">protected override void OnStylusMove(RawStylusInput rawStylusInput)\n{\n    // Run the base class before modifying the data\n    base.OnStylusMove(rawStylusInput);\n\n    // Get the StylusPoints that have come in\n    StylusPointCollection stylusPoints = rawStylusInput.GetStylusPoints();\n\n    // Modify the (X,Y) data to move the points \n    // inside the acceptable input area, if necessary\n    for (int i = 0; i &lt; stylusPoints.Count; i++)\n    {\n        StylusPoint sp = stylusPoints[i];\n        if (sp.X &lt; 50) sp.X = 50;\n        if (sp.X &gt; 250) sp.X = 250;\n        if (sp.Y &lt; 50) sp.Y = 50;\n        if (sp.Y &gt; 250) sp.Y = 250;\n        stylusPoints[i] = sp;\n    }\n\n    // Copy the modified StylusPoints back to the RawStylusInput\n    rawStylusInput.SetStylusPoints(stylusPoints);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"StylusPluginSamples#9\">Protected Overrides Sub OnStylusMove(ByVal rawStylusInput As RawStylusInput) \n\n    &#39; Run the base class before we modify the data\n    MyBase.OnStylusMove(rawStylusInput)\n    \n    &#39; Get the StylusPoints that have come in\n    Dim stylusPoints As StylusPointCollection = rawStylusInput.GetStylusPoints()\n    \n    &#39; Modify the (X,Y) data to move the points \n    &#39; inside the acceptable input area, if necessary.\n    Dim i As Integer\n    For i = 0 To stylusPoints.Count - 1\n\n        Dim sp As StylusPoint = stylusPoints(i)\n\n        If sp.X &lt; 50 Then\n            sp.X = 50\n        End If\n\n        If sp.X &gt; 250 Then\n            sp.X = 250\n        End If\n\n        If sp.Y &lt; 50 Then\n            sp.Y = 50\n        End If\n\n        If sp.Y &gt; 250 Then\n            sp.Y = 250\n        End If\n\n        stylusPoints(i) = sp\n\n    Next i\n    \n    &#39; Copy the modified StylusPoints back to the RawStylusInput.\n    rawStylusInput.SetStylusPoints(stylusPoints)\n\nEnd Sub &#39;OnStylusMove\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusMoveProcessed_System_Object_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusMoveProcessed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnStylusMoveProcessed(Object,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Occurs on the application UI (user interface) thread when the tablet pen moves on the digitizer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnStylusMoveProcessed (object callbackData, bool targetVerified);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object that the application passed to the <span class=\"xref\">stem.Windows.Input.StylusPlugIns.RawStylusInput.NotifyWhenProcessed*</span> method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetVerified</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if the pen&#39;s input was correctly routed to the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To subscribe to this method, call <a class=\"xref\" href=\"system.windows.input.stylusplugins.rawstylusinput#System_Windows_Input_StylusPlugIns_RawStylusInput_NotifyWhenProcessed_\" data-linktype=\"relative-path\">NotifyWhenProcessed</a> in the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusMove_\" data-linktype=\"relative-path\">OnStylusMove</a> method</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> that checks for the <a class=\"xref\" href=\"system.windows.ink.applicationgesture\" data-linktype=\"relative-path\">ApplicationGesture</a> gesture. The <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> calls <a class=\"xref\" href=\"system.windows.input.stylusplugins.rawstylusinput#System_Windows_Input_StylusPlugIns_RawStylusInput_NotifyWhenProcessed_\" data-linktype=\"relative-path\">NotifyWhenProcessed</a> in <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusUp_\" data-linktype=\"relative-path\">OnStylusUp</a> to subscribe to the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusUpProcessed_\" data-linktype=\"relative-path\">OnStylusUpProcessed</a> method, which is called from the application UI thread. The relationship between <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusMove_\" data-linktype=\"relative-path\">OnStylusMove</a> and on OnStylusMoveProcessed is identical.  </p>\n<pre><code class=\"lang-cs\" name=\"StylusPluginSamples#12\">class RecognizerPlugin : StylusPlugIn\n{\n    GestureRecognizer recognizer;\n    \n    // StylusPointCollection that contains the stylus points of the current\n    // stroke.\n    StylusPointCollection points;\n\n    // Keeps track of the stylus to check whether two styluses are used on the\n    // digitizer.\n    int currentStylus;\n\n    public RecognizerPlugin()\n        : base()\n    {\n        recognizer = new GestureRecognizer();\n    }\n\n    // Collect the points as the user draws the stroke.\n    protected override void OnStylusDown(RawStylusInput rawStylusInput)\n    {\n        // If points is not null, there is already a stroke taking place\n        // on the digitizer, so don&#39;t create a new StylusPointsCollection.\n        if (points == null)\n        {\n            points = new StylusPointCollection(rawStylusInput.GetStylusPoints().Description);\n            points.Add(rawStylusInput.GetStylusPoints());\n            currentStylus = rawStylusInput.StylusDeviceId;\n        }\n    }\n\n    // Collect the points as the user draws the stroke.\n    protected override void OnStylusMove(RawStylusInput rawStylusInput)\n    {\n        // Check whether the stylus that started the stroke is the same, and\n        // that the element hasn&#39;t lost focus since the stroke began.\n            if (points != null &amp;&amp; currentStylus == rawStylusInput.StylusDeviceId)\n        {\n            points.Add(rawStylusInput.GetStylusPoints());\n        }\n    }\n\n    // Collect the points as the user draws the stroke.\n    protected override void OnStylusUp(RawStylusInput rawStylusInput)\n    {\n        // Check whether the stylus that started the stroke is the same, and\n        // that the element hasn&#39;t lost focus since the stroke began.\n        if (points != null &amp;&amp; currentStylus == rawStylusInput.StylusDeviceId)\n        {\n            points.Add(rawStylusInput.GetStylusPoints());\n\n            // Subscribe to the OnStylusUpProcessed method.\n            rawStylusInput.NotifyWhenProcessed(points);\n        }\n\n        points = null;\n        currentStylus = 0;\n    }\n        \n    // If the element loses focus, stop collecting the points and don&#39;t\n    // perform gesture recognition.\n    protected override void OnStylusLeave(RawStylusInput rawStylusInput, bool confirmed)\n    {\n        if (confirmed)\n        {\n            // Clear the StylusPointCollection\n            points = null;\n            currentStylus = 0;\n        }\n    }\n\n    // This method is called on the application thread.\n    protected override void OnStylusUpProcessed(object callbackData, bool targetVerified)\n    {\n        // Check that the element actually receive the OnStylusUp input.\n        if (targetVerified &amp;&amp; recognizer.IsRecognizerAvailable)\n        {\n            StylusPointCollection strokePoints = callbackData as StylusPointCollection;\n\n            if (strokePoints == null)\n            {\n                return;\n            }\n\n            // Create a StrokeCollection to pass to the GestureRecognizer.\n            Stroke newStroke = new Stroke(strokePoints);\n            StrokeCollection strokes = new StrokeCollection();\n            strokes.Add(newStroke);\n\n            ReadOnlyCollection&lt;GestureRecognitionResult&gt; results = recognizer.Recognize(strokes);\n\n            // If the GestureRecognizer recognizes the stroke as a Down\n            // gesture with strong confidence, raise an event.\n            if (results[0].ApplicationGesture == ApplicationGesture.Down &amp;&amp;\n                results[0].RecognitionConfidence == RecognitionConfidence.Strong)\n            {\n                //raise event\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"StylusPluginSamples#12\">Class RecognizerPlugin\n    Inherits StylusPlugIn\n    Private recognizer As GestureRecognizer\n\n    &#39; StylusPointCollection that contains the stylus points of the current\n    &#39; stroke.\n    Private points As StylusPointCollection\n\n    &#39; Keeps track of the stylus to check whether two styluses are used on the\n    &#39; digitizer.\n    Private currentStylus As Integer\n\n    Public Sub New()\n        recognizer = New GestureRecognizer()\n\n    End Sub &#39;New\n\n\n    &#39; Collect the points as the user draws the stroke.\n    Protected Overrides Sub OnStylusDown(ByVal rawStylusInput As RawStylusInput)\n\n        &#39; If points is not null, there is already a stroke taking place\n        &#39; on the digitizer, so don&#39;t create a new StylusPointsCollection.\n        If points Is Nothing Then\n            points = New StylusPointCollection(rawStylusInput.GetStylusPoints().Description)\n            points.Add(rawStylusInput.GetStylusPoints())\n            currentStylus = rawStylusInput.StylusDeviceId\n        End If\n\n    End Sub &#39;OnStylusDown\n\n    &#39; Collect the points as the user draws the stroke.\n    Protected Overrides Sub OnStylusMove(ByVal rawStylusInput As RawStylusInput)\n\n        &#39; Check whether the stylus that started the stroke is the same, and\n        &#39; that the element hasn&#39;t lost focus since the stroke began.\n        If Not (points Is Nothing) AndAlso currentStylus = rawStylusInput.StylusDeviceId Then\n            points.Add(rawStylusInput.GetStylusPoints())\n        End If\n\n    End Sub &#39;OnStylusMove\n\n    &#39; Collect the points as the user draws the stroke.\n    Protected Overrides Sub OnStylusUp(ByVal rawStylusInput As RawStylusInput)\n\n        &#39; Check whether the stylus that started the stroke is the same, and\n        &#39; that the element hasn&#39;t lost focus since the stroke began.\n        If Not (points Is Nothing) AndAlso currentStylus = rawStylusInput.StylusDeviceId Then\n            points.Add(rawStylusInput.GetStylusPoints())\n\n            &#39; Subscribe to the OnStylusUpProcessed method.\n            rawStylusInput.NotifyWhenProcessed(points)\n        End If\n\n        points = Nothing\n        currentStylus = 0\n\n    End Sub &#39;OnStylusUp\n\n    &#39; If the element loses focus, stop collecting the points and don&#39;t\n    &#39; perform gesture recognition.\n    Protected Overrides Sub OnStylusLeave(ByVal rawStylusInput As RawStylusInput, ByVal confirmed As Boolean)\n\n        If confirmed Then\n            &#39; Clear the StylusPointCollection\n            points = Nothing\n            currentStylus = 0\n        End If\n\n    End Sub &#39;OnStylusLeave\n\n    &#39; This method is called on the application thread.\n    Protected Overrides Sub OnStylusUpProcessed(ByVal callbackData As Object, ByVal targetVerified As Boolean)\n\n        &#39; Check that the element actually receive the OnStylusUp input.\n        If targetVerified AndAlso recognizer.IsRecognizerAvailable Then\n\n            Dim strokePoints As StylusPointCollection = callbackData\n\n            If strokePoints Is Nothing Then\n                Return\n            End If\n\n            &#39; Create a StrokeCollection to pass to the GestureRecognizer.\n            Dim newStroke As New Stroke(strokePoints)\n            Dim strokes As New StrokeCollection()\n            strokes.Add(newStroke)\n\n            Dim results As ReadOnlyCollection(Of GestureRecognitionResult) = recognizer.Recognize(strokes)\n\n            &#39; If the GestureRecognizer recognizes the stroke as a Down\n            &#39; gesture with strong confidence, raise an event.\n            If results(0).ApplicationGesture = ApplicationGesture.Down AndAlso _\n               results(0).RecognitionConfidence = RecognitionConfidence.Strong Then\n                &#39;raise event\n            End If\n        End If\n\n    End Sub &#39;OnStylusUpProcessed \nEnd Class &#39;RecognizerPlugin\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusUp_System_Windows_Input_StylusPlugIns_RawStylusInput_\">\r\n    \r\n            <a id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusUp_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnStylusUp(RawStylusInput)</div>        \r\n          </div>\r\n    \r\n            <p>Occurs on a pen thread when the user lifts the tablet pen from the digitizer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnStylusUp (System.Windows.Input.StylusPlugIns.RawStylusInput rawStylusInput);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rawStylusInput</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.stylusplugins.rawstylusinput\" data-linktype=\"relative-path\">RawStylusInput</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.input.stylusplugins.rawstylusinput\" data-linktype=\"relative-path\">RawStylusInput</a> that contains information about input from the pen.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method occurs on a pen thread, so minimize work in this method to avoid impacting performance.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to override the OnStylusUp method. To create a <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> that restricts ink to a certain area, see the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> overview.  </p>\n<pre><code class=\"lang-cs\" name=\"StylusPluginSamples#10\">protected override void OnStylusUp(RawStylusInput rawStylusInput)\n{\n    // Run the base class before modifying the data\n    base.OnStylusUp(rawStylusInput);\n\n    // Get the StylusPoints that have come in\n    StylusPointCollection stylusPoints = rawStylusInput.GetStylusPoints();\n\n    // Modify the (X,Y) data to move the points \n    // inside the acceptable input area, if necessary\n    for (int i = 0; i &lt; stylusPoints.Count; i++)\n    {\n        StylusPoint sp = stylusPoints[i];\n        if (sp.X &lt; 50) sp.X = 50;\n        if (sp.X &gt; 250) sp.X = 250;\n        if (sp.Y &lt; 50) sp.Y = 50;\n        if (sp.Y &gt; 250) sp.Y = 250;\n        stylusPoints[i] = sp;\n    }\n\n    // Copy the modified StylusPoints back to the RawStylusInput\n    rawStylusInput.SetStylusPoints(stylusPoints);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"StylusPluginSamples#10\">Protected Overrides Sub OnStylusUp(ByVal rawStylusInput As RawStylusInput) \n\n    &#39; Run the base class before we modify the data\n    MyBase.OnStylusUp(rawStylusInput)\n    \n    &#39; Get the StylusPoints that have come in\n    Dim stylusPoints As StylusPointCollection = rawStylusInput.GetStylusPoints()\n    \n    &#39; Modify the (X,Y) data to move the points \n    &#39; inside the acceptable input area, if necessary\n    Dim i As Integer\n\n    For i = 0 To stylusPoints.Count - 1\n\n        Dim sp As StylusPoint = stylusPoints(i)\n\n        If sp.X &lt; 50 Then\n            sp.X = 50\n        End If\n\n        If sp.X &gt; 250 Then\n            sp.X = 250\n        End If\n\n        If sp.Y &lt; 50 Then\n            sp.Y = 50\n        End If\n\n        If sp.Y &gt; 250 Then\n            sp.Y = 250\n        End If\n\n        stylusPoints(i) = sp\n\n    Next i\n    \n    &#39; Copy the modified StylusPoints back to the RawStylusInput.\n    rawStylusInput.SetStylusPoints(stylusPoints)\n\nEnd Sub &#39;OnStylusUp\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusUpProcessed_System_Object_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusUpProcessed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnStylusUpProcessed(Object,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Occurs on the application UI (user interface) thread when the user lifts the tablet pen from the digitizer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnStylusUpProcessed (object callbackData, bool targetVerified);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object that the application passed to the <span class=\"xref\">stem.Windows.Input.StylusPlugIns.RawStylusInput.NotifyWhenProcessed*</span> method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetVerified</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if the pen&#39;s input was correctly routed to the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To subscribe to this method, call <a class=\"xref\" href=\"system.windows.input.stylusplugins.rawstylusinput#System_Windows_Input_StylusPlugIns_RawStylusInput_NotifyWhenProcessed_\" data-linktype=\"relative-path\">NotifyWhenProcessed</a> in the <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin#System_Windows_Input_StylusPlugIns_StylusPlugIn_OnStylusUp_\" data-linktype=\"relative-path\">OnStylusUp</a> method</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> that checks for the <a class=\"xref\" href=\"system.windows.ink.applicationgesture\" data-linktype=\"relative-path\">ApplicationGesture</a> gesture. The <a class=\"xref\" href=\"system.windows.input.stylusplugins.stylusplugin\" data-linktype=\"relative-path\">StylusPlugIn</a> checks for the gesture in the OnStylusUpProcessed method, which is called from the application UI thread.  </p>\n<pre><code class=\"lang-cs\" name=\"StylusPluginSamples#12\">class RecognizerPlugin : StylusPlugIn\n{\n    GestureRecognizer recognizer;\n    \n    // StylusPointCollection that contains the stylus points of the current\n    // stroke.\n    StylusPointCollection points;\n\n    // Keeps track of the stylus to check whether two styluses are used on the\n    // digitizer.\n    int currentStylus;\n\n    public RecognizerPlugin()\n        : base()\n    {\n        recognizer = new GestureRecognizer();\n    }\n\n    // Collect the points as the user draws the stroke.\n    protected override void OnStylusDown(RawStylusInput rawStylusInput)\n    {\n        // If points is not null, there is already a stroke taking place\n        // on the digitizer, so don&#39;t create a new StylusPointsCollection.\n        if (points == null)\n        {\n            points = new StylusPointCollection(rawStylusInput.GetStylusPoints().Description);\n            points.Add(rawStylusInput.GetStylusPoints());\n            currentStylus = rawStylusInput.StylusDeviceId;\n        }\n    }\n\n    // Collect the points as the user draws the stroke.\n    protected override void OnStylusMove(RawStylusInput rawStylusInput)\n    {\n        // Check whether the stylus that started the stroke is the same, and\n        // that the element hasn&#39;t lost focus since the stroke began.\n            if (points != null &amp;&amp; currentStylus == rawStylusInput.StylusDeviceId)\n        {\n            points.Add(rawStylusInput.GetStylusPoints());\n        }\n    }\n\n    // Collect the points as the user draws the stroke.\n    protected override void OnStylusUp(RawStylusInput rawStylusInput)\n    {\n        // Check whether the stylus that started the stroke is the same, and\n        // that the element hasn&#39;t lost focus since the stroke began.\n        if (points != null &amp;&amp; currentStylus == rawStylusInput.StylusDeviceId)\n        {\n            points.Add(rawStylusInput.GetStylusPoints());\n\n            // Subscribe to the OnStylusUpProcessed method.\n            rawStylusInput.NotifyWhenProcessed(points);\n        }\n\n        points = null;\n        currentStylus = 0;\n    }\n        \n    // If the element loses focus, stop collecting the points and don&#39;t\n    // perform gesture recognition.\n    protected override void OnStylusLeave(RawStylusInput rawStylusInput, bool confirmed)\n    {\n        if (confirmed)\n        {\n            // Clear the StylusPointCollection\n            points = null;\n            currentStylus = 0;\n        }\n    }\n\n    // This method is called on the application thread.\n    protected override void OnStylusUpProcessed(object callbackData, bool targetVerified)\n    {\n        // Check that the element actually receive the OnStylusUp input.\n        if (targetVerified &amp;&amp; recognizer.IsRecognizerAvailable)\n        {\n            StylusPointCollection strokePoints = callbackData as StylusPointCollection;\n\n            if (strokePoints == null)\n            {\n                return;\n            }\n\n            // Create a StrokeCollection to pass to the GestureRecognizer.\n            Stroke newStroke = new Stroke(strokePoints);\n            StrokeCollection strokes = new StrokeCollection();\n            strokes.Add(newStroke);\n\n            ReadOnlyCollection&lt;GestureRecognitionResult&gt; results = recognizer.Recognize(strokes);\n\n            // If the GestureRecognizer recognizes the stroke as a Down\n            // gesture with strong confidence, raise an event.\n            if (results[0].ApplicationGesture == ApplicationGesture.Down &amp;&amp;\n                results[0].RecognitionConfidence == RecognitionConfidence.Strong)\n            {\n                //raise event\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"StylusPluginSamples#12\">Class RecognizerPlugin\n    Inherits StylusPlugIn\n    Private recognizer As GestureRecognizer\n\n    &#39; StylusPointCollection that contains the stylus points of the current\n    &#39; stroke.\n    Private points As StylusPointCollection\n\n    &#39; Keeps track of the stylus to check whether two styluses are used on the\n    &#39; digitizer.\n    Private currentStylus As Integer\n\n    Public Sub New()\n        recognizer = New GestureRecognizer()\n\n    End Sub &#39;New\n\n\n    &#39; Collect the points as the user draws the stroke.\n    Protected Overrides Sub OnStylusDown(ByVal rawStylusInput As RawStylusInput)\n\n        &#39; If points is not null, there is already a stroke taking place\n        &#39; on the digitizer, so don&#39;t create a new StylusPointsCollection.\n        If points Is Nothing Then\n            points = New StylusPointCollection(rawStylusInput.GetStylusPoints().Description)\n            points.Add(rawStylusInput.GetStylusPoints())\n            currentStylus = rawStylusInput.StylusDeviceId\n        End If\n\n    End Sub &#39;OnStylusDown\n\n    &#39; Collect the points as the user draws the stroke.\n    Protected Overrides Sub OnStylusMove(ByVal rawStylusInput As RawStylusInput)\n\n        &#39; Check whether the stylus that started the stroke is the same, and\n        &#39; that the element hasn&#39;t lost focus since the stroke began.\n        If Not (points Is Nothing) AndAlso currentStylus = rawStylusInput.StylusDeviceId Then\n            points.Add(rawStylusInput.GetStylusPoints())\n        End If\n\n    End Sub &#39;OnStylusMove\n\n    &#39; Collect the points as the user draws the stroke.\n    Protected Overrides Sub OnStylusUp(ByVal rawStylusInput As RawStylusInput)\n\n        &#39; Check whether the stylus that started the stroke is the same, and\n        &#39; that the element hasn&#39;t lost focus since the stroke began.\n        If Not (points Is Nothing) AndAlso currentStylus = rawStylusInput.StylusDeviceId Then\n            points.Add(rawStylusInput.GetStylusPoints())\n\n            &#39; Subscribe to the OnStylusUpProcessed method.\n            rawStylusInput.NotifyWhenProcessed(points)\n        End If\n\n        points = Nothing\n        currentStylus = 0\n\n    End Sub &#39;OnStylusUp\n\n    &#39; If the element loses focus, stop collecting the points and don&#39;t\n    &#39; perform gesture recognition.\n    Protected Overrides Sub OnStylusLeave(ByVal rawStylusInput As RawStylusInput, ByVal confirmed As Boolean)\n\n        If confirmed Then\n            &#39; Clear the StylusPointCollection\n            points = Nothing\n            currentStylus = 0\n        End If\n\n    End Sub &#39;OnStylusLeave\n\n    &#39; This method is called on the application thread.\n    Protected Overrides Sub OnStylusUpProcessed(ByVal callbackData As Object, ByVal targetVerified As Boolean)\n\n        &#39; Check that the element actually receive the OnStylusUp input.\n        If targetVerified AndAlso recognizer.IsRecognizerAvailable Then\n\n            Dim strokePoints As StylusPointCollection = callbackData\n\n            If strokePoints Is Nothing Then\n                Return\n            End If\n\n            &#39; Create a StrokeCollection to pass to the GestureRecognizer.\n            Dim newStroke As New Stroke(strokePoints)\n            Dim strokes As New StrokeCollection()\n            strokes.Add(newStroke)\n\n            Dim results As ReadOnlyCollection(Of GestureRecognitionResult) = recognizer.Recognize(strokes)\n\n            &#39; If the GestureRecognizer recognizes the stroke as a Down\n            &#39; gesture with strong confidence, raise an event.\n            If results(0).ApplicationGesture = ApplicationGesture.Down AndAlso _\n               results(0).RecognitionConfidence = RecognitionConfidence.Strong Then\n                &#39;raise event\n            End If\n        End If\n\n    End Sub &#39;OnStylusUpProcessed \nEnd Class &#39;RecognizerPlugin\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Input.StylusPlugIns.StylusPlugIn.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Input.StylusPlugIns.StylusPlugIn.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.StylusPlugIns.StylusPlugIn\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.StylusPlugIns.StylusPlugIn..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.StylusPlugIns.StylusPlugIn.Element\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.StylusPlugIns.StylusPlugIn.ElementBounds\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.StylusPlugIns.StylusPlugIn.Enabled\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.StylusPlugIns.StylusPlugIn.IsActiveForInput\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.StylusPlugIns.StylusPlugIn.OnAdded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.StylusPlugIns.StylusPlugIn.OnEnabledChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.StylusPlugIns.StylusPlugIn.OnIsActiveForInputChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.StylusPlugIns.StylusPlugIn.OnRemoved\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusDownProcessed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusMove\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusMoveProcessed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusUpProcessed\">\r\n<meta name=\"APILocation\" content=\"PresentationCore.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"0cb96150-523c-77c8-1d6b-b5f6a312b6a6\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a plug-in that can be added to a control&amp;#39;s  property.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Input.StylusPlugIns/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Input.StylusPlugIns.StylusPlugIn\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Input.StylusPlugIns.StylusPlugIn.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Input.StylusPlugIns.StylusPlugIn.yml","open_to_public_contributors":true,"api_name":["System.Windows.Input.StylusPlugIns.StylusPlugIn","System.Windows.Input.StylusPlugIns.StylusPlugIn..ctor","System.Windows.Input.StylusPlugIns.StylusPlugIn.Element","System.Windows.Input.StylusPlugIns.StylusPlugIn.ElementBounds","System.Windows.Input.StylusPlugIns.StylusPlugIn.Enabled","System.Windows.Input.StylusPlugIns.StylusPlugIn.IsActiveForInput","System.Windows.Input.StylusPlugIns.StylusPlugIn.OnAdded","System.Windows.Input.StylusPlugIns.StylusPlugIn.OnEnabledChanged","System.Windows.Input.StylusPlugIns.StylusPlugIn.OnIsActiveForInputChanged","System.Windows.Input.StylusPlugIns.StylusPlugIn.OnRemoved","System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusDown","System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusDownProcessed","System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusEnter","System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusLeave","System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusMove","System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusMoveProcessed","System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusUp","System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusUpProcessed"],"api_location":["PresentationCore.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Input.StylusPlugIns.StylusPlugIn","System::Windows::Input::StylusPlugIns::StylusPlugIn","System.Windows.Input.StylusPlugIns.StylusPlugIn.#ctor","System::Windows::Input::StylusPlugIns::StylusPlugIn::#ctor","System.Windows.Input.StylusPlugIns.StylusPlugIn.Element","System::Windows::Input::StylusPlugIns::StylusPlugIn::Element","System.Windows.Input.StylusPlugIns.StylusPlugIn.ElementBounds","System::Windows::Input::StylusPlugIns::StylusPlugIn::ElementBounds","System.Windows.Input.StylusPlugIns.StylusPlugIn.Enabled","System::Windows::Input::StylusPlugIns::StylusPlugIn::Enabled","System.Windows.Input.StylusPlugIns.StylusPlugIn.IsActiveForInput","System::Windows::Input::StylusPlugIns::StylusPlugIn::IsActiveForInput","System.Windows.Input.StylusPlugIns.StylusPlugIn.OnAdded","System::Windows::Input::StylusPlugIns::StylusPlugIn::OnAdded","System.Windows.Input.StylusPlugIns.StylusPlugIn.OnEnabledChanged","System::Windows::Input::StylusPlugIns::StylusPlugIn::OnEnabledChanged","System.Windows.Input.StylusPlugIns.StylusPlugIn.OnIsActiveForInputChanged","System::Windows::Input::StylusPlugIns::StylusPlugIn::OnIsActiveForInputChanged","System.Windows.Input.StylusPlugIns.StylusPlugIn.OnRemoved","System::Windows::Input::StylusPlugIns::StylusPlugIn::OnRemoved","System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusDown","System::Windows::Input::StylusPlugIns::StylusPlugIn::OnStylusDown","System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusDownProcessed","System::Windows::Input::StylusPlugIns::StylusPlugIn::OnStylusDownProcessed","System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusEnter","System::Windows::Input::StylusPlugIns::StylusPlugIn::OnStylusEnter","System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusLeave","System::Windows::Input::StylusPlugIns::StylusPlugIn::OnStylusLeave","System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusMove","System::Windows::Input::StylusPlugIns::StylusPlugIn::OnStylusMove","System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusMoveProcessed","System::Windows::Input::StylusPlugIns::StylusPlugIn::OnStylusMoveProcessed","System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusUp","System::Windows::Input::StylusPlugIns::StylusPlugIn::OnStylusUp","System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusUpProcessed","System::Windows::Input::StylusPlugIns::StylusPlugIn::OnStylusUpProcessed"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"0cb96150-523c-77c8-1d6b-b5f6a312b6a6","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Input.StylusPlugIns/StylusPlugIn.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"StylusPlugIn class | Microsoft Docs","_op_ogTitle":"StylusPlugIn class","description":"Represents a plug-in that can be added to a control&#39;s  property.\n","toc_asset_id":"_splitted/System.Windows.Input.StylusPlugIns/toc.json","toc_rel":"_splitted/System.Windows.Input.StylusPlugIns/toc.json","source_url":"","ms.assetid":"System.Windows.Input.StylusPlugIns.StylusPlugIn","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.input.stylusplugins.stylusplugin","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.input.stylusplugins.stylusplugin","fileRelativePath":"System.Windows.Input.StylusPlugIns.StylusPlugIn.html"},"themesRelativePathToOutputRoot":"_themes/"}