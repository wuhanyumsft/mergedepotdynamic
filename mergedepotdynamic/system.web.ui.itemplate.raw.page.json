{"content":"    \r\n    <h1 id=\"System_Web_UI_ITemplate\">\r\n      <span class=\"lang-csharp\">ITemplate</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines the behavior for populating a templated ASP.NET server control with child controls. The child controls represent the inline templates defined on the page.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface ITemplate</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This interface is used by custom server controls, but never implemented by them. ASP.NET always implements it.</p>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_ITemplate_InstantiateIn_System_Web_UI_Control_\" data-linktype=\"self-bookmark\">InstantiateIn(Control)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When implemented by a class, defines the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> object that child controls and templates belong to. These child controls are in turn defined within an inline template.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_ITemplate_InstantiateIn_System_Web_UI_Control_\">\r\n    \r\n            <a id=\"System_Web_UI_ITemplate_InstantiateIn_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InstantiateIn(Control)</div>        \r\n          </div>\r\n    \r\n            <p>When implemented by a class, defines the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> object that child controls and templates belong to. These child controls are in turn defined within an inline template.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void InstantiateIn (System.Web.UI.Control container);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>container</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> object to contain the instances of controls from the inline template.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When developing templated server controls, you do not need to implement this method; the .NET Framework provides the implementation for you.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-vb\" name=\"ITemplate_Interface#2\">   &#39; Override the ITemplate.InstantiateIn method to ensure \n   &#39; that the templates are created in a Literal control and\n   &#39; that the Literal object&#39;s DataBinding event is associated\n   &#39; with the BindData method.\n   Public Sub InstantiateIn(container As Control) Implements ITemplate.InstantiateIn\n      Dim l As New Literal()\n      AddHandler l.DataBinding, AddressOf Me.BindData\n      container.Controls.Add(l)\n   End Sub &#39;InstantiateIn\n   \n   &#39; Create a public method that will handle the\n   &#39; DataBinding event called in the InstantiateIn method.\n   Public Sub BindData(sender As Object, e As EventArgs)\n      Dim l As Literal = CType(sender, Literal)\n      Dim container As DataGridItem = CType(l.NamingContainer, DataGridItem)\n      l.Text = CType(container.DataItem, DataRowView)(column).ToString()\n   End Sub &#39;BindData \n</code></pre><pre><code class=\"lang-cs\" name=\"ITemplate_Interface#2\">        // Override the ITemplate.InstantiateIn method to ensure \n        // that the templates are created in a Literal control and\n        // that the Literal object&#39;s DataBinding event is associated\n        // with the BindData method.\n        public void InstantiateIn(Control container)\n        {\n            Literal l = new Literal();\n            l.DataBinding += new EventHandler(this.BindData);\n            container.Controls.Add(l);\n        }\n        // Create a public method that will handle the\n        // DataBinding event called in the InstantiateIn method.\n        public void BindData(object sender, EventArgs e)\n        {\n            Literal l = (Literal) sender;\n            DataGridItem container = (DataGridItem) l.NamingContainer;\n            l.Text = ((DataRowView) container.DataItem)[column].ToString();\n    \n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.ITemplate.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.ITemplate.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.ITemplate\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.ITemplate.InstantiateIn\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"c57fd8b9-7296-53a7-7072-81cd479374df\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines the behavior for populating a templated ASP.NET server control with child controls. The child controls represent the inline templates defined on the page.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.UI/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.ITemplate\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.ITemplate.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.ITemplate.yml","open_to_public_contributors":true,"api_name":["System.Web.UI.ITemplate","System.Web.UI.ITemplate.InstantiateIn"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.ITemplate","System::Web::UI::ITemplate","System.Web.UI.ITemplate.InstantiateIn","System::Web::UI::ITemplate::InstantiateIn"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"c57fd8b9-7296-53a7-7072-81cd479374df","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.UI/ITemplate.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ITemplate interface | Microsoft Docs","_op_ogTitle":"ITemplate interface","description":"Defines the behavior for populating a templated ASP.NET server control with child controls. The child controls represent the inline templates defined on the page.\n","toc_asset_id":"_splitted/System.Web.UI/toc.json","toc_rel":"_splitted/System.Web.UI/toc.json","source_url":"","ms.assetid":"System.Web.UI.ITemplate","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.itemplate","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.itemplate","fileRelativePath":"System.Web.UI.ITemplate.html"},"themesRelativePathToOutputRoot":"_themes/"}