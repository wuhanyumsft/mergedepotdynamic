{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ExpandoObject</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents an object whose members can be dynamically added and removed at run time.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public sealed class ExpandoObject : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;, System.Collections.Generic.IDictionary&lt;string,object&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;, System.ComponentModel.INotifyPropertyChanged, System.Dynamic.IDynamicMetaObjectProvider</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">ExpandoObject</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The <code>ExpandoObject</code> class enables you to add and delete members of its instances at run time and also to set and get values of these members. This class supports dynamic binding, which enables you to use standard syntax like <code>sampleObject.sampleMember</code> instead of more complex syntax like <code>sampleObject.GetAttribute(&quot;sampleMember&quot;)</code>.  </p>\n<p> The <code>ExpandoObject</code> class implements the standard Dynamic Language Runtime (DLR) interface <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a>, which enables you to share instances of the <code>ExpandoObject</code> class between languages that support the DLR interoperability model. For example, you can create an instance of the <code>ExpandoObject</code> class in C# and then pass it to an IronPython function. For more information, see <a href=\"../Topic/Dynamic%20Language%20Runtime%20Overview.md\" data-linktype=\"relative-path\">Dynamic Language Runtime Overview</a> documentation on the <a href=\"http://go.microsoft.com/fwlink/?LinkId=141028\" data-linktype=\"external\">CodePlex</a> Web site, and <a href=\"http://go.microsoft.com/fwlink/?LinkID=169157\" data-linktype=\"external\">Introducing the ExpandoObject</a> on the C# Frequently Asked Questions Web site.  </p>\n<p> The <code>ExpandoObject</code> class is an implementation of the dynamic object concept that enables getting, setting, and invoking members. If you want to define types that have their own dynamic dispatch semantics, use the <a class=\"xref\" href=\"system.dynamic.dynamicobject\" data-linktype=\"relative-path\">DynamicObject</a> class. If you want to define how dynamic objects participate in the interoperability protocol and manage DLR fast dynamic dispatch caching, create your own implementation of the <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> interface.  </p>\n<h2 id=\"creating-an-instance\">Creating an Instance</h2>\n<p> In C#, to enable late binding for an instance of the <code>ExpandoObject</code> class, you must use the <code>dynamic</code> keyword. For more information, see <a href=\"../Topic/Using%20Type%20dynamic%20(C%23%20Programming%20Guide).md\" data-linktype=\"relative-path\">Using Type dynamic</a>.  </p>\n<p> In Visual Basic, dynamic operations are supported by late binding. For more information, see <a href=\"../Topic/Early%20and%20Late%20Binding%20(Visual%20Basic).md\" data-linktype=\"relative-path\">Early and Late Binding</a>.  </p>\n<p> The following code example demonstrates how to create an instance of the <code>ExpandoObject</code> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Dynamic.ExpandoObject#1\">        Dim sampleObject As Object = New ExpandoObject()\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Dynamic.ExpandoObject#1\">            dynamic sampleObject = new ExpandoObject();\n</code></pre><h2 id=\"adding-new-members\">Adding New Members</h2>\n<p> You can add properties, methods, and events to instances of the <code>ExpandoObject</code> class.  </p>\n<p> The following code example demonstrates how to add a new property to an instance of the <code>ExpandoObject</code> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Dynamic.ExpandoObject#2\">        sampleObject.Test = &quot;Dynamic Property&quot;\n        Console.WriteLine(sampleObject.test)\n        Console.WriteLine(sampleObject.test.GetType())\n        &#39; This code example produces the following output:\n        &#39; Dynamic Property\n        &#39; System.String\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Dynamic.ExpandoObject#2\">            sampleObject.test = &quot;Dynamic Property&quot;;\n            Console.WriteLine(sampleObject.test);\n            Console.WriteLine(sampleObject.test.GetType());\n            // This code example produces the following output:\n            // Dynamic Property\n            // System.String\n</code></pre><p> The methods represent lambda expressions that are stored as delegates, which can be invoked when they are needed. The following code example demonstrates how to add a method that increments a value of the dynamic property.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Dynamic.ExpandoObject#3\">        sampleObject.Number = 10\n        sampleObject.Increment = Function() sampleObject.Number + 1\n        &#39; Before calling the Increment method.\n        Console.WriteLine(sampleObject.number)\n\n        sampleObject.Increment.Invoke()\n\n        &#39; After calling the Increment method.\n        Console.WriteLine(sampleObject.number)\n        &#39; This code example produces the following output:\n        &#39; 10\n        &#39; 11\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Dynamic.ExpandoObject#3\">            sampleObject.number = 10;\n            sampleObject.Increment = (Action)(() =&gt; { sampleObject.number++; });\n\n            // Before calling the Increment method.\n            Console.WriteLine(sampleObject.number);\n\n            sampleObject.Increment();\n\n            // After calling the Increment method.\n            Console.WriteLine(sampleObject.number);\n            // This code example produces the following output:\n            // 10\n            // 11\n</code></pre><p> The following code example demonstrates how to add an event to an instance of the <code>ExpandoObject</code> class.  </p>\n<pre><code class=\"lang-c#\">class Program  \n{  \n    static void Main(string[] args)  \n    {  \n        dynamic sampleObject = new ExpandoObject();  \n\n        // Create a new event and initialize it with null.  \n        sampleObject.sampleEvent = null;  \n\n        // Add an event handler.  \n        sampleObject.sampleEvent += new EventHandler(SampleHandler);  \n\n        // Raise an event for testing purposes.  \n        sampleObject.sampleEvent(sampleObject, new EventArgs());  \n   }  \n\n    // Event handler.  \n    static void SampleHandler(object sender, EventArgs e)  \n    {  \n        Console.WriteLine(&quot;SampleHandler for {0} event&quot;, sender);  \n    }  \n}  \n// This code example produces the following output:  \n// SampleHandler for System.Dynamic.ExpandoObject event.  \n</code></pre><pre><code class=\"lang-vb#\">Module Module1  \n\nSub Main()  \n    Dim sampleObject As Object = New ExpandoObject()  \n\n    &#39; Create a new event and initialize it with null.  \n    sampleObject.sampleEvent = Nothing  \n\n    &#39; Add an event handler.  \n    Dim handler As EventHandler = AddressOf SampleHandler  \n    sampleObject.sampleEvent =   \n        [Delegate].Combine(sampleObject.sampleEvent, handler)  \n\n    &#39; Raise an event for testing purposes.  \n    sampleObject.sampleEvent.Invoke(sampleObject, New EventArgs())  \n\nEnd Sub  \n\n&#39; Event handler.  \nSub SampleHandler(ByVal sender As Object, ByVal e As EventArgs)  \n    Console.WriteLine(&quot;SampleHandler for {0} event&quot;, sender)  \nEnd Sub  \n\n&#39; This code example produces the following output:  \n&#39; SampleHandler for System.Dynamic.ExpandoObject event.  \n\nEnd Module  \n</code></pre><h2 id=\"passing-as-a-parameter\">Passing As a Parameter</h2>\n<p> You can pass instances of the <code>ExpandoObject</code> class as parameters. Note that these instances are treated as dynamic objects in C# and late-bound objects in Visual Basic. This means that you do not have IntelliSense for object members and you do not receive compiler errors when you call non-existent members. If you call a member that does not exist, an exception occurs.  </p>\n<p> The following code example demonstrates how you can create and use a method to print the names and values of properties.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Dynamic.ExpandoObject#4\">    Sub Main()\n        Dim employee, manager As Object\n\n        employee = New ExpandoObject()\n        employee.Name = &quot;John Smith&quot;\n        employee.Age = 33\n\n        manager = New ExpandoObject()\n        manager.Name = &quot;Allison Brown&quot;\n        manager.Age = 42\n        manager.TeamSize = 10\n\n        WritePerson(manager)\n        WritePerson(employee)\n    End Sub\n\n    Private Sub WritePerson(ByVal person As Object)\n\n        Console.WriteLine(&quot;{0} is {1} years old.&quot;,\n                          person.Name, person.Age)\n        &#39; The following statement causes an exception\n        &#39; if you pass the employee object.\n        &#39; Console.WriteLine(&quot;Manages {0} people&quot;, person.TeamSize)\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Dynamic.ExpandoObject#4\">    class Program\n    {\n        static void Main(string[] args)\n        {\n            dynamic employee, manager;\n\n            employee = new ExpandoObject();\n            employee.Name = &quot;John Smith&quot;;\n            employee.Age = 33;\n\n            manager = new ExpandoObject();\n            manager.Name = &quot;Allison Brown&quot;;\n            manager.Age = 42;\n            manager.TeamSize = 10;\n\n            WritePerson(manager);\n            WritePerson(employee);\n        }\n        private static void WritePerson(dynamic person)\n        {\n            Console.WriteLine(&quot;{0} is {1} years old.&quot;,\n                              person.Name, person.Age);\n            // The following statement causes an exception\n            // if you pass the employee object.\n            // Console.WriteLine(&quot;Manages {0} people&quot;, person.TeamSize);\n        }\n    }\n    // This code example produces the following output:\n    // John Smith is 33 years old.\n    // Allison Brown is 42 years old.\n</code></pre><h2 id=\"enumerating-and-deleting-members\">Enumerating and Deleting Members</h2>\n<p> The <code>ExpandoObject</code> class implements the <code>IDictionary&lt;String, Object&gt;</code> interface. This enables enumeration of members added to the instance of the <code>ExpandoObject</code> class at run time. This can be useful if you do not know at compile time what members an instance might have.  </p>\n<p> The following code example shows how you can cast an instance of the <code>ExpandoObject</code> class to the <a class=\"xref\" href=\"system.collections.generic.idictionary-2\" data-linktype=\"relative-path\">IDictionary&lt;TKey,TValue&gt;</a> interface and enumerate the instance&#39;s members.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Dynamic.ExpandoObject#5\">        Dim employee As Object = New ExpandoObject()\n        employee.Name = &quot;John Smith&quot;\n        employee.Age = 33\n        For Each member In CType(employee, IDictionary(Of String, Object))\n            Console.WriteLine(member.Key &amp; &quot;: &quot; &amp; member.Value)\n        Next\n        &#39; This code example produces the following output:\n        &#39; Name: John Smith\n        &#39; Age: 33\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Dynamic.ExpandoObject#5\">            dynamic employee = new ExpandoObject();\n            employee.Name = &quot;John Smith&quot;;\n            employee.Age = 33;\n\n            foreach (var property in (IDictionary&lt;String, Object&gt;)employee)\n            {\n                Console.WriteLine(property.Key + &quot;: &quot; + property.Value);\n            }\n            // This code example produces the following output:\n            // Name: John Smith\n            // Age: 33\n</code></pre><p> In languages that do not have syntax for deleting members (such as C# and Visual Basic), you can delete a member by implicitly casting an instance of the <code>ExpandoObject</code> to the <code>IDictionary\\&lt;String, Object&gt;</code> interface and then deleting the member as a key/value pair. This is shown in the following example.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Dynamic.ExpandoObject#6\">        Dim employee As Object = New ExpandoObject()\n        employee.Name = &quot;John Smith&quot;\n        CType(employee, IDictionary(Of String, Object)).Remove(&quot;Name&quot;)\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Dynamic.ExpandoObject#6\">            dynamic employee = new ExpandoObject();\n            employee.Name = &quot;John Smith&quot;;\n            ((IDictionary&lt;String, Object&gt;)employee).Remove(&quot;Name&quot;);\n</code></pre><h2 id=\"receiving-notifications-of-property-changes\">Receiving Notifications of Property Changes</h2>\n<p> The <code>ExpandoObject</code> class implements the <a class=\"xref\" href=\"system.componentmodel.inotifypropertychanged\" data-linktype=\"relative-path\">INotifyPropertyChanged</a> interface and can raise a <a class=\"xref\" href=\"system.componentmodel.inotifypropertychanged#System_ComponentModel_INotifyPropertyChanged_PropertyChanged\" data-linktype=\"relative-path\">PropertyChanged</a> event when a member is added, deleted, or modified. This enables <code>ExpandoObject</code> class integration with Windows Presentation Foundation (WPF) data binding and other environments that require notification about changes in the object content.  </p>\n<p> The following code example demonstrates how to create an event handler for the <code>PropertyChanged</code> event.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Dynamic.ExpandoObject#7\">    &#39; Add &quot;Imports System.ComponentModel&quot; line \n    &#39; to the beginning of the file.\n    Sub Main()\n        Dim employee As Object = New ExpandoObject\n        AddHandler CType(\n            employee, INotifyPropertyChanged).PropertyChanged,\n            AddressOf HandlePropertyChanges\n        employee.Name = &quot;John Smith&quot;\n    End Sub\n\n    Private Sub HandlePropertyChanges(\n           ByVal sender As Object, ByVal e As PropertyChangedEventArgs)\n        Console.WriteLine(&quot;{0} has changed.&quot;, e.PropertyName)\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Dynamic.ExpandoObject#7\">    // Add &quot;using System.ComponentModel;&quot; line \n    // to the beginning of the file.\n    class Program\n    {\n        static void Test()\n        {\n            dynamic employee = new ExpandoObject();\n            ((INotifyPropertyChanged)employee).PropertyChanged +=\n                new PropertyChangedEventHandler(HandlePropertyChanges);\n            employee.Name = &quot;John Smith&quot;;\n        }\n\n        private static void HandlePropertyChanges(\n            object sender, PropertyChangedEventArgs e)\n        {\n            Console.WriteLine(&quot;{0} has changed.&quot;, e.PropertyName);\n        }\n    }\n</code></pre>\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Dynamic_ExpandoObject__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ExpandoObject()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new <code>ExpandoObject</code> that does not have members.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public ExpandoObject ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Explicit Interface Implementations\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Dynamic_ExpandoObject_System_Collections_Generic_ICollection_System_Collections_Generic_KeyValuePair_System_String_System_Object___Add_System_Collections_Generic_KeyValuePair_System_String_System_Object__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ICollection&lt;KeyValuePair&lt;String,Object&gt;&gt;.Add(KeyValuePair&lt;String,Object&gt;)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void ICollection&lt;KeyValuePair&lt;string,object&gt;&gt;.Add (System.Collections.Generic.KeyValuePair&lt;string,object&gt; item);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>item</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.keyvaluepair-2\" data-linktype=\"relative-path\">KeyValuePair</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Dynamic_ExpandoObject_System_Collections_Generic_ICollection_System_Collections_Generic_KeyValuePair_System_String_System_Object___Clear\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ICollection&lt;KeyValuePair&lt;String,Object&gt;&gt;.Clear()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void ICollection&lt;KeyValuePair&lt;string,object&gt;&gt;.Clear ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Dynamic_ExpandoObject_System_Collections_Generic_ICollection_System_Collections_Generic_KeyValuePair_System_String_System_Object___Contains_System_Collections_Generic_KeyValuePair_System_String_System_Object__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ICollection&lt;KeyValuePair&lt;String,Object&gt;&gt;.Contains(KeyValuePair&lt;String,Object&gt;)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">bool ICollection&lt;KeyValuePair&lt;string,object&gt;&gt;.Contains (System.Collections.Generic.KeyValuePair&lt;string,object&gt; item);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>item</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.keyvaluepair-2\" data-linktype=\"relative-path\">KeyValuePair</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Dynamic_ExpandoObject_System_Collections_Generic_ICollection_System_Collections_Generic_KeyValuePair_System_String_System_Object___CopyTo_System_Collections_Generic_KeyValuePair_System_String_System_Object____System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ICollection&lt;KeyValuePair&lt;String,Object&gt;&gt;.CopyTo(KeyValuePair&lt;String,Object&gt;[],Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void ICollection&lt;KeyValuePair&lt;string,object&gt;&gt;.CopyTo (System.Collections.Generic.KeyValuePair&lt;string,object&gt;[] array, int arrayIndex);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>array</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.keyvaluepair-2\" data-linktype=\"relative-path\">KeyValuePair</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>&gt;[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>arrayIndex</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Dynamic_ExpandoObject_System_Collections_Generic_ICollection_System_Collections_Generic_KeyValuePair_System_String_System_Object___Count\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ICollection&lt;KeyValuePair&lt;String,Object&gt;&gt;.Count</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">int System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Count { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Dynamic_ExpandoObject_System_Collections_Generic_ICollection_System_Collections_Generic_KeyValuePair_System_String_System_Object___IsReadOnly\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ICollection&lt;KeyValuePair&lt;String,Object&gt;&gt;.IsReadOnly</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.IsReadOnly { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Dynamic_ExpandoObject_System_Collections_Generic_ICollection_System_Collections_Generic_KeyValuePair_System_String_System_Object___Remove_System_Collections_Generic_KeyValuePair_System_String_System_Object__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ICollection&lt;KeyValuePair&lt;String,Object&gt;&gt;.Remove(KeyValuePair&lt;String,Object&gt;)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">bool ICollection&lt;KeyValuePair&lt;string,object&gt;&gt;.Remove (System.Collections.Generic.KeyValuePair&lt;string,object&gt; item);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>item</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.keyvaluepair-2\" data-linktype=\"relative-path\">KeyValuePair</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Dynamic_ExpandoObject_System_Collections_Generic_IDictionary_System_String_System_Object__Add_System_String_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IDictionary&lt;String,Object&gt;.Add(String,Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void IDictionary&lt;string,object&gt;.Add (string key, object value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>key</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Dynamic_ExpandoObject_System_Collections_Generic_IDictionary_System_String_System_Object__ContainsKey_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IDictionary&lt;String,Object&gt;.ContainsKey(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">bool IDictionary&lt;string,object&gt;.ContainsKey (string key);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>key</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Dynamic_ExpandoObject_System_Collections_Generic_IDictionary_System_String_System_Object__Item_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IDictionary&lt;String,Object&gt;.Item(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">object System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.Item[string key] { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>key</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Dynamic_ExpandoObject_System_Collections_Generic_IDictionary_System_String_System_Object__Keys\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IDictionary&lt;String,Object&gt;.Keys</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">System.Collections.Generic.ICollection&lt;string&gt; System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.Keys { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.icollection-1\" data-linktype=\"relative-path\">ICollection</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Dynamic_ExpandoObject_System_Collections_Generic_IDictionary_System_String_System_Object__Remove_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IDictionary&lt;String,Object&gt;.Remove(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">bool IDictionary&lt;string,object&gt;.Remove (string key);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>key</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Dynamic_ExpandoObject_System_Collections_Generic_IDictionary_System_String_System_Object__TryGetValue_System_String_System_Object__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IDictionary&lt;String,Object&gt;.TryGetValue(String,Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">bool IDictionary&lt;string,object&gt;.TryGetValue (string key, out object value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>key</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Dynamic_ExpandoObject_System_Collections_Generic_IDictionary_System_String_System_Object__Values\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IDictionary&lt;String,Object&gt;.Values</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">System.Collections.Generic.ICollection&lt;object&gt; System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.Values { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.icollection-1\" data-linktype=\"relative-path\">ICollection</a>&lt;<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Dynamic_ExpandoObject_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_Object___GetEnumerator\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IEnumerable&lt;KeyValuePair&lt;String,Object&gt;&gt;.GetEnumerator()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; IEnumerable&lt;KeyValuePair&lt;string,object&gt;&gt;.GetEnumerator ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerator-1\" data-linktype=\"relative-path\">IEnumerator</a>&lt;<a class=\"xref\" href=\"system.collections.generic.keyvaluepair-2\" data-linktype=\"relative-path\">KeyValuePair</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>&gt;&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Dynamic_ExpandoObject_System_Collections_IEnumerable_GetEnumerator\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IEnumerable.GetEnumerator()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns an enumerator that iterates through the collection.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">System.Collections.IEnumerator IEnumerable.GetEnumerator ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a> that can be used to iterate through the collection.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Dynamic_ExpandoObject_System_Dynamic_IDynamicMetaObjectProvider_GetMetaObject_System_Linq_Expressions_Expression_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IDynamicMetaObjectProvider.GetMetaObject(Expression)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>The provided MetaObject will dispatch to the dynamic virtual methods. The object can be encapsulated inside another MetaObject to provide custom behavior for individual actions.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">System.Dynamic.DynamicMetaObject IDynamicMetaObjectProvider.GetMetaObject (System.Linq.Expressions.Expression parameter);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>parameter</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The expression that represents the MetaObject to dispatch to the Dynamic virtual methods.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.dynamic.dynamicmetaobject\" data-linktype=\"relative-path\">DynamicMetaObject</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object of the <a class=\"xref\" href=\"system.dynamic.dynamicmetaobject\" data-linktype=\"relative-path\">DynamicMetaObject</a> type.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Dynamic.ExpandoObject.yml\">\r\n<meta name=\"APIName\" content=\"System.Dynamic.ExpandoObject\">\r\n<meta name=\"APIName\" content=\"System.Dynamic.ExpandoObject..ctor\">\r\n<meta name=\"APIName\" content=\"System.Dynamic.ExpandoObject.ICollection&lt;KeyValuePair&lt;String,Object&gt;&gt;.Add\">\r\n<meta name=\"APIName\" content=\"System.Dynamic.ExpandoObject.ICollection&lt;KeyValuePair&lt;String,Object&gt;&gt;.Clear\">\r\n<meta name=\"APIName\" content=\"System.Dynamic.ExpandoObject.ICollection&lt;KeyValuePair&lt;String,Object&gt;&gt;.Contains\">\r\n<meta name=\"APIName\" content=\"System.Dynamic.ExpandoObject.ICollection&lt;KeyValuePair&lt;String,Object&gt;&gt;.CopyTo\">\r\n<meta name=\"APIName\" content=\"System.Dynamic.ExpandoObject.ICollection&lt;KeyValuePair&lt;String,Object&gt;&gt;.Count\">\r\n<meta name=\"APIName\" content=\"System.Dynamic.ExpandoObject.ICollection&lt;KeyValuePair&lt;String,Object&gt;&gt;.IsReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Dynamic.ExpandoObject.ICollection&lt;KeyValuePair&lt;String,Object&gt;&gt;.Remove\">\r\n<meta name=\"APIName\" content=\"System.Dynamic.ExpandoObject.IDictionary&lt;String,Object&gt;.Add\">\r\n<meta name=\"APIName\" content=\"System.Dynamic.ExpandoObject.IDictionary&lt;String,Object&gt;.ContainsKey\">\r\n<meta name=\"APIName\" content=\"System.Dynamic.ExpandoObject.IDictionary&lt;String,Object&gt;.Item\">\r\n<meta name=\"APIName\" content=\"System.Dynamic.ExpandoObject.IDictionary&lt;String,Object&gt;.Keys\">\r\n<meta name=\"APIName\" content=\"System.Dynamic.ExpandoObject.IDictionary&lt;String,Object&gt;.Remove\">\r\n<meta name=\"APIName\" content=\"System.Dynamic.ExpandoObject.IDictionary&lt;String,Object&gt;.TryGetValue\">\r\n<meta name=\"APIName\" content=\"System.Dynamic.ExpandoObject.IDictionary&lt;String,Object&gt;.Values\">\r\n<meta name=\"APIName\" content=\"System.Dynamic.ExpandoObject.IEnumerable&lt;KeyValuePair&lt;String,Object&gt;&gt;.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Dynamic.ExpandoObject.IEnumerable.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Dynamic.ExpandoObject.IDynamicMetaObjectProvider.GetMetaObject\">\r\n<meta name=\"APILocation\" content=\"System.Core.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-20 09:40 AM\">\r\n<meta name=\"document_id\" content=\"bdf7972c-1851-4d14-d8ed-53d58f4578e0\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents an object whose members can be dynamically added and removed at run time.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Dynamic/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Dynamic.ExpandoObject\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Dynamic.ExpandoObject.yml","open_to_public_contributors":true,"api_name":["System.Dynamic.ExpandoObject","System.Dynamic.ExpandoObject..ctor","System.Dynamic.ExpandoObject.ICollection<KeyValuePair<String,Object>>.Add","System.Dynamic.ExpandoObject.ICollection<KeyValuePair<String,Object>>.Clear","System.Dynamic.ExpandoObject.ICollection<KeyValuePair<String,Object>>.Contains","System.Dynamic.ExpandoObject.ICollection<KeyValuePair<String,Object>>.CopyTo","System.Dynamic.ExpandoObject.ICollection<KeyValuePair<String,Object>>.Count","System.Dynamic.ExpandoObject.ICollection<KeyValuePair<String,Object>>.IsReadOnly","System.Dynamic.ExpandoObject.ICollection<KeyValuePair<String,Object>>.Remove","System.Dynamic.ExpandoObject.IDictionary<String,Object>.Add","System.Dynamic.ExpandoObject.IDictionary<String,Object>.ContainsKey","System.Dynamic.ExpandoObject.IDictionary<String,Object>.Item","System.Dynamic.ExpandoObject.IDictionary<String,Object>.Keys","System.Dynamic.ExpandoObject.IDictionary<String,Object>.Remove","System.Dynamic.ExpandoObject.IDictionary<String,Object>.TryGetValue","System.Dynamic.ExpandoObject.IDictionary<String,Object>.Values","System.Dynamic.ExpandoObject.IEnumerable<KeyValuePair<String,Object>>.GetEnumerator","System.Dynamic.ExpandoObject.IEnumerable.GetEnumerator","System.Dynamic.ExpandoObject.IDynamicMetaObjectProvider.GetMetaObject"],"api_location":["System.Core.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Dynamic.ExpandoObject","System::Dynamic::ExpandoObject","System.Dynamic.ExpandoObject.#ctor","System::Dynamic::ExpandoObject::#ctor","System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add","System::Dynamic::ExpandoObject::System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add","System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Clear","System::Dynamic::ExpandoObject::System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Clear","System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains","System::Dynamic::ExpandoObject::System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains","System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo","System::Dynamic::ExpandoObject::System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo","System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Count","System::Dynamic::ExpandoObject::System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Count","System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#IsReadOnly","System::Dynamic::ExpandoObject::System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#IsReadOnly","System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove","System::Dynamic::ExpandoObject::System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove","System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Add","System::Dynamic::ExpandoObject::System#Collections#Generic#IDictionary{System#String,System#Object}#Add","System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#ContainsKey","System::Dynamic::ExpandoObject::System#Collections#Generic#IDictionary{System#String,System#Object}#ContainsKey","System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Item","System::Dynamic::ExpandoObject::System#Collections#Generic#IDictionary{System#String,System#Object}#Item","System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Keys","System::Dynamic::ExpandoObject::System#Collections#Generic#IDictionary{System#String,System#Object}#Keys","System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Remove","System::Dynamic::ExpandoObject::System#Collections#Generic#IDictionary{System#String,System#Object}#Remove","System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#TryGetValue","System::Dynamic::ExpandoObject::System#Collections#Generic#IDictionary{System#String,System#Object}#TryGetValue","System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Values","System::Dynamic::ExpandoObject::System#Collections#Generic#IDictionary{System#String,System#Object}#Values","System.Dynamic.ExpandoObject.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator","System::Dynamic::ExpandoObject::System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator","System.Dynamic.ExpandoObject.System#Collections#IEnumerable#GetEnumerator","System::Dynamic::ExpandoObject::System#Collections#IEnumerable#GetEnumerator","System.Dynamic.ExpandoObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject","System::Dynamic::ExpandoObject::System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject"],"dev_langs":["csharp"],"updated_at":"2017-03-20 09:40 AM","document_id":"bdf7972c-1851-4d14-d8ed-53d58f4578e0","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Dynamic/ExpandoObject.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ExpandoObject class | Microsoft Docs","_op_ogTitle":"ExpandoObject class","description":"Represents an object whose members can be dynamically added and removed at run time.\n","toc_asset_id":"_splitted/System.Dynamic/toc.json","toc_rel":"_splitted/System.Dynamic/toc.json","source_url":"","ms.assetid":"System.Dynamic.ExpandoObject","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.dynamic.expandoobject","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.dynamic.expandoobject","fileRelativePath":"System.Dynamic.ExpandoObject.html"},"themesRelativePathToOutputRoot":"_themes/"}