{"content":"    \r\n    <h1 id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage\">\r\n      <span class=\"lang-csharp\">IMethodReturnMessage</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines the method call return message interface.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic interface IMethodReturnMessage : System.Runtime.Remoting.Messaging.IMethodMessage</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A method call return message represents the response to a method call on an object at the end of the message sink. An IMethodReturnMessage is generated as a result of a method called on a remote object, and is used to return the results of the method call back to the caller.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Messaging_IMethodReturnMessage_Exception\" data-linktype=\"self-bookmark\">Exception</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the exception thrown during the method call.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Messaging_IMethodReturnMessage_OutArgCount\" data-linktype=\"self-bookmark\">OutArgCount</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of arguments in the method call marked as <code>ref</code> or <code>out</code> parameters.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Messaging_IMethodReturnMessage_OutArgs\" data-linktype=\"self-bookmark\">OutArgs</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the specified argument marked as a <code>ref</code> or an <code>out</code> parameter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Messaging_IMethodReturnMessage_ReturnValue\" data-linktype=\"self-bookmark\">ReturnValue</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the return value of the method call.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Messaging_IMethodReturnMessage_GetOutArg_System_Int32_\" data-linktype=\"self-bookmark\">GetOutArg(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the specified argument marked as a <code>ref</code> or an <code>out</code> parameter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Messaging_IMethodReturnMessage_GetOutArgName_System_Int32_\" data-linktype=\"self-bookmark\">GetOutArgName(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the name of the specified argument marked as a <code>ref</code> or an <code>out</code> parameter.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage_Exception\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage_Exception_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Exception</div>        \r\n          </div>\r\n    \r\n            <p>Gets the exception thrown during the method call.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Exception Exception { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>The exception object for the method call, or <code>null</code> if the method did not throw an exception.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example code shows a custom proxy that overrides RealProxy.Invoke in order to write the return message information, including whether the method threw an exception.  </p>\n<pre><code class=\"lang-cpp\" name=\"IMethodReturnMessage_Exception#1\">   virtual IMessage^ Invoke( IMessage^ myMessage ) override\n   {\n      IMethodCallMessage^ myCallMessage = dynamic_cast&lt;IMethodCallMessage^&gt;(myMessage);\n\n      IMethodReturnMessage^ myIMethodReturnMessage =\n         RemotingServices::ExecuteMessage( myMarshalByRefObject, myCallMessage );\n      if ( myIMethodReturnMessage-&gt;Exception != nullptr )\n      {\n         Console::WriteLine( &quot;{0} raised an exception.&quot;,\n            myIMethodReturnMessage-&gt;MethodName );\n      }\n      else\n      {\n         Console::WriteLine(  &quot;{0} does not raise an exception.&quot;,\n            myIMethodReturnMessage-&gt;MethodName );\n      }\n\n      return myIMethodReturnMessage;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"IMethodReturnMessage_Exception#1\">      Public Overrides Function Invoke(myMessage As IMessage) As IMessage\n         Dim myCallMessage As IMethodCallMessage = CType(myMessage, IMethodCallMessage)\n         \n         Dim myIMethodReturnMessage As IMethodReturnMessage = RemotingServices.ExecuteMessage _\n                                                         (myMarshalByRefObject, myCallMessage)\n         If Not (myIMethodReturnMessage.Exception Is Nothing) Then\n            Console.WriteLine(myIMethodReturnMessage.MethodName + &quot; raised an exception.&quot;)\n         Else\n            Console.WriteLine(myIMethodReturnMessage.MethodName + &quot; does not raised an exception.&quot;)\n         End If\n         \n         Return myIMethodReturnMessage\n      End Function &#39;Invoke\n</code></pre><pre><code class=\"lang-cs\" name=\"IMethodReturnMessage_Exception#1\">      public override IMessage Invoke(IMessage myMessage)\n      {\n         IMethodCallMessage myCallMessage = (IMethodCallMessage)myMessage;\n\n         IMethodReturnMessage myIMethodReturnMessage =\n            RemotingServices.ExecuteMessage(myMarshalByRefObject,myCallMessage);\n         if(myIMethodReturnMessage.Exception != null)\n            Console.WriteLine(myIMethodReturnMessage.MethodName +\n               &quot; raised an exception.&quot;);\n         else\n            Console.WriteLine(myIMethodReturnMessage.MethodName +\n               &quot; does not raised an exception.&quot;);\n\n         return myIMethodReturnMessage;\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage_OutArgCount\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage_OutArgCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OutArgCount</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of arguments in the method call marked as <code>ref</code> or <code>out</code> parameters.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int OutArgCount { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of arguments in the method call marked as <code>ref</code> or <code>out</code> parameters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example code shows a custom proxy that overrides <code>RealProxy.Invoke</code> in order to write the return message information to the console.  </p>\n<pre><code class=\"lang-cpp\" name=\"IMethodReturnMessage_ReturnValue#2\">   virtual IMessage^ Invoke( IMessage^ myMessage ) override\n   {\n      IMethodCallMessage^ myCallMessage = (IMethodCallMessage^)( myMessage );\n\n      IMethodReturnMessage^ myIMethodReturnMessage =\n         RemotingServices::ExecuteMessage( myMarshalByRefObject, myCallMessage );\n\n      Console::WriteLine( &quot;Method name : {0}&quot;, myIMethodReturnMessage-&gt;MethodName );\n      Console::WriteLine( &quot;The return value is : {0}&quot;, myIMethodReturnMessage-&gt;ReturnValue );\n\n      // Get number of &#39;ref&#39; and &#39;out&#39; parameters.\n      int myArgOutCount = myIMethodReturnMessage-&gt;OutArgCount;\n      Console::WriteLine( &quot;The number of &#39;ref&#39;, &#39;out&#39; parameters are : {0}&quot;,\n         myIMethodReturnMessage-&gt;OutArgCount );\n      // Gets name and values of &#39;ref&#39; and &#39;out&#39; parameters.\n      for ( int i = 0; i &lt; myArgOutCount; i++ )\n      {\n         Console::WriteLine( &quot;Name of argument {0} is &#39;{1}&#39;.&quot;,\n            i, myIMethodReturnMessage-&gt;GetOutArgName( i ) );\n         Console::WriteLine( &quot;Value of argument {0} is &#39;{1}&#39;.&quot;,\n            i, myIMethodReturnMessage-&gt;GetOutArg( i ) );\n      }\n      Console::WriteLine();\n      array&lt;Object^&gt;^myObjectArray = myIMethodReturnMessage-&gt;OutArgs;\n      for ( int i = 0; i &lt; myObjectArray-&gt;Length; i++ )\n         Console::WriteLine( &quot;Value of argument {0} is &#39;{1}&#39; in OutArgs&quot;,\n            i, myObjectArray[ i ] );\n      return myIMethodReturnMessage;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"IMethodReturnMessage_ReturnValue#2\">      Public Overrides Function Invoke(myMessage As IMessage) As IMessage\n         Dim myCallMessage As IMethodCallMessage = CType(myMessage, IMethodCallMessage)\n\n         Dim myIMethodReturnMessage As IMethodReturnMessage = RemotingServices. _\n            ExecuteMessage(myMarshalByRefObject, myCallMessage)\n\n         Console.WriteLine(&quot;Method name : &quot; + myIMethodReturnMessage.MethodName)\n         Console.WriteLine(&quot;The return value is : &quot; + myIMethodReturnMessage.ReturnValue)\n         \n         &#39; Get number of &#39;ref&#39; and &#39;out&#39; parameters.\n         Dim myArgOutCount As Integer = myIMethodReturnMessage.OutArgCount\n         Console.WriteLine(&quot;The number of &#39;ref&#39;, &#39;out&#39; parameters are : &quot; + _\n            myIMethodReturnMessage.OutArgCount.ToString())\n         &#39; Gets name and values of &#39;ref&#39; and &#39;out&#39; parameters.\n         Dim i As Integer\n         For i = 0 To myArgOutCount - 1\n            Console.WriteLine(&quot;Name of argument {0} is &#39;{1}&#39;.&quot;, i, _\n               myIMethodReturnMessage.GetOutArgName(i))\n            Console.WriteLine(&quot;Value of argument {0} is &#39;{1}&#39;.&quot;, i, _\n               myIMethodReturnMessage.GetOutArg(i))\n         Next i\n         Console.WriteLine()\n         Dim myObjectArray As Object() = myIMethodReturnMessage.OutArgs\n         For i = 0 To myObjectArray.Length - 1\n            Console.WriteLine(&quot;Value of argument {0} is &#39;{1}&#39; in OutArgs&quot;, i, myObjectArray(i))\n         Next i\n         Return myIMethodReturnMessage\n      End Function &#39;Invoke\n</code></pre><pre><code class=\"lang-cs\" name=\"IMethodReturnMessage_ReturnValue#2\">      public override IMessage Invoke(IMessage myMessage)\n      {\n         IMethodCallMessage myCallMessage = (IMethodCallMessage)myMessage;\n\n         IMethodReturnMessage myIMethodReturnMessage =\n            RemotingServices.ExecuteMessage(myMarshalByRefObject, myCallMessage);\n\n         Console.WriteLine(&quot;Method name : &quot; + myIMethodReturnMessage.MethodName);\n         Console.WriteLine(&quot;The return value is : &quot; + myIMethodReturnMessage.ReturnValue);\n\n         // Get number of &#39;ref&#39; and &#39;out&#39; parameters.\n         int myArgOutCount = myIMethodReturnMessage.OutArgCount;\n         Console.WriteLine(&quot;The number of &#39;ref&#39;, &#39;out&#39; parameters are : &quot; +\n            myIMethodReturnMessage.OutArgCount);\n         // Gets name and values of &#39;ref&#39; and &#39;out&#39; parameters.\n         for(int i = 0; i &lt; myArgOutCount; i++)\n         {\n            Console.WriteLine(&quot;Name of argument {0} is &#39;{1}&#39;.&quot;,\n               i, myIMethodReturnMessage.GetOutArgName(i));\n            Console.WriteLine(&quot;Value of argument {0} is &#39;{1}&#39;.&quot;,\n               i, myIMethodReturnMessage.GetOutArg(i));\n         }\n         Console.WriteLine();\n         object[] myObjectArray = myIMethodReturnMessage.OutArgs; \n         for(int i = 0; i &lt; myObjectArray.Length; i++)\n            Console.WriteLine(&quot;Value of argument {0} is &#39;{1}&#39; in OutArgs&quot;,\n               i, myObjectArray[i]);\n         return myIMethodReturnMessage;\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage_OutArgs\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage_OutArgs_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OutArgs</div>        \r\n          </div>\r\n    \r\n            <p>Returns the specified argument marked as a <code>ref</code> or an <code>out</code> parameter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object[] OutArgs { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </div>\r\n                  <p>The specified argument marked as a <code>ref</code> or an <code>out</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Although the OutArgs property is redundant since the same functionality can be achieved through the <a class=\"xref\" href=\"system.runtime.remoting.messaging.imethodreturnmessage#System_Runtime_Remoting_Messaging_IMethodReturnMessage_OutArgCount_\" data-linktype=\"relative-path\">OutArgCount</a> field and <a class=\"xref\" href=\"system.runtime.remoting.messaging.imethodreturnmessage#System_Runtime_Remoting_Messaging_IMethodReturnMessage_GetOutArg_\" data-linktype=\"relative-path\">GetOutArg</a> method, there might be performance optimization available if the implementer understands when all the arguments will be retrieved.  </p>\n<div class=\"WARNING\"><h5>Warning</h5><p> If <a class=\"xref\" href=\"system.runtime.remoting.messaging.imethodreturnmessage#System_Runtime_Remoting_Messaging_IMethodReturnMessage_Exception_\" data-linktype=\"relative-path\">Exception</a> is not <code>null</code>, a <a class=\"xref\" href=\"system.indexoutofrangeexception\" data-linktype=\"relative-path\">System.IndexOutOfRangeException</a> exception is thrown when OutArgs is accessed.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"IMethodReturnMessage_ReturnValue#2\">   virtual IMessage^ Invoke( IMessage^ myMessage ) override\n   {\n      IMethodCallMessage^ myCallMessage = (IMethodCallMessage^)( myMessage );\n\n      IMethodReturnMessage^ myIMethodReturnMessage =\n         RemotingServices::ExecuteMessage( myMarshalByRefObject, myCallMessage );\n\n      Console::WriteLine( &quot;Method name : {0}&quot;, myIMethodReturnMessage-&gt;MethodName );\n      Console::WriteLine( &quot;The return value is : {0}&quot;, myIMethodReturnMessage-&gt;ReturnValue );\n\n      // Get number of &#39;ref&#39; and &#39;out&#39; parameters.\n      int myArgOutCount = myIMethodReturnMessage-&gt;OutArgCount;\n      Console::WriteLine( &quot;The number of &#39;ref&#39;, &#39;out&#39; parameters are : {0}&quot;,\n         myIMethodReturnMessage-&gt;OutArgCount );\n      // Gets name and values of &#39;ref&#39; and &#39;out&#39; parameters.\n      for ( int i = 0; i &lt; myArgOutCount; i++ )\n      {\n         Console::WriteLine( &quot;Name of argument {0} is &#39;{1}&#39;.&quot;,\n            i, myIMethodReturnMessage-&gt;GetOutArgName( i ) );\n         Console::WriteLine( &quot;Value of argument {0} is &#39;{1}&#39;.&quot;,\n            i, myIMethodReturnMessage-&gt;GetOutArg( i ) );\n      }\n      Console::WriteLine();\n      array&lt;Object^&gt;^myObjectArray = myIMethodReturnMessage-&gt;OutArgs;\n      for ( int i = 0; i &lt; myObjectArray-&gt;Length; i++ )\n         Console::WriteLine( &quot;Value of argument {0} is &#39;{1}&#39; in OutArgs&quot;,\n            i, myObjectArray[ i ] );\n      return myIMethodReturnMessage;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"IMethodReturnMessage_ReturnValue#2\">      Public Overrides Function Invoke(myMessage As IMessage) As IMessage\n         Dim myCallMessage As IMethodCallMessage = CType(myMessage, IMethodCallMessage)\n\n         Dim myIMethodReturnMessage As IMethodReturnMessage = RemotingServices. _\n            ExecuteMessage(myMarshalByRefObject, myCallMessage)\n\n         Console.WriteLine(&quot;Method name : &quot; + myIMethodReturnMessage.MethodName)\n         Console.WriteLine(&quot;The return value is : &quot; + myIMethodReturnMessage.ReturnValue)\n         \n         &#39; Get number of &#39;ref&#39; and &#39;out&#39; parameters.\n         Dim myArgOutCount As Integer = myIMethodReturnMessage.OutArgCount\n         Console.WriteLine(&quot;The number of &#39;ref&#39;, &#39;out&#39; parameters are : &quot; + _\n            myIMethodReturnMessage.OutArgCount.ToString())\n         &#39; Gets name and values of &#39;ref&#39; and &#39;out&#39; parameters.\n         Dim i As Integer\n         For i = 0 To myArgOutCount - 1\n            Console.WriteLine(&quot;Name of argument {0} is &#39;{1}&#39;.&quot;, i, _\n               myIMethodReturnMessage.GetOutArgName(i))\n            Console.WriteLine(&quot;Value of argument {0} is &#39;{1}&#39;.&quot;, i, _\n               myIMethodReturnMessage.GetOutArg(i))\n         Next i\n         Console.WriteLine()\n         Dim myObjectArray As Object() = myIMethodReturnMessage.OutArgs\n         For i = 0 To myObjectArray.Length - 1\n            Console.WriteLine(&quot;Value of argument {0} is &#39;{1}&#39; in OutArgs&quot;, i, myObjectArray(i))\n         Next i\n         Return myIMethodReturnMessage\n      End Function &#39;Invoke\n</code></pre><pre><code class=\"lang-cs\" name=\"IMethodReturnMessage_ReturnValue#2\">      public override IMessage Invoke(IMessage myMessage)\n      {\n         IMethodCallMessage myCallMessage = (IMethodCallMessage)myMessage;\n\n         IMethodReturnMessage myIMethodReturnMessage =\n            RemotingServices.ExecuteMessage(myMarshalByRefObject, myCallMessage);\n\n         Console.WriteLine(&quot;Method name : &quot; + myIMethodReturnMessage.MethodName);\n         Console.WriteLine(&quot;The return value is : &quot; + myIMethodReturnMessage.ReturnValue);\n\n         // Get number of &#39;ref&#39; and &#39;out&#39; parameters.\n         int myArgOutCount = myIMethodReturnMessage.OutArgCount;\n         Console.WriteLine(&quot;The number of &#39;ref&#39;, &#39;out&#39; parameters are : &quot; +\n            myIMethodReturnMessage.OutArgCount);\n         // Gets name and values of &#39;ref&#39; and &#39;out&#39; parameters.\n         for(int i = 0; i &lt; myArgOutCount; i++)\n         {\n            Console.WriteLine(&quot;Name of argument {0} is &#39;{1}&#39;.&quot;,\n               i, myIMethodReturnMessage.GetOutArgName(i));\n            Console.WriteLine(&quot;Value of argument {0} is &#39;{1}&#39;.&quot;,\n               i, myIMethodReturnMessage.GetOutArg(i));\n         }\n         Console.WriteLine();\n         object[] myObjectArray = myIMethodReturnMessage.OutArgs; \n         for(int i = 0; i &lt; myObjectArray.Length; i++)\n            Console.WriteLine(&quot;Value of argument {0} is &#39;{1}&#39; in OutArgs&quot;,\n               i, myObjectArray[i]);\n         return myIMethodReturnMessage;\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage_ReturnValue\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage_ReturnValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReturnValue</div>        \r\n          </div>\r\n    \r\n            <p>Gets the return value of the method call.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object ReturnValue { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The return value of the method call.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage_GetOutArg_System_Int32_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage_GetOutArg_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetOutArg(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the specified argument marked as a <code>ref</code> or an <code>out</code> parameter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object GetOutArg (int argNum);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>argNum</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of the requested argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The specified argument marked as a <code>ref</code> or an <code>out</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage_GetOutArgName_System_Int32_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Messaging_IMethodReturnMessage_GetOutArgName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetOutArgName(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the name of the specified argument marked as a <code>ref</code> or an <code>out</code> parameter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string GetOutArgName (int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of the requested argument name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The argument name, or <code>null</code> if the current method is not implemented.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Remoting.Messaging.IMethodReturnMessage.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Remoting.Messaging.IMethodReturnMessage.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.IMethodReturnMessage\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.IMethodReturnMessage.Exception\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.IMethodReturnMessage.GetOutArg\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.IMethodReturnMessage.GetOutArgName\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.IMethodReturnMessage.OutArgCount\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.IMethodReturnMessage.OutArgs\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.IMethodReturnMessage.ReturnValue\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"ae48584f-e8f3-2681-a5ce-8c342ae7396a\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Runtime.Remoting.Messaging\\IMethodReturnMessage.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines the method call return message interface.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Runtime.Remoting.Messaging/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Remoting.Messaging.IMethodReturnMessage\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Remoting.Messaging.IMethodReturnMessage.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Remoting.Messaging.IMethodReturnMessage.yml","open_to_public_contributors":true,"api_name":["System.Runtime.Remoting.Messaging.IMethodReturnMessage","System.Runtime.Remoting.Messaging.IMethodReturnMessage.Exception","System.Runtime.Remoting.Messaging.IMethodReturnMessage.GetOutArg","System.Runtime.Remoting.Messaging.IMethodReturnMessage.GetOutArgName","System.Runtime.Remoting.Messaging.IMethodReturnMessage.OutArgCount","System.Runtime.Remoting.Messaging.IMethodReturnMessage.OutArgs","System.Runtime.Remoting.Messaging.IMethodReturnMessage.ReturnValue"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Remoting.Messaging.IMethodReturnMessage","System::Runtime::Remoting::Messaging::IMethodReturnMessage","System.Runtime.Remoting.Messaging.IMethodReturnMessage.Exception","System::Runtime::Remoting::Messaging::IMethodReturnMessage::Exception","System.Runtime.Remoting.Messaging.IMethodReturnMessage.GetOutArg","System::Runtime::Remoting::Messaging::IMethodReturnMessage::GetOutArg","System.Runtime.Remoting.Messaging.IMethodReturnMessage.GetOutArgName","System::Runtime::Remoting::Messaging::IMethodReturnMessage::GetOutArgName","System.Runtime.Remoting.Messaging.IMethodReturnMessage.OutArgCount","System::Runtime::Remoting::Messaging::IMethodReturnMessage::OutArgCount","System.Runtime.Remoting.Messaging.IMethodReturnMessage.OutArgs","System::Runtime::Remoting::Messaging::IMethodReturnMessage::OutArgs","System.Runtime.Remoting.Messaging.IMethodReturnMessage.ReturnValue","System::Runtime::Remoting::Messaging::IMethodReturnMessage::ReturnValue"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"ae48584f-e8f3-2681-a5ce-8c342ae7396a","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Runtime.Remoting.Messaging\\IMethodReturnMessage.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Runtime.Remoting.Messaging/IMethodReturnMessage.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IMethodReturnMessage interface | Microsoft Docs","_op_ogTitle":"IMethodReturnMessage interface","description":"Defines the method call return message interface.\n","toc_asset_id":"_splitted/System.Runtime.Remoting.Messaging/toc.json","toc_rel":"_splitted/System.Runtime.Remoting.Messaging/toc.json","source_url":"","ms.assetid":"System.Runtime.Remoting.Messaging.IMethodReturnMessage","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.remoting.messaging.imethodreturnmessage","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.remoting.messaging.imethodreturnmessage","fileRelativePath":"System.Runtime.Remoting.Messaging.IMethodReturnMessage.html"},"themesRelativePathToOutputRoot":"_themes/"}