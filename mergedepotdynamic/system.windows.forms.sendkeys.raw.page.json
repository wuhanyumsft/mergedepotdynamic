{"content":"    \r\n    <h1 id=\"System_Windows_Forms_SendKeys\">\r\n      <span class=\"lang-csharp\">SendKeys</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides methods for sending keystrokes to an application.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class SendKeys</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SendKeys</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Use SendKeys to send keystrokes and keystroke combinations to the active application. This class cannot be instantiated. To send a keystroke to a class and immediately continue with the flow of your program, use <a class=\"xref\" href=\"system.windows.forms.sendkeys#System_Windows_Forms_SendKeys_Send_\" data-linktype=\"relative-path\">Send</a>. To wait for any processes started by the keystroke, use <a class=\"xref\" href=\"system.windows.forms.sendkeys#System_Windows_Forms_SendKeys_SendWait_\" data-linktype=\"relative-path\">SendWait</a>.  </p>\n<p> Each key is represented by one or more characters. To specify a single keyboard character, use the character itself. For example, to represent the letter A, pass in the string &quot;A&quot; to the method. To represent more than one character, append each additional character to the one preceding it. To represent the letters A, B, and C, specify the parameter as &quot;ABC&quot;.  </p>\n<p> The plus sign (+), caret (^), percent sign (%), tilde (~), and parentheses () have special meanings to SendKeys. To specify one of these characters, enclose it within braces ({}). For example, to specify the plus sign, use &quot;{+}&quot;. To specify brace characters, use &quot;{{}&quot; and &quot;{}}&quot;. Brackets ([ ]) have no special meaning to SendKeys, but you must enclose them in braces. In other applications, brackets do have a special meaning that might be significant when dynamic data exchange (DDE) occurs.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> If your application is intended for international use with a variety of keyboards, the use of <a class=\"xref\" href=\"system.windows.forms.sendkeys#System_Windows_Forms_SendKeys_Send_\" data-linktype=\"relative-path\">Send</a> could yield unpredictable results and should be avoided.  </p>\n</div>\n<p> To specify characters that aren&#39;t displayed when you press a key, such as ENTER or TAB, and keys that represent actions rather than characters, use the codes in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Key</th>\n<th>Code</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>BACKSPACE</td>\n<td>{BACKSPACE}, {BS}, or {BKSP}</td>\n</tr>\n<tr>\n<td>BREAK</td>\n<td>{BREAK}</td>\n</tr>\n<tr>\n<td>CAPS LOCK</td>\n<td>{CAPSLOCK}</td>\n</tr>\n<tr>\n<td>DEL or DELETE</td>\n<td>{DELETE} or {DEL}</td>\n</tr>\n<tr>\n<td>DOWN ARROW</td>\n<td>{DOWN}</td>\n</tr>\n<tr>\n<td>END</td>\n<td>{END}</td>\n</tr>\n<tr>\n<td>ENTER</td>\n<td>{ENTER}or ~</td>\n</tr>\n<tr>\n<td>ESC</td>\n<td>{ESC}</td>\n</tr>\n<tr>\n<td>HELP</td>\n<td>{HELP}</td>\n</tr>\n<tr>\n<td>HOME</td>\n<td>{HOME}</td>\n</tr>\n<tr>\n<td>INS or INSERT</td>\n<td>{INSERT} or {INS}</td>\n</tr>\n<tr>\n<td>LEFT ARROW</td>\n<td>{LEFT}</td>\n</tr>\n<tr>\n<td>NUM LOCK</td>\n<td>{NUMLOCK}</td>\n</tr>\n<tr>\n<td>PAGE DOWN</td>\n<td>{PGDN}</td>\n</tr>\n<tr>\n<td>PAGE UP</td>\n<td>{PGUP}</td>\n</tr>\n<tr>\n<td>PRINT SCREEN</td>\n<td>{PRTSC} (reserved for future use)</td>\n</tr>\n<tr>\n<td>RIGHT ARROW</td>\n<td>{RIGHT}</td>\n</tr>\n<tr>\n<td>SCROLL LOCK</td>\n<td>{SCROLLLOCK}</td>\n</tr>\n<tr>\n<td>TAB</td>\n<td>{TAB}</td>\n</tr>\n<tr>\n<td>UP ARROW</td>\n<td>{UP}</td>\n</tr>\n<tr>\n<td>F1</td>\n<td>{F1}</td>\n</tr>\n<tr>\n<td>F2</td>\n<td>{F2}</td>\n</tr>\n<tr>\n<td>F3</td>\n<td>{F3}</td>\n</tr>\n<tr>\n<td>F4</td>\n<td>{F4}</td>\n</tr>\n<tr>\n<td>F5</td>\n<td>{F5}</td>\n</tr>\n<tr>\n<td>F6</td>\n<td>{F6}</td>\n</tr>\n<tr>\n<td>F7</td>\n<td>{F7}</td>\n</tr>\n<tr>\n<td>F8</td>\n<td>{F8}</td>\n</tr>\n<tr>\n<td>F9</td>\n<td>{F9}</td>\n</tr>\n<tr>\n<td>F10</td>\n<td>{F10}</td>\n</tr>\n<tr>\n<td>F11</td>\n<td>{F11}</td>\n</tr>\n<tr>\n<td>F12</td>\n<td>{F12}</td>\n</tr>\n<tr>\n<td>F13</td>\n<td>{F13}</td>\n</tr>\n<tr>\n<td>F14</td>\n<td>{F14}</td>\n</tr>\n<tr>\n<td>F15</td>\n<td>{F15}</td>\n</tr>\n<tr>\n<td>F16</td>\n<td>{F16}</td>\n</tr>\n<tr>\n<td>Keypad add</td>\n<td>{ADD}</td>\n</tr>\n<tr>\n<td>Keypad subtract</td>\n<td>{SUBTRACT}</td>\n</tr>\n<tr>\n<td>Keypad multiply</td>\n<td>{MULTIPLY}</td>\n</tr>\n<tr>\n<td>Keypad divide</td>\n<td>{DIVIDE}</td>\n</tr>\n</tbody>\n</table>\n<p> To specify keys combined with any combination of the SHIFT, CTRL, and ALT keys, precede the key code with one or more of the following codes.  </p>\n<table>\n<thead>\n<tr>\n<th>Key</th>\n<th>Code</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SHIFT</td>\n<td>+</td>\n</tr>\n<tr>\n<td>CTRL</td>\n<td>^</td>\n</tr>\n<tr>\n<td>ALT</td>\n<td>%</td>\n</tr>\n</tbody>\n</table>\n<p> To specify that any combination of SHIFT, CTRL, and ALT should be held down while several other keys are pressed, enclose the code for those keys in parentheses. For example, to specify to hold down SHIFT while E and C are pressed, use &quot;+(EC)&quot;. To specify to hold down SHIFT while E is pressed, followed by C without SHIFT, use &quot;+EC&quot;.  </p>\n<p> To specify repeating keys, use the form {key number}. You must put a space between key and number. For example, {LEFT 42} means press the LEFT ARROW key 42 times; {h 10} means press H 10 times.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as <code>FindWindow</code> and <code>SetForegroundWindow</code>, to force focus on other applications.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> The SendKeys class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista. The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.  </p>\n<p> The SendKeys class is susceptible to timing issues, which some developers have had to work around. The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds. The SendKeys class tries to use the previous implementation first, and if that fails, uses the new implementation. As a result, the SendKeys class may behave differently on different operating systems. Additionally, when the SendKeys class uses the new implementation, the <a class=\"xref\" href=\"system.windows.forms.sendkeys#System_Windows_Forms_SendKeys_SendWait_\" data-linktype=\"relative-path\">SendWait</a> method will not wait for messages to be processed when they are sent to another process.  </p>\n<p> If your application relies on consistent behavior regardless of the operating system, you can force the SendKeys class to use the new implementation by adding the following application setting to your app.config file.  </p>\n<p> <code>&lt;appSettings&gt;</code>  </p>\n<p> <code>&lt;add key=&quot;SendKeys&quot; value=&quot;SendInput&quot;/&gt;</code>  </p>\n<p> <code>&lt;/appSettings&gt;</code>  </p>\n<p> To force the SendKeys class to use the previous implementation, use the value <code>&quot;JournalHook&quot;</code> instead.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_SendKeys_Flush\" data-linktype=\"self-bookmark\">Flush()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes all the Windows messages currently in the message queue.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_SendKeys_Send_System_String_\" data-linktype=\"self-bookmark\">Send(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends keystrokes to the active application.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_SendKeys_SendWait_System_String_\" data-linktype=\"self-bookmark\">SendWait(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the given keys to the active application, and then waits for the messages to be processed.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_SendKeys_Flush\">\r\n    \r\n            <a id=\"System_Windows_Forms_SendKeys_Flush_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Flush()</div>        \r\n          </div>\r\n    \r\n            <p>Processes all the Windows messages currently in the message queue.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Flush ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use Flush to wait for the application to process keystrokes and other operating system messages that are in the message queue. This is equivalent to calling <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_DoEvents_\" data-linktype=\"relative-path\">DoEvents</a> until there are no more keys to process.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as <code>FindWindow</code> and <code>SetForegroundWindow</code>, to force focus on other applications.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_SendKeys_Send_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Forms_SendKeys_Send_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Send(String)</div>        \r\n          </div>\r\n    \r\n            <p>Sends keystrokes to the active application.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Send (string keys);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keys</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string of keystrokes to send.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>There is not an active application to send keystrokes to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>keys</code> does not represent valid keystrokes</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Each key is represented by one or more characters. To specify a single keyboard character, use the character itself. For example, to represent the letter A, pass in the string &quot;A&quot; to the method. To represent more than one character, append each additional character to the one preceding it. To represent the letters A, B, and C, specify the parameter as &quot;ABC&quot;.  </p>\n<p> The plus sign (+), caret (^), percent sign (%), tilde (~), and parentheses () have special meanings to <a class=\"xref\" href=\"system.windows.forms.sendkeys\" data-linktype=\"relative-path\">SendKeys</a>. To specify one of these characters, enclose it within braces ({}). For example, to specify the plus sign, use &quot;{+}&quot;. To specify brace characters, use &quot;{{}&quot; and &quot;{}}&quot;. Brackets ([ ]) have no special meaning to <a class=\"xref\" href=\"system.windows.forms.sendkeys\" data-linktype=\"relative-path\">SendKeys</a>, but you must enclose them in braces. In other applications, brackets do have a special meaning that might be significant when dynamic data exchange (DDE) occurs.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> If your application is intended for international use with a variety of keyboards, the use of Send could yield unpredictable results and should be avoided.  </p>\n</div>\n<p> To specify characters that aren&#39;t displayed when you press a key, such as ENTER or TAB, and keys that represent actions rather than characters, use the codes in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Key</th>\n<th>Code</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>BACKSPACE</td>\n<td>{BACKSPACE}, {BS}, or {BKSP}</td>\n</tr>\n<tr>\n<td>BREAK</td>\n<td>{BREAK}</td>\n</tr>\n<tr>\n<td>CAPS LOCK</td>\n<td>{CAPSLOCK}</td>\n</tr>\n<tr>\n<td>DEL or DELETE</td>\n<td>{DELETE} or {DEL}</td>\n</tr>\n<tr>\n<td>DOWN ARROW</td>\n<td>{DOWN}</td>\n</tr>\n<tr>\n<td>END</td>\n<td>{END}</td>\n</tr>\n<tr>\n<td>ENTER</td>\n<td>{ENTER}or ~</td>\n</tr>\n<tr>\n<td>ESC</td>\n<td>{ESC}</td>\n</tr>\n<tr>\n<td>HELP</td>\n<td>{HELP}</td>\n</tr>\n<tr>\n<td>HOME</td>\n<td>{HOME}</td>\n</tr>\n<tr>\n<td>INS or INSERT</td>\n<td>{INSERT} or {INS}</td>\n</tr>\n<tr>\n<td>LEFT ARROW</td>\n<td>{LEFT}</td>\n</tr>\n<tr>\n<td>NUM LOCK</td>\n<td>{NUMLOCK}</td>\n</tr>\n<tr>\n<td>PAGE DOWN</td>\n<td>{PGDN}</td>\n</tr>\n<tr>\n<td>PAGE UP</td>\n<td>{PGUP}</td>\n</tr>\n<tr>\n<td>PRINT SCREEN</td>\n<td>{PRTSC} (reserved for future use)</td>\n</tr>\n<tr>\n<td>RIGHT ARROW</td>\n<td>{RIGHT}</td>\n</tr>\n<tr>\n<td>SCROLL LOCK</td>\n<td>{SCROLLLOCK}</td>\n</tr>\n<tr>\n<td>TAB</td>\n<td>{TAB}</td>\n</tr>\n<tr>\n<td>UP ARROW</td>\n<td>{UP}</td>\n</tr>\n<tr>\n<td>F1</td>\n<td>{F1}</td>\n</tr>\n<tr>\n<td>F2</td>\n<td>{F2}</td>\n</tr>\n<tr>\n<td>F3</td>\n<td>{F3}</td>\n</tr>\n<tr>\n<td>F4</td>\n<td>{F4}</td>\n</tr>\n<tr>\n<td>F5</td>\n<td>{F5}</td>\n</tr>\n<tr>\n<td>F6</td>\n<td>{F6}</td>\n</tr>\n<tr>\n<td>F7</td>\n<td>{F7}</td>\n</tr>\n<tr>\n<td>F8</td>\n<td>{F8}</td>\n</tr>\n<tr>\n<td>F9</td>\n<td>{F9}</td>\n</tr>\n<tr>\n<td>F10</td>\n<td>{F10}</td>\n</tr>\n<tr>\n<td>F11</td>\n<td>{F11}</td>\n</tr>\n<tr>\n<td>F12</td>\n<td>{F12}</td>\n</tr>\n<tr>\n<td>F13</td>\n<td>{F13}</td>\n</tr>\n<tr>\n<td>F14</td>\n<td>{F14}</td>\n</tr>\n<tr>\n<td>F15</td>\n<td>{F15}</td>\n</tr>\n<tr>\n<td>F16</td>\n<td>{F16}</td>\n</tr>\n<tr>\n<td>Keypad add</td>\n<td>{ADD}</td>\n</tr>\n<tr>\n<td>Keypad subtract</td>\n<td>{SUBTRACT}</td>\n</tr>\n<tr>\n<td>Keypad multiply</td>\n<td>{MULTIPLY}</td>\n</tr>\n<tr>\n<td>Keypad divide</td>\n<td>{DIVIDE}</td>\n</tr>\n</tbody>\n</table>\n<p> To specify keys combined with any combination of the SHIFT, CTRL, and ALT keys, precede the key code with one or more of the following codes.  </p>\n<table>\n<thead>\n<tr>\n<th>Key</th>\n<th>Code</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SHIFT</td>\n<td>+</td>\n</tr>\n<tr>\n<td>CTRL</td>\n<td>^</td>\n</tr>\n<tr>\n<td>ALT</td>\n<td>%</td>\n</tr>\n</tbody>\n</table>\n<p> To specify that any combination of SHIFT, CTRL, and ALT should be held down while several other keys are pressed, enclose the code for those keys in parentheses. For example, to specify to hold down SHIFT while E and C are pressed, use &quot;+(EC)&quot;. To specify to hold down SHIFT while E is pressed, followed by C without SHIFT, use &quot;+EC&quot;.  </p>\n<p> To specify repeating keys, use the form {key number}. You must put a space between key and number. For example, {LEFT 42} means press the LEFT ARROW key 42 times; {h 10} means press H 10 times.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as <code>FindWindow</code> and <code>SetForegroundWindow</code>, to force focus on other applications.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.windows.forms.sendkeys\" data-linktype=\"relative-path\">SendKeys</a> class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista. The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.sendkeys\" data-linktype=\"relative-path\">SendKeys</a> class is susceptible to timing issues, which some developers have had to work around. The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds. The <a class=\"xref\" href=\"system.windows.forms.sendkeys\" data-linktype=\"relative-path\">SendKeys</a> class tries to use the previous implementation first, and if that fails, uses the new implementation. As a result, the <a class=\"xref\" href=\"system.windows.forms.sendkeys\" data-linktype=\"relative-path\">SendKeys</a> class may behave differently on different operating systems. Additionally, when the <a class=\"xref\" href=\"system.windows.forms.sendkeys\" data-linktype=\"relative-path\">SendKeys</a> class uses the new implementation, the <a class=\"xref\" href=\"system.windows.forms.sendkeys#System_Windows_Forms_SendKeys_SendWait_\" data-linktype=\"relative-path\">SendWait</a> method will not wait for messages to be processed when they are sent to another process.  </p>\n<p> If your application relies on consistent behavior regardless of the operating system, you can force the <a class=\"xref\" href=\"system.windows.forms.sendkeys\" data-linktype=\"relative-path\">SendKeys</a> class to use the new implementation by adding the following application setting to your app.config file.  </p>\n<p> <code>&lt;appSettings&gt;</code>  </p>\n<p> <code>&lt;add key=&quot;SendKeys&quot; value=&quot;SendInput&quot;/&gt;</code>  </p>\n<p> <code>&lt;/appSettings&gt;</code>  </p>\n<p> To force the <a class=\"xref\" href=\"system.windows.forms.sendkeys\" data-linktype=\"relative-path\">SendKeys</a> class to use the previous implementation, use the value <code>&quot;JournalHook&quot;</code> instead.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the Send method.To run the example, paste the following code in a form called Form1 containing a button called Button1. Ensure the click events are associated with their event-handling methods in this example. The button control&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TabIndex_\" data-linktype=\"relative-path\">TabIndex</a> property should be set to 0. When the example is running, double-click the form to trigger the button&#39;s click event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.SendKeys#1\">\n\t// Clicking Button1 causes a message box to appear.\n\tprivate void Button1_Click(System.Object sender, System.EventArgs e)\n\t{\n\t\tMessageBox.Show(&quot;Click here!&quot;);\n\t}\n\n\n\t// Use the SendKeys.Send method to raise the Button1 click event \n\t// and display the message box.\n\tprivate void Form1_DoubleClick(object sender, System.EventArgs e)\n\t{\n\n\t\t// Send the enter key; since the tab stop of Button1 is 0, this\n\t\t// will trigger the click event.\n\t\tSendKeys.Send(&quot;{ENTER}&quot;);\n\t}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.SendKeys#1\">private:\n   // Clicking Button1 causes a message box to appear.\n   void Button1_Click( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      MessageBox::Show( &quot;Click here!&quot; );\n   }\n\n   // Use the SendKeys.Send method to raise the Button1 click event \n   // and display the message box.\n   void Form1_DoubleClick( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      \n      // Send the enter key; since the tab stop of Button1 is 0, this\n      // will trigger the click event.\n      SendKeys::Send( &quot;{ENTER}&quot; );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.SendKeys#1\">\n    &#39; Clicking Button1 causes a message box to appear.\n    Private Sub Button1_Click(ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles Button1.Click\n        MessageBox.Show(&quot;Click here!&quot;)\n    End Sub\n\n\n    &#39; Use the SendKeys.Send method to raise the Button1 click event \n    &#39; and display the message box.\n    Private Sub Form1_DoubleClick(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles MyBase.DoubleClick\n\n        &#39; Send the enter key; since the tab stop of Button1 is 0, this\n        &#39; will trigger the click event.\n        SendKeys.Send(&quot;{ENTER}&quot;)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_SendKeys_SendWait_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Forms_SendKeys_SendWait_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendWait(String)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the given keys to the active application, and then waits for the messages to be processed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void SendWait (string keys);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keys</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string of keystrokes to send.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use SendWait to send keystrokes or combinations of keystrokes to the active application and wait for the keystroke messages to be processed. You can use this method to send keystrokes to an application and wait for any processes that are started by the keystrokes to be completed. This can be important if the other application must finish before your application can continue.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as <code>FindWindow</code> and <code>SetForegroundWindow</code>, to force focus on other applications.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.windows.forms.sendkeys\" data-linktype=\"relative-path\">SendKeys</a> class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista. The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.sendkeys\" data-linktype=\"relative-path\">SendKeys</a> class is susceptible to timing issues, which some developers have had to work around. The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds. The <a class=\"xref\" href=\"system.windows.forms.sendkeys\" data-linktype=\"relative-path\">SendKeys</a> class tries to use the previous implementation first, and if that fails, uses the new implementation. As a result, the <a class=\"xref\" href=\"system.windows.forms.sendkeys\" data-linktype=\"relative-path\">SendKeys</a> class may behave differently on different operating systems. Additionally, when the <a class=\"xref\" href=\"system.windows.forms.sendkeys\" data-linktype=\"relative-path\">SendKeys</a> class uses the new implementation, the SendWait method will not wait for messages to be processed when they are sent to another process.  </p>\n<p> If your application relies on consistent behavior regardless of the operating system, you can force the <a class=\"xref\" href=\"system.windows.forms.sendkeys\" data-linktype=\"relative-path\">SendKeys</a> class to use the new implementation by adding the following application setting to your app.config file.  </p>\n<p> <code>&lt;appSettings&gt;</code>  </p>\n<p> <code>&lt;add key=&quot;SendKeys&quot; value=&quot;SendInput&quot;/&gt;</code>  </p>\n<p> <code>&lt;/appSettings&gt;</code>  </p>\n<p> To force the <a class=\"xref\" href=\"system.windows.forms.sendkeys\" data-linktype=\"relative-path\">SendKeys</a> class to use the previous implementation, use the value <code>&quot;JournalHook&quot;</code> instead.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.SendKeys.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.SendKeys.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.SendKeys\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.SendKeys.Flush\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.SendKeys.Send\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.SendKeys.SendWait\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"665b34a0-107a-305e-615c-d1e430c06279\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides methods for sending keystrokes to an application.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.SendKeys\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.SendKeys.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.SendKeys.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.SendKeys","System.Windows.Forms.SendKeys.Flush","System.Windows.Forms.SendKeys.Send","System.Windows.Forms.SendKeys.SendWait"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.SendKeys","System::Windows::Forms::SendKeys","System.Windows.Forms.SendKeys.Flush","System::Windows::Forms::SendKeys::Flush","System.Windows.Forms.SendKeys.Send","System::Windows::Forms::SendKeys::Send","System.Windows.Forms.SendKeys.SendWait","System::Windows::Forms::SendKeys::SendWait"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"665b34a0-107a-305e-615c-d1e430c06279","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/SendKeys.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SendKeys class | Microsoft Docs","_op_ogTitle":"SendKeys class","description":"Provides methods for sending keystrokes to an application.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.SendKeys","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.sendkeys","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.sendkeys","fileRelativePath":"System.Windows.Forms.SendKeys.html"},"themesRelativePathToOutputRoot":"_themes/"}