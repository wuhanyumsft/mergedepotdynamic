{"content":"    \r\n    <h1 id=\"Microsoft_VisualC_StlClr_IList_1\">\r\n      <span class=\"lang-csharp\">IList&lt;TValue&gt;</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines the interface for an STL/CLR <a href=\"../Topic/list%20(STL-CLR).md\" data-linktype=\"relative-path\">list</a> object.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface IList&lt;TValue&gt; : ICloneable, Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer&lt;TValue&gt;, System.Collections.ICollection</code></pre>\r\n    \r\n    \r\n    \t<h2>Type Parameters</h2>\r\n    \r\n    \t<table class=\"nameValue\">\r\n    \t\t<tr>\r\n    \t\t<td>\r\n    \t\tTValue\r\n    \t\t</td>\r\n    \t\t<td>\r\n    \t\t<p>The type of a list element.</p>\n\r\n    \t\t</td>\r\n    \t\t</tr>\r\n    \t</table>\r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Some methods, especially operators, declare a type for a parameter but do not specify a parameter name. Such a parameter is known as an <em>unnamed parameter</em>. In the documentation for these methods, the <em>__unnamed0</em> placeholder represents the unnamed parameter.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_back_item\" data-linktype=\"self-bookmark\">back_item</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Accesses the last element of the container.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_front_item\" data-linktype=\"self-bookmark\">front_item</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Accesses the first element of the container.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_assign_System_Collections_IEnumerable_\" data-linktype=\"self-bookmark\">assign(IEnumerable)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Replaces the controlled sequence with the sequence that is designated by the given enumerator.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_assign_Microsoft_VisualC_StlClr_Generic_IInputIterator__0__Microsoft_VisualC_StlClr_Generic_IInputIterator__0__\" data-linktype=\"self-bookmark\">assign(IInputIterator&lt;TValue&gt;,IInputIterator&lt;TValue&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Replaces the controlled sequence with the sequence <code>[</code><code>_First</code><code>,</code><code>_Last</code><code>)</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_assign_System_Int32__0_\" data-linktype=\"self-bookmark\">assign(Int32,TValue)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Replaces the controlled sequence with the specified number of the given element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_back\" data-linktype=\"self-bookmark\">back()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Accesses the last element of the container.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_begin_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator__0___\" data-linktype=\"self-bookmark\">begin(ContainerBidirectionalIterator&lt;TValue&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Designates the beginning of the controlled sequence.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_clear\" data-linktype=\"self-bookmark\">clear()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes all elements from the container.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_empty\" data-linktype=\"self-bookmark\">empty()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tests whether the container has no elements.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_end_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator__0___\" data-linktype=\"self-bookmark\">end(ContainerBidirectionalIterator&lt;TValue&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Designates the end of the controlled sequence.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_erase_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator__0___Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator_\" data-linktype=\"self-bookmark\">erase(ContainerBidirectionalIterator&lt;TValue&gt;,ContainerBidirectionalIterator)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_erase_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator__0___Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator_\" data-linktype=\"self-bookmark\">erase(ContainerBidirectionalIterator&lt;TValue&gt;,ContainerBidirectionalIterator,ContainerBidirectionalIterator)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_front\" data-linktype=\"self-bookmark\">front()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Accesses the first element of the container.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_insert_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator_System_Collections_IEnumerable_\" data-linktype=\"self-bookmark\">insert(ContainerBidirectionalIterator,IEnumerable)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_insert_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator_Microsoft_VisualC_StlClr_Generic_IInputIterator__0__Microsoft_VisualC_StlClr_Generic_IInputIterator__0__\" data-linktype=\"self-bookmark\">insert(ContainerBidirectionalIterator,IInputIterator&lt;TValue&gt;,IInputIterator&lt;TValue&gt;)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_insert_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator_System_Int32__0_\" data-linktype=\"self-bookmark\">insert(ContainerBidirectionalIterator,Int32,TValue)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_insert_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator__0___Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator__0_\" data-linktype=\"self-bookmark\">insert(ContainerBidirectionalIterator&lt;TValue&gt;,ContainerBidirectionalIterator,TValue)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_merge_Microsoft_VisualC_StlClr_IList__0__Microsoft_VisualC_StlClr_BinaryDelegate__0__0_System_Boolean__\" data-linktype=\"self-bookmark\">merge(IList&lt;TValue&gt;,BinaryDelegate&lt;TValue,TValue,Boolean&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Merges two ordered controlled sequences.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_pop_back\" data-linktype=\"self-bookmark\">pop_back()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the last element from the container.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_pop_front\" data-linktype=\"self-bookmark\">pop_front()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the first element from the container.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_push_back__0_\" data-linktype=\"self-bookmark\">push_back(TValue)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a new element to the end of the container.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_push_front__0_\" data-linktype=\"self-bookmark\">push_front(TValue)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a new element to the beginning of the container.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_rbegin_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator__0___\" data-linktype=\"self-bookmark\">rbegin(ReverseBidirectionalIterator&lt;TValue&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Designates the beginning of the reversed controlled sequence.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_remove__0_\" data-linktype=\"self-bookmark\">remove(TValue)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes an element that has a specified value from the container.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_rend_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator__0___\" data-linktype=\"self-bookmark\">rend(ReverseBidirectionalIterator&lt;TValue&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Designates the end of the reversed controlled sequence.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_resize_System_Int32_\" data-linktype=\"self-bookmark\">resize(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Changes the number of elements in the container to the specified size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_resize_System_Int32__0_\" data-linktype=\"self-bookmark\">resize(Int32,TValue)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Changes the number of elements in the container to the specified size. If the new size is larger than the old size, the given values will be appended to the container.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_reverse\" data-linktype=\"self-bookmark\">reverse()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reverses the elements of the controlled sequence.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_size\" data-linktype=\"self-bookmark\">size()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Counts the number of elements in the container.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_sort_Microsoft_VisualC_StlClr_BinaryDelegate__0__0_System_Boolean__\" data-linktype=\"self-bookmark\">sort(BinaryDelegate&lt;TValue,TValue,Boolean&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Orders the controlled sequence.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_splice_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator_Microsoft_VisualC_StlClr_IList__0__\" data-linktype=\"self-bookmark\">splice(ContainerBidirectionalIterator,IList&lt;TValue&gt;)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_splice_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator_Microsoft_VisualC_StlClr_IList__0__Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator_\" data-linktype=\"self-bookmark\">splice(ContainerBidirectionalIterator,IList&lt;TValue&gt;,ContainerBidirectionalIterator)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_splice_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator_Microsoft_VisualC_StlClr_IList__0__Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator_\" data-linktype=\"self-bookmark\">splice(ContainerBidirectionalIterator,IList&lt;TValue&gt;,ContainerBidirectionalIterator,ContainerBidirectionalIterator)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_swap_Microsoft_VisualC_StlClr_IList__0__\" data-linktype=\"self-bookmark\">swap(IList&lt;TValue&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Swaps the contents of two containers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_IList_1_unique_Microsoft_VisualC_StlClr_BinaryDelegate__0__0_System_Boolean__\" data-linktype=\"self-bookmark\">unique(BinaryDelegate&lt;TValue,TValue,Boolean&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes adjacent elements that pass a specified test.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_back_item\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_back_item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">back_item</div>        \r\n          </div>\r\n    \r\n            <p>Accesses the last element of the container.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TValue back_item { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">TValue</span></div>\r\n                  </div>\r\n                  <p>The last element of the controlled sequence, which must be non-empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::back_item%20(STL-CLR).md\" data-linktype=\"relative-path\">list::back_item (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_front_item\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_front_item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">front_item</div>        \r\n          </div>\r\n    \r\n            <p>Accesses the first element of the container.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TValue front_item { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">TValue</span></div>\r\n                  </div>\r\n                  <p>The first element of the controlled sequence, which must be non-empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::front_item%20(STL-CLR).md\" data-linktype=\"relative-path\">list::front_item (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_assign_System_Collections_IEnumerable_\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_assign_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">assign(IEnumerable)</div>        \r\n          </div>\r\n    \r\n            <p>Replaces the controlled sequence with the sequence that is designated by the given enumerator.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void assign (System.Collections.IEnumerable _Right);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The enumeration whose elements are to be inserted into the container.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::assign%20(STL-CLR).md\" data-linktype=\"relative-path\">list::assign (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_assign_Microsoft_VisualC_StlClr_Generic_IInputIterator__0__Microsoft_VisualC_StlClr_Generic_IInputIterator__0__\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_assign_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">assign(IInputIterator&lt;TValue&gt;,IInputIterator&lt;TValue&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Replaces the controlled sequence with the sequence <code>[</code><code>_First</code><code>,</code><code>_Last</code><code>)</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void assign (Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _First, Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _Last);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_First</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.generic.iinputiterator-1\" data-linktype=\"relative-path\">IInputIterator<tvalue></tvalue></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The beginning position of the range of elements to insert into the container.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Last</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.generic.iinputiterator-1\" data-linktype=\"relative-path\">IInputIterator<tvalue></tvalue></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first position beyond the range of elements to insert into the container.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::assign%20(STL-CLR).md\" data-linktype=\"relative-path\">list::assign (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_assign_System_Int32__0_\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_assign_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">assign(Int32,TValue)</div>        \r\n          </div>\r\n    \r\n            <p>Replaces the controlled sequence with the specified number of the given element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void assign (int _Count, TValue _Val);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of elements to insert into the container.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Val</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TValue</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the elements to insert into the container.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::assign%20(STL-CLR).md\" data-linktype=\"relative-path\">list::assign (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_back\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_back_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">back()</div>        \r\n          </div>\r\n    \r\n            <p>Accesses the last element of the container.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TValue back ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                  </div>\r\n                  <p>The last element of the controlled sequence, which must be non-empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::back%20(STL-CLR).md\" data-linktype=\"relative-path\">list::back (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_begin_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator__0___\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_begin_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">begin(ContainerBidirectionalIterator&lt;TValue&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Designates the beginning of the controlled sequence.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) begin (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; );</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt></dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.generic.containerbidirectionaliterator-1\" data-linktype=\"relative-path\">ContainerBidirectionalIterator<tvalue></tvalue></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                  </div>\r\n                  <p>An iterator.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::begin%20(STL-CLR).md\" data-linktype=\"relative-path\">list::begin (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_clear\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_clear_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">clear()</div>        \r\n          </div>\r\n    \r\n            <p>Removes all elements from the container.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void clear ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::clear%20(STL-CLR).md\" data-linktype=\"relative-path\">list::clear (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_empty\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_empty_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">empty()</div>        \r\n          </div>\r\n    \r\n            <p>Tests whether the container has no elements.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool empty ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the container has no elements; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::empty%20(STL-CLR).md\" data-linktype=\"relative-path\">list::empty (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_end_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator__0___\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_end_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">end(ContainerBidirectionalIterator&lt;TValue&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Designates the end of the controlled sequence.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) end (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; );</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt></dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.generic.containerbidirectionaliterator-1\" data-linktype=\"relative-path\">ContainerBidirectionalIterator<tvalue></tvalue></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                  </div>\r\n                  <p>An iterator.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::end%20(STL-CLR).md\" data-linktype=\"relative-path\">list::end (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_erase_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator__0___Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator_\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_erase_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">erase(ContainerBidirectionalIterator&lt;TValue&gt;,ContainerBidirectionalIterator)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt></dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.generic.containerbidirectionaliterator-1\" data-linktype=\"relative-path\">ContainerBidirectionalIterator<tvalue></tvalue></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Where</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_erase_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator__0___Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator_\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_erase_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">erase(ContainerBidirectionalIterator&lt;TValue&gt;,ContainerBidirectionalIterator,ContainerBidirectionalIterator)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _First_iter, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Last_iter);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt></dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.generic.containerbidirectionaliterator-1\" data-linktype=\"relative-path\">ContainerBidirectionalIterator<tvalue></tvalue></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>_First_iter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Last_iter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_front\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_front_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">front()</div>        \r\n          </div>\r\n    \r\n            <p>Accesses the first element of the container.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TValue front ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                  </div>\r\n                  <p>The first element of the controlled sequence, which must be non-empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::front%20(STL-CLR).md\" data-linktype=\"relative-path\">list::front (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_insert_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator_System_Collections_IEnumerable_\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_insert_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">insert(ContainerBidirectionalIterator,IEnumerable)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void insert (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where_iter, System.Collections.IEnumerable _Right);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Where_iter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_insert_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator_Microsoft_VisualC_StlClr_Generic_IInputIterator__0__Microsoft_VisualC_StlClr_Generic_IInputIterator__0__\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_insert_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">insert(ContainerBidirectionalIterator,IInputIterator&lt;TValue&gt;,IInputIterator&lt;TValue&gt;)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void insert (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _First, Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _Last);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Where</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>_First</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.generic.iinputiterator-1\" data-linktype=\"relative-path\">IInputIterator<tvalue></tvalue></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Last</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.generic.iinputiterator-1\" data-linktype=\"relative-path\">IInputIterator<tvalue></tvalue></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_insert_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator_System_Int32__0_\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_insert_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">insert(ContainerBidirectionalIterator,Int32,TValue)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void insert (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, int _Count, TValue _Val);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Where</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Val</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TValue</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_insert_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator__0___Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator__0_\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_insert_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">insert(ContainerBidirectionalIterator&lt;TValue&gt;,ContainerBidirectionalIterator,TValue)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) insert (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, TValue _Val);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt></dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.generic.containerbidirectionaliterator-1\" data-linktype=\"relative-path\">ContainerBidirectionalIterator<tvalue></tvalue></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Where</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Val</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TValue</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_merge_Microsoft_VisualC_StlClr_IList__0__Microsoft_VisualC_StlClr_BinaryDelegate__0__0_System_Boolean__\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_merge_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">merge(IList&lt;TValue&gt;,BinaryDelegate&lt;TValue,TValue,Boolean&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Merges two ordered controlled sequences.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void merge (Microsoft.VisualC.StlClr.IList&lt;TValue&gt; _Right, Microsoft.VisualC.StlClr.BinaryDelegate&lt;TValue,TValue,bool&gt; _Pred);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.ilist-1\" data-linktype=\"relative-path\">IList<tvalue></tvalue></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The container to merge into this container.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Pred</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.binarydelegate-3\" data-linktype=\"relative-path\">BinaryDelegate</a>&lt;<span class=\"xref\">TValue</span>,<span class=\"xref\">TValue</span>,<a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Boolean functor for comparing pairs of elements.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::merge%20(STL-CLR).md\" data-linktype=\"relative-path\">list::merge (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_pop_back\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_pop_back_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">pop_back()</div>        \r\n          </div>\r\n    \r\n            <p>Removes the last element from the container.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void pop_back ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::pop_back%20(STL-CLR).md\" data-linktype=\"relative-path\">list::pop_back (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_pop_front\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_pop_front_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">pop_front()</div>        \r\n          </div>\r\n    \r\n            <p>Removes the first element from the container.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void pop_front ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::pop_front%20(STL-CLR).md\" data-linktype=\"relative-path\">list::pop_front (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_push_back__0_\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_push_back_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">push_back(TValue)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a new element to the end of the container.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void push_back (TValue _Val);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Val</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TValue</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the element to append to the container.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::push_back%20(STL-CLR).md\" data-linktype=\"relative-path\">list::push_back (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_push_front__0_\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_push_front_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">push_front(TValue)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a new element to the beginning of the container.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void push_front (TValue _Val);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Val</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TValue</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the element to insert at the beginning of the container.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::push_front%20(STL-CLR).md\" data-linktype=\"relative-path\">list::push_front (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_rbegin_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator__0___\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_rbegin_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">rbegin(ReverseBidirectionalIterator&lt;TValue&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Designates the beginning of the reversed controlled sequence.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rbegin (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt; );</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt></dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.generic.reversebidirectionaliterator-1\" data-linktype=\"relative-path\">ReverseBidirectionalIterator<tvalue></tvalue></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                  </div>\r\n                  <p>An iterator.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::rbegin%20(STL-CLR).md\" data-linktype=\"relative-path\">list::rbegin (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_remove__0_\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_remove_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">remove(TValue)</div>        \r\n          </div>\r\n    \r\n            <p>Removes an element that has a specified value from the container.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void remove (TValue _Val);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Val</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TValue</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the element to remove from the container.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::remove%20(STL-CLR).md\" data-linktype=\"relative-path\">list::remove (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_rend_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator__0___\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_rend_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">rend(ReverseBidirectionalIterator&lt;TValue&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Designates the end of the reversed controlled sequence.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rend (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt; );</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt></dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.generic.reversebidirectionaliterator-1\" data-linktype=\"relative-path\">ReverseBidirectionalIterator<tvalue></tvalue></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                  </div>\r\n                  <p>An iterator.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::rend%20(STL-CLR).md\" data-linktype=\"relative-path\">list::rend (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_resize_System_Int32_\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_resize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">resize(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Changes the number of elements in the container to the specified size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void resize (int _Newsize);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Newsize</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new size of the container.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::resize%20(STL-CLR).md\" data-linktype=\"relative-path\">list::resize (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_resize_System_Int32__0_\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_resize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">resize(Int32,TValue)</div>        \r\n          </div>\r\n    \r\n            <p>Changes the number of elements in the container to the specified size. If the new size is larger than the old size, the given values will be appended to the container.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void resize (int _Newsize, TValue _Val);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Newsize</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new size of the container.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Val</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TValue</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the padding elements.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::resize%20(STL-CLR).md\" data-linktype=\"relative-path\">list::resize (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_reverse\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_reverse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">reverse()</div>        \r\n          </div>\r\n    \r\n            <p>Reverses the elements of the controlled sequence.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void reverse ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::reverse%20(STL-CLR).md\" data-linktype=\"relative-path\">list::reverse (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_size\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_size_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">size()</div>        \r\n          </div>\r\n    \r\n            <p>Counts the number of elements in the container.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int size ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The length of the controlled sequence.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::size%20(STL-CLR).md\" data-linktype=\"relative-path\">list::size (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_sort_Microsoft_VisualC_StlClr_BinaryDelegate__0__0_System_Boolean__\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_sort_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">sort(BinaryDelegate&lt;TValue,TValue,Boolean&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Orders the controlled sequence.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void sort (Microsoft.VisualC.StlClr.BinaryDelegate&lt;TValue,TValue,bool&gt; _Pred);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Pred</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.binarydelegate-3\" data-linktype=\"relative-path\">BinaryDelegate</a>&lt;<span class=\"xref\">TValue</span>,<span class=\"xref\">TValue</span>,<a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The operator that will be used to compare elements for ordering.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::sort%20(STL-CLR).md\" data-linktype=\"relative-path\">list::sort (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_splice_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator_Microsoft_VisualC_StlClr_IList__0__\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_splice_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">splice(ContainerBidirectionalIterator,IList&lt;TValue&gt;)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void splice (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, Microsoft.VisualC.StlClr.IList&lt;TValue&gt; _Right);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Where</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.ilist-1\" data-linktype=\"relative-path\">IList<tvalue></tvalue></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_splice_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator_Microsoft_VisualC_StlClr_IList__0__Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator_\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_splice_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">splice(ContainerBidirectionalIterator,IList&lt;TValue&gt;,ContainerBidirectionalIterator)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void splice (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, Microsoft.VisualC.StlClr.IList&lt;TValue&gt; _Right, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _First);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Where</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.ilist-1\" data-linktype=\"relative-path\">IList<tvalue></tvalue></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>_First</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_splice_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator_Microsoft_VisualC_StlClr_IList__0__Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator_\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_splice_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">splice(ContainerBidirectionalIterator,IList&lt;TValue&gt;,ContainerBidirectionalIterator,ContainerBidirectionalIterator)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void splice (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, Microsoft.VisualC.StlClr.IList&lt;TValue&gt; _Right, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _First, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Last);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Where</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.ilist-1\" data-linktype=\"relative-path\">IList<tvalue></tvalue></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>_First</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Last</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_swap_Microsoft_VisualC_StlClr_IList__0__\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_swap_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">swap(IList&lt;TValue&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Swaps the contents of two containers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void swap (Microsoft.VisualC.StlClr.IList&lt;TValue&gt; _Right);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.ilist-1\" data-linktype=\"relative-path\">IList<tvalue></tvalue></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The container to swap contents with.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::swap%20(STL-CLR).md\" data-linktype=\"relative-path\">list::swap (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_IList_1_unique_Microsoft_VisualC_StlClr_BinaryDelegate__0__0_System_Boolean__\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_IList_1_unique_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">unique(BinaryDelegate&lt;TValue,TValue,Boolean&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Removes adjacent elements that pass a specified test.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void unique (Microsoft.VisualC.StlClr.BinaryDelegate&lt;TValue,TValue,bool&gt; _Pred);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Pred</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.binarydelegate-3\" data-linktype=\"relative-path\">BinaryDelegate</a>&lt;<span class=\"xref\">TValue</span>,<span class=\"xref\">TValue</span>,<a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The comparer that determines whether element pairs are unique. An element that is not unique will be removed from the container.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see <a href=\"../Topic/list::unique%20(STL-CLR).md\" data-linktype=\"relative-path\">list::unique (STL/CLR)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.VisualC.StlClr.IList-1.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.VisualC.StlClr.IList-1.yml\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.assign\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.back\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.back_item\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.begin\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.clear\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.empty\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.end\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.erase\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.front\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.front_item\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.insert\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.merge\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.pop_back\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.pop_front\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.push_back\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.push_front\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.rbegin\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.remove\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.rend\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.resize\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.reverse\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.size\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.sort\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.splice\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.swap\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.IList&lt;TValue&gt;.unique\">\r\n<meta name=\"APILocation\" content=\"Microsoft.VisualC.STLCLR.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"47100b3f-376b-f5b0-4830-3317d1e587ba\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines the interface for an STL/CLR list object.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/Microsoft.VisualC.StlClr/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"Microsoft.VisualC.StlClr.IList`1\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.VisualC.StlClr.IList-1.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.VisualC.StlClr.IList-1.yml","open_to_public_contributors":true,"api_name":["Microsoft.VisualC.StlClr.IList<TValue>","Microsoft.VisualC.StlClr.IList<TValue>.assign","Microsoft.VisualC.StlClr.IList<TValue>.back","Microsoft.VisualC.StlClr.IList<TValue>.back_item","Microsoft.VisualC.StlClr.IList<TValue>.begin","Microsoft.VisualC.StlClr.IList<TValue>.clear","Microsoft.VisualC.StlClr.IList<TValue>.empty","Microsoft.VisualC.StlClr.IList<TValue>.end","Microsoft.VisualC.StlClr.IList<TValue>.erase","Microsoft.VisualC.StlClr.IList<TValue>.front","Microsoft.VisualC.StlClr.IList<TValue>.front_item","Microsoft.VisualC.StlClr.IList<TValue>.insert","Microsoft.VisualC.StlClr.IList<TValue>.merge","Microsoft.VisualC.StlClr.IList<TValue>.pop_back","Microsoft.VisualC.StlClr.IList<TValue>.pop_front","Microsoft.VisualC.StlClr.IList<TValue>.push_back","Microsoft.VisualC.StlClr.IList<TValue>.push_front","Microsoft.VisualC.StlClr.IList<TValue>.rbegin","Microsoft.VisualC.StlClr.IList<TValue>.remove","Microsoft.VisualC.StlClr.IList<TValue>.rend","Microsoft.VisualC.StlClr.IList<TValue>.resize","Microsoft.VisualC.StlClr.IList<TValue>.reverse","Microsoft.VisualC.StlClr.IList<TValue>.size","Microsoft.VisualC.StlClr.IList<TValue>.sort","Microsoft.VisualC.StlClr.IList<TValue>.splice","Microsoft.VisualC.StlClr.IList<TValue>.swap","Microsoft.VisualC.StlClr.IList<TValue>.unique"],"api_location":["Microsoft.VisualC.STLCLR.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["Microsoft.VisualC.StlClr.IList`1","Microsoft::VisualC::StlClr::IList`1","Microsoft.VisualC.StlClr.IList`1.assign","Microsoft::VisualC::StlClr::IList`1::assign","Microsoft.VisualC.StlClr.IList`1.back","Microsoft::VisualC::StlClr::IList`1::back","Microsoft.VisualC.StlClr.IList`1.back_item","Microsoft::VisualC::StlClr::IList`1::back_item","Microsoft.VisualC.StlClr.IList`1.begin","Microsoft::VisualC::StlClr::IList`1::begin","Microsoft.VisualC.StlClr.IList`1.clear","Microsoft::VisualC::StlClr::IList`1::clear","Microsoft.VisualC.StlClr.IList`1.empty","Microsoft::VisualC::StlClr::IList`1::empty","Microsoft.VisualC.StlClr.IList`1.end","Microsoft::VisualC::StlClr::IList`1::end","Microsoft.VisualC.StlClr.IList`1.erase","Microsoft::VisualC::StlClr::IList`1::erase","Microsoft.VisualC.StlClr.IList`1.front","Microsoft::VisualC::StlClr::IList`1::front","Microsoft.VisualC.StlClr.IList`1.front_item","Microsoft::VisualC::StlClr::IList`1::front_item","Microsoft.VisualC.StlClr.IList`1.insert","Microsoft::VisualC::StlClr::IList`1::insert","Microsoft.VisualC.StlClr.IList`1.merge","Microsoft::VisualC::StlClr::IList`1::merge","Microsoft.VisualC.StlClr.IList`1.pop_back","Microsoft::VisualC::StlClr::IList`1::pop_back","Microsoft.VisualC.StlClr.IList`1.pop_front","Microsoft::VisualC::StlClr::IList`1::pop_front","Microsoft.VisualC.StlClr.IList`1.push_back","Microsoft::VisualC::StlClr::IList`1::push_back","Microsoft.VisualC.StlClr.IList`1.push_front","Microsoft::VisualC::StlClr::IList`1::push_front","Microsoft.VisualC.StlClr.IList`1.rbegin","Microsoft::VisualC::StlClr::IList`1::rbegin","Microsoft.VisualC.StlClr.IList`1.remove","Microsoft::VisualC::StlClr::IList`1::remove","Microsoft.VisualC.StlClr.IList`1.rend","Microsoft::VisualC::StlClr::IList`1::rend","Microsoft.VisualC.StlClr.IList`1.resize","Microsoft::VisualC::StlClr::IList`1::resize","Microsoft.VisualC.StlClr.IList`1.reverse","Microsoft::VisualC::StlClr::IList`1::reverse","Microsoft.VisualC.StlClr.IList`1.size","Microsoft::VisualC::StlClr::IList`1::size","Microsoft.VisualC.StlClr.IList`1.sort","Microsoft::VisualC::StlClr::IList`1::sort","Microsoft.VisualC.StlClr.IList`1.splice","Microsoft::VisualC::StlClr::IList`1::splice","Microsoft.VisualC.StlClr.IList`1.swap","Microsoft::VisualC::StlClr::IList`1::swap","Microsoft.VisualC.StlClr.IList`1.unique","Microsoft::VisualC::StlClr::IList`1::unique"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"47100b3f-376b-f5b0-4830-3317d1e587ba","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/Microsoft.VisualC.StlClr/IList`1.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IList<TValue> interface | Microsoft Docs","_op_ogTitle":"IList<TValue> interface","description":"Defines the interface for an STL/CLR list object.\n","toc_asset_id":"_splitted/Microsoft.VisualC.StlClr/toc.json","toc_rel":"_splitted/Microsoft.VisualC.StlClr/toc.json","source_url":"","ms.assetid":"Microsoft.VisualC.StlClr.IList`1","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.visualc.stlclr.ilist-1","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.visualc.stlclr.ilist-1","fileRelativePath":"Microsoft.VisualC.StlClr.IList-1.html"},"themesRelativePathToOutputRoot":"_themes/"}