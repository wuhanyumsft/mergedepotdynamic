{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">Control</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines the base class for controls, which are components with visual representation.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.ComponentModel.DefaultEvent(&quot;Click&quot;)]\n[System.ComponentModel.DefaultProperty(&quot;Text&quot;)]\n[System.ComponentModel.Design.Serialization.DesignerSerializer(&quot;System.Windows.Forms.Design.ControlCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;, &quot;System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;)]\n[System.ComponentModel.Designer(&quot;System.Windows.Forms.Design.ControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;)]\n[System.ComponentModel.ToolboxItemFilter(&quot;System.Windows.Forms&quot;)]\n[System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n[System.Runtime.InteropServices.ComVisible(true)]\npublic class Control : System.ComponentModel.Component, IDisposable, System.ComponentModel.ISynchronizeInvoke, System.Windows.Forms.IBindableComponent, System.Windows.Forms.IDropTarget, System.Windows.Forms.IWin32Window</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">System.ComponentModel.Component</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">Control</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>To create your own control class, inherit from the <a class=\"xref\" href=\"system.windows.forms.usercontrol\" data-linktype=\"relative-path\">UserControl</a>, Control classes, or from the other Windows Forms provided controls. For more information about authoring custom controls, see <a href=\"../Topic/Developing%20Custom%20Windows%20Forms%20Controls%20with%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Developing Custom Windows Forms Controls with the .NET Framework</a>.  </p>\n<p> The Control class implements very basic functionality required by classes that display information to the user. It handles user input through the keyboard and pointing devices. It handles message routing and security. It defines the bounds of a control (its position and size), although it does not implement painting. It provides a window handle (<code>hWnd</code>).  </p>\n<p> Windows Forms controls use ambient properties so child controls can appear like their surrounding environment. An <em>ambient property</em> is a control property that, if not set, is retrieved from the parent control. If the control does not have a <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Parent_\" data-linktype=\"relative-path\">Parent</a>, and the property is not set, the control attempts to determine the value of the ambient property through the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Site_\" data-linktype=\"relative-path\">Site</a> property. If the control is not sited, if the site does not support ambient properties, or if the property is not set on the <a class=\"xref\" href=\"system.windows.forms.ambientproperties\" data-linktype=\"relative-path\">AmbientProperties</a>, the control uses its own default values. Typically, an ambient property represents a characteristic of a control, such as <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackColor_\" data-linktype=\"relative-path\">BackColor</a>, that is communicated to a child control. For example, a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> will have the same <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackColor_\" data-linktype=\"relative-path\">BackColor</a> as its parent <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> by default. Ambient properties provided by the Controlclass include: <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Cursor_\" data-linktype=\"relative-path\">Cursor</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Font_\" data-linktype=\"relative-path\">Font</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackColor_\" data-linktype=\"relative-path\">BackColor</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a>, and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeft_\" data-linktype=\"relative-path\">RightToLeft</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To make your Windows Forms application support visual styles, be sure to set the <a class=\"xref\" href=\"system.windows.forms.flatstyle\" data-linktype=\"relative-path\">FlatStyle</a> property to <code>System</code> and include a manifest with your executable. A manifest is an XML file that is included either as a resource within your application executable or as a separate file that resides in the same directory as the executable file. For an example of a manifest, see the Example section of the <a class=\"xref\" href=\"system.windows.forms.flatstyle\" data-linktype=\"relative-path\">FlatStyle</a> enumeration. For more information about using visual styles, see<a href=\"http://msdn.microsoft.com/library/windows/desktop/bb773187.aspx\" data-linktype=\"external\">Visual Styles</a>.  </p>\n</div>\n<p> Windows Forms has accessibility support built in, and provides information about your application that enables it to work with accessibility client applications such as screen enlarger and reviewer utilities, voice input utilities, on-screen keyboards, alternative input devices, and keyboard enhancement utilities. Sometimes you will want to provide additional information to accessibility client applications. There are two ways of providing this additional information. You can set the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibleName_\" data-linktype=\"relative-path\">AccessibleName</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibleDescription_\" data-linktype=\"relative-path\">AccessibleDescription</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibleDefaultActionDescription_\" data-linktype=\"relative-path\">AccessibleDefaultActionDescription</a>, and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibleRole_\" data-linktype=\"relative-path\">AccessibleRole</a> property values, which will be reported to accessibility client applications. This method is typically used to provide limited accessibility information for existing controls. Alternatively, you can write your own class deriving from the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> or <a class=\"xref\" href=\"system.windows.forms.control.controlaccessibleobject\" data-linktype=\"relative-path\">Control.ControlAccessibleObject</a> classes, providing as much accessibility information as needed.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To maintain better performance, do not set the size of a control in its constructor. The preferred method is to override the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultSize_\" data-linktype=\"relative-path\">DefaultSize</a> property.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> Do not add data bindings for a Control in its constructor. Doing so will cause errors in code generation and can cause unwanted behavior.  </p>\n</div>\n<p> The majority of the controls in the <a class=\"xref\" href=\"system.windows.forms\" data-linktype=\"relative-path\">System.Windows.Forms</a> namespace use the underlying Windows common control as a base to build on. For more information about the Windows common controls, see<a href=\"http://msdn.microsoft.com/library/windows/desktop/bb775497.aspx\" data-linktype=\"external\">General Control Reference</a>.  </p>\n<p> To identify Windows Forms controls from a separate process, use a standard <code>SendMessage</code> call to pass the WM_GETCONTROLNAME message. WM_GETCONTROLNAME is independent of the language and Windows hierarchy. For more information, see the &quot;Recommended Solution for Windows Forms&quot; topic in<a href=\"http://msdn.microsoft.com/library/ms996405.aspx\" data-linktype=\"external\">Automating Windows Forms</a>.  </p>\n<p> Use the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokeRequired_\" data-linktype=\"relative-path\">InvokeRequired</a> property to synchronize access to the control from multiple threads. For more information about multithreaded Windows Forms controls, see <a href=\"../Topic/How%20to:%20Make%20Thread-Safe%20Calls%20to%20Windows%20Forms%20Controls.md\" data-linktype=\"relative-path\">How to: Make Thread-Safe Calls to Windows Forms Controls</a></p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Control()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class with default settings.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Control ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control__ctor_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Control(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class with specific text.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Control (string text);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>text</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The text displayed by the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.  </p>\n<p> This version of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control__ctor_\" data-linktype=\"relative-path\">Control</a> constructor sets the initial <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Text_\" data-linktype=\"relative-path\">Text</a> property value to the <code>text</code> parameter value.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control__ctor_System_Windows_Forms_Control_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Control(Control,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class as a child control, with specific text.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Control (System.Windows.Forms.Control parent, string text);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>parent</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> to be the parent of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>text</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The text displayed by the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.  </p>\n<p> This version of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control__ctor_\" data-linktype=\"relative-path\">Control</a> constructor sets the initial <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Text_\" data-linktype=\"relative-path\">Text</a> property value to the <code>text</code> parameter value. The constructor also adds the control to the parent control&#39;s <a class=\"xref\" href=\"system.windows.forms.control.controlcollection\" data-linktype=\"relative-path\">Control.ControlCollection</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control__ctor_System_String_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Control(String,Int32,Int32,Int32,Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class with specific text, size, and location.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Control (string text, int left, int top, int width, int height);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>text</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The text displayed by the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>left</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Drawing.Point.X*</span> position of the control, in pixels, from the left edge of the control&#39;s container. The value is assigned to the <span class=\"xref\">stem.Windows.Forms.Control.Left*</span> property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>top</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Drawing.Point.Y*</span> position of the control, in pixels, from the top edge of the control&#39;s container. The value is assigned to the <span class=\"xref\">stem.Windows.Forms.Control.Top*</span> property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>width</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The width of the control, in pixels. The value is assigned to the <span class=\"xref\">stem.Windows.Forms.Control.Width*</span> property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>height</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The height of the control, in pixels. The value is assigned to the <span class=\"xref\">stem.Windows.Forms.Control.Height*</span> property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.  </p>\n<p> This version of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control__ctor_\" data-linktype=\"relative-path\">Control</a> constructor sets the initial <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Text_\" data-linktype=\"relative-path\">Text</a>property value to the <code>text</code> parameter value. The initial <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Size_\" data-linktype=\"relative-path\">Size</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Location_\" data-linktype=\"relative-path\">Location</a> of the control are determined by the <code>left</code>, <code>top</code>, <code>width</code> and <code>height</code> parameter values.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To maintain better performance, do not set the size of a control in its constructor. The preferred method is to override the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultSize_\" data-linktype=\"relative-path\">DefaultSize</a> property.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control__ctor_System_Windows_Forms_Control_System_String_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Control(Control,String,Int32,Int32,Int32,Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class as a child control, with specific text, size, and location.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Control (System.Windows.Forms.Control parent, string text, int left, int top, int width, int height);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>parent</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> to be the parent of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>text</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The text displayed by the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>left</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Drawing.Point.X*</span> position of the control, in pixels, from the left edge of the control&#39;s container. The value is assigned to the <span class=\"xref\">stem.Windows.Forms.Control.Left*</span> property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>top</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Drawing.Point.Y*</span> position of the control, in pixels, from the top edge of the control&#39;s container. The value is assigned to the <span class=\"xref\">stem.Windows.Forms.Control.Top*</span> property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>width</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The width of the control, in pixels. The value is assigned to the <span class=\"xref\">stem.Windows.Forms.Control.Width*</span> property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>height</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The height of the control, in pixels. The value is assigned to the <span class=\"xref\">stem.Windows.Forms.Control.Height*</span> property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.  </p>\n<p> This version of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control__ctor_\" data-linktype=\"relative-path\">Control</a> constructor sets the initial <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Text_\" data-linktype=\"relative-path\">Text</a> property value to the <code>text</code> parameter value. The constructor also adds the control to the parent control&#39;s <a class=\"xref\" href=\"system.windows.forms.control.controlcollection\" data-linktype=\"relative-path\">Control.ControlCollection</a>. The initial <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Size_\" data-linktype=\"relative-path\">Size</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Location_\" data-linktype=\"relative-path\">Location</a> of the control are determined by the <code>left</code>, <code>top</code>, <code>width</code> and <code>height</code> parameter values.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To maintain better performance, do not set the size of a control in its constructor. The preferred method is to override the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultSize_\" data-linktype=\"relative-path\">DefaultSize</a> property.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_AccessibilityObject\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AccessibilityObject</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> assigned to the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.AccessibleObject AccessibilityObject { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> assigned to the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To control the instance returned from this method, override the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateAccessibilityInstance_\" data-linktype=\"relative-path\">CreateAccessibilityInstance</a> method.  </p>\n<p> If no <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> is currently assigned to the control, a new instance of one is created.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To get or set the AccessibilityObject property, you must add a reference to the <code>Accessibility</code> assembly installed with the.NET Framework.  </p>\n</div>\n<p> For more information about accessible objects, see <a href=\"http://msdn.microsoft.com/library/windows/desktop/dd373592.aspx\" data-linktype=\"external\">Active Accessibility</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_AccessibleDefaultActionDescription\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AccessibleDefaultActionDescription</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the default action description of the control for use by accessibility client applications.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string AccessibleDefaultActionDescription { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The default action description of the control for use by accessibility client applications.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>An object&#39;s AccessibleDefaultActionDescription property describes the object&#39;s primary method of manipulation from the user&#39;s viewpoint. This property should be a verb or a short verb phrase.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Not all objects have default actions, and some objects might have a default action that is related to its <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_Value_\" data-linktype=\"relative-path\">Value</a> property, such as in the following examples:  </p>\n</div>\n<ul>\n<li><p>A selected check box has a default action of &quot;Uncheck&quot; and a value of &quot;Checked.&quot;  </p>\n</li>\n<li><p>A cleared check box has a default action of &quot;Check&quot; and a value of &quot;Unchecked.&quot;  </p>\n</li>\n<li><p>A button labeled &quot;Print&quot; has a default action of &quot;Press,&quot; with no value.  </p>\n</li>\n<li><p>A label or a text box control that shows &quot;Printer&quot; has no default action, but would have a value of &quot;Printer.&quot;  </p>\n<p>For more information about properties of accessible objects, see <a href=\"http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx\" data-linktype=\"external\">Content of Descriptive Properties</a>.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_AccessibleDescription\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AccessibleDescription</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the description of the control used by accessibility client applications.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string AccessibleDescription { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The description of the control used by accessibility client applications. The default is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>An object&#39;s AccessibleDescription property provides a textual description about an object&#39;s visual appearance. The description is primarily used to provide greater context for low-vision or blind users, but can also be used for context searching or other applications.  </p>\n<p> The AccessibleDescription property is needed if the description is not obvious, or if it is redundant based on the object&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibleName_\" data-linktype=\"relative-path\">AccessibleName</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibleRole_\" data-linktype=\"relative-path\">AccessibleRole</a>, <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_State_\" data-linktype=\"relative-path\">State</a>, and <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_Value_\" data-linktype=\"relative-path\">Value</a> properties. For example, a button with &quot;OK&quot; would not need additional information, but a button that shows a picture of a cactus would. The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibleName_\" data-linktype=\"relative-path\">AccessibleName</a>, and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibleRole_\" data-linktype=\"relative-path\">AccessibleRole</a> (and perhaps <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_Help_\" data-linktype=\"relative-path\">Help</a>) properties for the cactus button would describe its purpose, but the AccessibleDescription property would convey information that is less tangible, such as &quot;A button that shows a picture of a cactus.&quot;  </p>\n<p> For more information about properties of accessible objects, see <a href=\"http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx\" data-linktype=\"external\">Content of Descriptive Properties</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_AccessibleName\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AccessibleName</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the name of the control used by accessibility client applications.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string AccessibleName { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the control used by accessibility client applications. The default is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The AccessibleName property is a label that briefly describes and identifies the object within its container, such as the text in a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a>, the name of a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>, or a label displayed next to a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control.  </p>\n<p> For more information about properties of accessible objects, see the &quot;<a href=\"http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx\" data-linktype=\"external\">Content of Descriptive Properties</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_AccessibleRole\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AccessibleRole</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the accessible role of the control</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.AccessibleRole AccessibleRole { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.accessiblerole\" data-linktype=\"relative-path\">AccessibleRole</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the values of <a class=\"xref\" href=\"system.windows.forms.accessiblerole\" data-linktype=\"relative-path\">AccessibleRole</a>. The default is <code>Default</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value assigned is not one of the <a class=\"xref\" href=\"system.windows.forms.accessiblerole\" data-linktype=\"relative-path\">AccessibleRole</a> values.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The AccessibleRole property describes what kind of user interface element an object is. If the control&#39;s role cannot be determined, the AccessibleRole property is set to <code>Default</code>.  </p>\n<p> For more information about properties of accessible objects, see <a href=\"http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx\" data-linktype=\"external\">Content of Descriptive Properties</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_AllowDrop\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AllowDrop</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the control can accept data that the user drags onto it.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool AllowDrop { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if drag-and-drop operations are allowed in the control; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Anchor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Anchor</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the edges of the container to which a control is bound and determines how a control is resized with its parent.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Windows.Forms.AnchorStyles Anchor { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.anchorstyles\" data-linktype=\"relative-path\">AnchorStyles</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A bitwise combination of the <a class=\"xref\" href=\"system.windows.forms.anchorstyles\" data-linktype=\"relative-path\">AnchorStyles</a> values. The default is <code>Top</code> and <code>Left</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the Anchor property to define how a control is automatically resized as its parent control is resized. Anchoring a control to its parent control ensures that the anchored edges remain in the same position relative to the edges of the parent control when the parent control is resized.  </p>\n<p> You can anchor a control to one or more edges of its container. For example, if you have a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> with a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> whose Anchor property value is set to <code>Top</code> and <code>Bottom</code>, the <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> is stretched to maintain the anchored distance to the top and bottom edges of the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> as the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Height_\" data-linktype=\"relative-path\">Height</a> of the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> is increased.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The Anchor and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Dock_\" data-linktype=\"relative-path\">Dock</a> properties are mutually exclusive. Only one can be set at a time, and the last one set takes precedence.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_AutoScrollOffset\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AutoScrollOffset</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets where this control is scrolled to in <span class=\"xref\">stem.Windows.Forms.ScrollableControl.ScrollControlIntoView*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Drawing.Point AutoScrollOffset { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> specifying the scroll location. The default is the upper-left corner of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_AutoSize\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AutoSize</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>This property is not relevant for this class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool AutoSize { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if enabled; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is not relevant for this class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_BackColor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BackColor</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the background color for the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Drawing.Color BackColor { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> that represents the background color of the control. The default is the value of the <span class=\"xref\">stem.Windows.Forms.Control.DefaultBackColor*</span> property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The BackColor property does not support transparent colors unless the <code>SupportsTransparentBackColor</code> value of <a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">System.Windows.Forms.ControlStyles</a> is set to <code>true</code>.  </p>\n<p> The BackColor property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> will have the same BackColor as its parent <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> by default. For more information about ambient properties, see the <a class=\"xref\" href=\"system.windows.forms.ambientproperties\" data-linktype=\"relative-path\">AmbientProperties</a> class or the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class overview.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_BackgroundImage\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BackgroundImage</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the background image displayed in the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Drawing.Image BackgroundImage { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> that represents the image to display in the background of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<ul>\n<li>Use the BackgroundImage property to place a graphic image onto a control.  </li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> Images with translucent or transparent colors are not supported by Windows Forms controls as background images.  </p>\n<p> This property is not supported on child controls whose <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_RightToLeftLayout_\" data-linktype=\"relative-path\">RightToLeftLayout</a> property is <code>true</code>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_BackgroundImageLayout\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BackgroundImageLayout</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the background image layout as defined in the <a class=\"xref\" href=\"system.windows.forms.imagelayout\" data-linktype=\"relative-path\">ImageLayout</a> enumeration.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.imagelayout\" data-linktype=\"relative-path\">ImageLayout</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the values of <a class=\"xref\" href=\"system.windows.forms.imagelayout\" data-linktype=\"relative-path\">ImageLayout</a> (<a class=\"xref\" href=\"system.windows.forms.imagelayout\" data-linktype=\"relative-path\">ImageLayout</a> , <a class=\"xref\" href=\"system.windows.forms.imagelayout\" data-linktype=\"relative-path\">ImageLayout</a>, <a class=\"xref\" href=\"system.windows.forms.imagelayout\" data-linktype=\"relative-path\">ImageLayout</a>, <a class=\"xref\" href=\"system.windows.forms.imagelayout\" data-linktype=\"relative-path\">ImageLayout</a>, or <a class=\"xref\" href=\"system.windows.forms.imagelayout\" data-linktype=\"relative-path\">ImageLayout</a>). <a class=\"xref\" href=\"system.windows.forms.imagelayout\" data-linktype=\"relative-path\">ImageLayout</a> is the default value.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The specified enumeration value does not exist.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the BackgroundImageLayout property to specify the position and behavior of an image you have placed onto a control. BackgroundImageLayout takes effect only if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackgroundImage_\" data-linktype=\"relative-path\">BackgroundImage</a> property is set.  </p>\n<p> You can increase performance for large images if you set BackgroundImageLayout to something other than <a class=\"xref\" href=\"system.windows.forms.imagelayout\" data-linktype=\"relative-path\">ImageLayout</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_BindingContext\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BindingContext</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the <a class=\"xref\" href=\"system.windows.forms.bindingcontext\" data-linktype=\"relative-path\">BindingContext</a> for the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Windows.Forms.BindingContext BindingContext { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.bindingcontext\" data-linktype=\"relative-path\">BindingContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.bindingcontext\" data-linktype=\"relative-path\">BindingContext</a> for the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.bindingcontext\" data-linktype=\"relative-path\">BindingContext</a> of a <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> is used to return a single<a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> for all data-bound controls contained by the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a>. The <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> keeps all controls that are bound to the same data source synchronized. For example, setting the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Position_\" data-linktype=\"relative-path\">Position</a> property of the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> specifies the item in the underlying list that all data-bound controls point to.  </p>\n<p> For more information about creating a new <a class=\"xref\" href=\"system.windows.forms.bindingcontext\" data-linktype=\"relative-path\">BindingContext</a> and assigning it to the BindingContext property, see the <a class=\"xref\" href=\"system.windows.forms.bindingcontext#System_Windows_Forms_BindingContext__ctor_\" data-linktype=\"relative-path\">BindingContext</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Bottom\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Bottom</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the distance, in pixels, between the bottom edge of the control and the top edge of its container&#39;s client area.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int Bottom { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container&#39;s client area.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of this property is equal to the sum of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Top_\" data-linktype=\"relative-path\">Top</a> property value, and the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Height_\" data-linktype=\"relative-path\">Height</a> property value.  </p>\n<p> The Bottom property is a read-only property. You can manipulate this property value by changing the value of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Top_\" data-linktype=\"relative-path\">Top</a> or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Height_\" data-linktype=\"relative-path\">Height</a> properties or calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetBounds_\" data-linktype=\"relative-path\">SetBounds</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetBoundsCore_\" data-linktype=\"relative-path\">SetBoundsCore</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UpdateBounds_\" data-linktype=\"relative-path\">UpdateBounds</a>, or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetClientSizeCore_\" data-linktype=\"relative-path\">SetClientSizeCore</a> methods.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Bounds\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Bounds</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the size and location of the control including its nonclient elements, in pixels, relative to the parent control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Drawing.Rectangle Bounds { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> in pixels relative to the parent control that represents the size and location of the control including its nonclient elements.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The bounds of the control include the nonclient elements such as scroll bars, borders, title bars, and menus. The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetBoundsCore_\" data-linktype=\"relative-path\">SetBoundsCore</a> method is called to set the Bounds property. The Boundsproperty is not always changed through its <code>set</code> method so you should override the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetBoundsCore_\" data-linktype=\"relative-path\">SetBoundsCore</a> method to ensure that your code is executed when the Bounds property is set.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_CanEnableIme\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CanEnableIme</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the <span class=\"xref\">stem.Windows.Forms.Control.ImeMode*</span> property can be set to an active value, to enable IME support.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual bool CanEnableIme { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> in all cases.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Derived classes can override this property to return <code>false</code> if IME is not supported.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_CanFocus\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CanFocus</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the control can receive focus.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool CanFocus { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the control can receive focus; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>In order for a control to receive input focus, the control must have a handle assigned to it, and the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Visible_\" data-linktype=\"relative-path\">Visible</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enabled_\" data-linktype=\"relative-path\">Enabled</a> properties must both be set to <code>true</code> for both the control and all its parent controls, and the control must be a form or the control&#39;s outermost parent must be a form.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_CanRaiseEvents\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CanRaiseEvents</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines if events can be raised on the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override bool CanRaiseEvents { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the control is hosted as an ActiveX control whose events are not frozen; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If this control is being hosted as an ActiveX control, this property will return <code>false</code> if the ActiveX control has its events frozen.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_CanSelect\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CanSelect</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the control can be selected.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool CanSelect { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the control can be selected; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property returns <code>true</code> if the <code>Selectable</code> value of <a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">System.Windows.Forms.ControlStyles</a> is set to <code>true</code>, is contained in another control, the control itself is visible and enabled, and all its parent controls are visible and enabled.  </p>\n<p> The Windows Forms controls in the following list are not selectable and will return a value of <code>false</code> for the CanSelect property. Controls derived from these controls are also not selectable.  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.panel\" data-linktype=\"relative-path\">Panel</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.groupbox\" data-linktype=\"relative-path\">GroupBox</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.picturebox\" data-linktype=\"relative-path\">PictureBox</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.progressbar\" data-linktype=\"relative-path\">ProgressBar</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.splitter\" data-linktype=\"relative-path\">Splitter</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.label\" data-linktype=\"relative-path\">Label</a>  \n</li>\n<li><p><a class=\"xref\" href=\"system.windows.forms.linklabel\" data-linktype=\"relative-path\">LinkLabel</a> (when there is no link present in the control)</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Capture\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Capture</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the control has captured the mouse.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool Capture { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the control has captured the mouse; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When a control has captured the mouse, it receives mouse input whether or not the cursor is within its borders. The mouse is typically only captured during drag operations.  </p>\n<p> Only the foreground window can capture the mouse. When a background window attempts to do so, the window receives messages only for mouse events that occur when the mouse cursor is within the visible portion of the window. Also, even if the foreground window has captured the mouse, the user can still click another window, bringing it to the foreground.  </p>\n<p> When the mouse is captured, shortcut keys should not work.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_CausesValidation\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CausesValidation</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the control causes validation to be performed on any controls that require validation when it receives focus.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool CausesValidation { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the control causes validation to be performed on any controls requiring validation when it receives focus; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the CausesValidation property is set to <code>false</code>, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a> events are suppressed.  </p>\n<p> The CausesValidation property value is typically set to <code>false</code> for controls such as a Help button.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_CheckForIllegalCrossThreadCalls\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CheckForIllegalCrossThreadCalls</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether to catch calls on the wrong thread that access a control&#39;s <span class=\"xref\">stem.Windows.Forms.Control.Handle*</span> property when an application is being debugged.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool CheckForIllegalCrossThreadCalls { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if calls on the wrong thread are caught; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When a thread other than the creating thread of a control tries to access one of that control&#39;s methods or properties, it often leads to unpredictable results. A common invalid thread activity is a call on the wrong thread that accesses the control&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Handle_\" data-linktype=\"relative-path\">Handle</a> property. Set CheckForIllegalCrossThreadCalls to <code>true</code> to find and diagnose this thread activity more easily while debugging.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ClientRectangle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ClientRectangle</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the rectangle that represents the client area of the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Drawing.Rectangle ClientRectangle { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the client area of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The client area of a control is the bounds of the control, minus the nonclient elements such as scroll bars, borders, title bars, and menus.  </p>\n<p> Because client coordinates are relative to the upper-left corner of the client area of the control, the coordinates of the upper-left corner of the rectangle returned by this property are (0,0). You can use this property to obtain the size and coordinates of the client area of the control for tasks such as drawing on the surface of the control.  </p>\n<p> For more information about drawing on controls, see <a href=\"../Topic/Rendering%20a%20Windows%20Forms%20Control.md\" data-linktype=\"relative-path\">Rendering a Windows Forms Control</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ClientSize\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ClientSize</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the height and width of the client area of the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Drawing.Size ClientSize { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> that represents the dimensions of the client area of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The client area of a control is the bounds of the control, minus the nonclient elements such as scroll bars, borders, title bars, and menus. The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetClientSizeCore_\" data-linktype=\"relative-path\">SetClientSizeCore</a> method is called to set the ClientSizeproperty. The ClientSize property is not always changed through its <code>set</code> method so you should override the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetClientSizeCore_\" data-linktype=\"relative-path\">SetClientSizeCore</a> method to ensure that your code is executed when the ClientSize property is set.  </p>\n<p> The <a class=\"xref\" href=\"system.drawing.size#System_Drawing_Size_Width_\" data-linktype=\"relative-path\">Width</a> and <a class=\"xref\" href=\"system.drawing.size#System_Drawing_Size_Height_\" data-linktype=\"relative-path\">Height</a> properties represent the width and height of the client area of the control. You can use this property to obtain the size of the client area of the control for tasks such as drawing on the surface of the control.  </p>\n<p> For more information about drawing on controls, see <a href=\"../Topic/Rendering%20a%20Windows%20Forms%20Control.md\" data-linktype=\"relative-path\">Rendering a Windows Forms Control</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You cannot bind application settings to this property. For more information on application settings, see <a href=\"../Topic/Application%20Settings%20Overview.md\" data-linktype=\"relative-path\">Application Settings Overview</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_CompanyName\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CompanyName</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the name of the company or creator of the application containing the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string CompanyName { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The company name or creator of the application containing the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The CompanyName property is a read-only property. To change the value of this property, set the <a class=\"xref\" href=\"system.reflection.assemblycompanyattribute#System_Reflection_AssemblyCompanyAttribute_Company_\" data-linktype=\"relative-path\">Company</a> property value of the <a class=\"xref\" href=\"system.reflection.assemblycompanyattribute\" data-linktype=\"relative-path\">AssemblyCompanyAttribute</a>. The following line of C# code sets the CompanyName property.  </p>\n<pre><code class=\"lang-c#\">[assembly: AssemblyCompany(&quot;Microsoft&quot;)]  \n</code></pre><div class=\"NOTE\"><h5>Note</h5><p> It is strongly recommended that you provide the company name, product name, and product version for your app.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ContainsFocus\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ContainsFocus</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the control, or one of its child controls, currently has the input focus.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool ContainsFocus { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the control or one of its child controls currently has the input focus; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can use this property to determine whether a control or any of the controls contained within it has the input focus. To determine whether the control has focus, regardless of whether any of its child controls have focus, use the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Focused_\" data-linktype=\"relative-path\">Focused</a> property. To give a control the input focus, use the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Focus_\" data-linktype=\"relative-path\">Focus</a> or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Select_\" data-linktype=\"relative-path\">Select</a> methods.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ContextMenu\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ContextMenu</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the shortcut menu associated with the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Windows.Forms.ContextMenu ContextMenu { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> that represents the shortcut menu associated with the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use a shortcut menus to give context-specific menu options to users when they right-click on the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ContextMenuStrip\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ContextMenuStrip</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the <a class=\"xref\" href=\"system.windows.forms.contextmenustrip\" data-linktype=\"relative-path\">ContextMenuStrip</a> associated with this control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.contextmenustrip\" data-linktype=\"relative-path\">ContextMenuStrip</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.contextmenustrip\" data-linktype=\"relative-path\">ContextMenuStrip</a> for this control, or <code>null</code> if there is no <a class=\"xref\" href=\"system.windows.forms.contextmenustrip\" data-linktype=\"relative-path\">ContextMenuStrip</a>. The default is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If a <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> has also been assigned to the control, the <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> takes precedence over the <a class=\"xref\" href=\"system.windows.forms.contextmenustrip\" data-linktype=\"relative-path\">ContextMenuStrip</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Controls\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Controls</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the collection of controls contained within the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.Control.ControlCollection Controls { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.control.controlcollection\" data-linktype=\"relative-path\">Control.ControlCollection</a> representing the collection of controls contained within the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> can act as a parent to a collection of controls. For example, when several controls are added to a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>, each of the controls is a member of the <a class=\"xref\" href=\"system.windows.forms.control.controlcollection\" data-linktype=\"relative-path\">Control.ControlCollection</a> assigned to the Controls property of the form, which is derived from the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class.  </p>\n<p> You can manipulate the controls in the <a class=\"xref\" href=\"system.windows.forms.control.controlcollection\" data-linktype=\"relative-path\">Control.ControlCollection</a> assigned to the Controls property by using the methods available in the <a class=\"xref\" href=\"system.windows.forms.control.controlcollection\" data-linktype=\"relative-path\">Control.ControlCollection</a> class.  </p>\n<p> When adding several controls to a parent control, it is recommended that you call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SuspendLayout_\" data-linktype=\"relative-path\">SuspendLayout</a> method before initializing the controls to be added. After adding the controls to the parent control, call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResumeLayout_\" data-linktype=\"relative-path\">ResumeLayout</a> method. Doing so will increase the performance of applications with many controls.  </p>\n<p> Use the Controls property to iterate through all controls of a form, including nested controls. Use the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetNextControl_\" data-linktype=\"relative-path\">GetNextControl</a> method to retrieve the previous or next child control in the tab order. Use the <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_ActiveControl_\" data-linktype=\"relative-path\">ActiveControl</a> property to get or set the active control of a container control.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Created\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Created</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the control has been created.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool Created { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the control has been created; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Created property returns <code>true</code> if the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> was successfully created even though the control&#39;s handle might not have been created or recreated yet.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_CreateParams\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateParams</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the required creation parameters when the control handle is created.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Windows.Forms.CreateParams CreateParams { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.createparams\" data-linktype=\"relative-path\">CreateParams</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.createparams\" data-linktype=\"relative-path\">CreateParams</a> that contains the required creation parameters when the handle to the control is created.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The CreateParams property should not be overridden and used to adjust the properties of your derived control. Properties such as the <a class=\"xref\" href=\"system.windows.forms.createparams#System_Windows_Forms_CreateParams_Caption_\" data-linktype=\"relative-path\">Caption</a>, <a class=\"xref\" href=\"system.windows.forms.createparams#System_Windows_Forms_CreateParams_Width_\" data-linktype=\"relative-path\">Width</a>, and <a class=\"xref\" href=\"system.windows.forms.createparams#System_Windows_Forms_CreateParams_Height_\" data-linktype=\"relative-path\">Height</a> should be set by the corresponding properties in your control such as <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Text_\" data-linktype=\"relative-path\">Text</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Width_\" data-linktype=\"relative-path\">Width</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Height_\" data-linktype=\"relative-path\">Height</a>. The <a class=\"xref\" href=\"system.windows.forms.createparams\" data-linktype=\"relative-path\">CreateParams</a> should only be extended when you are wrapping a standard Windows control class or to set styles not provided by the Windows Forms namespace. For more information about creating control parameters, see the <code>CreateWindow</code> and <code>CreateWindowEx</code> functions and the <a href=\"http://msdn.microsoft.com/library/windows/desktop/ms632603.aspx\" data-linktype=\"external\">CREATESTRUCT</a>structure documentation.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Cursor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Cursor</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the cursor that is displayed when the mouse pointer is over the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Windows.Forms.Cursor Cursor { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.cursor\" data-linktype=\"relative-path\">Cursor</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.cursor\" data-linktype=\"relative-path\">Cursor</a> that represents the cursor to display when the mouse pointer is over the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Assign a <a class=\"xref\" href=\"system.windows.forms.cursor\" data-linktype=\"relative-path\">Cursor</a> to the Cursor property of the control to change the cursor displayed when the mouse pointer is over the control. To temporarily change the mouse cursor for all controls on your application set the <a class=\"xref\" href=\"system.windows.forms.cursor#System_Windows_Forms_Cursor_Current_\" data-linktype=\"relative-path\">Current</a> property. Typically you would set the <a class=\"xref\" href=\"system.windows.forms.cursor#System_Windows_Forms_Cursor_Current_\" data-linktype=\"relative-path\">Current</a> property to a wait cursor when populating a <a class=\"xref\" href=\"system.windows.forms.combobox\" data-linktype=\"relative-path\">ComboBox</a> or saving or loading a file.  </p>\n<p> The Cursor property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> will have the same <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackColor_\" data-linktype=\"relative-path\">BackColor</a> as its parent <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> by default. For more information about ambient properties, see the <a class=\"xref\" href=\"system.windows.forms.ambientproperties\" data-linktype=\"relative-path\">AmbientProperties</a> class or the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class overview.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_DataBindings\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataBindings</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the data bindings for the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.ControlBindingsCollection DataBindings { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.controlbindingscollection\" data-linktype=\"relative-path\">ControlBindingsCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.controlbindingscollection\" data-linktype=\"relative-path\">ControlBindingsCollection</a> that contains the <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> objects for the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the DataBindings property to access the <a class=\"xref\" href=\"system.windows.forms.controlbindingscollection\" data-linktype=\"relative-path\">ControlBindingsCollection</a>. By adding <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> objects to the collection, you can bind any property of a control to the property of an object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_DefaultBackColor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefaultBackColor</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the default background color of the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Drawing.Color DefaultBackColor { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The default background <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> of the control. The default is <span class=\"xref\">stem.Drawing.SystemColors.Control*</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This is the default <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackColor_\" data-linktype=\"relative-path\">BackColor</a> property value of a generic top-level control. Derived classes can have different defaults.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_DefaultCursor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefaultCursor</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the default cursor for the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Windows.Forms.Cursor DefaultCursor { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.cursor\" data-linktype=\"relative-path\">Cursor</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object of type <a class=\"xref\" href=\"system.windows.forms.cursor\" data-linktype=\"relative-path\">Cursor</a> representing the current default cursor.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Override DefaultCursor to configure a default cursor for your control. This is more efficient than setting the cursor in the control&#39;s constructor, and gives automatic support for certain cursor-related designer functions.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_DefaultFont\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefaultFont</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the default font of the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Drawing.Font DefaultFont { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The default <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> of the control. The value returned will vary depending on the user&#39;s operating system the local culture setting of their system.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The default font or the regional alternative fonts are not installed on the client computer.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The following table describes the value returned by DefaultFont depending on the operating system and local culture.  </p>\n<table>\n<thead>\n<tr>\n<th>System/and or Culture</th>\n<th>Font</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Windows NT 4x, Japanese version</td>\n<td>MS UI Gothic, 9 point.</td>\n</tr>\n<tr>\n<td>Arabic Windows</td>\n<td>Tahoma, 8 point.</td>\n</tr>\n<tr>\n<td>Other operating system/culture</td>\n<td>MS Shell Dlg logical font, typically Microsoft San Serif 8 point.</td>\n</tr>\n</tbody>\n</table>\n<p> MS Shell Dlg maps to a font set in the system registry.  </p>\n<p> If the previous fonts are not installed, the default font is Tahoma, 8 point. If Tahoma, 8 point, is not installed, DefaultFontreturns the value of the <a class=\"xref\" href=\"system.drawing.fontfamily#System_Drawing_FontFamily_GenericSansSerif_\" data-linktype=\"relative-path\">GenericSansSerif</a> property</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_DefaultForeColor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefaultForeColor</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the default foreground color of the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Drawing.Color DefaultForeColor { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The default foreground <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> of the control. The default is <span class=\"xref\">stem.Drawing.SystemColors.ControlText*</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This is the default <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a> property value of a nonparented control. Derived classes can have different defaults.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_DefaultImeMode\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefaultImeMode</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the default Input Method Editor (IME) mode supported by the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Windows.Forms.ImeMode DefaultImeMode { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.imemode\" data-linktype=\"relative-path\">ImeMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.imemode\" data-linktype=\"relative-path\">ImeMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>An Input Method Editor (IME) is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.  </p>\n<p> As implemented in the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class, this property always returns the <a class=\"xref\" href=\"system.windows.forms.imemode\" data-linktype=\"relative-path\">System.Windows.Forms.ImeMode</a> value. The <a class=\"xref\" href=\"system.windows.forms.imemode\" data-linktype=\"relative-path\">ImeMode</a> value specifies that the IME mode is inherited from the parent control.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_DefaultMargin\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefaultMargin</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the space, in pixels, that is specified by default between controls.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Windows.Forms.Padding DefaultMargin { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.padding\" data-linktype=\"relative-path\">Padding</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.padding\" data-linktype=\"relative-path\">Padding</a> that represents the default space between controls.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_DefaultMaximumSize\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefaultMaximumSize</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the length and height, in pixels, that is specified as the default maximum size of a control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Drawing.Size DefaultMaximumSize { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <span class=\"xref\">stem.Drawing.Point.#ctor*</span> representing the size of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_DefaultMinimumSize\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefaultMinimumSize</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the length and height, in pixels, that is specified as the default minimum size of a control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Drawing.Size DefaultMinimumSize { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> representing the size of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_DefaultPadding\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefaultPadding</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the internal spacing, in pixels, of the contents of a control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Windows.Forms.Padding DefaultPadding { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.padding\" data-linktype=\"relative-path\">Padding</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.padding\" data-linktype=\"relative-path\">Padding</a> that represents the internal spacing of the contents of a control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_DefaultSize\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefaultSize</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the default size of the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Drawing.Size DefaultSize { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The default <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The DefaultSize property represents the <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> of the control when it is initially created. You can adjust the size of the control by setting its <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Size_\" data-linktype=\"relative-path\">Size</a> property value.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To maintain better performance, do not set the <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> of a control in its constructor. The preferred method is to override the DefaultSize property.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> On Windows Server 2003 systems, the size of a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> is restricted by the maximum pixel width and height of the monitor.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_DisplayRectangle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DisplayRectangle</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the rectangle that represents the display area of the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Drawing.Rectangle DisplayRectangle { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the display area of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The DisplayRectangle property returns the client rectangle of the display area of the control. For the base control class, this is equal to the client rectangle. However, inheriting controls might want to change this if their client area differs from their display area. The display rectangle is the smallest <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that encloses a control and is used to lay out controls.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Disposing\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Disposing</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the base <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class is in the process of disposing.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool Disposing { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the base <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class is in the process of disposing; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When this property returns <code>true</code>, the base<a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class is in the process of disposing. After the control is disposed of, it can no longer be referenced as a valid Windows control. Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection. When a control is disposed of, you cannot call its <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RecreateHandle_\" data-linktype=\"relative-path\">RecreateHandle</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Dock\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Dock</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets which control borders are docked to its parent control and determines how a control is resized with its parent.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Windows.Forms.DockStyle Dock { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.dockstyle\" data-linktype=\"relative-path\">DockStyle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.dockstyle\" data-linktype=\"relative-path\">DockStyle</a> values. The default is <a class=\"xref\" href=\"system.windows.forms.dockstyle\" data-linktype=\"relative-path\">DockStyle</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value assigned is not one of the <a class=\"xref\" href=\"system.windows.forms.dockstyle\" data-linktype=\"relative-path\">DockStyle</a> values.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the Dock property to define how a control is automatically resized as its parent control is resized. For example, setting Dock to <a class=\"xref\" href=\"system.windows.forms.dockstyle\" data-linktype=\"relative-path\">System.Windows.Forms.DockStyle</a> causes the control to align itself with the left edges of its parent control and to resize as the parent control is resized. Controls are docked in their Z-order, which is the visual layering of controls on a form along the form&#39;s Z-axis (depth).  </p>\n<p> A control can be docked to one edge of its parent container or can be docked to all edges and fill the parent container.  </p>\n<p> Setting the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Margin_\" data-linktype=\"relative-path\">Margin</a> property on a docked control has no effect on the distance of the control from the the edges of its container.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Anchor_\" data-linktype=\"relative-path\">Anchor</a> and Dock properties are mutually exclusive. Only one can be set at a time, and the last one set takes precedence.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_DoubleBuffered\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DoubleBuffered</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether this control should redraw its surface using a secondary buffer to reduce or prevent flicker.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual bool DoubleBuffered { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the surface of the control should be drawn using double buffering; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Buffered graphics can reduce or eliminate flicker that is caused by progressive redrawing of parts of a displayed surface. Buffered graphics require that the updated graphics data is first written to a buffer. The data in the graphics buffer is then quickly written to displayed surface memory. The relatively quick switch of the displayed graphics memory typically reduces the flicker that can otherwise occur.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> DoubleBuffered is not a bindable property.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Enabled\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Enabled</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the control can respond to user interaction.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool Enabled { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the control can respond to user interaction; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>With the Enabled property, you can enable or disable controls at run time. For example, you can disable controls that do not apply to the current state of the application. You can also disable a control to restrict its use. For example, a button can be disabled to prevent the user from clicking it. If a control is disabled, it cannot be selected.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Setting the Enabled property to <code>false</code> does not disable the application&#39;s control box or prevent the application window from receiving the focus.  </p>\n</div>\n<p> When a container control has its enabled property set to <code>false</code>, all its contained controls are disabled, as well. For example, if the user clicks on any of the controls contained in a disabled <a class=\"xref\" href=\"system.windows.forms.groupbox\" data-linktype=\"relative-path\">GroupBox</a> control, no events are raised.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When a scrollable control is disabled, the scroll bars are also disabled. For example, a disabled multiline textbox is unable to scroll to display all the lines of text.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Focused\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Focused</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the control has input focus.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool Focused { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the control has focus; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Font\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Font</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the font of the text displayed by the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Drawing.Font Font { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> to apply to the text displayed by the control. The default is the value of the <span class=\"xref\">stem.Windows.Forms.Control.DefaultFont*</span> property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Font property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> will have the same <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackColor_\" data-linktype=\"relative-path\">BackColor</a> as its parent <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> by default. For more information about ambient properties, see the <a class=\"xref\" href=\"system.windows.forms.ambientproperties\" data-linktype=\"relative-path\">AmbientProperties</a> class or the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class overview.  </p>\n<p> Because the <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> is immutable (meaning that you cannot adjust any of its properties), you can only assign the Font property a new <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a>. However, you can base the new font on the existing font.  </p>\n<p> [Visual Basic, C#]  </p>\n<p> The following is an example of how to adjust the existing font to make it bold:  </p>\n<pre><code class=\"lang-c#\">myControl.Font = new Font(myControl.Font,   \n    myControl.Font.Style | FontStyle.Bold);  \n</code></pre><pre><code class=\"lang-vb#\">MyControl.Font = New Font(MyControl.Font, _   \n    MyControl.Font.Style Or FontStyle.Bold)  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_FontHeight\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FontHeight</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the height of the font of the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected int FontHeight { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The height of the <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> of the control in pixels.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The FontHeight property should not be set to any value other than the control&#39;s <a class=\"xref\" href=\"system.drawing.font#System_Drawing_Font_Height_\" data-linktype=\"relative-path\">Height</a> value, or -1. Setting FontHeight to -1 has the effect of clearing the cached height value, and the value is recalculated the next time the property is referenced.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ForeColor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ForeColor</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the foreground color of the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Drawing.Color ForeColor { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The foreground <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> of the control. The default is the value of the <span class=\"xref\">stem.Windows.Forms.Control.DefaultForeColor*</span> property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The ForeColor property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> will have the same <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackColor_\" data-linktype=\"relative-path\">BackColor</a> as its parent <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> by default. For more information about ambient properties, see the <a class=\"xref\" href=\"system.windows.forms.ambientproperties\" data-linktype=\"relative-path\">AmbientProperties</a> class or the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class overview.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Handle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Handle</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the window handle that the control is bound to.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public IntPtr Handle { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> that contains the window handle (<code>HWND</code>) of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the Handle property is a Windows <code>HWND</code>. If the handle has not yet been created, referencing this property will force the handle to be created.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_HasChildren\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">HasChildren</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the control contains one or more child controls.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool HasChildren { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the control contains one or more child controls; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> collection has a <a class=\"xref\" href=\"system.windows.forms.layout.arrangedelementcollection#System_Windows_Forms_Layout_ArrangedElementCollection_Count_\" data-linktype=\"relative-path\">Count</a> greater than zero, the HasChildren property will return <code>true</code>. Accessing the HasChildren property does not force the creation of a <a class=\"xref\" href=\"system.windows.forms.control.controlcollection\" data-linktype=\"relative-path\">Control.ControlCollection</a> if the control has no children, so referencing this property can provide a performance benefit when walking a tree of controls.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Height\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Height</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the height of the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int Height { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The height of the control in pixels.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Changes made to the Height and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Top_\" data-linktype=\"relative-path\">Top</a> property values cause the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Bottom_\" data-linktype=\"relative-path\">Bottom</a> property value of the control to change.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The minimum height for the derived control <a class=\"xref\" href=\"system.windows.forms.splitter\" data-linktype=\"relative-path\">Splitter</a> is one pixel. The default height for the <a class=\"xref\" href=\"system.windows.forms.splitter\" data-linktype=\"relative-path\">Splitter</a> control is three pixels. Setting the height of the <a class=\"xref\" href=\"system.windows.forms.splitter\" data-linktype=\"relative-path\">Splitter</a> control to a value less than one will reset the property value to the default height.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ImeMode\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ImeMode</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the Input Method Editor (IME) mode of the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.ImeMode ImeMode { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.imemode\" data-linktype=\"relative-path\">ImeMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.imemode\" data-linktype=\"relative-path\">ImeMode</a> values. The default is <a class=\"xref\" href=\"system.windows.forms.imemode\" data-linktype=\"relative-path\">ImeMode</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The assigned value is not one of the <a class=\"xref\" href=\"system.windows.forms.imemode\" data-linktype=\"relative-path\">ImeMode</a> enumeration values.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>An IME is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, using a standard keyboard. The ImeMode property is typically set to <a class=\"xref\" href=\"system.windows.forms.imemode\" data-linktype=\"relative-path\">System.Windows.Forms.ImeMode</a> for a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control that is intended to only enter numeric values. The ImeMode property value is set to <a class=\"xref\" href=\"system.windows.forms.imemode\" data-linktype=\"relative-path\">System.Windows.Forms.ImeMode</a> for the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> class.  </p>\n<p> Most classes that do not directly support Input Method Editors, or allow direct input from an IME, will set the value of this property to <a class=\"xref\" href=\"system.windows.forms.imemode\" data-linktype=\"relative-path\">ImeMode</a>.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The user can interactively change the ImeMode unless it has been programmatically set to <a class=\"xref\" href=\"system.windows.forms.imemode\" data-linktype=\"relative-path\">System.Windows.Forms.ImeMode</a>. In this case, the user will not be able to use the IME.  </p>\n<p> The ImeMode property is ignored on Windows 8 when the global input mode is in effect. For more info, see<a href=\"http://go.microsoft.com/fwlink/?LinkID=256509\" data-linktype=\"external\">Switch Text Input Changed from Per-Thread to Per-User</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ImeModeBase\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ImeModeBase</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the IME mode of a control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Windows.Forms.ImeMode ImeModeBase { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.imemode\" data-linktype=\"relative-path\">ImeMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The IME mode of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_InvokeRequired\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InvokeRequired</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the caller must call an invoke method when making method calls to the control because the caller is on a different thread than the one the control was created on.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool InvokeRequired { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the control&#39;s <span class=\"xref\">stem.Windows.Forms.Control.Handle*</span> was created on a different thread than the calling thread (indicating that you must make calls to the control through an invoke method); otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Controls in Windows Forms are bound to a specific thread and are not thread safe. Therefore, if you are calling a control&#39;s method from a different thread, you must use one of the control&#39;s invoke methods to marshal the call to the proper thread. This property can be used to determine if you must call an invoke method, which can be useful if you do not know what thread owns a control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In addition to the InvokeRequired property, there are four methods on a control that are thread safe to call: <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invoke_\" data-linktype=\"relative-path\">Invoke</a>,<a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_EndInvoke_\" data-linktype=\"relative-path\">EndInvoke</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateGraphics_\" data-linktype=\"relative-path\">CreateGraphics</a> if the handle for the control has already been created. Calling <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateGraphics_\" data-linktype=\"relative-path\">CreateGraphics</a> before the control&#39;s handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of these invoke methods when calling from a different thread.  </p>\n</div>\n<p> If the control&#39;s handle does not yet exist, InvokeRequired searches up the control&#39;s parent chain until it finds a control or form that does have a window handle. If no appropriate handle can be found, the InvokeRequired method returns <code>false</code>.  </p>\n<p> This means that InvokeRequiredcan return <code>false</code> if <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is not required (the call occurs on the same thread), or if the control was created on a different thread but the control&#39;s handle has not yet been created.  </p>\n<p> In the case where the control&#39;s handle has not yet been created, you should not simply call properties, methods, or events on the control. This might cause the control&#39;s handle to be created on the background thread, isolating the control on a thread without a message pump and making the application unstable.  </p>\n<p> You can protect against this case by also checking the value of <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsHandleCreated_\" data-linktype=\"relative-path\">IsHandleCreated</a> when InvokeRequired returns <code>false</code> on a background thread. If the control handle has not yet been created, you must wait until it has been created before calling <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invoke_\" data-linktype=\"relative-path\">Invoke</a> or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a>. Typically, this happens only if a background thread is created in the constructor of the primary form for the application (as in <code>Application.Run(new MainForm())</code>, before the form has been shown or <code>Application.Run</code> has been called.  </p>\n<p> One solution is to wait until the form&#39;s handle has been created before starting the background thread. Either force handle creation by calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Handle_\" data-linktype=\"relative-path\">Handle</a> property, or wait until the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event to start the background process.  </p>\n<p> An even better solution is to use the <code>SynchronizationContext</code> returned by <a class=\"xref\" href=\"system.threading.synchronizationcontext\" data-linktype=\"relative-path\">SynchronizationContext</a> rather than a control for cross-thread marshaling.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An exception might be thrown if the thread that should process the message is no longer active.  </p>\n</div>\n<p> For more information about multithreaded Windows Forms controls, see <a href=\"../Topic/How%20to:%20Use%20a%20Background%20Thread%20to%20Search%20for%20Files.md\" data-linktype=\"relative-path\">How to: Use a Background Thread to Search for Files</a> and <a href=\"../Topic/How%20to:%20Make%20Thread-Safe%20Calls%20to%20Windows%20Forms%20Controls.md\" data-linktype=\"relative-path\">How to: Make Thread-Safe Calls to Windows Forms Controls</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_IsAccessible\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsAccessible</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the control is visible to accessibility applications.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsAccessible { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the control is visible to accessibility applications; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_IsDisposed\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsDisposed</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the control has been disposed of.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsDisposed { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the control has been disposed of; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When this property returns <code>true</code>, the control is disposed of and can no longer be referenced as a valid Windows control. Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection. When a control is disposed, you cannot call its <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RecreateHandle_\" data-linktype=\"relative-path\">RecreateHandle</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_IsHandleCreated\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsHandleCreated</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the control has a handle associated with it.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsHandleCreated { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if a handle has been assigned to the control; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the IsHandleCreated property to determine whether <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateHandle_\" data-linktype=\"relative-path\">CreateHandle</a> has been called.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_IsMirrored\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsMirrored</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the control is mirrored.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsMirrored { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the control is mirrored; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A mirrored control displays both layout and text from right to left. For more information, see <a href=\"http://msdn.microsoft.com/en-us/7c5c4ecc-9bfb-4508-8383-753e306719b1\" data-linktype=\"external\">How to: Create Mirrored Windows Forms and Controls</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_LayoutEngine\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LayoutEngine</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a cached instance of the control&#39;s layout engine.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Windows.Forms.Layout.LayoutEngine LayoutEngine { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.layout.layoutengine\" data-linktype=\"relative-path\">LayoutEngine</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.layout.layoutengine\" data-linktype=\"relative-path\">LayoutEngine</a> for the control&#39;s contents.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The LayoutEngine property gets the layout engine for the control&#39;s children rather than for the control itself.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Left\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Left</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the distance, in pixels, between the left edge of the control and the left edge of its container&#39;s client area.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int Left { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> representing the distance, in pixels, between the left edge of the control and the left edge of its container&#39;s client area.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Left property value is equivalent to the <a class=\"xref\" href=\"system.drawing.point#System_Drawing_Point_X_\" data-linktype=\"relative-path\">X</a> property of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Location_\" data-linktype=\"relative-path\">Location</a> property value of the control.  </p>\n<p> Changes made to the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Width_\" data-linktype=\"relative-path\">Width</a> and Left property values cause the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Right_\" data-linktype=\"relative-path\">Right</a> property value of the control to change.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Location\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Location</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the coordinates of the upper-left corner of the control relative to the upper-left corner of its container.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Drawing.Point Location { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> that represents the upper-left corner of the control relative to the upper-left corner of its container.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Because the <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> class is a value type (<code>Structure</code> in Visual Basic, <code>struct</code> in Visual C#), it is returned by value, meaning accessing the property returns a copy of the upper-left point of the control. So, adjusting the <a class=\"xref\" href=\"system.drawing.point#System_Drawing_Point_X_\" data-linktype=\"relative-path\">X</a> or <a class=\"xref\" href=\"system.drawing.point#System_Drawing_Point_Y_\" data-linktype=\"relative-path\">Y</a> properties of the <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> returned from this property will not affect the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Left_\" data-linktype=\"relative-path\">Left</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Right_\" data-linktype=\"relative-path\">Right</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Top_\" data-linktype=\"relative-path\">Top</a>, or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Bottom_\" data-linktype=\"relative-path\">Bottom</a> property values of the control. To adjust these properties set each property value individually, or set the Location property with a new <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>.  </p>\n<p> If the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> is a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>, the Location property value represents the upper-left corner of the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> in screen coordinates.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Margin\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Margin</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the space between controls.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.Padding Margin { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.padding\" data-linktype=\"relative-path\">Padding</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.padding\" data-linktype=\"relative-path\">Padding</a> representing the space between controls.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Controls receive default values for Margin that are reasonably close to Windows user interface guidelines. Some adjustments might still be necessary for particular applications.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Setting the Margin property on a docked control has no effect on the distance of the control from the the edges of its container.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_MaximumSize\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MaximumSize</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the size that is the upper limit that <span class=\"xref\">stem.Windows.Forms.Control.GetPreferredSize*</span> can specify.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Drawing.Size MaximumSize { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An ordered pair of type <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> representing the width and height of a rectangle.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_MinimumSize\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MinimumSize</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the size that is the lower limit that <span class=\"xref\">stem.Windows.Forms.Control.GetPreferredSize*</span> can specify.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Drawing.Size MinimumSize { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An ordered pair of type <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> representing the width and height of a rectangle.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ModifierKeys\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ModifierKeys</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating which of the modifier keys (SHIFT, CTRL, and ALT) is in a pressed state.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Forms.Keys ModifierKeys { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A bitwise combination of the <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values. The default is <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_MouseButtons\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MouseButtons</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating which of the mouse buttons is in a pressed state.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Forms.MouseButtons MouseButtons { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.mousebuttons\" data-linktype=\"relative-path\">MouseButtons</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A bitwise combination of the <a class=\"xref\" href=\"system.windows.forms.mousebuttons\" data-linktype=\"relative-path\">MouseButtons</a> enumeration values. The default is <a class=\"xref\" href=\"system.windows.forms.mousebuttons\" data-linktype=\"relative-path\">MouseButtons</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_MousePosition\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MousePosition</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the position of the mouse cursor in screen coordinates.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Drawing.Point MousePosition { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> that contains the coordinates of the mouse cursor relative to the upper-left corner of the screen.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The MousePosition property returns a <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> that represents the mouse cursor position at the time the property was referenced. The coordinates indicate the position on the screen, not relative to the control, and are returned regardless of whether the cursor is positioned over the control. The coordinates of the upper-left corner of the screen are 0,0.  </p>\n<p> The MousePosition property is identical to the <a class=\"xref\" href=\"system.windows.forms.cursor#System_Windows_Forms_Cursor_Position_\" data-linktype=\"relative-path\">Position</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Name\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Name</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the name of the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Name { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the control. The default is an empty string (&quot;&quot;).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Name property can be used at run time to evaluate the object by name rather than type and programmatic name. Because the Name property returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> type, it can be evaluated in case-style logic statements (<code>Select</code> statement in Visual Basic, <code>switch</code> statement in Visual C# and Visual C++).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Padding\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Padding</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets padding within the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.Padding Padding { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.padding\" data-linktype=\"relative-path\">Padding</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.padding\" data-linktype=\"relative-path\">Padding</a> representing the control&#39;s internal spacing characteristics.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For containers such as <a class=\"xref\" href=\"system.windows.forms.groupbox\" data-linktype=\"relative-path\">GroupBox</a> and <a class=\"xref\" href=\"system.windows.forms.tabcontrol\" data-linktype=\"relative-path\">TabControl</a>, the Padding property gets or sets their respective <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DisplayRectangle_\" data-linktype=\"relative-path\">DisplayRectangle</a> properties. The <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_DockPadding_\" data-linktype=\"relative-path\">DockPadding</a> property is equal to its Padding property.  </p>\n<p> Controls receive default values for Padding that are reasonably close to Windows user interface guidelines. Some adjustments might still be necessary for particular applications.  </p>\n<p> All controls that implement <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetPreferredSize_\" data-linktype=\"relative-path\">GetPreferredSize</a> are enlarged by the amount in Padding when <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AutoSize_\" data-linktype=\"relative-path\">AutoSize</a> is <code>true</code>.  </p>\n<p> The following controls do not use Padding:  </p>\n<ul>\n<li><p>Controls that do not implement <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AutoSize_\" data-linktype=\"relative-path\">AutoSize</a> through <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetPreferredSize_\" data-linktype=\"relative-path\">GetPreferredSize</a>  </p>\n</li>\n<li><p>Custom controls that directly inherit from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a>  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.axhost\" data-linktype=\"relative-path\">AxHost</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.combobox\" data-linktype=\"relative-path\">ComboBox</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datetimepicker\" data-linktype=\"relative-path\">DateTimePicker</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.hscrollbar\" data-linktype=\"relative-path\">HScrollBar</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.maskedtextbox\" data-linktype=\"relative-path\">MaskedTextBox</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.monthcalendar\" data-linktype=\"relative-path\">MonthCalendar</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.progressbar\" data-linktype=\"relative-path\">ProgressBar</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.propertygrid\" data-linktype=\"relative-path\">PropertyGrid</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.splitcontainer\" data-linktype=\"relative-path\">SplitContainer</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.treeview\" data-linktype=\"relative-path\">TreeView</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.vscrollbar\" data-linktype=\"relative-path\">VScrollBar</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.webbrowser\" data-linktype=\"relative-path\">WebBrowser</a></li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Parent\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Parent</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the parent container of the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.Control Parent { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> that represents the parent or container control of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Setting the Parent property value to <code>null</code> removes the control from the <a class=\"xref\" href=\"system.windows.forms.control.controlcollection\" data-linktype=\"relative-path\">Control.ControlCollection</a> of its current parent control.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_PreferredSize\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PreferredSize</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the size of a rectangular area into which the control can fit.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Drawing.Size PreferredSize { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> containing the height and width, in pixels.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ProductName\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ProductName</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the product name of the assembly containing the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string ProductName { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The product name of the assembly containing the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The ProductName property is a read-only property. To change the value of this property, set the <a class=\"xref\" href=\"system.reflection.assemblyproductattribute#System_Reflection_AssemblyProductAttribute_Product_\" data-linktype=\"relative-path\">Product</a> property value of the <a class=\"xref\" href=\"system.reflection.assemblyproductattribute\" data-linktype=\"relative-path\">AssemblyProductAttribute</a>. The following line of C# code sets the ProductName property.  </p>\n<pre><code>[assembly: AssemblyProduct(&quot;MyApplication&quot;)]  \n</code></pre><div class=\"NOTE\"><h5>Note</h5><p> It is strongly recommended that you provide the company name, product name, and product version. Providing this information enables the use of Windows Forms features such as <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_UserAppDataPath_\" data-linktype=\"relative-path\">UserAppDataPath</a> that make it easier to write applications that comply with the &quot;Certified for Windows&quot; program. For more information about the Certified for Windows program, see <a href=\"http://msdn.microsoft.com/certification\" data-linktype=\"external\">http://msdn.microsoft.com/certification</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ProductVersion\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ProductVersion</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the version of the assembly containing the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string ProductVersion { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The file version of the assembly containing the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The ProductVersion property is a read-only property. To change the value of this property, set the <a class=\"xref\" href=\"system.reflection.assemblyversionattribute#System_Reflection_AssemblyVersionAttribute_Version_\" data-linktype=\"relative-path\">Version</a> property value of the <a class=\"xref\" href=\"system.reflection.assemblyversionattribute\" data-linktype=\"relative-path\">AssemblyVersionAttribute</a>. The following line of C# code sets the ProductVersion property.  </p>\n<pre><code>[assembly: AssemblyVersion(&quot;1.0.1&quot;)]  \n</code></pre><div class=\"NOTE\"><h5>Note</h5><p> It is strongly recommended that you provide the company name, product name, and product version. Providing this information enables the use of Windows Forms features such as <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_UserAppDataPath_\" data-linktype=\"relative-path\">UserAppDataPath</a> that make it easier to write applications that comply with the &quot;Certified for Windows&quot; program. For more information about the Certified for Windows program, see <a href=\"http://msdn.microsoft.com/certification\" data-linktype=\"external\">http://msdn.microsoft.com/certification</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_PropagatingImeMode\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PropagatingImeMode</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets an object that represents a propagating IME mode.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected static System.Windows.Forms.ImeMode PropagatingImeMode { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.imemode\" data-linktype=\"relative-path\">ImeMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that represents a propagating IME mode.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_RecreatingHandle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RecreatingHandle</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the control is currently re-creating its handle.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool RecreatingHandle { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the control is currently re-creating its handle; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The RecreatingHandle property returns <code>true</code> if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RecreateHandle_\" data-linktype=\"relative-path\">RecreateHandle</a> method is still running on the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Region\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Region</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the window region associated with the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Drawing.Region Region { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The window <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> associated with the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The window region is a collection of pixels within the window where the operating system permits drawing. The operating system does not display any portion of a window that lies outside of the window region. The coordinates of a control&#39;s region are relative to the upper-left corner of the control, not the client area of the control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The collection of pixels contained with the region can be noncontiguous.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_RenderRightToLeft\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RenderRightToLeft</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>This property is now obsolete.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected bool RenderRightToLeft { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the control is rendered from right to left; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ResizeRedraw\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ResizeRedraw</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the control redraws itself when resized.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected bool ResizeRedraw { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the control redraws itself when resized; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The ResizeRedraw property value is equivalent to the return value of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetStyle_\" data-linktype=\"relative-path\">GetStyle</a> method when passing in the <a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">System.Windows.Forms.ControlStyles</a> value as a parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Right\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Right</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the distance, in pixels, between the right edge of the control and the left edge of its container&#39;s client area.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int Right { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> representing the distance, in pixels, between the right edge of the control and the left edge of its container&#39;s client area.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the Right property is equal to the sum of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Left_\" data-linktype=\"relative-path\">Left</a> property value and the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Width_\" data-linktype=\"relative-path\">Width</a> property value.  </p>\n<p> The Right property is read-only. You can change this property value indirectly by changing the value of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Left_\" data-linktype=\"relative-path\">Left</a> or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Width_\" data-linktype=\"relative-path\">Width</a> properties or calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetBounds_\" data-linktype=\"relative-path\">SetBounds</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetBoundsCore_\" data-linktype=\"relative-path\">SetBoundsCore</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UpdateBounds_\" data-linktype=\"relative-path\">UpdateBounds</a>, or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetClientSizeCore_\" data-linktype=\"relative-path\">SetClientSizeCore</a> methods.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_RightToLeft\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RightToLeft</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether control&#39;s elements are aligned to support locales using right-to-left fonts.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Windows.Forms.RightToLeft RightToLeft { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.righttoleft\" data-linktype=\"relative-path\">RightToLeft</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.righttoleft\" data-linktype=\"relative-path\">RightToLeft</a> values. The default is <a class=\"xref\" href=\"system.windows.forms.righttoleft\" data-linktype=\"relative-path\">RightToLeft</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The assigned value is not one of the <a class=\"xref\" href=\"system.windows.forms.righttoleft\" data-linktype=\"relative-path\">RightToLeft</a> values.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The RightToLeft property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> will have the same <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackColor_\" data-linktype=\"relative-path\">BackColor</a> as its parent <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> by default. For more information about ambient properties, see the <a class=\"xref\" href=\"system.windows.forms.ambientproperties\" data-linktype=\"relative-path\">AmbientProperties</a> class or the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class overview.  </p>\n<p> The RightToLeft property is used for international applications where the language is written from right to left, such as Hebrew or Arabic. When this property is set to <a class=\"xref\" href=\"system.windows.forms.righttoleft\" data-linktype=\"relative-path\">System.Windows.Forms.RightToLeft</a>, control elements that include text are displayed from right to left.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the value of the RightToLeft property is changed at run time, only raw text without formatting is preserved.  </p>\n</div>\n<p> The following are a few examples of how control elements are affected by the RightToLeft property value of <a class=\"xref\" href=\"system.windows.forms.righttoleft\" data-linktype=\"relative-path\">System.Windows.Forms.RightToLeft</a> :  </p>\n<ul>\n<li><p>Vertical scroll bars are displayed on the left side rather than right side of scrollable controls (for example, <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>, <a class=\"xref\" href=\"system.windows.forms.panel\" data-linktype=\"relative-path\">Panel</a>, multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, and <a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a>).  </p>\n</li>\n<li><p>Horizontal scroll bars start with the scroll box (thumb) right-aligned.  </p>\n</li>\n<li><p>The check box element alignment, controlled by the <code>CheckAlign</code> property, is reversed for <a class=\"xref\" href=\"system.windows.forms.checkbox\" data-linktype=\"relative-path\">CheckBox</a> and <a class=\"xref\" href=\"system.windows.forms.radiobutton\" data-linktype=\"relative-path\">RadioButton</a> controls.  </p>\n</li>\n<li><p>Items in list box, combo box, and up-down controls are right aligned.  </p>\n</li>\n<li><p>Up and down buttons are left-aligned on <a class=\"xref\" href=\"system.windows.forms.numericupdown\" data-linktype=\"relative-path\">NumericUpDown</a> and <a class=\"xref\" href=\"system.windows.forms.domainupdown\" data-linktype=\"relative-path\">DomainUpDown</a> controls.  </p>\n</li>\n<li><p>Menus (<a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a>, <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>, and <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a>) are displayed right-aligned.  </p>\n</li>\n<li><p>The alignment of toolbar buttons on a <a class=\"xref\" href=\"system.windows.forms.toolbar\" data-linktype=\"relative-path\">ToolBar</a> control or the alignment of text on a <a class=\"xref\" href=\"system.windows.forms.toolbarbutton\" data-linktype=\"relative-path\">ToolBarButton</a> is not affected by the RightToLeft property.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.windows.forms.axhost\" data-linktype=\"relative-path\">AxHost</a> supports right-to-left alignment; however, the effect on an ActiveX control depends on the extent to which the control author implemented support for right-to-left display.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ScaleChildren\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ScaleChildren</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value that determines the scaling of child controls.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual bool ScaleChildren { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if child controls will be scaled when the <span class=\"xref\">stem.Windows.Forms.Control.Scale*</span> method on this control is called; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the ScaleChildren property is <code>true</code>, then the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Scale_\" data-linktype=\"relative-path\">Scale</a> method will recursively call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ScaleControl_\" data-linktype=\"relative-path\">ScaleControl</a> method of each of its child controls.  </p>\n<p> The default implementation of ScaleChildren always returns <code>true</code>. Derived classes can override ScaleChildren to return <code>false</code> to indicate that scaling should not be performed on their children.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ShowFocusCues\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ShowFocusCues</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the control should display focus rectangles.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual bool ShowFocusCues { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the control should display focus rectangles; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information about this feature, see the<a href=\"http://msdn.microsoft.com/library/windows/desktop/ms646342(v=vs.85).aspx\" data-linktype=\"external\">WM_CHANGEUISTATE</a>,<a href=\"http://msdn.microsoft.com/library/windows/desktop/ms646355(v=vs.85).aspx\" data-linktype=\"external\">WM_QUERYUISTATE</a>, and the <a href=\"http://msdn.microsoft.com/library/windows/desktop/ms646361(v=vs.85).aspx\" data-linktype=\"external\">WM_UPDATEUISTATE</a>topics.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ShowKeyboardCues\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ShowKeyboardCues</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the user interface is in the appropriate state to show or hide keyboard accelerators.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual bool ShowKeyboardCues { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the keyboard accelerators are visible; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>In controls created in the Windows Forms designer, keyboard accelerators are visible by default.  </p>\n<p> For more information about this feature, see the<a href=\"http://msdn.microsoft.com/library/windows/desktop/ms646342(v=vs.85).aspx\" data-linktype=\"external\">WM_CHANGEUISTATE</a>,<a href=\"http://msdn.microsoft.com/library/windows/desktop/ms646355(v=vs.85).aspx\" data-linktype=\"external\">WM_QUERYUISTATE</a>, and the <a href=\"http://msdn.microsoft.com/library/windows/desktop/ms646361(v=vs.85).aspx\" data-linktype=\"external\">WM_UPDATEUISTATE</a>topics.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Site\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Site</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the site of the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.ComponentModel.ISite Site { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.isite\" data-linktype=\"relative-path\">ISite</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.componentmodel.isite\" data-linktype=\"relative-path\">ISite</a> associated with the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a>, if any.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Size\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Size</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the height and width of the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Drawing.Size Size { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> that represents the height and width of the control in pixels.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Because the <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> class is a value type (<code>Structure</code> in Visual Basic, <code>struct</code> in Visual C#), it is returned by value, meaning accessing the property returns a copy of the size of the control. So, adjusting the <a class=\"xref\" href=\"system.drawing.size#System_Drawing_Size_Width_\" data-linktype=\"relative-path\">Width</a> or <a class=\"xref\" href=\"system.drawing.size#System_Drawing_Size_Height_\" data-linktype=\"relative-path\">Height</a> properties of the <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> returned from this property will not affect the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Width_\" data-linktype=\"relative-path\">Width</a> or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Height_\" data-linktype=\"relative-path\">Height</a> of the control. To adjust the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Width_\" data-linktype=\"relative-path\">Width</a> or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Height_\" data-linktype=\"relative-path\">Height</a> of the control, you must set the control&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Width_\" data-linktype=\"relative-path\">Width</a> or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Height_\" data-linktype=\"relative-path\">Height</a> property, or set the Size property with a new <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To maintain better performance, do not set the <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> of a control in its constructor. The preferred method is to override the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultSize_\" data-linktype=\"relative-path\">DefaultSize</a> property.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> On Windows Server 2003 systems, the size of a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> is restricted by the maximum pixel width and height of the monitor.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_TabIndex\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TabIndex</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the tab order of the control within its container.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int TabIndex { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The index value of the control within the set of controls within its container. The controls in the container are included in the tab order.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A tab index can consist of any valid integer greater than or equal to zero, lower numbers being earlier in the tab order. If more than one control on the same parent control has the same tab index, the z-order of the controls determines the order to cycle through the controls.  </p>\n<p> For a control to be included in the tab order, its <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TabStop_\" data-linktype=\"relative-path\">TabStop</a> property must be set to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_TabStop\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TabStop</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool TabStop { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the user can give the focus to the control using the TAB key; otherwise, <code>false</code>. The default is <code>true</code>.  </p>\n <div class=\"alert NOTE\"><br> This property will always return <code>true</code> for an instance of the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> class.<br>\n</div>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When the user presses the TAB key, the input focus is set to the next control in the tab order. Controls with the TabStop property value of <code>false</code> are not included in the collection of controls in the tab order. The tab order can be manipulated by setting the control&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TabIndex_\" data-linktype=\"relative-path\">TabIndex</a> property value.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Tag\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Tag</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the object that contains data about the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object Tag { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that contains data about the control. The default is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Any type derived from the <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> class can be assigned to this property. If the Tag property is set through the Windows Forms designer, only text can be assigned.  </p>\n<p> A common use for the Tag property is to store data that is closely associated with the control. For example, if you have a control that displays information about a customer, you might store a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> that contains the customer&#39;s order history in that control&#39;s Tag property so the data can be accessed quickly.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Text\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Text</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the text associated with this control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual string Text { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The text associated with this control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Text property of the control is used differently by each derived class. For example the Text property of a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> is displayed in the title bar at the top of the form, is fairly small in character count, and usually displays the application or document name. However, the Text property of a <a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a> can be large and can include numerous nonvisual characters used to format the text. For example, the text displayed in a <a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a> can be formatted by adjusting the <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> properties, or by the addition of spaces or tab characters to align the text.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Top\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Top</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the distance, in pixels, between the top edge of the control and the top edge of its container&#39;s client area.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int Top { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container&#39;s client area.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Top property value is equivalent to the <a class=\"xref\" href=\"system.drawing.point#System_Drawing_Point_Y_\" data-linktype=\"relative-path\">Y</a> property of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Location_\" data-linktype=\"relative-path\">Location</a> property value of the control.  </p>\n<p> Changes made to the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Height_\" data-linktype=\"relative-path\">Height</a> and Top property values cause the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Bottom_\" data-linktype=\"relative-path\">Bottom</a> property value of the control to change.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_TopLevelControl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TopLevelControl</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the parent control that is not parented by another Windows Forms control. Typically, this is the outermost <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> that the control is contained in.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.Control TopLevelControl { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> that represents the top-level control that contains the current control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The top-level control is defined as the parent control that is not parented by another Windows Forms control. Typically, this is the outermost <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> that the control is contained in. For example, if the control is contained on an MDI child <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>, then the top-level control is the Multiple Document Interface (MDI) parent <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>. If the control is not parented on a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>, this property will return <code>null</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_UseWaitCursor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UseWaitCursor</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether to use the wait cursor for the current control and all child controls.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool UseWaitCursor { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to use the wait cursor for the current control and all child controls; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use a wait cursor whenever you perform an operation that takes a noticeable amount of time.However, note that operations that block the UI thread will also block acursor change.Therefore, this property should only be used when performing time-consuming operations in another thread. To change the cursor globally and immediately, seethe <a class=\"xref\" href=\"system.windows.forms.cursor#System_Windows_Forms_Cursor_Current_\" data-linktype=\"relative-path\">Current</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Visible\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Visible</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the control and all its child controls are displayed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool Visible { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the control and all its child controls are displayed; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Note that even if <code>Visible</code> is set to <code>true</code>, the control might not be visible to the user if it is obscured behind other controls.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Width\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Width</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the width of the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int Width { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The width of the control in pixels.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Changes made to the Width and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Left_\" data-linktype=\"relative-path\">Left</a> property values cause the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Right_\" data-linktype=\"relative-path\">Right</a> property value of the control to change.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_WindowTarget\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WindowTarget</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>This property is not relevant for this class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.IWindowTarget WindowTarget { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.iwindowtarget\" data-linktype=\"relative-path\">IWindowTarget</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The NativeWindow contained within the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is not relevant for this class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_AccessibilityNotifyClients_System_Windows_Forms_AccessibleEvents_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AccessibilityNotifyClients(AccessibleEvents,Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Notifies the accessibility client applications of the specified <a class=\"xref\" href=\"system.windows.forms.accessibleevents\" data-linktype=\"relative-path\">AccessibleEvents</a> for the specified child control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void AccessibilityNotifyClients (System.Windows.Forms.AccessibleEvents accEvent, int childID);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>accEvent</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.accessibleevents\" data-linktype=\"relative-path\">AccessibleEvents</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.accessibleevents\" data-linktype=\"relative-path\">AccessibleEvents</a> to notify the accessibility client applications of.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>childID</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The child <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> to notify of the accessible event.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You must call the <a class=\"xref\" href=\"system.windows.forms.control.controlaccessibleobject#System_Windows_Forms_Control_ControlAccessibleObject_NotifyClients_\" data-linktype=\"relative-path\">NotifyClients</a> method for each <a class=\"xref\" href=\"system.windows.forms.accessibleevents\" data-linktype=\"relative-path\">AccessibleEvents</a> the accessibility client applications are to be notified of. The <a class=\"xref\" href=\"system.windows.forms.control.controlaccessibleobject#System_Windows_Forms_Control_ControlAccessibleObject_NotifyClients_\" data-linktype=\"relative-path\">NotifyClients</a> method is typically called when a property is set or from within an event handler. For example, you might call the <a class=\"xref\" href=\"system.windows.forms.control.controlaccessibleobject#System_Windows_Forms_Control_ControlAccessibleObject_NotifyClients_\" data-linktype=\"relative-path\">NotifyClients</a> method and pass in an <a class=\"xref\" href=\"system.windows.forms.accessibleevents\" data-linktype=\"relative-path\">AccessibleEvents</a> value of <code>Hide</code> from within the event handler for the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_VisibleChanged\" data-linktype=\"relative-path\">System.Windows.Forms.Control.VisibleChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_AccessibilityNotifyClients_System_Windows_Forms_AccessibleEvents_System_Int32_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AccessibilityNotifyClients(AccessibleEvents,Int32,Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Notifies the accessibility client applications of the specified <a class=\"xref\" href=\"system.windows.forms.accessibleevents\" data-linktype=\"relative-path\">AccessibleEvents</a> for the specified child control .</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void AccessibilityNotifyClients (System.Windows.Forms.AccessibleEvents accEvent, int objectID, int childID);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>accEvent</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.accessibleevents\" data-linktype=\"relative-path\">AccessibleEvents</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.accessibleevents\" data-linktype=\"relative-path\">AccessibleEvents</a> to notify the accessibility client applications of.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>objectID</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The identifier of the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>childID</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The child <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> to notify of the accessible event.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_BeginInvoke_System_Delegate_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BeginInvoke(Delegate)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Executes the specified delegate asynchronously on the thread that the control&#39;s underlying handle was created on.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public IAsyncResult BeginInvoke (Delegate method);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A delegate to a method that takes no parameters.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that represents the result of the BeginInvoke operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>No appropriate window handle can be found.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The delegate is called asynchronously, and this method returns immediately. You can call this method from any thread, even the thread that owns the control&#39;s handle. If the control&#39;s handle does not exist yet, this method searches up the control&#39;s parent chain until it finds a control or form that does have a window handle. If no appropriate handle can be found, BeginInvoke will throw an exception. Exceptions within the delegate method are considered untrapped and will be sent to the application&#39;s untrapped exception handler.  </p>\n<p> You can call <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_EndInvoke_\" data-linktype=\"relative-path\">EndInvoke</a> to retrieve the return value from the delegate, if neccesary, but this is not required. <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_EndInvoke_\" data-linktype=\"relative-path\">EndInvoke</a> will block until the return value can be retrieved.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Most methods on a control can only be called from the thread where the control was created. In addition to the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokeRequired_\" data-linktype=\"relative-path\">InvokeRequired</a> property, there are four methods on a control that are thread safe: <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invoke_\" data-linktype=\"relative-path\">Invoke</a>, BeginInvoke, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_EndInvoke_\" data-linktype=\"relative-path\">EndInvoke</a>, and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateGraphics_\" data-linktype=\"relative-path\">CreateGraphics</a> if the handle for the control has already been created. Calling <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateGraphics_\" data-linktype=\"relative-path\">CreateGraphics</a> before the control&#39;s handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control&#39;s thread. The invoke methods always invoke their callbacks on the control&#39;s thread.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> An exception might be thrown if the thread that should process the message is no longer active.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_BeginInvoke_System_Delegate_System_Object___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BeginInvoke(Delegate,Object[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Executes the specified delegate asynchronously with the specified arguments, on the thread that the control&#39;s underlying handle was created on.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public IAsyncResult BeginInvoke (Delegate method, object[] args);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A delegate to a method that takes parameters of the same number and type that are contained in the <code>args</code> parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>args</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of objects to pass as arguments to the given method. This can be <code>null</code> if no arguments are needed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that represents the result of the <span class=\"xref\">stem.Windows.Forms.Control.BeginInvoke*</span> operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>No appropriate window handle can be found.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The delegate is called asynchronously, and this method returns immediately. You can call this method from any thread, even the thread that owns the control&#39;s handle. If the control&#39;s handle does not exist yet, this method searches up the control&#39;s parent chain until it finds a control or form that does have a window handle. If no appropriate handle can be found, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> will throw an exception. Exceptions within the delegate method are considered untrapped and will be sent to the application&#39;s untrapped exception handler.  </p>\n<p> You can call <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_EndInvoke_\" data-linktype=\"relative-path\">EndInvoke</a> to retrieve the return value from the delegate, if neccesary, but this is not required. <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_EndInvoke_\" data-linktype=\"relative-path\">EndInvoke</a> will block until the return value can be retrieved.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Most methods on a control can only be called from the thread where the control was created. In addition to the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokeRequired_\" data-linktype=\"relative-path\">InvokeRequired</a> property, there are four methods on a control that are thread safe: <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invoke_\" data-linktype=\"relative-path\">Invoke</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_EndInvoke_\" data-linktype=\"relative-path\">EndInvoke</a>, and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateGraphics_\" data-linktype=\"relative-path\">CreateGraphics</a> if the handle for the control has already been created. Calling <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateGraphics_\" data-linktype=\"relative-path\">CreateGraphics</a> before the control&#39;s handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control&#39;s thread. The invoke methods always invoke their callbacks on the control&#39;s thread.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> An exception might be thrown if the thread that should process the message is no longer active.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_BringToFront\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BringToFront()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Brings the control to the front of the z-order.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void BringToFront ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The control is moved to the front of the z-order. If the control is a child of another control, the child control is moved to the front of the z-order. BringToFront does not make a control a top-level control, and it does not raise the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Contains_System_Windows_Forms_Control_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Contains(Control)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves a value indicating whether the specified control is a child of the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool Contains (System.Windows.Forms.Control ctl);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ctl</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> to evaluate.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the specified control is a child of the control; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_CreateAccessibilityInstance\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateAccessibilityInstance()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a new accessibility object for the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A new <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> for the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If you do not explicitly call the CreateAccessibilityInstance method, it will be called when the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibilityObject_\" data-linktype=\"relative-path\">AccessibilityObject</a> property is referenced.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To get or set the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibilityObject_\" data-linktype=\"relative-path\">AccessibilityObject</a> property, you must add a reference to the <code>Accessibility</code> assembly installed with the .NET Framework.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_CreateControl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateControl()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Forces the creation of the visible control, including the creation of the handle and any visible child controls.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void CreateControl ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The CreateControl method forces a handle to be created for the control and its child controls. This method is used when you need a handle immediately for manipulation of the control or its children; simply calling a control&#39;s constructor does not create the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Handle_\" data-linktype=\"relative-path\">Handle</a>.  </p>\n<p> CreateControl does not create a control handle if the control&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Visible_\" data-linktype=\"relative-path\">Visible</a> property is <code>false</code>. You can either call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateHandle_\" data-linktype=\"relative-path\">CreateHandle</a> method or access the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Handle_\" data-linktype=\"relative-path\">Handle</a> property to create the control&#39;s handle regardless of the control&#39;s visibility, but in this case, no window handles are created for the control&#39;s children.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_CreateControlsInstance\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateControlsInstance()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a new instance of the control collection for the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A new instance of <a class=\"xref\" href=\"system.windows.forms.control.controlcollection\" data-linktype=\"relative-path\">Control.ControlCollection</a> assigned to the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_CreateGraphics\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateGraphics()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Drawing.Graphics CreateGraphics ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object that you retrieve through the CreateGraphics method should not normally be retained after the current Windows message has been processed, because anything painted with that object will be erased with the next WM_PAINT message. Therefore you cannot cache the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object for reuse, except to use non-visual methods like <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_MeasureString_\" data-linktype=\"relative-path\">MeasureString</a>. Instead, you must call CreateGraphics every time that you want to use the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object, and then call <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Dispose_\" data-linktype=\"relative-path\">Dispose</a> when you are finished using it. For more information about Windows messages, see <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_WndProc_\" data-linktype=\"relative-path\">WndProc</a>.  </p>\n<p> By design, CreateGraphics sets ownership to the calling thread, and fails if it is called on other threads.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In addition to the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokeRequired_\" data-linktype=\"relative-path\">InvokeRequired</a> property, there are four methods on a control that are thread safe: <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invoke_\" data-linktype=\"relative-path\">Invoke</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_EndInvoke_\" data-linktype=\"relative-path\">EndInvoke</a>, and CreateGraphics if the handle for the control has already been created. Calling CreateGraphics before the control&#39;s handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control&#39;s thread.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_CreateHandle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateHandle()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a handle for the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void CreateHandle ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The object is in a disposed state.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You typically should not call the CreateHandle method directly. The preferred method is to call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateControl_\" data-linktype=\"relative-path\">CreateControl</a> method, which forces a handle to be created for the control and its child controls when the control is created.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_DefWndProc_System_Windows_Forms_Message__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefWndProc(Message)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sends the specified message to the default window procedure.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void DefWndProc (ref System.Windows.Forms.Message m);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>m</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The Windows <a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a> to process.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information about processing Windows messages, see the <a href=\"http://go.microsoft.com/fwlink/?LinkId=181565\" data-linktype=\"external\">WindowProc function</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_DestroyHandle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DestroyHandle()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Destroys the handle associated with the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void DestroyHandle ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Dispose_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Dispose(Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and its child controls and optionally releases the managed resources.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override void Dispose (bool disposing);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>disposing</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is called by the public <code>Dispose()</code> method and the <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method.<code>Dispose()</code> invokes the protected <code>Dispose(Boolean)</code> method with the <code>disposing</code> parameter set to <code>true</code>. <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes <code>Dispose</code> with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code>parameter is <code>true</code>, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> references. This method invokes the <code>Dispose()</code> method of each referenced object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_DoDragDrop_System_Object_System_Windows_Forms_DragDropEffects_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DoDragDrop(Object,DragDropEffects)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Begins a drag-and-drop operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.DragDropEffects DoDragDrop (object data, System.Windows.Forms.DragDropEffects allowedEffects);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The data to drag.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>allowedEffects</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.dragdropeffects\" data-linktype=\"relative-path\">DragDropEffects</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.dragdropeffects\" data-linktype=\"relative-path\">DragDropEffects</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.dragdropeffects\" data-linktype=\"relative-path\">DragDropEffects</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A value from the <a class=\"xref\" href=\"system.windows.forms.dragdropeffects\" data-linktype=\"relative-path\">DragDropEffects</a> enumeration that represents the final effect that was performed during the drag-and-drop operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>allowedEffects</code> parameter determines which drag operations can occur. If the drag operation needs to interoperate with applications in another process, data should either be a base managed class (<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>, <a class=\"xref\" href=\"system.drawing.bitmap\" data-linktype=\"relative-path\">Bitmap</a>, or <a class=\"xref\" href=\"system.drawing.imaging.metafile\" data-linktype=\"relative-path\">Metafile</a>), or an object that implements <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> or <a class=\"xref\" href=\"system.windows.forms.idataobject\" data-linktype=\"relative-path\">IDataObject</a>.  </p>\n<p> The following describes how and when events related to drag-and-drop operations are raised.  </p>\n<p> The DoDragDrop method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.  </p>\n<p> If the control is a valid drop target, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GiveFeedback\" data-linktype=\"relative-path\">GiveFeedback</a> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <a class=\"xref\" href=\"system.windows.forms.dragdropeffects\" data-linktype=\"relative-path\">DragDropEffects</a> enumeration.  </p>\n<p> Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.  </p>\n<ul>\n<li><p>If the user moves out of a window, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragLeave\" data-linktype=\"relative-path\">DragLeave</a> event is raised.  </p>\n</li>\n<li><p>If the mouse enters another control, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragEnter\" data-linktype=\"relative-path\">DragEnter</a> for that control is raised.  </p>\n</li>\n<li><p>If the mouse moves but stays within the same control, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">DragOver</a> event is raised.  </p>\n<p>If there is a change in the keyboard or mouse button state, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_QueryContinueDrag\" data-linktype=\"relative-path\">QueryContinueDrag</a> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <a class=\"xref\" href=\"system.windows.forms.querycontinuedrageventargs#System_Windows_Forms_QueryContinueDragEventArgs_Action_\" data-linktype=\"relative-path\">Action</a> property of the event&#39;s <a class=\"xref\" href=\"system.windows.forms.querycontinuedrageventargs\" data-linktype=\"relative-path\">QueryContinueDragEventArgs</a>.  </p>\n</li>\n<li><p>If the value of <a class=\"xref\" href=\"system.windows.forms.dragaction\" data-linktype=\"relative-path\">DragAction</a> is <code>Continue</code>, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">DragOver</a> event is raised to continue the operation and the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GiveFeedback\" data-linktype=\"relative-path\">GiveFeedback</a> event is raised with the new effect so appropriate visual feedback can be set. For a list of valid drop effects, see the <a class=\"xref\" href=\"system.windows.forms.dragdropeffects\" data-linktype=\"relative-path\">DragDropEffects</a> enumeration.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">DragOver</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GiveFeedback\" data-linktype=\"relative-path\">GiveFeedback</a> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse&#39;s position.  </p>\n</div>\n</li>\n<li><p>If the value of <a class=\"xref\" href=\"system.windows.forms.dragaction\" data-linktype=\"relative-path\">DragAction</a> is <code>Drop</code>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.  </p>\n</li>\n<li><p>If the value of <a class=\"xref\" href=\"system.windows.forms.dragaction\" data-linktype=\"relative-path\">DragAction</a> is <code>Cancel</code>, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragLeave\" data-linktype=\"relative-path\">DragLeave</a> event is raised.  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> The DoDragDrop method catches all exceptions and rethrows only the following security or critical exceptions:  </p>\n</div>\n<ul>\n<li><p>SecurityException  </p>\n</li>\n<li><p>NullReferenceException  </p>\n</li>\n<li><p>StackOverflowException  </p>\n</li>\n<li><p>OutOfMemoryException  </p>\n</li>\n<li><p>ThreadAbortException  </p>\n</li>\n<li><p>ExecutionEngineException  </p>\n</li>\n<li><p>IndexOutOfRangeException  </p>\n</li>\n<li><p>AccessViolationException</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_DrawToBitmap_System_Drawing_Bitmap_System_Drawing_Rectangle_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DrawToBitmap(Bitmap,Rectangle)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Supports rendering to the specified bitmap.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void DrawToBitmap (System.Drawing.Bitmap bitmap, System.Drawing.Rectangle targetBounds);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>bitmap</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.bitmap\" data-linktype=\"relative-path\">Bitmap</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The bitmap to be drawn to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>targetBounds</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The bounds within which the control is rendered.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The DrawToBitmap method is not supported for ActiveX controls. You can override the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnPrint_\" data-linktype=\"relative-path\">OnPrint</a> event and provide custom printing logic if required.  </p>\n<p> The DrawToBitmap method has the following limitations:  </p>\n<ul>\n<li><p>An <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> might be thrown for large bitmaps. The maximum allowable size varies by machine.  </p>\n</li>\n<li><p>DrawToBitmap does not support the <code>Ink</code> controls for the Windows XP Tablet PC Edition 2005 operating system.  </p>\n</li>\n<li><p>DrawToBitmap does not draw a child <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Visible_\" data-linktype=\"relative-path\">Visible</a> property of the <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> is set to <code>false</code>.  </p>\n</li>\n<li><p>Controls inside containers are rendered in reverse order.  </p>\n</li>\n<li><p>DrawToBitmap is not fully functional for the <a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a>; only the border of a bitmap is drawn.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_EndInvoke_System_IAsyncResult_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EndInvoke(IAsyncResult)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the return value of the asynchronous operation represented by the <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> passed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object EndInvoke (IAsyncResult asyncResult);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>asyncResult</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that represents a specific invoke asynchronous operation, returned when calling <span class=\"xref\">stem.Windows.Forms.Control.BeginInvoke*</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> generated by the asynchronous operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>asyncResult</code> parameter value is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>asyncResult</code> object was not created by a preceding call of the <span class=\"xref\">stem.Windows.Forms.Control.BeginInvoke*</span> method from the same control.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the asynchronous operation has not been completed, this function will block until the result is available.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In addition to the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokeRequired_\" data-linktype=\"relative-path\">InvokeRequired</a> property, there are four methods on a control that are thread safe: <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invoke_\" data-linktype=\"relative-path\">Invoke</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a>, EndInvoke, and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateGraphics_\" data-linktype=\"relative-path\">CreateGraphics</a> if the handle for the control has already been created. Calling <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateGraphics_\" data-linktype=\"relative-path\">CreateGraphics</a> before the control&#39;s handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control&#39;s thread.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_FindForm\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FindForm()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the form that the control is on.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.Form FindForm ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> that the control is on.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The control&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Parent_\" data-linktype=\"relative-path\">Parent</a> property value might not be the same as the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> returned by FindForm method. For example, if a <a class=\"xref\" href=\"system.windows.forms.radiobutton\" data-linktype=\"relative-path\">RadioButton</a> control is contained within a <a class=\"xref\" href=\"system.windows.forms.groupbox\" data-linktype=\"relative-path\">GroupBox</a> control, and the <a class=\"xref\" href=\"system.windows.forms.groupbox\" data-linktype=\"relative-path\">GroupBox</a> is on a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>, the <a class=\"xref\" href=\"system.windows.forms.radiobutton\" data-linktype=\"relative-path\">RadioButton</a> control&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Parent_\" data-linktype=\"relative-path\">Parent</a> is the <a class=\"xref\" href=\"system.windows.forms.groupbox\" data-linktype=\"relative-path\">GroupBox</a> and the <a class=\"xref\" href=\"system.windows.forms.groupbox\" data-linktype=\"relative-path\">GroupBox</a> control&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Parent_\" data-linktype=\"relative-path\">Parent</a> is the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Focus\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Focus()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets input focus to the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool Focus ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the input focus request was successful; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Focus method returns <code>true</code> if the control successfully received input focus. The control can have the input focus while not displaying any visual cues of having the focus. This behavior is primarily observed by the nonselectable controls listed below, or any controls derived from them.  </p>\n<p> A control can be selected and receive input focus if all the following are true: the <code>Selectable</code> value of <a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">ControlStyles</a> is set to <code>true</code>, it is contained in another control, and all its parent controls are both visible and enabled.  </p>\n<p> The Windows Forms controls in the following list are not selectable. Controls derived from these controls are also not selectable.  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.panel\" data-linktype=\"relative-path\">Panel</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.groupbox\" data-linktype=\"relative-path\">GroupBox</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.picturebox\" data-linktype=\"relative-path\">PictureBox</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.progressbar\" data-linktype=\"relative-path\">ProgressBar</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.splitter\" data-linktype=\"relative-path\">Splitter</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.label\" data-linktype=\"relative-path\">Label</a>  \n</li>\n<li><p><a class=\"xref\" href=\"system.windows.forms.linklabel\" data-linktype=\"relative-path\">LinkLabel</a> (when there is no link present in the control)  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> Focus is a low-level method intended primarily for custom control authors. Instead, application programmers should use the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Select_\" data-linktype=\"relative-path\">Select</a> method or the <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_ActiveControl_\" data-linktype=\"relative-path\">ActiveControl</a> property for child controls, or the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Activate_\" data-linktype=\"relative-path\">Activate</a> method for forms.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_FromChildHandle_System_IntPtr_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FromChildHandle(IntPtr)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the control that contains the specified handle.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Forms.Control FromChildHandle (IntPtr handle);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>handle</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The window handle (<code>HWND</code>) to search for.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> that represents the control associated with the specified handle; returns <code>null</code> if no control with the specified handle is found.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method searches up the window handle parent chain until it finds a handle that is associated with a control. This method is more reliable than the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FromHandle_\" data-linktype=\"relative-path\">FromHandle</a> method, because it correctly returns controls that own more than one handle.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_FromHandle_System_IntPtr_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FromHandle(IntPtr)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the control that is currently associated with the specified handle.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Forms.Control FromHandle (IntPtr handle);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>handle</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The window handle (<code>HWND</code>) to search for.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> that represents the control associated with the specified handle; returns <code>null</code> if no control with the specified handle is found.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FromChildHandle_\" data-linktype=\"relative-path\">FromChildHandle</a> method if you need to return controls that own more than one handle.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_GetAccessibilityObjectById_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetAccessibilityObjectById(Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the specified <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Windows.Forms.AccessibleObject GetAccessibilityObjectById (int objectId);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>objectId</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <code>Int32</code> that identifies the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> to retrieve.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The specified <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_GetAutoSizeMode\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetAutoSizeMode()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves a value indicating how a control will behave when its <span class=\"xref\">stem.Windows.Forms.Control.AutoSize*</span> property is enabled.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected System.Windows.Forms.AutoSizeMode GetAutoSizeMode ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.autosizemode\" data-linktype=\"relative-path\">AutoSizeMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.autosizemode\" data-linktype=\"relative-path\">AutoSizeMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_GetChildAtPoint_System_Drawing_Point_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetChildAtPoint(Point)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the child control that is located at the specified coordinates.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.Control GetChildAtPoint (System.Drawing.Point pt);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>pt</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> that contains the coordinates where you want to look for a control. Coordinates are expressed relative to the upper-left corner of the control&#39;s client area.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> that represents the control that is located at the specified point.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If there is no child control at the specified point, the GetChildAtPoint method returns <code>null</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_GetChildAtPoint_System_Drawing_Point_System_Windows_Forms_GetChildAtPointSkip_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetChildAtPoint(Point,GetChildAtPointSkip)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the child control that is located at the specified coordinates, specifying whether to ignore child controls of a certain type.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.Control GetChildAtPoint (System.Drawing.Point pt, System.Windows.Forms.GetChildAtPointSkip skipValue);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>pt</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> that contains the coordinates where you want to look for a control. Coordinates are expressed relative to the upper-left corner of the control&#39;s client area.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>skipValue</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.getchildatpointskip\" data-linktype=\"relative-path\">GetChildAtPointSkip</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the values of <a class=\"xref\" href=\"system.windows.forms.getchildatpointskip\" data-linktype=\"relative-path\">GetChildAtPointSkip</a>, determining whether to ignore child controls of a certain type.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The child <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> at the specified coordinates.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_GetContainerControl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetContainerControl()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the next <a class=\"xref\" href=\"system.windows.forms.containercontrol\" data-linktype=\"relative-path\">ContainerControl</a> up the control&#39;s chain of parent controls.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.IContainerControl GetContainerControl ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.icontainercontrol\" data-linktype=\"relative-path\">IContainerControl</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.windows.forms.icontainercontrol\" data-linktype=\"relative-path\">IContainerControl</a>, that represents the parent of the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_GetNextControl_System_Windows_Forms_Control_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetNextControl(Control,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the next control forward or back in the tab order of child controls.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.Control GetNextControl (System.Windows.Forms.Control ctl, bool forward);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ctl</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> to start the search with.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>forward</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to search forward in the tab order; <code>false</code> to search backward.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The next <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> in the tab order.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The GetNextControl method is dependent on tab order. To iterate through all controls of a form, including nested controls, use the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> property. To get or set the active control of a container control, use the <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_ActiveControl_\" data-linktype=\"relative-path\">ActiveControl</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_GetPreferredSize_System_Drawing_Size_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetPreferredSize(Size)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the size of a rectangular area into which a control can be fitted.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Drawing.Size GetPreferredSize (System.Drawing.Size proposedSize);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>proposedSize</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The custom-sized area for a control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An ordered pair of type <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> representing the width and height of a rectangle.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The behavior of GetPreferredSize differs by control. The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LayoutEngine_\" data-linktype=\"relative-path\">LayoutEngine</a> might be unable to assign the returned size to the control. You can return a size larger than the constraints indicated in the <code>proposedSize</code> parameter, but <code>proposedSize</code> should decrease as the constraint decreases. For example, <code>GetPreferredSize(new Size(100, 0))</code> should not be wider than <code>GetPreferredSize(new Size(200, 0))</code>. The exception is a <code>proposedSize</code> of 0 or <code>Size.Empty</code>, which are defined as unconstrained.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_GetScaledBounds_System_Drawing_Rectangle_System_Drawing_SizeF_System_Windows_Forms_BoundsSpecified_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetScaledBounds(Rectangle,SizeF,BoundsSpecified)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the bounds within which the control is scaled.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>bounds</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that specifies the area for which to retrieve the display bounds.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>factor</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The height and width of the control&#39;s bounds.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>specified</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.boundsspecified\" data-linktype=\"relative-path\">BoundsSpecified</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the values of <a class=\"xref\" href=\"system.windows.forms.boundsspecified\" data-linktype=\"relative-path\">BoundsSpecified</a> that specifies the bounds of the control to use when defining its size and position.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> representing the bounds within which the control is scaled.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This is a helper method that is called by <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ScaleControl_\" data-linktype=\"relative-path\">ScaleControl</a> to retrieve the bounds within which the control is scaled. You can override this method to reuse the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ScaleControl_\" data-linktype=\"relative-path\">ScaleControl</a> scaling logic, but you must supply your own bounds. The default implementation returns scaled bounds that take into account the <code>specified</code> bounds, whether the control is top level, whether the control is fixed width or auto size, and any adornments the control might have.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_GetStyle_System_Windows_Forms_ControlStyles_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetStyle(ControlStyles)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the value of the specified control style bit for the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected bool GetStyle (System.Windows.Forms.ControlStyles flag);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>flag</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">ControlStyles</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">ControlStyles</a> bit to return the value from.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the specified control style bit is set to <code>true</code>; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Control style bit flags are used to categorize supported behavior. A control can enable a style by calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetStyle_\" data-linktype=\"relative-path\">SetStyle</a> method and passing in the appropriate <a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">ControlStyles</a> bit and the Boolean value to set the bit to. To determine the value assigned to a specified <a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">ControlStyles</a> bit, use the GetStyle method and pass in the <a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">ControlStyles</a> member to evaluate.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_GetTopLevel\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetTopLevel()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines if the control is a top-level control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected bool GetTopLevel ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the control is a top-level control; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Hide\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Hide()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Conceals the control from the user.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Hide ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Hiding the control is equivalent to setting the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Visible_\" data-linktype=\"relative-path\">Visible</a> property to <code>false</code>. After the Hide method is called, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Visible_\" data-linktype=\"relative-path\">Visible</a> property returns a value of <code>false</code> until the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Show_\" data-linktype=\"relative-path\">Show</a> method is called.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_InitLayout\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InitLayout()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Called after the control has been added to another container.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void InitLayout ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The InitLayout method is called immediately after adding a control to a container. The InitLayout method enables a control to initialize its layout state based on its container. For example, you would typically apply anchoring and docking to the control in the InitLayout method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Invalidate\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Invalidate()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Invalidates the entire surface of the control and causes the control to be redrawn.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Invalidate ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_\" data-linktype=\"relative-path\">Invalidate</a> method does not force a synchronous paint; to force a synchronous paint, call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Update_\" data-linktype=\"relative-path\">Update</a> method after calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_\" data-linktype=\"relative-path\">Invalidate</a> method. When this method is called with no parameters, the entire client area is added to the update region.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Invalidate_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Invalidate(Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Invalidates a specific region of the control and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Invalidate (bool invalidateChildren);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>invalidateChildren</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to invalidate the control&#39;s child controls; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_\" data-linktype=\"relative-path\">Invalidate</a> method does not force a synchronous paint; to force a synchronous paint, call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Update_\" data-linktype=\"relative-path\">Update</a> method after calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_\" data-linktype=\"relative-path\">Invalidate</a> method. When this method is called with no parameters, the entire client area is added to the update region.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Invalidate_System_Drawing_Rectangle_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Invalidate(Rectangle)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Invalidates the specified region of the control (adds it to the control&#39;s update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Invalidate (System.Drawing.Rectangle rc);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>rc</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the region to invalidate.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_\" data-linktype=\"relative-path\">Invalidate</a> method does not force a synchronous paint; to force a synchronous paint, call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Update_\" data-linktype=\"relative-path\">Update</a> method after calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_\" data-linktype=\"relative-path\">Invalidate</a> method. When this method is called with no parameters, the entire client area is added to the update region.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Invalidate_System_Drawing_Region_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Invalidate(Region)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Invalidates the specified region of the control (adds it to the control&#39;s update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Invalidate (System.Drawing.Region region);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>region</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to invalidate.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Calling the Invalidate method does not force a synchronous paint; to force a synchronous paint, call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Update_\" data-linktype=\"relative-path\">Update</a> method after calling the Invalidate method. When this method is called with no parameters, the entire client area is added to the update region.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Invalidate_System_Drawing_Rectangle_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Invalidate(Rectangle,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Invalidates the specified region of the control (adds it to the control&#39;s update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Invalidate (System.Drawing.Rectangle rc, bool invalidateChildren);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>rc</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the region to invalidate.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>invalidateChildren</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to invalidate the control&#39;s child controls; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_\" data-linktype=\"relative-path\">Invalidate</a> method does not force a synchronous paint; to force a synchronous paint, call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Update_\" data-linktype=\"relative-path\">Update</a> method after calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_\" data-linktype=\"relative-path\">Invalidate</a> method. When this method is called with no parameters, the entire client area is added to the update region.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Invalidate_System_Drawing_Region_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Invalidate(Region,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Invalidates the specified region of the control (adds it to the control&#39;s update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Invalidate (System.Drawing.Region region, bool invalidateChildren);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>region</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to invalidate.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>invalidateChildren</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to invalidate the control&#39;s child controls; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_\" data-linktype=\"relative-path\">Invalidate</a> method does not force a synchronous paint; to force a synchronous paint, call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Update_\" data-linktype=\"relative-path\">Update</a> method after calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_\" data-linktype=\"relative-path\">Invalidate</a> method. When this method is called with no parameters, the entire client area is added to the update region.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Invoke_System_Delegate_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Invoke(Delegate)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Executes the specified delegate on the thread that owns the control&#39;s underlying window handle.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object Invoke (Delegate method);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A delegate that contains a method to be called in the control&#39;s thread context.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The return value from the delegate being invoked, or <code>null</code> if the delegate has no return value.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Delegates are similar to function pointers in C or C++ languages. Delegates encapsulate a reference to a method inside a delegate object. The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time. Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.  </p>\n<p> The Invoke method searches up the control&#39;s parent chain until it finds a control or form that has a window handle if the current control&#39;s underlying window handle does not exist yet. If no appropriate handle can be found, the Invoke method will throw an exception. Exceptions that are raised during the call will be propagated back to the caller.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In addition to the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokeRequired_\" data-linktype=\"relative-path\">InvokeRequired</a> property, there are four methods on a control that are thread safe: Invoke, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_EndInvoke_\" data-linktype=\"relative-path\">EndInvoke</a>, and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateGraphics_\" data-linktype=\"relative-path\">CreateGraphics</a> if the handle for the control has already been created. Calling <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateGraphics_\" data-linktype=\"relative-path\">CreateGraphics</a> before the control&#39;s handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control&#39;s thread.  </p>\n</div>\n<p> The delegate can be an instance of <a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a>, in which case the sender parameter will contain this control, and the event parameter will contain <a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">System.EventArgs.Empty</a>. The delegate can also be an instance of <a class=\"xref\" href=\"system.windows.forms.methodinvoker\" data-linktype=\"relative-path\">MethodInvoker</a>, or any other delegate that takes a void parameter list. A call to an <a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a> or <a class=\"xref\" href=\"system.windows.forms.methodinvoker\" data-linktype=\"relative-path\">MethodInvoker</a> delegate will be faster than a call to another type of delegate.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An exception might be thrown if the thread that should process the message is no longer active.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Invoke_System_Delegate_System_Object___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Invoke(Delegate,Object[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Executes the specified delegate, on the thread that owns the control&#39;s underlying window handle, with the specified list of arguments.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object Invoke (Delegate method, object[] args);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A delegate to a method that takes parameters of the same number and type that are contained in the <code>args</code> parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>args</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of objects to pass as arguments to the specified method. This parameter can be <code>null</code> if the method takes no arguments.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that contains the return value from the delegate being invoked, or <code>null</code> if the delegate has no return value.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Delegates are similar to function pointers in C or C++ languages. Delegates encapsulate a reference to a method inside a delegate object. The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time. Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.  </p>\n<p> If the control&#39;s handle does not exist yet, this method searches up the control&#39;s parent chain until it finds a control or form that does have a window handle. If no appropriate handle can be found, this method throws an exception. Exceptions that are raised during the call will be propagated back to the caller.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In addition to the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokeRequired_\" data-linktype=\"relative-path\">InvokeRequired</a> property, there are four methods on a control that are thread safe: <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invoke_\" data-linktype=\"relative-path\">Invoke</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_EndInvoke_\" data-linktype=\"relative-path\">EndInvoke</a>, and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateGraphics_\" data-linktype=\"relative-path\">CreateGraphics</a> if the handle for the control has already been created. Calling <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateGraphics_\" data-linktype=\"relative-path\">CreateGraphics</a> before the control&#39;s handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control&#39;s thread.  </p>\n</div>\n<p> The delegate can be an instance of <a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a>, in which case the sender parameter will contain this control, and the event parameter will contain <a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">System.EventArgs.Empty</a>. The delegate can also be an instance of <a class=\"xref\" href=\"system.windows.forms.methodinvoker\" data-linktype=\"relative-path\">MethodInvoker</a>, or any other delegate that takes a void parameter list. A call to an <a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a> or <a class=\"xref\" href=\"system.windows.forms.methodinvoker\" data-linktype=\"relative-path\">MethodInvoker</a> delegate will be faster than a call to another type of delegate.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An exception might be thrown if the thread that should process the message is no longer active.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_InvokeGotFocus_System_Windows_Forms_Control_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InvokeGotFocus(Control,EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a> event for the specified control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void InvokeGotFocus (System.Windows.Forms.Control toInvoke, EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>toInvoke</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> to assign the event to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_InvokeLostFocus_System_Windows_Forms_Control_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InvokeLostFocus(Control,EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a> event for the specified control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void InvokeLostFocus (System.Windows.Forms.Control toInvoke, EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>toInvoke</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> to assign the event to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_InvokeOnClick_System_Windows_Forms_Control_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InvokeOnClick(Control,EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Click\" data-linktype=\"relative-path\">Click</a> event for the specified control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void InvokeOnClick (System.Windows.Forms.Control toInvoke, EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>toInvoke</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> to assign the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Click\" data-linktype=\"relative-path\">Click</a> event to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_InvokePaint_System_Windows_Forms_Control_System_Windows_Forms_PaintEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InvokePaint(Control,PaintEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event for the specified control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void InvokePaint (System.Windows.Forms.Control c, System.Windows.Forms.PaintEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>c</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> to assign the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_InvokePaintBackground_System_Windows_Forms_Control_System_Windows_Forms_PaintEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InvokePaintBackground(Control,PaintEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <code>PaintBackground</code> event for the specified control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void InvokePaintBackground (System.Windows.Forms.Control c, System.Windows.Forms.PaintEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>c</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> to assign the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_IsInputChar_System_Char_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsInputChar(Char)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines if a character is an input character that the control recognizes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual bool IsInputChar (char charCode);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>charCode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The character to test.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the character should be sent directly to the control and not preprocessed; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Call the IsInputChar method to determine whether the character specified by the <code>charCode</code> parameter is an input character that the control wants. This method is called during window message preprocessing to determine whether the specified input character should be preprocessed or sent directly to the control. If IsInputChar returns <code>true</code>, the specified character is sent directly to the control. If IsInputChar returns <code>false</code>, the specified character is preprocessed and only sent to the control if it is not consumed by the preprocessing phase. The preprocessing of a character includes checking whether the character is a mnemonic of another control.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_IsInputKey_System_Windows_Forms_Keys_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsInputKey(Keys)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual bool IsInputKey (System.Windows.Forms.Keys keyData);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>keyData</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the specified key is a regular input key; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Call the IsInputKey method to determine whether the key specified by the <code>keyData</code> parameter is an input key that the control wants. This method is called during window message preprocessing to determine whether the specified input key should be preprocessed or sent directly to the control. If IsInputKey returns <code>true</code>, the specified key is sent directly to the control. If IsInputKey returns <code>false</code>, the specified key is preprocessed and only sent to the control if it is not consumed by the preprocessing phase. Keys that are preprocessed include the TAB, RETURN, ESC, and the UP ARROW, DOWN ARROW, LEFT ARROW, and RIGHT ARROW keys.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_IsKeyLocked_System_Windows_Forms_Keys_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsKeyLocked(Keys)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK key is in effect.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool IsKeyLocked (System.Windows.Forms.Keys keyVal);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>keyVal</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The CAPS LOCK, NUM LOCK, or SCROLL LOCK member of the <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> enumeration.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the specified key or keys are in effect; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>keyVal</code> parameter refers to a key other than the CAPS LOCK, NUM LOCK, or SCROLL LOCK key.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the IsKeyLocked property to determine whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK keys are on, whether individually or in combination.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_IsMnemonic_System_Char_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsMnemonic(Char,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines if the specified character is the mnemonic character assigned to the control in the specified string.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool IsMnemonic (char charCode, string text);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>charCode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The character to test.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>text</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to search.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <code>charCode</code> character is the mnemonic character assigned to the control; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The mnemonic character is the character immediately following the first instance of &quot;&amp;&quot; in a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_NotifyInvalidate_System_Drawing_Rectangle_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">NotifyInvalidate(Rectangle)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidated\" data-linktype=\"relative-path\">Invalidated</a> event with a specified region of the control to invalidate.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void NotifyInvalidate (System.Drawing.Rectangle invalidatedArea);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>invalidatedArea</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> representing the area to invalidate.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnAutoSizeChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnAutoSizeChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AutoSizeChanged\" data-linktype=\"relative-path\">AutoSizeChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnAutoSizeChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnAutoSizeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnBackColorChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnBackColorChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackColorChanged\" data-linktype=\"relative-path\">BackColorChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnBackColorChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnBackColorChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnBackgroundImageChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnBackgroundImageChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackgroundImageChanged\" data-linktype=\"relative-path\">BackgroundImageChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnBackgroundImageChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnBackgroundImageChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnBackgroundImageLayoutChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnBackgroundImageLayoutChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackgroundImageLayoutChanged\" data-linktype=\"relative-path\">BackgroundImageLayoutChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnBackgroundImageLayoutChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnBackgroundImageLayoutChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnBindingContextChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnBindingContextChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BindingContextChanged\" data-linktype=\"relative-path\">BindingContextChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnBindingContextChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnBindingContextChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnCausesValidationChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnCausesValidationChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CausesValidationChanged\" data-linktype=\"relative-path\">CausesValidationChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnCausesValidationChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnCausesValidationChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnChangeUICues_System_Windows_Forms_UICuesEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnChangeUICues(UICuesEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ChangeUICues\" data-linktype=\"relative-path\">ChangeUICues</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnChangeUICues (System.Windows.Forms.UICuesEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.uicueseventargs\" data-linktype=\"relative-path\">UICuesEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.uicueseventargs\" data-linktype=\"relative-path\">UICuesEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnChangeUICues method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnClick_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnClick(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Click\" data-linktype=\"relative-path\">Click</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnClick (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnClientSizeChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnClientSizeChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ClientSizeChanged\" data-linktype=\"relative-path\">ClientSizeChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnClientSizeChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnClientSizeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnContextMenuChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnContextMenuChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContextMenuChanged\" data-linktype=\"relative-path\">ContextMenuChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnContextMenuChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnContextMenuChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnContextMenuStripChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnContextMenuStripChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContextMenuStripChanged\" data-linktype=\"relative-path\">ContextMenuStripChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnContextMenuStripChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnContextMenuStripChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnControlAdded_System_Windows_Forms_ControlEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnControlAdded(ControlEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ControlAdded\" data-linktype=\"relative-path\">ControlAdded</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnControlAdded (System.Windows.Forms.ControlEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.controleventargs\" data-linktype=\"relative-path\">ControlEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.controleventargs\" data-linktype=\"relative-path\">ControlEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Called when a child control is added to the control.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnControlAdded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnControlRemoved_System_Windows_Forms_ControlEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnControlRemoved(ControlEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ControlRemoved\" data-linktype=\"relative-path\">ControlRemoved</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnControlRemoved (System.Windows.Forms.ControlEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.controleventargs\" data-linktype=\"relative-path\">ControlEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.controleventargs\" data-linktype=\"relative-path\">ControlEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Called when a child control is removed from the control.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnControlRemoved method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnCreateControl\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnCreateControl()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <span class=\"xref\">stem.Windows.Forms.Control.CreateControl*</span> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnCreateControl ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The OnCreateControl method is called when the control is first created.  </p>\n<p> The OnCreateControl method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnCursorChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnCursorChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CursorChanged\" data-linktype=\"relative-path\">CursorChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnCursorChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnCursorChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnDockChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnDockChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DockChanged\" data-linktype=\"relative-path\">DockChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnDockChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnDockChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnDoubleClick_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnDoubleClick(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnDoubleClick (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnDoubleClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnDragDrop_System_Windows_Forms_DragEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnDragDrop(DragEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragDrop\" data-linktype=\"relative-path\">DragDrop</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnDragDrop (System.Windows.Forms.DragEventArgs drgevent);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>drgevent</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.drageventargs\" data-linktype=\"relative-path\">DragEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.drageventargs\" data-linktype=\"relative-path\">DragEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnDragDrop method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnDragEnter_System_Windows_Forms_DragEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnDragEnter(DragEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragEnter\" data-linktype=\"relative-path\">DragEnter</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnDragEnter (System.Windows.Forms.DragEventArgs drgevent);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>drgevent</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.drageventargs\" data-linktype=\"relative-path\">DragEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.drageventargs\" data-linktype=\"relative-path\">DragEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnDragEnter method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnDragLeave_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnDragLeave(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragLeave\" data-linktype=\"relative-path\">DragLeave</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnDragLeave (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnDragLeave method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnDragOver_System_Windows_Forms_DragEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnDragOver(DragEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">DragOver</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnDragOver (System.Windows.Forms.DragEventArgs drgevent);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>drgevent</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.drageventargs\" data-linktype=\"relative-path\">DragEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.drageventargs\" data-linktype=\"relative-path\">DragEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnDragOver method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnEnabledChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnEnabledChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_EnabledChanged\" data-linktype=\"relative-path\">EnabledChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnEnabledChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnEnabledChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnEnter_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnEnter(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnEnter (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnEnter method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnFontChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnFontChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FontChanged\" data-linktype=\"relative-path\">FontChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnFontChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnFontChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnForeColorChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnForeColorChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ForeColorChanged\" data-linktype=\"relative-path\">ForeColorChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnForeColorChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnForeColorChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnGiveFeedback_System_Windows_Forms_GiveFeedbackEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnGiveFeedback(GiveFeedbackEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GiveFeedback\" data-linktype=\"relative-path\">GiveFeedback</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnGiveFeedback (System.Windows.Forms.GiveFeedbackEventArgs gfbevent);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>gfbevent</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.givefeedbackeventargs\" data-linktype=\"relative-path\">GiveFeedbackEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.givefeedbackeventargs\" data-linktype=\"relative-path\">GiveFeedbackEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnGiveFeedback method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnGotFocus_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnGotFocus(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnGotFocus (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnGotFocus method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnHandleCreated_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnHandleCreated(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleCreated\" data-linktype=\"relative-path\">HandleCreated</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnHandleCreated (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnHandleCreated method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnHandleDestroyed_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnHandleDestroyed(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleDestroyed\" data-linktype=\"relative-path\">HandleDestroyed</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnHandleDestroyed (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnHandleDestroyed method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnHelpRequested_System_Windows_Forms_HelpEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnHelpRequested(HelpEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HelpRequested\" data-linktype=\"relative-path\">HelpRequested</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnHelpRequested (System.Windows.Forms.HelpEventArgs hevent);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>hevent</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.helpeventargs\" data-linktype=\"relative-path\">HelpEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.helpeventargs\" data-linktype=\"relative-path\">HelpEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnHelpRequested method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnImeModeChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnImeModeChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ImeModeChanged\" data-linktype=\"relative-path\">ImeModeChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnImeModeChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnImeModeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnInvalidated_System_Windows_Forms_InvalidateEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnInvalidated(InvalidateEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidated\" data-linktype=\"relative-path\">Invalidated</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnInvalidated (System.Windows.Forms.InvalidateEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.invalidateeventargs\" data-linktype=\"relative-path\">InvalidateEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.windows.forms.invalidateeventargs\" data-linktype=\"relative-path\">InvalidateEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnInvalidated method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnKeyDown_System_Windows_Forms_KeyEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnKeyDown(KeyEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnKeyDown (System.Windows.Forms.KeyEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnKeyDown method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnKeyPress_System_Windows_Forms_KeyPressEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnKeyPress(KeyPressEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keypresseventargs\" data-linktype=\"relative-path\">KeyPressEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.keypresseventargs\" data-linktype=\"relative-path\">KeyPressEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnKeyPress method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnKeyUp_System_Windows_Forms_KeyEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnKeyUp(KeyEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyUp\" data-linktype=\"relative-path\">KeyUp</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnKeyUp (System.Windows.Forms.KeyEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnKeyUp method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnLayout_System_Windows_Forms_LayoutEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnLayout(LayoutEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Layout\" data-linktype=\"relative-path\">Layout</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnLayout (System.Windows.Forms.LayoutEventArgs levent);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>levent</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.layouteventargs\" data-linktype=\"relative-path\">LayoutEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.layouteventargs\" data-linktype=\"relative-path\">LayoutEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnLayout method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnLeave_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnLeave(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnLeave (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnLeave method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnLocationChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnLocationChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LocationChanged\" data-linktype=\"relative-path\">LocationChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnLocationChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnLocationChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnLostFocus_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnLostFocus(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnLostFocus (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnLostFocus method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnMarginChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnMarginChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MarginChanged\" data-linktype=\"relative-path\">MarginChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnMarginChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnMarginChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnMouseCaptureChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnMouseCaptureChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseCaptureChanged\" data-linktype=\"relative-path\">MouseCaptureChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnMouseCaptureChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnMouseCaptureChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnMouseClick_System_Windows_Forms_MouseEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnMouseClick(MouseEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseClick\" data-linktype=\"relative-path\">MouseClick</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnMouseClick (System.Windows.Forms.MouseEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnMouseClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnMouseDoubleClick_System_Windows_Forms_MouseEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnMouseDoubleClick(MouseEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDoubleClick\" data-linktype=\"relative-path\">MouseDoubleClick</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnMouseDoubleClick (System.Windows.Forms.MouseEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnMouseDoubleClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnMouseDown_System_Windows_Forms_MouseEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnMouseDown(MouseEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnMouseDown (System.Windows.Forms.MouseEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnMouseDown method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnMouseEnter_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnMouseEnter(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseEnter\" data-linktype=\"relative-path\">MouseEnter</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnMouseEnter (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnMouseEnter method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnMouseHover_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnMouseHover(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseHover\" data-linktype=\"relative-path\">MouseHover</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnMouseHover (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnMouseHover method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnMouseLeave_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnMouseLeave(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnMouseLeave (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnMouseLeave method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnMouseMove_System_Windows_Forms_MouseEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnMouseMove(MouseEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseMove\" data-linktype=\"relative-path\">MouseMove</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnMouseMove (System.Windows.Forms.MouseEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnMouseMove method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnMouseUp_System_Windows_Forms_MouseEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnMouseUp(MouseEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnMouseUp (System.Windows.Forms.MouseEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnMouseUp method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnMouseWheel_System_Windows_Forms_MouseEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnMouseWheel(MouseEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseWheel\" data-linktype=\"relative-path\">MouseWheel</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnMouseWheel (System.Windows.Forms.MouseEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnMouseWheel method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnMove_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnMove(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Move\" data-linktype=\"relative-path\">Move</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnMove (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnMove method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnNotifyMessage_System_Windows_Forms_Message_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnNotifyMessage(Message)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Notifies the control of Windows messages.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnNotifyMessage (System.Windows.Forms.Message m);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>m</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a> that represents the Windows message.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The OnNotifyMessage method is called if the control&#39;s <code>EnableNotifyMessage</code> style bit is set in <a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">ControlStyles</a>. The <code>EnableNotifyMessage</code> style in <a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">ControlStyles</a> enables the control to be notified when the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_WndProc_\" data-linktype=\"relative-path\">WndProc</a> method receives a Windows message. With this method, semi-trusted controls can listen for Windows messages without enabling them to modify the message.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnPaddingChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnPaddingChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PaddingChanged\" data-linktype=\"relative-path\">PaddingChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnPaddingChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnPaddingChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnPaint_System_Windows_Forms_PaintEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnPaint(PaintEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnPaint (System.Windows.Forms.PaintEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnPaint method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnPaintBackground_System_Windows_Forms_PaintEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnPaintBackground(PaintEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Paints the background of the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnPaintBackground (System.Windows.Forms.PaintEventArgs pevent);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>pevent</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> that contains information about the control to paint.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The OnPaintBackground method enables derived classes to handle Windows background erase requests.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnParentBackColorChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnParentBackColorChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackColorChanged\" data-linktype=\"relative-path\">BackColorChanged</a> event when the <span class=\"xref\">stem.Windows.Forms.Control.BackColor*</span> property value of the control&#39;s container changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnParentBackColorChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnParentBackColorChanged method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnParentBackgroundImageChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnParentBackgroundImageChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackgroundImageChanged\" data-linktype=\"relative-path\">BackgroundImageChanged</a> event when the <span class=\"xref\">stem.Windows.Forms.Control.BackgroundImage*</span> property value of the control&#39;s container changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnParentBackgroundImageChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnParentBackgroundImageChanged method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnParentBindingContextChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnParentBindingContextChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BindingContextChanged\" data-linktype=\"relative-path\">BindingContextChanged</a> event when the <span class=\"xref\">stem.Windows.Forms.Control.BindingContext*</span> property value of the control&#39;s container changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnParentBindingContextChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnParentBindingContextChanged method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnParentChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnParentChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ParentChanged\" data-linktype=\"relative-path\">ParentChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnParentChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnParentChanged method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnParentCursorChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnParentCursorChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CursorChanged\" data-linktype=\"relative-path\">CursorChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnParentCursorChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnParentCursorChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnParentEnabledChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnParentEnabledChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_EnabledChanged\" data-linktype=\"relative-path\">EnabledChanged</a> event when the <span class=\"xref\">stem.Windows.Forms.Control.Enabled*</span> property value of the control&#39;s container changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnParentEnabledChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnParentEnabledChanged method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnParentFontChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnParentFontChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FontChanged\" data-linktype=\"relative-path\">FontChanged</a> event when the <span class=\"xref\">stem.Windows.Forms.Control.Font*</span> property value of the control&#39;s container changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnParentFontChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnParentFontChanged method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnParentForeColorChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnParentForeColorChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ForeColorChanged\" data-linktype=\"relative-path\">ForeColorChanged</a> event when the <span class=\"xref\">stem.Windows.Forms.Control.ForeColor*</span> property value of the control&#39;s container changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnParentForeColorChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnParentForeColorChanged method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnParentRightToLeftChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnParentRightToLeftChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeftChanged\" data-linktype=\"relative-path\">RightToLeftChanged</a> event when the <span class=\"xref\">stem.Windows.Forms.Control.RightToLeft*</span> property value of the control&#39;s container changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnParentRightToLeftChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnParentRightToLeftChanged method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnParentVisibleChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnParentVisibleChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_VisibleChanged\" data-linktype=\"relative-path\">VisibleChanged</a> event when the <span class=\"xref\">stem.Windows.Forms.Control.Visible*</span> property value of the control&#39;s container changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnParentVisibleChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnParentVisibleChanged method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnPreviewKeyDown_System_Windows_Forms_PreviewKeyDownEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnPreviewKeyDown(PreviewKeyDownEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PreviewKeyDown\" data-linktype=\"relative-path\">PreviewKeyDown</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnPreviewKeyDown (System.Windows.Forms.PreviewKeyDownEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.previewkeydowneventargs\" data-linktype=\"relative-path\">PreviewKeyDownEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.previewkeydowneventargs\" data-linktype=\"relative-path\">PreviewKeyDownEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnPreviewKeyDown method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnPrint_System_Windows_Forms_PaintEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnPrint(PaintEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnPrint (System.Windows.Forms.PaintEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>e</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the <code>UserPaint</code> bit of the <a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">ControlStyles</a> is set, you can override OnPrint to do layered painting. See <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetStyle_\" data-linktype=\"relative-path\">SetStyle</a> for more information.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnQueryContinueDrag_System_Windows_Forms_QueryContinueDragEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnQueryContinueDrag(QueryContinueDragEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_QueryContinueDrag\" data-linktype=\"relative-path\">QueryContinueDrag</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnQueryContinueDrag (System.Windows.Forms.QueryContinueDragEventArgs qcdevent);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>qcdevent</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.querycontinuedrageventargs\" data-linktype=\"relative-path\">QueryContinueDragEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.querycontinuedrageventargs\" data-linktype=\"relative-path\">QueryContinueDragEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>After dragging has begun, this method is called repeatedly by the .NET Framework until the drag operation is either canceled or completed.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Override this method if you want to change the point at which dragging is canceled or at which a drop occurs.  </p>\n</div>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnQueryContinueDrag method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnRegionChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnRegionChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RegionChanged\" data-linktype=\"relative-path\">RegionChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnRegionChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnRegionChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnResize_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnResize(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Resize\" data-linktype=\"relative-path\">Resize</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnResize (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnResize method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnRightToLeftChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnRightToLeftChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeftChanged\" data-linktype=\"relative-path\">RightToLeftChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnRightToLeftChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnRightToLeftChanged method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnSizeChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnSizeChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SizeChanged\" data-linktype=\"relative-path\">SizeChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnSizeChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnSizeChanged method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnStyleChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnStyleChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_StyleChanged\" data-linktype=\"relative-path\">StyleChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnStyleChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnStyleChanged method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnSystemColorsChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnSystemColorsChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SystemColorsChanged\" data-linktype=\"relative-path\">SystemColorsChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnSystemColorsChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnSystemColorsChanged method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnTabIndexChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnTabIndexChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TabIndexChanged\" data-linktype=\"relative-path\">TabIndexChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnTabIndexChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnTabIndexChanged method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnTabStopChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnTabStopChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TabStopChanged\" data-linktype=\"relative-path\">TabStopChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnTabStopChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnTabStopChanged method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnTextChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnTextChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TextChanged\" data-linktype=\"relative-path\">TextChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnTextChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnTextChanged method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnValidated_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnValidated(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnValidated (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnValidated method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnValidating_System_ComponentModel_CancelEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnValidating(CancelEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnValidating (System.ComponentModel.CancelEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.canceleventargs\" data-linktype=\"relative-path\">CancelEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.componentmodel.canceleventargs\" data-linktype=\"relative-path\">CancelEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnValidating method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_OnVisibleChanged_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnVisibleChanged(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_VisibleChanged\" data-linktype=\"relative-path\">VisibleChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnVisibleChanged (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnVisibleChanged method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_PerformLayout\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PerformLayout()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Forces the control to apply layout logic to all its child controls.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void PerformLayout ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SuspendLayout_\" data-linktype=\"relative-path\">SuspendLayout</a> method was called before calling the PerformLayout method, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Layout\" data-linktype=\"relative-path\">Layout</a> event is suppressed.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.layouteventargs#System_Windows_Forms_LayoutEventArgs_AffectedControl_\" data-linktype=\"relative-path\">AffectedControl</a> and <a class=\"xref\" href=\"system.windows.forms.layouteventargs#System_Windows_Forms_LayoutEventArgs_AffectedProperty_\" data-linktype=\"relative-path\">AffectedProperty</a> properties of the <a class=\"xref\" href=\"system.windows.forms.layouteventargs\" data-linktype=\"relative-path\">LayoutEventArgs</a> created are set to <code>null</code> if no values were provided when the PerformLayout method was called.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_PerformLayout_System_Windows_Forms_Control_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PerformLayout(Control,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Forces the control to apply layout logic to all its child controls.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void PerformLayout (System.Windows.Forms.Control affectedControl, string affectedProperty);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>affectedControl</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> that represents the most recently changed control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>affectedProperty</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the most recently changed property on the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SuspendLayout_\" data-linktype=\"relative-path\">SuspendLayout</a> method was called before calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PerformLayout_\" data-linktype=\"relative-path\">PerformLayout</a> method, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Layout\" data-linktype=\"relative-path\">Layout</a> event is suppressed.  </p>\n<p> The <code>affectedControl</code> and <code>affectedProperty</code> parameters can both be set to <code>null</code>. Doing so causes the <a class=\"xref\" href=\"system.windows.forms.layouteventargs#System_Windows_Forms_LayoutEventArgs_AffectedControl_\" data-linktype=\"relative-path\">AffectedControl</a> and <a class=\"xref\" href=\"system.windows.forms.layouteventargs#System_Windows_Forms_LayoutEventArgs_AffectedProperty_\" data-linktype=\"relative-path\">AffectedProperty</a> properties of the <a class=\"xref\" href=\"system.windows.forms.layouteventargs\" data-linktype=\"relative-path\">LayoutEventArgs</a> created to be set to <code>null</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_PointToClient_System_Drawing_Point_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PointToClient(Point)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Computes the location of the specified screen point into client coordinates.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Drawing.Point PointToClient (System.Drawing.Point p);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>p</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The screen coordinate <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> to convert.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> that represents the converted <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>, <code>p</code>, in client coordinates.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_PointToScreen_System_Drawing_Point_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PointToScreen(Point)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Computes the location of the specified client point into screen coordinates.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Drawing.Point PointToScreen (System.Drawing.Point p);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>p</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The client coordinate <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> to convert.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> that represents the converted <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>, <code>p</code>, in screen coordinates.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_PreProcessControlMessage_System_Windows_Forms_Message__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PreProcessControlMessage(Message)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Preprocesses keyboard or input messages within the message loop before they are dispatched.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Forms.PreProcessControlState PreProcessControlMessage (ref System.Windows.Forms.Message msg);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>msg</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a> that represents the message to process.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.preprocesscontrolstate\" data-linktype=\"relative-path\">PreProcessControlState</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.preprocesscontrolstate\" data-linktype=\"relative-path\">PreProcessControlState</a> values, depending on whether <span class=\"xref\">stem.Windows.Forms.Control.PreProcessMessage*</span> is <code>true</code> or <code>false</code> and whether <span class=\"xref\">stem.Windows.Forms.Control.IsInputKey*</span> or <span class=\"xref\">stem.Windows.Forms.Control.IsInputChar*</span> are <code>true</code> or <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_PreProcessMessage_System_Windows_Forms_Message__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PreProcessMessage(Message)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Preprocesses keyboard or input messages within the message loop before they are dispatched.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool PreProcessMessage (ref System.Windows.Forms.Message msg);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>msg</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a>, passed by reference, that represents the message to process. The possible values are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the message was processed by the control; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>PreProcessMessage is called by the application&#39;s message loop to preprocess input messages before they are dispatched. Possible values for the <code>msg</code> parameter are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.  </p>\n<p> When overriding PreProcessMessage, a control should return <code>true</code> to indicate that it has processed the message. For messages that are not processed by the control, the result of <code>base.PreProcessMessage</code> should be returned. Controls will typically override one of the more specialized methods such as <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsInputChar_\" data-linktype=\"relative-path\">IsInputChar</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsInputKey_\" data-linktype=\"relative-path\">IsInputKey</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessCmdKey_\" data-linktype=\"relative-path\">ProcessCmdKey</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessDialogChar_\" data-linktype=\"relative-path\">ProcessDialogChar</a>, or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessDialogKey_\" data-linktype=\"relative-path\">ProcessDialogKey</a> instead of overriding PreProcessMessage.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ProcessCmdKey_System_Windows_Forms_Message__System_Windows_Forms_Keys_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ProcessCmdKey(Message,Keys)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Processes a command key.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>msg</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a>, passed by reference, that represents the window message to process.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>keyData</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values that represents the key to process.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the character was processed by the control; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is called during message preprocessing to handle command keys. Command keys are keys that always take precedence over regular input keys. Examples of command keys include accelerators and menu shortcuts. The method must return <code>true</code> to indicate that it has processed the command key, or <code>false</code> to indicate that the key is not a command key. This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.  </p>\n<p> The ProcessCmdKey method first determines whether the control has a <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a>, and if so, enables the <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> to process the command key. If the command key is not a menu shortcut and the control has a parent, the key is passed to the parent&#39;s ProcessCmdKey method. The net effect is that command keys are &quot;bubbled&quot; up the control hierarchy. In addition to the key the user pressed, the key data also indicates which, if any, modifier keys were pressed at the same time as the key. Modifier keys include the SHIFT, CTRL, and ALT keys.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ProcessDialogChar_System_Char_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ProcessDialogChar(Char)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Processes a dialog character.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual bool ProcessDialogChar (char charCode);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>charCode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The character to process.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the character was processed by the control; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is called during message preprocessing to handle dialog characters, such as control mnemonics. This method is called only if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsInputChar_\" data-linktype=\"relative-path\">IsInputChar</a> method indicates that the control is not processing the character. The ProcessDialogChar method simply sends the character to the parent&#39;s ProcessDialogChar method, or returns <code>false</code> if the control has no parent. The <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> class overrides this method to perform actual processing of dialog characters. This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ProcessDialogKey_System_Windows_Forms_Keys_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ProcessDialogKey(Keys)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Processes a dialog key.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual bool ProcessDialogKey (System.Windows.Forms.Keys keyData);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>keyData</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values that represents the key to process.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the key was processed by the control; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is called during message preprocessing to handle dialog characters, such as TAB, RETURN, ESC, and arrow keys. This method is called only if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsInputKey_\" data-linktype=\"relative-path\">IsInputKey</a> method indicates that the control is not processing the key. The ProcessDialogKey simply sends the character to the parent&#39;s ProcessDialogKey method, or returns <code>false</code>if the control has no parent. The <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> class overrides this method to perform actual processing of dialog keys. This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ProcessKeyEventArgs_System_Windows_Forms_Message__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ProcessKeyEventArgs(Message)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Processes a key message and generates the appropriate control events.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual bool ProcessKeyEventArgs (ref System.Windows.Forms.Message m);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>m</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a>, passed by reference, that represents the window message to process.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the message was processed by the control; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is called when a control receives a keyboard message. The method is responsible for generating the appropriate key events for the message by calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnKeyPress_\" data-linktype=\"relative-path\">OnKeyPress</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnKeyDown_\" data-linktype=\"relative-path\">OnKeyDown</a>, or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnKeyUp_\" data-linktype=\"relative-path\">OnKeyUp</a> methods. The <code>m</code> parameter contains the window message that must be processed. Possible values for the <a class=\"xref\" href=\"system.windows.forms.message#System_Windows_Forms_Message_Msg_\" data-linktype=\"relative-path\">Msg</a> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, WM_SYSKEYUP, and WM_IME_CHAR.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ProcessKeyMessage_System_Windows_Forms_Message__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ProcessKeyMessage(Message)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Processes a keyboard message.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual bool ProcessKeyMessage (ref System.Windows.Forms.Message m);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>m</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a>, passed by reference, that represents the window message to process.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the message was processed by the control; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is called when a control receives a keyboard message. The method first determines whether the control has a parent; if so, it calls the parent&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessKeyPreview_\" data-linktype=\"relative-path\">ProcessKeyPreview</a> method. If the parent&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessKeyPreview_\" data-linktype=\"relative-path\">ProcessKeyPreview</a> method does not process the message then the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessKeyEventArgs_\" data-linktype=\"relative-path\">ProcessKeyEventArgs</a> method is called to generate the appropriate keyboard events. The <code>m</code> parameter contains the window message that must be processed. Possible values for the <a class=\"xref\" href=\"system.windows.forms.message#System_Windows_Forms_Message_Msg_\" data-linktype=\"relative-path\">Msg</a> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ProcessKeyPreview_System_Windows_Forms_Message__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ProcessKeyPreview(Message)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Previews a keyboard message.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual bool ProcessKeyPreview (ref System.Windows.Forms.Message m);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>m</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a>, passed by reference, that represents the window message to process.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the message was processed by the control; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is called by a child control when the child control receives a keyboard message. The child control calls this method before generating any keyboard events for the message. If this method returns <code>true</code>, the child control considers the message processed and does not generate any keyboard events. The <code>m</code> parameter contains the window message to preview. Possible values for the <a class=\"xref\" href=\"system.windows.forms.message#System_Windows_Forms_Message_Msg_\" data-linktype=\"relative-path\">Msg</a> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP. The ProcessKeyPreview method simply sends the character to the parent&#39;s ProcessKeyPreview method, or returns <code>false</code> if the control has no parent. The <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> class overrides this method to perform actual processing of dialog keys.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ProcessMnemonic_System_Char_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ProcessMnemonic(Char)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Processes a mnemonic character.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual bool ProcessMnemonic (char charCode);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>charCode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The character to process.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the character was processed as a mnemonic by the control; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is called to give a control the opportunity to process a mnemonic character. The method should determine whether the control is in a state to process mnemonics and if whether the given character represents a mnemonic. If so, the method should perform the action associated with the mnemonic and return <code>true</code>. If not, the method should return <code>false</code>. Implementations of this method often use the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsMnemonic_\" data-linktype=\"relative-path\">IsMnemonic</a> method to determine whether the given character matches a mnemonic in the control&#39;s text.  </p>\n<p> For example:  </p>\n<pre><code class=\"lang-c#\">if (CanSelect &amp;&amp; IsMnemonic(charCode, MyControl.Text) {  \n      // Perform action associated with mnemonic.  \n       }  \n</code></pre><p> This default implementation of the ProcessMnemonic method simply returns <code>false</code> to indicate that the control has no mnemonic.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_RaiseDragEvent_System_Object_System_Windows_Forms_DragEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RaiseDragEvent(Object,DragEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the appropriate drag event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void RaiseDragEvent (object key, System.Windows.Forms.DragEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>key</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The event to raise.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.drageventargs\" data-linktype=\"relative-path\">DragEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.drageventargs\" data-linktype=\"relative-path\">DragEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_RaiseKeyEvent_System_Object_System_Windows_Forms_KeyEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RaiseKeyEvent(Object,KeyEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the appropriate key event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void RaiseKeyEvent (object key, System.Windows.Forms.KeyEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>key</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The event to raise.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_RaiseMouseEvent_System_Object_System_Windows_Forms_MouseEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RaiseMouseEvent(Object,MouseEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the appropriate mouse event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void RaiseMouseEvent (object key, System.Windows.Forms.MouseEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>key</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The event to raise.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_RaisePaintEvent_System_Object_System_Windows_Forms_PaintEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RaisePaintEvent(Object,PaintEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the appropriate paint event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void RaisePaintEvent (object key, System.Windows.Forms.PaintEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>key</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The event to raise.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_RecreateHandle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RecreateHandle()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Forces the re-creation of the handle for the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void RecreateHandle ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The RecreateHandle method is called whenever parameters are needed for a new control, but using a call from <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UpdateStyles_\" data-linktype=\"relative-path\">UpdateStyles</a> to <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateParams_\" data-linktype=\"relative-path\">CreateParams</a> is insufficient. This method also calls <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DestroyHandle_\" data-linktype=\"relative-path\">DestroyHandle</a> and<a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateHandle_\" data-linktype=\"relative-path\">CreateHandle</a> and sets <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RecreatingHandle_\" data-linktype=\"relative-path\">RecreatingHandle</a> to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_RectangleToClient_System_Drawing_Rectangle_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RectangleToClient(Rectangle)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Computes the size and location of the specified screen rectangle in client coordinates.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Drawing.Rectangle RectangleToClient (System.Drawing.Rectangle r);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>r</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The screen coordinate <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> to convert.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the converted <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a>, <code>r</code>, in client coordinates.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_RectangleToScreen_System_Drawing_Rectangle_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RectangleToScreen(Rectangle)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Computes the size and location of the specified client rectangle in screen coordinates.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Drawing.Rectangle RectangleToScreen (System.Drawing.Rectangle r);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>r</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The client coordinate <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> to convert.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the converted <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a>, <code>p</code>, in screen coordinates.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ReflectMessage_System_IntPtr_System_Windows_Forms_Message__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReflectMessage(IntPtr,Message)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reflects the specified message to the control that is bound to the specified handle.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected static bool ReflectMessage (IntPtr hWnd, ref System.Windows.Forms.Message m);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>hWnd</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> representing the handle of the control to reflect the message to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>m</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a> representing the Windows message to reflect.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the message was reflected; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The ReflectMessage method is an infrastructure method and typically should not be called from your code.  </p>\n<p> If the <code>hWnd</code> parameter does not represent a valid control, the ReflectMessage method returns <code>false</code>.  </p>\n<p> Because Windows messages are returned to the top-level window, the ReflectMessage method is used to propagate the return message to the control that sent the message.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Refresh\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Refresh()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Forces the control to invalidate its client area and immediately redraw itself and any child controls.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void Refresh ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ResetBackColor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ResetBackColor()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Resets the <span class=\"xref\">stem.Windows.Forms.Control.BackColor*</span> property to its default value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void ResetBackColor ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is not relevant for this class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ResetBindings\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ResetBindings()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Causes a control bound to the <a class=\"xref\" href=\"system.windows.forms.bindingsource\" data-linktype=\"relative-path\">BindingSource</a> to reread all the items in the list and refresh their displayed values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void ResetBindings ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is not relevant for this class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ResetCursor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ResetCursor()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Resets the <span class=\"xref\">stem.Windows.Forms.Control.Cursor*</span> property to its default value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void ResetCursor ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is not relevant for this class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ResetFont\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ResetFont()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Resets the <span class=\"xref\">stem.Windows.Forms.Control.Font*</span> property to its default value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void ResetFont ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is not relevant for this class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ResetForeColor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ResetForeColor()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Resets the <span class=\"xref\">stem.Windows.Forms.Control.ForeColor*</span> property to its default value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void ResetForeColor ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is not relevant for this class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ResetImeMode\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ResetImeMode()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Resets the <span class=\"xref\">stem.Windows.Forms.Control.ImeMode*</span> property to its default value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void ResetImeMode ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is not relevant for this class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ResetMouseEventArgs\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ResetMouseEventArgs()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Resets the control to handle the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void ResetMouseEventArgs ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ResetRightToLeft\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ResetRightToLeft()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Resets the <span class=\"xref\">stem.Windows.Forms.Control.RightToLeft*</span> property to its default value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void ResetRightToLeft ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is not relevant for this class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ResetText\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ResetText()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Resets the <span class=\"xref\">stem.Windows.Forms.Control.Text*</span> property to its default value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void ResetText ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You typically use this method if you are either creating a designer for the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> or creating your own control incorporating the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ResumeLayout\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ResumeLayout()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Resumes usual layout logic.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void ResumeLayout ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Calling the ResumeLayout method forces an immediate layout if there are any pending layout requests.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SuspendLayout_\" data-linktype=\"relative-path\">SuspendLayout</a> and ResumeLayout methods are used in tandem to suppress multiple <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Layout\" data-linktype=\"relative-path\">Layout</a> events while you adjust multiple attributes of the control. For example, you would typically call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SuspendLayout_\" data-linktype=\"relative-path\">SuspendLayout</a> method, then set the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Size_\" data-linktype=\"relative-path\">Size</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Location_\" data-linktype=\"relative-path\">Location</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Anchor_\" data-linktype=\"relative-path\">Anchor</a>, or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Dock_\" data-linktype=\"relative-path\">Dock</a> properties of the control, and then call the ResumeLayout method to enable the changes to take effect.  </p>\n<p> There must be no pending calls to <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SuspendLayout_\" data-linktype=\"relative-path\">SuspendLayout</a> for ResumeLayout to be successfully called.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ResumeLayout_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ResumeLayout(Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Resumes usual layout logic, optionally forcing an immediate layout of pending layout requests.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void ResumeLayout (bool performLayout);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>performLayout</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to execute pending layout requests; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResumeLayout_\" data-linktype=\"relative-path\">ResumeLayout</a> method forces an immediate layout if there are any pending layout requests. When the <code>performLayout</code> parameter is set to <code>true</code>, an immediate layout occurs if there are any pending layout requests.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SuspendLayout_\" data-linktype=\"relative-path\">SuspendLayout</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResumeLayout_\" data-linktype=\"relative-path\">ResumeLayout</a> methods are used in tandem to suppress multiple <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Layout\" data-linktype=\"relative-path\">Layout</a> events while you adjust multiple attributes of the control. For example, you would typically call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SuspendLayout_\" data-linktype=\"relative-path\">SuspendLayout</a> method, then set the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Size_\" data-linktype=\"relative-path\">Size</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Location_\" data-linktype=\"relative-path\">Location</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Anchor_\" data-linktype=\"relative-path\">Anchor</a>, or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Dock_\" data-linktype=\"relative-path\">Dock</a> properties of the control, and then call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResumeLayout_\" data-linktype=\"relative-path\">ResumeLayout</a> method to enable the changes to take effect.  </p>\n<p> There must be no pending calls to <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SuspendLayout_\" data-linktype=\"relative-path\">SuspendLayout</a> for <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResumeLayout_\" data-linktype=\"relative-path\">ResumeLayout</a> to be successfully called.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When adding several controls to a parent control, it is recommended that you call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SuspendLayout_\" data-linktype=\"relative-path\">SuspendLayout</a> method before initializing the controls to be added. After adding the controls to the parent control, call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResumeLayout_\" data-linktype=\"relative-path\">ResumeLayout</a> method. This will increase the performance of applications with many controls.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_RtlTranslateAlignment_System_Drawing_ContentAlignment_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RtlTranslateAlignment(ContentAlignment)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the specified <a class=\"xref\" href=\"system.drawing.contentalignment\" data-linktype=\"relative-path\">ContentAlignment</a> to the appropriate <a class=\"xref\" href=\"system.drawing.contentalignment\" data-linktype=\"relative-path\">ContentAlignment</a> to support right-to-left text.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected System.Drawing.ContentAlignment RtlTranslateAlignment (System.Drawing.ContentAlignment align);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>align</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.contentalignment\" data-linktype=\"relative-path\">ContentAlignment</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.drawing.contentalignment\" data-linktype=\"relative-path\">ContentAlignment</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.contentalignment\" data-linktype=\"relative-path\">ContentAlignment</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.drawing.contentalignment\" data-linktype=\"relative-path\">ContentAlignment</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeft_\" data-linktype=\"relative-path\">RightToLeft</a> property of <a class=\"xref\" href=\"system.windows.forms.righttoleft\" data-linktype=\"relative-path\">RightToLeft</a> is set to <code>No</code>, the return value is equal to the <code>align</code> parameter passed in.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_RtlTranslateAlignment_System_Windows_Forms_HorizontalAlignment_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RtlTranslateAlignment(HorizontalAlignment)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the specified <a class=\"xref\" href=\"system.windows.forms.horizontalalignment\" data-linktype=\"relative-path\">HorizontalAlignment</a> to the appropriate <a class=\"xref\" href=\"system.windows.forms.horizontalalignment\" data-linktype=\"relative-path\">HorizontalAlignment</a> to support right-to-left text.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected System.Windows.Forms.HorizontalAlignment RtlTranslateAlignment (System.Windows.Forms.HorizontalAlignment align);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>align</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.horizontalalignment\" data-linktype=\"relative-path\">HorizontalAlignment</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.horizontalalignment\" data-linktype=\"relative-path\">HorizontalAlignment</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.horizontalalignment\" data-linktype=\"relative-path\">HorizontalAlignment</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.horizontalalignment\" data-linktype=\"relative-path\">HorizontalAlignment</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeft_\" data-linktype=\"relative-path\">RightToLeft</a> property of <a class=\"xref\" href=\"system.windows.forms.righttoleft\" data-linktype=\"relative-path\">RightToLeft</a> is set to <code>No</code>, the return value is equal to the <code>align</code> parameter passed in.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_RtlTranslateAlignment_System_Windows_Forms_LeftRightAlignment_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RtlTranslateAlignment(LeftRightAlignment)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the specified <a class=\"xref\" href=\"system.windows.forms.leftrightalignment\" data-linktype=\"relative-path\">LeftRightAlignment</a> to the appropriate <a class=\"xref\" href=\"system.windows.forms.leftrightalignment\" data-linktype=\"relative-path\">LeftRightAlignment</a> to support right-to-left text.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected System.Windows.Forms.LeftRightAlignment RtlTranslateAlignment (System.Windows.Forms.LeftRightAlignment align);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>align</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.leftrightalignment\" data-linktype=\"relative-path\">LeftRightAlignment</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.leftrightalignment\" data-linktype=\"relative-path\">LeftRightAlignment</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.leftrightalignment\" data-linktype=\"relative-path\">LeftRightAlignment</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.leftrightalignment\" data-linktype=\"relative-path\">LeftRightAlignment</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeft_\" data-linktype=\"relative-path\">RightToLeft</a> property of <a class=\"xref\" href=\"system.windows.forms.righttoleft\" data-linktype=\"relative-path\">RightToLeft</a> is set to <code>No</code>, the return value is equal to the <code>align</code> parameter passed in.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_RtlTranslateContent_System_Drawing_ContentAlignment_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RtlTranslateContent(ContentAlignment)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the specified <a class=\"xref\" href=\"system.drawing.contentalignment\" data-linktype=\"relative-path\">ContentAlignment</a> to the appropriate <a class=\"xref\" href=\"system.drawing.contentalignment\" data-linktype=\"relative-path\">ContentAlignment</a> to support right-to-left text.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected System.Drawing.ContentAlignment RtlTranslateContent (System.Drawing.ContentAlignment align);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>align</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.contentalignment\" data-linktype=\"relative-path\">ContentAlignment</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.drawing.contentalignment\" data-linktype=\"relative-path\">ContentAlignment</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.contentalignment\" data-linktype=\"relative-path\">ContentAlignment</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.drawing.contentalignment\" data-linktype=\"relative-path\">ContentAlignment</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeft_\" data-linktype=\"relative-path\">RightToLeft</a> property of <a class=\"xref\" href=\"system.windows.forms.righttoleft\" data-linktype=\"relative-path\">RightToLeft</a> is set to <code>No</code>, the return value is equal to the <code>align</code> parameter passed in.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_RtlTranslateHorizontal_System_Windows_Forms_HorizontalAlignment_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RtlTranslateHorizontal(HorizontalAlignment)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the specified <a class=\"xref\" href=\"system.windows.forms.horizontalalignment\" data-linktype=\"relative-path\">HorizontalAlignment</a> to the appropriate <a class=\"xref\" href=\"system.windows.forms.horizontalalignment\" data-linktype=\"relative-path\">HorizontalAlignment</a> to support right-to-left text.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected System.Windows.Forms.HorizontalAlignment RtlTranslateHorizontal (System.Windows.Forms.HorizontalAlignment align);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>align</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.horizontalalignment\" data-linktype=\"relative-path\">HorizontalAlignment</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.horizontalalignment\" data-linktype=\"relative-path\">HorizontalAlignment</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.horizontalalignment\" data-linktype=\"relative-path\">HorizontalAlignment</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.horizontalalignment\" data-linktype=\"relative-path\">HorizontalAlignment</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeft_\" data-linktype=\"relative-path\">RightToLeft</a> property of <a class=\"xref\" href=\"system.windows.forms.righttoleft\" data-linktype=\"relative-path\">RightToLeft</a> is set to <code>No</code>, the return value is equal to the <code>align</code> parameter passed in.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_RtlTranslateLeftRight_System_Windows_Forms_LeftRightAlignment_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RtlTranslateLeftRight(LeftRightAlignment)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the specified <a class=\"xref\" href=\"system.windows.forms.leftrightalignment\" data-linktype=\"relative-path\">LeftRightAlignment</a> to the appropriate <a class=\"xref\" href=\"system.windows.forms.leftrightalignment\" data-linktype=\"relative-path\">LeftRightAlignment</a> to support right-to-left text.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected System.Windows.Forms.LeftRightAlignment RtlTranslateLeftRight (System.Windows.Forms.LeftRightAlignment align);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>align</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.leftrightalignment\" data-linktype=\"relative-path\">LeftRightAlignment</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.leftrightalignment\" data-linktype=\"relative-path\">LeftRightAlignment</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.leftrightalignment\" data-linktype=\"relative-path\">LeftRightAlignment</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.leftrightalignment\" data-linktype=\"relative-path\">LeftRightAlignment</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeft_\" data-linktype=\"relative-path\">RightToLeft</a> property of <a class=\"xref\" href=\"system.windows.forms.righttoleft\" data-linktype=\"relative-path\">RightToLeft</a> is set to <code>No</code>, the return value is equal to the <code>align</code> parameter passed in.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Scale_System_Drawing_SizeF_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Scale(SizeF)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Scales the control and all child controls by the specified scaling factor.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Scale (System.Drawing.SizeF factor);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>factor</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a> containing the horizontal and vertical scaling factors.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Scale method scales the control by the specified scaling <code>factor</code>. It also recursively scales all child controls if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ScaleChildren_\" data-linktype=\"relative-path\">ScaleChildren</a> property is <code>true</code>. Internally, this method calls <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ScaleControl_\" data-linktype=\"relative-path\">ScaleControl</a> to scale each control.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Scale_System_Single_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Scale(Single)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Scales the control and any child controls.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Scale (float ratio);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ratio</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The ratio to use for scaling.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Scale_System_Single_System_Single_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Scale(Single,Single)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Scales the entire control and any child controls.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Scale (float dx, float dy);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dx</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The horizontal scaling factor.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dy</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The vertical scaling factor.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ScaleControl_System_Drawing_SizeF_System_Windows_Forms_BoundsSpecified_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ScaleControl(SizeF,BoundsSpecified)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Scales a control&#39;s location, size, padding and margin.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>factor</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The factor by which the height and width of the control will be scaled.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>specified</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.boundsspecified\" data-linktype=\"relative-path\">BoundsSpecified</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.boundsspecified\" data-linktype=\"relative-path\">BoundsSpecified</a> value that specifies the bounds of the control to use when defining its size and position.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the control is top level, this will not scale the control&#39;s location. This does not scale children or the size of automatically sized controls. You can omit scaling in any direction by changing the value of the <code>specified</code> parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ScaleCore_System_Single_System_Single_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ScaleCore(Single,Single)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>This method is not relevant for this class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void ScaleCore (float dx, float dy);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dx</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The horizontal scaling factor.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dy</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The vertical scaling factor.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is not relevant for this class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Select\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Select()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Activates the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Select ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Select method activates the control if the control&#39;s <code>Selectable</code> style bit is set to <code>true</code> in <a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">ControlStyles</a>, it is contained in another control, and all its parent controls are both visible and enabled.  </p>\n<p> The Windows Forms controls in the following list are not selectable. Controls derived from controls in the list will also not be selectable.  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.label\" data-linktype=\"relative-path\">Label</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.panel\" data-linktype=\"relative-path\">Panel</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.groupbox\" data-linktype=\"relative-path\">GroupBox</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.picturebox\" data-linktype=\"relative-path\">PictureBox</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.progressbar\" data-linktype=\"relative-path\">ProgressBar</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.splitter\" data-linktype=\"relative-path\">Splitter</a>  \n</li>\n<li><p><a class=\"xref\" href=\"system.windows.forms.linklabel\" data-linktype=\"relative-path\">LinkLabel</a> (when there is no link present in the control)</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Select_System_Boolean_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Select(Boolean,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Activates a child control. Optionally specifies the direction in the tab order to select the control from.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void Select (bool directed, bool forward);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>directed</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to specify the direction of the control to select; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>forward</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to move forward in the tab order; <code>false</code> to move backward in the tab order.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>directed</code> and <code>forward</code> parameters are used by container-style controls. When the <code>directed</code> parameter is set to <code>true</code>, the <code>forward</code> parameter is evaluated to determine which control to select. When <code>forward</code> is set to <code>true</code>, the next control in the tab order is selected; when <code>false</code>, the previous control in the tab order is selected.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Select_\" data-linktype=\"relative-path\">Select</a> method activates the control if the control&#39;s <code>Selectable</code> style bit is set to <code>true</code> in <a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">ControlStyles</a>, it is contained in another control, and all its parent controls are both visible and enabled.  </p>\n<p> The Windows Forms controls in the following list are not selectable. Controls derived from controls in the list will also not be selectable.  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.label\" data-linktype=\"relative-path\">Label</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.panel\" data-linktype=\"relative-path\">Panel</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.groupbox\" data-linktype=\"relative-path\">GroupBox</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.picturebox\" data-linktype=\"relative-path\">PictureBox</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.progressbar\" data-linktype=\"relative-path\">ProgressBar</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.splitter\" data-linktype=\"relative-path\">Splitter</a>  \n</li>\n<li><p><a class=\"xref\" href=\"system.windows.forms.linklabel\" data-linktype=\"relative-path\">LinkLabel</a> (when there is no link present in the control)</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_SelectNextControl_System_Windows_Forms_Control_System_Boolean_System_Boolean_System_Boolean_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SelectNextControl(Control,Boolean,Boolean,Boolean,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Activates the next control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool SelectNextControl (System.Windows.Forms.Control ctl, bool forward, bool tabStopOnly, bool nested, bool wrap);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ctl</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> at which to start the search.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>forward</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to move forward in the tab order; <code>false</code> to move backward in the tab order.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>tabStopOnly</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to ignore the controls with the <span class=\"xref\">stem.Windows.Forms.Control.TabStop*</span> property set to <code>false</code>; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>nested</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to include nested (children of child controls) child controls; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>wrap</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to continue searching from the first control in the tab order after the last control has been reached; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if a control was activated; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The SelectNextControl method activates the next control in the tab order if the control&#39;s <code>Selectable</code> style bit is set to <code>true</code> in <a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">ControlStyles</a>, it is contained in another control, and all its parent controls are both visible and enabled.  </p>\n<p> The Windows Forms controls in the following list are not selectable. Controls derived from controls in the list will also not be selectable.  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.label\" data-linktype=\"relative-path\">Label</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.panel\" data-linktype=\"relative-path\">Panel</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.groupbox\" data-linktype=\"relative-path\">GroupBox</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.picturebox\" data-linktype=\"relative-path\">PictureBox</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.progressbar\" data-linktype=\"relative-path\">ProgressBar</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.splitter\" data-linktype=\"relative-path\">Splitter</a>  \n</li>\n<li><p><a class=\"xref\" href=\"system.windows.forms.linklabel\" data-linktype=\"relative-path\">LinkLabel</a> (when there is no link present in the control)  </p>\n<p>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Select_\" data-linktype=\"relative-path\">Select</a> or SelectNextControl methods, or by setting the <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_ActiveControl_\" data-linktype=\"relative-path\">ActiveControl</a> property to the current form, focus events occur in the following order:  </p>\n</li>\n</ul>\n<ol>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a>  \n\n<p>If the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CausesValidation_\" data-linktype=\"relative-path\">CausesValidation</a> property is set to <code>false</code>, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a> events are suppressed.</p>\n</li>\n</ol>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_SendToBack\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SendToBack()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sends the control to the back of the z-order.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SendToBack ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The control is moved to the back of the z-order. If the control is a child of another control, the child control is moved to the back of the z-order. If the control is a top-level control, this method will not work correctly unless the control is active. A top-level control is a control, such as a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>, that is not a child of another control. An active control is a visible control that has input focus. To use the SendToBack method with an inactive, top-level control, first call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BringToFront_\" data-linktype=\"relative-path\">BringToFront</a> method on the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_SetAutoSizeMode_System_Windows_Forms_AutoSizeMode_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetAutoSizeMode(AutoSizeMode)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets a value indicating how a control will behave when its <span class=\"xref\">stem.Windows.Forms.Control.AutoSize*</span> property is enabled.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void SetAutoSizeMode (System.Windows.Forms.AutoSizeMode mode);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.autosizemode\" data-linktype=\"relative-path\">AutoSizeMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.windows.forms.autosizemode\" data-linktype=\"relative-path\">AutoSizeMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_SetBounds_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetBounds(Int32,Int32,Int32,Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets the bounds of the control to the specified location and size.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SetBounds (int x, int y, int width, int height);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>x</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The new <span class=\"xref\">stem.Windows.Forms.Control.Left*</span> property value of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>y</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The new <span class=\"xref\">stem.Windows.Forms.Control.Top*</span> property value of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>width</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The new <span class=\"xref\">stem.Windows.Forms.Control.Width*</span> property value of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>height</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The new <span class=\"xref\">stem.Windows.Forms.Control.Height*</span> property value of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_SetBounds_System_Int32_System_Int32_System_Int32_System_Int32_System_Windows_Forms_BoundsSpecified_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetBounds(Int32,Int32,Int32,Int32,BoundsSpecified)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets the specified bounds of the control to the specified location and size.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SetBounds (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>x</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The new <span class=\"xref\">stem.Windows.Forms.Control.Left*</span> property value of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>y</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The new <span class=\"xref\">stem.Windows.Forms.Control.Top*</span> property value of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>width</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The new <span class=\"xref\">stem.Windows.Forms.Control.Width*</span> property value of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>height</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The new <span class=\"xref\">stem.Windows.Forms.Control.Height*</span> property value of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>specified</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.boundsspecified\" data-linktype=\"relative-path\">BoundsSpecified</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A bitwise combination of the <a class=\"xref\" href=\"system.windows.forms.boundsspecified\" data-linktype=\"relative-path\">BoundsSpecified</a> values. For any parameter not specified, the current value will be used.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_SetBoundsCore_System_Int32_System_Int32_System_Int32_System_Int32_System_Windows_Forms_BoundsSpecified_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Performs the work of setting the specified bounds of this control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>x</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The new <span class=\"xref\">stem.Windows.Forms.Control.Left*</span> property value of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>y</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The new <span class=\"xref\">stem.Windows.Forms.Control.Top*</span> property value of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>width</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The new <span class=\"xref\">stem.Windows.Forms.Control.Width*</span> property value of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>height</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The new <span class=\"xref\">stem.Windows.Forms.Control.Height*</span> property value of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>specified</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.boundsspecified\" data-linktype=\"relative-path\">BoundsSpecified</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A bitwise combination of the <a class=\"xref\" href=\"system.windows.forms.boundsspecified\" data-linktype=\"relative-path\">BoundsSpecified</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Typically, the parameters that correspond to the bounds not included in the <code>specified</code> parameter are passed in with their current values. For example, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Height_\" data-linktype=\"relative-path\">Height</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Width_\" data-linktype=\"relative-path\">Width</a>, or the <a class=\"xref\" href=\"system.drawing.point#System_Drawing_Point_X_\" data-linktype=\"relative-path\">X</a> or <a class=\"xref\" href=\"system.drawing.point#System_Drawing_Point_Y_\" data-linktype=\"relative-path\">Y</a> properties of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Location_\" data-linktype=\"relative-path\">Location</a> property can be passed in with a reference to the current instance of the control. However all values passed in are honored and applied to the control.  </p>\n<p> The <code>boundsSpecified</code> parameter represents the elements of the controls <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Bounds_\" data-linktype=\"relative-path\">Bounds</a> changed by your application. For example, if you change the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Size_\" data-linktype=\"relative-path\">Size</a> of the control, the <code>boundsSpecified</code> parameter value is the <code>Size</code> value of <a class=\"xref\" href=\"system.windows.forms.boundsspecified\" data-linktype=\"relative-path\">BoundsSpecified</a>. However, if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Size_\" data-linktype=\"relative-path\">Size</a> is adjusted in response to the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Dock_\" data-linktype=\"relative-path\">Dock</a> property being set, the <code>boundsSpecified</code> parameter value is the <code>None</code> value of <a class=\"xref\" href=\"system.windows.forms.boundsspecified\" data-linktype=\"relative-path\">BoundsSpecified</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> On Windows Server 2003 systems, the size of a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> is restricted by the maximum pixel width and height of the monitor.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_SetClientSizeCore_System_Int32_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetClientSizeCore(Int32,Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets the size of the client area of the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void SetClientSizeCore (int x, int y);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>x</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The client area width, in pixels.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>y</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The client area height, in pixels.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The client area starts at the (0, 0) location and extends to the (<code>x</code>, <code>y</code>) location.  </p>\n<p> Typically, you should not set the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ClientSize_\" data-linktype=\"relative-path\">ClientSize</a> of the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_SetStyle_System_Windows_Forms_ControlStyles_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetStyle(ControlStyles,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets a specified <a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">ControlStyles</a> flag to either <code>true</code> or <code>false</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void SetStyle (System.Windows.Forms.ControlStyles flag, bool value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>flag</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">ControlStyles</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">ControlStyles</a> bit to set.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to apply the specified style to the control; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Control style bit flags are used to categorize supported behavior. A control can enable a style by calling the SetStyle method and passing in the appropriate <a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">ControlStyles</a> bit (or bits) and the Boolean value to set the bit(s) to. To determine the value assigned to a specified <a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">ControlStyles</a> bit, use the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetStyle_\" data-linktype=\"relative-path\">GetStyle</a> method and pass in the <a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">ControlStyles</a> member to evaluate.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Setting the control style bits can substantially change the behavior of the control. Review the <a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">ControlStyles</a> enumeration documentation to understand the effects of changing the control style bits before calling the SetStyle method.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_SetTopLevel_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetTopLevel(Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets the control as the top-level control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void SetTopLevel (bool value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to set the control as the top-level control; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>value</code> parameter is set to <code>true</code> and the control is an ActiveX control.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Windows.Forms.Control.GetTopLevel*</span> return value is not equal to the <code>value</code> parameter and the <span class=\"xref\">stem.Windows.Forms.Control.Parent*</span> property is not <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If you call the SetTopLevel method of a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> and pass in a value of <code>false</code>, the form will not be visible until you call SetTopLevelagain, passing in a value of <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_SetVisibleCore_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetVisibleCore(Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets the control to the specified visible state.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void SetVisibleCore (bool value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to make the control visible; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You would typically override this method to change the visibility behavior of the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Show\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Show()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Displays the control to the user.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Show ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Showing the control is equivalent to setting the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Visible_\" data-linktype=\"relative-path\">Visible</a> property to <code>true</code>. After the Show method is called, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Visible_\" data-linktype=\"relative-path\">Visible</a> property returns a value of <code>true</code> until the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Hide_\" data-linktype=\"relative-path\">Hide</a> method is called.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_SizeFromClientSize_System_Drawing_Size_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SizeFromClientSize(Size)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines the size of the entire control from the height and width of its client area.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Drawing.Size SizeFromClientSize (System.Drawing.Size clientSize);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>clientSize</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> value representing the height and width of the control&#39;s client area.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> value representing the height and width of the entire control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_SuspendLayout\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SuspendLayout()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Temporarily suspends the layout logic for the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SuspendLayout ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The layout logic of the control is suspended until the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResumeLayout_\" data-linktype=\"relative-path\">ResumeLayout</a> method is called.  </p>\n<p> The SuspendLayout and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResumeLayout_\" data-linktype=\"relative-path\">ResumeLayout</a> methods are used in tandem to suppress multiple <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Layout\" data-linktype=\"relative-path\">Layout</a> events while you adjust multiple attributes of the control. For example, you would typically call the SuspendLayout method, then set the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Size_\" data-linktype=\"relative-path\">Size</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Location_\" data-linktype=\"relative-path\">Location</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Anchor_\" data-linktype=\"relative-path\">Anchor</a>, or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Dock_\" data-linktype=\"relative-path\">Dock</a> properties of the control, and then call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResumeLayout_\" data-linktype=\"relative-path\">ResumeLayout</a> method to enable the changes to take effect.  </p>\n<p> There must be no pending calls to SuspendLayout for <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResumeLayout_\" data-linktype=\"relative-path\">ResumeLayout</a> to be successfully called.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When adding several controls to a parent control, it is recommended that you call the SuspendLayout method before initializing the controls to be added. After adding the controls to the parent control, call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResumeLayout_\" data-linktype=\"relative-path\">ResumeLayout</a> method. This will increase the performance of applications with many controls.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Update\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Update()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Causes the control to redraw the invalidated regions within its client area.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Update ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Executes any pending requests for painting.  </p>\n<p> There are two ways to repaint a form and its contents:  </p>\n<ul>\n<li><p>You can use one of the overloads of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_\" data-linktype=\"relative-path\">Invalidate</a> method with the Update method.  </p>\n</li>\n<li><p>You can call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Refresh_\" data-linktype=\"relative-path\">Refresh</a> method, which forces the control to redraw itself and all its children. This is equivalent to setting the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_\" data-linktype=\"relative-path\">Invalidate</a> method to <code>true</code> and using it with Update.  </p>\n<p>The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_\" data-linktype=\"relative-path\">Invalidate</a> method governs what gets painted or repainted. The Update method governs when the painting or repainting occurs. If you use the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_\" data-linktype=\"relative-path\">Invalidate</a> and Update methods together rather than calling <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Refresh_\" data-linktype=\"relative-path\">Refresh</a>, what gets repainted depends on which overload of <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_\" data-linktype=\"relative-path\">Invalidate</a> you use. The Update method just forces the control to be painted immediately, but the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_\" data-linktype=\"relative-path\">Invalidate</a> method governs what gets painted when you call the Update method.  </p>\n<p>For more information, see the<a href=\"http://msdn.microsoft.com/library/dd145213(v=vs.85).aspx\" data-linktype=\"external\">WM_PAINT</a>topic.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_UpdateBounds\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UpdateBounds()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Updates the bounds of the control with the current size and location.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void UpdateBounds ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the new <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Size_\" data-linktype=\"relative-path\">Size</a> of the control is different from the previous <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a>, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SizeChanged\" data-linktype=\"relative-path\">SizeChanged</a> event is raised. Likewise, if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Location_\" data-linktype=\"relative-path\">Location</a> of the control changes, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LocationChanged\" data-linktype=\"relative-path\">LocationChanged</a> event is raised.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_UpdateBounds_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UpdateBounds(Int32,Int32,Int32,Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Updates the bounds of the control with the specified size and location.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void UpdateBounds (int x, int y, int width, int height);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>x</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Drawing.Point.X*</span> coordinate of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>y</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Drawing.Point.Y*</span> coordinate of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>width</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Drawing.Size.Width*</span> of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>height</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Drawing.Size.Height*</span> of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the new <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Size_\" data-linktype=\"relative-path\">Size</a> of the control if different from the previous <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a>, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SizeChanged\" data-linktype=\"relative-path\">SizeChanged</a> event is raised. Likewise, is the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Location_\" data-linktype=\"relative-path\">Location</a> of the control changes, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LocationChanged\" data-linktype=\"relative-path\">LocationChanged</a> event is raised.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_UpdateBounds_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UpdateBounds(Int32,Int32,Int32,Int32,Int32,Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Updates the bounds of the control with the specified size, location, and client size.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void UpdateBounds (int x, int y, int width, int height, int clientWidth, int clientHeight);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>x</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Drawing.Point.X*</span> coordinate of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>y</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Drawing.Point.Y*</span> coordinate of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>width</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Drawing.Size.Width*</span> of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>height</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Drawing.Size.Height*</span> of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>clientWidth</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The client <span class=\"xref\">stem.Drawing.Size.Width*</span> of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>clientHeight</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The client <span class=\"xref\">stem.Drawing.Size.Height*</span> of the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the new <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Size_\" data-linktype=\"relative-path\">Size</a> of the control is different from the previous <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a>, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SizeChanged\" data-linktype=\"relative-path\">SizeChanged</a> event is raised. Likewise, if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Location_\" data-linktype=\"relative-path\">Location</a> of the control changes, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LocationChanged\" data-linktype=\"relative-path\">LocationChanged</a> event is raised.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_UpdateStyles\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UpdateStyles()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Forces the assigned styles to be reapplied to the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void UpdateStyles ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method calls the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateParams_\" data-linktype=\"relative-path\">CreateParams</a> method to get the styles to apply. The styles assigned to the <a class=\"xref\" href=\"system.windows.forms.createparams#System_Windows_Forms_CreateParams_Style_\" data-linktype=\"relative-path\">Style</a> and <a class=\"xref\" href=\"system.windows.forms.createparams#System_Windows_Forms_CreateParams_ExStyle_\" data-linktype=\"relative-path\">ExStyle</a> properties of the <a class=\"xref\" href=\"system.windows.forms.createparams\" data-linktype=\"relative-path\">CreateParams</a> assigned to the control&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateParams_\" data-linktype=\"relative-path\">CreateParams</a> property are reapplied. The control is repainted to reflect the style changes if necessary.  </p>\n<p> The UpdateStyles method has no effect if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsHandleCreated_\" data-linktype=\"relative-path\">IsHandleCreated</a> property value is <code>false</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_UpdateZOrder\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UpdateZOrder()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Updates the control in its parent&#39;s z-order.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void UpdateZOrder ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The UpdateZOrder method updates the position of the control in its parent control&#39;s z-order. For example, if this control is a newly created control that was added to a <a class=\"xref\" href=\"system.windows.forms.control.controlcollection\" data-linktype=\"relative-path\">Control.ControlCollection</a>, the z-order is updated with the new control added to the back.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_WndProc_System_Windows_Forms_Message__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WndProc(Message)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Processes Windows messages.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void WndProc (ref System.Windows.Forms.Message m);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>m</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The Windows <a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a> to process.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>All messages are sent to the WndProc method after getting filtered through the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PreProcessMessage_\" data-linktype=\"relative-path\">PreProcessMessage</a> method.  </p>\n<p> The WndProc method corresponds exactly to the Windows <code>WindowProc</code> function. For more information about processing Windows messages, see the <a href=\"http://go.microsoft.com/fwlink/?LinkId=181565\" data-linktype=\"external\">WindowProc function</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Events\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_AutoSizeChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AutoSizeChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>This event is not relevant for this class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler AutoSizeChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is not relevant for this class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_BackColorChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BackColorChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.Control.BackColor*</span> property changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler BackColorChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackColor_\" data-linktype=\"relative-path\">BackColor</a> property is changed by either a programmatic modification or user interaction.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_BackgroundImageChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BackgroundImageChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.Control.BackgroundImage*</span> property changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler BackgroundImageChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackgroundImage_\" data-linktype=\"relative-path\">BackgroundImage</a> property is changed by either a programmatic modification or user interaction.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_BackgroundImageLayoutChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BackgroundImageLayoutChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the <span class=\"xref\">stem.Windows.Forms.Control.BackgroundImageLayout*</span> property changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler BackgroundImageLayoutChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackgroundImageLayout_\" data-linktype=\"relative-path\">BackgroundImageLayout</a> property changes either programmatically or by user interaction.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_BindingContextChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BindingContextChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the value of the <a class=\"xref\" href=\"system.windows.forms.bindingcontext\" data-linktype=\"relative-path\">BindingContext</a> property changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler BindingContextChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To add a new <a class=\"xref\" href=\"system.windows.forms.bindingcontext\" data-linktype=\"relative-path\">BindingContext</a> to the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> through the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BindingContext_\" data-linktype=\"relative-path\">BindingContext</a> property, see the <a class=\"xref\" href=\"system.windows.forms.bindingcontext#System_Windows_Forms_BindingContext__ctor_\" data-linktype=\"relative-path\">BindingContext</a> constructor.  </p>\n<p> This event is raised if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BindingContext_\" data-linktype=\"relative-path\">BindingContext</a> property is changed is changed by either a programmatic modification or user interaction.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_CausesValidationChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CausesValidationChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.Control.CausesValidation*</span> property changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler CausesValidationChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CausesValidation_\" data-linktype=\"relative-path\">CausesValidation</a> property is changed by either a programmatic modification or user interaction.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ChangeUICues\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ChangeUICues</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the focus or keyboard user interface (UI) cues change.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.UICuesEventHandler ChangeUICues;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Click\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Click</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the control is clicked.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler Click;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Click event passes an <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> to its event handler, so it only indicates that a click has occurred. If you need more specific mouse information (button, number of clicks, wheel rotation, or location), use the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseClick\" data-linktype=\"relative-path\">MouseClick</a> event. However, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseClick\" data-linktype=\"relative-path\">MouseClick</a> event will not be raised if the click is caused by action other than that of the mouse, such as pressing the ENTER key.  </p>\n<p> A double-click is determined by the mouse settings of the user&#39;s operating system. The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks. The Click event is raised every time a control is double-clicked. For example, if you have event handlers for the Click and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a> events of a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>, the Click and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a> events are raised when the form is double-clicked and both methods are called. If a control is double-clicked and that control does not support the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a> event, the Click event might be raised twice.  </p>\n<p> You must set the <code>StandardClick</code> value of<a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">ControlStyles</a> to <code>true</code> for this event to be raised.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The following events are not raised for the <a class=\"xref\" href=\"system.windows.forms.tabcontrol\" data-linktype=\"relative-path\">TabControl</a> class unless there is at least one <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> in the <a class=\"xref\" href=\"system.windows.forms.tabcontrol#System_Windows_Forms_TabControl_TabPages_\" data-linktype=\"relative-path\">TabPages</a> collection: Click, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseHover\" data-linktype=\"relative-path\">MouseHover</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseEnter\" data-linktype=\"relative-path\">MouseEnter</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseMove\" data-linktype=\"relative-path\">MouseMove</a>. If there is at least one <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> in the collection, and the user interacts with the tab control&#39;s header (where the <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> names appear), the <a class=\"xref\" href=\"system.windows.forms.tabcontrol\" data-linktype=\"relative-path\">TabControl</a> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> raises the appropriate event.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ClientSizeChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ClientSizeChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.Control.ClientSize*</span> property changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler ClientSizeChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ContextMenuChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ContextMenuChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.Control.ContextMenu*</span> property changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler ContextMenuChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContextMenu_\" data-linktype=\"relative-path\">ContextMenu</a> property is changed by either a programmatic modification or user interaction.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ContextMenuStripChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ContextMenuStripChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.Control.ContextMenuStrip*</span> property changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler ContextMenuStripChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ControlAdded\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ControlAdded</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when a new control is added to the <a class=\"xref\" href=\"system.windows.forms.control.controlcollection\" data-linktype=\"relative-path\">Control.ControlCollection</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.ControlEventHandler ControlAdded;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ControlRemoved\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ControlRemoved</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when a control is removed from the <a class=\"xref\" href=\"system.windows.forms.control.controlcollection\" data-linktype=\"relative-path\">Control.ControlCollection</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.ControlEventHandler ControlRemoved;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_CursorChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CursorChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.Control.Cursor*</span> property changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler CursorChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Cursor_\" data-linktype=\"relative-path\">Cursor</a> property is changed by either a programmatic modification or user interaction.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_DockChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DockChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.Control.Dock*</span> property changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler DockChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Dock_\" data-linktype=\"relative-path\">Dock</a> property is changed by either a programmatic modification or user interaction.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_DoubleClick\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DoubleClick</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the control is double-clicked.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler DoubleClick;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A double-click is determined by the mouse settings of the user&#39;s operating system. The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks. The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Click\" data-linktype=\"relative-path\">Click</a> event is raised every time a control is double-clicked. For example, if you have event handlers for the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Click\" data-linktype=\"relative-path\">Click</a> and DoubleClick events of a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Click\" data-linktype=\"relative-path\">Click</a> and DoubleClick events are raised when the form is double-clicked and both methods are called. If a control is double-clicked and that control does not support the DoubleClick event, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Click\" data-linktype=\"relative-path\">Click</a> event might be raised twice.  </p>\n<p> You must set the <code>StandardDoubleClick</code> and <code>StandardClick</code> values of <a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">ControlStyles</a> to <code>true</code> for this event to be raised. These values might already be set to <code>true</code> if you are inheriting from existing Windows Forms controls.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The following events are not raised for the <a class=\"xref\" href=\"system.windows.forms.tabcontrol\" data-linktype=\"relative-path\">TabControl</a> class unless there is at least one <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> in the <a class=\"xref\" href=\"system.windows.forms.tabcontrol#System_Windows_Forms_TabControl_TabPages_\" data-linktype=\"relative-path\">TabPages</a> collection: <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Click\" data-linktype=\"relative-path\">Click</a>, DoubleClick, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseHover\" data-linktype=\"relative-path\">MouseHover</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseEnter\" data-linktype=\"relative-path\">MouseEnter</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseMove\" data-linktype=\"relative-path\">MouseMove</a>. If there is at least one <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> in the collection, and the user interacts with the tab control&#39;s header (where the <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> names appear), the <a class=\"xref\" href=\"system.windows.forms.tabcontrol\" data-linktype=\"relative-path\">TabControl</a> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> raises the appropriate event.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_DragDrop\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DragDrop</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when a drag-and-drop operation is completed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.DragEventHandler DragDrop;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.forms.drageventargs#System_Windows_Forms_DragEventArgs_X_\" data-linktype=\"relative-path\">X</a> and <a class=\"xref\" href=\"system.windows.forms.drageventargs#System_Windows_Forms_DragEventArgs_Y_\" data-linktype=\"relative-path\">Y</a> properties of the <a class=\"xref\" href=\"system.windows.forms.drageventargs\" data-linktype=\"relative-path\">DragEventArgs</a> are in screen coordinates, not client coordinates. The following line of Visual C# code converts the properties to a client <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>.  </p>\n<pre><code>Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));  \n</code></pre><div class=\"NOTE\"><h5>Note</h5><p> In versions earlier than .NET Framework 2.0, if you put a <a class=\"xref\" href=\"system.windows.forms.usercontrol\" data-linktype=\"relative-path\">UserControl</a> with <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragEnter\" data-linktype=\"relative-path\">DragEnter</a> and DragDrop events on a Windows Form and drag and drop something onto the <a class=\"xref\" href=\"system.windows.forms.usercontrol\" data-linktype=\"relative-path\">UserControl</a> at design time, the <code>DropDrop</code> and <code>DropEnter</code> events are raised. However, when you close and reopen the solution, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragEnter\" data-linktype=\"relative-path\">DragEnter</a> and DragDrop events are not raised again.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_DragEnter\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DragEnter</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when an object is dragged into the control&#39;s bounds.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.DragEventHandler DragEnter;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The DragEnter event is raised when the user first drags the mouse cursor over the control during a drag-and-drop operation.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In versions earlier than .NET Framework 2.0, if you put a <a class=\"xref\" href=\"system.windows.forms.usercontrol\" data-linktype=\"relative-path\">UserControl</a> with DragEnter and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragDrop\" data-linktype=\"relative-path\">DragDrop</a> events on a Windows Form and drag and drop something onto the <a class=\"xref\" href=\"system.windows.forms.usercontrol\" data-linktype=\"relative-path\">UserControl</a> at design time, the <code>DropDrop</code> and <code>DropEnter</code> events are raised. However, when you close and reopen the solution, the DragEnter and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragDrop\" data-linktype=\"relative-path\">DragDrop</a> events are not raised again.  </p>\n</div>\n<p> The following describes how and when events related to drag-and-drop operations are raised.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoDragDrop_\" data-linktype=\"relative-path\">DoDragDrop</a> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.  </p>\n<p> If the control is a valid drop target, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GiveFeedback\" data-linktype=\"relative-path\">GiveFeedback</a> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <a class=\"xref\" href=\"system.windows.forms.dragdropeffects\" data-linktype=\"relative-path\">DragDropEffects</a> enumeration.  </p>\n<p> Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.  </p>\n<ul>\n<li><p>If the user moves out of a window, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragLeave\" data-linktype=\"relative-path\">DragLeave</a> event is raised.  </p>\n</li>\n<li><p>If the mouse enters another control, the DragEnter for that control is raised.  </p>\n</li>\n<li><p>If the mouse moves but stays within the same control, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">DragOver</a> event is raised.  </p>\n<p>If there is a change in the keyboard or mouse button state, the<a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_QueryContinueDrag\" data-linktype=\"relative-path\">QueryContinueDrag</a> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <a class=\"xref\" href=\"system.windows.forms.querycontinuedrageventargs#System_Windows_Forms_QueryContinueDragEventArgs_Action_\" data-linktype=\"relative-path\">Action</a> property of the event&#39;s <a class=\"xref\" href=\"system.windows.forms.querycontinuedrageventargs\" data-linktype=\"relative-path\">QueryContinueDragEventArgs</a>.  </p>\n</li>\n<li><p>If the value of <a class=\"xref\" href=\"system.windows.forms.dragaction\" data-linktype=\"relative-path\">DragAction</a> is <code>Continue</code>, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">DragOver</a> event is raised to continue the operation and the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GiveFeedback\" data-linktype=\"relative-path\">GiveFeedback</a> event is raised with the new effect so appropriate visual feedback can be set. For a list of valid drop effects, see the <a class=\"xref\" href=\"system.windows.forms.dragdropeffects\" data-linktype=\"relative-path\">DragDropEffects</a> enumeration.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">DragOver</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GiveFeedback\" data-linktype=\"relative-path\">GiveFeedback</a> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse&#39;s position.  </p>\n</div>\n</li>\n<li><p>If the value of <a class=\"xref\" href=\"system.windows.forms.dragaction\" data-linktype=\"relative-path\">DragAction</a> is <code>Drop</code>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.  </p>\n</li>\n<li><p>If the value of <a class=\"xref\" href=\"system.windows.forms.dragaction\" data-linktype=\"relative-path\">DragAction</a> is <code>Cancel</code>, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragLeave\" data-linktype=\"relative-path\">DragLeave</a> event is raised.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.windows.forms.drageventargs#System_Windows_Forms_DragEventArgs_X_\" data-linktype=\"relative-path\">X</a> and <a class=\"xref\" href=\"system.windows.forms.drageventargs#System_Windows_Forms_DragEventArgs_Y_\" data-linktype=\"relative-path\">Y</a> properties of the <a class=\"xref\" href=\"system.windows.forms.drageventargs\" data-linktype=\"relative-path\">DragEventArgs</a> are in screen coordinates, not client coordinates. The following line of Visual C# code converts the properties to a client <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>.  </p>\n</div>\n<pre><code>Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));  \n</code></pre><p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_DragLeave\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DragLeave</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when an object is dragged out of the control&#39;s bounds.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler DragLeave;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The DragLeave event is raised when the user drags the cursor out of the control or the user cancels the current drag-and-drop operation.  </p>\n<p> The following describes how and when events related to drag-and-drop operations are raised.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoDragDrop_\" data-linktype=\"relative-path\">DoDragDrop</a> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.  </p>\n<p> If the control is a valid drop target, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GiveFeedback\" data-linktype=\"relative-path\">GiveFeedback</a> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <a class=\"xref\" href=\"system.windows.forms.dragdropeffects\" data-linktype=\"relative-path\">DragDropEffects</a> enumeration.  </p>\n<p> Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.  </p>\n<ul>\n<li><p>If the user moves out of a window, the DragLeave event is raised.  </p>\n</li>\n<li><p>If the mouse enters another control, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragEnter\" data-linktype=\"relative-path\">DragEnter</a> for that control is raised.  </p>\n</li>\n<li><p>If the mouse moves but stays within the same control, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">DragOver</a> event is raised.  </p>\n<p>If there is a change in the keyboard or mouse button state, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_QueryContinueDrag\" data-linktype=\"relative-path\">QueryContinueDrag</a> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <a class=\"xref\" href=\"system.windows.forms.querycontinuedrageventargs#System_Windows_Forms_QueryContinueDragEventArgs_Action_\" data-linktype=\"relative-path\">Action</a> property of the event&#39;s <a class=\"xref\" href=\"system.windows.forms.querycontinuedrageventargs\" data-linktype=\"relative-path\">QueryContinueDragEventArgs</a>.  </p>\n</li>\n<li><p>If the value of <a class=\"xref\" href=\"system.windows.forms.dragaction\" data-linktype=\"relative-path\">DragAction</a> is <code>Continue</code>, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">DragOver</a> event is raised to continue the operation and the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GiveFeedback\" data-linktype=\"relative-path\">GiveFeedback</a> event is raised with the new effect so appropriate visual feedback can be set. For a list of valid drop effects, see the <a class=\"xref\" href=\"system.windows.forms.dragdropeffects\" data-linktype=\"relative-path\">DragDropEffects</a> enumeration.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">DragOver</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GiveFeedback\" data-linktype=\"relative-path\">GiveFeedback</a> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse&#39;s position.  </p>\n</div>\n</li>\n<li><p>If the value of <a class=\"xref\" href=\"system.windows.forms.dragaction\" data-linktype=\"relative-path\">DragAction</a> is <code>Drop</code>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.  </p>\n</li>\n<li><p>If the value of <a class=\"xref\" href=\"system.windows.forms.dragaction\" data-linktype=\"relative-path\">DragAction</a> is <code>Cancel</code>, the DragLeave event is raised.  </p>\n<p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_DragOver\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DragOver</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when an object is dragged over the control&#39;s bounds.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.DragEventHandler DragOver;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The DragOver event is raised when the mouse cursor moves within the bounds of the control during a drag-and-drop operation.  </p>\n<p> The following describes how and when events related to drag-and-drop operations are raised.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoDragDrop_\" data-linktype=\"relative-path\">DoDragDrop</a> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.  </p>\n<p> If the control is a valid drop target, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GiveFeedback\" data-linktype=\"relative-path\">GiveFeedback</a> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <a class=\"xref\" href=\"system.windows.forms.dragdropeffects\" data-linktype=\"relative-path\">DragDropEffects</a> enumeration.  </p>\n<p> Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.  </p>\n<ul>\n<li><p>If the user moves out of a window, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragLeave\" data-linktype=\"relative-path\">DragLeave</a> event is raised.  </p>\n</li>\n<li><p>If the mouse enters another control, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragEnter\" data-linktype=\"relative-path\">DragEnter</a> for that control is raised.  </p>\n</li>\n<li><p>If the mouse moves but stays within the same control, the DragOver event is raised.  </p>\n<p>If there is a change in the keyboard or mouse button state, the<a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_QueryContinueDrag\" data-linktype=\"relative-path\">QueryContinueDrag</a> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <a class=\"xref\" href=\"system.windows.forms.querycontinuedrageventargs#System_Windows_Forms_QueryContinueDragEventArgs_Action_\" data-linktype=\"relative-path\">Action</a> property of the event&#39;s <a class=\"xref\" href=\"system.windows.forms.querycontinuedrageventargs\" data-linktype=\"relative-path\">QueryContinueDragEventArgs</a>.  </p>\n</li>\n<li><p>If the value of <a class=\"xref\" href=\"system.windows.forms.dragaction\" data-linktype=\"relative-path\">DragAction</a> value is <code>Continue</code>, the DragOver event is raised to continue the operation and the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GiveFeedback\" data-linktype=\"relative-path\">GiveFeedback</a> event is raised with the new effect so appropriate visual feedback can be set. For a list of valid drop effects, see the <a class=\"xref\" href=\"system.windows.forms.dragdropeffects\" data-linktype=\"relative-path\">DragDropEffects</a> enumeration.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The DragOver and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GiveFeedback\" data-linktype=\"relative-path\">GiveFeedback</a> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse&#39;s position.  </p>\n</div>\n</li>\n<li><p>If the value of <a class=\"xref\" href=\"system.windows.forms.dragaction\" data-linktype=\"relative-path\">DragAction</a> is <code>Drop</code>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.  </p>\n</li>\n<li><p>If the value of <a class=\"xref\" href=\"system.windows.forms.dragaction\" data-linktype=\"relative-path\">DragAction</a> is <code>Cancel</code>, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragLeave\" data-linktype=\"relative-path\">DragLeave</a> event is raised.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.windows.forms.drageventargs#System_Windows_Forms_DragEventArgs_X_\" data-linktype=\"relative-path\">X</a> and <a class=\"xref\" href=\"system.windows.forms.drageventargs#System_Windows_Forms_DragEventArgs_Y_\" data-linktype=\"relative-path\">Y</a> properties of the <a class=\"xref\" href=\"system.windows.forms.drageventargs\" data-linktype=\"relative-path\">DragEventArgs</a> are in screen coordinates, not client coordinates. The following line of C# code converts the properties to a client <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>:  </p>\n<p> Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));  </p>\n</div>\n<p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_EnabledChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EnabledChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the <span class=\"xref\">stem.Windows.Forms.Control.Enabled*</span> property value has changed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler EnabledChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enabled_\" data-linktype=\"relative-path\">Enabled</a> property is changed by either a programmatic modification or user interaction.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Enter\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Enter</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the control is entered.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler Enter;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Select_\" data-linktype=\"relative-path\">Select</a> or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SelectNextControl_\" data-linktype=\"relative-path\">SelectNextControl</a> methods, or by setting the <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_ActiveControl_\" data-linktype=\"relative-path\">ActiveControl</a> property to the current form, focus events occur in the following order:  </p>\n<ol>\n<li><p>Enter  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a>  \n\n<p>When you change the focus by using the mouse or by calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Focus_\" data-linktype=\"relative-path\">Focus</a> method, focus events occur in the following order:  </p>\n</li>\n<li><p>Enter  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a>  \n\n<p>If the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CausesValidation_\" data-linktype=\"relative-path\">CausesValidation</a> property is set to <code>false</code>, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a> events are suppressed.  </p>\n</li>\n</ol>\n<div class=\"NOTE\"><h5>Note</h5><p> The Enter and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a> events are suppressed by the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> class. The equivalent events in the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> class are the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Activated\" data-linktype=\"relative-path\">Activated</a> and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Deactivate\" data-linktype=\"relative-path\">Deactivate</a> events. The Enter and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached. For example, assume you have a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> with two <a class=\"xref\" href=\"system.windows.forms.groupbox\" data-linktype=\"relative-path\">GroupBox</a> controls, and each <a class=\"xref\" href=\"system.windows.forms.groupbox\" data-linktype=\"relative-path\">GroupBox</a> control has one <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control. When the caret is moved from one <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> to the other, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a> event is raised for the <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> and <a class=\"xref\" href=\"system.windows.forms.groupbox\" data-linktype=\"relative-path\">GroupBox</a>, and the Enter event is raised for the other <a class=\"xref\" href=\"system.windows.forms.groupbox\" data-linktype=\"relative-path\">GroupBox</a> and <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n</div>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Do not attempt to set focus from within the Enter, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a>, or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the <code>WM_KILLFOCUS</code> topic in the &quot;Keyboard Input Reference&quot; section and the &quot;Message Deadlocks&quot; section of the<a href=\"http://msdn.microsoft.com/library/windows/desktop/ms644927(v=vs.85).aspx\" data-linktype=\"external\">About Messages and Message Queues</a>topic.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_FontChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FontChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the <span class=\"xref\">stem.Windows.Forms.Control.Font*</span> property value changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler FontChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Font_\" data-linktype=\"relative-path\">Font</a> property is changed by either a programmatic modification or through interaction.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ForeColorChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ForeColorChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the <span class=\"xref\">stem.Windows.Forms.Control.ForeColor*</span> property value changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler ForeColorChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a> property is changed by either a programmatic modification or through interaction.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_GiveFeedback\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GiveFeedback</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs during a drag operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The GiveFeedback event is raised when a drag-and-drop operation is started. With the GiveFeedback event, the source of a drag event can modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.  </p>\n<p> The following describes how and when events related to drag-and-drop operations are raised.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoDragDrop_\" data-linktype=\"relative-path\">DoDragDrop</a> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.  </p>\n<p> If the control is a valid drop target, the GiveFeedback event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <a class=\"xref\" href=\"system.windows.forms.dragdropeffects\" data-linktype=\"relative-path\">DragDropEffects</a> enumeration.  </p>\n<p> Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.  </p>\n<ul>\n<li><p>If the user moves out of a window, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragLeave\" data-linktype=\"relative-path\">DragLeave</a> event is raised.  </p>\n</li>\n<li><p>If the mouse enters another control, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragEnter\" data-linktype=\"relative-path\">DragEnter</a> for that control is raised.  </p>\n</li>\n<li><p>If the mouse moves but stays within the same control, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">DragOver</a> event is raised.  </p>\n<p>If there is a change in the keyboard or mouse button state, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_QueryContinueDrag\" data-linktype=\"relative-path\">QueryContinueDrag</a> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <a class=\"xref\" href=\"system.windows.forms.querycontinuedrageventargs#System_Windows_Forms_QueryContinueDragEventArgs_Action_\" data-linktype=\"relative-path\">Action</a> property of the event&#39;s <a class=\"xref\" href=\"system.windows.forms.querycontinuedrageventargs\" data-linktype=\"relative-path\">QueryContinueDragEventArgs</a>.  </p>\n</li>\n<li><p>If the value of <a class=\"xref\" href=\"system.windows.forms.dragaction\" data-linktype=\"relative-path\">DragAction</a> is <code>Continue</code>, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">DragOver</a> event is raised to continue the operation and the GiveFeedback event is raised with the new effect so appropriate visual feedback can be set. For a list of valid drop effects, see the <a class=\"xref\" href=\"system.windows.forms.dragdropeffects\" data-linktype=\"relative-path\">DragDropEffects</a> enumeration.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">DragOver</a> and GiveFeedback events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse&#39;s position.  </p>\n</div>\n</li>\n<li><p>If the value of <a class=\"xref\" href=\"system.windows.forms.dragaction\" data-linktype=\"relative-path\">DragAction</a> is <code>Drop</code>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.  </p>\n</li>\n<li><p>If the value of <a class=\"xref\" href=\"system.windows.forms.dragaction\" data-linktype=\"relative-path\">DragAction</a> is <code>Cancel</code>, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragLeave\" data-linktype=\"relative-path\">DragLeave</a> event is raised.  </p>\n<p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_GotFocus\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GotFocus</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the control receives focus.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler GotFocus;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Select_\" data-linktype=\"relative-path\">Select</a> or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SelectNextControl_\" data-linktype=\"relative-path\">SelectNextControl</a> methods, or by setting the <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_ActiveControl_\" data-linktype=\"relative-path\">ActiveControl</a> property to the current form, focus events occur in the following order:  </p>\n<ol>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a>  \n</li>\n<li><p>GotFocus  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a>  \n\n<p>When you change the focus by using the mouse or by calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Focus_\" data-linktype=\"relative-path\">Focus</a> method, focus events occur in the following order:  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a>  \n</li>\n<li><p>GotFocus  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a>  \n\n<p>If the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CausesValidation_\" data-linktype=\"relative-path\">CausesValidation</a> property is set to <code>false</code>, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a> events are suppressed.  </p>\n<p><strong>Note</strong> The GotFocus and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages. Typically, the GotFocus and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a> events are only used when updating <a class=\"xref\" href=\"system.windows.forms.uicues\" data-linktype=\"relative-path\">UICues</a> or when writing custom controls. Instead the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a> events should be used for all controls except the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> class, which uses the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Activated\" data-linktype=\"relative-path\">Activated</a> and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Deactivate\" data-linktype=\"relative-path\">Deactivate</a> events. For more information about the GotFocus and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a> events, see the <a href=\"http://msdn.microsoft.com/library/windows/desktop/ms646283(v=vs.85).aspx\" data-linktype=\"external\">WM_SETFOCUS</a>and<a href=\"http://msdn.microsoft.com/library/windows/desktop/ms646282(v=vs.85).aspx\" data-linktype=\"external\">WM_KILLFOCUS</a> topics.  </p>\n</li>\n</ol>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Do not attempt to set focus from within the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a>, GotFocus, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a>, or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the <a href=\"http://msdn.microsoft.com/library/windows/desktop/ms646282(v=vs.85).aspx\" data-linktype=\"external\">WM_KILLFOCUS</a> topic.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_HandleCreated\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">HandleCreated</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when a handle is created for the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler HandleCreated;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A handle is created when the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> is displayed for the first time. For example, if a <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> is created that has <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Visible_\" data-linktype=\"relative-path\">Visible</a> set to <code>false</code>, the HandleCreated event will not be raised until <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Visible_\" data-linktype=\"relative-path\">Visible</a> is set to <code>true</code>.  </p>\n<p> For more information about handling events, see<a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_HandleDestroyed\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">HandleDestroyed</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the control&#39;s handle is in the process of being destroyed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler HandleDestroyed;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>During the HandleDestroyed event, the control is still a valid Windows control and the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Handle_\" data-linktype=\"relative-path\">Handle</a> can be recreated by calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RecreateHandle_\" data-linktype=\"relative-path\">RecreateHandle</a> method.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_HelpRequested\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">HelpRequested</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the user requests help for a control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.HelpEventHandler HelpRequested;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The HelpRequested event is commonly raised when the user presses the F1 key or an associated context-sensitive help button is clicked.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ImeModeChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ImeModeChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the <span class=\"xref\">stem.Windows.Forms.Control.ImeMode*</span> property has changed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler ImeModeChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ImeMode_\" data-linktype=\"relative-path\">ImeMode</a> property is changed by either a programmatic modification or through interaction.  </p>\n<p> Controls that do not support Input Method Managers will never raise this event.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Invalidated\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Invalidated</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when a control&#39;s display requires redrawing.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.InvalidateEventHandler Invalidated;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_KeyDown\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">KeyDown</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when a key is pressed while the control has focus.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.KeyEventHandler KeyDown;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Key events occur in the following order:  </p>\n<ol>\n<li><p>KeyDown  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyUp\" data-linktype=\"relative-path\">KeyUp</a>  \n\n<p>To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <a class=\"xref\" href=\"system.windows.forms.keypresseventargs#System_Windows_Forms_KeyPressEventArgs_Handled_\" data-linktype=\"relative-path\">Handled</a> property in your form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> event-handling method to <code>true</code>. Certain keys, such as the TAB, RETURN, ESC, and arrow keys are handled by controls automatically. To have these keys raise the KeyDown event, you must override the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsInputKey_\" data-linktype=\"relative-path\">IsInputKey</a> method in each control on your form. The code for the override of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsInputKey_\" data-linktype=\"relative-path\">IsInputKey</a> would need to determine if one of the special keys is pressed and return a value of <code>true</code>. Instead of overriding the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsInputKey_\" data-linktype=\"relative-path\">IsInputKey</a> method, you can handle the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PreviewKeyDown\" data-linktype=\"relative-path\">PreviewKeyDown</a> event and set the <a class=\"xref\" href=\"system.windows.forms.previewkeydowneventargs#System_Windows_Forms_PreviewKeyDownEventArgs_IsInputKey_\" data-linktype=\"relative-path\">IsInputKey</a>property to <code>true</code>. For a code example, see the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PreviewKeyDown\" data-linktype=\"relative-path\">PreviewKeyDown</a> event.  </p>\n<p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n</li>\n</ol>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_KeyPress\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">KeyPress</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when a character. space or backspace key is pressed while the control has focus.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.KeyPressEventHandler KeyPress;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Key events occur in the following order:  </p>\n<ol>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a>  \n</li>\n<li><p>KeyPress  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyUp\" data-linktype=\"relative-path\">KeyUp</a>  \n\n<p>The KeyPress event is not raised by non-character keys other than space and backspace; however, the non-character keys do raise the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyUp\" data-linktype=\"relative-path\">KeyUp</a> events.  </p>\n<p>Use the <a class=\"xref\" href=\"system.windows.forms.keypresseventargs#System_Windows_Forms_KeyPressEventArgs_KeyChar_\" data-linktype=\"relative-path\">KeyChar</a> property to sample keystrokes at run time and to consume or modify a subset of common keystrokes.  </p>\n<p>To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <a class=\"xref\" href=\"system.windows.forms.keypresseventargs#System_Windows_Forms_KeyPressEventArgs_Handled_\" data-linktype=\"relative-path\">Handled</a> property in your form&#39;s KeyPress event-handling method to <code>true</code>.  </p>\n<p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n</li>\n</ol>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_KeyUp\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">KeyUp</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when a key is released while the control has focus.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.KeyEventHandler KeyUp;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Key events occur in the following order:  </p>\n<ol>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a>  \n</li>\n<li><p>KeyUp  </p>\n<p>To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <a class=\"xref\" href=\"system.windows.forms.keypresseventargs#System_Windows_Forms_KeyPressEventArgs_Handled_\" data-linktype=\"relative-path\">Handled</a> property in your form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> event-handling method to <code>true</code>. Certain keys, such as the TAB, RETURN, ESC, and arrow keys are handled by controls automatically. To have these keys raise the KeyUp event, you must override the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsInputKey_\" data-linktype=\"relative-path\">IsInputKey</a> method in each control on your form. The code for the override of <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsInputKey_\" data-linktype=\"relative-path\">IsInputKey</a> would need to determine if one of the special keys is pressed and return a value of <code>true</code>.  </p>\n<p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n</li>\n</ol>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Layout\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Layout</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when a control should reposition its child controls.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.LayoutEventHandler Layout;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Layout event occurs when child controls are added or removed, when the bounds of the control changes, and when other changes occur that can affect the layout of the control. The layout event can be suppressed using the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SuspendLayout_\" data-linktype=\"relative-path\">SuspendLayout</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResumeLayout_\" data-linktype=\"relative-path\">ResumeLayout</a> methods. Suspending layout enables you to perform multiple actions on a control without having to perform a layout for each change. For example, if you resize and move a control, each operation would raise a Layout event.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Leave\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Leave</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the input focus leaves the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler Leave;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Select_\" data-linktype=\"relative-path\">Select</a> or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SelectNextControl_\" data-linktype=\"relative-path\">SelectNextControl</a> methods, or by setting the <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_ActiveControl_\" data-linktype=\"relative-path\">ActiveControl</a> property to the current form, focus events occur in the following order:  </p>\n<ol>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a>  \n</li>\n<li><p>Leave  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a>  \n\n<p>When you change the focus by using the mouse or by calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Focus_\" data-linktype=\"relative-path\">Focus</a> method, focus events occur in the following order:  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a>  \n</li>\n<li><p>Leave  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a>  \n\n<p>If the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CausesValidation_\" data-linktype=\"relative-path\">CausesValidation</a> property is set to <code>false</code>, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a> events are suppressed.  </p>\n</li>\n</ol>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a> and Leave events are suppressed by the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> class. The equivalent events in the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> class are the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Activated\" data-linktype=\"relative-path\">Activated</a> and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Deactivate\" data-linktype=\"relative-path\">Deactivate</a> events. The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a> and Leave events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached. For example, assume you have a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> with two <a class=\"xref\" href=\"system.windows.forms.groupbox\" data-linktype=\"relative-path\">GroupBox</a> controls, and each <a class=\"xref\" href=\"system.windows.forms.groupbox\" data-linktype=\"relative-path\">GroupBox</a> control has one <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control. When the caret is moved from one <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> to the other, the Leave event is raised for the <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> and <a class=\"xref\" href=\"system.windows.forms.groupbox\" data-linktype=\"relative-path\">GroupBox</a>, and the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a> event is raised for the other <a class=\"xref\" href=\"system.windows.forms.groupbox\" data-linktype=\"relative-path\">GroupBox</a> and <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n</div>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Do not attempt to set focus from within the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a>, Leave, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a>, or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the <a href=\"http://msdn.microsoft.com/library/windows/desktop/ms646282(v=vs.85).aspx\" data-linktype=\"external\">WM_KILLFOCUS</a> topic.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_LocationChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LocationChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the <span class=\"xref\">stem.Windows.Forms.Control.Location*</span> property value has changed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler LocationChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Location_\" data-linktype=\"relative-path\">Location</a> property is changed by either a programmatic modification or through interaction.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_LostFocus\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LostFocus</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the control loses focus.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler LostFocus;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Select_\" data-linktype=\"relative-path\">Select</a> or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SelectNextControl_\" data-linktype=\"relative-path\">SelectNextControl</a> methods, or by setting the <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_ActiveControl_\" data-linktype=\"relative-path\">ActiveControl</a> property to the current form, focus events occur in the following order:  </p>\n<ol>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a>  \n</li>\n<li><p>LostFocus  </p>\n<p>When you change the focus by using the mouse or by calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Focus_\" data-linktype=\"relative-path\">Focus</a> method, focus events occur in the following order:  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a>  \n</li>\n<li><p>LostFocus  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a>  \n\n<p>If the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CausesValidation_\" data-linktype=\"relative-path\">CausesValidation</a> property is set to <code>false</code>, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a> events are suppressed.  </p>\n<p>If the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property of the <a class=\"xref\" href=\"system.componentmodel.canceleventargs\" data-linktype=\"relative-path\">CancelEventArgs</a> is set to <code>true</code> in the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a> event delegate, all events that would usually occur after the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a> event are suppressed.  </p>\n</li>\n</ol>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a> and LostFocus events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages. Typically, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a> and LostFocus events are only used when updating <a class=\"xref\" href=\"system.windows.forms.uicues\" data-linktype=\"relative-path\">UICues</a> or when writing custom controls. Instead the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a> events should be used for all controls except the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> class, which uses the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Activated\" data-linktype=\"relative-path\">Activated</a> and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Deactivate\" data-linktype=\"relative-path\">Deactivate</a> events. For more information about the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a> and LostFocus events, see the <a href=\"http://msdn.microsoft.com/library/windows/desktop/ms646282(v=vs.85).aspx\" data-linktype=\"external\">WM_KILLFOCUS</a> and <a href=\"http://msdn.microsoft.com/library/windows/desktop/ms646282(v=vs.85).aspx\" data-linktype=\"external\">WM_KILLFOCUS</a> topics.  </p>\n</div>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Do not attempt to set focus from within the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a>, LostFocus, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a>, or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the <a href=\"http://msdn.microsoft.com/library/windows/desktop/ms646282(v=vs.85).aspx\" data-linktype=\"external\">WM_KILLFOCUS</a> topic.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_MarginChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MarginChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the control&#39;s margin changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler MarginChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_MouseCaptureChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MouseCaptureChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the control loses mouse capture.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler MouseCaptureChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>In rare scenarios, you might need to detect unexpected input. For example, consider the following scenarios.  </p>\n<ul>\n<li><p>During a mouse operation, the user opens the Start menu by pressing the Windows key or CTRL+ESC.  </p>\n</li>\n<li><p>During a mouse operation, the user switches to another program by pressing ALT+TAB.  </p>\n</li>\n<li><p>During a mouse operation, another program displays a window or a message box that takes focus away from the current application.  </p>\n<p>Mouse operations can include clicking and holding the mouse on a form or a control, or performing a mouse drag operation. If you have to detect when a form or a control loses mouse capture for these and related unexpected scenarios, you can use the MouseCaptureChanged event.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_MouseClick\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MouseClick</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the control is clicked by the mouse.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.MouseEventHandler MouseClick;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Depressing a mouse button when the cursor is over a control typically raises the following series of events from the control:  </p>\n<ol>\n<li><p><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a> event.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Click\" data-linktype=\"relative-path\">Click</a> event.  </p>\n</li>\n<li><p>MouseClick event.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a> event.  </p>\n<p>For this to occur, the various events cannot be disabled in the control&#39;s class.  </p>\n<p>Two single clicks that occur close enough in time, as determined by the mouse settings of the user&#39;s operating system, will generate a <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDoubleClick\" data-linktype=\"relative-path\">MouseDoubleClick</a> event instead of the second MouseClick event.  </p>\n</li>\n</ol>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Click\" data-linktype=\"relative-path\">Click</a> events are logically higher-level events of a control. They are often raised by other actions, such as pressing the ENTER key when the control has focus.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_MouseDoubleClick\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MouseDoubleClick</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the control is double clicked by the mouse.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The MouseDoubleClick event occurs when the user depresses a mouse button twice in quick succession when the cursor is over the control. The time interval that separates two single clicks from a double-click is determined by the mouse settings of the user&#39;s operating system.  </p>\n<p> The following series of events is raised by the control when such a user action takes place:  </p>\n<ol>\n<li><p><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a> event.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Click\" data-linktype=\"relative-path\">Click</a> event.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseClick\" data-linktype=\"relative-path\">MouseClick</a> event.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a> event.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a> event.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a> event.  </p>\n</li>\n<li><p>MouseDoubleClick event.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a> event.  </p>\n<p>For this to occur, the various events cannot be disabled in the control&#39;s class.  </p>\n</li>\n</ol>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a> events are logically higher-level events of a control. They may be raised by other user actions, such as shortcut key combinations.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_MouseDown\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MouseDown</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the mouse pointer is over the control and a mouse button is pressed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.MouseEventHandler MouseDown;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Mouse events occur in the following order:  </p>\n<ol>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseEnter\" data-linktype=\"relative-path\">MouseEnter</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseMove\" data-linktype=\"relative-path\">MouseMove</a>  \n</li>\n<li><p><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseHover\" data-linktype=\"relative-path\">MouseHover</a> / MouseDown / <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseWheel\" data-linktype=\"relative-path\">MouseWheel</a>  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a>  \n\n</li>\n</ol>\n<div class=\"NOTE\"><h5>Note</h5><p> The following events are not raised for the <a class=\"xref\" href=\"system.windows.forms.tabcontrol\" data-linktype=\"relative-path\">TabControl</a> class unless there is at least one <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> in the <a class=\"xref\" href=\"system.windows.forms.tabcontrol#System_Windows_Forms_TabControl_TabPages_\" data-linktype=\"relative-path\">TabPages</a> collection: <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Click\" data-linktype=\"relative-path\">Click</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a>, MouseDown, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseHover\" data-linktype=\"relative-path\">MouseHover</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseEnter\" data-linktype=\"relative-path\">MouseEnter</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseMove\" data-linktype=\"relative-path\">MouseMove</a>. If there is at least one <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> in the collection, and the user interacts with the tab control&#39;s header (where the <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> names appear), the <a class=\"xref\" href=\"system.windows.forms.tabcontrol\" data-linktype=\"relative-path\">TabControl</a> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> raises the appropriate event.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_MouseEnter\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MouseEnter</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the mouse pointer enters the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler MouseEnter;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Mouse events occur in the following order:  </p>\n<ol>\n<li><p>MouseEnter  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseMove\" data-linktype=\"relative-path\">MouseMove</a>  \n</li>\n<li><p><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseHover\" data-linktype=\"relative-path\">MouseHover</a> / <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a> / <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseWheel\" data-linktype=\"relative-path\">MouseWheel</a>  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a>  \n\n</li>\n</ol>\n<div class=\"NOTE\"><h5>Note</h5><p> The following events are not raised for the <a class=\"xref\" href=\"system.windows.forms.tabcontrol\" data-linktype=\"relative-path\">TabControl</a> class unless there is at least one <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> in the <a class=\"xref\" href=\"system.windows.forms.tabcontrol#System_Windows_Forms_TabControl_TabPages_\" data-linktype=\"relative-path\">TabPages</a> collection: <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Click\" data-linktype=\"relative-path\">Click</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseHover\" data-linktype=\"relative-path\">MouseHover</a>, MouseEnter, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseMove\" data-linktype=\"relative-path\">MouseMove</a>. If there is at least one <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> in the collection, and the user interacts with the tab control&#39;s header (where the <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> names appear), the <a class=\"xref\" href=\"system.windows.forms.tabcontrol\" data-linktype=\"relative-path\">TabControl</a> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> raises the appropriate event.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_MouseHover\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MouseHover</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the mouse pointer rests on the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler MouseHover;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A typical use of MouseHover is to display a tool tip when the mouse pauses on a control within a specified area around the control (the &quot;hover rectangle&quot;). The pause required for this event to be raised is specified in milliseconds by the <a class=\"xref\" href=\"system.windows.forms.systeminformation#System_Windows_Forms_SystemInformation_MouseHoverTime_\" data-linktype=\"relative-path\">MouseHoverTime</a> property.  </p>\n<p> The MouseHover event is defined and detected in connection with the <a class=\"xref\" href=\"system.windows.forms.systeminformation#System_Windows_Forms_SystemInformation_MouseHoverSize_\" data-linktype=\"relative-path\">MouseHoverSize</a> and <a class=\"xref\" href=\"system.windows.forms.systeminformation#System_Windows_Forms_SystemInformation_MouseHoverTime_\" data-linktype=\"relative-path\">MouseHoverTime</a> properties.  </p>\n<p> Mouse events occur in the following order:  </p>\n<ol>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseEnter\" data-linktype=\"relative-path\">MouseEnter</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseMove\" data-linktype=\"relative-path\">MouseMove</a>  \n</li>\n<li><p>MouseHover / <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a> / <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseWheel\" data-linktype=\"relative-path\">MouseWheel</a>  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a>  \n\n</li>\n</ol>\n<div class=\"NOTE\"><h5>Note</h5><p> The following events are not raised for the <a class=\"xref\" href=\"system.windows.forms.tabcontrol\" data-linktype=\"relative-path\">TabControl</a> class unless there is at least one <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> in the <a class=\"xref\" href=\"system.windows.forms.tabcontrol#System_Windows_Forms_TabControl_TabPages_\" data-linktype=\"relative-path\">TabPages</a> collection: <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Click\" data-linktype=\"relative-path\">Click</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a>, MouseHover, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseEnter\" data-linktype=\"relative-path\">MouseEnter</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseMove\" data-linktype=\"relative-path\">MouseMove</a>. If there is at least one <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> in the collection, and the user interacts with the tab control&#39;s header (where the <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> names appear), the <a class=\"xref\" href=\"system.windows.forms.tabcontrol\" data-linktype=\"relative-path\">TabControl</a> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> raises the appropriate event.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_MouseLeave\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MouseLeave</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the mouse pointer leaves the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler MouseLeave;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Mouse events occur in the following order:  </p>\n<ol>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseEnter\" data-linktype=\"relative-path\">MouseEnter</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseMove\" data-linktype=\"relative-path\">MouseMove</a>  \n</li>\n<li><p><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseHover\" data-linktype=\"relative-path\">MouseHover</a> / <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a> / <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseWheel\" data-linktype=\"relative-path\">MouseWheel</a>  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a>  \n</li>\n<li><p>MouseLeave  </p>\n</li>\n</ol>\n<div class=\"NOTE\"><h5>Note</h5><p> The following events are not raised for the <a class=\"xref\" href=\"system.windows.forms.tabcontrol\" data-linktype=\"relative-path\">TabControl</a> class unless there is at least one <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> in the <a class=\"xref\" href=\"system.windows.forms.tabcontrol#System_Windows_Forms_TabControl_TabPages_\" data-linktype=\"relative-path\">TabPages</a> collection: <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Click\" data-linktype=\"relative-path\">Click</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseHover\" data-linktype=\"relative-path\">MouseHover</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseEnter\" data-linktype=\"relative-path\">MouseEnter</a>, MouseLeave and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseMove\" data-linktype=\"relative-path\">MouseMove</a>. If there is at least one <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> in the collection, and the user interacts with the tab control&#39;s header (where the <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> names appear), the <a class=\"xref\" href=\"system.windows.forms.tabcontrol\" data-linktype=\"relative-path\">TabControl</a> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> raises the appropriate event.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_MouseMove\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MouseMove</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the mouse pointer is moved over the control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.MouseEventHandler MouseMove;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Typical uses of MouseMove are to change the control&#39;s color or to paint a raised rectangle around the control.  </p>\n<p> Mouse events occur in the following order:  </p>\n<ol>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseEnter\" data-linktype=\"relative-path\">MouseEnter</a>  \n</li>\n<li><p>MouseMove  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseHover\" data-linktype=\"relative-path\">MouseHover</a> / <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a> / <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseWheel\" data-linktype=\"relative-path\">MouseWheel</a>  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a>  \n\n</li>\n</ol>\n<div class=\"NOTE\"><h5>Note</h5><p> The following events are not raised for the <a class=\"xref\" href=\"system.windows.forms.tabcontrol\" data-linktype=\"relative-path\">TabControl</a> class unless there is at least one <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> in the <a class=\"xref\" href=\"system.windows.forms.tabcontrol#System_Windows_Forms_TabControl_TabPages_\" data-linktype=\"relative-path\">TabPages</a> collection: <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Click\" data-linktype=\"relative-path\">Click</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseHover\" data-linktype=\"relative-path\">MouseHover</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseEnter\" data-linktype=\"relative-path\">MouseEnter</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a> and MouseMove. If there is at least one <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> in the collection, and the user interacts with the tab control&#39;s header (where the <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> names appear), the <a class=\"xref\" href=\"system.windows.forms.tabcontrol\" data-linktype=\"relative-path\">TabControl</a> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> raises the appropriate event.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_MouseUp\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MouseUp</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the mouse pointer is over the control and a mouse button is released.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.MouseEventHandler MouseUp;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Mouse events occur in the following order:  </p>\n<ol>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseEnter\" data-linktype=\"relative-path\">MouseEnter</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseMove\" data-linktype=\"relative-path\">MouseMove</a>  \n</li>\n<li><p><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseHover\" data-linktype=\"relative-path\">MouseHover</a> / <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a> / <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseWheel\" data-linktype=\"relative-path\">MouseWheel</a>  </p>\n</li>\n<li><p>MouseUp  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a>  \n\n</li>\n</ol>\n<div class=\"NOTE\"><h5>Note</h5><p> The following events are not raised for the <a class=\"xref\" href=\"system.windows.forms.tabcontrol\" data-linktype=\"relative-path\">TabControl</a> class unless there is at least one <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> in the <a class=\"xref\" href=\"system.windows.forms.tabcontrol#System_Windows_Forms_TabControl_TabPages_\" data-linktype=\"relative-path\">TabPages</a> collection: <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Click\" data-linktype=\"relative-path\">Click</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a>, MouseUp, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseHover\" data-linktype=\"relative-path\">MouseHover</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseEnter\" data-linktype=\"relative-path\">MouseEnter</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseMove\" data-linktype=\"relative-path\">MouseMove</a>. If there is at least one <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> in the collection, and the user interacts with the tab control&#39;s header (where the <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> names appear), the <a class=\"xref\" href=\"system.windows.forms.tabcontrol\" data-linktype=\"relative-path\">TabControl</a> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <a class=\"xref\" href=\"system.windows.forms.tabpage\" data-linktype=\"relative-path\">TabPage</a> raises the appropriate event.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_MouseWheel\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MouseWheel</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the mouse wheel moves while the control has focus.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.MouseEventHandler MouseWheel;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When handling the MouseWheel event it is important to follow the user interface (UI) standards associated with the mouse wheel. The <a class=\"xref\" href=\"system.windows.forms.mouseeventargs#System_Windows_Forms_MouseEventArgs_Delta_\" data-linktype=\"relative-path\">Delta</a> property value indicates the amount the mouse wheel has been moved. The UI should scroll when the accumulated delta is plus or minus 120. The UI should scroll the number of logical lines returned by the <a class=\"xref\" href=\"system.windows.forms.systeminformation#System_Windows_Forms_SystemInformation_MouseWheelScrollLines_\" data-linktype=\"relative-path\">MouseWheelScrollLines</a> property for every delta value reached. You can also scroll more smoothly in smaller that 120 unit increments, however the ratio should remain constant, that is <a class=\"xref\" href=\"system.windows.forms.systeminformation#System_Windows_Forms_SystemInformation_MouseWheelScrollLines_\" data-linktype=\"relative-path\">MouseWheelScrollLines</a> lines scrolled per 120 delta units of wheel movement.  </p>\n<p> For more information about handling mouse wheel messages, see the<a href=\"http://msdn.microsoft.com/library/windows/desktop/ms645617(v=vs.85).aspx\" data-linktype=\"external\">WM_MOUSEWHEEL</a>topic.  </p>\n<p> Mouse events occur in the following order:  </p>\n<ol>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseEnter\" data-linktype=\"relative-path\">MouseEnter</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseMove\" data-linktype=\"relative-path\">MouseMove</a>  \n</li>\n<li><p><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseHover\" data-linktype=\"relative-path\">MouseHover</a> / <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a> / MouseWheel  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a>  \n\n<p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n</li>\n</ol>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Move\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Move</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the control is moved.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler Move;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_PaddingChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PaddingChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the control&#39;s padding changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler PaddingChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Paint\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Paint</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the control is redrawn.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.PaintEventHandler Paint;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Paint event is raised when the control is redrawn. It passes an instance of <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> to the method(s) that handles the Paint event.  </p>\n<p> When creating a new custom control or an inherited control with a different visual appearance, you must provide code to render the control by overriding the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> method. For more information, see <a href=\"../Topic/Overriding%20the%20OnPaint%20Method.md\" data-linktype=\"relative-path\">Overriding the OnPaint Method</a> and <a href=\"../Topic/Custom%20Control%20Painting%20and%20Rendering.md\" data-linktype=\"relative-path\">Custom Control Painting and Rendering</a>.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_ParentChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ParentChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the <span class=\"xref\">stem.Windows.Forms.Control.Parent*</span> property value changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler ParentChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Parent_\" data-linktype=\"relative-path\">Parent</a> property is changed by either a programmatic modification or user interaction.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_PreviewKeyDown\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PreviewKeyDown</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs before the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a> event when a key is pressed while focus is on this control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.PreviewKeyDownEventHandler PreviewKeyDown;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Some key presses, such as the TAB, RETURN, ESC, and arrow keys, are typically ignored by some controls because they are not considered input key presses. For example, by default, a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> control ignores the arrow keys. Pressing the arrow keys typically causes the focus to move to the previous or next control. The arrow keys are considered navigation keys and pressing these keys typically do not raise the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a> event for a<a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>. However, pressing the arrow keys for a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> does raise the PreviewKeyDown event. By handling the PreviewKeyDown event for a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> and setting the <a class=\"xref\" href=\"system.windows.forms.previewkeydowneventargs#System_Windows_Forms_PreviewKeyDownEventArgs_IsInputKey_\" data-linktype=\"relative-path\">IsInputKey</a> property to <code>true</code>, you can raise the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a> event when the arrow keys are pressed. However, if you handle the arrow keys, the focus will no longer move to the previous or next control.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_QueryAccessibilityHelp\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">QueryAccessibilityHelp</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> is providing help to accessibility applications.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.QueryAccessibilityHelpEventHandler QueryAccessibilityHelp;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You should use the <a class=\"xref\" href=\"system.windows.forms.helpprovider\" data-linktype=\"relative-path\">HelpProvider</a> class to enable users to invoke help on your accessible object by pressing the F1 key. Using the <a class=\"xref\" href=\"system.windows.forms.helpprovider\" data-linktype=\"relative-path\">HelpProvider</a> provides you with complete information in the <a class=\"xref\" href=\"system.windows.forms.queryaccessibilityhelpeventargs\" data-linktype=\"relative-path\">QueryAccessibilityHelpEventArgs</a>. For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_QueryContinueDrag\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">QueryContinueDrag</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The QueryContinueDrag event is raised when there is a change in the keyboard or mouse button state during a drag-and-drop operation. The QueryContinueDrag event enables the drag source to determine whether the drag-and-drop operation should be canceled.  </p>\n<p> The following describes how and when events related to drag-and-drop operations are raised.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoDragDrop_\" data-linktype=\"relative-path\">DoDragDrop</a> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.  </p>\n<p> If the control is a valid drop target, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GiveFeedback\" data-linktype=\"relative-path\">GiveFeedback</a> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <a class=\"xref\" href=\"system.windows.forms.dragdropeffects\" data-linktype=\"relative-path\">DragDropEffects</a> enumeration.  </p>\n<p> Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.  </p>\n<ul>\n<li><p>If the user moves out of a window, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragLeave\" data-linktype=\"relative-path\">DragLeave</a> event is raised.  </p>\n</li>\n<li><p>If the mouse enters another control, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragEnter\" data-linktype=\"relative-path\">DragEnter</a> for that control is raised.  </p>\n</li>\n<li><p>If the mouse moves but stays within the same control, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">DragOver</a> event is raised.  </p>\n<p>If there is a change in the keyboard or mouse button state, theQueryContinueDrag event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <a class=\"xref\" href=\"system.windows.forms.querycontinuedrageventargs#System_Windows_Forms_QueryContinueDragEventArgs_Action_\" data-linktype=\"relative-path\">Action</a> property of the event&#39;s <a class=\"xref\" href=\"system.windows.forms.querycontinuedrageventargs\" data-linktype=\"relative-path\">QueryContinueDragEventArgs</a>.  </p>\n</li>\n<li><p>If the value of <a class=\"xref\" href=\"system.windows.forms.dragaction\" data-linktype=\"relative-path\">DragAction</a> is <code>Continue</code>, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">DragOver</a> event is raised to continue the operation and the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GiveFeedback\" data-linktype=\"relative-path\">GiveFeedback</a> event is raised with the new effect so appropriate visual feedback can be set. For a list of valid drop effects, see the <a class=\"xref\" href=\"system.windows.forms.dragdropeffects\" data-linktype=\"relative-path\">DragDropEffects</a> enumeration.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">DragOver</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GiveFeedback\" data-linktype=\"relative-path\">GiveFeedback</a> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse&#39;s position.  </p>\n</div>\n</li>\n<li><p>If the value of <a class=\"xref\" href=\"system.windows.forms.dragaction\" data-linktype=\"relative-path\">DragAction</a> is <code>Drop</code>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.  </p>\n</li>\n<li><p>If the value of <a class=\"xref\" href=\"system.windows.forms.dragaction\" data-linktype=\"relative-path\">DragAction</a> is <code>Cancel</code>, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragLeave\" data-linktype=\"relative-path\">DragLeave</a> event is raised.  </p>\n<p>By default, the QueryContinueDrag event sets <a class=\"xref\" href=\"system.windows.forms.querycontinuedrageventargs#System_Windows_Forms_QueryContinueDragEventArgs_Action_\" data-linktype=\"relative-path\">Action</a> to <code>Cancel</code> in <a class=\"xref\" href=\"system.windows.forms.dragaction\" data-linktype=\"relative-path\">DragAction</a> if the ESC key was pressed and sets <a class=\"xref\" href=\"system.windows.forms.querycontinuedrageventargs#System_Windows_Forms_QueryContinueDragEventArgs_Action_\" data-linktype=\"relative-path\">Action</a> to <code>Drop</code> in <a class=\"xref\" href=\"system.windows.forms.dragaction\" data-linktype=\"relative-path\">DragAction</a> if the left, middle, or right mouse button is pressed.  </p>\n<p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_RegionChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RegionChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.Control.Region*</span> property changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler RegionChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Resize\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Resize</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the control is resized.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler Resize;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To determine the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Size_\" data-linktype=\"relative-path\">Size</a> of the resized control, you can cast the <code>sender</code> parameter of the registered <a class=\"xref\" href=\"system.windows.forms.controleventhandler\" data-linktype=\"relative-path\">ControlEventHandler</a> method  to a <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and get its <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Size_\" data-linktype=\"relative-path\">Size</a> property (or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Height_\" data-linktype=\"relative-path\">Height</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Width_\" data-linktype=\"relative-path\">Width</a> properties individually).  </p>\n<p> To handle custom layouts, use the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Layout\" data-linktype=\"relative-path\">Layout</a> event instead of the Resize event. The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Layout\" data-linktype=\"relative-path\">Layout</a> event is raised in response to a Resize event, but also in response to other changes that affect the layout of the control.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_RightToLeftChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RightToLeftChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the <span class=\"xref\">stem.Windows.Forms.Control.RightToLeft*</span> property value changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler RightToLeftChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeft_\" data-linktype=\"relative-path\">RightToLeft</a> property is changed by either a programmatic modification or user interaction.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_SizeChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SizeChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the <span class=\"xref\">stem.Windows.Forms.Control.Size*</span> property value changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler SizeChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>It is preferable to use the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Layout\" data-linktype=\"relative-path\">Layout</a> event to handle custom layouts. The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Layout\" data-linktype=\"relative-path\">Layout</a> event is raised in response to <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Resize\" data-linktype=\"relative-path\">Resize</a> events, but also in other conditions when layout might need to be applied.  </p>\n<p> This event is raised if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Size_\" data-linktype=\"relative-path\">Size</a> property is changed by either a programmatic modification or user interaction.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_StyleChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">StyleChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the control style changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler StyleChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The StyleChanged event occurs when <a class=\"xref\" href=\"system.windows.forms.controlstyles\" data-linktype=\"relative-path\">ControlStyles</a> flags have been added or changed.  </p>\n<p> This event is raised if the control style is changed by either a programmatic modification or user interaction.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_SystemColorsChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SystemColorsChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the system colors change.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler SystemColorsChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised if the <a class=\"xref\" href=\"system.drawing.systemcolors\" data-linktype=\"relative-path\">SystemColors</a> is changed by either a programmatic modification or user interaction.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_TabIndexChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TabIndexChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the <span class=\"xref\">stem.Windows.Forms.Control.TabIndex*</span> property value changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler TabIndexChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TabIndex_\" data-linktype=\"relative-path\">TabIndex</a> property is changed by either a programmatic modification or user interaction.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_TabStopChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TabStopChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the <span class=\"xref\">stem.Windows.Forms.Control.TabStop*</span> property value changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler TabStopChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TabStop_\" data-linktype=\"relative-path\">TabStop</a> property is changed by either a programmatic modification or user interaction.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_TextChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TextChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the <span class=\"xref\">stem.Windows.Forms.Control.Text*</span> property value changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler TextChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Text_\" data-linktype=\"relative-path\">Text</a> property is changed by either a programmatic modification or user interaction.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Validated\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Validated</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the control is finished validating.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler Validated;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Select_\" data-linktype=\"relative-path\">Select</a> or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SelectNextControl_\" data-linktype=\"relative-path\">SelectNextControl</a> methods, or by setting the <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_ActiveControl_\" data-linktype=\"relative-path\">ActiveControl</a> property to the current form, focus events occur in the following order:  </p>\n<ol>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a>  \n</li>\n<li><p>Validated  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a>  \n\n<p>When you change the focus by using the mouse or by calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Focus_\" data-linktype=\"relative-path\">Focus</a> method, focus events occur in the following order:  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a>  \n</li>\n<li><p>Validated  </p>\n<p>If the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CausesValidation_\" data-linktype=\"relative-path\">CausesValidation</a> property is set to <code>false</code>, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a> and Validated events are suppressed.  </p>\n<p>If the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property of the <a class=\"xref\" href=\"system.componentmodel.canceleventargs\" data-linktype=\"relative-path\">CancelEventArgs</a> is set to <code>true</code> in the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a> event delegate, all events that would usually occur after the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a> event are suppressed.  </p>\n</li>\n</ol>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Do not attempt to set focus from within the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a>, or Validated event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the<a href=\"http://msdn.microsoft.com/library/windows/desktop/ms632614(v=vs.85).aspx\" data-linktype=\"external\">WM_KILLFOCUS</a>topic, and the &quot;Message Deadlocks&quot; section of the <a href=\"http://msdn.microsoft.com/library/windows/desktop/ms644927(v=vs.85).aspx\" data-linktype=\"external\">About Messages and Message Queues</a> topic.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_Validating\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Validating</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the control is validating.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.ComponentModel.CancelEventHandler Validating;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Select_\" data-linktype=\"relative-path\">Select</a>or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SelectNextControl_\" data-linktype=\"relative-path\">SelectNextControl</a> methods, or by setting the <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_ActiveControl_\" data-linktype=\"relative-path\">ActiveControl</a> property to the current form, focus events occur in the following order:  </p>\n<ol>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a>  \n</li>\n<li><p>Validating  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a>  \n\n<p>When you change the focus by using the mouse or by calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Focus_\" data-linktype=\"relative-path\">Focus</a> method, focus events occur in the following order:  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a>  \n</li>\n<li><p>Validating  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a>  \n\n<p>If the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CausesValidation_\" data-linktype=\"relative-path\">CausesValidation</a> property is set to <code>false</code>, the Validating and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a> events are suppressed.  </p>\n<p>If the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property of the <a class=\"xref\" href=\"system.componentmodel.canceleventargs\" data-linktype=\"relative-path\">CancelEventArgs</a> is set to <code>true</code> in the Validating event delegate, all events that would usually occur after the Validating event are suppressed.  </p>\n</li>\n</ol>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Do not attempt to set focus from within the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a>, Validating, or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the <code>WM_KILLFOCUS</code> topic in the &quot;Keyboard Input Reference&quot; section, and the &quot;Message Deadlocks&quot; section of the &quot;About Messages and Message Queues&quot; topic in the MSDN library at <a href=\"http://msdn.microsoft.com/library\" data-linktype=\"external\">http://msdn.microsoft.com/library</a>.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_VisibleChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">VisibleChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the <span class=\"xref\">stem.Windows.Forms.Control.Visible*</span> property value changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler VisibleChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Visible_\" data-linktype=\"relative-path\">Visible</a> property is changed by either a programmatic modification or user interaction.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Explicit Interface Implementations\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_System_Windows_Forms_IDropTarget_OnDragDrop_System_Windows_Forms_DragEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IDropTarget.OnDragDrop(DragEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragDrop\" data-linktype=\"relative-path\">DragDrop</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void IDropTarget.OnDragDrop (System.Windows.Forms.DragEventArgs drgEvent);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>drgEvent</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.drageventargs\" data-linktype=\"relative-path\">DragEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.drageventargs\" data-linktype=\"relative-path\">DragEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_System_Windows_Forms_IDropTarget_OnDragEnter_System_Windows_Forms_DragEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IDropTarget.OnDragEnter(DragEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragEnter\" data-linktype=\"relative-path\">DragEnter</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void IDropTarget.OnDragEnter (System.Windows.Forms.DragEventArgs drgEvent);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>drgEvent</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.drageventargs\" data-linktype=\"relative-path\">DragEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.drageventargs\" data-linktype=\"relative-path\">DragEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_System_Windows_Forms_IDropTarget_OnDragLeave_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IDropTarget.OnDragLeave(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragLeave\" data-linktype=\"relative-path\">DragLeave</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void IDropTarget.OnDragLeave (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Forms_Control_System_Windows_Forms_IDropTarget_OnDragOver_System_Windows_Forms_DragEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IDropTarget.OnDragOver(DragEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">DragOver</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void IDropTarget.OnDragOver (System.Windows.Forms.DragEventArgs drgEvent);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>drgEvent</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.drageventargs\" data-linktype=\"relative-path\">DragEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.forms.drageventargs\" data-linktype=\"relative-path\">DragEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.Control.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.Control.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.AccessibilityNotifyClients\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.AccessibilityObject\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.AccessibleDefaultActionDescription\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.AccessibleDescription\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.AccessibleName\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.AccessibleRole\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.AllowDrop\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Anchor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.AutoScrollOffset\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.AutoSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.AutoSizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_AutoSizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_AutoSizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.BackColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.BackColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_BackColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_BackColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.BackgroundImage\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.BackgroundImageChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_BackgroundImageChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_BackgroundImageChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.BackgroundImageLayout\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.BackgroundImageLayoutChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_BackgroundImageLayoutChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_BackgroundImageLayoutChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.BindingContext\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.BindingContextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_BindingContextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_BindingContextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Bottom\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Bounds\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.BringToFront\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.CanEnableIme\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.CanFocus\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.CanRaiseEvents\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.CanSelect\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Capture\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.CausesValidation\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.CausesValidationChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_CausesValidationChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_CausesValidationChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ChangeUICues\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_ChangeUICues\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_ChangeUICues\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Click\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_Click\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_Click\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ClientRectangle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ClientSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ClientSizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_ClientSizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_ClientSizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.CompanyName\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Contains\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ContainsFocus\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ContextMenu\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ContextMenuChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_ContextMenuChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_ContextMenuChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ContextMenuStrip\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ContextMenuStripChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_ContextMenuStripChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_ContextMenuStripChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ControlAdded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_ControlAdded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_ControlAdded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ControlRemoved\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_ControlRemoved\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_ControlRemoved\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Controls\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.CreateAccessibilityInstance\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.CreateControl\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.CreateControlsInstance\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Created\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.CreateGraphics\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.CreateHandle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.CreateParams\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Cursor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.CursorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_CursorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_CursorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.DataBindings\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.DefaultBackColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.DefaultCursor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.DefaultFont\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.DefaultForeColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.DefaultImeMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.DefaultMargin\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.DefaultMaximumSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.DefaultMinimumSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.DefaultPadding\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.DefaultSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.DefWndProc\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.DestroyHandle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.DisplayRectangle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Disposing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Dock\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.DockChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_DockChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_DockChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.DoDragDrop\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.DoubleBuffered\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.DoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_DoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_DoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.DragDrop\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_DragDrop\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_DragDrop\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.DragEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_DragEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_DragEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.DragLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_DragLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_DragLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.DragOver\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_DragOver\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_DragOver\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.DrawToBitmap\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Enabled\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.EnabledChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_EnabledChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_EnabledChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.EndInvoke\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Enter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_Enter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_Enter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.FindForm\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Focus\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Focused\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Font\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.FontChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_FontChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_FontChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.FontHeight\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ForeColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ForeColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_ForeColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_ForeColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.FromChildHandle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.FromHandle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.GetAccessibilityObjectById\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.GetAutoSizeMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.GetChildAtPoint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.GetContainerControl\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.GetNextControl\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.GetPreferredSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.GetScaledBounds\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.GetStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.GetTopLevel\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.GiveFeedback\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_GiveFeedback\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_GiveFeedback\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.GotFocus\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_GotFocus\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_GotFocus\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Handle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.HandleCreated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_HandleCreated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_HandleCreated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.HandleDestroyed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_HandleDestroyed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_HandleDestroyed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.HasChildren\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Height\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.HelpRequested\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_HelpRequested\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_HelpRequested\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Hide\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ImeMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ImeModeBase\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ImeModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_ImeModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_ImeModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.InitLayout\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Invalidate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Invalidated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_Invalidated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_Invalidated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.InvokeGotFocus\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.InvokeLostFocus\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.InvokeOnClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.InvokePaint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.InvokePaintBackground\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.InvokeRequired\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.IsAccessible\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.IsDisposed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.IsHandleCreated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.IsInputChar\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.IsInputKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.IsKeyLocked\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.IsMirrored\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.IsMnemonic\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.KeyDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_KeyDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_KeyDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.KeyPress\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_KeyPress\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_KeyPress\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.KeyUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_KeyUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_KeyUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Layout\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_Layout\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_Layout\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.LayoutEngine\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Leave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_Leave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_Leave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Left\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Location\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.LocationChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_LocationChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_LocationChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.LostFocus\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_LostFocus\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_LostFocus\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Margin\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.MarginChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_MarginChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_MarginChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.MaximumSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.MinimumSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ModifierKeys\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.MouseButtons\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.MouseCaptureChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_MouseCaptureChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_MouseCaptureChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.MouseClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_MouseClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_MouseClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.MouseDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_MouseDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_MouseDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.MouseDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_MouseDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_MouseDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.MouseEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_MouseEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_MouseEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.MouseHover\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_MouseHover\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_MouseHover\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.MouseLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_MouseLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_MouseLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.MouseMove\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_MouseMove\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_MouseMove\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.MousePosition\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.MouseUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_MouseUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_MouseUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.MouseWheel\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_MouseWheel\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_MouseWheel\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Move\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_Move\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_Move\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Name\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.NotifyInvalidate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnAutoSizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnBackColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnBackgroundImageChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnBackgroundImageLayoutChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnBindingContextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnCausesValidationChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnChangeUICues\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnClientSizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnContextMenuChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnContextMenuStripChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnControlAdded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnControlRemoved\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnCreateControl\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnCursorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnDockChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnDragDrop\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnDragEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnDragLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnDragOver\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnEnabledChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnFontChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnForeColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnGiveFeedback\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnGotFocus\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnHandleCreated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnHandleDestroyed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnHelpRequested\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnImeModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnInvalidated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnKeyDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnKeyPress\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnKeyUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnLayout\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnLocationChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnLostFocus\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnMarginChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnMouseCaptureChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnMouseClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnMouseDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnMouseDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnMouseEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnMouseHover\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnMouseLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnMouseMove\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnMouseUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnMouseWheel\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnMove\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnNotifyMessage\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnPaddingChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnPaint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnPaintBackground\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnParentBackColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnParentBackgroundImageChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnParentBindingContextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnParentChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnParentCursorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnParentEnabledChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnParentFontChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnParentForeColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnParentRightToLeftChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnParentVisibleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnPreviewKeyDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnPrint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnQueryContinueDrag\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnRegionChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnResize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnRightToLeftChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnSizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnSystemColorsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnTabIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnTabStopChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnTextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnValidated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnValidating\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.OnVisibleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Padding\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.PaddingChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_PaddingChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_PaddingChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Paint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_Paint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_Paint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Parent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ParentChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_ParentChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_ParentChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.PerformLayout\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.PointToClient\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.PointToScreen\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.PreferredSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.PreProcessControlMessage\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.PreProcessMessage\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.PreviewKeyDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_PreviewKeyDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_PreviewKeyDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ProcessCmdKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ProcessDialogChar\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ProcessDialogKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ProcessKeyEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ProcessKeyMessage\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ProcessKeyPreview\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ProcessMnemonic\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ProductName\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ProductVersion\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.PropagatingImeMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.QueryAccessibilityHelp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_QueryAccessibilityHelp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_QueryAccessibilityHelp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.QueryContinueDrag\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_QueryContinueDrag\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_QueryContinueDrag\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.RaiseDragEvent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.RaiseKeyEvent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.RaiseMouseEvent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.RaisePaintEvent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.RecreateHandle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.RecreatingHandle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.RectangleToClient\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.RectangleToScreen\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ReflectMessage\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Refresh\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Region\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.RegionChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_RegionChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_RegionChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.RenderRightToLeft\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ResetBackColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ResetBindings\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ResetCursor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ResetFont\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ResetForeColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ResetImeMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ResetMouseEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ResetRightToLeft\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ResetText\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Resize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_Resize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_Resize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ResizeRedraw\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ResumeLayout\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Right\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.RightToLeft\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.RightToLeftChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_RightToLeftChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_RightToLeftChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.RtlTranslateAlignment\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.RtlTranslateContent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.RtlTranslateHorizontal\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.RtlTranslateLeftRight\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Scale\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ScaleChildren\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ScaleControl\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ScaleCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Select\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.SelectNextControl\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.SendToBack\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.SetAutoSizeMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.SetBounds\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.SetBoundsCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.SetClientSizeCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.SetStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.SetTopLevel\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.SetVisibleCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Show\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ShowFocusCues\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.ShowKeyboardCues\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Site\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Size\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.SizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_SizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_SizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.SizeFromClientSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.StyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_StyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_StyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.SuspendLayout\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.IDropTarget.OnDragDrop\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.IDropTarget.OnDragEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.IDropTarget.OnDragLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.IDropTarget.OnDragOver\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.SystemColorsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_SystemColorsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_SystemColorsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.TabIndex\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.TabIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_TabIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_TabIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.TabStop\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.TabStopChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_TabStopChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_TabStopChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Tag\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Text\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.TextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_TextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_TextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Top\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.TopLevelControl\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Update\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.UpdateBounds\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.UpdateStyles\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.UpdateZOrder\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.UseWaitCursor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Validated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_Validated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_Validated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Validating\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_Validating\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_Validating\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Visible\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.VisibleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.add_VisibleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.remove_VisibleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.Width\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.WindowTarget\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Control.WndProc\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"5d8df2ba-8e1d-9267-1c8c-7264fae78cc5\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines the base class for controls, which are components with visual representation.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.Control\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.Control.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.Control.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.Control","System.Windows.Forms.Control..ctor","System.Windows.Forms.Control.AccessibilityNotifyClients","System.Windows.Forms.Control.AccessibilityObject","System.Windows.Forms.Control.AccessibleDefaultActionDescription","System.Windows.Forms.Control.AccessibleDescription","System.Windows.Forms.Control.AccessibleName","System.Windows.Forms.Control.AccessibleRole","System.Windows.Forms.Control.AllowDrop","System.Windows.Forms.Control.Anchor","System.Windows.Forms.Control.AutoScrollOffset","System.Windows.Forms.Control.AutoSize","System.Windows.Forms.Control.AutoSizeChanged","System.Windows.Forms.Control.add_AutoSizeChanged","System.Windows.Forms.Control.remove_AutoSizeChanged","System.Windows.Forms.Control.BackColor","System.Windows.Forms.Control.BackColorChanged","System.Windows.Forms.Control.add_BackColorChanged","System.Windows.Forms.Control.remove_BackColorChanged","System.Windows.Forms.Control.BackgroundImage","System.Windows.Forms.Control.BackgroundImageChanged","System.Windows.Forms.Control.add_BackgroundImageChanged","System.Windows.Forms.Control.remove_BackgroundImageChanged","System.Windows.Forms.Control.BackgroundImageLayout","System.Windows.Forms.Control.BackgroundImageLayoutChanged","System.Windows.Forms.Control.add_BackgroundImageLayoutChanged","System.Windows.Forms.Control.remove_BackgroundImageLayoutChanged","System.Windows.Forms.Control.BeginInvoke","System.Windows.Forms.Control.BindingContext","System.Windows.Forms.Control.BindingContextChanged","System.Windows.Forms.Control.add_BindingContextChanged","System.Windows.Forms.Control.remove_BindingContextChanged","System.Windows.Forms.Control.Bottom","System.Windows.Forms.Control.Bounds","System.Windows.Forms.Control.BringToFront","System.Windows.Forms.Control.CanEnableIme","System.Windows.Forms.Control.CanFocus","System.Windows.Forms.Control.CanRaiseEvents","System.Windows.Forms.Control.CanSelect","System.Windows.Forms.Control.Capture","System.Windows.Forms.Control.CausesValidation","System.Windows.Forms.Control.CausesValidationChanged","System.Windows.Forms.Control.add_CausesValidationChanged","System.Windows.Forms.Control.remove_CausesValidationChanged","System.Windows.Forms.Control.ChangeUICues","System.Windows.Forms.Control.add_ChangeUICues","System.Windows.Forms.Control.remove_ChangeUICues","System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls","System.Windows.Forms.Control.Click","System.Windows.Forms.Control.add_Click","System.Windows.Forms.Control.remove_Click","System.Windows.Forms.Control.ClientRectangle","System.Windows.Forms.Control.ClientSize","System.Windows.Forms.Control.ClientSizeChanged","System.Windows.Forms.Control.add_ClientSizeChanged","System.Windows.Forms.Control.remove_ClientSizeChanged","System.Windows.Forms.Control.CompanyName","System.Windows.Forms.Control.Contains","System.Windows.Forms.Control.ContainsFocus","System.Windows.Forms.Control.ContextMenu","System.Windows.Forms.Control.ContextMenuChanged","System.Windows.Forms.Control.add_ContextMenuChanged","System.Windows.Forms.Control.remove_ContextMenuChanged","System.Windows.Forms.Control.ContextMenuStrip","System.Windows.Forms.Control.ContextMenuStripChanged","System.Windows.Forms.Control.add_ContextMenuStripChanged","System.Windows.Forms.Control.remove_ContextMenuStripChanged","System.Windows.Forms.Control.ControlAdded","System.Windows.Forms.Control.add_ControlAdded","System.Windows.Forms.Control.remove_ControlAdded","System.Windows.Forms.Control.ControlRemoved","System.Windows.Forms.Control.add_ControlRemoved","System.Windows.Forms.Control.remove_ControlRemoved","System.Windows.Forms.Control.Controls","System.Windows.Forms.Control.CreateAccessibilityInstance","System.Windows.Forms.Control.CreateControl","System.Windows.Forms.Control.CreateControlsInstance","System.Windows.Forms.Control.Created","System.Windows.Forms.Control.CreateGraphics","System.Windows.Forms.Control.CreateHandle","System.Windows.Forms.Control.CreateParams","System.Windows.Forms.Control.Cursor","System.Windows.Forms.Control.CursorChanged","System.Windows.Forms.Control.add_CursorChanged","System.Windows.Forms.Control.remove_CursorChanged","System.Windows.Forms.Control.DataBindings","System.Windows.Forms.Control.DefaultBackColor","System.Windows.Forms.Control.DefaultCursor","System.Windows.Forms.Control.DefaultFont","System.Windows.Forms.Control.DefaultForeColor","System.Windows.Forms.Control.DefaultImeMode","System.Windows.Forms.Control.DefaultMargin","System.Windows.Forms.Control.DefaultMaximumSize","System.Windows.Forms.Control.DefaultMinimumSize","System.Windows.Forms.Control.DefaultPadding","System.Windows.Forms.Control.DefaultSize","System.Windows.Forms.Control.DefWndProc","System.Windows.Forms.Control.DestroyHandle","System.Windows.Forms.Control.DisplayRectangle","System.Windows.Forms.Control.Dispose","System.Windows.Forms.Control.Disposing","System.Windows.Forms.Control.Dock","System.Windows.Forms.Control.DockChanged","System.Windows.Forms.Control.add_DockChanged","System.Windows.Forms.Control.remove_DockChanged","System.Windows.Forms.Control.DoDragDrop","System.Windows.Forms.Control.DoubleBuffered","System.Windows.Forms.Control.DoubleClick","System.Windows.Forms.Control.add_DoubleClick","System.Windows.Forms.Control.remove_DoubleClick","System.Windows.Forms.Control.DragDrop","System.Windows.Forms.Control.add_DragDrop","System.Windows.Forms.Control.remove_DragDrop","System.Windows.Forms.Control.DragEnter","System.Windows.Forms.Control.add_DragEnter","System.Windows.Forms.Control.remove_DragEnter","System.Windows.Forms.Control.DragLeave","System.Windows.Forms.Control.add_DragLeave","System.Windows.Forms.Control.remove_DragLeave","System.Windows.Forms.Control.DragOver","System.Windows.Forms.Control.add_DragOver","System.Windows.Forms.Control.remove_DragOver","System.Windows.Forms.Control.DrawToBitmap","System.Windows.Forms.Control.Enabled","System.Windows.Forms.Control.EnabledChanged","System.Windows.Forms.Control.add_EnabledChanged","System.Windows.Forms.Control.remove_EnabledChanged","System.Windows.Forms.Control.EndInvoke","System.Windows.Forms.Control.Enter","System.Windows.Forms.Control.add_Enter","System.Windows.Forms.Control.remove_Enter","System.Windows.Forms.Control.FindForm","System.Windows.Forms.Control.Focus","System.Windows.Forms.Control.Focused","System.Windows.Forms.Control.Font","System.Windows.Forms.Control.FontChanged","System.Windows.Forms.Control.add_FontChanged","System.Windows.Forms.Control.remove_FontChanged","System.Windows.Forms.Control.FontHeight","System.Windows.Forms.Control.ForeColor","System.Windows.Forms.Control.ForeColorChanged","System.Windows.Forms.Control.add_ForeColorChanged","System.Windows.Forms.Control.remove_ForeColorChanged","System.Windows.Forms.Control.FromChildHandle","System.Windows.Forms.Control.FromHandle","System.Windows.Forms.Control.GetAccessibilityObjectById","System.Windows.Forms.Control.GetAutoSizeMode","System.Windows.Forms.Control.GetChildAtPoint","System.Windows.Forms.Control.GetContainerControl","System.Windows.Forms.Control.GetNextControl","System.Windows.Forms.Control.GetPreferredSize","System.Windows.Forms.Control.GetScaledBounds","System.Windows.Forms.Control.GetStyle","System.Windows.Forms.Control.GetTopLevel","System.Windows.Forms.Control.GiveFeedback","System.Windows.Forms.Control.add_GiveFeedback","System.Windows.Forms.Control.remove_GiveFeedback","System.Windows.Forms.Control.GotFocus","System.Windows.Forms.Control.add_GotFocus","System.Windows.Forms.Control.remove_GotFocus","System.Windows.Forms.Control.Handle","System.Windows.Forms.Control.HandleCreated","System.Windows.Forms.Control.add_HandleCreated","System.Windows.Forms.Control.remove_HandleCreated","System.Windows.Forms.Control.HandleDestroyed","System.Windows.Forms.Control.add_HandleDestroyed","System.Windows.Forms.Control.remove_HandleDestroyed","System.Windows.Forms.Control.HasChildren","System.Windows.Forms.Control.Height","System.Windows.Forms.Control.HelpRequested","System.Windows.Forms.Control.add_HelpRequested","System.Windows.Forms.Control.remove_HelpRequested","System.Windows.Forms.Control.Hide","System.Windows.Forms.Control.ImeMode","System.Windows.Forms.Control.ImeModeBase","System.Windows.Forms.Control.ImeModeChanged","System.Windows.Forms.Control.add_ImeModeChanged","System.Windows.Forms.Control.remove_ImeModeChanged","System.Windows.Forms.Control.InitLayout","System.Windows.Forms.Control.Invalidate","System.Windows.Forms.Control.Invalidated","System.Windows.Forms.Control.add_Invalidated","System.Windows.Forms.Control.remove_Invalidated","System.Windows.Forms.Control.Invoke","System.Windows.Forms.Control.InvokeGotFocus","System.Windows.Forms.Control.InvokeLostFocus","System.Windows.Forms.Control.InvokeOnClick","System.Windows.Forms.Control.InvokePaint","System.Windows.Forms.Control.InvokePaintBackground","System.Windows.Forms.Control.InvokeRequired","System.Windows.Forms.Control.IsAccessible","System.Windows.Forms.Control.IsDisposed","System.Windows.Forms.Control.IsHandleCreated","System.Windows.Forms.Control.IsInputChar","System.Windows.Forms.Control.IsInputKey","System.Windows.Forms.Control.IsKeyLocked","System.Windows.Forms.Control.IsMirrored","System.Windows.Forms.Control.IsMnemonic","System.Windows.Forms.Control.KeyDown","System.Windows.Forms.Control.add_KeyDown","System.Windows.Forms.Control.remove_KeyDown","System.Windows.Forms.Control.KeyPress","System.Windows.Forms.Control.add_KeyPress","System.Windows.Forms.Control.remove_KeyPress","System.Windows.Forms.Control.KeyUp","System.Windows.Forms.Control.add_KeyUp","System.Windows.Forms.Control.remove_KeyUp","System.Windows.Forms.Control.Layout","System.Windows.Forms.Control.add_Layout","System.Windows.Forms.Control.remove_Layout","System.Windows.Forms.Control.LayoutEngine","System.Windows.Forms.Control.Leave","System.Windows.Forms.Control.add_Leave","System.Windows.Forms.Control.remove_Leave","System.Windows.Forms.Control.Left","System.Windows.Forms.Control.Location","System.Windows.Forms.Control.LocationChanged","System.Windows.Forms.Control.add_LocationChanged","System.Windows.Forms.Control.remove_LocationChanged","System.Windows.Forms.Control.LostFocus","System.Windows.Forms.Control.add_LostFocus","System.Windows.Forms.Control.remove_LostFocus","System.Windows.Forms.Control.Margin","System.Windows.Forms.Control.MarginChanged","System.Windows.Forms.Control.add_MarginChanged","System.Windows.Forms.Control.remove_MarginChanged","System.Windows.Forms.Control.MaximumSize","System.Windows.Forms.Control.MinimumSize","System.Windows.Forms.Control.ModifierKeys","System.Windows.Forms.Control.MouseButtons","System.Windows.Forms.Control.MouseCaptureChanged","System.Windows.Forms.Control.add_MouseCaptureChanged","System.Windows.Forms.Control.remove_MouseCaptureChanged","System.Windows.Forms.Control.MouseClick","System.Windows.Forms.Control.add_MouseClick","System.Windows.Forms.Control.remove_MouseClick","System.Windows.Forms.Control.MouseDoubleClick","System.Windows.Forms.Control.add_MouseDoubleClick","System.Windows.Forms.Control.remove_MouseDoubleClick","System.Windows.Forms.Control.MouseDown","System.Windows.Forms.Control.add_MouseDown","System.Windows.Forms.Control.remove_MouseDown","System.Windows.Forms.Control.MouseEnter","System.Windows.Forms.Control.add_MouseEnter","System.Windows.Forms.Control.remove_MouseEnter","System.Windows.Forms.Control.MouseHover","System.Windows.Forms.Control.add_MouseHover","System.Windows.Forms.Control.remove_MouseHover","System.Windows.Forms.Control.MouseLeave","System.Windows.Forms.Control.add_MouseLeave","System.Windows.Forms.Control.remove_MouseLeave","System.Windows.Forms.Control.MouseMove","System.Windows.Forms.Control.add_MouseMove","System.Windows.Forms.Control.remove_MouseMove","System.Windows.Forms.Control.MousePosition","System.Windows.Forms.Control.MouseUp","System.Windows.Forms.Control.add_MouseUp","System.Windows.Forms.Control.remove_MouseUp","System.Windows.Forms.Control.MouseWheel","System.Windows.Forms.Control.add_MouseWheel","System.Windows.Forms.Control.remove_MouseWheel","System.Windows.Forms.Control.Move","System.Windows.Forms.Control.add_Move","System.Windows.Forms.Control.remove_Move","System.Windows.Forms.Control.Name","System.Windows.Forms.Control.NotifyInvalidate","System.Windows.Forms.Control.OnAutoSizeChanged","System.Windows.Forms.Control.OnBackColorChanged","System.Windows.Forms.Control.OnBackgroundImageChanged","System.Windows.Forms.Control.OnBackgroundImageLayoutChanged","System.Windows.Forms.Control.OnBindingContextChanged","System.Windows.Forms.Control.OnCausesValidationChanged","System.Windows.Forms.Control.OnChangeUICues","System.Windows.Forms.Control.OnClick","System.Windows.Forms.Control.OnClientSizeChanged","System.Windows.Forms.Control.OnContextMenuChanged","System.Windows.Forms.Control.OnContextMenuStripChanged","System.Windows.Forms.Control.OnControlAdded","System.Windows.Forms.Control.OnControlRemoved","System.Windows.Forms.Control.OnCreateControl","System.Windows.Forms.Control.OnCursorChanged","System.Windows.Forms.Control.OnDockChanged","System.Windows.Forms.Control.OnDoubleClick","System.Windows.Forms.Control.OnDragDrop","System.Windows.Forms.Control.OnDragEnter","System.Windows.Forms.Control.OnDragLeave","System.Windows.Forms.Control.OnDragOver","System.Windows.Forms.Control.OnEnabledChanged","System.Windows.Forms.Control.OnEnter","System.Windows.Forms.Control.OnFontChanged","System.Windows.Forms.Control.OnForeColorChanged","System.Windows.Forms.Control.OnGiveFeedback","System.Windows.Forms.Control.OnGotFocus","System.Windows.Forms.Control.OnHandleCreated","System.Windows.Forms.Control.OnHandleDestroyed","System.Windows.Forms.Control.OnHelpRequested","System.Windows.Forms.Control.OnImeModeChanged","System.Windows.Forms.Control.OnInvalidated","System.Windows.Forms.Control.OnKeyDown","System.Windows.Forms.Control.OnKeyPress","System.Windows.Forms.Control.OnKeyUp","System.Windows.Forms.Control.OnLayout","System.Windows.Forms.Control.OnLeave","System.Windows.Forms.Control.OnLocationChanged","System.Windows.Forms.Control.OnLostFocus","System.Windows.Forms.Control.OnMarginChanged","System.Windows.Forms.Control.OnMouseCaptureChanged","System.Windows.Forms.Control.OnMouseClick","System.Windows.Forms.Control.OnMouseDoubleClick","System.Windows.Forms.Control.OnMouseDown","System.Windows.Forms.Control.OnMouseEnter","System.Windows.Forms.Control.OnMouseHover","System.Windows.Forms.Control.OnMouseLeave","System.Windows.Forms.Control.OnMouseMove","System.Windows.Forms.Control.OnMouseUp","System.Windows.Forms.Control.OnMouseWheel","System.Windows.Forms.Control.OnMove","System.Windows.Forms.Control.OnNotifyMessage","System.Windows.Forms.Control.OnPaddingChanged","System.Windows.Forms.Control.OnPaint","System.Windows.Forms.Control.OnPaintBackground","System.Windows.Forms.Control.OnParentBackColorChanged","System.Windows.Forms.Control.OnParentBackgroundImageChanged","System.Windows.Forms.Control.OnParentBindingContextChanged","System.Windows.Forms.Control.OnParentChanged","System.Windows.Forms.Control.OnParentCursorChanged","System.Windows.Forms.Control.OnParentEnabledChanged","System.Windows.Forms.Control.OnParentFontChanged","System.Windows.Forms.Control.OnParentForeColorChanged","System.Windows.Forms.Control.OnParentRightToLeftChanged","System.Windows.Forms.Control.OnParentVisibleChanged","System.Windows.Forms.Control.OnPreviewKeyDown","System.Windows.Forms.Control.OnPrint","System.Windows.Forms.Control.OnQueryContinueDrag","System.Windows.Forms.Control.OnRegionChanged","System.Windows.Forms.Control.OnResize","System.Windows.Forms.Control.OnRightToLeftChanged","System.Windows.Forms.Control.OnSizeChanged","System.Windows.Forms.Control.OnStyleChanged","System.Windows.Forms.Control.OnSystemColorsChanged","System.Windows.Forms.Control.OnTabIndexChanged","System.Windows.Forms.Control.OnTabStopChanged","System.Windows.Forms.Control.OnTextChanged","System.Windows.Forms.Control.OnValidated","System.Windows.Forms.Control.OnValidating","System.Windows.Forms.Control.OnVisibleChanged","System.Windows.Forms.Control.Padding","System.Windows.Forms.Control.PaddingChanged","System.Windows.Forms.Control.add_PaddingChanged","System.Windows.Forms.Control.remove_PaddingChanged","System.Windows.Forms.Control.Paint","System.Windows.Forms.Control.add_Paint","System.Windows.Forms.Control.remove_Paint","System.Windows.Forms.Control.Parent","System.Windows.Forms.Control.ParentChanged","System.Windows.Forms.Control.add_ParentChanged","System.Windows.Forms.Control.remove_ParentChanged","System.Windows.Forms.Control.PerformLayout","System.Windows.Forms.Control.PointToClient","System.Windows.Forms.Control.PointToScreen","System.Windows.Forms.Control.PreferredSize","System.Windows.Forms.Control.PreProcessControlMessage","System.Windows.Forms.Control.PreProcessMessage","System.Windows.Forms.Control.PreviewKeyDown","System.Windows.Forms.Control.add_PreviewKeyDown","System.Windows.Forms.Control.remove_PreviewKeyDown","System.Windows.Forms.Control.ProcessCmdKey","System.Windows.Forms.Control.ProcessDialogChar","System.Windows.Forms.Control.ProcessDialogKey","System.Windows.Forms.Control.ProcessKeyEventArgs","System.Windows.Forms.Control.ProcessKeyMessage","System.Windows.Forms.Control.ProcessKeyPreview","System.Windows.Forms.Control.ProcessMnemonic","System.Windows.Forms.Control.ProductName","System.Windows.Forms.Control.ProductVersion","System.Windows.Forms.Control.PropagatingImeMode","System.Windows.Forms.Control.QueryAccessibilityHelp","System.Windows.Forms.Control.add_QueryAccessibilityHelp","System.Windows.Forms.Control.remove_QueryAccessibilityHelp","System.Windows.Forms.Control.QueryContinueDrag","System.Windows.Forms.Control.add_QueryContinueDrag","System.Windows.Forms.Control.remove_QueryContinueDrag","System.Windows.Forms.Control.RaiseDragEvent","System.Windows.Forms.Control.RaiseKeyEvent","System.Windows.Forms.Control.RaiseMouseEvent","System.Windows.Forms.Control.RaisePaintEvent","System.Windows.Forms.Control.RecreateHandle","System.Windows.Forms.Control.RecreatingHandle","System.Windows.Forms.Control.RectangleToClient","System.Windows.Forms.Control.RectangleToScreen","System.Windows.Forms.Control.ReflectMessage","System.Windows.Forms.Control.Refresh","System.Windows.Forms.Control.Region","System.Windows.Forms.Control.RegionChanged","System.Windows.Forms.Control.add_RegionChanged","System.Windows.Forms.Control.remove_RegionChanged","System.Windows.Forms.Control.RenderRightToLeft","System.Windows.Forms.Control.ResetBackColor","System.Windows.Forms.Control.ResetBindings","System.Windows.Forms.Control.ResetCursor","System.Windows.Forms.Control.ResetFont","System.Windows.Forms.Control.ResetForeColor","System.Windows.Forms.Control.ResetImeMode","System.Windows.Forms.Control.ResetMouseEventArgs","System.Windows.Forms.Control.ResetRightToLeft","System.Windows.Forms.Control.ResetText","System.Windows.Forms.Control.Resize","System.Windows.Forms.Control.add_Resize","System.Windows.Forms.Control.remove_Resize","System.Windows.Forms.Control.ResizeRedraw","System.Windows.Forms.Control.ResumeLayout","System.Windows.Forms.Control.Right","System.Windows.Forms.Control.RightToLeft","System.Windows.Forms.Control.RightToLeftChanged","System.Windows.Forms.Control.add_RightToLeftChanged","System.Windows.Forms.Control.remove_RightToLeftChanged","System.Windows.Forms.Control.RtlTranslateAlignment","System.Windows.Forms.Control.RtlTranslateContent","System.Windows.Forms.Control.RtlTranslateHorizontal","System.Windows.Forms.Control.RtlTranslateLeftRight","System.Windows.Forms.Control.Scale","System.Windows.Forms.Control.ScaleChildren","System.Windows.Forms.Control.ScaleControl","System.Windows.Forms.Control.ScaleCore","System.Windows.Forms.Control.Select","System.Windows.Forms.Control.SelectNextControl","System.Windows.Forms.Control.SendToBack","System.Windows.Forms.Control.SetAutoSizeMode","System.Windows.Forms.Control.SetBounds","System.Windows.Forms.Control.SetBoundsCore","System.Windows.Forms.Control.SetClientSizeCore","System.Windows.Forms.Control.SetStyle","System.Windows.Forms.Control.SetTopLevel","System.Windows.Forms.Control.SetVisibleCore","System.Windows.Forms.Control.Show","System.Windows.Forms.Control.ShowFocusCues","System.Windows.Forms.Control.ShowKeyboardCues","System.Windows.Forms.Control.Site","System.Windows.Forms.Control.Size","System.Windows.Forms.Control.SizeChanged","System.Windows.Forms.Control.add_SizeChanged","System.Windows.Forms.Control.remove_SizeChanged","System.Windows.Forms.Control.SizeFromClientSize","System.Windows.Forms.Control.StyleChanged","System.Windows.Forms.Control.add_StyleChanged","System.Windows.Forms.Control.remove_StyleChanged","System.Windows.Forms.Control.SuspendLayout","System.Windows.Forms.Control.IDropTarget.OnDragDrop","System.Windows.Forms.Control.IDropTarget.OnDragEnter","System.Windows.Forms.Control.IDropTarget.OnDragLeave","System.Windows.Forms.Control.IDropTarget.OnDragOver","System.Windows.Forms.Control.SystemColorsChanged","System.Windows.Forms.Control.add_SystemColorsChanged","System.Windows.Forms.Control.remove_SystemColorsChanged","System.Windows.Forms.Control.TabIndex","System.Windows.Forms.Control.TabIndexChanged","System.Windows.Forms.Control.add_TabIndexChanged","System.Windows.Forms.Control.remove_TabIndexChanged","System.Windows.Forms.Control.TabStop","System.Windows.Forms.Control.TabStopChanged","System.Windows.Forms.Control.add_TabStopChanged","System.Windows.Forms.Control.remove_TabStopChanged","System.Windows.Forms.Control.Tag","System.Windows.Forms.Control.Text","System.Windows.Forms.Control.TextChanged","System.Windows.Forms.Control.add_TextChanged","System.Windows.Forms.Control.remove_TextChanged","System.Windows.Forms.Control.Top","System.Windows.Forms.Control.TopLevelControl","System.Windows.Forms.Control.Update","System.Windows.Forms.Control.UpdateBounds","System.Windows.Forms.Control.UpdateStyles","System.Windows.Forms.Control.UpdateZOrder","System.Windows.Forms.Control.UseWaitCursor","System.Windows.Forms.Control.Validated","System.Windows.Forms.Control.add_Validated","System.Windows.Forms.Control.remove_Validated","System.Windows.Forms.Control.Validating","System.Windows.Forms.Control.add_Validating","System.Windows.Forms.Control.remove_Validating","System.Windows.Forms.Control.Visible","System.Windows.Forms.Control.VisibleChanged","System.Windows.Forms.Control.add_VisibleChanged","System.Windows.Forms.Control.remove_VisibleChanged","System.Windows.Forms.Control.Width","System.Windows.Forms.Control.WindowTarget","System.Windows.Forms.Control.WndProc"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.Control","System::Windows::Forms::Control","System.Windows.Forms.Control.#ctor","System::Windows::Forms::Control::#ctor","System.Windows.Forms.Control.AccessibilityNotifyClients","System::Windows::Forms::Control::AccessibilityNotifyClients","System.Windows.Forms.Control.AccessibilityObject","System::Windows::Forms::Control::AccessibilityObject","System.Windows.Forms.Control.AccessibleDefaultActionDescription","System::Windows::Forms::Control::AccessibleDefaultActionDescription","System.Windows.Forms.Control.AccessibleDescription","System::Windows::Forms::Control::AccessibleDescription","System.Windows.Forms.Control.AccessibleName","System::Windows::Forms::Control::AccessibleName","System.Windows.Forms.Control.AccessibleRole","System::Windows::Forms::Control::AccessibleRole","System.Windows.Forms.Control.AllowDrop","System::Windows::Forms::Control::AllowDrop","System.Windows.Forms.Control.Anchor","System::Windows::Forms::Control::Anchor","System.Windows.Forms.Control.AutoScrollOffset","System::Windows::Forms::Control::AutoScrollOffset","System.Windows.Forms.Control.AutoSize","System::Windows::Forms::Control::AutoSize","System.Windows.Forms.Control.AutoSizeChanged","System::Windows::Forms::Control::AutoSizeChanged","System.Windows.Forms.Control.BackColor","System::Windows::Forms::Control::BackColor","System.Windows.Forms.Control.BackColorChanged","System::Windows::Forms::Control::BackColorChanged","System.Windows.Forms.Control.BackgroundImage","System::Windows::Forms::Control::BackgroundImage","System.Windows.Forms.Control.BackgroundImageChanged","System::Windows::Forms::Control::BackgroundImageChanged","System.Windows.Forms.Control.BackgroundImageLayout","System::Windows::Forms::Control::BackgroundImageLayout","System.Windows.Forms.Control.BackgroundImageLayoutChanged","System::Windows::Forms::Control::BackgroundImageLayoutChanged","System.Windows.Forms.Control.BeginInvoke","System::Windows::Forms::Control::BeginInvoke","System.Windows.Forms.Control.BindingContext","System::Windows::Forms::Control::BindingContext","System.Windows.Forms.Control.BindingContextChanged","System::Windows::Forms::Control::BindingContextChanged","System.Windows.Forms.Control.Bottom","System::Windows::Forms::Control::Bottom","System.Windows.Forms.Control.Bounds","System::Windows::Forms::Control::Bounds","System.Windows.Forms.Control.BringToFront","System::Windows::Forms::Control::BringToFront","System.Windows.Forms.Control.CanEnableIme","System::Windows::Forms::Control::CanEnableIme","System.Windows.Forms.Control.CanFocus","System::Windows::Forms::Control::CanFocus","System.Windows.Forms.Control.CanRaiseEvents","System::Windows::Forms::Control::CanRaiseEvents","System.Windows.Forms.Control.CanSelect","System::Windows::Forms::Control::CanSelect","System.Windows.Forms.Control.Capture","System::Windows::Forms::Control::Capture","System.Windows.Forms.Control.CausesValidation","System::Windows::Forms::Control::CausesValidation","System.Windows.Forms.Control.CausesValidationChanged","System::Windows::Forms::Control::CausesValidationChanged","System.Windows.Forms.Control.ChangeUICues","System::Windows::Forms::Control::ChangeUICues","System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls","System::Windows::Forms::Control::CheckForIllegalCrossThreadCalls","System.Windows.Forms.Control.Click","System::Windows::Forms::Control::Click","System.Windows.Forms.Control.ClientRectangle","System::Windows::Forms::Control::ClientRectangle","System.Windows.Forms.Control.ClientSize","System::Windows::Forms::Control::ClientSize","System.Windows.Forms.Control.ClientSizeChanged","System::Windows::Forms::Control::ClientSizeChanged","System.Windows.Forms.Control.CompanyName","System::Windows::Forms::Control::CompanyName","System.Windows.Forms.Control.Contains","System::Windows::Forms::Control::Contains","System.Windows.Forms.Control.ContainsFocus","System::Windows::Forms::Control::ContainsFocus","System.Windows.Forms.Control.ContextMenu","System::Windows::Forms::Control::ContextMenu","System.Windows.Forms.Control.ContextMenuChanged","System::Windows::Forms::Control::ContextMenuChanged","System.Windows.Forms.Control.ContextMenuStrip","System::Windows::Forms::Control::ContextMenuStrip","System.Windows.Forms.Control.ContextMenuStripChanged","System::Windows::Forms::Control::ContextMenuStripChanged","System.Windows.Forms.Control.ControlAdded","System::Windows::Forms::Control::ControlAdded","System.Windows.Forms.Control.ControlRemoved","System::Windows::Forms::Control::ControlRemoved","System.Windows.Forms.Control.Controls","System::Windows::Forms::Control::Controls","System.Windows.Forms.Control.CreateAccessibilityInstance","System::Windows::Forms::Control::CreateAccessibilityInstance","System.Windows.Forms.Control.CreateControl","System::Windows::Forms::Control::CreateControl","System.Windows.Forms.Control.CreateControlsInstance","System::Windows::Forms::Control::CreateControlsInstance","System.Windows.Forms.Control.Created","System::Windows::Forms::Control::Created","System.Windows.Forms.Control.CreateGraphics","System::Windows::Forms::Control::CreateGraphics","System.Windows.Forms.Control.CreateHandle","System::Windows::Forms::Control::CreateHandle","System.Windows.Forms.Control.CreateParams","System::Windows::Forms::Control::CreateParams","System.Windows.Forms.Control.Cursor","System::Windows::Forms::Control::Cursor","System.Windows.Forms.Control.CursorChanged","System::Windows::Forms::Control::CursorChanged","System.Windows.Forms.Control.DataBindings","System::Windows::Forms::Control::DataBindings","System.Windows.Forms.Control.DefaultBackColor","System::Windows::Forms::Control::DefaultBackColor","System.Windows.Forms.Control.DefaultCursor","System::Windows::Forms::Control::DefaultCursor","System.Windows.Forms.Control.DefaultFont","System::Windows::Forms::Control::DefaultFont","System.Windows.Forms.Control.DefaultForeColor","System::Windows::Forms::Control::DefaultForeColor","System.Windows.Forms.Control.DefaultImeMode","System::Windows::Forms::Control::DefaultImeMode","System.Windows.Forms.Control.DefaultMargin","System::Windows::Forms::Control::DefaultMargin","System.Windows.Forms.Control.DefaultMaximumSize","System::Windows::Forms::Control::DefaultMaximumSize","System.Windows.Forms.Control.DefaultMinimumSize","System::Windows::Forms::Control::DefaultMinimumSize","System.Windows.Forms.Control.DefaultPadding","System::Windows::Forms::Control::DefaultPadding","System.Windows.Forms.Control.DefaultSize","System::Windows::Forms::Control::DefaultSize","System.Windows.Forms.Control.DefWndProc","System::Windows::Forms::Control::DefWndProc","System.Windows.Forms.Control.DestroyHandle","System::Windows::Forms::Control::DestroyHandle","System.Windows.Forms.Control.DisplayRectangle","System::Windows::Forms::Control::DisplayRectangle","System.Windows.Forms.Control.Dispose","System::Windows::Forms::Control::Dispose","System.Windows.Forms.Control.Disposing","System::Windows::Forms::Control::Disposing","System.Windows.Forms.Control.Dock","System::Windows::Forms::Control::Dock","System.Windows.Forms.Control.DockChanged","System::Windows::Forms::Control::DockChanged","System.Windows.Forms.Control.DoDragDrop","System::Windows::Forms::Control::DoDragDrop","System.Windows.Forms.Control.DoubleBuffered","System::Windows::Forms::Control::DoubleBuffered","System.Windows.Forms.Control.DoubleClick","System::Windows::Forms::Control::DoubleClick","System.Windows.Forms.Control.DragDrop","System::Windows::Forms::Control::DragDrop","System.Windows.Forms.Control.DragEnter","System::Windows::Forms::Control::DragEnter","System.Windows.Forms.Control.DragLeave","System::Windows::Forms::Control::DragLeave","System.Windows.Forms.Control.DragOver","System::Windows::Forms::Control::DragOver","System.Windows.Forms.Control.DrawToBitmap","System::Windows::Forms::Control::DrawToBitmap","System.Windows.Forms.Control.Enabled","System::Windows::Forms::Control::Enabled","System.Windows.Forms.Control.EnabledChanged","System::Windows::Forms::Control::EnabledChanged","System.Windows.Forms.Control.EndInvoke","System::Windows::Forms::Control::EndInvoke","System.Windows.Forms.Control.Enter","System::Windows::Forms::Control::Enter","System.Windows.Forms.Control.FindForm","System::Windows::Forms::Control::FindForm","System.Windows.Forms.Control.Focus","System::Windows::Forms::Control::Focus","System.Windows.Forms.Control.Focused","System::Windows::Forms::Control::Focused","System.Windows.Forms.Control.Font","System::Windows::Forms::Control::Font","System.Windows.Forms.Control.FontChanged","System::Windows::Forms::Control::FontChanged","System.Windows.Forms.Control.FontHeight","System::Windows::Forms::Control::FontHeight","System.Windows.Forms.Control.ForeColor","System::Windows::Forms::Control::ForeColor","System.Windows.Forms.Control.ForeColorChanged","System::Windows::Forms::Control::ForeColorChanged","System.Windows.Forms.Control.FromChildHandle","System::Windows::Forms::Control::FromChildHandle","System.Windows.Forms.Control.FromHandle","System::Windows::Forms::Control::FromHandle","System.Windows.Forms.Control.GetAccessibilityObjectById","System::Windows::Forms::Control::GetAccessibilityObjectById","System.Windows.Forms.Control.GetAutoSizeMode","System::Windows::Forms::Control::GetAutoSizeMode","System.Windows.Forms.Control.GetChildAtPoint","System::Windows::Forms::Control::GetChildAtPoint","System.Windows.Forms.Control.GetContainerControl","System::Windows::Forms::Control::GetContainerControl","System.Windows.Forms.Control.GetNextControl","System::Windows::Forms::Control::GetNextControl","System.Windows.Forms.Control.GetPreferredSize","System::Windows::Forms::Control::GetPreferredSize","System.Windows.Forms.Control.GetScaledBounds","System::Windows::Forms::Control::GetScaledBounds","System.Windows.Forms.Control.GetStyle","System::Windows::Forms::Control::GetStyle","System.Windows.Forms.Control.GetTopLevel","System::Windows::Forms::Control::GetTopLevel","System.Windows.Forms.Control.GiveFeedback","System::Windows::Forms::Control::GiveFeedback","System.Windows.Forms.Control.GotFocus","System::Windows::Forms::Control::GotFocus","System.Windows.Forms.Control.Handle","System::Windows::Forms::Control::Handle","System.Windows.Forms.Control.HandleCreated","System::Windows::Forms::Control::HandleCreated","System.Windows.Forms.Control.HandleDestroyed","System::Windows::Forms::Control::HandleDestroyed","System.Windows.Forms.Control.HasChildren","System::Windows::Forms::Control::HasChildren","System.Windows.Forms.Control.Height","System::Windows::Forms::Control::Height","System.Windows.Forms.Control.HelpRequested","System::Windows::Forms::Control::HelpRequested","System.Windows.Forms.Control.Hide","System::Windows::Forms::Control::Hide","System.Windows.Forms.Control.ImeMode","System::Windows::Forms::Control::ImeMode","System.Windows.Forms.Control.ImeModeBase","System::Windows::Forms::Control::ImeModeBase","System.Windows.Forms.Control.ImeModeChanged","System::Windows::Forms::Control::ImeModeChanged","System.Windows.Forms.Control.InitLayout","System::Windows::Forms::Control::InitLayout","System.Windows.Forms.Control.Invalidate","System::Windows::Forms::Control::Invalidate","System.Windows.Forms.Control.Invalidated","System::Windows::Forms::Control::Invalidated","System.Windows.Forms.Control.Invoke","System::Windows::Forms::Control::Invoke","System.Windows.Forms.Control.InvokeGotFocus","System::Windows::Forms::Control::InvokeGotFocus","System.Windows.Forms.Control.InvokeLostFocus","System::Windows::Forms::Control::InvokeLostFocus","System.Windows.Forms.Control.InvokeOnClick","System::Windows::Forms::Control::InvokeOnClick","System.Windows.Forms.Control.InvokePaint","System::Windows::Forms::Control::InvokePaint","System.Windows.Forms.Control.InvokePaintBackground","System::Windows::Forms::Control::InvokePaintBackground","System.Windows.Forms.Control.InvokeRequired","System::Windows::Forms::Control::InvokeRequired","System.Windows.Forms.Control.IsAccessible","System::Windows::Forms::Control::IsAccessible","System.Windows.Forms.Control.IsDisposed","System::Windows::Forms::Control::IsDisposed","System.Windows.Forms.Control.IsHandleCreated","System::Windows::Forms::Control::IsHandleCreated","System.Windows.Forms.Control.IsInputChar","System::Windows::Forms::Control::IsInputChar","System.Windows.Forms.Control.IsInputKey","System::Windows::Forms::Control::IsInputKey","System.Windows.Forms.Control.IsKeyLocked","System::Windows::Forms::Control::IsKeyLocked","System.Windows.Forms.Control.IsMirrored","System::Windows::Forms::Control::IsMirrored","System.Windows.Forms.Control.IsMnemonic","System::Windows::Forms::Control::IsMnemonic","System.Windows.Forms.Control.KeyDown","System::Windows::Forms::Control::KeyDown","System.Windows.Forms.Control.KeyPress","System::Windows::Forms::Control::KeyPress","System.Windows.Forms.Control.KeyUp","System::Windows::Forms::Control::KeyUp","System.Windows.Forms.Control.Layout","System::Windows::Forms::Control::Layout","System.Windows.Forms.Control.LayoutEngine","System::Windows::Forms::Control::LayoutEngine","System.Windows.Forms.Control.Leave","System::Windows::Forms::Control::Leave","System.Windows.Forms.Control.Left","System::Windows::Forms::Control::Left","System.Windows.Forms.Control.Location","System::Windows::Forms::Control::Location","System.Windows.Forms.Control.LocationChanged","System::Windows::Forms::Control::LocationChanged","System.Windows.Forms.Control.LostFocus","System::Windows::Forms::Control::LostFocus","System.Windows.Forms.Control.Margin","System::Windows::Forms::Control::Margin","System.Windows.Forms.Control.MarginChanged","System::Windows::Forms::Control::MarginChanged","System.Windows.Forms.Control.MaximumSize","System::Windows::Forms::Control::MaximumSize","System.Windows.Forms.Control.MinimumSize","System::Windows::Forms::Control::MinimumSize","System.Windows.Forms.Control.ModifierKeys","System::Windows::Forms::Control::ModifierKeys","System.Windows.Forms.Control.MouseButtons","System::Windows::Forms::Control::MouseButtons","System.Windows.Forms.Control.MouseCaptureChanged","System::Windows::Forms::Control::MouseCaptureChanged","System.Windows.Forms.Control.MouseClick","System::Windows::Forms::Control::MouseClick","System.Windows.Forms.Control.MouseDoubleClick","System::Windows::Forms::Control::MouseDoubleClick","System.Windows.Forms.Control.MouseDown","System::Windows::Forms::Control::MouseDown","System.Windows.Forms.Control.MouseEnter","System::Windows::Forms::Control::MouseEnter","System.Windows.Forms.Control.MouseHover","System::Windows::Forms::Control::MouseHover","System.Windows.Forms.Control.MouseLeave","System::Windows::Forms::Control::MouseLeave","System.Windows.Forms.Control.MouseMove","System::Windows::Forms::Control::MouseMove","System.Windows.Forms.Control.MousePosition","System::Windows::Forms::Control::MousePosition","System.Windows.Forms.Control.MouseUp","System::Windows::Forms::Control::MouseUp","System.Windows.Forms.Control.MouseWheel","System::Windows::Forms::Control::MouseWheel","System.Windows.Forms.Control.Move","System::Windows::Forms::Control::Move","System.Windows.Forms.Control.Name","System::Windows::Forms::Control::Name","System.Windows.Forms.Control.NotifyInvalidate","System::Windows::Forms::Control::NotifyInvalidate","System.Windows.Forms.Control.OnAutoSizeChanged","System::Windows::Forms::Control::OnAutoSizeChanged","System.Windows.Forms.Control.OnBackColorChanged","System::Windows::Forms::Control::OnBackColorChanged","System.Windows.Forms.Control.OnBackgroundImageChanged","System::Windows::Forms::Control::OnBackgroundImageChanged","System.Windows.Forms.Control.OnBackgroundImageLayoutChanged","System::Windows::Forms::Control::OnBackgroundImageLayoutChanged","System.Windows.Forms.Control.OnBindingContextChanged","System::Windows::Forms::Control::OnBindingContextChanged","System.Windows.Forms.Control.OnCausesValidationChanged","System::Windows::Forms::Control::OnCausesValidationChanged","System.Windows.Forms.Control.OnChangeUICues","System::Windows::Forms::Control::OnChangeUICues","System.Windows.Forms.Control.OnClick","System::Windows::Forms::Control::OnClick","System.Windows.Forms.Control.OnClientSizeChanged","System::Windows::Forms::Control::OnClientSizeChanged","System.Windows.Forms.Control.OnContextMenuChanged","System::Windows::Forms::Control::OnContextMenuChanged","System.Windows.Forms.Control.OnContextMenuStripChanged","System::Windows::Forms::Control::OnContextMenuStripChanged","System.Windows.Forms.Control.OnControlAdded","System::Windows::Forms::Control::OnControlAdded","System.Windows.Forms.Control.OnControlRemoved","System::Windows::Forms::Control::OnControlRemoved","System.Windows.Forms.Control.OnCreateControl","System::Windows::Forms::Control::OnCreateControl","System.Windows.Forms.Control.OnCursorChanged","System::Windows::Forms::Control::OnCursorChanged","System.Windows.Forms.Control.OnDockChanged","System::Windows::Forms::Control::OnDockChanged","System.Windows.Forms.Control.OnDoubleClick","System::Windows::Forms::Control::OnDoubleClick","System.Windows.Forms.Control.OnDragDrop","System::Windows::Forms::Control::OnDragDrop","System.Windows.Forms.Control.OnDragEnter","System::Windows::Forms::Control::OnDragEnter","System.Windows.Forms.Control.OnDragLeave","System::Windows::Forms::Control::OnDragLeave","System.Windows.Forms.Control.OnDragOver","System::Windows::Forms::Control::OnDragOver","System.Windows.Forms.Control.OnEnabledChanged","System::Windows::Forms::Control::OnEnabledChanged","System.Windows.Forms.Control.OnEnter","System::Windows::Forms::Control::OnEnter","System.Windows.Forms.Control.OnFontChanged","System::Windows::Forms::Control::OnFontChanged","System.Windows.Forms.Control.OnForeColorChanged","System::Windows::Forms::Control::OnForeColorChanged","System.Windows.Forms.Control.OnGiveFeedback","System::Windows::Forms::Control::OnGiveFeedback","System.Windows.Forms.Control.OnGotFocus","System::Windows::Forms::Control::OnGotFocus","System.Windows.Forms.Control.OnHandleCreated","System::Windows::Forms::Control::OnHandleCreated","System.Windows.Forms.Control.OnHandleDestroyed","System::Windows::Forms::Control::OnHandleDestroyed","System.Windows.Forms.Control.OnHelpRequested","System::Windows::Forms::Control::OnHelpRequested","System.Windows.Forms.Control.OnImeModeChanged","System::Windows::Forms::Control::OnImeModeChanged","System.Windows.Forms.Control.OnInvalidated","System::Windows::Forms::Control::OnInvalidated","System.Windows.Forms.Control.OnKeyDown","System::Windows::Forms::Control::OnKeyDown","System.Windows.Forms.Control.OnKeyPress","System::Windows::Forms::Control::OnKeyPress","System.Windows.Forms.Control.OnKeyUp","System::Windows::Forms::Control::OnKeyUp","System.Windows.Forms.Control.OnLayout","System::Windows::Forms::Control::OnLayout","System.Windows.Forms.Control.OnLeave","System::Windows::Forms::Control::OnLeave","System.Windows.Forms.Control.OnLocationChanged","System::Windows::Forms::Control::OnLocationChanged","System.Windows.Forms.Control.OnLostFocus","System::Windows::Forms::Control::OnLostFocus","System.Windows.Forms.Control.OnMarginChanged","System::Windows::Forms::Control::OnMarginChanged","System.Windows.Forms.Control.OnMouseCaptureChanged","System::Windows::Forms::Control::OnMouseCaptureChanged","System.Windows.Forms.Control.OnMouseClick","System::Windows::Forms::Control::OnMouseClick","System.Windows.Forms.Control.OnMouseDoubleClick","System::Windows::Forms::Control::OnMouseDoubleClick","System.Windows.Forms.Control.OnMouseDown","System::Windows::Forms::Control::OnMouseDown","System.Windows.Forms.Control.OnMouseEnter","System::Windows::Forms::Control::OnMouseEnter","System.Windows.Forms.Control.OnMouseHover","System::Windows::Forms::Control::OnMouseHover","System.Windows.Forms.Control.OnMouseLeave","System::Windows::Forms::Control::OnMouseLeave","System.Windows.Forms.Control.OnMouseMove","System::Windows::Forms::Control::OnMouseMove","System.Windows.Forms.Control.OnMouseUp","System::Windows::Forms::Control::OnMouseUp","System.Windows.Forms.Control.OnMouseWheel","System::Windows::Forms::Control::OnMouseWheel","System.Windows.Forms.Control.OnMove","System::Windows::Forms::Control::OnMove","System.Windows.Forms.Control.OnNotifyMessage","System::Windows::Forms::Control::OnNotifyMessage","System.Windows.Forms.Control.OnPaddingChanged","System::Windows::Forms::Control::OnPaddingChanged","System.Windows.Forms.Control.OnPaint","System::Windows::Forms::Control::OnPaint","System.Windows.Forms.Control.OnPaintBackground","System::Windows::Forms::Control::OnPaintBackground","System.Windows.Forms.Control.OnParentBackColorChanged","System::Windows::Forms::Control::OnParentBackColorChanged","System.Windows.Forms.Control.OnParentBackgroundImageChanged","System::Windows::Forms::Control::OnParentBackgroundImageChanged","System.Windows.Forms.Control.OnParentBindingContextChanged","System::Windows::Forms::Control::OnParentBindingContextChanged","System.Windows.Forms.Control.OnParentChanged","System::Windows::Forms::Control::OnParentChanged","System.Windows.Forms.Control.OnParentCursorChanged","System::Windows::Forms::Control::OnParentCursorChanged","System.Windows.Forms.Control.OnParentEnabledChanged","System::Windows::Forms::Control::OnParentEnabledChanged","System.Windows.Forms.Control.OnParentFontChanged","System::Windows::Forms::Control::OnParentFontChanged","System.Windows.Forms.Control.OnParentForeColorChanged","System::Windows::Forms::Control::OnParentForeColorChanged","System.Windows.Forms.Control.OnParentRightToLeftChanged","System::Windows::Forms::Control::OnParentRightToLeftChanged","System.Windows.Forms.Control.OnParentVisibleChanged","System::Windows::Forms::Control::OnParentVisibleChanged","System.Windows.Forms.Control.OnPreviewKeyDown","System::Windows::Forms::Control::OnPreviewKeyDown","System.Windows.Forms.Control.OnPrint","System::Windows::Forms::Control::OnPrint","System.Windows.Forms.Control.OnQueryContinueDrag","System::Windows::Forms::Control::OnQueryContinueDrag","System.Windows.Forms.Control.OnRegionChanged","System::Windows::Forms::Control::OnRegionChanged","System.Windows.Forms.Control.OnResize","System::Windows::Forms::Control::OnResize","System.Windows.Forms.Control.OnRightToLeftChanged","System::Windows::Forms::Control::OnRightToLeftChanged","System.Windows.Forms.Control.OnSizeChanged","System::Windows::Forms::Control::OnSizeChanged","System.Windows.Forms.Control.OnStyleChanged","System::Windows::Forms::Control::OnStyleChanged","System.Windows.Forms.Control.OnSystemColorsChanged","System::Windows::Forms::Control::OnSystemColorsChanged","System.Windows.Forms.Control.OnTabIndexChanged","System::Windows::Forms::Control::OnTabIndexChanged","System.Windows.Forms.Control.OnTabStopChanged","System::Windows::Forms::Control::OnTabStopChanged","System.Windows.Forms.Control.OnTextChanged","System::Windows::Forms::Control::OnTextChanged","System.Windows.Forms.Control.OnValidated","System::Windows::Forms::Control::OnValidated","System.Windows.Forms.Control.OnValidating","System::Windows::Forms::Control::OnValidating","System.Windows.Forms.Control.OnVisibleChanged","System::Windows::Forms::Control::OnVisibleChanged","System.Windows.Forms.Control.Padding","System::Windows::Forms::Control::Padding","System.Windows.Forms.Control.PaddingChanged","System::Windows::Forms::Control::PaddingChanged","System.Windows.Forms.Control.Paint","System::Windows::Forms::Control::Paint","System.Windows.Forms.Control.Parent","System::Windows::Forms::Control::Parent","System.Windows.Forms.Control.ParentChanged","System::Windows::Forms::Control::ParentChanged","System.Windows.Forms.Control.PerformLayout","System::Windows::Forms::Control::PerformLayout","System.Windows.Forms.Control.PointToClient","System::Windows::Forms::Control::PointToClient","System.Windows.Forms.Control.PointToScreen","System::Windows::Forms::Control::PointToScreen","System.Windows.Forms.Control.PreferredSize","System::Windows::Forms::Control::PreferredSize","System.Windows.Forms.Control.PreProcessControlMessage","System::Windows::Forms::Control::PreProcessControlMessage","System.Windows.Forms.Control.PreProcessMessage","System::Windows::Forms::Control::PreProcessMessage","System.Windows.Forms.Control.PreviewKeyDown","System::Windows::Forms::Control::PreviewKeyDown","System.Windows.Forms.Control.ProcessCmdKey","System::Windows::Forms::Control::ProcessCmdKey","System.Windows.Forms.Control.ProcessDialogChar","System::Windows::Forms::Control::ProcessDialogChar","System.Windows.Forms.Control.ProcessDialogKey","System::Windows::Forms::Control::ProcessDialogKey","System.Windows.Forms.Control.ProcessKeyEventArgs","System::Windows::Forms::Control::ProcessKeyEventArgs","System.Windows.Forms.Control.ProcessKeyMessage","System::Windows::Forms::Control::ProcessKeyMessage","System.Windows.Forms.Control.ProcessKeyPreview","System::Windows::Forms::Control::ProcessKeyPreview","System.Windows.Forms.Control.ProcessMnemonic","System::Windows::Forms::Control::ProcessMnemonic","System.Windows.Forms.Control.ProductName","System::Windows::Forms::Control::ProductName","System.Windows.Forms.Control.ProductVersion","System::Windows::Forms::Control::ProductVersion","System.Windows.Forms.Control.PropagatingImeMode","System::Windows::Forms::Control::PropagatingImeMode","System.Windows.Forms.Control.QueryAccessibilityHelp","System::Windows::Forms::Control::QueryAccessibilityHelp","System.Windows.Forms.Control.QueryContinueDrag","System::Windows::Forms::Control::QueryContinueDrag","System.Windows.Forms.Control.RaiseDragEvent","System::Windows::Forms::Control::RaiseDragEvent","System.Windows.Forms.Control.RaiseKeyEvent","System::Windows::Forms::Control::RaiseKeyEvent","System.Windows.Forms.Control.RaiseMouseEvent","System::Windows::Forms::Control::RaiseMouseEvent","System.Windows.Forms.Control.RaisePaintEvent","System::Windows::Forms::Control::RaisePaintEvent","System.Windows.Forms.Control.RecreateHandle","System::Windows::Forms::Control::RecreateHandle","System.Windows.Forms.Control.RecreatingHandle","System::Windows::Forms::Control::RecreatingHandle","System.Windows.Forms.Control.RectangleToClient","System::Windows::Forms::Control::RectangleToClient","System.Windows.Forms.Control.RectangleToScreen","System::Windows::Forms::Control::RectangleToScreen","System.Windows.Forms.Control.ReflectMessage","System::Windows::Forms::Control::ReflectMessage","System.Windows.Forms.Control.Refresh","System::Windows::Forms::Control::Refresh","System.Windows.Forms.Control.Region","System::Windows::Forms::Control::Region","System.Windows.Forms.Control.RegionChanged","System::Windows::Forms::Control::RegionChanged","System.Windows.Forms.Control.RenderRightToLeft","System::Windows::Forms::Control::RenderRightToLeft","System.Windows.Forms.Control.ResetBackColor","System::Windows::Forms::Control::ResetBackColor","System.Windows.Forms.Control.ResetBindings","System::Windows::Forms::Control::ResetBindings","System.Windows.Forms.Control.ResetCursor","System::Windows::Forms::Control::ResetCursor","System.Windows.Forms.Control.ResetFont","System::Windows::Forms::Control::ResetFont","System.Windows.Forms.Control.ResetForeColor","System::Windows::Forms::Control::ResetForeColor","System.Windows.Forms.Control.ResetImeMode","System::Windows::Forms::Control::ResetImeMode","System.Windows.Forms.Control.ResetMouseEventArgs","System::Windows::Forms::Control::ResetMouseEventArgs","System.Windows.Forms.Control.ResetRightToLeft","System::Windows::Forms::Control::ResetRightToLeft","System.Windows.Forms.Control.ResetText","System::Windows::Forms::Control::ResetText","System.Windows.Forms.Control.Resize","System::Windows::Forms::Control::Resize","System.Windows.Forms.Control.ResizeRedraw","System::Windows::Forms::Control::ResizeRedraw","System.Windows.Forms.Control.ResumeLayout","System::Windows::Forms::Control::ResumeLayout","System.Windows.Forms.Control.Right","System::Windows::Forms::Control::Right","System.Windows.Forms.Control.RightToLeft","System::Windows::Forms::Control::RightToLeft","System.Windows.Forms.Control.RightToLeftChanged","System::Windows::Forms::Control::RightToLeftChanged","System.Windows.Forms.Control.RtlTranslateAlignment","System::Windows::Forms::Control::RtlTranslateAlignment","System.Windows.Forms.Control.RtlTranslateContent","System::Windows::Forms::Control::RtlTranslateContent","System.Windows.Forms.Control.RtlTranslateHorizontal","System::Windows::Forms::Control::RtlTranslateHorizontal","System.Windows.Forms.Control.RtlTranslateLeftRight","System::Windows::Forms::Control::RtlTranslateLeftRight","System.Windows.Forms.Control.Scale","System::Windows::Forms::Control::Scale","System.Windows.Forms.Control.ScaleChildren","System::Windows::Forms::Control::ScaleChildren","System.Windows.Forms.Control.ScaleControl","System::Windows::Forms::Control::ScaleControl","System.Windows.Forms.Control.ScaleCore","System::Windows::Forms::Control::ScaleCore","System.Windows.Forms.Control.Select","System::Windows::Forms::Control::Select","System.Windows.Forms.Control.SelectNextControl","System::Windows::Forms::Control::SelectNextControl","System.Windows.Forms.Control.SendToBack","System::Windows::Forms::Control::SendToBack","System.Windows.Forms.Control.SetAutoSizeMode","System::Windows::Forms::Control::SetAutoSizeMode","System.Windows.Forms.Control.SetBounds","System::Windows::Forms::Control::SetBounds","System.Windows.Forms.Control.SetBoundsCore","System::Windows::Forms::Control::SetBoundsCore","System.Windows.Forms.Control.SetClientSizeCore","System::Windows::Forms::Control::SetClientSizeCore","System.Windows.Forms.Control.SetStyle","System::Windows::Forms::Control::SetStyle","System.Windows.Forms.Control.SetTopLevel","System::Windows::Forms::Control::SetTopLevel","System.Windows.Forms.Control.SetVisibleCore","System::Windows::Forms::Control::SetVisibleCore","System.Windows.Forms.Control.Show","System::Windows::Forms::Control::Show","System.Windows.Forms.Control.ShowFocusCues","System::Windows::Forms::Control::ShowFocusCues","System.Windows.Forms.Control.ShowKeyboardCues","System::Windows::Forms::Control::ShowKeyboardCues","System.Windows.Forms.Control.Site","System::Windows::Forms::Control::Site","System.Windows.Forms.Control.Size","System::Windows::Forms::Control::Size","System.Windows.Forms.Control.SizeChanged","System::Windows::Forms::Control::SizeChanged","System.Windows.Forms.Control.SizeFromClientSize","System::Windows::Forms::Control::SizeFromClientSize","System.Windows.Forms.Control.StyleChanged","System::Windows::Forms::Control::StyleChanged","System.Windows.Forms.Control.SuspendLayout","System::Windows::Forms::Control::SuspendLayout","System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop","System::Windows::Forms::Control::System#Windows#Forms#IDropTarget#OnDragDrop","System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter","System::Windows::Forms::Control::System#Windows#Forms#IDropTarget#OnDragEnter","System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave","System::Windows::Forms::Control::System#Windows#Forms#IDropTarget#OnDragLeave","System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver","System::Windows::Forms::Control::System#Windows#Forms#IDropTarget#OnDragOver","System.Windows.Forms.Control.SystemColorsChanged","System::Windows::Forms::Control::SystemColorsChanged","System.Windows.Forms.Control.TabIndex","System::Windows::Forms::Control::TabIndex","System.Windows.Forms.Control.TabIndexChanged","System::Windows::Forms::Control::TabIndexChanged","System.Windows.Forms.Control.TabStop","System::Windows::Forms::Control::TabStop","System.Windows.Forms.Control.TabStopChanged","System::Windows::Forms::Control::TabStopChanged","System.Windows.Forms.Control.Tag","System::Windows::Forms::Control::Tag","System.Windows.Forms.Control.Text","System::Windows::Forms::Control::Text","System.Windows.Forms.Control.TextChanged","System::Windows::Forms::Control::TextChanged","System.Windows.Forms.Control.Top","System::Windows::Forms::Control::Top","System.Windows.Forms.Control.TopLevelControl","System::Windows::Forms::Control::TopLevelControl","System.Windows.Forms.Control.Update","System::Windows::Forms::Control::Update","System.Windows.Forms.Control.UpdateBounds","System::Windows::Forms::Control::UpdateBounds","System.Windows.Forms.Control.UpdateStyles","System::Windows::Forms::Control::UpdateStyles","System.Windows.Forms.Control.UpdateZOrder","System::Windows::Forms::Control::UpdateZOrder","System.Windows.Forms.Control.UseWaitCursor","System::Windows::Forms::Control::UseWaitCursor","System.Windows.Forms.Control.Validated","System::Windows::Forms::Control::Validated","System.Windows.Forms.Control.Validating","System::Windows::Forms::Control::Validating","System.Windows.Forms.Control.Visible","System::Windows::Forms::Control::Visible","System.Windows.Forms.Control.VisibleChanged","System::Windows::Forms::Control::VisibleChanged","System.Windows.Forms.Control.Width","System::Windows::Forms::Control::Width","System.Windows.Forms.Control.WindowTarget","System::Windows::Forms::Control::WindowTarget","System.Windows.Forms.Control.WndProc","System::Windows::Forms::Control::WndProc"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"5d8df2ba-8e1d-9267-1c8c-7264fae78cc5","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/Control.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Control class | Microsoft Docs","_op_ogTitle":"Control class","description":"Defines the base class for controls, which are components with visual representation.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.Control","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.control","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.control","fileRelativePath":"System.Windows.Forms.Control.html"},"themesRelativePathToOutputRoot":"_themes/"}