{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">Log</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides a property and methods for writing event and exception information to the application&#39;s log listeners.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class Log</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">Log</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The <code>My.Application.Log</code> object provides a straightforward entry point from which to access the .NET Framework&#39;s logging services. The <code>WriteEntry</code> and <code>WriteException</code> methods write messages to the application&#39;s log listeners. The listeners can be configured by the application&#39;s configuration file. For more information, see <a href=\"../Topic/Walkthrough:%20Changing%20Where%20My.Application.Log%20Writes%20Information%20(Visual%20Basic).md\" data-linktype=\"relative-path\">Walkthrough: Changing Where My.Application.Log Writes Information</a> and <a href=\"../Topic/Working%20with%20Application%20Logs%20in%20Visual%20Basic.md\" data-linktype=\"relative-path\">Working with Application Logs</a>.  </p>\n<p> The <code>My.Application.Log</code> object is available only for client applications. For Web applications, use <code>My.Log</code>. For more information, see <a class=\"xref\" href=\"microsoft.visualbasic.logging.asplog\" data-linktype=\"relative-path\">AspLog</a>.  </p>\n<p> The following table lists examples of tasks involving the <code>My.Application.Log</code> object.  </p>\n<table>\n<thead>\n<tr>\n<th>To</th>\n<th>See</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Write event information to the application&#39;s log listeners</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Log%20Messages%20(Visual%20Basic).md\" data-linktype=\"relative-path\">How to: Write Log Messages</a></td>\n</tr>\n<tr>\n<td>Write exception information to the application&#39;s log listeners</td>\n<td><a href=\"../Topic/How%20to:%20Log%20Exceptions%20in%20Visual%20Basic.md\" data-linktype=\"relative-path\">How to: Log Exceptions</a></td>\n</tr>\n<tr>\n<td>Determine where <code>My.Application.Log</code> writes information</td>\n<td><a href=\"../Topic/Walkthrough:%20Determining%20Where%20My.Application.Log%20Writes%20Information%20(Visual%20Basic).md\" data-linktype=\"relative-path\">Walkthrough: Determining Where My.Application.Log Writes Information</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Logging_Log__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Log()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"microsoft.visualbasic.logging.log\" data-linktype=\"relative-path\">Log</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Log ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Logging_Log__ctor_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Log(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"microsoft.visualbasic.logging.log\" data-linktype=\"relative-path\">Log</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Log (string name);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>name</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>. The name to give to the <span class=\"xref\">crosoft.VisualBasic.Logging.Log.TraceSource*</span> property object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Logging_Log_DefaultFileLogWriter\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefaultFileLogWriter</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the file the <a class=\"xref\" href=\"microsoft.visualbasic.logging.filelogtracelistener\" data-linktype=\"relative-path\">FileLogTraceListener</a> object that underlies the <code>Log</code> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Microsoft.VisualBasic.Logging.FileLogTraceListener DefaultFileLogWriter { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.logging.filelogtracelistener\" data-linktype=\"relative-path\">FileLogTraceListener</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns the <a class=\"xref\" href=\"microsoft.visualbasic.logging.filelogtracelistener\" data-linktype=\"relative-path\">FileLogTraceListener</a> object that underlies the <code>Log</code> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can use this property to determine the current configuration of the <a class=\"xref\" href=\"microsoft.visualbasic.logging.filelogtracelistener\" data-linktype=\"relative-path\">FileLogTraceListener</a> object.  </p>\n<p> In client applications, the <code>Log</code> object is available through the <code>My.Application.Log</code> object. In Web applications, the <code>Log</code> object is available through the <code>My.Log</code> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Logging_Log_TraceSource\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TraceSource</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets to the <a class=\"xref\" href=\"system.diagnostics.tracesource\" data-linktype=\"relative-path\">TraceSource</a> object that underlies the <code>Log</code> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Diagnostics.TraceSource TraceSource { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracesource\" data-linktype=\"relative-path\">TraceSource</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns the <a class=\"xref\" href=\"system.diagnostics.tracesource\" data-linktype=\"relative-path\">TraceSource</a> object that underlies the <code>Log</code> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can use this property to determine the current configuration of the <code>Log</code> object.  </p>\n<p> In client applications, the <code>Log</code> object is available through the <code>My.Application.Log</code> object. In Web applications, the <code>Log</code> object is available through the <code>My.Log</code> object.  </p>\n<p> This is an advanced member; it does not show in IntelliSense unless you select the <strong>All</strong> tab.  </p>\n<p> The following table lists an example of a task involving the <code>TraceSource</code> property.  </p>\n<table>\n<thead>\n<tr>\n<th>To</th>\n<th>See</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Get information for each of the <code>Log</code> object&#39;s log listeners.</td>\n<td><a href=\"../Topic/Troubleshooting:%20Log%20Listeners%20(Visual%20Basic).md\" data-linktype=\"relative-path\">Troubleshooting: Log Listeners</a></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"availability-by-project-type\">Availability by Project Type</h2>\n<table>\n<thead>\n<tr>\n<th>Project type</th>\n<th>Available</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Windows Application</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Class Library</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Console Application</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Windows Control Library</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Web Control Library</td>\n<td>No</td>\n</tr>\n<tr>\n<td>Windows Service</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Web Site</td>\n<td><strong>Yes</strong></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Logging_Log_InitializeWithDefaultsSinceNoConfigExists\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InitializeWithDefaultsSinceNoConfigExists()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a new <a class=\"xref\" href=\"microsoft.visualbasic.logging.filelogtracelistener\" data-linktype=\"relative-path\">FileLogTraceListener</a> object and adds it to the <span class=\"xref\">stem.Diagnostics.TraceSource.Listeners*</span> collection.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void InitializeWithDefaultsSinceNoConfigExists ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method creates a new <a class=\"xref\" href=\"microsoft.visualbasic.logging.filelogtracelistener\" data-linktype=\"relative-path\">FileLogTraceListener</a>, sets its name to <code>FileLog</code>, and configures it to log messages with severity level <a class=\"xref\" href=\"system.diagnostics.sourcelevels\" data-linktype=\"relative-path\">SourceLevels</a> and greater. The new <a class=\"xref\" href=\"microsoft.visualbasic.logging.filelogtracelistener\" data-linktype=\"relative-path\">FileLogTraceListener</a> object is then added to the <a class=\"xref\" href=\"system.diagnostics.tracesource#System_Diagnostics_TraceSource_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection.  </p>\n<p> The <a class=\"xref\" href=\"microsoft.visualbasic.logging.log#Microsoft_VisualBasic_Logging_Log__ctor_\" data-linktype=\"relative-path\">Log</a> calls the method if the <a class=\"xref\" href=\"microsoft.visualbasic.logging.log#Microsoft_VisualBasic_Logging_Log_TraceSource_\" data-linktype=\"relative-path\">TraceSource</a> property has not been configured. The trace source can be configured in the application&#39;s configuration file.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Logging_Log_WriteEntry_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteEntry(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes a message to the application&#39;s log listeners.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteEntry (string message);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. The message to log. If <code>message</code> is <code>Nothing</code>, an empty string is used.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Code with partial trust calls the method, but writes to an event log listener that requires full trust.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>WriteEntry</code> method writes a message to the application&#39;s event log listeners.  </p>\n<p> In client applications, the <code>Log</code> object is available through the <code>My.Application.Log</code> object. In Web applications, the <code>Log</code> object is available through the <code>My.Log</code> object.  </p>\n<p> To learn which log listeners receive the <code>WriteEntry</code> method&#39;s messages, see <a href=\"../Topic/Walkthrough:%20Determining%20Where%20My.Application.Log%20Writes%20Information%20(Visual%20Basic).md\" data-linktype=\"relative-path\">Walkthrough: Determining Where My.Application.Log Writes Information</a>. You can change default log listeners. For more information, see <a href=\"../Topic/Working%20with%20Application%20Logs%20in%20Visual%20Basic.md\" data-linktype=\"relative-path\">Working with Application Logs</a>.  </p>\n<p> For overloads that do not take the <code>id</code> argument, the <code>id</code> written to the log is defined by the following table.  </p>\n<table>\n<thead>\n<tr>\n<th><code>severity</code></th>\n<th>Default <code>id</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>0</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>1</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>2</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>3</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>4</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>5</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>6</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>7</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>8</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>9</td>\n</tr>\n</tbody>\n</table>\n<p> The following table lists examples of tasks involving the <code>WriteEntry</code> method.  </p>\n<table>\n<thead>\n<tr>\n<th>To</th>\n<th>See</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Write event information to the application&#39;s log listeners</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Log%20Messages%20(Visual%20Basic).md\" data-linktype=\"relative-path\">How to: Write Log Messages</a></td>\n</tr>\n<tr>\n<td>Determine where <code>Log</code> writes information</td>\n<td><a href=\"../Topic/Walkthrough:%20Determining%20Where%20My.Application.Log%20Writes%20Information%20(Visual%20Basic).md\" data-linktype=\"relative-path\">Walkthrough: Determining Where My.Application.Log Writes Information</a></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"availability-by-project-type\">Availability by Project Type</h2>\n<table>\n<thead>\n<tr>\n<th>Project type</th>\n<th>Available</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Windows Application</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Class Library</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Console Application</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Windows Control Library</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Web Control Library</td>\n<td>No</td>\n</tr>\n<tr>\n<td>Windows Service</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Web Site</td>\n<td><strong>Yes</strong></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Logging_Log_WriteEntry_System_String_System_Diagnostics_TraceEventType_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteEntry(String,TraceEventType)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes a message to the application&#39;s log listeners.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteEntry (string message, System.Diagnostics.TraceEventType severity);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. The message to log. If <code>message</code> is <code>Nothing</code>, an empty string is used.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>severity</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type of message. By default, <code>TraceEventType.Information</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The message type is not one of the <a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a> enumeration values.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Code with partial trust calls the method, but writes to an event log listener that requires full trust.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>WriteEntry</code> method writes a message to the application&#39;s event log listeners.  </p>\n<p> In client applications, the <code>Log</code> object is available through the <code>My.Application.Log</code> object. In Web applications, the <code>Log</code> object is available through the <code>My.Log</code> object.  </p>\n<p> To learn which log listeners receive the <code>WriteEntry</code> method&#39;s messages, see <a href=\"../Topic/Walkthrough:%20Determining%20Where%20My.Application.Log%20Writes%20Information%20(Visual%20Basic).md\" data-linktype=\"relative-path\">Walkthrough: Determining Where My.Application.Log Writes Information</a>. You can change default log listeners. For more information, see <a href=\"../Topic/Working%20with%20Application%20Logs%20in%20Visual%20Basic.md\" data-linktype=\"relative-path\">Working with Application Logs</a>.  </p>\n<p> For overloads that do not take the <code>id</code> argument, the <code>id</code> written to the log is defined by the following table.  </p>\n<table>\n<thead>\n<tr>\n<th><code>severity</code></th>\n<th>Default <code>id</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>0</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>1</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>2</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>3</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>4</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>5</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>6</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>7</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>8</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>9</td>\n</tr>\n</tbody>\n</table>\n<p> The following table lists examples of tasks involving the <code>WriteEntry</code> method.  </p>\n<table>\n<thead>\n<tr>\n<th>To</th>\n<th>See</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Write event information to the application&#39;s log listeners</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Log%20Messages%20(Visual%20Basic).md\" data-linktype=\"relative-path\">How to: Write Log Messages</a></td>\n</tr>\n<tr>\n<td>Determine where <code>Log</code> writes information</td>\n<td><a href=\"../Topic/Walkthrough:%20Determining%20Where%20My.Application.Log%20Writes%20Information%20(Visual%20Basic).md\" data-linktype=\"relative-path\">Walkthrough: Determining Where My.Application.Log Writes Information</a></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"availability-by-project-type\">Availability by Project Type</h2>\n<table>\n<thead>\n<tr>\n<th>Project type</th>\n<th>Available</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Windows Application</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Class Library</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Console Application</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Windows Control Library</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Web Control Library</td>\n<td>No</td>\n</tr>\n<tr>\n<td>Windows Service</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Web Site</td>\n<td><strong>Yes</strong></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Logging_Log_WriteEntry_System_String_System_Diagnostics_TraceEventType_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteEntry(String,TraceEventType,Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes a message to the application&#39;s log listeners.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteEntry (string message, System.Diagnostics.TraceEventType severity, int id);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. The message to log. If <code>message</code> is <code>Nothing</code>, an empty string is used.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>severity</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type of message. By default, <code>TraceEventType.Information</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>id</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Message identifier, typically used for correlation. By default, related to <code>entryType</code> as described in the table.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The message type is not one of the <a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a> enumeration values.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Code with partial trust calls the method, but writes to an event log listener that requires full trust.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>WriteEntry</code> method writes a message to the application&#39;s event log listeners.  </p>\n<p> In client applications, the <code>Log</code> object is available through the <code>My.Application.Log</code> object. In Web applications, the <code>Log</code> object is available through the <code>My.Log</code> object.  </p>\n<p> To learn which log listeners receive the <code>WriteEntry</code> method&#39;s messages, see <a href=\"../Topic/Walkthrough:%20Determining%20Where%20My.Application.Log%20Writes%20Information%20(Visual%20Basic).md\" data-linktype=\"relative-path\">Walkthrough: Determining Where My.Application.Log Writes Information</a>. You can change default log listeners. For more information, see <a href=\"../Topic/Working%20with%20Application%20Logs%20in%20Visual%20Basic.md\" data-linktype=\"relative-path\">Working with Application Logs</a>.  </p>\n<p> For overloads that do not take the <code>id</code> argument, the <code>id</code> written to the log is defined by the following table.  </p>\n<table>\n<thead>\n<tr>\n<th><code>severity</code></th>\n<th>Default <code>id</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>0</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>1</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>2</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>3</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>4</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>5</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>6</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>7</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>8</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>9</td>\n</tr>\n</tbody>\n</table>\n<p> The following table lists examples of tasks involving the <code>WriteEntry</code> method.  </p>\n<table>\n<thead>\n<tr>\n<th>To</th>\n<th>See</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Write event information to the application&#39;s log listeners</td>\n<td><a href=\"../Topic/How%20to:%20Write%20Log%20Messages%20(Visual%20Basic).md\" data-linktype=\"relative-path\">How to: Write Log Messages</a></td>\n</tr>\n<tr>\n<td>Determine where <code>Log</code> writes information</td>\n<td><a href=\"../Topic/Walkthrough:%20Determining%20Where%20My.Application.Log%20Writes%20Information%20(Visual%20Basic).md\" data-linktype=\"relative-path\">Walkthrough: Determining Where My.Application.Log Writes Information</a></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"availability-by-project-type\">Availability by Project Type</h2>\n<table>\n<thead>\n<tr>\n<th>Project type</th>\n<th>Available</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Windows Application</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Class Library</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Console Application</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Windows Control Library</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Web Control Library</td>\n<td>No</td>\n</tr>\n<tr>\n<td>Windows Service</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Web Site</td>\n<td><strong>Yes</strong></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Logging_Log_WriteException_System_Exception_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteException(Exception)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes exception information to the application&#39;s log listeners.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteException (Exception ex);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ex</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. Exception to log.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>ex</code> is <code>Nothing</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Code with partial trust calls the method, but writes to an event log listener that requires full trust.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>WriteException</code> method writes the information contained in an exception to the application&#39;s event log listeners.  </p>\n<p> In client applications, the <code>Log</code> object is available through the <code>My.Application.Log</code> object. In Web applications, the <code>Log</code> object is available through the <code>My.Log</code> object.  </p>\n<p> To learn which log listeners receive the <code>WriteException</code> method&#39;s messages, see <a href=\"../Topic/Walkthrough:%20Determining%20Where%20My.Application.Log%20Writes%20Information%20(Visual%20Basic).md\" data-linktype=\"relative-path\">Walkthrough: Determining Where My.Application.Log Writes Information</a>. You can change default log listeners. For more information, see <a href=\"../Topic/Working%20with%20Application%20Logs%20in%20Visual%20Basic.md\" data-linktype=\"relative-path\">Working with Application Logs</a>.  </p>\n<p> For overloads that do not take the <code>id</code> argument, the identifier written to the log is defined by the following table.  </p>\n<table>\n<thead>\n<tr>\n<th><code>severity</code></th>\n<th>Default <code>id</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>0</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>1</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>2</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>3</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>4</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>5</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>6</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>7</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>8</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>9</td>\n</tr>\n</tbody>\n</table>\n<p> The following table lists examples of tasks involving the <code>WriteException</code> method.  </p>\n<table>\n<thead>\n<tr>\n<th>To</th>\n<th>See</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Write exception information to the application&#39;s event log listeners.</td>\n<td><a href=\"../Topic/How%20to:%20Log%20Exceptions%20in%20Visual%20Basic.md\" data-linktype=\"relative-path\">How to: Log Exceptions</a></td>\n</tr>\n<tr>\n<td>Determine where <code>Log</code> writes information.</td>\n<td><a href=\"../Topic/Walkthrough:%20Determining%20Where%20My.Application.Log%20Writes%20Information%20(Visual%20Basic).md\" data-linktype=\"relative-path\">Walkthrough: Determining Where My.Application.Log Writes Information</a></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"availability-by-project-type\">Availability by Project Type</h2>\n<table>\n<thead>\n<tr>\n<th>Project type</th>\n<th>Available</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Windows Application</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Class Library</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Console Application</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Windows Control Library</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Web Control Library</td>\n<td>No</td>\n</tr>\n<tr>\n<td>Windows Service</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Web Site</td>\n<td><strong>Yes</strong></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Logging_Log_WriteException_System_Exception_System_Diagnostics_TraceEventType_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteException(Exception,TraceEventType,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes exception information to the application&#39;s log listeners.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteException (Exception ex, System.Diagnostics.TraceEventType severity, string additionalInfo);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ex</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. Exception to log.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>severity</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type of message. By default, <a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>additionalInfo</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>String to append to the message. By default, this is an empty string.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>ex</code> is <code>Nothing</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The message type is not one of the <a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a> enumeration values.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Code with partial trust calls the method, but writes to an event log listener that requires full trust.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>WriteException</code> method writes the information contained in an exception to the application&#39;s event log listeners.  </p>\n<p> In client applications, the <code>Log</code> object is available through the <code>My.Application.Log</code> object. In Web applications, the <code>Log</code> object is available through the <code>My.Log</code> object.  </p>\n<p> To learn which log listeners receive the <code>WriteException</code> method&#39;s messages, see <a href=\"../Topic/Walkthrough:%20Determining%20Where%20My.Application.Log%20Writes%20Information%20(Visual%20Basic).md\" data-linktype=\"relative-path\">Walkthrough: Determining Where My.Application.Log Writes Information</a>. You can change default log listeners. For more information, see <a href=\"../Topic/Working%20with%20Application%20Logs%20in%20Visual%20Basic.md\" data-linktype=\"relative-path\">Working with Application Logs</a>.  </p>\n<p> For overloads that do not take the <code>id</code> argument, the identifier written to the log is defined by the following table.  </p>\n<table>\n<thead>\n<tr>\n<th><code>severity</code></th>\n<th>Default <code>id</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>0</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>1</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>2</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>3</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>4</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>5</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>6</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>7</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>8</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>9</td>\n</tr>\n</tbody>\n</table>\n<p> The following table lists examples of tasks involving the <code>WriteException</code> method.  </p>\n<table>\n<thead>\n<tr>\n<th>To</th>\n<th>See</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Write exception information to the application&#39;s event log listeners.</td>\n<td><a href=\"../Topic/How%20to:%20Log%20Exceptions%20in%20Visual%20Basic.md\" data-linktype=\"relative-path\">How to: Log Exceptions</a></td>\n</tr>\n<tr>\n<td>Determine where <code>Log</code> writes information.</td>\n<td><a href=\"../Topic/Walkthrough:%20Determining%20Where%20My.Application.Log%20Writes%20Information%20(Visual%20Basic).md\" data-linktype=\"relative-path\">Walkthrough: Determining Where My.Application.Log Writes Information</a></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"availability-by-project-type\">Availability by Project Type</h2>\n<table>\n<thead>\n<tr>\n<th>Project type</th>\n<th>Available</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Windows Application</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Class Library</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Console Application</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Windows Control Library</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Web Control Library</td>\n<td>No</td>\n</tr>\n<tr>\n<td>Windows Service</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Web Site</td>\n<td><strong>Yes</strong></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Logging_Log_WriteException_System_Exception_System_Diagnostics_TraceEventType_System_String_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteException(Exception,TraceEventType,String,Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes exception information to the application&#39;s log listeners.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteException (Exception ex, System.Diagnostics.TraceEventType severity, string additionalInfo, int id);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ex</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. Exception to log.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>severity</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type of message. By default, <a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>additionalInfo</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>String to append to the message. By default, this is an empty string.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>id</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Message identifier, typically used for correlation. By default, related to <code>entryType</code> as described in the table in the Remarks section.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>ex</code> is <code>Nothing</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The message type is not one of the <a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a> enumeration values.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Code with partial trust calls the method, but writes to an event log listener that requires full trust.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>WriteException</code> method writes the information contained in an exception to the application&#39;s event log listeners.  </p>\n<p> In client applications, the <code>Log</code> object is available through the <code>My.Application.Log</code> object. In Web applications, the <code>Log</code> object is available through the <code>My.Log</code> object.  </p>\n<p> To learn which log listeners receive the <code>WriteException</code> method&#39;s messages, see <a href=\"../Topic/Walkthrough:%20Determining%20Where%20My.Application.Log%20Writes%20Information%20(Visual%20Basic).md\" data-linktype=\"relative-path\">Walkthrough: Determining Where My.Application.Log Writes Information</a>. You can change default log listeners. For more information, see <a href=\"../Topic/Working%20with%20Application%20Logs%20in%20Visual%20Basic.md\" data-linktype=\"relative-path\">Working with Application Logs</a>.  </p>\n<p> For overloads that do not take the <code>id</code> argument, the identifier written to the log is defined by the following table.  </p>\n<table>\n<thead>\n<tr>\n<th><code>severity</code></th>\n<th>Default <code>id</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>0</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>1</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>2</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>3</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>4</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>5</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>6</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>7</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>8</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a></td>\n<td>9</td>\n</tr>\n</tbody>\n</table>\n<p> The following table lists examples of tasks involving the <code>WriteException</code> method.  </p>\n<table>\n<thead>\n<tr>\n<th>To</th>\n<th>See</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Write exception information to the application&#39;s event log listeners.</td>\n<td><a href=\"../Topic/How%20to:%20Log%20Exceptions%20in%20Visual%20Basic.md\" data-linktype=\"relative-path\">How to: Log Exceptions</a></td>\n</tr>\n<tr>\n<td>Determine where <code>Log</code> writes information.</td>\n<td><a href=\"../Topic/Walkthrough:%20Determining%20Where%20My.Application.Log%20Writes%20Information%20(Visual%20Basic).md\" data-linktype=\"relative-path\">Walkthrough: Determining Where My.Application.Log Writes Information</a></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"availability-by-project-type\">Availability by Project Type</h2>\n<table>\n<thead>\n<tr>\n<th>Project type</th>\n<th>Available</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Windows Application</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Class Library</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Console Application</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Windows Control Library</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Web Control Library</td>\n<td>No</td>\n</tr>\n<tr>\n<td>Windows Service</td>\n<td><strong>Yes</strong></td>\n</tr>\n<tr>\n<td>Web Site</td>\n<td><strong>Yes</strong></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.VisualBasic.Logging.Log.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.VisualBasic.Logging.Log.yml\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Logging.Log\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Logging.Log..ctor\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Logging.Log.TraceSource\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Logging.Log.WriteEntry\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Logging.Log.WriteException\">\r\n<meta name=\"APILocation\" content=\"Microsoft.VisualBasic.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"3e0da4a7-71ae-5379-8195-9214ce8c600e\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a property and methods for writing event and exception information to the application&amp;#39;s log listeners.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/Microsoft.VisualBasic.Logging/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"Microsoft.VisualBasic.Logging.Log\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.VisualBasic.Logging.Log.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.VisualBasic.Logging.Log.yml","open_to_public_contributors":true,"api_name":["Microsoft.VisualBasic.Logging.Log","Microsoft.VisualBasic.Logging.Log..ctor","Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter","Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists","Microsoft.VisualBasic.Logging.Log.TraceSource","Microsoft.VisualBasic.Logging.Log.WriteEntry","Microsoft.VisualBasic.Logging.Log.WriteException"],"api_location":["Microsoft.VisualBasic.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["Microsoft.VisualBasic.Logging.Log","Microsoft::VisualBasic::Logging::Log","Microsoft.VisualBasic.Logging.Log.#ctor","Microsoft::VisualBasic::Logging::Log::#ctor","Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter","Microsoft::VisualBasic::Logging::Log::DefaultFileLogWriter","Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists","Microsoft::VisualBasic::Logging::Log::InitializeWithDefaultsSinceNoConfigExists","Microsoft.VisualBasic.Logging.Log.TraceSource","Microsoft::VisualBasic::Logging::Log::TraceSource","Microsoft.VisualBasic.Logging.Log.WriteEntry","Microsoft::VisualBasic::Logging::Log::WriteEntry","Microsoft.VisualBasic.Logging.Log.WriteException","Microsoft::VisualBasic::Logging::Log::WriteException"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"3e0da4a7-71ae-5379-8195-9214ce8c600e","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/Microsoft.VisualBasic.Logging/Log.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Log class | Microsoft Docs","_op_ogTitle":"Log class","description":"Provides a property and methods for writing event and exception information to the application&#39;s log listeners.\n","toc_asset_id":"_splitted/Microsoft.VisualBasic.Logging/toc.json","toc_rel":"_splitted/Microsoft.VisualBasic.Logging/toc.json","source_url":"","ms.assetid":"Microsoft.VisualBasic.Logging.Log","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.visualbasic.logging.log","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.visualbasic.logging.log","fileRelativePath":"Microsoft.VisualBasic.Logging.Log.html"},"themesRelativePathToOutputRoot":"_themes/"}