{"content":"    \r\n    <h1 id=\"System_Transactions_Transaction\">\r\n      <span class=\"lang-csharp\">Transaction</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a transaction.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class Transaction : IDisposable, System.Runtime.Serialization.ISerializable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Transaction</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The <a class=\"xref\" href=\"system.transactions\" data-linktype=\"relative-path\">System.Transactions</a> namespace provides both an explicit programming model based on the Transaction class, as well as an implicit programming model using the <a class=\"xref\" href=\"system.transactions.transactionscope\" data-linktype=\"relative-path\">TransactionScope</a> class, in which transactions are automatically managed by the infrastructure. It is highly recommended that you use the easier implicit model for development. To get started, please see the <a href=\"http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199\" data-linktype=\"external\">Implementing An Implicit Transaction Using Transaction Scope</a> topic. For more information on writing a transactional application, see <a href=\"http://msdn.microsoft.com/en-us/4a7cc4d1-0891-4605-941f-a933b9ce5bc8\" data-linktype=\"external\">Writing A Transactional Application</a>.  </p>\n<p> The Transaction class contains methods used by developers implementing resource managers for enlistment. It also provides functionalities for cloning a transaction and controlling the current transaction context. You can obtain the current transaction, if one is set, using the static <a class=\"xref\" href=\"system.transactions.transaction#System_Transactions_Transaction_Current_\" data-linktype=\"relative-path\">Current</a> property.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Transactions_Transaction_Current\" data-linktype=\"self-bookmark\">Current</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the ambient transaction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Transactions_Transaction_IsolationLevel\" data-linktype=\"self-bookmark\">IsolationLevel</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the isolation level of the transaction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Transactions_Transaction_PromoterType\" data-linktype=\"self-bookmark\">PromoterType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uniquely identifies the format of the <code>byte[]</code> returned by the Promote method when the transaction is promoted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Transactions_Transaction_TransactionInformation\" data-linktype=\"self-bookmark\">TransactionInformation</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves additional information about a transaction.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Transactions_Transaction_Clone\" data-linktype=\"self-bookmark\">Clone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a clone of the transaction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Transactions_Transaction_DependentClone_System_Transactions_DependentCloneOption_\" data-linktype=\"self-bookmark\">DependentClone(DependentCloneOption)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a dependent clone of the transaction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Transactions_Transaction_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the resources that are held by the object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Transactions_Transaction_EnlistDurable_System_Guid_System_Transactions_IEnlistmentNotification_System_Transactions_EnlistmentOptions_\" data-linktype=\"self-bookmark\">EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Enlists a durable resource manager that supports two phase commit to participate in a transaction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Transactions_Transaction_EnlistDurable_System_Guid_System_Transactions_ISinglePhaseNotification_System_Transactions_EnlistmentOptions_\" data-linktype=\"self-bookmark\">EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Enlists a durable resource manager that supports single phase commit optimization to participate in a transaction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Transactions_Transaction_EnlistPromotableSinglePhase_System_Transactions_IPromotableSinglePhaseNotification_\" data-linktype=\"self-bookmark\">EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Enlists a resource manager that has an internal transaction using a promotable single phase enlistment (PSPE).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Transactions_Transaction_EnlistPromotableSinglePhase_System_Transactions_IPromotableSinglePhaseNotification_System_Guid_\" data-linktype=\"self-bookmark\">EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Enlists a resource manager that has an internal transaction using a promotable single phase enlistment (PSPE).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Transactions_Transaction_EnlistVolatile_System_Transactions_IEnlistmentNotification_System_Transactions_EnlistmentOptions_\" data-linktype=\"self-bookmark\">EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Enlists a volatile resource manager that supports two phase commit to participate in a transaction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Transactions_Transaction_EnlistVolatile_System_Transactions_ISinglePhaseNotification_System_Transactions_EnlistmentOptions_\" data-linktype=\"self-bookmark\">EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Enlists a volatile resource manager that supports single phase commit optimization to participate in a transaction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Transactions_Transaction_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether this transaction and the specified object are equal.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Transactions_Transaction_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the hash code for this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Transactions_Transaction_GetPromotedToken\" data-linktype=\"self-bookmark\">GetPromotedToken()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the  <code>byte[]</code> returned by the <code>Promote</code> method when the transaction is promoted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Transactions_Transaction_PromoteAndEnlistDurable_System_Guid_System_Transactions_IPromotableSinglePhaseNotification_System_Transactions_ISinglePhaseNotification_System_Transactions_EnlistmentOptions_\" data-linktype=\"self-bookmark\">PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>[Supported in the .NET Framework 4.5.2 and later versions]  </p>\n<p> Promotes and enlists a durable resource manager that supports two phase commit to participate in a transaction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Transactions_Transaction_Rollback\" data-linktype=\"self-bookmark\">Rollback()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Rolls back (aborts) the transaction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Transactions_Transaction_Rollback_System_Exception_\" data-linktype=\"self-bookmark\">Rollback(Exception)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Rolls back (aborts) the transaction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Transactions_Transaction_SetDistributedTransactionIdentifier_System_Transactions_IPromotableSinglePhaseNotification_System_Guid_\" data-linktype=\"self-bookmark\">SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the distributed transaction identifier generated by the non-MSDTC promoter.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Transactions_Transaction_TransactionCompleted\" data-linktype=\"self-bookmark\">TransactionCompleted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates that the transaction is completed.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Operators\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Transactions_Transaction_op_Equality_System_Transactions_Transaction_System_Transactions_Transaction_\" data-linktype=\"self-bookmark\">op_Equality(Transaction,Transaction)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tests whether two specified <a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a> instances are equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Transactions_Transaction_op_Inequality_System_Transactions_Transaction_System_Transactions_Transaction_\" data-linktype=\"self-bookmark\">op_Inequality(Transaction,Transaction)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value that indicates whether two <a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a> instances are not equal.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Transactions_Transaction_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> with the data required to serialize this transaction.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Transactions_Transaction_Current\">\r\n    \r\n            <a id=\"System_Transactions_Transaction_Current_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Current</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the ambient transaction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Transactions.Transaction Current { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a> that describes the current transaction.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information on ambient transactions, please see the &quot;Managing transaction flow using TransactionScopeOption&quot; section of the <a href=\"../Topic/Implementing%20an%20Implicit%20Transaction%20using%20Transaction%20Scope.md\" data-linktype=\"relative-path\">Implementing an Implicit Transaction using Transaction Scope</a> topic.  </p>\n<p> Although you can set the ambient transaction using this property, you should use the <a class=\"xref\" href=\"system.transactions.transactionscope\" data-linktype=\"relative-path\">TransactionScope</a> object to manipulate the ambient transaction whenever possible.  </p>\n<p> This property is thread static. If you change the ambient transaction using this property inside a <a class=\"xref\" href=\"system.transactions.transactionscope\" data-linktype=\"relative-path\">TransactionScope</a> an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown when <a class=\"xref\" href=\"system.transactions.transactionscope#System_Transactions_TransactionScope_Dispose_\" data-linktype=\"relative-path\">Dispose</a> is called, and the previous ambient transaction value is restored.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Transactions_Transaction_IsolationLevel\">\r\n    \r\n            <a id=\"System_Transactions_Transaction_IsolationLevel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsolationLevel</div>        \r\n          </div>\r\n    \r\n            <p>Gets the isolation level of the transaction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Transactions.IsolationLevel IsolationLevel { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.isolationlevel\" data-linktype=\"relative-path\">IsolationLevel</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.transactions.isolationlevel\" data-linktype=\"relative-path\">IsolationLevel</a> values that indicates the isolation level of the transaction.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The isolation level of a transaction determines what level of access other transactions have to volatile data before a transaction completes. For more information about isolation levels, see the documentation for the <a class=\"xref\" href=\"system.transactions.isolationlevel\" data-linktype=\"relative-path\">IsolationLevel</a> enumeration.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Transactions_Transaction_PromoterType\">\r\n    \r\n            <a id=\"System_Transactions_Transaction_PromoterType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PromoterType</div>        \r\n          </div>\r\n    \r\n            <p>Uniquely identifies the format of the <code>byte[]</code> returned by the Promote method when the transaction is promoted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Guid PromoterType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </div>\r\n                  <p>A guid that uniquely identifies the format of the <code>byte[]</code> returned by the Promote method when the transaction is promoted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the transaction has not yet been promoted and does not yet have a promotable single phase enlistment, the value of this property will be <code>Guid.Empty</code>. If the transaction has been or will be promoted to MSDTC, then the value of this property will be <code>TransactionInterop.PromoterTypeDtc</code>. If the transaction has been or will be promoted by a non-MSDTC promoter, the value of this property will be the value specified to an earlier call to <code>Transaction.EnlistPromotableSinglePhase</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Transactions_Transaction_TransactionInformation\">\r\n    \r\n            <a id=\"System_Transactions_Transaction_TransactionInformation_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TransactionInformation</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves additional information about a transaction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Transactions.TransactionInformation TransactionInformation { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.transactioninformation\" data-linktype=\"relative-path\">TransactionInformation</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.transactions.transactioninformation\" data-linktype=\"relative-path\">TransactionInformation</a> that contains additional information about the transaction.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Transactions_Transaction_Clone\">\r\n    \r\n            <a id=\"System_Transactions_Transaction_Clone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clone()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a clone of the transaction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Transactions.Transaction Clone ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a> that is a copy of the current transaction object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Clones are created to pass transactions.  For example, you might not want to pass a <a class=\"xref\" href=\"system.transactions.committabletransaction\" data-linktype=\"relative-path\">CommittableTransaction</a> to other applications, because you do not want others to commit your transaction.  If you try to marshal or serialize a transaction, a clone is created for you automatically.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Transactions_Transaction_DependentClone_System_Transactions_DependentCloneOption_\">\r\n    \r\n            <a id=\"System_Transactions_Transaction_DependentClone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DependentClone(DependentCloneOption)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a dependent clone of the transaction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Transactions.DependentTransaction DependentClone (System.Transactions.DependentCloneOption cloneOption);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>cloneOption</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.dependentcloneoption\" data-linktype=\"relative-path\">DependentCloneOption</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.transactions.dependentcloneoption\" data-linktype=\"relative-path\">DependentCloneOption</a> that controls what kind of dependent transaction to create.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.dependenttransaction\" data-linktype=\"relative-path\">DependentTransaction</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.transactions.dependenttransaction\" data-linktype=\"relative-path\">DependentTransaction</a> that represents the dependent clone.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A dependent transaction is a transaction whose outcome depends on the outcome of the transaction from which it was cloned.  </p>\n<p> The <code>cloneoption</code> parameter controls what kind of dependent transaction to create. If a dependent transaction is created with <a class=\"xref\" href=\"system.transactions.dependentcloneoption\" data-linktype=\"relative-path\">DependentCloneOption</a>, it blocks the commit process of the transaction until the transaction times out, or <a class=\"xref\" href=\"system.transactions.dependenttransaction#System_Transactions_DependentTransaction_Complete_\" data-linktype=\"relative-path\">Complete</a> is called on the <a class=\"xref\" href=\"system.transactions.dependenttransaction\" data-linktype=\"relative-path\">DependentTransaction</a>. If it is created with <a class=\"xref\" href=\"system.transactions.dependentcloneoption\" data-linktype=\"relative-path\">DependentCloneOption</a>, it automatically aborts the transaction if <a class=\"xref\" href=\"system.transactions.committabletransaction#System_Transactions_CommittableTransaction_Commit_\" data-linktype=\"relative-path\">Commit</a> is called before <a class=\"xref\" href=\"system.transactions.dependenttransaction#System_Transactions_DependentTransaction_Complete_\" data-linktype=\"relative-path\">Complete</a> is called on the <a class=\"xref\" href=\"system.transactions.dependenttransaction\" data-linktype=\"relative-path\">DependentTransaction</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows you how to create a dependent transaction.  </p>\n<pre><code class=\"lang-vb\" name=\"Tx_DependentTx#1\">\t\tPublic Shared Sub Main()\n\t\t\tTry\n\t\t\t\tUsing scope As TransactionScope = New TransactionScope()\n\n\t\t\t\t\t&#39;Perform transactional work here.\n\n\t\t\t\t\t&#39;Queue work item\n\t\t\t\t\tThreadPool.QueueUserWorkItem(AddressOf WorkerThread, Transaction.Current.DependentClone(DependentCloneOption.BlockCommitUntilComplete))\n\n\t\t\t\t\t&#39;Display transaction information\n\t\t\t\t\tConsole.WriteLine(&quot;Transaction information:&quot;)\n\t\t\t\t\tConsole.WriteLine(&quot;ID:             {0}&quot;, Transaction.Current.TransactionInformation.LocalIdentifier)\n\t\t\t\t\tConsole.WriteLine(&quot;status:         {0}&quot;, Transaction.Current.TransactionInformation.Status)\n\t\t\t\t\tConsole.WriteLine(&quot;isolationlevel: {0}&quot;, Transaction.Current.IsolationLevel)\n\n\t\t\t\t\t&#39;Call Complete on the TransactionScope based on console input\n\t\t\t\t\tDim c As ConsoleKeyInfo\n\t\t\t\t\tWhile (True)\n\n\t\t\t\t\t\tConsole.Write(&quot;Complete the transaction scope? [Y|N] &quot;)\n\t\t\t\t\t\tc = Console.ReadKey()\n\t\t\t\t\t\tConsole.WriteLine()\n\t\t\t\t\t\tIf (c.KeyChar = &quot;Y&quot;) Or (c.KeyChar = &quot;y&quot;) Then\n\t\t\t\t\t\t\tscope.Complete()\n\t\t\t\t\t\t\tExit While\n\t\t\t\t\t\tElseIf ((c.KeyChar = &quot;N&quot;) Or (c.KeyChar = &quot;n&quot;)) Then\n\t\t\t\t\t\t\tExit While\n\t\t\t\t\t\tEnd If\n\t\t\t\t\tEnd While\n\t\t\t\tEnd Using\n\n\t\t\tCatch ex As TransactionException\n\t\t\t\tConsole.WriteLine(ex)\n\t\t\tCatch\n\t\t\t\tConsole.WriteLine(&quot;Cannot complete transaction&quot;)\n\t\t\t\tThrow\n\t\t\tEnd Try\n\t\tEnd Sub\n\n\t\tPublic Shared Sub WorkerThread(ByVal myTransaction As Object)\n\n\t\t\t&#39;Create a DependentTransaction from the object passed to the WorkerThread\n\t\t\tDim dTx As DependentTransaction\n\t\t\tdTx = CType(myTransaction, DependentTransaction)\n\n\t\t\t&#39;Sleep for 1 second to force the worker thread to delay\n\t\t\tThread.Sleep(1000)\n\n\t\t\t&#39;Pass the DependentTransaction to the scope, so that work done in the scope becomes part of the transaction passed to the worker thread\n\t\t\tUsing ts As TransactionScope = New TransactionScope(dTx)\n\t\t\t\t&#39;Perform transactional work here.\n\n\t\t\t\t&#39;Call complete on the transaction scope\n\t\t\t\tts.Complete()\n\t\t\tEnd Using\n\n\t\t\t&#39;Call complete on the dependent transaction\n\t\t\tdTx.Complete()\n\t\tEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Tx_DependentTx#1\">\t\tstatic void Main(string[] args)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tusing (TransactionScope scope = new TransactionScope())\n\t\t\t\t{\n\t\t\t\t\t// Perform transactional work here.\n\n\t\t\t\t\t//Queue work item\n\t\t\t\t\tThreadPool.QueueUserWorkItem(new WaitCallback(WorkerThread), Transaction.Current.DependentClone(DependentCloneOption.BlockCommitUntilComplete));\n\n\t\t\t\t\t//Display transaction information\n\t\t\t\t\tConsole.WriteLine(&quot;Transaction information:&quot;);\n\t\t\t\t\tConsole.WriteLine(&quot;ID:             {0}&quot;, Transaction.Current.TransactionInformation.LocalIdentifier);\n\t\t\t\t\tConsole.WriteLine(&quot;status:         {0}&quot;, Transaction.Current.TransactionInformation.Status);\n\t\t\t\t\tConsole.WriteLine(&quot;isolationlevel: {0}&quot;, Transaction.Current.IsolationLevel);\n\n\t\t\t\t\t//Call Complete on the TransactionScope based on console input\n\t\t\t\t\tConsoleKeyInfo c;\n\t\t\t\t\twhile (true)\n\t\t\t\t\t{\n                        \t\t\tConsole.Write(&quot;Complete the transaction scope? [Y|N] &quot;);\n\t\t\t\t\t\tc = Console.ReadKey();\n\t\t\t\t\t\tConsole.WriteLine();\n\n\t\t\t\t\t\tif ((c.KeyChar == &#39;Y&#39;) || (c.KeyChar == &#39;y&#39;))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t//Call complete on the scope\n\t\t\t\t\t\t\tscope.Complete();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((c.KeyChar == &#39;N&#39;) || (c.KeyChar == &#39;n&#39;))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (System.Transactions.TransactionException ex)\n\t\t\t{\n\t\t\t\tConsole.WriteLine(ex);\n\t\t\t}\n\t\t\tcatch\n\t\t\t{\n\t\t\t\tConsole.WriteLine(&quot;Cannot complete transaction&quot;);\n\t\t\t\tthrow;\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tprivate static void WorkerThread(object transaction)\n\t\t{\n\t\t\t//Create a DependentTransaction from the object passed to the WorkerThread\n\t\t\tDependentTransaction dTx = (DependentTransaction)transaction;\n\n\t\t\t//Sleep for 1 second to force the worker thread to delay\n\t\t\tThread.Sleep(1000);\n\n\t\t\t//Pass the DependentTransaction to the scope, so that work done in the scope becomes part of the transaction passed to the worker thread\n\t\t\tusing (TransactionScope ts = new TransactionScope(dTx))\n\t\t\t{\n\t\t\t\t//Perform transactional work here.\n\n\t\t\t\t//Call complete on the transaction scope\n\t\t\t\tts.Complete();\n\t\t\t}\n\n\t\t\t//Call complete on the dependent transaction\n\t\t\tdTx.Complete();\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Transactions_Transaction_Dispose\">\r\n    \r\n            <a id=\"System_Transactions_Transaction_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases the resources that are held by the object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If you change the ambient transaction by setting <a class=\"xref\" href=\"system.transactions.transaction#System_Transactions_Transaction_Current_\" data-linktype=\"relative-path\">Current</a> inside a <a class=\"xref\" href=\"system.transactions.transactionscope\" data-linktype=\"relative-path\">TransactionScope</a> an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown when <a class=\"xref\" href=\"system.transactions.transactionscope#System_Transactions_TransactionScope_Dispose_\" data-linktype=\"relative-path\">Dispose</a> is called, and the previous ambient transaction value is restored.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Transactions_Transaction_EnlistDurable_System_Guid_System_Transactions_IEnlistmentNotification_System_Transactions_EnlistmentOptions_\">\r\n    \r\n            <a id=\"System_Transactions_Transaction_EnlistDurable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Enlists a durable resource manager that supports two phase commit to participate in a transaction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Transactions.Enlistment EnlistDurable (Guid resourceManagerIdentifier, System.Transactions.IEnlistmentNotification enlistmentNotification, System.Transactions.EnlistmentOptions enlistmentOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>resourceManagerIdentifier</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A unique identifier for a resource manager, which should persist across resource manager failure or reboot.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>enlistmentNotification</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.ienlistmentnotification\" data-linktype=\"relative-path\">IEnlistmentNotification</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that implements the <a class=\"xref\" href=\"system.transactions.ienlistmentnotification\" data-linktype=\"relative-path\">IEnlistmentNotification</a> interface to receive two phase commit notifications.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>enlistmentOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.enlistmentoptions\" data-linktype=\"relative-path\">EnlistmentOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.transactions.enlistmentoptions\" data-linktype=\"relative-path\">EnlistmentOptions</a> if the resource manager wants to perform additional work during the prepare phase.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.enlistment\" data-linktype=\"relative-path\">Enlistment</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.transactions.enlistment\" data-linktype=\"relative-path\">Enlistment</a> object that describes the enlistment.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Resource managers with a durable enlistment must be able to perform recovery if they experience a failure. For more information on recovery, see <a href=\"http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691\" data-linktype=\"external\">Performing Recovery</a>. For more information on volatile and durable resources, as well as how to enlist a resource, see <a href=\"http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e\" data-linktype=\"external\">Implementing A Resource Manager</a>.  For more information on how a resource manager responds to commit notification and prepare the commit in two-phase commit, see <a href=\"http://msdn.microsoft.com/en-us/74b3cfe1-d33a-45b8-91f4-dfd6f6598c4d\" data-linktype=\"external\">Committing A Transaction In Single-Phase and Multi-Phase</a>.  </p>\n<p> Resource managers enlisted for participation in a transaction through this method receive two phase commit notifications that correspond to the methods defined on the <a class=\"xref\" href=\"system.transactions.ienlistmentnotification\" data-linktype=\"relative-path\">IEnlistmentNotification</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Transactions_Transaction_EnlistDurable_System_Guid_System_Transactions_ISinglePhaseNotification_System_Transactions_EnlistmentOptions_\">\r\n    \r\n            <a id=\"System_Transactions_Transaction_EnlistDurable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Enlists a durable resource manager that supports single phase commit optimization to participate in a transaction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Transactions.Enlistment EnlistDurable (Guid resourceManagerIdentifier, System.Transactions.ISinglePhaseNotification singlePhaseNotification, System.Transactions.EnlistmentOptions enlistmentOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>resourceManagerIdentifier</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A unique identifier for a resource manager, which should persist across resource manager failure or reboot.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>singlePhaseNotification</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.isinglephasenotification\" data-linktype=\"relative-path\">ISinglePhaseNotification</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that implements the <a class=\"xref\" href=\"system.transactions.isinglephasenotification\" data-linktype=\"relative-path\">ISinglePhaseNotification</a> interface that must be able to receive single phase commit and two phase commit notifications.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>enlistmentOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.enlistmentoptions\" data-linktype=\"relative-path\">EnlistmentOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.transactions.enlistmentoptions\" data-linktype=\"relative-path\">EnlistmentOptions</a> if the resource manager wants to perform additional work during the prepare phase.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.enlistment\" data-linktype=\"relative-path\">Enlistment</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.transactions.enlistment\" data-linktype=\"relative-path\">Enlistment</a> object that describes the enlistment.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Resource managers with a durable enlistment must be able to perform recovery if they experience a failure. For more information on recovery, see <a href=\"http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691\" data-linktype=\"external\">Performing Recovery</a>. For more information on volatile and durable resources, as well as how to enlist a resource, see <a href=\"http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e\" data-linktype=\"external\">Implementing A Resource Manager</a>.  </p>\n<p> You should note that even when your resource manager implementation enlists with this method, it is not guaranteed that it receives a single phase commit. The transaction manager can still send two phase commit notifications instead. For more information on the single phase commit optimization, see <a href=\"http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb\" data-linktype=\"external\">Optimization Using Single Phase Commit and Promotable Single Phase Notification</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Transactions_Transaction_EnlistPromotableSinglePhase_System_Transactions_IPromotableSinglePhaseNotification_\">\r\n    \r\n            <a id=\"System_Transactions_Transaction_EnlistPromotableSinglePhase_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)</div>        \r\n          </div>\r\n    \r\n            <p>Enlists a resource manager that has an internal transaction using a promotable single phase enlistment (PSPE).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool EnlistPromotableSinglePhase (System.Transactions.IPromotableSinglePhaseNotification promotableSinglePhaseNotification);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>promotableSinglePhaseNotification</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.ipromotablesinglephasenotification\" data-linktype=\"relative-path\">IPromotableSinglePhaseNotification</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.transactions.ipromotablesinglephasenotification\" data-linktype=\"relative-path\">IPromotableSinglePhaseNotification</a> interface implemented by the participant.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.transactions.singlephaseenlistment\" data-linktype=\"relative-path\">SinglePhaseEnlistment</a> interface implementation that describes the enlistment.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Enlistments in a transaction are volatile; that is, they do not survive the failure of the participant. In addition, this method only suggests the transaction manager to escalate control, but the escalation itself is not guaranteed. If escalation fails, the user is not notified and the transaction is rolled back.  </p>\n<p> The parameter <code>promotableSinglePhaseNotification</code> is used to communicate to the transaction manager the outcome of attempting to commit the resource manager&#39;s internal transaction.  If inconsistent data is reported, the transaction manager throws an exception. If an <a class=\"xref\" href=\"system.transactions.transactionstatus\" data-linktype=\"relative-path\">TransactionStatus</a> outcome is reported, the transaction manager looks for the outcome notification in its own internal enlistment and ignores the reported response.  </p>\n<p> For more information on enlistments and escalation of a transaction, please see <a href=\"http://msdn.microsoft.com/en-us/5b87ae58-8ccf-4b9b-9715-41e4aade89b7\" data-linktype=\"external\">Transaction Management Escalation</a>. For more information on PSPE, see <a href=\"http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb\" data-linktype=\"external\">Optimization Using Single Phase Commit and Promotable Single Phase Notification</a>.  </p>\n<p> <strong>Note</strong> This method uses <a class=\"xref\" href=\"system.security.permissions.securityaction\" data-linktype=\"relative-path\">SecurityAction</a> to prevent it from being called from untrusted code; however, only the immediate caller is required to possess the <code>FullTrust</code> permission set.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Transactions_Transaction_EnlistPromotableSinglePhase_System_Transactions_IPromotableSinglePhaseNotification_System_Guid_\">\r\n    \r\n            <a id=\"System_Transactions_Transaction_EnlistPromotableSinglePhase_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)</div>        \r\n          </div>\r\n    \r\n            <p>Enlists a resource manager that has an internal transaction using a promotable single phase enlistment (PSPE).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool EnlistPromotableSinglePhase (System.Transactions.IPromotableSinglePhaseNotification promotableSinglePhaseNotification, Guid promoterType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>promotableSinglePhaseNotification</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.ipromotablesinglephasenotification\" data-linktype=\"relative-path\">IPromotableSinglePhaseNotification</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.transactions.ipromotablesinglephasenotification\" data-linktype=\"relative-path\">IPromotableSinglePhaseNotification</a> interface implemented by the participant.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>promoterType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the distributed transaction processor.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.transactions.singlephaseenlistment\" data-linktype=\"relative-path\">SinglePhaseEnlistment</a> interface implementation that describes the enlistment.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the value specified for the <code>promoterType</code> parameter is <code>TransactionInterop.PromoterTypeDtc</code>, the transaction <strong>must</strong> be promoted by MSDTC and the <code>byte[]</code> returned from the <code>IPromotableSinglePhaseNotification.Promote</code> method <strong>must</strong> be an MSDTC transaction propagation token.  </p>\n<p> If the value specified for the <code>promoterType</code> parameter is <strong>not</strong><code>TransactionInterop.PromoterTypeDTC</code>, the transaction will not be promoted by MSDTC, but rather by the callerâ€™s implementation of <code>IPromotableSinglePhaseNotification</code>. If this call is successful, there is a set of subsequent operations on the transaction that will return a <code>TransactionPromotionException</code>. These operations are:  </p>\n<ul>\n<li><p><code>Transaction.EnlistDurable</code>  </p>\n</li>\n<li><p><code>TransactionInterop.GetDtcTransaction</code>  </p>\n</li>\n<li><p><code>TransactionInterop.GetExportCookie</code>  </p>\n</li>\n<li><p><code>TransctionInterop.GetTransmitterPropagationToken</code>  </p>\n</li>\n<li><p>Serialization of a Transaction object</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Transactions_Transaction_EnlistVolatile_System_Transactions_IEnlistmentNotification_System_Transactions_EnlistmentOptions_\">\r\n    \r\n            <a id=\"System_Transactions_Transaction_EnlistVolatile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Enlists a volatile resource manager that supports two phase commit to participate in a transaction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Transactions.Enlistment EnlistVolatile (System.Transactions.IEnlistmentNotification enlistmentNotification, System.Transactions.EnlistmentOptions enlistmentOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>enlistmentNotification</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.ienlistmentnotification\" data-linktype=\"relative-path\">IEnlistmentNotification</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that implements the <a class=\"xref\" href=\"system.transactions.ienlistmentnotification\" data-linktype=\"relative-path\">IEnlistmentNotification</a> interface to receive two-phase commit notifications.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>enlistmentOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.enlistmentoptions\" data-linktype=\"relative-path\">EnlistmentOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.transactions.enlistmentoptions\" data-linktype=\"relative-path\">EnlistmentOptions</a> if the resource manager wants to perform additional work during the prepare phase.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.enlistment\" data-linktype=\"relative-path\">Enlistment</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.transactions.enlistment\" data-linktype=\"relative-path\">Enlistment</a> object that describes the enlistment.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Volatile resource managers cannot recovery from failure to complete a transaction in which they were participating. To obtain a durable enlistment in a transaction, use the <a class=\"xref\" href=\"system.transactions.transaction#System_Transactions_Transaction_EnlistDurable_\" data-linktype=\"relative-path\">EnlistDurable</a> method.  </p>\n<p> Resource managers enlisted for participation in a transaction through this method receive two phase commit notifications that correspond to the methods defined on the <a class=\"xref\" href=\"system.transactions.ienlistmentnotification\" data-linktype=\"relative-path\">IEnlistmentNotification</a> interface.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows an implementation of <a class=\"xref\" href=\"system.transactions.ienlistmentnotification\" data-linktype=\"relative-path\">IEnlistmentNotification</a> interface, as well as enlisting the object as a participant in a transaction using the <a class=\"xref\" href=\"system.transactions.transaction#System_Transactions_Transaction_EnlistVolatile_\" data-linktype=\"relative-path\">EnlistVolatile</a> method.  </p>\n<pre><code class=\"lang-cs\" name=\"Tx_Enlist#1\">\t\tstatic void Main(string[] args)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tusing (TransactionScope scope = new TransactionScope())\n\t\t\t\t{\n\t\t\t\t\n\t\t\t\t\t//Create an enlistment object\n\t\t\t\t\tmyEnlistmentClass myElistment = new myEnlistmentClass();\n\n\t\t\t\t\t//Enlist on the current transaction with the enlistment object\n\t\t\t\t\tTransaction.Current.EnlistVolatile(myElistment, EnlistmentOptions.None);\n\n\t\t\t\t\t//Perform transactional work here.\n\n\t\t\t\t\t//Call complete on the TransactionScope based on console input\n\t                    \t\t\tConsoleKeyInfo c;\n\t\t\t\t\twhile(true)\n\t                    \t\t\t{\n\t\t\t\t\t\tConsole.Write(&quot;Complete the transaction scope? [Y|N] &quot;);\n\t\t\t\t\t\tc = Console.ReadKey();\n\t\t\t\t\t\tConsole.WriteLine();\n\t\t\t\t\n\t\t                        \t\t\tif ((c.KeyChar == &#39;Y&#39;) || (c.KeyChar == &#39;y&#39;))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tscope.Complete();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((c.KeyChar == &#39;N&#39;) || (c.KeyChar == &#39;n&#39;))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (System.Transactions.TransactionException ex)\n\t\t\t{\n\t\t\t\tConsole.WriteLine(ex);\n\t\t\t}\n\t\t\tcatch\n\t\t\t{\n\t\t\t\tConsole.WriteLine(&quot;Cannot complete transaction&quot;);\n\t\t\t\tthrow;\n\t\t\t}\n\t\t}\n\n\t\tclass myEnlistmentClass : IEnlistmentNotification\n\t\t{\n\t\t\tpublic void Prepare(PreparingEnlistment preparingEnlistment)\n\t\t\t{\n\t\t\t\tConsole.WriteLine(&quot;Prepare notification received&quot;);\n\n\t\t\t\t//Perform transactional work\n\n\t\t\t\t//If work finished correctly, reply prepared\n\t\t\t\tpreparingEnlistment.Prepared();\n\n\t\t\t\t// otherwise, do a ForceRollback\n\t\t\t\tpreparingEnlistment.ForceRollback();\n\t\t\t}\n\n\t\t\tpublic void Commit(Enlistment enlistment)\n\t\t\t{\n\t\t\t\tConsole.WriteLine(&quot;Commit notification received&quot;);\n\n\t\t\t\t//Do any work necessary when commit notification is received\n\n\t\t\t\t//Declare done on the enlistment\n\t\t\t\tenlistment.Done();\n\t\t\t}\n\n\t\t\tpublic void Rollback(Enlistment enlistment)\n\t\t\t{\n\t\t\t\tConsole.WriteLine(&quot;Rollback notification received&quot;);\n\n\t\t\t\t//Do any work necessary when rollback notification is received\n\n\t\t\t\t//Declare done on the enlistment\n\t\t\t\tenlistment.Done();\n\t\t\t}\n\n\t\t\tpublic void InDoubt(Enlistment enlistment)\n\t\t\t{\n\t\t\t\tConsole.WriteLine(&quot;In doubt notification received&quot;);\n\n\t\t\t\t//Do any work necessary when indout notification is received\n\t\t\t\t\n\t\t\t\t//Declare done on the enlistment\n\t\t\t\tenlistment.Done();\n\t\t\t}\n\t\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"Tx_Enlist#1\">\t\tPublic Shared Sub Main()\n\t\t\tTry\n\t\t\t\tUsing scope As TransactionScope = New TransactionScope()\n\n\t\t\t\t\t&#39;Create an enlistment object\n\t\t\t\t\tDim myEnlistmentClass As New EnlistmentClass\n\n\t\t\t\t\t&#39;Enlist on the current transaction with the enlistment object\n\t\t\t\t\tTransaction.Current.EnlistVolatile(myEnlistmentClass, EnlistmentOptions.None)\n\n\t\t\t\t\t&#39;Perform transactional work here.\n\n\t\t\t\t\t&#39;Call complete on the TransactionScope based on console input\n\t\t\t\t\tDim c As ConsoleKeyInfo\n\t\t\t\t\tWhile (True)\n\t\t\t\t\t\tConsole.Write(&quot;Complete the transaction scope? [Y|N] &quot;)\n\t\t\t\t\t\tc = Console.ReadKey()\n\t\t\t\t\t\tConsole.WriteLine()\n\t\t\t\t\t\tIf (c.KeyChar = &quot;Y&quot;) Or (c.KeyChar = &quot;y&quot;) Then\n\t\t\t\t\t\t\tscope.Complete()\n\t\t\t\t\t\t\tExit While\n\t\t\t\t\t\tElseIf ((c.KeyChar = &quot;N&quot;) Or (c.KeyChar = &quot;n&quot;)) Then\n\t\t\t\t\t\t\tExit While\n\t\t\t\t\t\tEnd If\n\t\t\t\t\tEnd While\n\t\t\t\tEnd Using\n\t\t\tCatch ex As TransactionException\n\t\t\t\tConsole.WriteLine(ex)\n\t\t\tCatch\n\t\t\t\tConsole.WriteLine(&quot;Cannot complete transaction&quot;)\n\t\t\t\tThrow\n\t\t\tEnd Try\n\t\tEnd Sub\n\tEnd Class\n\n\tPublic Class EnlistmentClass\n\t\tImplements IEnlistmentNotification\n\n\t\tPublic Sub Prepare(ByVal myPreparingEnlistment As PreparingEnlistment) Implements System.Transactions.IEnlistmentNotification.Prepare\n\t\t\tConsole.WriteLine(&quot;Prepare notification received&quot;)\n\n\t\t\t&#39;Perform transactional work\n\t\n\t\t\t&#39;If work finished correctly, reply with prepared\n\t\t\tmyPreparingEnlistment.Prepared()\n\t\tEnd Sub\n\n\t\tPublic Sub Commit(ByVal myEnlistment As Enlistment) Implements System.Transactions.IEnlistmentNotification.Commit\n\t\t\tConsole.WriteLine(&quot;Commit notification received&quot;)\n\n\t\t\t&#39;Do any work necessary when commit notification is received\n\n\t\t\t&#39;Declare done on the enlistment\n\t\t\tmyEnlistment.Done()\n\t\tEnd Sub\n\n\t\tPublic Sub Rollback(ByVal myEnlistment As Enlistment) Implements System.Transactions.IEnlistmentNotification.Rollback\n\t\t\tConsole.WriteLine(&quot;Rollback notification received&quot;)\n\n\t\t\t&#39;Do any work necessary when rollback notification is received\n\n\t\t\t&#39;Declare done on the enlistment\n\t\t\tmyEnlistment.Done()\n\t\tEnd Sub\n\n\t\tPublic Sub InDoubt(ByVal myEnlistment As Enlistment) Implements System.Transactions.IEnlistmentNotification.InDoubt\n\t\t\tConsole.WriteLine(&quot;In doubt notification received&quot;)\n\n\t\t\t&#39;Do any work necessary when indout notification is received\n\n\t\t\t&#39;Declare done on the enlistment\n\t\t\tmyEnlistment.Done()\n\t\tEnd Sub\n\tEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Transactions_Transaction_EnlistVolatile_System_Transactions_ISinglePhaseNotification_System_Transactions_EnlistmentOptions_\">\r\n    \r\n            <a id=\"System_Transactions_Transaction_EnlistVolatile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Enlists a volatile resource manager that supports single phase commit optimization to participate in a transaction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Transactions.Enlistment EnlistVolatile (System.Transactions.ISinglePhaseNotification singlePhaseNotification, System.Transactions.EnlistmentOptions enlistmentOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>singlePhaseNotification</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.isinglephasenotification\" data-linktype=\"relative-path\">ISinglePhaseNotification</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that implements the <a class=\"xref\" href=\"system.transactions.isinglephasenotification\" data-linktype=\"relative-path\">ISinglePhaseNotification</a> interface that must be able to receive single phase commit and two phase commit notifications.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>enlistmentOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.enlistmentoptions\" data-linktype=\"relative-path\">EnlistmentOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.transactions.enlistmentoptions\" data-linktype=\"relative-path\">EnlistmentOptions</a> if the resource manager wants to perform additional work during the prepare phase.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.enlistment\" data-linktype=\"relative-path\">Enlistment</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.transactions.enlistment\" data-linktype=\"relative-path\">Enlistment</a> object that describes the enlistment.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Volatile resource managers cannot recovery from failure to complete a transaction in which they were participating. To obtain a durable enlistment in a transaction, use the <a class=\"xref\" href=\"system.transactions.transaction#System_Transactions_Transaction_EnlistDurable_\" data-linktype=\"relative-path\">EnlistDurable</a> method. For more information on volatile and durable resources, as well as how to enlist a resource, see <a href=\"http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e\" data-linktype=\"external\">Implementing A Resource Manager</a>. For more information on how a resource manager responds to commit notification and prepare the commit, see <a href=\"http://msdn.microsoft.com/en-us/74b3cfe1-d33a-45b8-91f4-dfd6f6598c4d\" data-linktype=\"external\">Committing A Transaction In Single-Phase and Multi-Phase</a>.  </p>\n<p> You should note that even when your resource manager implementation enlists with this method, it is not guaranteed that it receives a single phase commit. The transaction manager can still send two phase commit notifications instead. For more information on the single phase commit optimization, see <a href=\"http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb\" data-linktype=\"external\">Optimization Using Single Phase Commit and Promotable Single Phase Notification</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Transactions_Transaction_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Transactions_Transaction_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether this transaction and the specified object are equal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to compare with this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>obj</code> and this transaction are identical; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Transactions_Transaction_GetHashCode\">\r\n    \r\n            <a id=\"System_Transactions_Transaction_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the hash code for this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A 32-bit signed integer hash code.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Transactions_Transaction_GetPromotedToken\">\r\n    \r\n            <a id=\"System_Transactions_Transaction_GetPromotedToken_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetPromotedToken()</div>        \r\n          </div>\r\n    \r\n            <p>Gets the  <code>byte[]</code> returned by the <code>Promote</code> method when the transaction is promoted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] GetPromotedToken ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>The  <code>byte[]</code> returned by the <code>Promote</code> method when the transaction is promoted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method has the side effect of causing promotion of the transaction if it is not already promoted.  </p>\n<p> The format of the returned <code>byte[]</code> is defined by the value of the <code>Transation.PromoterType</code> property. If the value of the <code>Transaction.PromoterType</code> property is <code>TransactionInterop.PromoterTypeDtc</code> or <code>Guid.Empty</code>, then the <code>byte[]</code> returned by this method is an MSDTC transmitter propagation token. Any other value for the <code>Transaction.PromoterType</code> property specifies a format that is defined by the caller of <code>Transaction.EnlistPromotableSinglePhase</code> that specified the property type value. In order to interpret the promoted token in this latter case, you will need to consult the documentation for the code that made the <code>EnlistPromotableSinglePhase</code> call.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Transactions_Transaction_PromoteAndEnlistDurable_System_Guid_System_Transactions_IPromotableSinglePhaseNotification_System_Transactions_ISinglePhaseNotification_System_Transactions_EnlistmentOptions_\">\r\n    \r\n            <a id=\"System_Transactions_Transaction_PromoteAndEnlistDurable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)</div>        \r\n          </div>\r\n    \r\n            <p>[Supported in the .NET Framework 4.5.2 and later versions]  </p>\n<p> Promotes and enlists a durable resource manager that supports two phase commit to participate in a transaction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Transactions.Enlistment PromoteAndEnlistDurable (Guid resourceManagerIdentifier, System.Transactions.IPromotableSinglePhaseNotification promotableNotification, System.Transactions.ISinglePhaseNotification enlistmentNotification, System.Transactions.EnlistmentOptions enlistmentOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>resourceManagerIdentifier</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A unique identifier for a resource manager, which should persist across resource manager failure or reboot.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>promotableNotification</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.ipromotablesinglephasenotification\" data-linktype=\"relative-path\">IPromotableSinglePhaseNotification</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that acts as a commit delegate for a non-distributed transaction internal to a resource manager.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>enlistmentNotification</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.isinglephasenotification\" data-linktype=\"relative-path\">ISinglePhaseNotification</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that implements the <a class=\"xref\" href=\"system.transactions.ienlistmentnotification\" data-linktype=\"relative-path\">IEnlistmentNotification</a> interface to receive two phase commit notifications.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>enlistmentOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.enlistmentoptions\" data-linktype=\"relative-path\">EnlistmentOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.transactions.enlistmentoptions\" data-linktype=\"relative-path\">EnlistmentOptions</a> if the resource manager wants to perform additional work during the prepare phase.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.enlistment\" data-linktype=\"relative-path\">Enlistment</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Transactions_Transaction_Rollback\">\r\n    \r\n            <a id=\"System_Transactions_Transaction_Rollback_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Rollback()</div>        \r\n          </div>\r\n    \r\n            <p>Rolls back (aborts) the transaction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Rollback ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Any copy of a transaction object can initiate the rollback of the transaction by calling this method. Only the original transaction object, which is a <a class=\"xref\" href=\"system.transactions.committabletransaction\" data-linktype=\"relative-path\">CommittableTransaction</a> object, can be used to initiate an attempt to commit the transaction. An exception is thrown when this method is called after the outcome of the transaction has already been determined.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Transactions_Transaction_Rollback_System_Exception_\">\r\n    \r\n            <a id=\"System_Transactions_Transaction_Rollback_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Rollback(Exception)</div>        \r\n          </div>\r\n    \r\n            <p>Rolls back (aborts) the transaction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Rollback (Exception e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An explanation of why a rollback occurred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Transactions_Transaction_SetDistributedTransactionIdentifier_System_Transactions_IPromotableSinglePhaseNotification_System_Guid_\">\r\n    \r\n            <a id=\"System_Transactions_Transaction_SetDistributedTransactionIdentifier_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the distributed transaction identifier generated by the non-MSDTC promoter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetDistributedTransactionIdentifier (System.Transactions.IPromotableSinglePhaseNotification promotableNotification, Guid distributedTransactionIdentifier);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>promotableNotification</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.ipromotablesinglephasenotification\" data-linktype=\"relative-path\">IPromotableSinglePhaseNotification</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.transactions.ipromotablesinglephasenotification\" data-linktype=\"relative-path\">IPromotableSinglePhaseNotification</a> interface implemented by the participant.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>distributedTransactionIdentifier</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The identifier for the transaction used by the distributed transaction manager.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method can only be called successfully while the <code>IPromotableSinglePhaseNotification.Promote</code> method is being processed. If this method is called at any other time, a <code>TransactionException</code> is thrown.  </p>\n<p> The specified value of the <code>promotableNotification</code> parameter must be the same object that was originally specified to the <code>Transaction.EnlistPromotableSinglePhase</code> invocation. If this is not the case, then an <code>InvalidOperationException</code> is thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Transactions_Transaction_TransactionCompleted\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TransactionCompleted</div>        \r\n          </div>\r\n    \r\n            <p>Indicates that the transaction is completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Transactions.TransactionCompletedEventHandler TransactionCompleted;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>An attempt to subscribe this event on a transaction that has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can register for this event instead of using a volatile enlistment to get outcome information for transactions. The parameter passed to the <a class=\"xref\" href=\"system.transactions.transactioncompletedeventhandler\" data-linktype=\"relative-path\">TransactionCompletedEventHandler</a> delegate is a <a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a> instance. You can then query the <a class=\"xref\" href=\"system.transactions.transaction#System_Transactions_Transaction_TransactionInformation_\" data-linktype=\"relative-path\">TransactionInformation</a> property of the specific instance to get an instance of <a class=\"xref\" href=\"system.transactions.transactioninformation\" data-linktype=\"relative-path\">TransactionInformation</a>, whose <a class=\"xref\" href=\"system.transactions.transactioninformation#System_Transactions_TransactionInformation_Status_\" data-linktype=\"relative-path\">Status</a> property contains the status of a transaction with either the <a class=\"xref\" href=\"system.transactions.transactionstatus\" data-linktype=\"relative-path\">TransactionStatus</a> or <a class=\"xref\" href=\"system.transactions.transactionstatus\" data-linktype=\"relative-path\">TransactionStatus</a> value.  </p>\n<p> <strong>Caution</strong> Signing up for this event negatively affects the performance of the transaction it is attached to.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following sample shows how an application can obtain the outcome of a transaction by subscribing to the TransactionCompleted event.  </p>\n<pre><code class=\"lang-cs\" name=\"Tx_Outcome#1\">\t\tstatic void Main(string[] args)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t//Create the transaction scope\n\t\t\t\tusing (TransactionScope scope = new TransactionScope())\n\t\t\t\t{\n\t\t\t\t\t//Register for the transaction completed event for the current transaction\n\t\t\t\t\tTransaction.Current.TransactionCompleted += new TransactionCompletedEventHandler(Current_TransactionCompleted);\n\n\t\t\t\t\t//Call complete on the TransactionScope based on console input\n\t\t\t\t\tConsoleKeyInfo c;\n\t\t\t\t\twhile (true)\n\t\t\t\t\t{\n\t\t\t\t\t\tConsole.Write(&quot;Complete the transaction scope? [Y|N] &quot;);\n\t\t\t\t\t\tc = Console.ReadKey();\n\t\t\t\t\t\tConsole.WriteLine();\n\n\t\t\t\t\t\tif ((c.KeyChar == &#39;Y&#39;) || (c.KeyChar == &#39;y&#39;))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tscope.Complete();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((c.KeyChar == &#39;N&#39;) || (c.KeyChar == &#39;n&#39;))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tcatch (System.Transactions.TransactionException ex)\n\t\t\t{\n\t\t\t\tConsole.WriteLine(ex);\n\t\t\t}\n\t\t\tcatch\n\t\t\t{\n\t\t\t\tConsole.WriteLine(&quot;Cannot complete transaction&quot;);\n\t\t\t\tthrow;\n\t\t\t}\n\t\t}\n\n\t\t//Transaction completed event handler\n\t\tstatic void Current_TransactionCompleted(object sender, TransactionEventArgs e)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;A transaction has completed:&quot;);\n\t\t\tConsole.WriteLine(&quot;ID:             {0}&quot;, e.Transaction.TransactionInformation.LocalIdentifier);\n\t\t\tConsole.WriteLine(&quot;Distributed ID: {0}&quot;, e.Transaction.TransactionInformation.DistributedIdentifier);\n\t\t\tConsole.WriteLine(&quot;Status:         {0}&quot;, e.Transaction.TransactionInformation.Status);\n\t\t\tConsole.WriteLine(&quot;IsolationLevel: {0}&quot;, e.Transaction.IsolationLevel);\n\t\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"Tx_Outcome#1\">        Public Shared Sub Main()\n            Try\n                Using scope As TransactionScope = New TransactionScope()\n\n                    &#39;Register for the transaction completed event for the current transaction\n                    AddHandler Transaction.Current.TransactionCompleted, AddressOf Current_TransactionCompleted\n\n                    &#39;Perform transactional work here.\n\n                    &#39;Call complete on the TransactionScope based on console input\n                    Dim c As ConsoleKeyInfo\n                    While (True)\n\n                        Console.Write(&quot;Complete the transaction scope? [Y|N] &quot;)\n                        c = Console.ReadKey()\n                        Console.WriteLine()\n                        If (c.KeyChar = &quot;Y&quot;) Or (c.KeyChar = &quot;y&quot;) Then\n                            scope.Complete()\n                            Exit While\n                        ElseIf ((c.KeyChar = &quot;N&quot;) Or (c.KeyChar = &quot;n&quot;)) Then\n                            Exit While\n                        End If\n                        \n                    End While\n\n                End Using\n            Catch ex As TransactionException\n                Console.WriteLine(ex)\n            Catch\n                Console.WriteLine(&quot;Cannot complete transaction&quot;)\n                Throw\n            End Try\n        End Sub\n\n        &#39;Transaction completed event handler\n        Private Shared Sub Current_TransactionCompleted(ByVal sender As Object, ByVal e As TransactionEventArgs)\n            Console.WriteLine(&quot;A transaction has completed:&quot;)\n            Console.WriteLine(&quot;ID:             {0}&quot;, e.Transaction.TransactionInformation.LocalIdentifier)\n            Console.WriteLine(&quot;Distributed ID: {0}&quot;, e.Transaction.TransactionInformation.DistributedIdentifier)\n            Console.WriteLine(&quot;Status:         {0}&quot;, e.Transaction.TransactionInformation.Status)\n            Console.WriteLine(&quot;IsolationLevel: {0}&quot;, e.Transaction.IsolationLevel)\n        End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"operators\">\r\n        <h2>Operators\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Transactions_Transaction_op_Equality_System_Transactions_Transaction_System_Transactions_Transaction_\">\r\n    \r\n            <a id=\"System_Transactions_Transaction_op_Equality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Equality(Transaction,Transaction)</div>        \r\n          </div>\r\n    \r\n            <p>Tests whether two specified <a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a> instances are equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_Equality (System.Transactions.Transaction x, System.Transactions.Transaction y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a> instance that is to the left of the equality operator.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a> instance that is to the right of the equality operator.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>x</code> and <code>y</code> are equal; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Transactions_Transaction_op_Inequality_System_Transactions_Transaction_System_Transactions_Transaction_\">\r\n    \r\n            <a id=\"System_Transactions_Transaction_op_Inequality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Inequality(Transaction,Transaction)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value that indicates whether two <a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a> instances are not equal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_Inequality (System.Transactions.Transaction x, System.Transactions.Transaction y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a> instance that is to the left of the inequality operator.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a> instance that is to the right of the inequality operator.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>x</code> and <code>y</code> are not equal; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Transactions_Transaction_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Transactions_Transaction_System_Runtime_Serialization_ISerializable_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> with the data required to serialize this transaction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializationInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> to populate with data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The destination (see <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> ) for this serialization.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Transactions.Transaction.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Transactions.Transaction.yml\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction.Clone\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction.Current\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction.DependentClone\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction.EnlistDurable\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction.EnlistPromotableSinglePhase\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction.EnlistVolatile\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction.Equals\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction.GetPromotedToken\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction.IsolationLevel\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction.op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction.op_op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction.op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction.op_op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction.PromoteAndEnlistDurable\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction.PromoterType\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction.Rollback\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction.SetDistributedTransactionIdentifier\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction.ISerializable.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction.TransactionCompleted\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction.add_TransactionCompleted\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction.remove_TransactionCompleted\">\r\n<meta name=\"APIName\" content=\"System.Transactions.Transaction.TransactionInformation\">\r\n<meta name=\"APILocation\" content=\"System.Transactions.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"925e1b74-f07e-7fa7-fa2e-ff49f48737d1\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a transaction.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Transactions/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Transactions.Transaction\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Transactions.Transaction.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Transactions.Transaction.yml","open_to_public_contributors":true,"api_name":["System.Transactions.Transaction","System.Transactions.Transaction.Clone","System.Transactions.Transaction.Current","System.Transactions.Transaction.DependentClone","System.Transactions.Transaction.Dispose","System.Transactions.Transaction.EnlistDurable","System.Transactions.Transaction.EnlistPromotableSinglePhase","System.Transactions.Transaction.EnlistVolatile","System.Transactions.Transaction.Equals","System.Transactions.Transaction.GetHashCode","System.Transactions.Transaction.GetPromotedToken","System.Transactions.Transaction.IsolationLevel","System.Transactions.Transaction.op_Equality","System.Transactions.Transaction.op_op_Equality","System.Transactions.Transaction.op_Inequality","System.Transactions.Transaction.op_op_Inequality","System.Transactions.Transaction.PromoteAndEnlistDurable","System.Transactions.Transaction.PromoterType","System.Transactions.Transaction.Rollback","System.Transactions.Transaction.SetDistributedTransactionIdentifier","System.Transactions.Transaction.ISerializable.GetObjectData","System.Transactions.Transaction.TransactionCompleted","System.Transactions.Transaction.add_TransactionCompleted","System.Transactions.Transaction.remove_TransactionCompleted","System.Transactions.Transaction.TransactionInformation"],"api_location":["System.Transactions.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Transactions.Transaction","System::Transactions::Transaction","System.Transactions.Transaction.Clone","System::Transactions::Transaction::Clone","System.Transactions.Transaction.Current","System::Transactions::Transaction::Current","System.Transactions.Transaction.DependentClone","System::Transactions::Transaction::DependentClone","System.Transactions.Transaction.Dispose","System::Transactions::Transaction::Dispose","System.Transactions.Transaction.EnlistDurable","System::Transactions::Transaction::EnlistDurable","System.Transactions.Transaction.EnlistPromotableSinglePhase","System::Transactions::Transaction::EnlistPromotableSinglePhase","System.Transactions.Transaction.EnlistVolatile","System::Transactions::Transaction::EnlistVolatile","System.Transactions.Transaction.Equals","System::Transactions::Transaction::Equals","System.Transactions.Transaction.GetHashCode","System::Transactions::Transaction::GetHashCode","System.Transactions.Transaction.GetPromotedToken","System::Transactions::Transaction::GetPromotedToken","System.Transactions.Transaction.IsolationLevel","System::Transactions::Transaction::IsolationLevel","System.Transactions.Transaction.op_Equality","System::Transactions::Transaction::op_Equality","System.Transactions.Transaction.op_Inequality","System::Transactions::Transaction::op_Inequality","System.Transactions.Transaction.PromoteAndEnlistDurable","System::Transactions::Transaction::PromoteAndEnlistDurable","System.Transactions.Transaction.PromoterType","System::Transactions::Transaction::PromoterType","System.Transactions.Transaction.Rollback","System::Transactions::Transaction::Rollback","System.Transactions.Transaction.SetDistributedTransactionIdentifier","System::Transactions::Transaction::SetDistributedTransactionIdentifier","System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData","System::Transactions::Transaction::System#Runtime#Serialization#ISerializable#GetObjectData","System.Transactions.Transaction.TransactionCompleted","System::Transactions::Transaction::TransactionCompleted","System.Transactions.Transaction.TransactionInformation","System::Transactions::Transaction::TransactionInformation"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"925e1b74-f07e-7fa7-fa2e-ff49f48737d1","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Transactions/Transaction.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Transaction class | Microsoft Docs","_op_ogTitle":"Transaction class","description":"Represents a transaction.\n","toc_asset_id":"_splitted/System.Transactions/toc.json","toc_rel":"_splitted/System.Transactions/toc.json","source_url":"","ms.assetid":"System.Transactions.Transaction","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.transactions.transaction","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.transactions.transaction","fileRelativePath":"System.Transactions.Transaction.html"},"themesRelativePathToOutputRoot":"_themes/"}