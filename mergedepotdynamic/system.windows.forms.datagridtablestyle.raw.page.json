{"content":"    \r\n    <h1 id=\"System_Windows_Forms_DataGridTableStyle\">\r\n      <span class=\"lang-csharp\">DataGridTableStyle</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents the table drawn by the <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control at run time.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.DesignTimeVisible(false)]\n[System.ComponentModel.ToolboxItem(false)]\npublic class DataGridTableStyle : System.ComponentModel.Component, System.Windows.Forms.IDataGridEditingService</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">System.ComponentModel.Component</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DataGridTableStyle</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">System.Windows.Forms.DataGrid</a> control displays data in the form of a grid. The DataGridTableStyle is a class that represents the drawn grid only. This grid should not be confused with the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> class, which is a possible source of data for the grid. Instead, the DataGridTableStyle strictly represents the grid as it is painted in the control. Therefore, through the DataGridTableStyle you can control the appearance of the grid for each <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>. To specify which DataGridTableStyle is used when displaying data from a particular <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>, set the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_MappingName_\" data-linktype=\"relative-path\">MappingName</a> to the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_TableName_\" data-linktype=\"relative-path\">TableName</a> of a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.gridtablestylescollection\" data-linktype=\"relative-path\">GridTableStylesCollection</a> retrieved through the <a class=\"xref\" href=\"system.windows.forms.datagrid#System_Windows_Forms_DataGrid_TableStyles_\" data-linktype=\"relative-path\">TableStyles</a> property contains all the DataGridTableStyle objects used by a <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">System.Windows.Forms.DataGrid</a> control. The collection can contain as many DataGridTableStyle objects as you need, however the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_MappingName_\" data-linktype=\"relative-path\">MappingName</a> of each must be unique. At run time, this allows you to substitute a different DataGridTableStyle for the same data, depending on the user&#39;s preference. To do this:  </p>\n<ol>\n<li><p>Populate the <a class=\"xref\" href=\"system.windows.forms.gridtablestylescollection\" data-linktype=\"relative-path\">GridTableStylesCollection</a> with DataGridTableStyle objects. If a DataGridTableStyle exists in the <a class=\"xref\" href=\"system.windows.forms.gridtablestylescollection\" data-linktype=\"relative-path\">GridTableStylesCollection</a> whose <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_MappingName_\" data-linktype=\"relative-path\">MappingName</a> property value equals the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> object&#39;s <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_TableName_\" data-linktype=\"relative-path\">TableName</a> property, the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> is displayed with this DataGridTableStyle. If no DataGridTableStyle exists with a matching <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_MappingName_\" data-linktype=\"relative-path\">MappingName</a>, the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> is displayed with the default style for data grid tables.  </p>\n</li>\n<li><p>When a different grid style is needed, use the <code>Item</code> property to select the appropriate DataGridTableStyle (pass the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_TableName_\" data-linktype=\"relative-path\">TableName</a> to the <a class=\"xref\" href=\"system.windows.forms.gridtablestylescollection#System_Windows_Forms_GridTableStylesCollection_Item_\" data-linktype=\"relative-path\">Item</a> property) and set the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_MappingName_\" data-linktype=\"relative-path\">MappingName</a> of the returned object to a new value.  </p>\n</li>\n<li><p>Use the <a class=\"xref\" href=\"system.windows.forms.gridtablestylescollection#System_Windows_Forms_GridTableStylesCollection_Item_\" data-linktype=\"relative-path\">Item</a> property to select the desired DataGridTableStyle, and set its <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_MappingName_\" data-linktype=\"relative-path\">MappingName</a> to the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_TableName_\" data-linktype=\"relative-path\">TableName</a> of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.  </p>\n</li>\n</ol>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Always create <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a> objects and add them to the <a class=\"xref\" href=\"system.windows.forms.gridcolumnstylescollection\" data-linktype=\"relative-path\">GridColumnStylesCollection</a> before adding DataGridTableStyle objects to the <a class=\"xref\" href=\"system.windows.forms.gridtablestylescollection\" data-linktype=\"relative-path\">GridTableStylesCollection</a>. When you add an empty DataGridTableStyle with a valid <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_MappingName_\" data-linktype=\"relative-path\">MappingName</a> value to the collection, <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a> objects are automatically generated for you. Consequently, an exception will be thrown if you try to add new <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a> objects with duplicate <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_MappingName_\" data-linktype=\"relative-path\">MappingName</a> values to the <a class=\"xref\" href=\"system.windows.forms.gridcolumnstylescollection\" data-linktype=\"relative-path\">GridColumnStylesCollection</a>.  </p>\n</div>\n<p> To determine which DataGridTableStyle is currently displayed, use the <a class=\"xref\" href=\"system.windows.forms.datagrid#System_Windows_Forms_DataGrid_DataSource_\" data-linktype=\"relative-path\">DataSource</a> and <a class=\"xref\" href=\"system.windows.forms.datagrid#System_Windows_Forms_DataGrid_DataMember_\" data-linktype=\"relative-path\">DataMember</a> properties of the <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">System.Windows.Forms.DataGrid</a> to return a <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a>. If the data source implements the <a class=\"xref\" href=\"system.componentmodel.itypedlist\" data-linktype=\"relative-path\">ITypedList</a> interface, you can use the <a class=\"xref\" href=\"system.componentmodel.itypedlist#System_ComponentModel_ITypedList_GetListName_\" data-linktype=\"relative-path\">GetListName</a> method to return the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_MappingName_\" data-linktype=\"relative-path\">MappingName</a> of the current table. This is shown in the C# code below:  </p>\n<pre><code>private void PrintCurrentListName(DataGrid myDataGrid){  \n CurrencyManager myCM = (CurrencyManager)  \n BindingContext[myDataGrid.DataSource, myDataGrid.DataMember];  \n IList myList = myCM.List;  \n ITypedList thisList = (ITypedList) myList;  \n Console.WriteLine(thisList.GetListName(null));  \n}\n</code></pre><p> If the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> objects related through <a class=\"xref\" href=\"system.data.datarelation\" data-linktype=\"relative-path\">DataRelation</a> objects, and the currently displayed <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> is a child table, the <a class=\"xref\" href=\"system.windows.forms.datagrid#System_Windows_Forms_DataGrid_DataMember_\" data-linktype=\"relative-path\">DataMember</a> will return a string in the form of TableName.RelationName (in the simplest case). If the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> is further down in the hierarchy, the string will consist of the parent table&#39;s name followed by the necessary <a class=\"xref\" href=\"system.data.datarelation#System_Data_DataRelation_RelationName_\" data-linktype=\"relative-path\">RelationName</a> values required to reach the table&#39;s level. For example, imagine three <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> objects in a hierarchical relationship named (top to bottom) <code>Regions</code>, <code>Customers</code>, and <code>Orders</code>, and two <a class=\"xref\" href=\"system.data.datarelation\" data-linktype=\"relative-path\">DataRelation</a> objects named <code>RegionsToCustomers</code> and <code>CustomersToOrders</code>, the <a class=\"xref\" href=\"system.windows.forms.datagrid#System_Windows_Forms_DataGrid_DataMember_\" data-linktype=\"relative-path\">DataMember</a> property will return &quot;Regions.RegionsToCustomers.CustomersToOrders&quot;. However, the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_MappingName_\" data-linktype=\"relative-path\">MappingName</a> will then be &quot;Orders&quot;.  </p>\n<p> The collection of DataGridTableStyle objects is returned through the <a class=\"xref\" href=\"system.windows.forms.datagrid#System_Windows_Forms_DataGrid_TableStyles_\" data-linktype=\"relative-path\">TableStyles</a> property of the <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">System.Windows.Forms.DataGrid</a>.  </p>\n<p> When a DataGridTableStyle is displayed, the settings for the DataGridTableStyle will override the settings for the <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">System.Windows.Forms.DataGrid</a> control. If a value is not set for a particular DataGridTableStyle property, the <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">System.Windows.Forms.DataGrid</a> control&#39;s value will be used instead. The following list shows the <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a> properties that can be set to override <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">System.Windows.Forms.DataGrid</a> control properties:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_AllowSorting_\" data-linktype=\"relative-path\">AllowSorting</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_AlternatingBackColor_\" data-linktype=\"relative-path\">AlternatingBackColor</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_BackColor_\" data-linktype=\"relative-path\">BackColor</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_ColumnHeadersVisible_\" data-linktype=\"relative-path\">ColumnHeadersVisible</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_GridLineColor_\" data-linktype=\"relative-path\">GridLineColor</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_GridLineStyle_\" data-linktype=\"relative-path\">GridLineStyle</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_HeaderBackColor_\" data-linktype=\"relative-path\">HeaderBackColor</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_HeaderFont_\" data-linktype=\"relative-path\">HeaderFont</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_HeaderForeColor_\" data-linktype=\"relative-path\">HeaderForeColor</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_LinkColor_\" data-linktype=\"relative-path\">LinkColor</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_PreferredColumnWidth_\" data-linktype=\"relative-path\">PreferredColumnWidth</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_PreferredRowHeight_\" data-linktype=\"relative-path\">PreferredRowHeight</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_ReadOnly_\" data-linktype=\"relative-path\">ReadOnly</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_RowHeadersVisible_\" data-linktype=\"relative-path\">RowHeadersVisible</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_RowHeaderWidth_\" data-linktype=\"relative-path\">RowHeaderWidth</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_SelectionBackColor_\" data-linktype=\"relative-path\">SelectionBackColor</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_SelectionForeColor_\" data-linktype=\"relative-path\">SelectionForeColor</a>  \n\n<p>To bind the <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a> to a strongly typed array of objects, the object type must contain public properties. To create a DataGridTableStyle that displays the array, set the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_MappingName_\" data-linktype=\"relative-path\">MappingName</a> property to <code>typename</code> where <code>typename</code> is replaced by the name of the object type. Also note that the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_MappingName_\" data-linktype=\"relative-path\">MappingName</a> property is case-sensitive; the type name must be matched exactly. See the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_MappingName_\" data-linktype=\"relative-path\">MappingName</a> property for an example.  </p>\n<p>You can also bind the <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a> to an <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a>. A feature of the <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> is that it can contain objects of multiple types, but the <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a> can only bind to such a list when all items in the list are of the same type as the first item. This means that all objects must either be of the same type, or they must inherit from the same class as the first item in the list. For example, if the first item in a list is a <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a>, the second item could be a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> (which inherits from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a>). If, on the other hand, the first item is a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, the second object cannot be a <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a>. Further, the <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> must have items in it when it is bound and the objects in the DataGridTableStyle must contain public properties. An empty <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> will result in an empty grid. When binding to an <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a>, set the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_MappingName_\" data-linktype=\"relative-path\">MappingName</a> of the DataGridTableStyle to &quot;ArrayList&quot; (the type name).</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle__ctor\" data-linktype=\"self-bookmark\">DataGridTableStyle()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle__ctor_System_Boolean_\" data-linktype=\"self-bookmark\">DataGridTableStyle(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> class using the specified value to determine whether the grid table is the default style.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle__ctor_System_Windows_Forms_CurrencyManager_\" data-linktype=\"self-bookmark\">DataGridTableStyle(CurrencyManager)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> class with the specified <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_DefaultTableStyle\" data-linktype=\"self-bookmark\">DefaultTableStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the default table style.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_AllowSorting\" data-linktype=\"self-bookmark\">AllowSorting</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether sorting is allowed on the grid table when this <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> is used.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_AlternatingBackColor\" data-linktype=\"self-bookmark\">AlternatingBackColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the background color of odd-numbered rows of the grid.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_BackColor\" data-linktype=\"self-bookmark\">BackColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the background color of even-numbered rows of the grid.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ColumnHeadersVisible\" data-linktype=\"self-bookmark\">ColumnHeadersVisible</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether column headers are visible.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_DataGrid\" data-linktype=\"self-bookmark\">DataGrid</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control for the drawn table.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ForeColor\" data-linktype=\"self-bookmark\">ForeColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the foreground color of the grid table.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_GridColumnStyles\" data-linktype=\"self-bookmark\">GridColumnStyles</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of columns drawn for this table.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_GridLineColor\" data-linktype=\"self-bookmark\">GridLineColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the color of grid lines.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_GridLineStyle\" data-linktype=\"self-bookmark\">GridLineStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the style of grid lines.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_HeaderBackColor\" data-linktype=\"self-bookmark\">HeaderBackColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the background color of headers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_HeaderFont\" data-linktype=\"self-bookmark\">HeaderFont</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the font used for header captions.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_HeaderForeColor\" data-linktype=\"self-bookmark\">HeaderForeColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the foreground color of headers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_LinkColor\" data-linktype=\"self-bookmark\">LinkColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the color of link text.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_LinkHoverColor\" data-linktype=\"self-bookmark\">LinkHoverColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the color displayed when hovering over link text.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_MappingName\" data-linktype=\"self-bookmark\">MappingName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name used to map this table to a specific data source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_PreferredColumnWidth\" data-linktype=\"self-bookmark\">PreferredColumnWidth</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the width used to create columns when a new grid is displayed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_PreferredRowHeight\" data-linktype=\"self-bookmark\">PreferredRowHeight</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the height used to create a row when a new grid is displayed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ReadOnly\" data-linktype=\"self-bookmark\">ReadOnly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether columns can be edited.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_RowHeadersVisible\" data-linktype=\"self-bookmark\">RowHeadersVisible</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether row headers are visible.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_RowHeaderWidth\" data-linktype=\"self-bookmark\">RowHeaderWidth</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the width of row headers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_SelectionBackColor\" data-linktype=\"self-bookmark\">SelectionBackColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the background color of selected cells.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_SelectionForeColor\" data-linktype=\"self-bookmark\">SelectionForeColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the foreground color of selected cells.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_BeginEdit_System_Windows_Forms_DataGridColumnStyle_System_Int32_\" data-linktype=\"self-bookmark\">BeginEdit(DataGridColumnStyle,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Requests an edit operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_CreateGridColumn_System_ComponentModel_PropertyDescriptor_\" data-linktype=\"self-bookmark\">CreateGridColumn(PropertyDescriptor)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a>, using the specified property descriptor.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_CreateGridColumn_System_ComponentModel_PropertyDescriptor_System_Boolean_\" data-linktype=\"self-bookmark\">CreateGridColumn(PropertyDescriptor,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a> using the specified property descriptor. Specifies whether the <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a> is a default column style.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Disposes of the resources (other than memory) used by the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_EndEdit_System_Windows_Forms_DataGridColumnStyle_System_Int32_System_Boolean_\" data-linktype=\"self-bookmark\">EndEdit(DataGridColumnStyle,Int32,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Requests an end to an edit operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_OnAllowSortingChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnAllowSortingChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_AllowSortingChanged\" data-linktype=\"relative-path\">AllowSortingChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_OnAlternatingBackColorChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnAlternatingBackColorChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_AlternatingBackColorChanged\" data-linktype=\"relative-path\">AlternatingBackColorChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_OnBackColorChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnBackColorChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_BackColorChanged\" data-linktype=\"relative-path\">BackColorChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_OnColumnHeadersVisibleChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnColumnHeadersVisibleChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_ColumnHeadersVisibleChanged\" data-linktype=\"relative-path\">ColumnHeadersVisibleChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_OnForeColorChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnForeColorChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_ForeColorChanged\" data-linktype=\"relative-path\">ForeColorChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_OnGridLineColorChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnGridLineColorChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_GridLineColorChanged\" data-linktype=\"relative-path\">GridLineColorChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_OnGridLineStyleChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnGridLineStyleChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_GridLineStyleChanged\" data-linktype=\"relative-path\">GridLineStyleChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_OnHeaderBackColorChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnHeaderBackColorChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_HeaderBackColorChanged\" data-linktype=\"relative-path\">HeaderBackColorChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_OnHeaderFontChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnHeaderFontChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_HeaderFontChanged\" data-linktype=\"relative-path\">HeaderFontChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_OnHeaderForeColorChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnHeaderForeColorChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_HeaderForeColorChanged\" data-linktype=\"relative-path\">HeaderForeColorChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_OnLinkColorChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnLinkColorChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_LinkColorChanged\" data-linktype=\"relative-path\">LinkColorChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_OnLinkHoverColorChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnLinkHoverColorChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <code>LinkHoverColorChanged</code> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_OnMappingNameChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnMappingNameChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_MappingNameChanged\" data-linktype=\"relative-path\">MappingNameChanged</a> event</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_OnPreferredColumnWidthChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnPreferredColumnWidthChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_PreferredColumnWidthChanged\" data-linktype=\"relative-path\">PreferredColumnWidthChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_OnPreferredRowHeightChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnPreferredRowHeightChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_PreferredRowHeightChanged\" data-linktype=\"relative-path\">PreferredRowHeightChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_OnReadOnlyChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnReadOnlyChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_ReadOnlyChanged\" data-linktype=\"relative-path\">ReadOnlyChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_OnRowHeadersVisibleChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnRowHeadersVisibleChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_RowHeadersVisibleChanged\" data-linktype=\"relative-path\">RowHeadersVisibleChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_OnRowHeaderWidthChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnRowHeaderWidthChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_RowHeaderWidthChanged\" data-linktype=\"relative-path\">RowHeaderWidthChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_OnSelectionBackColorChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnSelectionBackColorChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_SelectionBackColorChanged\" data-linktype=\"relative-path\">SelectionBackColorChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_OnSelectionForeColorChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnSelectionForeColorChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_SelectionForeColorChanged\" data-linktype=\"relative-path\">SelectionForeColorChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ResetAlternatingBackColor\" data-linktype=\"self-bookmark\">ResetAlternatingBackColor()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resets the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.AlternatingBackColor*</span> property to its default value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ResetBackColor\" data-linktype=\"self-bookmark\">ResetBackColor()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resets the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.BackColor*</span> property to its default value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ResetForeColor\" data-linktype=\"self-bookmark\">ResetForeColor()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resets the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.ForeColor*</span> property to its default value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ResetGridLineColor\" data-linktype=\"self-bookmark\">ResetGridLineColor()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resets the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.GridLineColor*</span> property to its default value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ResetHeaderBackColor\" data-linktype=\"self-bookmark\">ResetHeaderBackColor()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resets the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.HeaderBackColor*</span> property to its default value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ResetHeaderFont\" data-linktype=\"self-bookmark\">ResetHeaderFont()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resets the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.HeaderFont*</span> property to its default value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ResetHeaderForeColor\" data-linktype=\"self-bookmark\">ResetHeaderForeColor()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resets the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.HeaderForeColor*</span> property to its default value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ResetLinkColor\" data-linktype=\"self-bookmark\">ResetLinkColor()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resets the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.LinkColor*</span> property to its default value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ResetLinkHoverColor\" data-linktype=\"self-bookmark\">ResetLinkHoverColor()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resets the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.LinkHoverColor*</span> property to its default value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ResetSelectionBackColor\" data-linktype=\"self-bookmark\">ResetSelectionBackColor()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resets the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.SelectionBackColor*</span> property to its default value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ResetSelectionForeColor\" data-linktype=\"self-bookmark\">ResetSelectionForeColor()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resets the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.SelectionForeColor*</span> property to its default value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ShouldSerializeAlternatingBackColor\" data-linktype=\"self-bookmark\">ShouldSerializeAlternatingBackColor()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.AlternatingBackColor*</span> property should be persisted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ShouldSerializeBackColor\" data-linktype=\"self-bookmark\">ShouldSerializeBackColor()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.BackColor*</span> property should be persisted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ShouldSerializeForeColor\" data-linktype=\"self-bookmark\">ShouldSerializeForeColor()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.ForeColor*</span> property should be persisted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ShouldSerializeGridLineColor\" data-linktype=\"self-bookmark\">ShouldSerializeGridLineColor()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.GridLineColor*</span> property should be persisted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ShouldSerializeHeaderBackColor\" data-linktype=\"self-bookmark\">ShouldSerializeHeaderBackColor()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.HeaderBackColor*</span> property should be persisted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ShouldSerializeHeaderForeColor\" data-linktype=\"self-bookmark\">ShouldSerializeHeaderForeColor()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.HeaderForeColor*</span> property should be persisted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ShouldSerializeLinkColor\" data-linktype=\"self-bookmark\">ShouldSerializeLinkColor()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.LinkColor*</span> property should be persisted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ShouldSerializeLinkHoverColor\" data-linktype=\"self-bookmark\">ShouldSerializeLinkHoverColor()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.LinkHoverColor*</span> property should be persisted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ShouldSerializePreferredRowHeight\" data-linktype=\"self-bookmark\">ShouldSerializePreferredRowHeight()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.PreferredRowHeight*</span> property should be persisted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ShouldSerializeSelectionBackColor\" data-linktype=\"self-bookmark\">ShouldSerializeSelectionBackColor()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.SelectionBackColor*</span> property should be persisted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ShouldSerializeSelectionForeColor\" data-linktype=\"self-bookmark\">ShouldSerializeSelectionForeColor()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.SelectionForeColor*</span> property should be persisted.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_AllowSortingChanged\" data-linktype=\"self-bookmark\">AllowSortingChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.AllowSorting*</span> property value changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_AlternatingBackColorChanged\" data-linktype=\"self-bookmark\">AlternatingBackColorChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.AlternatingBackColor*</span> value changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_BackColorChanged\" data-linktype=\"self-bookmark\">BackColorChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.BackColor*</span> value changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ColumnHeadersVisibleChanged\" data-linktype=\"self-bookmark\">ColumnHeadersVisibleChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible*</span> value changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ForeColorChanged\" data-linktype=\"self-bookmark\">ForeColorChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.ForeColor*</span> value changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_GridLineColorChanged\" data-linktype=\"self-bookmark\">GridLineColorChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.GridLineColor*</span> value changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_GridLineStyleChanged\" data-linktype=\"self-bookmark\">GridLineStyleChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.GridLineStyle*</span> value changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_HeaderBackColorChanged\" data-linktype=\"self-bookmark\">HeaderBackColorChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.HeaderBackColor*</span> value changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_HeaderFontChanged\" data-linktype=\"self-bookmark\">HeaderFontChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.HeaderFont*</span> value changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_HeaderForeColorChanged\" data-linktype=\"self-bookmark\">HeaderForeColorChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.HeaderForeColor*</span> value changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_LinkColorChanged\" data-linktype=\"self-bookmark\">LinkColorChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.LinkColor*</span> value changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_LinkHoverColorChanged\" data-linktype=\"self-bookmark\">LinkHoverColorChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.LinkHoverColor*</span> value changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_MappingNameChanged\" data-linktype=\"self-bookmark\">MappingNameChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.MappingName*</span> value changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_PreferredColumnWidthChanged\" data-linktype=\"self-bookmark\">PreferredColumnWidthChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.PreferredColumnWidth*</span> property value changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_PreferredRowHeightChanged\" data-linktype=\"self-bookmark\">PreferredRowHeightChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.PreferredRowHeight*</span> value changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_ReadOnlyChanged\" data-linktype=\"self-bookmark\">ReadOnlyChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.ReadOnly*</span> value changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_RowHeadersVisibleChanged\" data-linktype=\"self-bookmark\">RowHeadersVisibleChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.RowHeadersVisible*</span> value changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_RowHeaderWidthChanged\" data-linktype=\"self-bookmark\">RowHeaderWidthChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.RowHeaderWidth*</span> value changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_SelectionBackColorChanged\" data-linktype=\"self-bookmark\">SelectionBackColorChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.SelectionBackColor*</span> value changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridTableStyle_SelectionForeColorChanged\" data-linktype=\"self-bookmark\">SelectionForeColorChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.SelectionForeColor*</span> value changes.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle__ctor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataGridTableStyle()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DataGridTableStyle ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a new <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> and adds it to the <a class=\"xref\" href=\"system.windows.forms.gridtablestylescollection\" data-linktype=\"relative-path\">GridTableStylesCollection</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic DataGridTableStyle.DataGridTableStyle Example#1\">private:\n   void AddGridTable()\n   {\n      DataGridTableStyle^ myGridTableStyle;\n      myGridTableStyle = gcnew DataGridTableStyle;\n      myGridTableStyle-&gt;MappingName = &quot;Customers&quot;;\n      dataGrid1-&gt;TableStyles-&gt;Add( myGridTableStyle );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic DataGridTableStyle.DataGridTableStyle Example#1\">private void AddGridTable(){\n   DataGridTableStyle myGridTableStyle;\n   myGridTableStyle = new DataGridTableStyle();\n   myGridTableStyle.MappingName = &quot;Customers&quot;;\n   dataGrid1.TableStyles.Add(myGridTableStyle);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic DataGridTableStyle.DataGridTableStyle Example#1\">   Private Sub AddGridTable()\n      Dim myGridTableStyle As DataGridTableStyle\n      myGridTableStyle = New DataGridTableStyle()\n      myGridTableStyle.MappingName = &quot;Customers&quot;\n      dataGrid1.TableStyles.Add(myGridTableStyle)\n   End Sub \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle__ctor_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataGridTableStyle(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> class using the specified value to determine whether the grid table is the default style.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DataGridTableStyle (bool isDefaultTableStyle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>isDefaultTableStyle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to specify the table as the default; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a new <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> and adds it to the <a class=\"xref\" href=\"system.windows.forms.gridtablestylescollection\" data-linktype=\"relative-path\">GridTableStylesCollection</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic DataGridTableStyle.DataGridTableStyle Example#1\">private:\n   void AddGridTable()\n   {\n      DataGridTableStyle^ myGridTableStyle;\n      myGridTableStyle = gcnew DataGridTableStyle;\n      myGridTableStyle-&gt;MappingName = &quot;Customers&quot;;\n      dataGrid1-&gt;TableStyles-&gt;Add( myGridTableStyle );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic DataGridTableStyle.DataGridTableStyle Example#1\">private void AddGridTable(){\n   DataGridTableStyle myGridTableStyle;\n   myGridTableStyle = new DataGridTableStyle();\n   myGridTableStyle.MappingName = &quot;Customers&quot;;\n   dataGrid1.TableStyles.Add(myGridTableStyle);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic DataGridTableStyle.DataGridTableStyle Example#1\">   Private Sub AddGridTable()\n      Dim myGridTableStyle As DataGridTableStyle\n      myGridTableStyle = New DataGridTableStyle()\n      myGridTableStyle.MappingName = &quot;Customers&quot;\n      dataGrid1.TableStyles.Add(myGridTableStyle)\n   End Sub \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle__ctor_System_Windows_Forms_CurrencyManager_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataGridTableStyle(CurrencyManager)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> class with the specified <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DataGridTableStyle (System.Windows.Forms.CurrencyManager listManager);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>listManager</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a> to use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a new <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> using a <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a> for a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic DataGridTableStyle.DataGridTableStyle2 Example#1\">private:\n   void CreateDataGridGridTableStyle()\n   {\n      CurrencyManager^ myCurrencyManager;\n      DataGridTableStyle^ myGridTableStyle;\n      \n      /* Get the CurrencyManager for a DataTable named &quot;Customers&quot;\n         found in a DataSet named &quot;myDataSet&quot;. */\n      myCurrencyManager = dynamic_cast&lt;CurrencyManager^&gt;(BindingContext[myDataSet, &quot;Customers&quot;]);\n      myGridTableStyle = gcnew DataGridTableStyle( myCurrencyManager );\n      \n      // Add the table style to the collection of a DataGrid.\n      myDataGrid-&gt;TableStyles-&gt;Add( myGridTableStyle );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic DataGridTableStyle.DataGridTableStyle2 Example#1\">private void CreateDataGridGridTableStyle(){\n   CurrencyManager myCurrencyManager;\n   DataGridTableStyle myGridTableStyle;\n   /* Get the CurrencyManager for a DataTable named &quot;Customers&quot;\n   found in a DataSet named &quot;myDataSet&quot;. */\n   myCurrencyManager = \n   (CurrencyManager) BindingContext[myDataSet, &quot;Customers&quot;];\n   myGridTableStyle = new DataGridTableStyle(myCurrencyManager);\n   // Add the table style to the collection of a DataGrid.\n   myDataGrid.TableStyles.Add(myGridTableStyle);\n}\n \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic DataGridTableStyle.DataGridTableStyle2 Example#1\">Private Sub CreateDataGridGridTableStyle()\n   Dim myCurrencyManager As CurrencyManager\n   Dim myGridTableStyle As DataGridTableStyle\n   &#39; Get the CurrencyManager for a DataTable named &quot;Customers&quot;\n   &#39; found in a DataSet named &quot;myDataSet&quot;. \n   myCurrencyManager = CType _\n   (Me.BindingContext(myDataSet, &quot;Customers&quot;), CurrencyManager)\n   myGridTableStyle = New DataGridTableStyle(myCurrencyManager)\n   &#39; Add the table style to the collection of a DataGrid.\n   myDataGrid.TableStyles.Add(myGridTableStyle)\nEnd Sub &#39;CreateDataGridGridTableStyle\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_DefaultTableStyle\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultTableStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets the default table style.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.Forms.DataGridTableStyle DefaultTableStyle;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_AllowSorting\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_AllowSorting_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowSorting</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether sorting is allowed on the grid table when this <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> is used.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AllowSorting { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if sorting is allowed; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the AllowSorting property is set to <code>true</code>, a triangle appears in each column header indicating the direction of the sort. The user can click on any column header to sort the grid by that column. Clicking the column a second time changes the direction of the sort.  </p>\n<p> This property overrides the <a class=\"xref\" href=\"system.windows.forms.datagrid#System_Windows_Forms_DataGrid_AllowSorting_\" data-linktype=\"relative-path\">AllowSorting</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example allows you to toggle sorting availability on a <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a> by clicking a button and the current sorting status is displayed in a label. This example requires that you have a <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a> with a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">System.Data.DataSet</a> that contains some data, a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> and a <a class=\"xref\" href=\"system.windows.forms.label\" data-linktype=\"relative-path\">Label</a> on a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_Sample2#1\">   private:\n      void DataGridTableStyle_Sample_Load( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         myDataGridTableStyle1 = gcnew DataGridTableStyle;\n         mylabel-&gt;Text = String::Concat( &quot;Sorting Status : &quot;, myDataGridTableStyle1-&gt;AllowSorting );\n         if ( myDataGridTableStyle1-&gt;AllowSorting == true )\n         {\n            btnApplyStyles-&gt;Text = &quot;Remove Sorting&quot;;\n         }\n         else\n         {\n            btnApplyStyles-&gt;Text = &quot;Apply Sorting&quot;;\n         }\n\n         myDataGridTableStyle1-&gt;AllowSortingChanged += gcnew System::EventHandler(\n            this, &amp;DataGridTableStyle_Sample::AllowSortingChanged_Handler );\n         myDataGridTableStyle1-&gt;MappingName = &quot;Customers&quot;;\n      }\n\n      void AllowSortingChanged_Handler( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         mylabel-&gt;Text = String::Concat( &quot;Sorting Status : &quot;, myDataGridTableStyle1-&gt;AllowSorting );\n      }\n\n      void btnApplyStyles_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         if ( myDataGridTableStyle1-&gt;AllowSorting == true )\n         {\n            // Remove sorting.\n            myDataGridTableStyle1-&gt;AllowSorting = false;\n            btnApplyStyles-&gt;Text = &quot;Allow Sorting&quot;;\n         }\n         else\n         {\n            // Allow sorting.\n            myDataGridTableStyle1-&gt;AllowSorting = true;\n            btnApplyStyles-&gt;Text = &quot;Remove Sorting&quot;;\n         }\n\n         mylabel-&gt;Text = String::Concat( &quot;Sorting Status : &quot;, myDataGridTableStyle1-&gt;AllowSorting );\n\n         // Add the DataGridTableStyle to DataGrid.\n         myDataGrid-&gt;TableStyles-&gt;Add( myDataGridTableStyle1 );\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridTableStyle_Sample2#1\">      private void DataGridTableStyle_Sample_Load(object sender,\n                                             EventArgs e)\n      {\n         myDataGridTableStyle1 = new DataGridTableStyle();\n\n         mylabel.Text = &quot;Sorting Status :&quot; + \n               myDataGridTableStyle1.AllowSorting.ToString();\n         if(myDataGridTableStyle1.AllowSorting == true)\n         {\n            btnApplyStyles.Text = &quot;Remove Sorting&quot;;\n         }\n         else\n         {\n            btnApplyStyles.Text = &quot;Apply Sorting&quot;;\n         }\n         // Attach custom event handlers.\n         myDataGridTableStyle1.AllowSortingChanged += \n                     new System.EventHandler(AllowSortingChanged_Handler);\n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;;\n      } \n      private void AllowSortingChanged_Handler(object sender,EventArgs e)\n      {         \n         mylabel.Text = &quot;Sorting Status :&quot; \n               + myDataGridTableStyle1.AllowSorting.ToString();\n      }     \n      private void btnApplyStyles_Click(object sender, EventArgs e)\n      {       \n\n         if(myDataGridTableStyle1.AllowSorting == true)\n         {            \n            // Remove sorting.\n            myDataGridTableStyle1.AllowSorting = false; \n            btnApplyStyles.Text = &quot;Allow Sorting&quot;;\n         }\n         else\n         {\n            // Allow sorting.\n            myDataGridTableStyle1.AllowSorting = true;\n            btnApplyStyles.Text = &quot;Remove Sorting&quot;;\n         } \n\n         mylabel.Text = &quot;Sorting Status :&quot; + myDataGridTableStyle1.AllowSorting;\n         // Add the DataGridTableStyle to DataGrid.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1);\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_Sample2#1\">      Private Sub DataGridTableStyle_Sample_Load(ByVal sender As Object, _\n                              ByVal e As EventArgs) Handles MyBase.Load\n         myDataGridTableStyle1 = New DataGridTableStyle()\n\n         mylabel.Text = &quot;Sorting Status :&quot; + myDataGridTableStyle1.AllowSorting.ToString()\n         If myDataGridTableStyle1.AllowSorting = True Then\n            btnApplyStyles.Text = &quot;Remove Sorting&quot;\n         Else\n            btnApplyStyles.Text = &quot;Apply Sorting&quot;\n         End If\n         &#39; Attach custom event handlers.\n         AddHandler myDataGridTableStyle1.AllowSortingChanged, AddressOf AllowSortingChanged_Handler\n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;\n      End Sub &#39;DataGridTableStyle_Sample_Load\n\n      Private Sub AllowSortingChanged_Handler(ByVal sender As Object, ByVal e As EventArgs)\n         mylabel.Text = &quot;Sorting Status :&quot; + myDataGridTableStyle1.AllowSorting.ToString()\n      End Sub &#39;AllowSortingChanged_Handler\n\n      Private Sub btnApplyStyles_Click(ByVal sender As Object, _\n                                       ByVal e As EventArgs) Handles btnApplyStyles.Click\n         If myDataGridTableStyle1.AllowSorting = True Then\n            &#39; Remove sorting.\n            myDataGridTableStyle1.AllowSorting = False\n            btnApplyStyles.Text = &quot;Allow Sorting&quot;\n         Else\n            &#39; Allow sorting.\n            myDataGridTableStyle1.AllowSorting = True\n            btnApplyStyles.Text = &quot;Remove Sorting&quot;\n         End If\n\n         mylabel.Text = &quot;Sorting Status :&quot; + myDataGridTableStyle1.AllowSorting.ToString\n         &#39; Add the DataGridTableStyle to DataGrid.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1)\n      End Sub &#39;btnApplyStyles_Click\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_AlternatingBackColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_AlternatingBackColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AlternatingBackColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the background color of odd-numbered rows of the grid.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Color AlternatingBackColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> that represents the background color of odd-numbered rows. The default is <span class=\"xref\">stem.Drawing.SystemBrushes.Window*</span></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates an instance of <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> and sets the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_BackColor_\" data-linktype=\"relative-path\">BackColor</a> and AlternatingBackColor properties to new values. The example requires that you have a <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a> with a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">System.Data.DataSet</a> that contains some data, and a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> on a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridTableStyle_sample5#1\">      private void AddCustomDataTableStyle()\n      {\n         myDataGridTableStyle1 = new DataGridTableStyle();\n        \n         // EventHandlers          \n         myDataGridTableStyle1.GridLineColorChanged += new System.EventHandler(GridLineColorChanged_Handler);         \n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;;\n\n         // Set other properties.\n         myDataGridTableStyle1.AlternatingBackColor=System.Drawing.Color.Gold;\n         myDataGridTableStyle1.BackColor = System.Drawing.Color.White;\n         myDataGridTableStyle1.GridLineStyle=System.Windows.Forms.DataGridLineStyle.Solid;\n         myDataGridTableStyle1.GridLineColor=Color.Red;\n\n         // Set the HeaderText and Width properties. \n         DataGridColumnStyle myBoolCol = new DataGridBoolColumn();\n         myBoolCol.MappingName = &quot;Current&quot;;\n         myBoolCol.HeaderText = &quot;IsCurrent Customer&quot;;\n         myBoolCol.Width = 150;\n         myDataGridTableStyle1.GridColumnStyles.Add(myBoolCol);\n      \n         // Add a second column style.\n         DataGridColumnStyle myTextCol = new DataGridTextBoxColumn();\n         myTextCol.MappingName = &quot;custName&quot;;\n         myTextCol.HeaderText = &quot;Customer Name&quot;;\n         myTextCol.Width = 250;\n         myDataGridTableStyle1.GridColumnStyles.Add(myTextCol);\n\n         // Create new ColumnStyle objects\n         DataGridColumnStyle cOrderDate = new DataGridTextBoxColumn();\n         cOrderDate.MappingName = &quot;OrderDate&quot;;\n         cOrderDate.HeaderText = &quot;Order Date&quot;;\n         cOrderDate.Width = 100;\n\n         // Use a PropertyDescriptor to create a formatted column.\n         PropertyDescriptorCollection myPropertyDescriptorCollection = BindingContext\n            [myDataSet, &quot;Customers.custToOrders&quot;].GetItemProperties();\n \n         // Create a formatted column using a PropertyDescriptor.\n         DataGridColumnStyle csOrderAmount = \n            new DataGridTextBoxColumn(myPropertyDescriptorCollection[&quot;OrderAmount&quot;], &quot;c&quot;, true);\n         csOrderAmount.MappingName = &quot;OrderAmount&quot;;\n         csOrderAmount.HeaderText = &quot;Total&quot;;\n         csOrderAmount.Width = 100;\n              \n         // Add the DataGridTableStyle instances to the GridTableStylesCollection.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1);      \n      }      \n      private void GridLineColorChanged_Handler(object sender,EventArgs e)\n      {\n         MessageBox.Show(&quot;GridLineColor Changed&quot;, &quot;DataGridTableStyle&quot;);\n      }   \n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_sample5#1\">      Private Sub AddCustomDataTableStyle()\n         myDataGridTableStyle1 = New DataGridTableStyle()\n\n         &#39; EventHandlers\n         AddHandler myDataGridTableStyle1.GridLineColorChanged, AddressOf GridLineColorChanged_Handler\n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;\n\n         &#39; Set other properties.\n         myDataGridTableStyle1.AlternatingBackColor = System.Drawing.Color.Gold\n         myDataGridTableStyle1.BackColor = System.Drawing.Color.White\n         myDataGridTableStyle1.GridLineStyle = System.Windows.Forms.DataGridLineStyle.Solid\n         myDataGridTableStyle1.GridLineColor = Color.Red\n\n         &#39; Set the HeaderText and Width properties.\n         Dim myBoolCol = New DataGridBoolColumn()\n         myBoolCol.MappingName = &quot;Current&quot;\n         myBoolCol.HeaderText = &quot;IsCurrent Customer&quot;\n         myBoolCol.Width = 150\n         myDataGridTableStyle1.GridColumnStyles.Add(myBoolCol)\n\n         &#39; Add a second column style.\n         Dim myTextCol = New DataGridTextBoxColumn()\n         myTextCol.MappingName = &quot;custName&quot;\n         myTextCol.HeaderText = &quot;Customer Name&quot;\n         myTextCol.Width = 250\n         myDataGridTableStyle1.GridColumnStyles.Add(myTextCol)\n\n         &#39; Create new ColumnStyle objects\n         Dim cOrderDate = New DataGridTextBoxColumn()\n         cOrderDate.MappingName = &quot;OrderDate&quot;\n         cOrderDate.HeaderText = &quot;Order Date&quot;\n         cOrderDate.Width = 100\n\n         &#39; Use a PropertyDescriptor to create a formatted column.\n         Dim myPropertyDescriptorCollection As PropertyDescriptorCollection = _\n                        BindingContext(myDataSet, &quot;Customers.custToOrders&quot;).GetItemProperties()\n\n         &#39; Create a formatted column using a PropertyDescriptor.\n         Dim csOrderAmount = New DataGridTextBoxColumn(myPropertyDescriptorCollection( _\n                                                      &quot;OrderAmount&quot;), &quot;c&quot;, True)\n         csOrderAmount.MappingName = &quot;OrderAmount&quot;\n         csOrderAmount.HeaderText = &quot;Total&quot;\n         csOrderAmount.Width = 100\n\n         &#39; Add the DataGridTableStyle instances to the GridTableStylesCollection.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1)\n      End Sub &#39;AddCustomDataTableStyle\n\n      Private Sub GridLineColorChanged_Handler(ByVal sender As Object, ByVal e As EventArgs)\n         MessageBox.Show(&quot;GridLineColor Changed&quot;, &quot;DataGridTableStyle&quot;)\n      End Sub &#39;GridLineColorChanged_Handler\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_sample5#1\">private:\n   void AddCustomDataTableStyle()\n   {\n      myDataGridTableStyle1 = gcnew DataGridTableStyle;\n\n      // EventHandlers\n      myDataGridTableStyle1-&gt;GridLineColorChanged += gcnew System::EventHandler( this, &amp;DataGridTableStyle_Sample::GridLineColorChanged_Handler );\n      myDataGridTableStyle1-&gt;MappingName = &quot;Customers&quot;;\n\n      // Set other properties.\n      myDataGridTableStyle1-&gt;AlternatingBackColor = System::Drawing::Color::Gold;\n      myDataGridTableStyle1-&gt;BackColor = System::Drawing::Color::White;\n      myDataGridTableStyle1-&gt;GridLineStyle = System::Windows::Forms::DataGridLineStyle::Solid;\n      myDataGridTableStyle1-&gt;GridLineColor = Color::Red;\n\n      // Set the HeaderText and Width properties.\n      DataGridColumnStyle^ myBoolCol = gcnew DataGridBoolColumn;\n      myBoolCol-&gt;MappingName = &quot;Current&quot;;\n      myBoolCol-&gt;HeaderText = &quot;IsCurrent Customer&quot;;\n      myBoolCol-&gt;Width = 150;\n      myDataGridTableStyle1-&gt;GridColumnStyles-&gt;Add( myBoolCol );\n\n      // Add a second column style.\n      DataGridColumnStyle^ myTextCol = gcnew DataGridTextBoxColumn;\n      myTextCol-&gt;MappingName = &quot;custName&quot;;\n      myTextCol-&gt;HeaderText = &quot;Customer Name&quot;;\n      myTextCol-&gt;Width = 250;\n      myDataGridTableStyle1-&gt;GridColumnStyles-&gt;Add( myTextCol );\n\n      // Create new ColumnStyle objects\n      DataGridColumnStyle^ cOrderDate = gcnew DataGridTextBoxColumn;\n      cOrderDate-&gt;MappingName = &quot;OrderDate&quot;;\n      cOrderDate-&gt;HeaderText = &quot;Order Date&quot;;\n      cOrderDate-&gt;Width = 100;\n\n      // Use a PropertyDescriptor to create a formatted column.\n      PropertyDescriptorCollection^ myPropertyDescriptorCollection =\n         BindingContext[myDataSet, &quot;Customers::custToOrders&quot;]-&gt;GetItemProperties();\n\n      // Create a formatted column using a PropertyDescriptor.\n      DataGridColumnStyle^ csOrderAmount = gcnew DataGridTextBoxColumn( myPropertyDescriptorCollection[ &quot;OrderAmount&quot; ],&quot;c&quot;,true );\n      csOrderAmount-&gt;MappingName = &quot;OrderAmount&quot;;\n      csOrderAmount-&gt;HeaderText = &quot;Total&quot;;\n      csOrderAmount-&gt;Width = 100;\n\n      // Add the DataGridTableStyle instances to the GridTableStylesCollection.\n      myDataGrid-&gt;TableStyles-&gt;Add( myDataGridTableStyle1 );\n   }\n\n   void GridLineColorChanged_Handler( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      MessageBox::Show( &quot;GridLineColor Changed&quot;, &quot;DataGridTableStyle&quot; );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_BackColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_BackColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BackColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the background color of even-numbered rows of the grid.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Color BackColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> that represents the background color of odd-numbered rows.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_AlternatingBackColor_\" data-linktype=\"relative-path\">AlternatingBackColor</a> property can also be set to create a ledger-like appearance.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates an instance of <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> and sets the BackColor and <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_AlternatingBackColor_\" data-linktype=\"relative-path\">AlternatingBackColor</a> properties to new values. The example requires that you have a <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a> with a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">System.Data.DataSet</a> that contains some data, and a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> on a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridTableStyle_sample5#1\">      private void AddCustomDataTableStyle()\n      {\n         myDataGridTableStyle1 = new DataGridTableStyle();\n        \n         // EventHandlers          \n         myDataGridTableStyle1.GridLineColorChanged += new System.EventHandler(GridLineColorChanged_Handler);         \n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;;\n\n         // Set other properties.\n         myDataGridTableStyle1.AlternatingBackColor=System.Drawing.Color.Gold;\n         myDataGridTableStyle1.BackColor = System.Drawing.Color.White;\n         myDataGridTableStyle1.GridLineStyle=System.Windows.Forms.DataGridLineStyle.Solid;\n         myDataGridTableStyle1.GridLineColor=Color.Red;\n\n         // Set the HeaderText and Width properties. \n         DataGridColumnStyle myBoolCol = new DataGridBoolColumn();\n         myBoolCol.MappingName = &quot;Current&quot;;\n         myBoolCol.HeaderText = &quot;IsCurrent Customer&quot;;\n         myBoolCol.Width = 150;\n         myDataGridTableStyle1.GridColumnStyles.Add(myBoolCol);\n      \n         // Add a second column style.\n         DataGridColumnStyle myTextCol = new DataGridTextBoxColumn();\n         myTextCol.MappingName = &quot;custName&quot;;\n         myTextCol.HeaderText = &quot;Customer Name&quot;;\n         myTextCol.Width = 250;\n         myDataGridTableStyle1.GridColumnStyles.Add(myTextCol);\n\n         // Create new ColumnStyle objects\n         DataGridColumnStyle cOrderDate = new DataGridTextBoxColumn();\n         cOrderDate.MappingName = &quot;OrderDate&quot;;\n         cOrderDate.HeaderText = &quot;Order Date&quot;;\n         cOrderDate.Width = 100;\n\n         // Use a PropertyDescriptor to create a formatted column.\n         PropertyDescriptorCollection myPropertyDescriptorCollection = BindingContext\n            [myDataSet, &quot;Customers.custToOrders&quot;].GetItemProperties();\n \n         // Create a formatted column using a PropertyDescriptor.\n         DataGridColumnStyle csOrderAmount = \n            new DataGridTextBoxColumn(myPropertyDescriptorCollection[&quot;OrderAmount&quot;], &quot;c&quot;, true);\n         csOrderAmount.MappingName = &quot;OrderAmount&quot;;\n         csOrderAmount.HeaderText = &quot;Total&quot;;\n         csOrderAmount.Width = 100;\n              \n         // Add the DataGridTableStyle instances to the GridTableStylesCollection.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1);      \n      }      \n      private void GridLineColorChanged_Handler(object sender,EventArgs e)\n      {\n         MessageBox.Show(&quot;GridLineColor Changed&quot;, &quot;DataGridTableStyle&quot;);\n      }   \n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_sample5#1\">      Private Sub AddCustomDataTableStyle()\n         myDataGridTableStyle1 = New DataGridTableStyle()\n\n         &#39; EventHandlers\n         AddHandler myDataGridTableStyle1.GridLineColorChanged, AddressOf GridLineColorChanged_Handler\n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;\n\n         &#39; Set other properties.\n         myDataGridTableStyle1.AlternatingBackColor = System.Drawing.Color.Gold\n         myDataGridTableStyle1.BackColor = System.Drawing.Color.White\n         myDataGridTableStyle1.GridLineStyle = System.Windows.Forms.DataGridLineStyle.Solid\n         myDataGridTableStyle1.GridLineColor = Color.Red\n\n         &#39; Set the HeaderText and Width properties.\n         Dim myBoolCol = New DataGridBoolColumn()\n         myBoolCol.MappingName = &quot;Current&quot;\n         myBoolCol.HeaderText = &quot;IsCurrent Customer&quot;\n         myBoolCol.Width = 150\n         myDataGridTableStyle1.GridColumnStyles.Add(myBoolCol)\n\n         &#39; Add a second column style.\n         Dim myTextCol = New DataGridTextBoxColumn()\n         myTextCol.MappingName = &quot;custName&quot;\n         myTextCol.HeaderText = &quot;Customer Name&quot;\n         myTextCol.Width = 250\n         myDataGridTableStyle1.GridColumnStyles.Add(myTextCol)\n\n         &#39; Create new ColumnStyle objects\n         Dim cOrderDate = New DataGridTextBoxColumn()\n         cOrderDate.MappingName = &quot;OrderDate&quot;\n         cOrderDate.HeaderText = &quot;Order Date&quot;\n         cOrderDate.Width = 100\n\n         &#39; Use a PropertyDescriptor to create a formatted column.\n         Dim myPropertyDescriptorCollection As PropertyDescriptorCollection = _\n                        BindingContext(myDataSet, &quot;Customers.custToOrders&quot;).GetItemProperties()\n\n         &#39; Create a formatted column using a PropertyDescriptor.\n         Dim csOrderAmount = New DataGridTextBoxColumn(myPropertyDescriptorCollection( _\n                                                      &quot;OrderAmount&quot;), &quot;c&quot;, True)\n         csOrderAmount.MappingName = &quot;OrderAmount&quot;\n         csOrderAmount.HeaderText = &quot;Total&quot;\n         csOrderAmount.Width = 100\n\n         &#39; Add the DataGridTableStyle instances to the GridTableStylesCollection.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1)\n      End Sub &#39;AddCustomDataTableStyle\n\n      Private Sub GridLineColorChanged_Handler(ByVal sender As Object, ByVal e As EventArgs)\n         MessageBox.Show(&quot;GridLineColor Changed&quot;, &quot;DataGridTableStyle&quot;)\n      End Sub &#39;GridLineColorChanged_Handler\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_sample5#1\">private:\n   void AddCustomDataTableStyle()\n   {\n      myDataGridTableStyle1 = gcnew DataGridTableStyle;\n\n      // EventHandlers\n      myDataGridTableStyle1-&gt;GridLineColorChanged += gcnew System::EventHandler( this, &amp;DataGridTableStyle_Sample::GridLineColorChanged_Handler );\n      myDataGridTableStyle1-&gt;MappingName = &quot;Customers&quot;;\n\n      // Set other properties.\n      myDataGridTableStyle1-&gt;AlternatingBackColor = System::Drawing::Color::Gold;\n      myDataGridTableStyle1-&gt;BackColor = System::Drawing::Color::White;\n      myDataGridTableStyle1-&gt;GridLineStyle = System::Windows::Forms::DataGridLineStyle::Solid;\n      myDataGridTableStyle1-&gt;GridLineColor = Color::Red;\n\n      // Set the HeaderText and Width properties.\n      DataGridColumnStyle^ myBoolCol = gcnew DataGridBoolColumn;\n      myBoolCol-&gt;MappingName = &quot;Current&quot;;\n      myBoolCol-&gt;HeaderText = &quot;IsCurrent Customer&quot;;\n      myBoolCol-&gt;Width = 150;\n      myDataGridTableStyle1-&gt;GridColumnStyles-&gt;Add( myBoolCol );\n\n      // Add a second column style.\n      DataGridColumnStyle^ myTextCol = gcnew DataGridTextBoxColumn;\n      myTextCol-&gt;MappingName = &quot;custName&quot;;\n      myTextCol-&gt;HeaderText = &quot;Customer Name&quot;;\n      myTextCol-&gt;Width = 250;\n      myDataGridTableStyle1-&gt;GridColumnStyles-&gt;Add( myTextCol );\n\n      // Create new ColumnStyle objects\n      DataGridColumnStyle^ cOrderDate = gcnew DataGridTextBoxColumn;\n      cOrderDate-&gt;MappingName = &quot;OrderDate&quot;;\n      cOrderDate-&gt;HeaderText = &quot;Order Date&quot;;\n      cOrderDate-&gt;Width = 100;\n\n      // Use a PropertyDescriptor to create a formatted column.\n      PropertyDescriptorCollection^ myPropertyDescriptorCollection =\n         BindingContext[myDataSet, &quot;Customers::custToOrders&quot;]-&gt;GetItemProperties();\n\n      // Create a formatted column using a PropertyDescriptor.\n      DataGridColumnStyle^ csOrderAmount = gcnew DataGridTextBoxColumn( myPropertyDescriptorCollection[ &quot;OrderAmount&quot; ],&quot;c&quot;,true );\n      csOrderAmount-&gt;MappingName = &quot;OrderAmount&quot;;\n      csOrderAmount-&gt;HeaderText = &quot;Total&quot;;\n      csOrderAmount-&gt;Width = 100;\n\n      // Add the DataGridTableStyle instances to the GridTableStylesCollection.\n      myDataGrid-&gt;TableStyles-&gt;Add( myDataGridTableStyle1 );\n   }\n\n   void GridLineColorChanged_Handler( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      MessageBox::Show( &quot;GridLineColor Changed&quot;, &quot;DataGridTableStyle&quot; );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ColumnHeadersVisible\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ColumnHeadersVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnHeadersVisible</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether column headers are visible.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ColumnHeadersVisible { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if column headers are visible; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To set header caption text, use the <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle#System_Windows_Forms_DataGridColumnStyle_HeaderText_\" data-linktype=\"relative-path\">HeaderText</a> property of the <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridTableStyle_Sample3#1\">\n      private void DataGridTableStyle_Sample_Load(object sender,\n                                                EventArgs e)\n      {\n         myDataGridTableStyle1 = new DataGridTableStyle();\n         myHeaderLabel.Text = &quot;Header Status :&quot; \n            + myDataGridTableStyle1.ColumnHeadersVisible.ToString();\n         if(myDataGridTableStyle1.ColumnHeadersVisible == true)\n         {\n            btnheader.Text = &quot;Remove Header&quot;;\n         }\n         else\n         {\n            btnheader.Text = &quot;Add Header&quot;;\n         }\n         AddCustomDataTableStyle();\n      } \n      private void AddCustomDataTableStyle()\n      {           \n         myDataGridTableStyle1.ColumnHeadersVisibleChanged \n            += new System.EventHandler(ColumnHeadersVisibleChanged_Handler);\n\n         // Set ColumnheaderVisible property.         \n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;;\n\n         // Add a GridColumnStyle and set its MappingName \n         DataGridColumnStyle myBoolCol = new DataGridBoolColumn();\n         myBoolCol.MappingName = &quot;Current&quot;;\n         myBoolCol.HeaderText = &quot;IsCurrent Customer&quot;;\n         myBoolCol.Width = 150;         \n         myDataGridTableStyle1.GridColumnStyles.Add(myBoolCol);\n      \n         // Add a second column style.\n         DataGridColumnStyle myTextCol = new DataGridTextBoxColumn();\n         myTextCol.MappingName = &quot;custName&quot;;\n         myTextCol.HeaderText = &quot;Customer Name&quot;;\n         myTextCol.Width = 250;\n         myDataGridTableStyle1.GridColumnStyles.Add(myTextCol);\n\n         // Create new ColumnStyle objects\n         DataGridColumnStyle cOrderDate = new DataGridTextBoxColumn();\n         cOrderDate.MappingName = &quot;OrderDate&quot;;\n         cOrderDate.HeaderText = &quot;Order Date&quot;;\n         cOrderDate.Width = 100;\n\n         // PropertyDescriptor to create a formatted column.\n         PropertyDescriptorCollection myPropertyDescriptorCollection = this.BindingContext\n            [myDataSet, &quot;Customers.custToOrders&quot;].GetItemProperties();\n \n         // Create a formatted column using a PropertyDescriptor.         \n         DataGridColumnStyle csOrderAmount = \n            new DataGridTextBoxColumn(myPropertyDescriptorCollection[&quot;OrderAmount&quot;], &quot;c&quot;, true);\n         csOrderAmount.MappingName = &quot;OrderAmount&quot;;\n         csOrderAmount.HeaderText = &quot;Total&quot;;\n         csOrderAmount.Width = 100;\n\n         // Add the DataGridTableStyle instances to GridTableStylesCollection.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1);              \n      }          \n      private void ColumnHeadersVisibleChanged_Handler(object sender,\n                                                            EventArgs e)\n      {         \n         myHeaderLabel.Text = &quot;Header Status :&quot; \n            + myDataGridTableStyle1.ColumnHeadersVisible.ToString();\n      }      \n      private void btnheader_Click(object sender, EventArgs e)\n      {\n         if(myDataGridTableStyle1.ColumnHeadersVisible == true)\n         {            \n            myDataGridTableStyle1.ColumnHeadersVisible = false;\n            btnheader.Text = &quot;Add Header&quot;;\n         }\n         else\n         {\n            myDataGridTableStyle1.ColumnHeadersVisible = true;\n            btnheader.Text = &quot;Remove Header&quot;;\n         }         \n     }     \n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_Sample3#1\">      Private Sub DataGridTableStyle_Sample_Load(ByVal sender As Object, _\n                                 ByVal e As EventArgs) Handles MyBase.Load\n         myDataGridTableStyle1 = New DataGridTableStyle()\n         myHeaderLabel.Text = &quot;Header Status :&quot; + myDataGridTableStyle1.ColumnHeadersVisible.ToString()\n         If myDataGridTableStyle1.ColumnHeadersVisible = True Then\n            btnheader.Text = &quot;Remove Header&quot;\n         Else\n            btnheader.Text = &quot;Add Header&quot;\n         End If\n         AddCustomDataTableStyle()\n      End Sub &#39;DataGridTableStyle_Sample_Load\n\n      Private Sub AddCustomDataTableStyle()\n         AddHandler myDataGridTableStyle1.ColumnHeadersVisibleChanged, AddressOf ColumnHeadersVisibleChanged_Handler\n\n         &#39; Set ColumnheaderVisible property.\n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;\n\n         &#39; Add a GridColumnStyle and set its MappingName\n         Dim myBoolCol = New DataGridBoolColumn()\n         myBoolCol.MappingName = &quot;Current&quot;\n         myBoolCol.HeaderText = &quot;IsCurrent Customer&quot;\n         myBoolCol.Width = 150\n         myDataGridTableStyle1.GridColumnStyles.Add(myBoolCol)\n\n         &#39; Add a second column style.\n         Dim myTextCol = New DataGridTextBoxColumn()\n         myTextCol.MappingName = &quot;custName&quot;\n         myTextCol.HeaderText = &quot;Customer Name&quot;\n         myTextCol.Width = 250\n         myDataGridTableStyle1.GridColumnStyles.Add(myTextCol)\n\n         &#39; Create new ColumnStyle objects\n         Dim cOrderDate = New DataGridTextBoxColumn()\n         cOrderDate.MappingName = &quot;OrderDate&quot;\n         cOrderDate.HeaderText = &quot;Order Date&quot;\n         cOrderDate.Width = 100\n\n         &#39; PropertyDescriptor to create a formatted column.\n         Dim myPropertyDescriptorCollection As PropertyDescriptorCollection = _\n               Me.BindingContext(myDataSet, &quot;Customers.custToOrders&quot;).GetItemProperties()\n\n         &#39; Create a formatted column using a PropertyDescriptor.\n         Dim csOrderAmount = New DataGridTextBoxColumn(myPropertyDescriptorCollection(&quot;OrderAmount&quot;), &quot;c&quot;, True)\n         csOrderAmount.MappingName = &quot;OrderAmount&quot;\n         csOrderAmount.HeaderText = &quot;Total&quot;\n         csOrderAmount.Width = 100\n\n         &#39; Add the DataGridTableStyle instances to GridTableStylesCollection.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1)\n      End Sub &#39;AddCustomDataTableStyle\n\n      Private Sub ColumnHeadersVisibleChanged_Handler(ByVal sender As Object, ByVal e As EventArgs)\n         myHeaderLabel.Text = &quot;Header Status :&quot; + myDataGridTableStyle1.ColumnHeadersVisible.ToString()\n      End Sub &#39;ColumnHeadersVisibleChanged_Handler\n\n      Private Sub btnheader_Click(ByVal sender As Object, ByVal e As EventArgs) Handles btnheader.Click\n         If myDataGridTableStyle1.ColumnHeadersVisible = True Then\n            myDataGridTableStyle1.ColumnHeadersVisible = False\n            btnheader.Text = &quot;Add Header&quot;\n         Else\n            myDataGridTableStyle1.ColumnHeadersVisible = True\n            btnheader.Text = &quot;Remove Header&quot;\n         End If\n      End Sub &#39;btnheader_Click\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_Sample3#1\">   private:\n      void DataGridTableStyle_Sample_Load( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         myDataGridTableStyle1 = gcnew DataGridTableStyle;\n         myHeaderLabel-&gt;Text = String::Concat( &quot;Header Status : &quot;, myDataGridTableStyle1-&gt;ColumnHeadersVisible );\n         if ( myDataGridTableStyle1-&gt;ColumnHeadersVisible == true )\n         {\n            btnheader-&gt;Text = &quot;Remove Header&quot;;\n         }\n         else\n         {\n            btnheader-&gt;Text = &quot;Add Header&quot;;\n         }\n\n         AddCustomDataTableStyle();\n      }\n\n      void AddCustomDataTableStyle()\n      {\n         myDataGridTableStyle1-&gt;ColumnHeadersVisibleChanged += gcnew System::EventHandler( this, &amp;DataGridTableStyle_Sample::ColumnHeadersVisibleChanged_Handler );\n\n         // Set ColumnheaderVisible property.\n         myDataGridTableStyle1-&gt;MappingName = &quot;Customers&quot;;\n\n         // Add a GridColumnStyle and set its MappingName\n         DataGridColumnStyle^ myBoolCol = gcnew DataGridBoolColumn;\n         myBoolCol-&gt;MappingName = &quot;Current&quot;;\n         myBoolCol-&gt;HeaderText = &quot;IsCurrent Customer&quot;;\n         myBoolCol-&gt;Width = 150;\n         myDataGridTableStyle1-&gt;GridColumnStyles-&gt;Add( myBoolCol );\n\n         // Add a second column style.\n         DataGridColumnStyle^ myTextCol = gcnew DataGridTextBoxColumn;\n         myTextCol-&gt;MappingName = &quot;custName&quot;;\n         myTextCol-&gt;HeaderText = &quot;Customer Name&quot;;\n         myTextCol-&gt;Width = 250;\n         myDataGridTableStyle1-&gt;GridColumnStyles-&gt;Add( myTextCol );\n\n         // Create new ColumnStyle objects\n         DataGridColumnStyle^ cOrderDate = gcnew DataGridTextBoxColumn;\n         cOrderDate-&gt;MappingName = &quot;OrderDate&quot;;\n         cOrderDate-&gt;HeaderText = &quot;Order Date&quot;;\n         cOrderDate-&gt;Width = 100;\n\n         // PropertyDescriptor to create a formatted column.\n         PropertyDescriptorCollection^ myPropertyDescriptorCollection =\n            this-&gt;BindingContext[myDataSet, &quot;Customers::custToOrders&quot;]-&gt;GetItemProperties();\n\n         // Create a formatted column using a PropertyDescriptor.\n         DataGridColumnStyle^ csOrderAmount =\n            gcnew DataGridTextBoxColumn( myPropertyDescriptorCollection[ &quot;OrderAmount&quot; ],&quot;c&quot;,true );\n         csOrderAmount-&gt;MappingName = &quot;OrderAmount&quot;;\n         csOrderAmount-&gt;HeaderText = &quot;Total&quot;;\n         csOrderAmount-&gt;Width = 100;\n\n         // Add the DataGridTableStyle instances to GridTableStylesCollection.\n         myDataGrid-&gt;TableStyles-&gt;Add( myDataGridTableStyle1 );\n      }\n\n      void ColumnHeadersVisibleChanged_Handler( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         myHeaderLabel-&gt;Text = String::Concat( &quot;Header Status : &quot;, myDataGridTableStyle1-&gt;ColumnHeadersVisible );\n      }\n\n      void btnheader_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         if ( myDataGridTableStyle1-&gt;ColumnHeadersVisible == true )\n         {\n            myDataGridTableStyle1-&gt;ColumnHeadersVisible = false;\n            btnheader-&gt;Text = &quot;Add Header&quot;;\n         }\n         else\n         {\n            myDataGridTableStyle1-&gt;ColumnHeadersVisible = true;\n            btnheader-&gt;Text = &quot;Remove Header&quot;;\n         }\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_DataGrid\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_DataGrid_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataGrid</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control for the drawn table.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Windows.Forms.DataGrid DataGrid { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control that displays the table.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">System.Windows.Forms.DataGrid</a> control displays data in the form of a grid. The <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> is an object that represents the drawn grid. The <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">System.Windows.Forms.DataGrid</a> property returns a reference to the control that is displaying the grid.  </p>\n<p> The DataGrid property is set when a <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> is added to a <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">System.Windows.Forms.DataGrid</a> control&#39;s <a class=\"xref\" href=\"system.windows.forms.gridtablestylescollection\" data-linktype=\"relative-path\">GridTableStylesCollection</a>. You should not try to set this property unless you are overriding it and creating a designer for a user control that incorporates the <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example prints the <a class=\"xref\" href=\"system.windows.forms.datagrid#System_Windows_Forms_DataGrid_CurrentCell_\" data-linktype=\"relative-path\">CurrentCell</a> of the <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">System.Windows.Forms.DataGrid</a> displaying a <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic DataGridTableStyle.DataGrid Example#1\">private void GetSelectedIndex(DataGridTableStyle myGridTable)\n{\n   /* Get the name of the DataGrid of the DataGridTable \n      passed as an argument. */\n   Console.WriteLine(myGridTable.DataGrid.CurrentCell.ToString());\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic DataGridTableStyle.DataGrid Example#1\">private:\n   void GetSelectedIndex( DataGridTableStyle^ myGridTable )\n   {\n      /* Get the name of the DataGrid of the DataGridTable \n         passed as an argument. */\n      Console::WriteLine( myGridTable-&gt;DataGrid-&gt;CurrentCell.ToString() );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic DataGridTableStyle.DataGrid Example#1\">    Private Sub GetSelectedIndex(myGridTable As DataGridTableStyle)\n        &#39; Get the name of the DataGrid of the DataGridTable \n        &#39; passed as an argument. \n        Console.WriteLine(myGridTable.DataGrid.CurrentCell.ToString())\n    End Sub &#39;GetSelectedIndex\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ForeColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ForeColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ForeColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the foreground color of the grid table.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Color ForeColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> that represents the foreground color of the grid table.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridTableStyle_ForeColor#1\">      private void Create_Table()\n      {\n         // Create a DataSet.\n         myDataSet = new DataSet(&quot;myDataSet&quot;);\n         // Create DataTable.\n         DataTable myCustomerTable = new DataTable(&quot;Customers&quot;);\n         // Create two columns, and add to the table.\n         DataColumn CustID = new DataColumn(&quot;CustID&quot;, typeof(int));\n         DataColumn CustName = new DataColumn(&quot;CustName&quot;);\n         myCustomerTable.Columns.Add(CustID);\n         myCustomerTable.Columns.Add(CustName);\n         DataRow newRow1;\n         // Create three customers in the Customers Table.\n         for(int i = 1; i &lt; 3; i++)\n         {\n            newRow1 = myCustomerTable.NewRow();\n            newRow1[&quot;custID&quot;] = i;\n            // Add row to the Customers table.\n            myCustomerTable.Rows.Add(newRow1);\n         }\n         // Give each customer a distinct name.\n         myCustomerTable.Rows[0][&quot;custName&quot;] = &quot;Alpha&quot;;\n         myCustomerTable.Rows[1][&quot;custName&quot;] = &quot;Beta&quot;;\n         // Add table to DataSet.\n         myDataSet.Tables.Add(myCustomerTable);\n         dataGrid1.SetDataBinding(myDataSet,&quot;Customers&quot;);\n         myTableStyle = new DataGridTableStyle();\n         myTableStyle.MappingName = &quot;Customers&quot;;\n         myTableStyle.ForeColor  = Color.DarkMagenta;\n         dataGrid1.TableStyles.Add(myTableStyle);\n      }\n\n      // Set table&#39;s forecolor.\n      private void OnForeColor_Click(object sender, System.EventArgs e)\n      {\n         dataGrid1.TableStyles.Clear();\n         switch(myComboBox.SelectedItem.ToString())\n         {\n            case &quot;Green&quot;:\n               myTableStyle.ForeColor = Color.Green;\n               break;\n            case &quot;Red&quot;:\n               myTableStyle.ForeColor = Color.Red;\n               break;\n            case &quot;Violet&quot;:\n               myTableStyle.ForeColor = Color.Violet;\n               break;\n         }\n         dataGrid1.TableStyles.Add(myTableStyle);\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_ForeColor#1\">        Private Sub Create_Table()\n            &#39; Create a DataSet.\n            myDataSet = New DataSet(&quot;myDataSet&quot;)\n            &#39; Create DataTable.\n            Dim myCustomerTable As New DataTable(&quot;Customers&quot;)\n            &#39; Create two columns, and add to the table.\n            Dim CustID As New DataColumn(&quot;CustID&quot;, GetType(Integer))\n            Dim CustName As New DataColumn(&quot;CustName&quot;)\n            myCustomerTable.Columns.Add(CustID)\n            myCustomerTable.Columns.Add(CustName)\n            Dim newRow1 As DataRow\n            &#39; Create three customers in the Customers Table.\n            Dim i As Integer\n            For i = 1 To 2\n                newRow1 = myCustomerTable.NewRow()\n                newRow1(&quot;custID&quot;) = i\n                &#39; Add row to the Customers table.\n                myCustomerTable.Rows.Add(newRow1)\n            Next i\n            &#39; Give each customer a distinct name.\n            myCustomerTable.Rows(0)(&quot;custName&quot;) = &quot;Alpha&quot;\n            myCustomerTable.Rows(1)(&quot;custName&quot;) = &quot;Beta&quot;\n            &#39; Add table to DataSet.\n            myDataSet.Tables.Add(myCustomerTable)\n            dataGrid1.SetDataBinding(myDataSet, &quot;Customers&quot;)\n            myTableStyle = New DataGridTableStyle()\n            myTableStyle.MappingName = &quot;Customers&quot;\n            myTableStyle.ForeColor = Color.DarkMagenta\n            dataGrid1.TableStyles.Add(myTableStyle)\n        End Sub &#39;Create_Table\n\n        &#39; Set table&#39;s forecolor.\n        Private Sub OnForeColor_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles button2.Click\n            dataGrid1.TableStyles.Clear()\n            Select Case myComboBox.SelectedItem.ToString()\n                Case &quot;Green&quot;\n                    myTableStyle.ForeColor = Color.Green\n                Case &quot;Red&quot;\n                    myTableStyle.ForeColor = Color.Red\n                Case &quot;Violet&quot;\n                    myTableStyle.ForeColor = Color.Violet\n            End Select\n            dataGrid1.TableStyles.Add(myTableStyle)\n        End Sub &#39;OnForeColor_Click\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_ForeColor#1\">   private:\n      void Create_Table()\n      {\n         // Create a DataSet.\n         myDataSet = gcnew DataSet( &quot;myDataSet&quot; );\n\n         // Create DataTable.\n         DataTable^ myCustomerTable = gcnew DataTable( &quot;Customers&quot; );\n\n         // Create two columns, and add to the table.\n         DataColumn^ CustID = gcnew DataColumn( &quot;CustID&quot;,int::typeid );\n         DataColumn^ CustName = gcnew DataColumn( &quot;CustName&quot; );\n         myCustomerTable-&gt;Columns-&gt;Add( CustID );\n         myCustomerTable-&gt;Columns-&gt;Add( CustName );\n         DataRow^ newRow1;\n\n         // Create three customers in the Customers Table.\n         for ( int i = 1; i &lt; 3; i++ )\n         {\n            newRow1 = myCustomerTable-&gt;NewRow();\n            newRow1[ &quot;custID&quot; ] = i;\n\n            // Add row to the Customers table.\n            myCustomerTable-&gt;Rows-&gt;Add( newRow1 );\n         }\n         myCustomerTable-&gt;Rows[ 0 ][ &quot;custName&quot; ] = &quot;Alpha&quot;;\n         myCustomerTable-&gt;Rows[ 1 ][ &quot;custName&quot; ] = &quot;Beta&quot;;\n\n         // Add table to DataSet.\n         myDataSet-&gt;Tables-&gt;Add( myCustomerTable );\n         dataGrid1-&gt;SetDataBinding( myDataSet, &quot;Customers&quot; );\n         myTableStyle = gcnew DataGridTableStyle;\n         myTableStyle-&gt;MappingName = &quot;Customers&quot;;\n         myTableStyle-&gt;ForeColor = Color::DarkMagenta;\n         dataGrid1-&gt;TableStyles-&gt;Add( myTableStyle );\n      }\n\n      // Set table&#39;s forecolor.\n      void OnForeColor_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n      {\n         dataGrid1-&gt;TableStyles-&gt;Clear();\n         String^ str = dynamic_cast&lt;String^&gt;(myComboBox-&gt;SelectedItem);\n         if ( str-&gt;Equals( &quot;Green&quot; ) )\n                  myTableStyle-&gt;ForeColor = Color::Green;\n         else\n         if ( str-&gt;Equals( &quot;Red&quot; ) )\n                  myTableStyle-&gt;ForeColor = Color::Red;\n         else\n         if ( str-&gt;Equals( &quot;Violet&quot; ) )\n                  myTableStyle-&gt;ForeColor = Color::Violet;\n\n         dataGrid1-&gt;TableStyles-&gt;Add( myTableStyle );\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_GridColumnStyles\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_GridColumnStyles_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GridColumnStyles</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of columns drawn for this table.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Windows.Forms.GridColumnStylesCollection GridColumnStyles { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.gridcolumnstylescollection\" data-linktype=\"relative-path\">GridColumnStylesCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.gridcolumnstylescollection\" data-linktype=\"relative-path\">GridColumnStylesCollection</a> that contains all <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a> objects for the table.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.gridcolumnstylescollection\" data-linktype=\"relative-path\">GridColumnStylesCollection</a> returned by the GridColumnStyles property allows you to create a customized set of column styles. For each <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> in a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>, set the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_MappingName_\" data-linktype=\"relative-path\">MappingName</a> of a <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a> to the <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_ColumnName_\" data-linktype=\"relative-path\">ColumnName</a>. That column style will automatically be used when this <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> is displayed.  </p>\n<p> If you create a <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> without adding any <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a> objects to the <a class=\"xref\" href=\"system.windows.forms.gridcolumnstylescollection\" data-linktype=\"relative-path\">GridColumnStylesCollection</a>, a collection of <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a> objects will be created automatically when a <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> with a valid <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_MappingName_\" data-linktype=\"relative-path\">MappingName</a> is added to the <a class=\"xref\" href=\"system.windows.forms.gridtablestylescollection\" data-linktype=\"relative-path\">GridTableStylesCollection</a>. An exception will be thrown if you attempt to add <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a> objects with duplicate <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle#System_Windows_Forms_DataGridColumnStyle_MappingName_\" data-linktype=\"relative-path\">MappingName</a> values to the collection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example gets the <a class=\"xref\" href=\"system.windows.forms.gridcolumnstylescollection\" data-linktype=\"relative-path\">GridColumnStylesCollection</a> of a <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> and prints each object&#39;s header.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic DataGridTableStyle.GridColumnStyles Example#1\">private void WriteMappingNames(){\n    foreach(DataGridTableStyle dgt in myDataGrid.TableStyles)\n    {\n        Console.WriteLine(dgt.MappingName);\n        foreach(DataGridColumnStyle dgc in dgt.GridColumnStyles)\n        {\n            Console.WriteLine(dgc.MappingName);\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic DataGridTableStyle.GridColumnStyles Example#1\">private:\n   void WriteMappingNames()\n   {\n      for each ( DataGridTableStyle^ dgt in myDataGrid-&gt;TableStyles )\n      {\n         Console::WriteLine( dgt-&gt;MappingName );\n         for each ( DataGridColumnStyle^ dgc in dgt-&gt;GridColumnStyles )\n         {\n            Console::WriteLine( dgc-&gt;MappingName );\n         }\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic DataGridTableStyle.GridColumnStyles Example#1\">    Private Sub WriteMappingNames()\n        Dim dgt As DataGridTableStyle\n        For Each dgt In  myDataGrid.TableStyles\n            Console.WriteLine(dgt.MappingName)\n            Dim dgc As DataGridColumnStyle\n            For Each dgc In  dgt.GridColumnStyles\n                Console.WriteLine(dgc.MappingName)\n            Next dgc\n        Next dgt\n    End Sub &#39;WriteMappingNames\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_GridLineColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_GridLineColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GridLineColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the color of grid lines.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Color GridLineColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> that represents the grid line color.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridTableStyle_sample5#2\">      private void AddCustomDataTableStyle()\n      {\n         myDataGridTableStyle1 = new DataGridTableStyle();\n        \n         // EventHandlers          \n         myDataGridTableStyle1.GridLineColorChanged += new System.EventHandler(GridLineColorChanged_Handler);         \n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;;\n\n         // Set other properties.\n         myDataGridTableStyle1.AlternatingBackColor=System.Drawing.Color.Gold;\n         myDataGridTableStyle1.BackColor = System.Drawing.Color.White;\n         myDataGridTableStyle1.GridLineStyle=System.Windows.Forms.DataGridLineStyle.Solid;\n         myDataGridTableStyle1.GridLineColor=Color.Red;\n\n         // Set the HeaderText and Width properties. \n         DataGridColumnStyle myBoolCol = new DataGridBoolColumn();\n         myBoolCol.MappingName = &quot;Current&quot;;\n         myBoolCol.HeaderText = &quot;IsCurrent Customer&quot;;\n         myBoolCol.Width = 150;\n         myDataGridTableStyle1.GridColumnStyles.Add(myBoolCol);\n      \n         // Add a second column style.\n         DataGridColumnStyle myTextCol = new DataGridTextBoxColumn();\n         myTextCol.MappingName = &quot;custName&quot;;\n         myTextCol.HeaderText = &quot;Customer Name&quot;;\n         myTextCol.Width = 250;\n         myDataGridTableStyle1.GridColumnStyles.Add(myTextCol);\n\n         // Create new ColumnStyle objects\n         DataGridColumnStyle cOrderDate = new DataGridTextBoxColumn();\n         cOrderDate.MappingName = &quot;OrderDate&quot;;\n         cOrderDate.HeaderText = &quot;Order Date&quot;;\n         cOrderDate.Width = 100;\n\n         // Use a PropertyDescriptor to create a formatted column.\n         PropertyDescriptorCollection myPropertyDescriptorCollection = BindingContext\n            [myDataSet, &quot;Customers.custToOrders&quot;].GetItemProperties();\n \n         // Create a formatted column using a PropertyDescriptor.\n         DataGridColumnStyle csOrderAmount = \n            new DataGridTextBoxColumn(myPropertyDescriptorCollection[&quot;OrderAmount&quot;], &quot;c&quot;, true);\n         csOrderAmount.MappingName = &quot;OrderAmount&quot;;\n         csOrderAmount.HeaderText = &quot;Total&quot;;\n         csOrderAmount.Width = 100;\n              \n         // Add the DataGridTableStyle instances to the GridTableStylesCollection.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1);      \n      }      \n      private void GridLineColorChanged_Handler(object sender,EventArgs e)\n      {\n         MessageBox.Show(&quot;GridLineColor Changed&quot;, &quot;DataGridTableStyle&quot;);\n      }   \n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_sample5#2\">      Private Sub AddCustomDataTableStyle()\n         myDataGridTableStyle1 = New DataGridTableStyle()\n\n         &#39; EventHandlers\n         AddHandler myDataGridTableStyle1.GridLineColorChanged, AddressOf GridLineColorChanged_Handler\n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;\n\n         &#39; Set other properties.\n         myDataGridTableStyle1.AlternatingBackColor = System.Drawing.Color.Gold\n         myDataGridTableStyle1.BackColor = System.Drawing.Color.White\n         myDataGridTableStyle1.GridLineStyle = System.Windows.Forms.DataGridLineStyle.Solid\n         myDataGridTableStyle1.GridLineColor = Color.Red\n\n         &#39; Set the HeaderText and Width properties.\n         Dim myBoolCol = New DataGridBoolColumn()\n         myBoolCol.MappingName = &quot;Current&quot;\n         myBoolCol.HeaderText = &quot;IsCurrent Customer&quot;\n         myBoolCol.Width = 150\n         myDataGridTableStyle1.GridColumnStyles.Add(myBoolCol)\n\n         &#39; Add a second column style.\n         Dim myTextCol = New DataGridTextBoxColumn()\n         myTextCol.MappingName = &quot;custName&quot;\n         myTextCol.HeaderText = &quot;Customer Name&quot;\n         myTextCol.Width = 250\n         myDataGridTableStyle1.GridColumnStyles.Add(myTextCol)\n\n         &#39; Create new ColumnStyle objects\n         Dim cOrderDate = New DataGridTextBoxColumn()\n         cOrderDate.MappingName = &quot;OrderDate&quot;\n         cOrderDate.HeaderText = &quot;Order Date&quot;\n         cOrderDate.Width = 100\n\n         &#39; Use a PropertyDescriptor to create a formatted column.\n         Dim myPropertyDescriptorCollection As PropertyDescriptorCollection = _\n                        BindingContext(myDataSet, &quot;Customers.custToOrders&quot;).GetItemProperties()\n\n         &#39; Create a formatted column using a PropertyDescriptor.\n         Dim csOrderAmount = New DataGridTextBoxColumn(myPropertyDescriptorCollection( _\n                                                      &quot;OrderAmount&quot;), &quot;c&quot;, True)\n         csOrderAmount.MappingName = &quot;OrderAmount&quot;\n         csOrderAmount.HeaderText = &quot;Total&quot;\n         csOrderAmount.Width = 100\n\n         &#39; Add the DataGridTableStyle instances to the GridTableStylesCollection.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1)\n      End Sub &#39;AddCustomDataTableStyle\n\n      Private Sub GridLineColorChanged_Handler(ByVal sender As Object, ByVal e As EventArgs)\n         MessageBox.Show(&quot;GridLineColor Changed&quot;, &quot;DataGridTableStyle&quot;)\n      End Sub &#39;GridLineColorChanged_Handler\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_sample5#2\">private:\n   void AddCustomDataTableStyle()\n   {\n      myDataGridTableStyle1 = gcnew DataGridTableStyle;\n\n      // EventHandlers\n      myDataGridTableStyle1-&gt;GridLineColorChanged += gcnew System::EventHandler( this, &amp;DataGridTableStyle_Sample::GridLineColorChanged_Handler );\n      myDataGridTableStyle1-&gt;MappingName = &quot;Customers&quot;;\n\n      // Set other properties.\n      myDataGridTableStyle1-&gt;AlternatingBackColor = System::Drawing::Color::Gold;\n      myDataGridTableStyle1-&gt;BackColor = System::Drawing::Color::White;\n      myDataGridTableStyle1-&gt;GridLineStyle = System::Windows::Forms::DataGridLineStyle::Solid;\n      myDataGridTableStyle1-&gt;GridLineColor = Color::Red;\n\n      // Set the HeaderText and Width properties.\n      DataGridColumnStyle^ myBoolCol = gcnew DataGridBoolColumn;\n      myBoolCol-&gt;MappingName = &quot;Current&quot;;\n      myBoolCol-&gt;HeaderText = &quot;IsCurrent Customer&quot;;\n      myBoolCol-&gt;Width = 150;\n      myDataGridTableStyle1-&gt;GridColumnStyles-&gt;Add( myBoolCol );\n\n      // Add a second column style.\n      DataGridColumnStyle^ myTextCol = gcnew DataGridTextBoxColumn;\n      myTextCol-&gt;MappingName = &quot;custName&quot;;\n      myTextCol-&gt;HeaderText = &quot;Customer Name&quot;;\n      myTextCol-&gt;Width = 250;\n      myDataGridTableStyle1-&gt;GridColumnStyles-&gt;Add( myTextCol );\n\n      // Create new ColumnStyle objects\n      DataGridColumnStyle^ cOrderDate = gcnew DataGridTextBoxColumn;\n      cOrderDate-&gt;MappingName = &quot;OrderDate&quot;;\n      cOrderDate-&gt;HeaderText = &quot;Order Date&quot;;\n      cOrderDate-&gt;Width = 100;\n\n      // Use a PropertyDescriptor to create a formatted column.\n      PropertyDescriptorCollection^ myPropertyDescriptorCollection =\n         BindingContext[myDataSet, &quot;Customers::custToOrders&quot;]-&gt;GetItemProperties();\n\n      // Create a formatted column using a PropertyDescriptor.\n      DataGridColumnStyle^ csOrderAmount = gcnew DataGridTextBoxColumn( myPropertyDescriptorCollection[ &quot;OrderAmount&quot; ],&quot;c&quot;,true );\n      csOrderAmount-&gt;MappingName = &quot;OrderAmount&quot;;\n      csOrderAmount-&gt;HeaderText = &quot;Total&quot;;\n      csOrderAmount-&gt;Width = 100;\n\n      // Add the DataGridTableStyle instances to the GridTableStylesCollection.\n      myDataGrid-&gt;TableStyles-&gt;Add( myDataGridTableStyle1 );\n   }\n\n   void GridLineColorChanged_Handler( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      MessageBox::Show( &quot;GridLineColor Changed&quot;, &quot;DataGridTableStyle&quot; );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_GridLineStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_GridLineStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GridLineStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the style of grid lines.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridLineStyle GridLineStyle { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridlinestyle\" data-linktype=\"relative-path\">DataGridLineStyle</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.datagridlinestyle\" data-linktype=\"relative-path\">DataGridLineStyle</a> values. The default is <code>DataGridLineStyle.Solid</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_HeaderBackColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_HeaderBackColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HeaderBackColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the background color of headers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Color HeaderBackColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> that represents the background color of headers.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_Header_4#4\">   private:\n      void Create_Table()\n      {\n         // Create DataSet.\n         myDataSet = gcnew DataSet( &quot;myDataSet&quot; );\n\n         // Create DataTable.\n         DataTable^ myCustomerTable = gcnew DataTable( &quot;Customers&quot; );\n\n         // Create two columns, and add them to the table.\n         DataColumn^ CustID = gcnew DataColumn( &quot;CustID&quot;,int::typeid );\n         DataColumn^ CustName = gcnew DataColumn( &quot;CustName&quot; );\n         myCustomerTable-&gt;Columns-&gt;Add( CustID );\n         myCustomerTable-&gt;Columns-&gt;Add( CustName );\n\n         // Add table to DataSet.\n         myDataSet-&gt;Tables-&gt;Add( myCustomerTable );\n         dataGrid1-&gt;SetDataBinding( myDataSet, &quot;Customers&quot; );\n         myTableStyle = gcnew DataGridTableStyle;\n         myTableStyle-&gt;MappingName = &quot;Customers&quot;;\n         myTableStyle-&gt;HeaderBackColorChanged += gcnew System::EventHandler( this, &amp;Form1::HeaderBackColorChangedHandler );\n         myTableStyle-&gt;HeaderForeColorChanged += gcnew System::EventHandler( this, &amp;Form1::HeaderForeColorChangedHandler );\n      }\n\n      // Change header background color.\n      void OnHeaderBackColor_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n      {\n         dataGrid1-&gt;TableStyles-&gt;Clear();\n         String^ str = dynamic_cast&lt;String^&gt;(comboBox1-&gt;SelectedItem);\n         if ( str-&gt;Equals( &quot;Red&quot; ) )\n                  myTableStyle-&gt;ForeColor = Color::Red;\n         else\n         if ( str-&gt;Equals( &quot;Yellow&quot; ) )\n                  myTableStyle-&gt;ForeColor = Color::Yellow;\n         else\n         if ( str-&gt;Equals( &quot;Blue&quot; ) )\n                  myTableStyle-&gt;ForeColor = Color::Blue;\n\n         myTableStyle-&gt;AlternatingBackColor = Color::LightGray;\n         dataGrid1-&gt;TableStyles-&gt;Add( myTableStyle );\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridTableStyle_Header_4#4\">      private void Create_Table()\n      {\n         // Create DataSet.\n         myDataSet = new DataSet(&quot;myDataSet&quot;);\n         // Create DataTable.\n         DataTable myCustomerTable = new DataTable(&quot;Customers&quot;);\n         // Create two columns, and add them to the table.\n         DataColumn CustID = new DataColumn(&quot;CustID&quot;, typeof(int));\n         DataColumn CustName = new DataColumn(&quot;CustName&quot;);\n         myCustomerTable.Columns.Add(CustID);\n         myCustomerTable.Columns.Add(CustName);\n         // Add table to DataSet.\n         myDataSet.Tables.Add(myCustomerTable);\n         dataGrid1.SetDataBinding(myDataSet,&quot;Customers&quot;);\n         myTableStyle = new DataGridTableStyle();\n         myTableStyle.MappingName = &quot;Customers&quot;;\n         myTableStyle.HeaderBackColorChanged += \n            new System.EventHandler(HeaderBackColorChangedHandler); \n         myTableStyle.HeaderForeColorChanged +=\n            new System.EventHandler(HeaderForeColorChangedHandler); \n      }\n      \n      // Change header background color.\n      private void OnHeaderBackColor_Click(object sender, System.EventArgs e)\n      {\n         dataGrid1.TableStyles.Clear ();\n         switch(comboBox1.SelectedItem.ToString())\n         {\n            case &quot;Red&quot;:\n               myTableStyle.HeaderBackColor = Color.Red;\n               break;\n            case &quot;Yellow&quot;:\n               myTableStyle.HeaderBackColor = Color.Yellow ;\n               break;\n            case &quot;Blue&quot;:\n               myTableStyle.HeaderBackColor = Color.Blue ;\n               break;\n         }\n         myTableStyle.AlternatingBackColor = Color.LightGray;\n         dataGrid1.TableStyles.Add(myTableStyle);\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_Header_4#4\">      Private Sub Create_Table()\n         &#39; Create DataSet.\n         myDataSet = New DataSet(&quot;myDataSet&quot;)\n         &#39; Create DataTable.\n         Dim myCustomerTable As New DataTable(&quot;Customers&quot;)\n         &#39; Create two columns, and add them to the table.\n         Dim CustID As New DataColumn(&quot;CustID&quot;, GetType(Integer))\n         Dim CustName As New DataColumn(&quot;CustName&quot;)\n         myCustomerTable.Columns.Add(CustID)\n         myCustomerTable.Columns.Add(CustName)\n         &#39; Add table to DataSet.\n         myDataSet.Tables.Add(myCustomerTable)\n         dataGrid1.SetDataBinding(myDataSet, &quot;Customers&quot;)\n         myTableStyle = New DataGridTableStyle()\n         myTableStyle.MappingName = &quot;Customers&quot;\n         AddHandler myTableStyle.HeaderBackColorChanged, AddressOf HeaderBackColorChangedHandler\n         AddHandler myTableStyle.HeaderForeColorChanged, AddressOf HeaderForeColorChangedHandler\n      End Sub &#39;Create_Table\n      \n      \n      &#39; Change header background color.\n      Private Sub OnHeaderBackColor_Click(sender As Object, e As System.EventArgs) Handles button1.Click\n         dataGrid1.TableStyles.Clear()\n         Select Case comboBox1.SelectedItem.ToString()\n            Case &quot;Red&quot;\n               myTableStyle.HeaderBackColor = Color.Red\n            Case &quot;Yellow&quot;\n               myTableStyle.HeaderBackColor = Color.Yellow\n            Case &quot;Blue&quot;\n               myTableStyle.HeaderBackColor = Color.Blue\n         End Select\n         myTableStyle.AlternatingBackColor = Color.LightGray\n         dataGrid1.TableStyles.Add(myTableStyle)\n      End Sub &#39;OnHeaderBackColor_Click\n      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_HeaderFont\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_HeaderFont_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HeaderFont</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the font used for header captions.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Font HeaderFont { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> used for captions.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To set header caption text, use the <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle#System_Windows_Forms_DataGridColumnStyle_HeaderText_\" data-linktype=\"relative-path\">HeaderText</a> property of the <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridTableStyle_Sample#2\">      private void AddCustomDataTableStyle()\n      {\n         myDataGridTableStyle1 = new DataGridTableStyle();\n         myDataGridTableStyle2 = new DataGridTableStyle();\n\n         MessageBox.Show(&quot;LinkColor Before : &quot;\n            +myDataGridTableStyle1.LinkColor);\n         MessageBox.Show(&quot;HeaderFont Before : &quot;\n            +myDataGridTableStyle1.HeaderFont);\n         \n         myDataGridTableStyle1.LinkColorChanged +=\n            new System.EventHandler(LinkColorChanged_Handler);\n         myDataGridTableStyle1.HeaderFontChanged \n            += new System.EventHandler(HeaderFontChanged_Handler);\n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;;\n\n         // Set other properties.\n         myDataGridTableStyle1.AlternatingBackColor = Color.LightGray;\n         myDataGridTableStyle1.LinkColor = Color.Red;         \n         myDataGridTableStyle1.HeaderFont = \n            new System.Drawing.Font(&quot;Verdana&quot;,\n               8.25F,\n               System.Drawing.FontStyle.Bold, \n               System.Drawing.GraphicsUnit.Point,\n               ((System.Byte)(0)));\n\n         // Add a GridColumnStyle and set its MappingName.             \n         DataGridColumnStyle myBoolCol = new DataGridBoolColumn();\n         myBoolCol.MappingName = &quot;Current&quot;;\n         myBoolCol.HeaderText = &quot;IsCurrent Customer&quot;;\n         myBoolCol.Width = 150;\n         myDataGridTableStyle1.GridColumnStyles.Add(myBoolCol);\n      \n         // Add a second column style.\n         DataGridColumnStyle myTextCol = new DataGridTextBoxColumn();\n         myTextCol.MappingName = &quot;custName&quot;;\n         myTextCol.HeaderText = &quot;Customer Name&quot;;\n         myTextCol.Width = 250;\n         myDataGridTableStyle1.GridColumnStyles.Add(myTextCol);\n\n         // Create new ColumnStyle objects\n         DataGridColumnStyle cOrderDate = new DataGridTextBoxColumn();\n         cOrderDate.MappingName = &quot;OrderDate&quot;;\n         cOrderDate.HeaderText = &quot;Order Date&quot;;\n         cOrderDate.Width = 100;\n\n         // PropertyDescriptor to create a formatted column.\n         PropertyDescriptorCollection myPropertyDescriptorCollection = this.BindingContext\n            [myDataSet, &quot;Customers.custToOrders&quot;].GetItemProperties(); \n         \n         DataGridColumnStyle csOrderAmount = \n            new DataGridTextBoxColumn(myPropertyDescriptorCollection[&quot;OrderAmount&quot;], &quot;c&quot;, true);\n         csOrderAmount.MappingName = &quot;OrderAmount&quot;;\n         csOrderAmount.HeaderText = &quot;Total&quot;;\n         csOrderAmount.Width = 100;\n              \n         // Add the DataGridTableStyle instances to GridTableStylesCollection.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1);\n      \n      }\n      private void LinkColorChanged_Handler(object sender,EventArgs e)\n      {         \n        MessageBox.Show(&quot;LinkColor changed to &#39;RED&#39;&quot;, &quot;DataGridTableStyle&quot;);\n      }\n\n      private void HeaderFontChanged_Handler(object sender,EventArgs e)\n      {                  \n         MessageBox.Show(&quot;HeaderFont changed to &#39;VERDANA&#39;&quot;,\n            &quot;DataGridTableStyle&quot;);\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_Sample#2\">      Private Sub AddCustomDataTableStyle()\n         myDataGridTableStyle1 = New DataGridTableStyle()\n         myDataGridTableStyle2 = New DataGridTableStyle()\n\n         MessageBox.Show(&quot;LinkColor Before : &quot; &amp; myDataGridTableStyle1.LinkColor.ToString)\n         MessageBox.Show(&quot;HeaderFont Before : &quot; &amp; myDataGridTableStyle1.HeaderFont.ToString)\n\n         AddHandler myDataGridTableStyle1.LinkColorChanged, AddressOf LinkColorChanged_Handler\n         AddHandler myDataGridTableStyle1.HeaderFontChanged, AddressOf HeaderFontChanged_Handler\n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;\n\n         &#39; Set other properties.\n         myDataGridTableStyle1.AlternatingBackColor = Color.LightGray\n         myDataGridTableStyle1.LinkColor = Color.Red\n         myDataGridTableStyle1.HeaderFont = New System.Drawing.Font _\n                  (&quot;Verdana&quot;, 8.25F, System.Drawing.FontStyle.Bold, _\n                   System.Drawing.GraphicsUnit.Point, CType(0, System.Byte))\n\n         &#39; Add a GridColumnStyle and set its MappingName.\n         Dim myBoolCol = New DataGridBoolColumn()\n         myBoolCol.MappingName = &quot;Current&quot;\n         myBoolCol.HeaderText = &quot;IsCurrent Customer&quot;\n         myBoolCol.Width = 150\n         myDataGridTableStyle1.GridColumnStyles.Add(myBoolCol)\n\n         &#39; Add a second column style.\n         Dim myTextCol = New DataGridTextBoxColumn()\n         myTextCol.MappingName = &quot;custName&quot;\n         myTextCol.HeaderText = &quot;Customer Name&quot;\n         myTextCol.Width = 250\n         myDataGridTableStyle1.GridColumnStyles.Add(myTextCol)\n\n         &#39; Create new ColumnStyle objects\n         Dim cOrderDate = New DataGridTextBoxColumn()\n         cOrderDate.MappingName = &quot;OrderDate&quot;\n         cOrderDate.HeaderText = &quot;Order Date&quot;\n         cOrderDate.Width = 100\n\n         &#39; PropertyDescriptor to create a formatted column.\n         Dim myPropertyDescriptorCollection As PropertyDescriptorCollection = _\n                  Me.BindingContext(myDataSet, &quot;Customers.custToOrders&quot;).GetItemProperties()\n\n         Dim csOrderAmount = New DataGridTextBoxColumn(myPropertyDescriptorCollection _\n                                 (&quot;OrderAmount&quot;), &quot;c&quot;, True)\n         csOrderAmount.MappingName = &quot;OrderAmount&quot;\n         csOrderAmount.HeaderText = &quot;Total&quot;\n         csOrderAmount.Width = 100\n\n         &#39; Add the DataGridTableStyle instances to GridTableStylesCollection.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1)\n      End Sub &#39;AddCustomDataTableStyle\n\n      Private Sub LinkColorChanged_Handler(ByVal sender As Object, ByVal e As EventArgs)\n         MessageBox.Show(&quot;LinkColor changed to &#39;RED&#39;&quot;, &quot;DataGridTableStyle&quot;)\n      End Sub &#39;LinkColorChanged_Handler\n\n\n      Private Sub HeaderFontChanged_Handler(ByVal sender As Object, ByVal e As EventArgs)\n         MessageBox.Show(&quot;HeaderFont changed to &#39;VERDANA&#39;&quot;, &quot;DataGridTableStyle&quot;)\n      End Sub &#39;HeaderFontChanged_Handler\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_Sample#2\">   private:\n      void AddCustomDataTableStyle()\n      {\n         myDataGridTableStyle1 = gcnew DataGridTableStyle;\n         myDataGridTableStyle2 = gcnew DataGridTableStyle;\n         MessageBox::Show( String::Concat( &quot;LinkColor Before : &quot;, myDataGridTableStyle1-&gt;LinkColor ) );\n         MessageBox::Show( String::Concat( &quot;HeaderFont Before : &quot;, myDataGridTableStyle1-&gt;HeaderFont ) );\n         myDataGridTableStyle1-&gt;LinkColorChanged += gcnew System::EventHandler( this, &amp;DataGridTableStyle_Sample::LinkColorChanged_Handler );\n         myDataGridTableStyle1-&gt;HeaderFontChanged += gcnew System::EventHandler( this, &amp;DataGridTableStyle_Sample::HeaderFontChanged_Handler );\n         myDataGridTableStyle1-&gt;MappingName = &quot;Customers&quot;;\n\n         // Set other properties.\n         myDataGridTableStyle1-&gt;AlternatingBackColor = Color::LightGray;\n         myDataGridTableStyle1-&gt;LinkColor = Color::Red;\n         myDataGridTableStyle1-&gt;HeaderFont = gcnew System::Drawing::Font( &quot;Verdana&quot;,8.25F,System::Drawing::FontStyle::Bold,System::Drawing::GraphicsUnit::Point,((System::Byte)(0)) );\n\n         // Add a GridColumnStyle and set its MappingName.\n         DataGridColumnStyle^ myBoolCol = gcnew DataGridBoolColumn;\n         myBoolCol-&gt;MappingName = &quot;Current&quot;;\n         myBoolCol-&gt;HeaderText = &quot;IsCurrent Customer&quot;;\n         myBoolCol-&gt;Width = 150;\n         myDataGridTableStyle1-&gt;GridColumnStyles-&gt;Add( myBoolCol );\n\n         // Add a second column style.\n         DataGridColumnStyle^ myTextCol = gcnew DataGridTextBoxColumn;\n         myTextCol-&gt;MappingName = &quot;custName&quot;;\n         myTextCol-&gt;HeaderText = &quot;Customer Name&quot;;\n         myTextCol-&gt;Width = 250;\n         myDataGridTableStyle1-&gt;GridColumnStyles-&gt;Add( myTextCol );\n\n         // Create new ColumnStyle objects\n         DataGridColumnStyle^ cOrderDate = gcnew DataGridTextBoxColumn;\n         cOrderDate-&gt;MappingName = &quot;OrderDate&quot;;\n         cOrderDate-&gt;HeaderText = &quot;Order Date&quot;;\n         cOrderDate-&gt;Width = 100;\n\n         // PropertyDescriptor to create a formatted column.\n         PropertyDescriptorCollection^ myPropertyDescriptorCollection = this-&gt;BindingContext[myDataSet, &quot;Customers.custToOrders&quot;]-&gt;GetItemProperties();\n         DataGridColumnStyle^ csOrderAmount = gcnew DataGridTextBoxColumn( myPropertyDescriptorCollection[ &quot;OrderAmount&quot; ],&quot;c&quot;,true );\n         csOrderAmount-&gt;MappingName = &quot;OrderAmount&quot;;\n         csOrderAmount-&gt;HeaderText = &quot;Total&quot;;\n         csOrderAmount-&gt;Width = 100;\n\n         // Add the DataGridTableStyle instances to GridTableStylesCollection.\n         myDataGrid-&gt;TableStyles-&gt;Add( myDataGridTableStyle1 );\n      }\n\n      void LinkColorChanged_Handler( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         MessageBox::Show( &quot;LinkColor changed to &#39;RED&#39;&quot;, &quot;DataGridTableStyle&quot; );\n      }\n\n      void HeaderFontChanged_Handler( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         MessageBox::Show( &quot;HeaderFont changed to &#39;VERDANA&#39;&quot;, &quot;DataGridTableStyle&quot; );\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_HeaderForeColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_HeaderForeColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HeaderForeColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the foreground color of headers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Color HeaderForeColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> that represents the foreground color of headers.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_Header_4#2\">   private:\n      void Create_Table()\n      {\n         // Create DataSet.\n         myDataSet = gcnew DataSet( &quot;myDataSet&quot; );\n\n         // Create DataTable.\n         DataTable^ myCustomerTable = gcnew DataTable( &quot;Customers&quot; );\n\n         // Create two columns, and add them to the table.\n         DataColumn^ CustID = gcnew DataColumn( &quot;CustID&quot;,int::typeid );\n         DataColumn^ CustName = gcnew DataColumn( &quot;CustName&quot; );\n         myCustomerTable-&gt;Columns-&gt;Add( CustID );\n         myCustomerTable-&gt;Columns-&gt;Add( CustName );\n\n         // Add table to DataSet.\n         myDataSet-&gt;Tables-&gt;Add( myCustomerTable );\n         dataGrid1-&gt;SetDataBinding( myDataSet, &quot;Customers&quot; );\n         myTableStyle = gcnew DataGridTableStyle;\n         myTableStyle-&gt;MappingName = &quot;Customers&quot;;\n         myTableStyle-&gt;HeaderBackColorChanged += gcnew System::EventHandler( this, &amp;Form1::HeaderBackColorChangedHandler );\n         myTableStyle-&gt;HeaderForeColorChanged += gcnew System::EventHandler( this, &amp;Form1::HeaderForeColorChangedHandler );\n      }\n\n      // Change header background color.\n      void OnHeaderBackColor_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n      {\n         dataGrid1-&gt;TableStyles-&gt;Clear();\n         String^ str = dynamic_cast&lt;String^&gt;(comboBox1-&gt;SelectedItem);\n         if ( str-&gt;Equals( &quot;Red&quot; ) )\n                  myTableStyle-&gt;ForeColor = Color::Red;\n         else\n         if ( str-&gt;Equals( &quot;Yellow&quot; ) )\n                  myTableStyle-&gt;ForeColor = Color::Yellow;\n         else\n         if ( str-&gt;Equals( &quot;Blue&quot; ) )\n                  myTableStyle-&gt;ForeColor = Color::Blue;\n\n         myTableStyle-&gt;AlternatingBackColor = Color::LightGray;\n         dataGrid1-&gt;TableStyles-&gt;Add( myTableStyle );\n      }\n\n      void HeaderBackColorChangedHandler( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         MessageBox::Show( String::Concat( &quot;Changed Header Background color to : &quot;, comboBox1-&gt;SelectedItem ), &quot;Success&quot;, MessageBoxButtons::OK, MessageBoxIcon::Exclamation );\n      }\n\n      // Change header forecolor.\n      void OnHeaderForeColor_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n      {\n         dataGrid1-&gt;TableStyles-&gt;Clear();\n         String^ str = dynamic_cast&lt;String^&gt;(comboBox1-&gt;SelectedItem);\n         if ( str-&gt;Equals( &quot;Green&quot; ) )\n                  myTableStyle-&gt;ForeColor = Color::Green;\n         else\n         if ( str-&gt;Equals( &quot;White&quot; ) )\n                  myTableStyle-&gt;ForeColor = Color::White;\n         else\n         if ( str-&gt;Equals( &quot;Violet&quot; ) )\n                  myTableStyle-&gt;ForeColor = Color::Violet;\n\n         myTableStyle-&gt;AlternatingBackColor = Color::LightGray;\n         dataGrid1-&gt;TableStyles-&gt;Add( myTableStyle );\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridTableStyle_Header_4#2\">      private void Create_Table()\n      {\n         // Create DataSet.\n         myDataSet = new DataSet(&quot;myDataSet&quot;);\n         // Create DataTable.\n         DataTable myCustomerTable = new DataTable(&quot;Customers&quot;);\n         // Create two columns, and add them to the table.\n         DataColumn CustID = new DataColumn(&quot;CustID&quot;, typeof(int));\n         DataColumn CustName = new DataColumn(&quot;CustName&quot;);\n         myCustomerTable.Columns.Add(CustID);\n         myCustomerTable.Columns.Add(CustName);\n         // Add table to DataSet.\n         myDataSet.Tables.Add(myCustomerTable);\n         dataGrid1.SetDataBinding(myDataSet,&quot;Customers&quot;);\n         myTableStyle = new DataGridTableStyle();\n         myTableStyle.MappingName = &quot;Customers&quot;;\n         myTableStyle.HeaderBackColorChanged += \n            new System.EventHandler(HeaderBackColorChangedHandler); \n         myTableStyle.HeaderForeColorChanged +=\n            new System.EventHandler(HeaderForeColorChangedHandler); \n      }\n      \n      // Change header background color.\n      private void OnHeaderBackColor_Click(object sender, System.EventArgs e)\n      {\n         dataGrid1.TableStyles.Clear ();\n         switch(comboBox1.SelectedItem.ToString())\n         {\n            case &quot;Red&quot;:\n               myTableStyle.HeaderBackColor = Color.Red;\n               break;\n            case &quot;Yellow&quot;:\n               myTableStyle.HeaderBackColor = Color.Yellow ;\n               break;\n            case &quot;Blue&quot;:\n               myTableStyle.HeaderBackColor = Color.Blue ;\n               break;\n         }\n         myTableStyle.AlternatingBackColor = Color.LightGray;\n         dataGrid1.TableStyles.Add(myTableStyle);\n      }\n\n      private void HeaderBackColorChangedHandler(object sender,EventArgs e)\n      {\n         MessageBox.Show(&quot;Changed Header Background color to : &quot; + \n         comboBox1.SelectedItem.ToString(),&quot;Success&quot;, MessageBoxButtons.OK, \n         MessageBoxIcon.Exclamation);\n      }\n\n      // Change header forecolor.\n      private void OnHeaderForeColor_Click(object sender, System.EventArgs e)\n      {\n         dataGrid1.TableStyles.Clear();\n         switch(comboBox2.SelectedItem.ToString())\n         {\n            case &quot;Green&quot;:\n               myTableStyle.HeaderForeColor = Color.Green;\n               break;\n            case &quot;White&quot;:\n               myTableStyle.HeaderForeColor = Color.White;\n               break;\n            case &quot;Violet&quot;:\n               myTableStyle.HeaderForeColor = Color.Violet;\n               break;\n         }\n         myTableStyle.AlternatingBackColor = Color.LightGray;\n         dataGrid1.TableStyles.Add(myTableStyle);\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_Header_4#2\">      Private Sub Create_Table()\n         &#39; Create DataSet.\n         myDataSet = New DataSet(&quot;myDataSet&quot;)\n         &#39; Create DataTable.\n         Dim myCustomerTable As New DataTable(&quot;Customers&quot;)\n         &#39; Create two columns, and add them to the table.\n         Dim CustID As New DataColumn(&quot;CustID&quot;, GetType(Integer))\n         Dim CustName As New DataColumn(&quot;CustName&quot;)\n         myCustomerTable.Columns.Add(CustID)\n         myCustomerTable.Columns.Add(CustName)\n         &#39; Add table to DataSet.\n         myDataSet.Tables.Add(myCustomerTable)\n         dataGrid1.SetDataBinding(myDataSet, &quot;Customers&quot;)\n         myTableStyle = New DataGridTableStyle()\n         myTableStyle.MappingName = &quot;Customers&quot;\n         AddHandler myTableStyle.HeaderBackColorChanged, AddressOf HeaderBackColorChangedHandler\n         AddHandler myTableStyle.HeaderForeColorChanged, AddressOf HeaderForeColorChangedHandler\n      End Sub &#39;Create_Table\n      \n      \n      &#39; Change header background color.\n      Private Sub OnHeaderBackColor_Click(sender As Object, e As System.EventArgs) Handles button1.Click\n         dataGrid1.TableStyles.Clear()\n         Select Case comboBox1.SelectedItem.ToString()\n            Case &quot;Red&quot;\n               myTableStyle.HeaderBackColor = Color.Red\n            Case &quot;Yellow&quot;\n               myTableStyle.HeaderBackColor = Color.Yellow\n            Case &quot;Blue&quot;\n               myTableStyle.HeaderBackColor = Color.Blue\n         End Select\n         myTableStyle.AlternatingBackColor = Color.LightGray\n         dataGrid1.TableStyles.Add(myTableStyle)\n      End Sub &#39;OnHeaderBackColor_Click\n      \n        Private Sub HeaderBackColorChangedHandler(ByVal sender As Object, ByVal e As EventArgs)\n            MessageBox.Show(&quot;Changed Header Background color to : &quot; + comboBox1.SelectedItem.ToString(), &quot;Success&quot;, MessageBoxButtons.OK, MessageBoxIcon.Exclamation)\n        End Sub &#39;HeaderBackColorChangedHandler\n      \n      &#39; Change header forecolor.\n      Private Sub OnHeaderForeColor_Click(sender As Object, e As System.EventArgs) Handles button2.Click\n         dataGrid1.TableStyles.Clear()\n         Select Case comboBox2.SelectedItem.ToString()\n            Case &quot;Green&quot;\n               myTableStyle.HeaderForeColor = Color.Green\n            Case &quot;White&quot;\n               myTableStyle.HeaderForeColor = Color.White\n            Case &quot;Violet&quot;\n               myTableStyle.HeaderForeColor = Color.Violet\n         End Select\n         myTableStyle.AlternatingBackColor = Color.LightGray\n         dataGrid1.TableStyles.Add(myTableStyle)\n      End Sub &#39;OnHeaderForeColor_Click\n      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_LinkColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_LinkColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LinkColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the color of link text.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Color LinkColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> of link text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridTableStyle_Sample#1\">      private void AddCustomDataTableStyle()\n      {\n         myDataGridTableStyle1 = new DataGridTableStyle();\n         myDataGridTableStyle2 = new DataGridTableStyle();\n\n         MessageBox.Show(&quot;LinkColor Before : &quot;\n            +myDataGridTableStyle1.LinkColor);\n         MessageBox.Show(&quot;HeaderFont Before : &quot;\n            +myDataGridTableStyle1.HeaderFont);\n         \n         myDataGridTableStyle1.LinkColorChanged +=\n            new System.EventHandler(LinkColorChanged_Handler);\n         myDataGridTableStyle1.HeaderFontChanged \n            += new System.EventHandler(HeaderFontChanged_Handler);\n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;;\n\n         // Set other properties.\n         myDataGridTableStyle1.AlternatingBackColor = Color.LightGray;\n         myDataGridTableStyle1.LinkColor = Color.Red;         \n         myDataGridTableStyle1.HeaderFont = \n            new System.Drawing.Font(&quot;Verdana&quot;,\n               8.25F,\n               System.Drawing.FontStyle.Bold, \n               System.Drawing.GraphicsUnit.Point,\n               ((System.Byte)(0)));\n\n         // Add a GridColumnStyle and set its MappingName.             \n         DataGridColumnStyle myBoolCol = new DataGridBoolColumn();\n         myBoolCol.MappingName = &quot;Current&quot;;\n         myBoolCol.HeaderText = &quot;IsCurrent Customer&quot;;\n         myBoolCol.Width = 150;\n         myDataGridTableStyle1.GridColumnStyles.Add(myBoolCol);\n      \n         // Add a second column style.\n         DataGridColumnStyle myTextCol = new DataGridTextBoxColumn();\n         myTextCol.MappingName = &quot;custName&quot;;\n         myTextCol.HeaderText = &quot;Customer Name&quot;;\n         myTextCol.Width = 250;\n         myDataGridTableStyle1.GridColumnStyles.Add(myTextCol);\n\n         // Create new ColumnStyle objects\n         DataGridColumnStyle cOrderDate = new DataGridTextBoxColumn();\n         cOrderDate.MappingName = &quot;OrderDate&quot;;\n         cOrderDate.HeaderText = &quot;Order Date&quot;;\n         cOrderDate.Width = 100;\n\n         // PropertyDescriptor to create a formatted column.\n         PropertyDescriptorCollection myPropertyDescriptorCollection = this.BindingContext\n            [myDataSet, &quot;Customers.custToOrders&quot;].GetItemProperties(); \n         \n         DataGridColumnStyle csOrderAmount = \n            new DataGridTextBoxColumn(myPropertyDescriptorCollection[&quot;OrderAmount&quot;], &quot;c&quot;, true);\n         csOrderAmount.MappingName = &quot;OrderAmount&quot;;\n         csOrderAmount.HeaderText = &quot;Total&quot;;\n         csOrderAmount.Width = 100;\n              \n         // Add the DataGridTableStyle instances to GridTableStylesCollection.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1);\n      \n      }\n      private void LinkColorChanged_Handler(object sender,EventArgs e)\n      {         \n        MessageBox.Show(&quot;LinkColor changed to &#39;RED&#39;&quot;, &quot;DataGridTableStyle&quot;);\n      }\n\n      private void HeaderFontChanged_Handler(object sender,EventArgs e)\n      {                  \n         MessageBox.Show(&quot;HeaderFont changed to &#39;VERDANA&#39;&quot;,\n            &quot;DataGridTableStyle&quot;);\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_Sample#1\">      Private Sub AddCustomDataTableStyle()\n         myDataGridTableStyle1 = New DataGridTableStyle()\n         myDataGridTableStyle2 = New DataGridTableStyle()\n\n         MessageBox.Show(&quot;LinkColor Before : &quot; &amp; myDataGridTableStyle1.LinkColor.ToString)\n         MessageBox.Show(&quot;HeaderFont Before : &quot; &amp; myDataGridTableStyle1.HeaderFont.ToString)\n\n         AddHandler myDataGridTableStyle1.LinkColorChanged, AddressOf LinkColorChanged_Handler\n         AddHandler myDataGridTableStyle1.HeaderFontChanged, AddressOf HeaderFontChanged_Handler\n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;\n\n         &#39; Set other properties.\n         myDataGridTableStyle1.AlternatingBackColor = Color.LightGray\n         myDataGridTableStyle1.LinkColor = Color.Red\n         myDataGridTableStyle1.HeaderFont = New System.Drawing.Font _\n                  (&quot;Verdana&quot;, 8.25F, System.Drawing.FontStyle.Bold, _\n                   System.Drawing.GraphicsUnit.Point, CType(0, System.Byte))\n\n         &#39; Add a GridColumnStyle and set its MappingName.\n         Dim myBoolCol = New DataGridBoolColumn()\n         myBoolCol.MappingName = &quot;Current&quot;\n         myBoolCol.HeaderText = &quot;IsCurrent Customer&quot;\n         myBoolCol.Width = 150\n         myDataGridTableStyle1.GridColumnStyles.Add(myBoolCol)\n\n         &#39; Add a second column style.\n         Dim myTextCol = New DataGridTextBoxColumn()\n         myTextCol.MappingName = &quot;custName&quot;\n         myTextCol.HeaderText = &quot;Customer Name&quot;\n         myTextCol.Width = 250\n         myDataGridTableStyle1.GridColumnStyles.Add(myTextCol)\n\n         &#39; Create new ColumnStyle objects\n         Dim cOrderDate = New DataGridTextBoxColumn()\n         cOrderDate.MappingName = &quot;OrderDate&quot;\n         cOrderDate.HeaderText = &quot;Order Date&quot;\n         cOrderDate.Width = 100\n\n         &#39; PropertyDescriptor to create a formatted column.\n         Dim myPropertyDescriptorCollection As PropertyDescriptorCollection = _\n                  Me.BindingContext(myDataSet, &quot;Customers.custToOrders&quot;).GetItemProperties()\n\n         Dim csOrderAmount = New DataGridTextBoxColumn(myPropertyDescriptorCollection _\n                                 (&quot;OrderAmount&quot;), &quot;c&quot;, True)\n         csOrderAmount.MappingName = &quot;OrderAmount&quot;\n         csOrderAmount.HeaderText = &quot;Total&quot;\n         csOrderAmount.Width = 100\n\n         &#39; Add the DataGridTableStyle instances to GridTableStylesCollection.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1)\n      End Sub &#39;AddCustomDataTableStyle\n\n      Private Sub LinkColorChanged_Handler(ByVal sender As Object, ByVal e As EventArgs)\n         MessageBox.Show(&quot;LinkColor changed to &#39;RED&#39;&quot;, &quot;DataGridTableStyle&quot;)\n      End Sub &#39;LinkColorChanged_Handler\n\n\n      Private Sub HeaderFontChanged_Handler(ByVal sender As Object, ByVal e As EventArgs)\n         MessageBox.Show(&quot;HeaderFont changed to &#39;VERDANA&#39;&quot;, &quot;DataGridTableStyle&quot;)\n      End Sub &#39;HeaderFontChanged_Handler\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_Sample#1\">   private:\n      void AddCustomDataTableStyle()\n      {\n         myDataGridTableStyle1 = gcnew DataGridTableStyle;\n         myDataGridTableStyle2 = gcnew DataGridTableStyle;\n         MessageBox::Show( String::Concat( &quot;LinkColor Before : &quot;, myDataGridTableStyle1-&gt;LinkColor ) );\n         MessageBox::Show( String::Concat( &quot;HeaderFont Before : &quot;, myDataGridTableStyle1-&gt;HeaderFont ) );\n         myDataGridTableStyle1-&gt;LinkColorChanged += gcnew System::EventHandler( this, &amp;DataGridTableStyle_Sample::LinkColorChanged_Handler );\n         myDataGridTableStyle1-&gt;HeaderFontChanged += gcnew System::EventHandler( this, &amp;DataGridTableStyle_Sample::HeaderFontChanged_Handler );\n         myDataGridTableStyle1-&gt;MappingName = &quot;Customers&quot;;\n\n         // Set other properties.\n         myDataGridTableStyle1-&gt;AlternatingBackColor = Color::LightGray;\n         myDataGridTableStyle1-&gt;LinkColor = Color::Red;\n         myDataGridTableStyle1-&gt;HeaderFont = gcnew System::Drawing::Font( &quot;Verdana&quot;,8.25F,System::Drawing::FontStyle::Bold,System::Drawing::GraphicsUnit::Point,((System::Byte)(0)) );\n\n         // Add a GridColumnStyle and set its MappingName.\n         DataGridColumnStyle^ myBoolCol = gcnew DataGridBoolColumn;\n         myBoolCol-&gt;MappingName = &quot;Current&quot;;\n         myBoolCol-&gt;HeaderText = &quot;IsCurrent Customer&quot;;\n         myBoolCol-&gt;Width = 150;\n         myDataGridTableStyle1-&gt;GridColumnStyles-&gt;Add( myBoolCol );\n\n         // Add a second column style.\n         DataGridColumnStyle^ myTextCol = gcnew DataGridTextBoxColumn;\n         myTextCol-&gt;MappingName = &quot;custName&quot;;\n         myTextCol-&gt;HeaderText = &quot;Customer Name&quot;;\n         myTextCol-&gt;Width = 250;\n         myDataGridTableStyle1-&gt;GridColumnStyles-&gt;Add( myTextCol );\n\n         // Create new ColumnStyle objects\n         DataGridColumnStyle^ cOrderDate = gcnew DataGridTextBoxColumn;\n         cOrderDate-&gt;MappingName = &quot;OrderDate&quot;;\n         cOrderDate-&gt;HeaderText = &quot;Order Date&quot;;\n         cOrderDate-&gt;Width = 100;\n\n         // PropertyDescriptor to create a formatted column.\n         PropertyDescriptorCollection^ myPropertyDescriptorCollection = this-&gt;BindingContext[myDataSet, &quot;Customers.custToOrders&quot;]-&gt;GetItemProperties();\n         DataGridColumnStyle^ csOrderAmount = gcnew DataGridTextBoxColumn( myPropertyDescriptorCollection[ &quot;OrderAmount&quot; ],&quot;c&quot;,true );\n         csOrderAmount-&gt;MappingName = &quot;OrderAmount&quot;;\n         csOrderAmount-&gt;HeaderText = &quot;Total&quot;;\n         csOrderAmount-&gt;Width = 100;\n\n         // Add the DataGridTableStyle instances to GridTableStylesCollection.\n         myDataGrid-&gt;TableStyles-&gt;Add( myDataGridTableStyle1 );\n      }\n\n      void LinkColorChanged_Handler( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         MessageBox::Show( &quot;LinkColor changed to &#39;RED&#39;&quot;, &quot;DataGridTableStyle&quot; );\n      }\n\n      void HeaderFontChanged_Handler( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         MessageBox::Show( &quot;HeaderFont changed to &#39;VERDANA&#39;&quot;, &quot;DataGridTableStyle&quot; );\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_LinkHoverColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_LinkHoverColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LinkHoverColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the color displayed when hovering over link text.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Color LinkHoverColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> that represents the hover color.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_MappingName\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_MappingName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MappingName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name used to map this table to a specific data source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string MappingName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name used to map this grid to a specific data source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To bind the <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a> to a strongly typed array of objects, the object type must contain public properties. To create a <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> that displays the array, set the MappingName property to <code>typename</code> where <code>typename</code> is replaced by the name of the object type. Also note that the MappingName property is case-sensitive; the type name must be matched exactly. See the MappingName property for an example.  </p>\n<p> You can also bind the <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a> to an <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a>. A feature of the <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> is that it can contain objects of multiple types, but the <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a> can only bind to such a list when all items in the list are of the same type as the first item. This means that all objects must either be of the same type, or they must inherit from the same class as the first item in the list. For example, if the first item in a list is a <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a>, the second item could be a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> (which inherits from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a>). If, on the other hand, the first item is a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, the second object cannot be a <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a>. Further, the <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> must have items in it when it is bound. An empty <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> will result in an empty grid. When binding to an <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a>, set the MappingName of the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> to &quot;ArrayList&quot; (the type name).  </p>\n<p> The default is the name of the list managed by the <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a> for this grid. The <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a> for the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> is set using the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle__ctor_\" data-linktype=\"relative-path\">DataGridTableStyle</a> constructor.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_MappingNameChanged\" data-linktype=\"relative-path\">MappingNameChanged</a> event occurs when the MappingName value changes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates an array of <code>Widget</code> objects and binds a <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">System.Windows.Forms.DataGrid</a> control to the array. The code then creates a <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> and sets the MappingName to the name of the class plus brackets.  </p>\n<pre><code class=\"lang-cpp\" name=\"DataGridTable.MappingName Example#1\">\n        void BindToArray()\n        {\n            // Create an array of Machine objects (defined below).\n            array&lt;Machine^&gt;^ Machines = gcnew array&lt;Machine^&gt;(3);\n            Machine^ tempMachine;\n\n            tempMachine = gcnew Machine();\n            tempMachine-&gt;Model = &quot;AAA&quot;;\n            tempMachine-&gt;Id = &quot;A100&quot;;\n            tempMachine-&gt;Price = Convert::ToDecimal(3.80);\n            Machines[0] = tempMachine;\n\n            // The first Machine includes an array of Part objects.\n            Part^ p1 = gcnew Part();\n            p1-&gt;PartId = &quot;PartX&quot;;\n            Part^ p2 = gcnew Part();\n            p2-&gt;PartId = &quot;PartY&quot;;\n\n            // Note that the Machines.Parts property returns an ArrayList.\n            // Add the parts to the ArrayList using the AddRange method.\n            tempMachine-&gt;Parts-&gt;AddRange(gcnew array&lt;Part^&gt; {p1, p2}); \n\n            tempMachine = gcnew Machine();\n            tempMachine-&gt;Model = &quot;BBB&quot;;\n            tempMachine-&gt;Id = &quot;B100&quot;;\n            tempMachine-&gt;Price = Convert::ToDecimal(1.52);\n            Machines[1] = tempMachine;\n\n            tempMachine = gcnew Machine();\n            tempMachine-&gt;Id = &quot;CCC&quot;;\n            tempMachine-&gt;Model = &quot;B100&quot;;\n            tempMachine-&gt;Price = Convert::ToDecimal(2.14);\n            Machines[2] = tempMachine;\n\n            bindedDataGrid-&gt;SetDataBinding(Machines, &quot;&quot;);\n            CreateTableStyle();\n        }\n\n        void CreateTableStyle()\n        {\n            // Creates two DataGridTableStyle objects, one for the Machine\n            // array, and one for the Parts ArrayList.\n\n            DataGridTableStyle^ machineTable = gcnew DataGridTableStyle();\n            // Sets the MappingName to the class name plus brackets.\n            machineTable-&gt;MappingName = &quot;Machine[]&quot;;\n\n            // Sets the AlternatingBackColor so you can see the difference.\n            machineTable-&gt;AlternatingBackColor = \n                System::Drawing::Color::LightBlue;\n\n            // Creates three column styles.\n            DataGridTextBoxColumn^ modelColumn = gcnew DataGridTextBoxColumn();\n            modelColumn-&gt;MappingName = &quot;Model&quot;;\n            modelColumn-&gt;HeaderText = &quot;Model&quot;;\n\n            DataGridTextBoxColumn^ idColumn = gcnew DataGridTextBoxColumn();\n            idColumn-&gt;MappingName = &quot;Id&quot;;\n            idColumn-&gt;HeaderText = &quot;Id&quot;;\n\n            DataGridTextBoxColumn^ priceColumn = gcnew DataGridTextBoxColumn();\n            priceColumn-&gt;MappingName = &quot;Price&quot;;\n            priceColumn-&gt;HeaderText = &quot;Price&quot;;\n            priceColumn-&gt;Format = &quot;c&quot;;\n\n            // Adds the column styles to the grid table style.\n            machineTable-&gt;GridColumnStyles-&gt;Add(modelColumn);\n            machineTable-&gt;GridColumnStyles-&gt;Add(idColumn);\n            machineTable-&gt;GridColumnStyles-&gt;Add(priceColumn);\n\n            // Add the table style to the collection, but clear the\n            // collection first.\n            bindedDataGrid-&gt;TableStyles-&gt;Clear();\n            bindedDataGrid-&gt;TableStyles-&gt;Add(machineTable);\n\n            // Create another table style, one for the related data.\n            DataGridTableStyle^ partsTable = gcnew DataGridTableStyle();\n            // Set the MappingName to an ArrayList. Note that you need not\n            // include brackets.\n            partsTable-&gt;MappingName = &quot;ArrayList&quot;;\n            DataGridTextBoxColumn^ partIdColumn = \n                gcnew DataGridTextBoxColumn();\n            partIdColumn-&gt;MappingName = &quot;PartID&quot;;\n            partIdColumn-&gt;HeaderText = &quot;Part ID&quot;;\n            partsTable-&gt;GridColumnStyles-&gt;Add(partIdColumn);\n            bindedDataGrid-&gt;TableStyles-&gt;Add(partsTable);\n        }\n\n    private:\n        ref class Machine\n        {\n        private:\n            String^ machineModel;\n            String^ machineID;\n            Decimal machinePrice;\n\n            // Use an ArrayList to create a related collection.\n            ArrayList^ machineParts;\n\n        public:\n            Machine()\n            {\n                machineParts = gcnew ArrayList; \n            }   \n\n            property String^ Model\n            {\n                String^ get()\n                {\n                    return machineModel;\n                }\n                void set(String^ value)\n                {\n                    machineModel = value;\n                }\n            }\n\n            property String^ Id\n            {\n                String^ get()\n                {\n                    return machineID;\n                }\n                void set(String^ value)\n                {\n                    machineID = value;\n                }\n            }\n\n            property ArrayList^ Parts\n            {\n                ArrayList^ get()\n                {\n                    return machineParts;\n                }\n                void set(ArrayList^ value)\n                {\n                    machineParts = value;\n                }\n            }\n\n            property Decimal Price\n            {\n                Decimal get()\n                {\n                    return machinePrice;\n                }\n                void set(Decimal value)\n                {\n                    machinePrice = value;\n                }\n            }\n        };\n\n    private:\n        ref class Part\n        {\n        private:\n            String^ partId;\n\n        public:\n            property String^ PartId\n            {\n                String^ get()\n                {\n                    return partId;\n                }\n                void set(String^ value)\n                {\n                    partId = value;\n                }\n            }\n        };\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridTable.MappingName Example#1\">\n        private void BindToArray()\n        {\n            // Create an array of Machine objects (defined below).\n            Machine[] Machines = new Machine[3];\n            Machine tempMachine;\n\n            tempMachine= new Machine();\n            tempMachine.Model = &quot;AAA&quot;;\n            tempMachine.Id= &quot;A100&quot;;\n            tempMachine.Price= Convert.ToDecimal(3.80);\n            Machines[0]=tempMachine;\n\n            // The first Machine includes an array of Part objects.\n            Part p1 = new Part();\n            p1.PartId= &quot;PartX&quot;;\n            Part p2 = new Part();\n            p2.PartId= &quot;PartY&quot;;\n\n            // Note that the Machines.Parts property returns an ArrayList.\n            // Add the parts to the ArrayList using the AddRange method.\n            tempMachine.Parts.AddRange (new Part[]{p1, p2});;\n\n            tempMachine= new Machine();\n            tempMachine.Model = &quot;BBB&quot;;\n            tempMachine.Id= &quot;B100&quot;;\n            tempMachine.Price= Convert.ToDecimal(1.52);\n            Machines[1]=tempMachine;\n\n            tempMachine= new Machine();\n            tempMachine.Id= &quot;CCC&quot;;\n            tempMachine.Model = &quot;B100&quot;;\n            tempMachine.Price= Convert.ToDecimal(2.14);\n            Machines[2]=tempMachine;\n    \n            dataGrid1.SetDataBinding(Machines, &quot;&quot;);\n            CreateTableStyle();\n        }\n\n        private void CreateTableStyle()\n        {\n            // Creates two DataGridTableStyle objects, one for the Machine\n            // array, and one for the Parts ArrayList.\n\n            DataGridTableStyle MachineTable = new DataGridTableStyle();\n            // Sets the MappingName to the class name plus brackets.    \n            MachineTable.MappingName= &quot;Machine[]&quot;;\n\n            // Sets the AlternatingBackColor so you can see the difference.\n            MachineTable.AlternatingBackColor= System.Drawing.Color.LightBlue;\n\n            // Creates three column styles.\n            DataGridTextBoxColumn modelColumn = new DataGridTextBoxColumn();\n            modelColumn.MappingName= &quot;Model&quot;;\n            modelColumn.HeaderText= &quot;Model&quot;;\n\n            DataGridTextBoxColumn IdColumn = new DataGridTextBoxColumn();\n            IdColumn.MappingName= &quot;Id&quot;;\n            IdColumn.HeaderText= &quot;Id&quot;;\n\n            DataGridTextBoxColumn priceColumn = new DataGridTextBoxColumn();\n            priceColumn.MappingName= &quot;Price&quot;;\n            priceColumn.HeaderText= &quot;Price&quot;;\n            priceColumn.Format = &quot;c&quot;;\n\n            // Adds the column styles to the grid table style.\n            MachineTable.GridColumnStyles.Add(modelColumn);\n            MachineTable.GridColumnStyles.Add(IdColumn);\n            MachineTable.GridColumnStyles.Add(priceColumn);\n\n            // Add the table style to the collection, but clear the \n            // collection first.\n            dataGrid1.TableStyles.Clear();\n            dataGrid1.TableStyles.Add(MachineTable);\n\n            // Create another table style, one for the related data.\n            DataGridTableStyle partsTable = new DataGridTableStyle();\n            // Set the MappingName to an ArrayList. Note that you need not \n            // include brackets.\n            partsTable.MappingName= &quot;ArrayList&quot;;\n            DataGridTextBoxColumn partIdColumn = new DataGridTextBoxColumn();\n            partIdColumn.MappingName= &quot;PartID&quot;;\n            partIdColumn.HeaderText = &quot;Part ID&quot;;\n            partsTable.GridColumnStyles.Add(partIdColumn);\n\n            dataGrid1.TableStyles.Add(partsTable);\n\n        }\n        public class Machine\n        {\n            private string model;\n            private string id;\n            private decimal price;\n\n            // Use an ArrayList to create a related collection.\n            private ArrayList parts = new ArrayList();\n        \n            public string Model\n            {\n                get{return model;}\n                set{model=value;}\n            }\n            public string Id\n            {\n                get{return id;}\n                set{id = value;}\n            }\n            public ArrayList Parts\n            {\n                get{return parts;}\n                set{parts = value;}\n            }\n\n            public decimal Price\n            {\n                get{return price;}\n                set{price = value;}\n            }\n        }\n\n        public class Part\n        {\n            private string partId;\n        \n            public string PartId\n            {\n                get{return partId;}\n                set{partId = value;}\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTable.MappingName Example#1\">    Sub BindToArray()\n        &#39; Creates an array of Widget objects (defined below).\n        Dim Widgets(2) As Widget\n        Dim tempWidget As Widget\n\n        tempWidget = New Widget()\n        tempWidget.Model = &quot;AAA&quot;\n        tempWidget.Id = &quot;A100&quot;\n        tempWidget.Price = Convert.ToDecimal(3.8)\n        Widgets(0) = tempWidget\n\n        &#39; The first Widget includes an array of Part objects.\n        Dim p1 As New Part()\n        p1.PartId = &quot;PartX&quot;\n        Dim p2 As New Part()\n        p2.PartId = &quot;PartY&quot;\n\n        &#39; Note that the Widgets.Parts property returns an ArrayList.\n        &#39; Add the parts to the ArrayList using the AddRange method.\n        tempWidget.Parts.AddRange(New Part() {p1, p2})\n\n        tempWidget = New Widget()\n        tempWidget.Model = &quot;BBB&quot;\n        tempWidget.Id = &quot;B100&quot;\n        tempWidget.Price = Convert.ToDecimal(1.52)\n        Widgets(1) = tempWidget\n\n        tempWidget = New Widget()\n        tempWidget.Id = &quot;CCC&quot;\n        tempWidget.Model = &quot;B100&quot;\n        tempWidget.Price = Convert.ToDecimal(2.14)\n        Widgets(2) = tempWidget\n\n        DataGrid1.SetDataBinding(Widgets, &quot;&quot;)\n        CreateTableStyle()\n    End Sub\n\n\n    Private Sub CreateTableStyle()\n        &#39; Creates two DataGridTableStyle objects, one for the Widget\n        &#39; array, and one for the Parts ArrayList.\n        Dim widgetTable As New DataGridTableStyle()\n        &#39; Sets the MappingName to the class name plus brackets.    \n        widgetTable.MappingName = &quot;Widget[]&quot;\n\n        &#39; Sets the AlternatingBackColor so you can see the difference.\n        widgetTable.AlternatingBackColor = System.Drawing.Color.LightBlue\n\n        &#39; Creates three column styles.\n        Dim modelColumn As New DataGridTextBoxColumn()\n        modelColumn.MappingName = &quot;Model&quot;\n        modelColumn.HeaderText = &quot;Model&quot;\n\n        Dim IdColumn As New DataGridTextBoxColumn()\n        IdColumn.MappingName = &quot;Id&quot;\n        IdColumn.HeaderText = &quot;Id&quot;\n\n        Dim priceColumn As New DataGridTextBoxColumn()\n        priceColumn.MappingName = &quot;Price&quot;\n        priceColumn.HeaderText = &quot;Price&quot;\n        priceColumn.Format = &quot;c&quot;\n\n        &#39; Adds the column styles to the grid table style.\n        widgetTable.GridColumnStyles.Add(modelColumn)\n        widgetTable.GridColumnStyles.Add(IdColumn)\n        widgetTable.GridColumnStyles.Add(priceColumn)\n\n        &#39; Add the table style to the collection, but clear the \n        &#39; collection first.\n        DataGrid1.TableStyles.Clear()\n        DataGrid1.TableStyles.Add(widgetTable)\n\n        &#39; Create another table style, one for the related data.\n        Dim partsTable As New DataGridTableStyle()\n        &#39; Set the MappingName to an ArrayList. Note that you need not \n        &#39; include brackets.\n        partsTable.MappingName = &quot;ArrayList&quot;\n        Dim partIdColumn As New DataGridTextBoxColumn()\n        partIdColumn.MappingName = &quot;PartID&quot;\n        partIdColumn.HeaderText = &quot;Part ID&quot;\n        partsTable.GridColumnStyles.Add(partIdColumn)\n\n        DataGrid1.TableStyles.Add(partsTable)\n    End Sub\n\n\n    Public Class Widget\n        Private myModel As String\n        Private myId As String\n        Private myPrice As Decimal\n\n        &#39; Use an ArrayList to create a related collection.\n        Private myParts As New ArrayList()\n\n        Public Property Model() As String\n            Get\n                Return myModel\n            End Get\n            Set(ByVal Value As String)\n                myModel = Value\n            End Set\n        End Property\n\n        Public Property Id() As String\n            Get\n                Return myId\n            End Get\n            Set(ByVal Value As String)\n                myId = Value\n            End Set\n        End Property\n\n        Public Property Parts() As ArrayList\n            Get\n                Return myParts\n            End Get\n            Set(ByVal Value As ArrayList)\n                myParts = Value\n            End Set\n        End Property\n\n        Public Property Price() As Decimal\n            Get\n                Return myPrice\n            End Get\n            Set(ByVal Value As Decimal)\n                myPrice = Value\n            End Set\n        End Property\n    End Class\n\n\n    Public Class Part\n        Private myPartId As String\n\n\n        Public Property PartId() As String\n            Get\n                Return myPartId\n            End Get\n            Set(ByVal Value As String)\n                myPartId = Value\n            End Set\n        End Property\n    End Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_PreferredColumnWidth\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_PreferredColumnWidth_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PreferredColumnWidth</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the width used to create columns when a new grid is displayed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int PreferredColumnWidth { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The width used to create columns when a new grid is displayed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridTableStyle_PreferredColumnWidth#1\">      private void CreateAndBindDataSet(DataGrid myDataGrid)\n      {\n         DataSet myDataSet = new DataSet(&quot;myDataSet&quot;);\n         DataTable myEmpTable = new DataTable(&quot;Employee&quot;);\n         // Create two columns, and add them to employee table.\n         DataColumn myEmpID = new DataColumn(&quot;EmpID&quot;, typeof(int));\n         DataColumn myEmpName = new DataColumn(&quot;EmpName&quot;);\n         myEmpTable.Columns.Add(myEmpID);\n         myEmpTable.Columns.Add(myEmpName);\n         // Add table to DataSet.\n         myDataSet.Tables.Add(myEmpTable);\n         // Populate table.\n         DataRow newRow1;\n         // Create employee records in employee Table.\n         for(int i = 1; i &lt; 6; i++)\n         {\n            newRow1 = myEmpTable.NewRow();\n            newRow1[&quot;EmpID&quot;] = i;\n            // Add row to Employee table.\n            myEmpTable.Rows.Add(newRow1);\n         }\n         // Give each employee a distinct name.\n         myEmpTable.Rows[0][&quot;EmpName&quot;] = &quot;Alpha&quot;;\n         myEmpTable.Rows[1][&quot;EmpName&quot;] = &quot;Beta&quot;;\n         myEmpTable.Rows[2][&quot;EmpName&quot;] = &quot;Omega&quot;;\n         myEmpTable.Rows[3][&quot;EmpName&quot;] = &quot;Gamma&quot;;\n         myEmpTable.Rows[4][&quot;EmpName&quot;] = &quot;Delta&quot;;\n         // Bind DataGrid to DataSet.\n         myDataGrid.SetDataBinding(myDataSet, &quot;Employee&quot;);\n      }\n\n      private void Form1_Load(object sender, System.EventArgs e)\n      {\n         // Set and Display myDataGrid.\n         myDataGrid.DataMember = &quot;&quot;;\n         myDataGrid.Location = new System.Drawing.Point(72, 32);\n         myDataGrid.Name = &quot;myDataGrid&quot;;\n         myDataGrid.Size = new System.Drawing.Size(240, 200);\n         myDataGrid.TabIndex = 4;\n         // Add it to controls.\n         Controls.Add(myDataGrid);\n         CreateAndBindDataSet(myDataGrid);\n         myDataGridTableStyle.MappingName = &quot;Employee&quot;;\n         // Set other properties.\n         myDataGridTableStyle.AlternatingBackColor = Color.LightGray;\n         // Add DataGridTableStyle instances to GridTableStylesCollection.\n         myDataGridTableStyle.PreferredColumnWidth = 100;\n         myColWidth.Text = &quot;&quot;;\n         myDataGrid.TableStyles.Add(myDataGridTableStyle);\n         myDataGridTableStyle.PreferredColumnWidthChanged +=\n               new EventHandler(MyDelegatePreferredColWidthChanged);\n      }\n\n      private void MyDelegatePreferredColWidthChanged(object sender, EventArgs e)\n      {\n         MessageBox.Show(&quot;Preferred Column width has changed&quot;);\n      }\n\n      private void myButton_Click(object sender, System.EventArgs e)\n      {\n         try\n         {\n            if( myColWidth.Text != &quot;&quot; )\n            {\n               int newwidth = myDataGridTableStyle.PreferredColumnWidth = \n                  int.Parse(myColWidth.Text);\n               // Dispose datagrid and datagridtablestyle and then create.\n               myDataGrid.Dispose();\n               myDataGridTableStyle.Dispose();\n               myDataGrid = new DataGrid();\n               myDataGridTableStyle = new DataGridTableStyle();\n               myDataGrid.DataMember = &quot;&quot;;\n               myDataGrid.Location = new System.Drawing.Point(72, 32);\n               myDataGrid.Name = &quot;myDataGrid&quot;;\n               myDataGrid.Size = new System.Drawing.Size(240, 200);\n               myDataGrid.TabIndex = 4;\n               Controls.Add(myDataGrid);\n               CreateAndBindDataSet(myDataGrid);\n               myDataGridTableStyle.MappingName = &quot;Employee&quot;;\n               // Set other properties.\n               myDataGridTableStyle.AlternatingBackColor = Color.LightGray;\n               // Add DataGridTableStyle instances to GridTableStylesCollection.\n               myDataGridTableStyle.PreferredColumnWidth = newwidth;\n               myColWidth.Text = &quot;&quot;;\n               myDataGrid.TableStyles.Add(myDataGridTableStyle);\n               myDataGridTableStyle.PreferredColumnWidthChanged += \n                  new EventHandler(MyDelegatePreferredColWidthChanged);\n            }\n            else\n            {\n               MessageBox.Show(&quot;Please enter a number&quot;);\n            }\n         }\n         catch(Exception ex)\n         {\n            MessageBox.Show(ex.Message);\n         }\n      }\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_PreferredColumnWidth#1\">   private:\n      void CreateAndBindDataSet( DataGrid^ myDataGrid )\n      {\n         DataSet^ myDataSet = gcnew DataSet( &quot;myDataSet&quot; );\n         DataTable^ myEmpTable = gcnew DataTable( &quot;Employee&quot; );\n\n         // Create two columns, and add them to employee table.\n         DataColumn^ myEmpID = gcnew DataColumn( &quot;EmpID&quot;,int::typeid );\n         DataColumn^ myEmpName = gcnew DataColumn( &quot;EmpName&quot; );\n         myEmpTable-&gt;Columns-&gt;Add( myEmpID );\n         myEmpTable-&gt;Columns-&gt;Add( myEmpName );\n\n         // Add table to DataSet.\n         myDataSet-&gt;Tables-&gt;Add( myEmpTable );\n\n         // Populate table.\n         DataRow^ newRow1;\n\n         // Create employee records in employee Table.\n         for ( int i = 1; i &lt; 6; i++ )\n         {\n            newRow1 = myEmpTable-&gt;NewRow();\n            newRow1[ &quot;EmpID&quot; ] = i;\n            \n            // Add row to Employee table.\n            myEmpTable-&gt;Rows-&gt;Add( newRow1 );\n         }\n         myEmpTable-&gt;Rows[ 0 ][ &quot;EmpName&quot; ] = &quot;Alpha&quot;;\n         myEmpTable-&gt;Rows[ 1 ][ &quot;EmpName&quot; ] = &quot;Beta&quot;;\n         myEmpTable-&gt;Rows[ 2 ][ &quot;EmpName&quot; ] = &quot;Omega&quot;;\n         myEmpTable-&gt;Rows[ 3 ][ &quot;EmpName&quot; ] = &quot;Gamma&quot;;\n         myEmpTable-&gt;Rows[ 4 ][ &quot;EmpName&quot; ] = &quot;Delta&quot;;\n\n         // Bind DataGrid to DataSet.\n         myDataGrid-&gt;SetDataBinding( myDataSet, &quot;Employee&quot; );\n      }\n\n      void Form1_Load( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n      {\n         // Set and Display myDataGrid.\n         myDataGrid-&gt;DataMember = &quot;&quot;;\n         myDataGrid-&gt;Location = System::Drawing::Point( 72, 32 );\n         myDataGrid-&gt;Name = &quot;myDataGrid&quot;;\n         myDataGrid-&gt;Size = System::Drawing::Size( 240, 200 );\n         myDataGrid-&gt;TabIndex = 4;\n\n         // Add it to controls.\n         Controls-&gt;Add( myDataGrid );\n         CreateAndBindDataSet( myDataGrid );\n         myDataGridTableStyle-&gt;MappingName = &quot;Employee&quot;;\n\n         // Set other properties.\n         myDataGridTableStyle-&gt;AlternatingBackColor = Color::LightGray;\n\n         // Add DataGridTableStyle instances to GridTableStylesCollection.\n         myDataGridTableStyle-&gt;PreferredColumnWidth = 100;\n         myColWidth-&gt;Text = &quot;&quot;;\n         myDataGrid-&gt;TableStyles-&gt;Add( myDataGridTableStyle );\n         myDataGridTableStyle-&gt;PreferredColumnWidthChanged += gcnew EventHandler( this, &amp;Form1::MyDelegatePreferredColWidthChanged );\n      }\n\n   private:\n      void MyDelegatePreferredColWidthChanged( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         MessageBox::Show( &quot;Preferred Column width has changed&quot; );\n      }\n\n   private:\n      void myButton_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n      {\n         try\n         {\n            if (  !myColWidth-&gt;Text-&gt;Equals( &quot;&quot; ) )\n            {\n               Int32 newwidth = myDataGridTableStyle-&gt;PreferredColumnWidth;\n               myDataGridTableStyle-&gt;PreferredColumnWidth = Int32::Parse( myColWidth-&gt;Text );\n\n               // Dispose datagrid and datagridtablestyle and then create.\n               delete myDataGrid;\n               delete myDataGridTableStyle;\n               myDataGrid = gcnew DataGrid;\n               myDataGridTableStyle = gcnew DataGridTableStyle;\n               myDataGrid-&gt;DataMember = &quot;&quot;;\n               myDataGrid-&gt;Location = System::Drawing::Point( 72, 32 );\n               myDataGrid-&gt;Name = &quot;myDataGrid&quot;;\n               myDataGrid-&gt;Size = System::Drawing::Size( 240, 200 );\n               myDataGrid-&gt;TabIndex = 4;\n               Controls-&gt;Add( myDataGrid );\n               CreateAndBindDataSet( myDataGrid );\n               myDataGridTableStyle-&gt;MappingName = &quot;Employee&quot;;\n\n               // Set other properties.\n               myDataGridTableStyle-&gt;AlternatingBackColor = Color::LightGray;\n\n               // Add DataGridTableStyle instances to GridTableStylesCollection.\n               myDataGridTableStyle-&gt;PreferredColumnWidth = newwidth;\n               myColWidth-&gt;Text = &quot;&quot;;\n               myDataGrid-&gt;TableStyles-&gt;Add( myDataGridTableStyle );\n               myDataGridTableStyle-&gt;PreferredColumnWidthChanged += gcnew EventHandler( this, &amp;Form1::MyDelegatePreferredColWidthChanged );\n            }\n            else\n            {\n               MessageBox::Show( &quot;Please enter a number&quot; );\n            }\n         }\n         catch ( Exception^ ex ) \n         {\n            MessageBox::Show( ex-&gt;Message );\n         }\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_PreferredColumnWidth#1\">        Private Sub CreateAndBindDataSet(ByVal myDataGrid As System.Windows.Forms.DataGrid)\n            Dim myDataSet As New DataSet(&quot;myDataSet&quot;)\n            Dim myEmpTable As New DataTable(&quot;Employee&quot;)\n            &#39; Create two columns, and add them to employee table.\n            Dim myEmpID As New DataColumn(&quot;EmpID&quot;, GetType(Integer))\n            Dim myEmpName As New DataColumn(&quot;EmpName&quot;)\n            myEmpTable.Columns.Add(myEmpID)\n            myEmpTable.Columns.Add(myEmpName)\n            &#39; Add table to DataSet.\n            myDataSet.Tables.Add(myEmpTable)\n            &#39; Populate table.\n            Dim newRow1 As DataRow\n            &#39; Create employee records in employee Table.\n            Dim i As Integer\n            For i = 1 To 5\n                newRow1 = myEmpTable.NewRow()\n                newRow1(&quot;EmpID&quot;) = i\n                &#39; Add row to Employee table.\n                myEmpTable.Rows.Add(newRow1)\n            Next i\n            &#39; Give each employee a distinct name.\n            myEmpTable.Rows(0)(&quot;EmpName&quot;) = &quot;Alpha&quot;\n            myEmpTable.Rows(1)(&quot;EmpName&quot;) = &quot;Beta&quot;\n            myEmpTable.Rows(2)(&quot;EmpName&quot;) = &quot;Omega&quot;\n            myEmpTable.Rows(3)(&quot;EmpName&quot;) = &quot;Gamma&quot;\n            myEmpTable.Rows(4)(&quot;EmpName&quot;) = &quot;Delta&quot;\n            &#39; Bind DataGrid to DataSet.\n            myDataGrid.SetDataBinding(myDataSet, &quot;Employee&quot;)\n        End Sub &#39;CreateAndBindDataSet\n\n\n        Private Sub Form1_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load\n            &#39; Set and Display myDataGrid.\n            myDataGrid.DataMember = &quot;&quot;\n            myDataGrid.Location = New System.Drawing.Point(72, 32)\n            myDataGrid.Name = &quot;myDataGrid&quot;\n            myDataGrid.Size = New System.Drawing.Size(240, 200)\n            myDataGrid.TabIndex = 4\n            &#39; Add it to controls.\n            Controls.Add(myDataGrid)\n            CreateAndBindDataSet(myDataGrid)\n            myDataGridTableStyle.MappingName = &quot;Employee&quot;\n            &#39; Set other properties.\n            myDataGridTableStyle.AlternatingBackColor = Color.LightGray\n            &#39; Add DataGridTableStyle instances to GridTableStylesCollection.\n            myDataGridTableStyle.PreferredColumnWidth = 100\n            myColWidth.Text = &quot;&quot;\n            myDataGrid.TableStyles.Add(myDataGridTableStyle)\n            AddHandler myDataGridTableStyle.PreferredColumnWidthChanged, AddressOf MyDelegatePreferredColWidthChanged\n        End Sub &#39;Form1_Load\n\n\n        Private Sub MyDelegatePreferredColWidthChanged(ByVal sender As Object, ByVal e As EventArgs)\n            MessageBox.Show(&quot;Preferred Column width has changed&quot;)\n        End Sub &#39;MyDelegatePreferredColWidthChanged\n\n\n        Private Sub myButton_Click(ByVal sender As Object, ByVal e As EventArgs) Handles myButton.Click\n            Try\n                If myColWidth.Text &lt;&gt; &quot;&quot; Then\n                    Dim newwidth As Integer = Integer.Parse(myColWidth.Text)\n                    myDataGridTableStyle.PreferredColumnWidth = newwidth\n                    &#39; Dispose datagrid and datagridtablestyle and then create.\n                    myDataGrid.Dispose()\n                    myDataGridTableStyle.Dispose()\n                    myDataGrid = New Windows.Forms.Datagrid()\n                    myDataGridTableStyle = New DataGridTableStyle()\n                    myDataGrid.DataMember = &quot;&quot;\n                    myDataGrid.Location = New System.Drawing.Point(72, 32)\n                    myDataGrid.Name = &quot;myDataGrid&quot;\n                    myDataGrid.Size = New System.Drawing.Size(240, 200)\n                    myDataGrid.TabIndex = 4\n                    Controls.Add(myDataGrid)\n                    CreateAndBindDataSet(myDataGrid)\n                    myDataGridTableStyle.MappingName = &quot;Employee&quot;\n                    &#39; Set other properties.\n                    myDataGridTableStyle.AlternatingBackColor = Color.LightGray\n                    &#39; Add DataGridTableStyle instances to GridTableStylesCollection.\n                    myDataGridTableStyle.PreferredColumnWidth = newwidth\n                    myColWidth.Text = &quot;&quot;\n                    myDataGrid.TableStyles.Add(myDataGridTableStyle)\n                    AddHandler myDataGridTableStyle.PreferredColumnWidthChanged, AddressOf MyDelegatePreferredColWidthChanged\n                Else\n                    MessageBox.Show(&quot;Please enter a number&quot;)\n                End If\n            Catch ex As Exception\n                MessageBox.Show(ex.Message)\n            End Try\n        End Sub &#39;myButton_Click\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_PreferredRowHeight\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_PreferredRowHeight_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PreferredRowHeight</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the height used to create a row when a new grid is displayed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int PreferredRowHeight { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The height of a row, in pixels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The preferred height is the minimum height needed to accommodate the displayed text with the assigned <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_HeaderFont_\" data-linktype=\"relative-path\">HeaderFont</a>. A row will not be created with a height less than the specified value. If the font size requires it, however, the row height may be greater than the specified value.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridTableStyle_PreferredRowHeight#1\">                  int myPreferredRowHeight=Convert.ToInt32(myTextBox.Text.Trim());\n                  if(myPreferredRowHeight&lt;18 || myPreferredRowHeight &gt;134)\n                  {\n                     MessageBox.Show(&quot;Enter the height between 18 and 134&quot;);\n                     return;\n                  }\n                  // Set the &#39;PreferredRowHeight&#39; property of DataGridTableStyle instance.\n                  myTableStyle.PreferredRowHeight=myPreferredRowHeight;\n                  // Add the DataGridTableStyle instance to the GridTableStylesCollection. \n                  myDataGrid.TableStyles.Add(myTableStyle);\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_PreferredRowHeight#1\">         int myPreferredRowHeight = Convert::ToInt32( myTextBox-&gt;Text-&gt;Trim() );\n         if ( myPreferredRowHeight &lt; 18 || myPreferredRowHeight &gt; 134 )\n         {\n            MessageBox::Show( &quot;Enter the height between 18 and 134&quot; );\n            return;\n         }\n\n         // Set the &#39;PreferredRowHeight&#39; property of DataGridTableStyle instance.\n         myTableStyle-&gt;PreferredRowHeight = myPreferredRowHeight;\n\n         // Add the DataGridTableStyle instance to the GridTableStylesCollection.\n         myDataGrid-&gt;TableStyles-&gt;Add( myTableStyle );\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_PreferredRowHeight#1\">            Dim myPreferredRowHeight As Integer = Convert.ToInt32(myTextBox.Text.Trim())\n            If myPreferredRowHeight &lt; 18 Or myPreferredRowHeight &gt; 134 Then\n                MessageBox.Show(&quot;Enter the height between 18 and 134&quot;)\n                Return\n            End If\n            &#39; Set the &#39;PreferredRowHeight&#39; property of DataGridTableStyle instance.\n            myTableStyle.PreferredRowHeight = myPreferredRowHeight\n            &#39; Add the DataGridTableStyle instance to the GridTableStylesCollection. \n            myDataGrid.TableStyles.Add(myTableStyle)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ReadOnly\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadOnly</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether columns can be edited.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool ReadOnly { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code>, if columns cannot be edited; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can also specify whether individual columns within the table are editable by setting the <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a> class&#39;s <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle#System_Windows_Forms_DataGridColumnStyle_ReadOnly_\" data-linktype=\"relative-path\">ReadOnly</a> property to an appropriate value, <code>true</code> or <code>false</code>.  </p>\n<p> Alternatively, to ensure that the data is not edited, you can set the <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> class&#39;s <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_ReadOnly_\" data-linktype=\"relative-path\">ReadOnly</a> property to <code>true</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example returns the ReadOnly property for each <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> in a <a class=\"xref\" href=\"system.windows.forms.gridtablestylescollection\" data-linktype=\"relative-path\">GridTableStylesCollection</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic DataGridTableStyle.ReadOnly Example#1\">private:\n   void PrintReadOnlyValues()\n   {\n      for each ( DataGridTableStyle^ tableStyle in dataGrid1-&gt;TableStyles )\n      {\n         Console::WriteLine( tableStyle-&gt;ReadOnly );\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic DataGridTableStyle.ReadOnly Example#1\">    Private Sub PrintReadOnlyValues()\n        Dim tableStyle As DataGridTableStyle\n        For Each tableStyle In  dataGrid1.TableStyles\n            Console.WriteLine(tableStyle.ReadOnly)\n        Next tableStyle\n    End Sub &#39;PrintReadOnlyValues\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic DataGridTableStyle.ReadOnly Example#1\">private void PrintReadOnlyValues()\n{\n    foreach(DataGridTableStyle tableStyle in dataGrid1.TableStyles)\n    {\n      Console.WriteLine(tableStyle.ReadOnly);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_RowHeadersVisible\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_RowHeadersVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowHeadersVisible</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether row headers are visible.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool RowHeadersVisible { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if row headers are visible; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When row headers are visible, a plus sign is displayed in each row header if the underlying <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> has a related child table.  </p>\n<p> This property will not function until you add <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> objects to the <a class=\"xref\" href=\"system.windows.forms.gridtablestylescollection\" data-linktype=\"relative-path\">GridTableStylesCollection</a>. Until then, setting this property will have no effect.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridTableStyle_RowHeadersVisibleChanged#1\">   // Instantiate the EventHandler.\n   public void AttachRowHeaderVisibleChanged()\n   {\n      myDataGridTableStyle.RowHeadersVisibleChanged += new EventHandler (MyDelegateRowHeadersVisibleChanged);\n   }\n\n   // raise the event when RowHeadersVisible property is changed.\n   private void MyDelegateRowHeadersVisibleChanged(object sender, EventArgs e)\n   {\n      string myString = &quot;&#39;RowHeadersVisibleChanged&#39; event raised, Row Headers are&quot;;\n      if (myDataGridTableStyle.RowHeadersVisible)\n         myString += &quot; visible&quot;;\n      else\n         myString += &quot; not visible&quot;;\n\n      MessageBox.Show(myString, &quot;RowHeader information&quot;);\n   }\n\n   // raise the event when a button is clicked.\n   private void myButton_Click(object sender, System.EventArgs e)\n   {\n      if (myDataGridTableStyle.RowHeadersVisible)\n         myDataGridTableStyle.RowHeadersVisible = false;\n      else\n         myDataGridTableStyle.RowHeadersVisible = true;\n   }\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_RowHeadersVisibleChanged#1\">   // Instantiate the EventHandler.\npublic:\n   void AttachRowHeaderVisibleChanged()\n   {\n      myDataGridTableStyle-&gt;RowHeadersVisibleChanged += gcnew EventHandler( this, &amp;MyDataGridTableStyle_RowHeadersVisibleChanged::MyDelegateRowHeadersVisibleChanged );\n   }\n\n   // raise the event when RowHeadersVisible property is changed.\nprivate:\n   void MyDelegateRowHeadersVisibleChanged( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      String^ myString = &quot;&#39;RowHeadersVisibleChanged&#39; event raised, Row Headers are&quot;;\n      if ( myDataGridTableStyle-&gt;RowHeadersVisible )\n            myString = String::Concat( myString, &quot; visible&quot; );\n      else\n            myString = String::Concat( myString, &quot; not visible&quot; );\n\n      MessageBox::Show( myString, &quot;RowHeader information&quot; );\n   }\n\n   // raise the event when a button is clicked.\n   void myButton_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      if ( myDataGridTableStyle-&gt;RowHeadersVisible )\n            myDataGridTableStyle-&gt;RowHeadersVisible = false;\n      else\n            myDataGridTableStyle-&gt;RowHeadersVisible = true;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_RowHeadersVisibleChanged#1\">   &#39; Instantiate the EventHandler.\n   Public Sub AttachRowHeaderVisibleChanged()\n      AddHandler myDataGridTableStyle.RowHeadersVisibleChanged, AddressOf MyDelegateRowHeadersVisibleChanged\n   End Sub &#39;AttachRowHeaderVisibleChanged\n   \n   \n   &#39; raise the event when RowHeadersVisible property is changed.\n    Private Sub MyDelegateRowHeadersVisibleChanged(ByVal sender As Object, ByVal e As EventArgs)\n        Dim myString As String = &quot;&#39;RowHeadersVisibleChanged&#39; event raised, Row Headers are&quot;\n        If myDataGridTableStyle.RowHeadersVisible Then\n            myString += &quot; visible&quot;\n        Else\n            myString += &quot; not visible&quot;\n        End If\n        MessageBox.Show(myString, &quot;RowHeader information&quot;)\n    End Sub &#39;MyDelegateRowHeadersVisibleChanged\n   \n   \n   &#39; raise the event when a button is clicked.\n   Private Sub myButton_Click(sender As Object, e As System.EventArgs)\n      If myDataGridTableStyle.RowHeadersVisible Then\n         myDataGridTableStyle.RowHeadersVisible = False\n      Else\n         myDataGridTableStyle.RowHeadersVisible = True\n      End If\n   End Sub &#39;myButton_Click \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_RowHeaderWidth\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_RowHeaderWidth_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowHeaderWidth</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the width of row headers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int RowHeaderWidth { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The width of row headers, in pixels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When row headers are visible a plus sign is displayed in each row header if the underlying data has a related child table.  </p>\n<p> This property will not function until you add <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> objects to the <a class=\"xref\" href=\"system.windows.forms.gridtablestylescollection\" data-linktype=\"relative-path\">GridTableStylesCollection</a>. Until then, setting this property will have no effect.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-vb\" name=\"DataGridTableStyle_RowHeaderWidth#1\">   Private Sub CallEventLoader()\n      AddHandler Load, AddressOf DataGridTableStyle_RowHeaderWidth_Load\n   End Sub &#39;CallEventLoader\n   \n   \n   Public Sub AttachRowHeaderWidthChanged()\n      AddHandler myDataGridTableStyle.RowHeaderWidthChanged, AddressOf MyDelegateRowHeaderChanged\n   End Sub &#39;AttachRowHeaderWidthChanged\n   \n    Private Sub MyDelegateRowHeaderChanged(ByVal sender As Object, ByVal e As EventArgs)\n        MessageBox.Show(&quot;Row header width is changed&quot;)\n    End Sub &#39;MyDelegateRowHeaderChanged\n   \n   \n   Private Sub button1_Click(sender As Object, e As EventArgs) Handles button1.Click\n      myDataGridTableStyle.RowHeaderWidth = 30\n   End Sub &#39;button1_Click\n   \n   \n   Private Sub button2_Click(sender As Object, e As EventArgs) Handles button2.Click\n      MessageBox.Show(&quot;Row header width is: &quot; &amp; myDataGridTableStyle.RowHeaderWidth)\n   End Sub &#39;button2_Click\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_RowHeaderWidth#1\">private:\n   void CallEventLoader()\n   {\n      this-&gt;Load += gcnew EventHandler( this, &amp;DataGridTableStyle_RowHeaderWidth::DataGridTableStyle_RowHeaderWidth_Load );\n   }\n\npublic:\n   void AttachRowHeaderWidthChanged()\n   {\n      myDataGridTableStyle-&gt;RowHeaderWidthChanged +=\n         gcnew EventHandler( this, &amp;DataGridTableStyle_RowHeaderWidth::MyDelegateRowHeaderChanged );\n   }\n\nprivate:\n   void MyDelegateRowHeaderChanged( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      MessageBox::Show( &quot;Row header width is changed&quot; );\n   }\n\n   void button1_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      myDataGridTableStyle-&gt;RowHeaderWidth = 30;\n   }\n\n   void button2_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      MessageBox::Show( String::Concat( &quot;Row header width is: &quot;, myDataGridTableStyle-&gt;RowHeaderWidth ) );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridTableStyle_RowHeaderWidth#1\">   private void CallEventLoader()\n   {\n      this.Load += new EventHandler(\n         this.DataGridTableStyle_RowHeaderWidth_Load);\n   }\n\n   public void AttachRowHeaderWidthChanged()\n   {\n      myDataGridTableStyle.RowHeaderWidthChanged += \n                               new EventHandler(MyDelegateRowHeaderChanged);\n   }\n   private void MyDelegateRowHeaderChanged(object sender, EventArgs e)\n   {\n      MessageBox.Show(&quot;Row header width is changed&quot;);\n   }\n\n   private void button1_Click(object sender, System.EventArgs e)\n   {  \n      myDataGridTableStyle.RowHeaderWidth = 30;\n   }\n\n   private void button2_Click(object sender, System.EventArgs e)\n   {\n      MessageBox.Show(&quot;Row header width is: &quot; + \n                          myDataGridTableStyle.RowHeaderWidth);\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_SelectionBackColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_SelectionBackColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectionBackColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the background color of selected cells.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Color SelectionBackColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> that represents the background color of selected cells.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_SelectionBackColor#2\">      // Allow the user to select a Color.\n      ColorDialog^ myColorDialog = gcnew ColorDialog;\n      myColorDialog-&gt;AllowFullOpen = false;\n      myColorDialog-&gt;ShowHelp = true;\n\n      // Set the initial color select to the current color.\n      myColorDialog-&gt;Color = myGridTableStyle-&gt;SelectionBackColor;\n\n      // Show color dialog box.\n      myColorDialog-&gt;ShowDialog();\n\n      // Set the backcolor for the selected cells.\n      myGridTableStyle-&gt;SelectionBackColor = myColorDialog-&gt;Color;\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridTableStyle_SelectionBackColor#2\">      // Allow the user to select a Color.\n      ColorDialog myColorDialog = new ColorDialog();      \n      myColorDialog.AllowFullOpen = false ;      \n      myColorDialog.ShowHelp = true ;\n      // Set the initial color select to the current color.\n      myColorDialog.Color = myGridTableStyle.SelectionBackColor;\n      // Show color dialog box.\n      myColorDialog.ShowDialog();\n      // Set the backcolor for the selected cells. \n      myGridTableStyle.SelectionBackColor = myColorDialog.Color;    \n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_SelectionBackColor#2\">      &#39; Allow the user to select a Color.\n      Dim myColorDialog As New ColorDialog()\n      myColorDialog.AllowFullOpen = False\n      myColorDialog.ShowHelp = True\n      &#39; Set the initial color select to the current color.\n      myColorDialog.Color = myGridTableStyle.SelectionBackColor\n      &#39; Show color dialog box.\n      myColorDialog.ShowDialog()\n      &#39; Set the backcolor for the selected cells. \n      myGridTableStyle.SelectionBackColor = myColorDialog.Color\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_SelectionForeColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_SelectionForeColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectionForeColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the foreground color of selected cells.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Color SelectionForeColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> that represents the foreground color of selected cells.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-vb\" name=\"DataGridTableStyle_SelectionForeColor#1\">         &#39; Creates a common color dialog box.\n         Dim myColorDialog As New ColorDialog()\n         myColorDialog.AllowFullOpen = False\n         &#39; Allow the user to get help. \n         myColorDialog.ShowHelp = True\n         &#39; Set the initial color select to the current color.\n         myColorDialog.Color = customersStyle.SelectionForeColor\n         &#39; Show color dialog box.\n         myColorDialog.ShowDialog()\n         &#39; Set selection fore color to selected color.\n         customersStyle.SelectionForeColor = myColorDialog.Color\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridTableStyle_SelectionForeColor#1\">         // Creates a common color dialog box.\n         ColorDialog myColorDialog = new ColorDialog();\n         myColorDialog.AllowFullOpen = false ;\n         // Allow the user to get help. \n         myColorDialog.ShowHelp = true ;\n         // Set the initial color select to the current color.\n         myColorDialog.Color = customersStyle.SelectionForeColor; \n         // Show color dialog box.\n         myColorDialog.ShowDialog();\n         // Set selection fore color to selected color.\n         customersStyle.SelectionForeColor = myColorDialog.Color;\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_SelectionForeColor#1\">         // Creates a common color dialog box.\n         ColorDialog^ myColorDialog = gcnew ColorDialog;\n         myColorDialog-&gt;AllowFullOpen = false;\n\n         // Allow the user to get help.\n         myColorDialog-&gt;ShowHelp = true;\n\n         // Set the initial color select to the current color.\n         myColorDialog-&gt;Color = customersStyle-&gt;SelectionForeColor;\n\n         // Show color dialog box.\n         myColorDialog-&gt;ShowDialog();\n\n         // Set selection fore color to selected color.\n         customersStyle-&gt;SelectionForeColor = myColorDialog-&gt;Color;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_BeginEdit_System_Windows_Forms_DataGridColumnStyle_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_BeginEdit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginEdit(DataGridColumnStyle,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Requests an edit operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool BeginEdit (System.Windows.Forms.DataGridColumnStyle gridColumn, int rowNumber);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>gridColumn</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a> to edit.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowNumber</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of the edited row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code>, if the operation succeeds; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The BeginEdit method is intended to notify the <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">System.Windows.Forms.DataGrid</a> control when the user has begun an editing operation. When the control is in edit mode, multiple edits can be made and the constraints will be temporarily unenforced.  </p>\n<p> Call the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_EndEdit_\" data-linktype=\"relative-path\">EndEdit</a> method to quit the edit mode.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example calls the BeginEdit method on the current <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> in a <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">System.Windows.Forms.DataGrid</a> control.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic DataGridTableStyle.BeginEdit Example#1\">private:\n   void EditTable()\n   {\n      DataGridTableStyle^ dgt = myDataGrid-&gt;TableStyles[ 0 ];\n      DataGridColumnStyle^ myCol = dgt-&gt;GridColumnStyles[ 0 ];\n      dgt-&gt;BeginEdit( myCol, 1 );\n      dgt-&gt;EndEdit( myCol, 1, true );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic DataGridTableStyle.BeginEdit Example#1\">private void EditTable(){\n   DataGridTableStyle dgt= myDataGrid.TableStyles[0];\n   DataGridColumnStyle myCol = dgt.GridColumnStyles[0]; \n      \n   dgt.BeginEdit(myCol,1); \n   dgt.EndEdit(myCol, 1, true);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic DataGridTableStyle.BeginEdit Example#1\">    Private Sub EditTable()\n        Dim dgt As DataGridTableStyle = myDataGrid.TableStyles(0)\n        Dim myCol As DataGridColumnStyle = dgt.GridColumnStyles(0)\n        \n        dgt.BeginEdit(myCol, 1)\n        dgt.EndEdit(myCol, 1, True)\n    End Sub &#39;EditTable\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_CreateGridColumn_System_ComponentModel_PropertyDescriptor_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_CreateGridColumn_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateGridColumn(PropertyDescriptor)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a>, using the specified property descriptor.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Windows.Forms.DataGridColumnStyle CreateGridColumn (System.ComponentModel.PropertyDescriptor prop);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>prop</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a> used to create the column style object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a></div>\r\n                  </div>\r\n                  <p>The newly created <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_CreateGridColumn_System_ComponentModel_PropertyDescriptor_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_CreateGridColumn_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateGridColumn(PropertyDescriptor,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a> using the specified property descriptor. Specifies whether the <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a> is a default column style.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Windows.Forms.DataGridColumnStyle CreateGridColumn (System.ComponentModel.PropertyDescriptor prop, bool isDefault);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>prop</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a> used to create the column style object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>isDefault</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Specifies whether the <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a> is a default column style. This parameter is read-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a></div>\r\n                  </div>\r\n                  <p>The newly created <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Disposes of the resources (other than memory) used by the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The method calls the Dispose method on each <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a> contained by the collection before calling <a class=\"xref\" href=\"system.windows.forms.datagrid#System_Windows_Forms_DataGrid_Dispose_\" data-linktype=\"relative-path\">Dispose</a> on the grid itself.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_EndEdit_System_Windows_Forms_DataGridColumnStyle_System_Int32_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_EndEdit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndEdit(DataGridColumnStyle,Int32,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Requests an end to an edit operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool EndEdit (System.Windows.Forms.DataGridColumnStyle gridColumn, int rowNumber, bool shouldAbort);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>gridColumn</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a> to edit.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowNumber</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of the edited row.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>shouldAbort</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value indicating whether the operation should be stopped; <code>true</code> if it should stop; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the edit operation ends successfully; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Similar to the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_BeginEdit_\" data-linktype=\"relative-path\">BeginEdit</a> method, the EndEdit method is intended to notify the <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">System.Windows.Forms.DataGrid</a> when an edit operation is ending.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example calls the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_BeginEdit_\" data-linktype=\"relative-path\">BeginEdit</a> method on the current <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> in a <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">System.Windows.Forms.DataGrid</a> control.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic DataGridTableStyle.EndEdit Example#1\">private:\n   void EditTable()\n   {\n      DataGridTableStyle^ dgt = myDataGrid-&gt;TableStyles[ 0 ];\n      DataGridColumnStyle^ myCol = dgt-&gt;GridColumnStyles[ 0 ];\n      dgt-&gt;BeginEdit( myCol, 1 );\n      dgt-&gt;EndEdit( myCol, 1, true );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic DataGridTableStyle.EndEdit Example#1\">    Private Sub EditTable()\n        Dim dgt As DataGridTableStyle = myDataGrid.TableStyles(0)\n        Dim myCol As DataGridColumnStyle = dgt.GridColumnStyles(0)\n        \n        dgt.BeginEdit(myCol, 1)\n        dgt.EndEdit(myCol, 1, True)\n    End Sub &#39;EditTable\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic DataGridTableStyle.EndEdit Example#1\">private void EditTable(){\n   DataGridTableStyle dgt= myDataGrid.TableStyles[0];\n   DataGridColumnStyle myCol = dgt.GridColumnStyles[0]; \n      \n   dgt.BeginEdit(myCol,1); \n   dgt.EndEdit(myCol, 1, true);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_OnAllowSortingChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_OnAllowSortingChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnAllowSortingChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_AllowSortingChanged\" data-linktype=\"relative-path\">AllowSortingChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnAllowSortingChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnAllowSortingChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_OnAlternatingBackColorChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_OnAlternatingBackColorChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnAlternatingBackColorChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_AlternatingBackColorChanged\" data-linktype=\"relative-path\">AlternatingBackColorChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnAlternatingBackColorChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnAlternatingBackColorChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_OnBackColorChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_OnBackColorChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnBackColorChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_BackColorChanged\" data-linktype=\"relative-path\">BackColorChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnBackColorChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnBackColorChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_OnColumnHeadersVisibleChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_OnColumnHeadersVisibleChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnHeadersVisibleChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_ColumnHeadersVisibleChanged\" data-linktype=\"relative-path\">ColumnHeadersVisibleChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnHeadersVisibleChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnColumnHeadersVisibleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_OnForeColorChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_OnForeColorChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnForeColorChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_ForeColorChanged\" data-linktype=\"relative-path\">ForeColorChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnForeColorChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnForeColorChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_OnGridLineColorChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_OnGridLineColorChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnGridLineColorChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_GridLineColorChanged\" data-linktype=\"relative-path\">GridLineColorChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnGridLineColorChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnGridLineColorChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_OnGridLineStyleChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_OnGridLineStyleChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnGridLineStyleChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_GridLineStyleChanged\" data-linktype=\"relative-path\">GridLineStyleChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnGridLineStyleChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnGridLineStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_OnHeaderBackColorChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_OnHeaderBackColorChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnHeaderBackColorChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_HeaderBackColorChanged\" data-linktype=\"relative-path\">HeaderBackColorChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnHeaderBackColorChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnHeaderBackColorChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_OnHeaderFontChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_OnHeaderFontChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnHeaderFontChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_HeaderFontChanged\" data-linktype=\"relative-path\">HeaderFontChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnHeaderFontChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnHeaderFontChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_OnHeaderForeColorChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_OnHeaderForeColorChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnHeaderForeColorChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_HeaderForeColorChanged\" data-linktype=\"relative-path\">HeaderForeColorChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnHeaderForeColorChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnHeaderForeColorChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_OnLinkColorChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_OnLinkColorChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnLinkColorChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_LinkColorChanged\" data-linktype=\"relative-path\">LinkColorChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnLinkColorChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnLinkColorChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_OnLinkHoverColorChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_OnLinkHoverColorChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnLinkHoverColorChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <code>LinkHoverColorChanged</code> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnLinkHoverColorChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnLinkHoverColorChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_OnMappingNameChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_OnMappingNameChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMappingNameChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_MappingNameChanged\" data-linktype=\"relative-path\">MappingNameChanged</a> event</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnMappingNameChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnMappingNameChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_OnPreferredColumnWidthChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_OnPreferredColumnWidthChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnPreferredColumnWidthChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_PreferredColumnWidthChanged\" data-linktype=\"relative-path\">PreferredColumnWidthChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnPreferredColumnWidthChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnPreferredColumnWidthChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_OnPreferredRowHeightChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_OnPreferredRowHeightChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnPreferredRowHeightChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_PreferredRowHeightChanged\" data-linktype=\"relative-path\">PreferredRowHeightChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnPreferredRowHeightChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnPreferredRowHeightChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_OnReadOnlyChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_OnReadOnlyChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnReadOnlyChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_ReadOnlyChanged\" data-linktype=\"relative-path\">ReadOnlyChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnReadOnlyChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnReadOnlyChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_OnRowHeadersVisibleChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_OnRowHeadersVisibleChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowHeadersVisibleChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_RowHeadersVisibleChanged\" data-linktype=\"relative-path\">RowHeadersVisibleChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowHeadersVisibleChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowHeadersVisibleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_OnRowHeaderWidthChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_OnRowHeaderWidthChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowHeaderWidthChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_RowHeaderWidthChanged\" data-linktype=\"relative-path\">RowHeaderWidthChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowHeaderWidthChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowHeaderWidthChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_OnSelectionBackColorChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_OnSelectionBackColorChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnSelectionBackColorChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_SelectionBackColorChanged\" data-linktype=\"relative-path\">SelectionBackColorChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnSelectionBackColorChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnSelectionBackColorChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_OnSelectionForeColorChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_OnSelectionForeColorChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnSelectionForeColorChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_SelectionForeColorChanged\" data-linktype=\"relative-path\">SelectionForeColorChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnSelectionForeColorChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnSelectionForeColorChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ResetAlternatingBackColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ResetAlternatingBackColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResetAlternatingBackColor()</div>        \r\n          </div>\r\n    \r\n            <p>Resets the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.AlternatingBackColor*</span> property to its default value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ResetAlternatingBackColor ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You typically use this method if you are either creating a designer for the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> or creating your own control incorporating the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>. You can use the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_ShouldSerializeAlternatingBackColor_\" data-linktype=\"relative-path\">ShouldSerializeAlternatingBackColor</a> method to determine whether the property value has changed from its default.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-vb\" name=\"DataGridTableStyle_ResetAlternatingBackcolor#1\">   Private Sub myButton1_Click(sender As Object, e As EventArgs)\n      &#39;Set the &#39;AlternatingBackColor&#39;.\n      myDataGridTableStyle.AlternatingBackColor = Color.Blue\n   End Sub &#39;myButton1_Click\n   \n   Private Sub myButton2_Click(sender As Object, e As EventArgs)\n      &#39; Reset the &#39;AlternatingBackColor&#39;.\n      myDataGridTableStyle.ResetAlternatingBackColor()\n   End Sub &#39;myButton2_Click\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridTableStyle_ResetAlternatingBackcolor#1\">            private void myButton1_Click(object sender,EventArgs e)\n            {\n               //Set the &#39;AlternatingBackColor&#39;.\n               myDataGridTableStyle.AlternatingBackColor=Color.Blue;\n            }\n            private void myButton2_Click(object sender,EventArgs e)\n            {\n               // Reset the &#39;AlternatingBackColor&#39;.\n               myDataGridTableStyle.ResetAlternatingBackColor();\n            }\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_ResetAlternatingBackcolor#1\">private:\n   void myButton1_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      //Set the &#39;AlternatingBackColor&#39;.\n      myDataGridTableStyle-&gt;AlternatingBackColor = Color::Blue;\n   }\n\n   void myButton2_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      // Reset the &#39;AlternatingBackColor&#39;.\n      myDataGridTableStyle-&gt;ResetAlternatingBackColor();\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ResetBackColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ResetBackColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResetBackColor()</div>        \r\n          </div>\r\n    \r\n            <p>Resets the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.BackColor*</span> property to its default value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ResetBackColor ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You typically use this method if you are either creating a designer for the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> or creating your own control incorporating the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_ResetBackColor#1\">private:\n   void AddCustomColumnStyle()\n   {\n      // Set the TableStyle Mapping name.\n      myTableStyle-&gt;MappingName = &quot;customerTable&quot;;\n      myTableStyle-&gt;BackColor = Color::Pink;\n      \n      // Set the ColumnStyle properties and add to TableStyle.\n      myColumnStyle-&gt;MappingName = &quot;Customers&quot;;\n      myColumnStyle-&gt;HeaderText = &quot;Customer Name&quot;;\n      myColumnStyle-&gt;Width = 250;\n      myTableStyle-&gt;GridColumnStyles-&gt;Add( myColumnStyle );\n      myDataGrid-&gt;TableStyles-&gt;Add( myTableStyle );\n   }\n\n   void myButton1_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      // Reset the background color.\n      myTableStyle-&gt;ResetBackColor();\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_ResetBackColor#1\">   Private Sub AddCustomColumnStyle()\n      &#39; Set the TableStyle Mapping name.\n      myTableStyle.MappingName = &quot;customerTable&quot;\n      myTableStyle.BackColor = Color.Pink\n      \n      &#39; Set the ColumnStyle properties and add to TableStyle.\n      myColumnStyle.MappingName = &quot;Customers&quot;\n      myColumnStyle.HeaderText = &quot;Customer Name&quot;\n      myColumnStyle.Width = 250\n      myTableStyle.GridColumnStyles.Add(myColumnStyle)\n      myDataGrid.TableStyles.Add(myTableStyle)\n   End Sub &#39;AddCustomColumnStyle\n   \n   \n   Private Sub myButton1_Click(sender As Object, e As EventArgs)\n      &#39; Reset the background color.\n      myTableStyle.ResetBackColor()\n   End Sub &#39;myButton1_Click\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridTableStyle_ResetBackColor#1\">         private void AddCustomColumnStyle()\n         {\n            // Set the TableStyle Mapping name.\n            myTableStyle.MappingName = &quot;customerTable&quot;;\n            myTableStyle.BackColor = Color.Pink;\n\n            // Set the ColumnStyle properties and add to TableStyle.\n            myColumnStyle.MappingName = &quot;Customers&quot;;\n            myColumnStyle.HeaderText = &quot;Customer Name&quot;;\n            myColumnStyle.Width = 250;\n            myTableStyle.GridColumnStyles.Add(myColumnStyle);\n            myDataGrid.TableStyles.Add(myTableStyle);\n         }\n\n         private void myButton1_Click(object sender, EventArgs e)\n         {\n            // Reset the background color.\n            myTableStyle.ResetBackColor();\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ResetForeColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ResetForeColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResetForeColor()</div>        \r\n          </div>\r\n    \r\n            <p>Resets the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.ForeColor*</span> property to its default value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ResetForeColor ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You typically use this method if you are either creating a designer for the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> or creating your own control incorporating the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>. You can use the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_ShouldSerializeForeColor_\" data-linktype=\"relative-path\">ShouldSerializeForeColor</a> method to determine whether the property value has changed from its default.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridTableStyle_ResetForeColor#1\">            private void BtnSetForeColor_Click(Object sender, EventArgs e)\n            {\n               // Set the foreground color of table.\n               myDataGridTableStyle.ForeColor=Color.Blue;\n               myDataGrid.TableStyles.Add(myDataGridTableStyle);\n            }\n           private void BtnResetForeColor_Click(Object sender, EventArgs e)\n           {\n              // Reset the foreground color of table to its default value.\n              myDataGridTableStyle.ResetForeColor();\n           }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_ResetForeColor#1\">        Private Sub BtnSetForeColor_Click(ByVal sender As Object, ByVal e As EventArgs)\n            &#39; Set the foreground color of table.\n            myDataGridTableStyle.ForeColor = Color.Blue\n            myDataGrid.TableStyles.Add(myDataGridTableStyle)\n        End Sub &#39;BtnSetForeColor_Click\n      \n        Private Sub BtnResetForeColor_Click(ByVal sender As Object, ByVal e As EventArgs)\n            &#39; Reset the foreground color of table to its default value.\n            myDataGridTableStyle.ResetForeColor()\n        End Sub &#39;BtnResetForeColor_Click\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_ResetForeColor#1\">   private:\n      void BtnSetForeColor_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         // Set the foreground color of table.\n         myDataGridTableStyle-&gt;ForeColor = Color::Blue;\n         myDataGrid-&gt;TableStyles-&gt;Add( myDataGridTableStyle );\n      }\n\n      void BtnResetForeColor_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         // Reset the foreground color of table to its default value.\n         myDataGridTableStyle-&gt;ResetForeColor();\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ResetGridLineColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ResetGridLineColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResetGridLineColor()</div>        \r\n          </div>\r\n    \r\n            <p>Resets the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.GridLineColor*</span> property to its default value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ResetGridLineColor ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You typically use this method if you are either creating a designer for the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> or creating your own control incorporating the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>. You can use the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_ShouldSerializeGridLineColor_\" data-linktype=\"relative-path\">ShouldSerializeGridLineColor</a> method to determine whether the property value has changed from its default.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridTableStyle_ResetGridLineColor#1\">\n      private void Button_Click(object sender, EventArgs e)\n      {\n           // Change the &#39;GridLineColor&#39;.\n           myDataTableStyle.GridLineColor = Color.Blue;\n      }\n\n      private void Button1_Click(object sender, EventArgs e)\n      {\n         // Reset the &#39;GridLineColor&#39; to its orginal color.\n          myDataTableStyle.ResetGridLineColor();\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_ResetGridLineColor#1\">    Private Sub Button_Click(ByVal sender As Object, ByVal e As EventArgs) Handles myButton.Click\n        &#39; Change the &#39;GridLineColor&#39;.\n        myDataTableStyle.GridLineColor = Color.Blue\n    End Sub &#39;Button_Click\n   \n    Private Sub Button1_Click(ByVal sender As Object, ByVal e As EventArgs) Handles myButton1.Click\n        &#39; Reset the &#39;GridLineColor&#39; to its orginal color.\n        myDataTableStyle.ResetGridLineColor()\n    End Sub &#39;Button1_Click\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_ResetGridLineColor#1\">private:\n   void Button_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      // Change the &#39;GridLineColor&#39;.\n      myDataTableStyle-&gt;GridLineColor = Color::Blue;\n   }\n\n   void Button1_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      // Reset the &#39;GridLineColor&#39; to its orginal color.\n      myDataTableStyle-&gt;ResetGridLineColor();\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ResetHeaderBackColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ResetHeaderBackColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResetHeaderBackColor()</div>        \r\n          </div>\r\n    \r\n            <p>Resets the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.HeaderBackColor*</span> property to its default value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ResetHeaderBackColor ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You typically use this method if you are either creating a designer for the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> or creating your own control incorporating the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>. You can use the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_ShouldSerializeHeaderBackColor_\" data-linktype=\"relative-path\">ShouldSerializeHeaderBackColor</a> method to determine whether the property value has changed from its default.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_ResetHeaderBackColor#1\">private:\n   void Button_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      // Change the color of &#39;HeaderBack&#39;.\n      myDataTableStyle-&gt;HeaderBackColor = Color::LightPink;\n   }\n\n   void Button1_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      // Reset the &#39;HeaderBack&#39; to its origanal color.\n      myDataTableStyle-&gt;ResetHeaderBackColor();\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridTableStyle_ResetHeaderBackColor#1\">\n      private void Button_Click(object sender, EventArgs e)\n      {\n         // Change the color of &#39;HeaderBack&#39;.\n         myDataTableStyle.HeaderBackColor = Color.LightPink;\n      }\n\n      private void Button1_Click(object sender, EventArgs e)\n      {\n          // Reset the &#39;HeaderBack&#39; to its origanal color.\n          myDataTableStyle.ResetHeaderBackColor();\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_ResetHeaderBackColor#1\">    Private Sub Button_Click(ByVal sender As Object, ByVal e As EventArgs)\n        &#39; Change the color of &#39;HeaderBack&#39;.\n        myDataTableStyle.HeaderBackColor = Color.LightPink\n    End Sub &#39;Button_Click\n   \n    Private Sub Button1_Click(ByVal sender As Object, ByVal e As EventArgs)\n        &#39; Reset the &#39;HeaderBack&#39; to its origanal color.\n        myDataTableStyle.ResetHeaderBackColor()\n    End Sub &#39;Button1_Click\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ResetHeaderFont\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ResetHeaderFont_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResetHeaderFont()</div>        \r\n          </div>\r\n    \r\n            <p>Resets the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.HeaderFont*</span> property to its default value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ResetHeaderFont ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You typically use this method if you are either creating a designer for the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> or creating your own control incorporating the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_ResetHeaderFont1#1\">private:\n   void MySetButton_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      // Set the &#39;HeaderFont&#39; property of the DataGridTableStyle instance.\n      myTableStyle-&gt;HeaderFont = gcnew System::Drawing::Font( &quot;Impact&quot;,10 );\n\n      // Add the DataGridTableStyle instance to the GridTableStylesCollection.\n      myDataGrid-&gt;TableStyles-&gt;Add( myTableStyle );\n   }\n\n   void MyResetButton_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      // Reset the Header Font to its default value.\n      myTableStyle-&gt;ResetHeaderFont();\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridTableStyle_ResetHeaderFont1#1\">      private void MySetButton_Click(object sender, EventArgs e)\n      {\n         // Set the &#39;HeaderFont&#39; property of the DataGridTableStyle instance.\n         myTableStyle.HeaderFont=new Font(&quot;Impact&quot;,10);\n         // Add the DataGridTableStyle instance to the GridTableStylesCollection. \n         myDataGrid.TableStyles.Add(myTableStyle);\n      }\n      private void MyResetButton_Click(object sender, EventArgs e)\n      {\n         // Reset the Header Font to its default value.\n         myTableStyle.ResetHeaderFont();\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_ResetHeaderFont1#1\">    Private Sub MySetButton_Click(ByVal sender As Object, ByVal e As EventArgs)\n        &#39; Set the &#39;HeaderFont&#39; property of DataGridTableStyle instance.\n        myTableStyle.HeaderFont = New Font(&quot;Impact&quot;, 10)\n        &#39; Add the DataGridTableStyle instance to the GridTableStylesCollection. \n        myDataGrid.TableStyles.Add(myTableStyle)\n    End Sub &#39;MySetButton_Click\n   \n    Private Sub MyResetButton_Click(ByVal sender As Object, ByVal e As EventArgs)\n        &#39; Reset the Header Font to its default value.\n        myTableStyle.ResetHeaderFont()\n    End Sub &#39;MyResetButton_Click\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ResetHeaderForeColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ResetHeaderForeColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResetHeaderForeColor()</div>        \r\n          </div>\r\n    \r\n            <p>Resets the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.HeaderForeColor*</span> property to its default value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ResetHeaderForeColor ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You typically use this method if you are either creating a designer for the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> or creating your own control incorporating the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>. You can use the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_ShouldSerializeHeaderForeColor_\" data-linktype=\"relative-path\">ShouldSerializeHeaderForeColor</a> method to determine whether the property value has changed from its default.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridTableStyle_ResetHeaderForeColor#1\">         private void myButton1_Click(object sender, EventArgs e)\n         {\n            // Set the &#39;HeaderForeColor&#39; property.\n            myDataTableStyle.HeaderForeColor = Color.Blue;\n         }\n         private void myButton2_Click(object sender, EventArgs e)\n         {\n            // Reset the &#39;HeaderForeColor&#39; property to its default value.\n            myDataTableStyle.ResetHeaderForeColor();\n         }\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_ResetHeaderForeColor#1\">private:\n   void myButton1_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      // Set the &#39;HeaderForeColor&#39; property.\n      myDataTableStyle-&gt;HeaderForeColor = Color::Blue;\n   }\n\n   void myButton2_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      // Reset the &#39;HeaderForeColor&#39; property to its default value.\n      myDataTableStyle-&gt;ResetHeaderForeColor();\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_ResetHeaderForeColor#1\">    Private Sub myButton1_Click(ByVal sender As Object, ByVal e As EventArgs)\n        &#39; Set the &#39;HeaderForeColor&#39; property.\n        myDataTableStyle.HeaderForeColor = Color.Blue\n    End Sub &#39;myButton1_Click\n   \n    Private Sub myButton2_Click(ByVal sender As Object, ByVal e As EventArgs)\n        &#39; Reset the &#39;HeaderForeColor&#39; property to its default value.\n        myDataTableStyle.ResetHeaderForeColor()\n    End Sub &#39;myButton2_Click\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ResetLinkColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ResetLinkColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResetLinkColor()</div>        \r\n          </div>\r\n    \r\n            <p>Resets the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.LinkColor*</span> property to its default value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ResetLinkColor ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You typically use this method if you are either creating a designer for the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> or creating your own control incorporating the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>. You can use the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_ShouldSerializeLinkColor_\" data-linktype=\"relative-path\">ShouldSerializeLinkColor</a> method to determine whether the property value has changed from its default.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_ResetLinkColor#1\">         // String variable used to show message.\n         String^ myString = &quot;Link color changed from: &quot;;\n\n         // Store current foreground color of selected cells.\n         Color myCurrentColor = myDataGridTableStyle-&gt;LinkColor;\n         myString = String::Concat( myString, myCurrentColor );\n\n         // Reset link color to default.\n         myDataGridTableStyle-&gt;ResetLinkColor();\n         myString = String::Concat( myString, &quot; to &quot; );\n         myString = String::Concat( myString, myDataGridTableStyle-&gt;LinkColor );\n\n         // Show information about changes in color setting.\n         MessageBox::Show( myString, &quot;Link line color information&quot; );\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridTableStyle_ResetLinkColor#1\">         // String variable used to show message.   \n         string myString = &quot;Link color changed from: &quot;;\n         // Store current foreground color of selected cells.\n         Color myCurrentColor = myDataGridTableStyle.LinkColor;\n         myString += myCurrentColor.ToString();\n         // Reset link color to default.\n         myDataGridTableStyle.ResetLinkColor();\n         myString += &quot;  to &quot;;\n         myString += myDataGridTableStyle.LinkColor.ToString();\n         // Show information about changes in color setting.  \n         MessageBox.Show(myString, &quot;Link line color information&quot;);\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_ResetLinkColor#1\">         &#39; String variable used to show message.   \n         Dim myString As String = &quot;Link color changed from: &quot;\n         &#39; Store current foreground color of selected cells.\n         Dim myCurrentColor As Color = myDataGridTableStyle.LinkColor\n         myString += myCurrentColor.ToString()\n         &#39; Reset link color to default.\n         myDataGridTableStyle.ResetLinkColor()\n         myString += &quot;  to &quot;\n         myString += myDataGridTableStyle.LinkColor.ToString()\n         &#39; Show information about changes in color setting.  \n         MessageBox.Show(myString, &quot;Link line color information&quot;)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ResetLinkHoverColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ResetLinkHoverColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResetLinkHoverColor()</div>        \r\n          </div>\r\n    \r\n            <p>Resets the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.LinkHoverColor*</span> property to its default value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ResetLinkHoverColor ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You typically use this method if you are either creating a designer for the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> or creating your own control incorporating the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>. You can use the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_ShouldSerializeLinkHoverColor_\" data-linktype=\"relative-path\">ShouldSerializeLinkHoverColor</a> method to determine whether the property value has changed from its default.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ResetSelectionBackColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ResetSelectionBackColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResetSelectionBackColor()</div>        \r\n          </div>\r\n    \r\n            <p>Resets the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.SelectionBackColor*</span> property to its default value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ResetSelectionBackColor ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You typically use this method if you are either creating a designer for the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> or creating your own control incorporating the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>. You can use the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_ShouldSerializeSelectionBackColor_\" data-linktype=\"relative-path\">ShouldSerializeSelectionBackColor</a> method to determine whether the property value has changed from its default.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ResetSelectionForeColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ResetSelectionForeColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResetSelectionForeColor()</div>        \r\n          </div>\r\n    \r\n            <p>Resets the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.SelectionForeColor*</span> property to its default value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ResetSelectionForeColor ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You typically use this method if you are either creating a designer for the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> or creating your own control incorporating the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>. You can use the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle#System_Windows_Forms_DataGridTableStyle_ShouldSerializeSelectionForeColor_\" data-linktype=\"relative-path\">ShouldSerializeSelectionForeColor</a> method to determine whether the property value has changed from its default.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-vb\" name=\"DataGridTableStyle_SelectionForeColor#2\">         &#39; String variable used to show message.   \n         Dim myString As String = &quot;Fore color changed from: &quot;\n         &#39; Store current foreground color of selected cells.\n         Dim myCurrentColor As Color = customersStyle.SelectionForeColor\n         myString += myCurrentColor.ToString()\n         &#39; Reset selection fore color to default.\n         customersStyle.ResetSelectionForeColor()\n         myString += &quot;  to &quot;\n         myString += customersStyle.SelectionForeColor.ToString()\n         &#39; Show information about changes in color setting.  \n         MessageBox.Show(myString, &quot;Selection fore color information&quot;)\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridTableStyle_SelectionForeColor#2\">         // String variable used to show message.   \n         string myString = &quot;Fore color changed from: &quot;;\n         // Store current foreground color of selected cells.\n         Color myCurrentColor = customersStyle.SelectionForeColor;\n         myString += myCurrentColor.ToString();\n         // Reset selection fore color to default.\n         customersStyle.ResetSelectionForeColor();\n         myString += &quot;  to &quot;;\n         myString += customersStyle.SelectionForeColor.ToString();\n         // Show information about changes in color setting.  \n         MessageBox.Show(myString, &quot;Selection fore color information&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_SelectionForeColor#2\">         // String variable used to show message.\n         String^ myString = &quot;Fore color changed from: &quot;;\n\n         // Store current foreground color of selected cells.\n         Color myCurrentColor = customersStyle-&gt;SelectionForeColor;\n         myString = String::Concat( myString, myCurrentColor );\n\n         // Reset selection fore color to default.\n         customersStyle-&gt;ResetSelectionForeColor();\n         myString = String::Concat( myString, &quot;  to &quot; );\n         myString = String::Concat( myString, customersStyle-&gt;SelectionForeColor );\n\n         // Show information about changes in color setting.\n         MessageBox::Show( myString, &quot;Selection fore color information&quot; );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ShouldSerializeAlternatingBackColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ShouldSerializeAlternatingBackColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShouldSerializeAlternatingBackColor()</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.AlternatingBackColor*</span> property should be persisted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool ShouldSerializeAlternatingBackColor ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the property value has changed from its default; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You typically use this method if you are either creating a designer for the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> or creating your own control incorporating the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ShouldSerializeBackColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ShouldSerializeBackColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShouldSerializeBackColor()</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.BackColor*</span> property should be persisted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool ShouldSerializeBackColor ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the property value has changed from its default; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You typically use this method if you are either creating a designer for the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> or creating your own control incorporating the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ShouldSerializeForeColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ShouldSerializeForeColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShouldSerializeForeColor()</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.ForeColor*</span> property should be persisted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool ShouldSerializeForeColor ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the property value has changed from its default; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You typically use this method if you are either creating a designer for the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> or creating your own control incorporating the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ShouldSerializeGridLineColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ShouldSerializeGridLineColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShouldSerializeGridLineColor()</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.GridLineColor*</span> property should be persisted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool ShouldSerializeGridLineColor ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the property value has changed from its default; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You typically use this method if you are either creating a designer for the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> or creating your own control incorporating the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ShouldSerializeHeaderBackColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ShouldSerializeHeaderBackColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShouldSerializeHeaderBackColor()</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.HeaderBackColor*</span> property should be persisted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool ShouldSerializeHeaderBackColor ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the property value has changed from its default; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You typically use this method if you are either creating a designer for the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> or creating your own control incorporating the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ShouldSerializeHeaderForeColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ShouldSerializeHeaderForeColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShouldSerializeHeaderForeColor()</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.HeaderForeColor*</span> property should be persisted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool ShouldSerializeHeaderForeColor ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the property value has changed from its default; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You typically use this method if you are either creating a designer for the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> or creating your own control incorporating the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ShouldSerializeLinkColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ShouldSerializeLinkColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShouldSerializeLinkColor()</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.LinkColor*</span> property should be persisted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool ShouldSerializeLinkColor ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the property value has changed from its default; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You typically use this method if you are either creating a designer for the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> or creating your own control incorporating the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ShouldSerializeLinkHoverColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ShouldSerializeLinkHoverColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShouldSerializeLinkHoverColor()</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.LinkHoverColor*</span> property should be persisted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool ShouldSerializeLinkHoverColor ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the property value has changed from its default; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You typically use this method if you are either creating a designer for the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> or creating your own control incorporating the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ShouldSerializePreferredRowHeight\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ShouldSerializePreferredRowHeight_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShouldSerializePreferredRowHeight()</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.PreferredRowHeight*</span> property should be persisted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool ShouldSerializePreferredRowHeight ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the property value has changed from its default; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You typically use this method if you are either creating a designer for the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> or creating your own control incorporating the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ShouldSerializeSelectionBackColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ShouldSerializeSelectionBackColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShouldSerializeSelectionBackColor()</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.SelectionBackColor*</span> property should be persisted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool ShouldSerializeSelectionBackColor ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the property value has changed from its default; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You typically use this method if you are either creating a designer for the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> or creating your own control incorporating the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ShouldSerializeSelectionForeColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridTableStyle_ShouldSerializeSelectionForeColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShouldSerializeSelectionForeColor()</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.SelectionForeColor*</span> property should be persisted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool ShouldSerializeSelectionForeColor ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the property value has changed from its default; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You typically use this method if you are either creating a designer for the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> or creating your own control incorporating the <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_AllowSortingChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowSortingChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.AllowSorting*</span> property value changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler AllowSortingChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example allows you to toggle sorting availability on a <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a> by clicking a button and the current sorting status is displayed in a label. This example requires that you have a <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a> with a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">System.Data.DataSet</a> that contains some data, a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> and a <a class=\"xref\" href=\"system.windows.forms.label\" data-linktype=\"relative-path\">Label</a> on a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_Sample2#1\">   private:\n      void DataGridTableStyle_Sample_Load( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         myDataGridTableStyle1 = gcnew DataGridTableStyle;\n         mylabel-&gt;Text = String::Concat( &quot;Sorting Status : &quot;, myDataGridTableStyle1-&gt;AllowSorting );\n         if ( myDataGridTableStyle1-&gt;AllowSorting == true )\n         {\n            btnApplyStyles-&gt;Text = &quot;Remove Sorting&quot;;\n         }\n         else\n         {\n            btnApplyStyles-&gt;Text = &quot;Apply Sorting&quot;;\n         }\n\n         myDataGridTableStyle1-&gt;AllowSortingChanged += gcnew System::EventHandler(\n            this, &amp;DataGridTableStyle_Sample::AllowSortingChanged_Handler );\n         myDataGridTableStyle1-&gt;MappingName = &quot;Customers&quot;;\n      }\n\n      void AllowSortingChanged_Handler( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         mylabel-&gt;Text = String::Concat( &quot;Sorting Status : &quot;, myDataGridTableStyle1-&gt;AllowSorting );\n      }\n\n      void btnApplyStyles_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         if ( myDataGridTableStyle1-&gt;AllowSorting == true )\n         {\n            // Remove sorting.\n            myDataGridTableStyle1-&gt;AllowSorting = false;\n            btnApplyStyles-&gt;Text = &quot;Allow Sorting&quot;;\n         }\n         else\n         {\n            // Allow sorting.\n            myDataGridTableStyle1-&gt;AllowSorting = true;\n            btnApplyStyles-&gt;Text = &quot;Remove Sorting&quot;;\n         }\n\n         mylabel-&gt;Text = String::Concat( &quot;Sorting Status : &quot;, myDataGridTableStyle1-&gt;AllowSorting );\n\n         // Add the DataGridTableStyle to DataGrid.\n         myDataGrid-&gt;TableStyles-&gt;Add( myDataGridTableStyle1 );\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridTableStyle_Sample2#1\">      private void DataGridTableStyle_Sample_Load(object sender,\n                                             EventArgs e)\n      {\n         myDataGridTableStyle1 = new DataGridTableStyle();\n\n         mylabel.Text = &quot;Sorting Status :&quot; + \n               myDataGridTableStyle1.AllowSorting.ToString();\n         if(myDataGridTableStyle1.AllowSorting == true)\n         {\n            btnApplyStyles.Text = &quot;Remove Sorting&quot;;\n         }\n         else\n         {\n            btnApplyStyles.Text = &quot;Apply Sorting&quot;;\n         }\n         // Attach custom event handlers.\n         myDataGridTableStyle1.AllowSortingChanged += \n                     new System.EventHandler(AllowSortingChanged_Handler);\n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;;\n      } \n      private void AllowSortingChanged_Handler(object sender,EventArgs e)\n      {         \n         mylabel.Text = &quot;Sorting Status :&quot; \n               + myDataGridTableStyle1.AllowSorting.ToString();\n      }     \n      private void btnApplyStyles_Click(object sender, EventArgs e)\n      {       \n\n         if(myDataGridTableStyle1.AllowSorting == true)\n         {            \n            // Remove sorting.\n            myDataGridTableStyle1.AllowSorting = false; \n            btnApplyStyles.Text = &quot;Allow Sorting&quot;;\n         }\n         else\n         {\n            // Allow sorting.\n            myDataGridTableStyle1.AllowSorting = true;\n            btnApplyStyles.Text = &quot;Remove Sorting&quot;;\n         } \n\n         mylabel.Text = &quot;Sorting Status :&quot; + myDataGridTableStyle1.AllowSorting;\n         // Add the DataGridTableStyle to DataGrid.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1);\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_Sample2#1\">      Private Sub DataGridTableStyle_Sample_Load(ByVal sender As Object, _\n                              ByVal e As EventArgs) Handles MyBase.Load\n         myDataGridTableStyle1 = New DataGridTableStyle()\n\n         mylabel.Text = &quot;Sorting Status :&quot; + myDataGridTableStyle1.AllowSorting.ToString()\n         If myDataGridTableStyle1.AllowSorting = True Then\n            btnApplyStyles.Text = &quot;Remove Sorting&quot;\n         Else\n            btnApplyStyles.Text = &quot;Apply Sorting&quot;\n         End If\n         &#39; Attach custom event handlers.\n         AddHandler myDataGridTableStyle1.AllowSortingChanged, AddressOf AllowSortingChanged_Handler\n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;\n      End Sub &#39;DataGridTableStyle_Sample_Load\n\n      Private Sub AllowSortingChanged_Handler(ByVal sender As Object, ByVal e As EventArgs)\n         mylabel.Text = &quot;Sorting Status :&quot; + myDataGridTableStyle1.AllowSorting.ToString()\n      End Sub &#39;AllowSortingChanged_Handler\n\n      Private Sub btnApplyStyles_Click(ByVal sender As Object, _\n                                       ByVal e As EventArgs) Handles btnApplyStyles.Click\n         If myDataGridTableStyle1.AllowSorting = True Then\n            &#39; Remove sorting.\n            myDataGridTableStyle1.AllowSorting = False\n            btnApplyStyles.Text = &quot;Allow Sorting&quot;\n         Else\n            &#39; Allow sorting.\n            myDataGridTableStyle1.AllowSorting = True\n            btnApplyStyles.Text = &quot;Remove Sorting&quot;\n         End If\n\n         mylabel.Text = &quot;Sorting Status :&quot; + myDataGridTableStyle1.AllowSorting.ToString\n         &#39; Add the DataGridTableStyle to DataGrid.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1)\n      End Sub &#39;btnApplyStyles_Click\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_AlternatingBackColorChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AlternatingBackColorChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.AlternatingBackColor*</span> value changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler AlternatingBackColorChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the AlternatingBackColorChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> named <code>DataGridTableStyle1</code>. Then ensure that the event handler is associated with the AlternatingBackColorChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#221\">private void DataGridTableStyle1_AlternatingBackColorChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridTableStyle.AlternatingBackColorChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#221\">Private Sub DataGridTableStyle1_AlternatingBackColorChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridTableStyle1.AlternatingBackColorChanged\n\n   MessageBox.Show(&quot;You are in the DataGridTableStyle.AlternatingBackColorChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_BackColorChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BackColorChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.BackColor*</span> value changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler BackColorChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the BackColorChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> named <code>DataGridTableStyle1</code>. Then ensure that the event handler is associated with the BackColorChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#222\">private void DataGridTableStyle1_BackColorChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridTableStyle.BackColorChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#222\">Private Sub DataGridTableStyle1_BackColorChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridTableStyle1.BackColorChanged\n\n   MessageBox.Show(&quot;You are in the DataGridTableStyle.BackColorChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ColumnHeadersVisibleChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnHeadersVisibleChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible*</span> value changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler ColumnHeadersVisibleChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To set the caption text for each column in a grid, set the <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle#System_Windows_Forms_DataGridColumnStyle_HeaderText_\" data-linktype=\"relative-path\">HeaderText</a> property of the <a class=\"xref\" href=\"system.windows.forms.datagridcolumnstyle\" data-linktype=\"relative-path\">DataGridColumnStyle</a> class.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridTableStyle_Sample3#2\">\n      private void DataGridTableStyle_Sample_Load(object sender,\n                                                EventArgs e)\n      {\n         myDataGridTableStyle1 = new DataGridTableStyle();\n         myHeaderLabel.Text = &quot;Header Status :&quot; \n            + myDataGridTableStyle1.ColumnHeadersVisible.ToString();\n         if(myDataGridTableStyle1.ColumnHeadersVisible == true)\n         {\n            btnheader.Text = &quot;Remove Header&quot;;\n         }\n         else\n         {\n            btnheader.Text = &quot;Add Header&quot;;\n         }\n         AddCustomDataTableStyle();\n      } \n      private void AddCustomDataTableStyle()\n      {           \n         myDataGridTableStyle1.ColumnHeadersVisibleChanged \n            += new System.EventHandler(ColumnHeadersVisibleChanged_Handler);\n\n         // Set ColumnheaderVisible property.         \n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;;\n\n         // Add a GridColumnStyle and set its MappingName \n         DataGridColumnStyle myBoolCol = new DataGridBoolColumn();\n         myBoolCol.MappingName = &quot;Current&quot;;\n         myBoolCol.HeaderText = &quot;IsCurrent Customer&quot;;\n         myBoolCol.Width = 150;         \n         myDataGridTableStyle1.GridColumnStyles.Add(myBoolCol);\n      \n         // Add a second column style.\n         DataGridColumnStyle myTextCol = new DataGridTextBoxColumn();\n         myTextCol.MappingName = &quot;custName&quot;;\n         myTextCol.HeaderText = &quot;Customer Name&quot;;\n         myTextCol.Width = 250;\n         myDataGridTableStyle1.GridColumnStyles.Add(myTextCol);\n\n         // Create new ColumnStyle objects\n         DataGridColumnStyle cOrderDate = new DataGridTextBoxColumn();\n         cOrderDate.MappingName = &quot;OrderDate&quot;;\n         cOrderDate.HeaderText = &quot;Order Date&quot;;\n         cOrderDate.Width = 100;\n\n         // PropertyDescriptor to create a formatted column.\n         PropertyDescriptorCollection myPropertyDescriptorCollection = this.BindingContext\n            [myDataSet, &quot;Customers.custToOrders&quot;].GetItemProperties();\n \n         // Create a formatted column using a PropertyDescriptor.         \n         DataGridColumnStyle csOrderAmount = \n            new DataGridTextBoxColumn(myPropertyDescriptorCollection[&quot;OrderAmount&quot;], &quot;c&quot;, true);\n         csOrderAmount.MappingName = &quot;OrderAmount&quot;;\n         csOrderAmount.HeaderText = &quot;Total&quot;;\n         csOrderAmount.Width = 100;\n\n         // Add the DataGridTableStyle instances to GridTableStylesCollection.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1);              \n      }          \n      private void ColumnHeadersVisibleChanged_Handler(object sender,\n                                                            EventArgs e)\n      {         \n         myHeaderLabel.Text = &quot;Header Status :&quot; \n            + myDataGridTableStyle1.ColumnHeadersVisible.ToString();\n      }      \n      private void btnheader_Click(object sender, EventArgs e)\n      {\n         if(myDataGridTableStyle1.ColumnHeadersVisible == true)\n         {            \n            myDataGridTableStyle1.ColumnHeadersVisible = false;\n            btnheader.Text = &quot;Add Header&quot;;\n         }\n         else\n         {\n            myDataGridTableStyle1.ColumnHeadersVisible = true;\n            btnheader.Text = &quot;Remove Header&quot;;\n         }         \n     }     \n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_Sample3#2\">      Private Sub DataGridTableStyle_Sample_Load(ByVal sender As Object, _\n                                 ByVal e As EventArgs) Handles MyBase.Load\n         myDataGridTableStyle1 = New DataGridTableStyle()\n         myHeaderLabel.Text = &quot;Header Status :&quot; + myDataGridTableStyle1.ColumnHeadersVisible.ToString()\n         If myDataGridTableStyle1.ColumnHeadersVisible = True Then\n            btnheader.Text = &quot;Remove Header&quot;\n         Else\n            btnheader.Text = &quot;Add Header&quot;\n         End If\n         AddCustomDataTableStyle()\n      End Sub &#39;DataGridTableStyle_Sample_Load\n\n      Private Sub AddCustomDataTableStyle()\n         AddHandler myDataGridTableStyle1.ColumnHeadersVisibleChanged, AddressOf ColumnHeadersVisibleChanged_Handler\n\n         &#39; Set ColumnheaderVisible property.\n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;\n\n         &#39; Add a GridColumnStyle and set its MappingName\n         Dim myBoolCol = New DataGridBoolColumn()\n         myBoolCol.MappingName = &quot;Current&quot;\n         myBoolCol.HeaderText = &quot;IsCurrent Customer&quot;\n         myBoolCol.Width = 150\n         myDataGridTableStyle1.GridColumnStyles.Add(myBoolCol)\n\n         &#39; Add a second column style.\n         Dim myTextCol = New DataGridTextBoxColumn()\n         myTextCol.MappingName = &quot;custName&quot;\n         myTextCol.HeaderText = &quot;Customer Name&quot;\n         myTextCol.Width = 250\n         myDataGridTableStyle1.GridColumnStyles.Add(myTextCol)\n\n         &#39; Create new ColumnStyle objects\n         Dim cOrderDate = New DataGridTextBoxColumn()\n         cOrderDate.MappingName = &quot;OrderDate&quot;\n         cOrderDate.HeaderText = &quot;Order Date&quot;\n         cOrderDate.Width = 100\n\n         &#39; PropertyDescriptor to create a formatted column.\n         Dim myPropertyDescriptorCollection As PropertyDescriptorCollection = _\n               Me.BindingContext(myDataSet, &quot;Customers.custToOrders&quot;).GetItemProperties()\n\n         &#39; Create a formatted column using a PropertyDescriptor.\n         Dim csOrderAmount = New DataGridTextBoxColumn(myPropertyDescriptorCollection(&quot;OrderAmount&quot;), &quot;c&quot;, True)\n         csOrderAmount.MappingName = &quot;OrderAmount&quot;\n         csOrderAmount.HeaderText = &quot;Total&quot;\n         csOrderAmount.Width = 100\n\n         &#39; Add the DataGridTableStyle instances to GridTableStylesCollection.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1)\n      End Sub &#39;AddCustomDataTableStyle\n\n      Private Sub ColumnHeadersVisibleChanged_Handler(ByVal sender As Object, ByVal e As EventArgs)\n         myHeaderLabel.Text = &quot;Header Status :&quot; + myDataGridTableStyle1.ColumnHeadersVisible.ToString()\n      End Sub &#39;ColumnHeadersVisibleChanged_Handler\n\n      Private Sub btnheader_Click(ByVal sender As Object, ByVal e As EventArgs) Handles btnheader.Click\n         If myDataGridTableStyle1.ColumnHeadersVisible = True Then\n            myDataGridTableStyle1.ColumnHeadersVisible = False\n            btnheader.Text = &quot;Add Header&quot;\n         Else\n            myDataGridTableStyle1.ColumnHeadersVisible = True\n            btnheader.Text = &quot;Remove Header&quot;\n         End If\n      End Sub &#39;btnheader_Click\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_Sample3#2\">   private:\n      void DataGridTableStyle_Sample_Load( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         myDataGridTableStyle1 = gcnew DataGridTableStyle;\n         myHeaderLabel-&gt;Text = String::Concat( &quot;Header Status : &quot;, myDataGridTableStyle1-&gt;ColumnHeadersVisible );\n         if ( myDataGridTableStyle1-&gt;ColumnHeadersVisible == true )\n         {\n            btnheader-&gt;Text = &quot;Remove Header&quot;;\n         }\n         else\n         {\n            btnheader-&gt;Text = &quot;Add Header&quot;;\n         }\n\n         AddCustomDataTableStyle();\n      }\n\n      void AddCustomDataTableStyle()\n      {\n         myDataGridTableStyle1-&gt;ColumnHeadersVisibleChanged += gcnew System::EventHandler( this, &amp;DataGridTableStyle_Sample::ColumnHeadersVisibleChanged_Handler );\n\n         // Set ColumnheaderVisible property.\n         myDataGridTableStyle1-&gt;MappingName = &quot;Customers&quot;;\n\n         // Add a GridColumnStyle and set its MappingName\n         DataGridColumnStyle^ myBoolCol = gcnew DataGridBoolColumn;\n         myBoolCol-&gt;MappingName = &quot;Current&quot;;\n         myBoolCol-&gt;HeaderText = &quot;IsCurrent Customer&quot;;\n         myBoolCol-&gt;Width = 150;\n         myDataGridTableStyle1-&gt;GridColumnStyles-&gt;Add( myBoolCol );\n\n         // Add a second column style.\n         DataGridColumnStyle^ myTextCol = gcnew DataGridTextBoxColumn;\n         myTextCol-&gt;MappingName = &quot;custName&quot;;\n         myTextCol-&gt;HeaderText = &quot;Customer Name&quot;;\n         myTextCol-&gt;Width = 250;\n         myDataGridTableStyle1-&gt;GridColumnStyles-&gt;Add( myTextCol );\n\n         // Create new ColumnStyle objects\n         DataGridColumnStyle^ cOrderDate = gcnew DataGridTextBoxColumn;\n         cOrderDate-&gt;MappingName = &quot;OrderDate&quot;;\n         cOrderDate-&gt;HeaderText = &quot;Order Date&quot;;\n         cOrderDate-&gt;Width = 100;\n\n         // PropertyDescriptor to create a formatted column.\n         PropertyDescriptorCollection^ myPropertyDescriptorCollection =\n            this-&gt;BindingContext[myDataSet, &quot;Customers::custToOrders&quot;]-&gt;GetItemProperties();\n\n         // Create a formatted column using a PropertyDescriptor.\n         DataGridColumnStyle^ csOrderAmount =\n            gcnew DataGridTextBoxColumn( myPropertyDescriptorCollection[ &quot;OrderAmount&quot; ],&quot;c&quot;,true );\n         csOrderAmount-&gt;MappingName = &quot;OrderAmount&quot;;\n         csOrderAmount-&gt;HeaderText = &quot;Total&quot;;\n         csOrderAmount-&gt;Width = 100;\n\n         // Add the DataGridTableStyle instances to GridTableStylesCollection.\n         myDataGrid-&gt;TableStyles-&gt;Add( myDataGridTableStyle1 );\n      }\n\n      void ColumnHeadersVisibleChanged_Handler( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         myHeaderLabel-&gt;Text = String::Concat( &quot;Header Status : &quot;, myDataGridTableStyle1-&gt;ColumnHeadersVisible );\n      }\n\n      void btnheader_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         if ( myDataGridTableStyle1-&gt;ColumnHeadersVisible == true )\n         {\n            myDataGridTableStyle1-&gt;ColumnHeadersVisible = false;\n            btnheader-&gt;Text = &quot;Add Header&quot;;\n         }\n         else\n         {\n            myDataGridTableStyle1-&gt;ColumnHeadersVisible = true;\n            btnheader-&gt;Text = &quot;Remove Header&quot;;\n         }\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ForeColorChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ForeColorChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.ForeColor*</span> value changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler ForeColorChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ForeColorChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> named <code>DataGridTableStyle1</code>. Then ensure that the event handler is associated with the ForeColorChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#223\">private void DataGridTableStyle1_ForeColorChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridTableStyle.ForeColorChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#223\">Private Sub DataGridTableStyle1_ForeColorChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridTableStyle1.ForeColorChanged\n\n   MessageBox.Show(&quot;You are in the DataGridTableStyle.ForeColorChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_GridLineColorChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GridLineColorChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.GridLineColor*</span> value changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler GridLineColorChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridTableStyle_sample5#3\">      private void AddCustomDataTableStyle()\n      {\n         myDataGridTableStyle1 = new DataGridTableStyle();\n        \n         // EventHandlers          \n         myDataGridTableStyle1.GridLineColorChanged += new System.EventHandler(GridLineColorChanged_Handler);         \n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;;\n\n         // Set other properties.\n         myDataGridTableStyle1.AlternatingBackColor=System.Drawing.Color.Gold;\n         myDataGridTableStyle1.BackColor = System.Drawing.Color.White;\n         myDataGridTableStyle1.GridLineStyle=System.Windows.Forms.DataGridLineStyle.Solid;\n         myDataGridTableStyle1.GridLineColor=Color.Red;\n\n         // Set the HeaderText and Width properties. \n         DataGridColumnStyle myBoolCol = new DataGridBoolColumn();\n         myBoolCol.MappingName = &quot;Current&quot;;\n         myBoolCol.HeaderText = &quot;IsCurrent Customer&quot;;\n         myBoolCol.Width = 150;\n         myDataGridTableStyle1.GridColumnStyles.Add(myBoolCol);\n      \n         // Add a second column style.\n         DataGridColumnStyle myTextCol = new DataGridTextBoxColumn();\n         myTextCol.MappingName = &quot;custName&quot;;\n         myTextCol.HeaderText = &quot;Customer Name&quot;;\n         myTextCol.Width = 250;\n         myDataGridTableStyle1.GridColumnStyles.Add(myTextCol);\n\n         // Create new ColumnStyle objects\n         DataGridColumnStyle cOrderDate = new DataGridTextBoxColumn();\n         cOrderDate.MappingName = &quot;OrderDate&quot;;\n         cOrderDate.HeaderText = &quot;Order Date&quot;;\n         cOrderDate.Width = 100;\n\n         // Use a PropertyDescriptor to create a formatted column.\n         PropertyDescriptorCollection myPropertyDescriptorCollection = BindingContext\n            [myDataSet, &quot;Customers.custToOrders&quot;].GetItemProperties();\n \n         // Create a formatted column using a PropertyDescriptor.\n         DataGridColumnStyle csOrderAmount = \n            new DataGridTextBoxColumn(myPropertyDescriptorCollection[&quot;OrderAmount&quot;], &quot;c&quot;, true);\n         csOrderAmount.MappingName = &quot;OrderAmount&quot;;\n         csOrderAmount.HeaderText = &quot;Total&quot;;\n         csOrderAmount.Width = 100;\n              \n         // Add the DataGridTableStyle instances to the GridTableStylesCollection.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1);      \n      }      \n      private void GridLineColorChanged_Handler(object sender,EventArgs e)\n      {\n         MessageBox.Show(&quot;GridLineColor Changed&quot;, &quot;DataGridTableStyle&quot;);\n      }   \n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_sample5#3\">      Private Sub AddCustomDataTableStyle()\n         myDataGridTableStyle1 = New DataGridTableStyle()\n\n         &#39; EventHandlers\n         AddHandler myDataGridTableStyle1.GridLineColorChanged, AddressOf GridLineColorChanged_Handler\n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;\n\n         &#39; Set other properties.\n         myDataGridTableStyle1.AlternatingBackColor = System.Drawing.Color.Gold\n         myDataGridTableStyle1.BackColor = System.Drawing.Color.White\n         myDataGridTableStyle1.GridLineStyle = System.Windows.Forms.DataGridLineStyle.Solid\n         myDataGridTableStyle1.GridLineColor = Color.Red\n\n         &#39; Set the HeaderText and Width properties.\n         Dim myBoolCol = New DataGridBoolColumn()\n         myBoolCol.MappingName = &quot;Current&quot;\n         myBoolCol.HeaderText = &quot;IsCurrent Customer&quot;\n         myBoolCol.Width = 150\n         myDataGridTableStyle1.GridColumnStyles.Add(myBoolCol)\n\n         &#39; Add a second column style.\n         Dim myTextCol = New DataGridTextBoxColumn()\n         myTextCol.MappingName = &quot;custName&quot;\n         myTextCol.HeaderText = &quot;Customer Name&quot;\n         myTextCol.Width = 250\n         myDataGridTableStyle1.GridColumnStyles.Add(myTextCol)\n\n         &#39; Create new ColumnStyle objects\n         Dim cOrderDate = New DataGridTextBoxColumn()\n         cOrderDate.MappingName = &quot;OrderDate&quot;\n         cOrderDate.HeaderText = &quot;Order Date&quot;\n         cOrderDate.Width = 100\n\n         &#39; Use a PropertyDescriptor to create a formatted column.\n         Dim myPropertyDescriptorCollection As PropertyDescriptorCollection = _\n                        BindingContext(myDataSet, &quot;Customers.custToOrders&quot;).GetItemProperties()\n\n         &#39; Create a formatted column using a PropertyDescriptor.\n         Dim csOrderAmount = New DataGridTextBoxColumn(myPropertyDescriptorCollection( _\n                                                      &quot;OrderAmount&quot;), &quot;c&quot;, True)\n         csOrderAmount.MappingName = &quot;OrderAmount&quot;\n         csOrderAmount.HeaderText = &quot;Total&quot;\n         csOrderAmount.Width = 100\n\n         &#39; Add the DataGridTableStyle instances to the GridTableStylesCollection.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1)\n      End Sub &#39;AddCustomDataTableStyle\n\n      Private Sub GridLineColorChanged_Handler(ByVal sender As Object, ByVal e As EventArgs)\n         MessageBox.Show(&quot;GridLineColor Changed&quot;, &quot;DataGridTableStyle&quot;)\n      End Sub &#39;GridLineColorChanged_Handler\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_sample5#3\">private:\n   void AddCustomDataTableStyle()\n   {\n      myDataGridTableStyle1 = gcnew DataGridTableStyle;\n\n      // EventHandlers\n      myDataGridTableStyle1-&gt;GridLineColorChanged += gcnew System::EventHandler( this, &amp;DataGridTableStyle_Sample::GridLineColorChanged_Handler );\n      myDataGridTableStyle1-&gt;MappingName = &quot;Customers&quot;;\n\n      // Set other properties.\n      myDataGridTableStyle1-&gt;AlternatingBackColor = System::Drawing::Color::Gold;\n      myDataGridTableStyle1-&gt;BackColor = System::Drawing::Color::White;\n      myDataGridTableStyle1-&gt;GridLineStyle = System::Windows::Forms::DataGridLineStyle::Solid;\n      myDataGridTableStyle1-&gt;GridLineColor = Color::Red;\n\n      // Set the HeaderText and Width properties.\n      DataGridColumnStyle^ myBoolCol = gcnew DataGridBoolColumn;\n      myBoolCol-&gt;MappingName = &quot;Current&quot;;\n      myBoolCol-&gt;HeaderText = &quot;IsCurrent Customer&quot;;\n      myBoolCol-&gt;Width = 150;\n      myDataGridTableStyle1-&gt;GridColumnStyles-&gt;Add( myBoolCol );\n\n      // Add a second column style.\n      DataGridColumnStyle^ myTextCol = gcnew DataGridTextBoxColumn;\n      myTextCol-&gt;MappingName = &quot;custName&quot;;\n      myTextCol-&gt;HeaderText = &quot;Customer Name&quot;;\n      myTextCol-&gt;Width = 250;\n      myDataGridTableStyle1-&gt;GridColumnStyles-&gt;Add( myTextCol );\n\n      // Create new ColumnStyle objects\n      DataGridColumnStyle^ cOrderDate = gcnew DataGridTextBoxColumn;\n      cOrderDate-&gt;MappingName = &quot;OrderDate&quot;;\n      cOrderDate-&gt;HeaderText = &quot;Order Date&quot;;\n      cOrderDate-&gt;Width = 100;\n\n      // Use a PropertyDescriptor to create a formatted column.\n      PropertyDescriptorCollection^ myPropertyDescriptorCollection =\n         BindingContext[myDataSet, &quot;Customers::custToOrders&quot;]-&gt;GetItemProperties();\n\n      // Create a formatted column using a PropertyDescriptor.\n      DataGridColumnStyle^ csOrderAmount = gcnew DataGridTextBoxColumn( myPropertyDescriptorCollection[ &quot;OrderAmount&quot; ],&quot;c&quot;,true );\n      csOrderAmount-&gt;MappingName = &quot;OrderAmount&quot;;\n      csOrderAmount-&gt;HeaderText = &quot;Total&quot;;\n      csOrderAmount-&gt;Width = 100;\n\n      // Add the DataGridTableStyle instances to the GridTableStylesCollection.\n      myDataGrid-&gt;TableStyles-&gt;Add( myDataGridTableStyle1 );\n   }\n\n   void GridLineColorChanged_Handler( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      MessageBox::Show( &quot;GridLineColor Changed&quot;, &quot;DataGridTableStyle&quot; );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_GridLineStyleChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GridLineStyleChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.GridLineStyle*</span> value changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler GridLineStyleChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridTableStyle_sample1#2\">      private void AddCustomDataTableStyle()\n      {\n         myDataGridTableStyle1 = new DataGridTableStyle();\n         myDataGridTableStyle1.MappingNameChanged+=\n            new System.EventHandler(MappingNameChanged_Handler);\n         myDataGridTableStyle1.GridLineStyleChanged += \n            new System.EventHandler(GridLineStyleChanged_Handler);\n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;;\n\n         // Set other properties.\n         myDataGridTableStyle1.AlternatingBackColor = Color.LightGray;\n         myDataGridTableStyle1.GridLineStyle=\n            System.Windows.Forms.DataGridLineStyle.None;\n\n         // Add a GridColumnStyle and set its MappingName.          \n         DataGridColumnStyle myBoolCol = new DataGridBoolColumn();\n         myBoolCol.MappingName = &quot;Current&quot;;\n         myBoolCol.HeaderText = &quot;IsCurrent Customer&quot;;\n         myBoolCol.Width = 150;\n         myDataGridTableStyle1.GridColumnStyles.Add(myBoolCol);\n      \n         // Add a second column style.\n         DataGridColumnStyle myTextCol = new DataGridTextBoxColumn();\n         myTextCol.MappingName = &quot;custName&quot;;\n         myTextCol.HeaderText = &quot;Customer Name&quot;;\n         myTextCol.Width = 250;\n         myDataGridTableStyle1.GridColumnStyles.Add(myTextCol);\n\n         // Create new ColumnStyle objects.\n         DataGridColumnStyle cOrderDate = new DataGridTextBoxColumn();\n         cOrderDate.MappingName = &quot;OrderDate&quot;;\n         cOrderDate.HeaderText = &quot;Order Date&quot;;\n         cOrderDate.Width = 100;\n\n         // Use PropertyDescriptor to create a formatted column.         \n         PropertyDescriptorCollection myPropertyDescriptorCollection = this.BindingContext\n            [myDataSet, &quot;Customers.custToOrders&quot;].GetItemProperties();         \n         DataGridColumnStyle csOrderAmount = \n            new DataGridTextBoxColumn(myPropertyDescriptorCollection[&quot;OrderAmount&quot;], &quot;c&quot;, true);\n         csOrderAmount.MappingName = &quot;OrderAmount&quot;;\n         csOrderAmount.HeaderText = &quot;Total&quot;;\n         csOrderAmount.Width = 100;\n              \n         // Add the DataGridTableStyle object to GridTableStylesCollection.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1);      \n      }\n      private void MappingNameChanged_Handler(object sender,EventArgs e)\n      {         \n         MessageBox.Show(&quot;MappingName Changed&quot;, &quot;DataGridTableStyle&quot;);\n      }\n      private void GridLineStyleChanged_Handler(object sender,EventArgs e)\n      {\n         MessageBox.Show(&quot;GridLineStyle  Changed&quot;, &quot;DataGridTableStyle&quot;);\n      }    \n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_sample1#2\">      Private Sub AddCustomDataTableStyle()\n         myDataGridTableStyle1 = New DataGridTableStyle()\n         AddHandler myDataGridTableStyle1.MappingNameChanged, AddressOf MappingNameChanged_Handler\n         AddHandler myDataGridTableStyle1.GridLineStyleChanged, AddressOf GridLineStyleChanged_Handler\n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;\n\n         &#39; Set other properties.\n         myDataGridTableStyle1.AlternatingBackColor = Color.LightGray\n         myDataGridTableStyle1.GridLineStyle = System.Windows.Forms.DataGridLineStyle.None\n\n         &#39; Add a GridColumnStyle and set its MappingName.\n         Dim myBoolCol = New DataGridBoolColumn()\n         myBoolCol.MappingName = &quot;Current&quot;\n         myBoolCol.HeaderText = &quot;IsCurrent Customer&quot;\n         myBoolCol.Width = 150\n         myDataGridTableStyle1.GridColumnStyles.Add(myBoolCol)\n\n         &#39; Add a second column style.\n         Dim myTextCol = New DataGridTextBoxColumn()\n         myTextCol.MappingName = &quot;custName&quot;\n         myTextCol.HeaderText = &quot;Customer Name&quot;\n         myTextCol.Width = 250\n         myDataGridTableStyle1.GridColumnStyles.Add(myTextCol)\n\n         &#39; Create new ColumnStyle objects.\n         Dim cOrderDate = New DataGridTextBoxColumn()\n         cOrderDate.MappingName = &quot;OrderDate&quot;\n         cOrderDate.HeaderText = &quot;Order Date&quot;\n         cOrderDate.Width = 100\n\n         &#39; Use PropertyDescriptor to create a formatted column.\n         Dim myPropertyDescriptorCollection As PropertyDescriptorCollection = _\n                     Me.BindingContext(myDataSet, &quot;Customers.custToOrders&quot;).GetItemProperties()\n         Dim csOrderAmount = New DataGridTextBoxColumn _\n                  (myPropertyDescriptorCollection(&quot;OrderAmount&quot;), &quot;c&quot;, True)\n         csOrderAmount.MappingName = &quot;OrderAmount&quot;\n         csOrderAmount.HeaderText = &quot;Total&quot;\n         csOrderAmount.Width = 100\n\n         &#39; Add the DataGridTableStyle object to GridTableStylesCollection.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1)\n      End Sub &#39;AddCustomDataTableStyle\n\n      Private Sub MappingNameChanged_Handler(ByVal sender As Object, ByVal e As EventArgs)\n         MessageBox.Show(&quot;MappingName Changed&quot;, &quot;DataGridTableStyle&quot;)\n      End Sub &#39;MappingNameChanged_Handler\n\n      Private Sub GridLineStyleChanged_Handler(ByVal sender As Object, ByVal e As EventArgs)\n         MessageBox.Show(&quot;GridLineStyle  Changed&quot;, &quot;DataGridTableStyle&quot;)\n      End Sub &#39;GridLineStyleChanged_Handler\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_sample1#2\">   private:\n      void AddCustomDataTableStyle()\n      {\n         myDataGridTableStyle1 = gcnew DataGridTableStyle;\n         myDataGridTableStyle1-&gt;MappingNameChanged += gcnew System::EventHandler( this, &amp;DataGridTableStyle_Sample::MappingNameChanged_Handler );\n         myDataGridTableStyle1-&gt;GridLineStyleChanged += gcnew System::EventHandler( this, &amp;DataGridTableStyle_Sample::GridLineStyleChanged_Handler );\n         myDataGridTableStyle1-&gt;MappingName = &quot;Customers&quot;;\n\n         // Set other properties.\n         myDataGridTableStyle1-&gt;AlternatingBackColor = Color::LightGray;\n         myDataGridTableStyle1-&gt;GridLineStyle = System::Windows::Forms::DataGridLineStyle::None;\n\n         // Add a GridColumnStyle and set its MappingName.\n         DataGridColumnStyle^ myBoolCol = gcnew DataGridBoolColumn;\n         myBoolCol-&gt;MappingName = &quot;Current&quot;;\n         myBoolCol-&gt;HeaderText = &quot;IsCurrent Customer&quot;;\n         myBoolCol-&gt;Width = 150;\n         myDataGridTableStyle1-&gt;GridColumnStyles-&gt;Add( myBoolCol );\n\n         // Add a second column style.\n         DataGridColumnStyle^ myTextCol = gcnew DataGridTextBoxColumn;\n         myTextCol-&gt;MappingName = &quot;custName&quot;;\n         myTextCol-&gt;HeaderText = &quot;Customer Name&quot;;\n         myTextCol-&gt;Width = 250;\n         myDataGridTableStyle1-&gt;GridColumnStyles-&gt;Add( myTextCol );\n\n         // Create new ColumnStyle objects.\n         DataGridColumnStyle^ cOrderDate = gcnew DataGridTextBoxColumn;\n         cOrderDate-&gt;MappingName = &quot;OrderDate&quot;;\n         cOrderDate-&gt;HeaderText = &quot;Order Date&quot;;\n         cOrderDate-&gt;Width = 100;\n\n         // Use PropertyDescriptor to create a formatted column.\n         PropertyDescriptorCollection^ myPropertyDescriptorCollection = this-&gt;BindingContext[myDataSet, &quot;Customers::custToOrders&quot;]-&gt;GetItemProperties();\n         DataGridColumnStyle^ csOrderAmount = gcnew DataGridTextBoxColumn( myPropertyDescriptorCollection[ &quot;OrderAmount&quot; ],&quot;c&quot;,true );\n         csOrderAmount-&gt;MappingName = &quot;OrderAmount&quot;;\n         csOrderAmount-&gt;HeaderText = &quot;Total&quot;;\n         csOrderAmount-&gt;Width = 100;\n\n         // Add the DataGridTableStyle Object* to GridTableStylesCollection.\n         myDataGrid-&gt;TableStyles-&gt;Add( myDataGridTableStyle1 );\n      }\n\n      void MappingNameChanged_Handler( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         MessageBox::Show( &quot;MappingName Changed&quot;, &quot;DataGridTableStyle&quot; );\n      }\n\n      void GridLineStyleChanged_Handler( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         MessageBox::Show( &quot;GridLineStyle  Changed&quot;, &quot;DataGridTableStyle&quot; );\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_HeaderBackColorChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HeaderBackColorChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.HeaderBackColor*</span> value changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler HeaderBackColorChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_Header_4#3\">   private:\n      void Create_Table()\n      {\n         // Create DataSet.\n         myDataSet = gcnew DataSet( &quot;myDataSet&quot; );\n\n         // Create DataTable.\n         DataTable^ myCustomerTable = gcnew DataTable( &quot;Customers&quot; );\n\n         // Create two columns, and add them to the table.\n         DataColumn^ CustID = gcnew DataColumn( &quot;CustID&quot;,int::typeid );\n         DataColumn^ CustName = gcnew DataColumn( &quot;CustName&quot; );\n         myCustomerTable-&gt;Columns-&gt;Add( CustID );\n         myCustomerTable-&gt;Columns-&gt;Add( CustName );\n\n         // Add table to DataSet.\n         myDataSet-&gt;Tables-&gt;Add( myCustomerTable );\n         dataGrid1-&gt;SetDataBinding( myDataSet, &quot;Customers&quot; );\n         myTableStyle = gcnew DataGridTableStyle;\n         myTableStyle-&gt;MappingName = &quot;Customers&quot;;\n         myTableStyle-&gt;HeaderBackColorChanged += gcnew System::EventHandler( this, &amp;Form1::HeaderBackColorChangedHandler );\n         myTableStyle-&gt;HeaderForeColorChanged += gcnew System::EventHandler( this, &amp;Form1::HeaderForeColorChangedHandler );\n      }\n\n      // Change header background color.\n      void OnHeaderBackColor_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n      {\n         dataGrid1-&gt;TableStyles-&gt;Clear();\n         String^ str = dynamic_cast&lt;String^&gt;(comboBox1-&gt;SelectedItem);\n         if ( str-&gt;Equals( &quot;Red&quot; ) )\n                  myTableStyle-&gt;ForeColor = Color::Red;\n         else\n         if ( str-&gt;Equals( &quot;Yellow&quot; ) )\n                  myTableStyle-&gt;ForeColor = Color::Yellow;\n         else\n         if ( str-&gt;Equals( &quot;Blue&quot; ) )\n                  myTableStyle-&gt;ForeColor = Color::Blue;\n\n         myTableStyle-&gt;AlternatingBackColor = Color::LightGray;\n         dataGrid1-&gt;TableStyles-&gt;Add( myTableStyle );\n      }\n\n      void HeaderBackColorChangedHandler( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         MessageBox::Show( String::Concat( &quot;Changed Header Background color to : &quot;, comboBox1-&gt;SelectedItem ), &quot;Success&quot;, MessageBoxButtons::OK, MessageBoxIcon::Exclamation );\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridTableStyle_Header_4#3\">      private void Create_Table()\n      {\n         // Create DataSet.\n         myDataSet = new DataSet(&quot;myDataSet&quot;);\n         // Create DataTable.\n         DataTable myCustomerTable = new DataTable(&quot;Customers&quot;);\n         // Create two columns, and add them to the table.\n         DataColumn CustID = new DataColumn(&quot;CustID&quot;, typeof(int));\n         DataColumn CustName = new DataColumn(&quot;CustName&quot;);\n         myCustomerTable.Columns.Add(CustID);\n         myCustomerTable.Columns.Add(CustName);\n         // Add table to DataSet.\n         myDataSet.Tables.Add(myCustomerTable);\n         dataGrid1.SetDataBinding(myDataSet,&quot;Customers&quot;);\n         myTableStyle = new DataGridTableStyle();\n         myTableStyle.MappingName = &quot;Customers&quot;;\n         myTableStyle.HeaderBackColorChanged += \n            new System.EventHandler(HeaderBackColorChangedHandler); \n         myTableStyle.HeaderForeColorChanged +=\n            new System.EventHandler(HeaderForeColorChangedHandler); \n      }\n      \n      // Change header background color.\n      private void OnHeaderBackColor_Click(object sender, System.EventArgs e)\n      {\n         dataGrid1.TableStyles.Clear ();\n         switch(comboBox1.SelectedItem.ToString())\n         {\n            case &quot;Red&quot;:\n               myTableStyle.HeaderBackColor = Color.Red;\n               break;\n            case &quot;Yellow&quot;:\n               myTableStyle.HeaderBackColor = Color.Yellow ;\n               break;\n            case &quot;Blue&quot;:\n               myTableStyle.HeaderBackColor = Color.Blue ;\n               break;\n         }\n         myTableStyle.AlternatingBackColor = Color.LightGray;\n         dataGrid1.TableStyles.Add(myTableStyle);\n      }\n\n      private void HeaderBackColorChangedHandler(object sender,EventArgs e)\n      {\n         MessageBox.Show(&quot;Changed Header Background color to : &quot; + \n         comboBox1.SelectedItem.ToString(),&quot;Success&quot;, MessageBoxButtons.OK, \n         MessageBoxIcon.Exclamation);\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_Header_4#3\">      Private Sub Create_Table()\n         &#39; Create DataSet.\n         myDataSet = New DataSet(&quot;myDataSet&quot;)\n         &#39; Create DataTable.\n         Dim myCustomerTable As New DataTable(&quot;Customers&quot;)\n         &#39; Create two columns, and add them to the table.\n         Dim CustID As New DataColumn(&quot;CustID&quot;, GetType(Integer))\n         Dim CustName As New DataColumn(&quot;CustName&quot;)\n         myCustomerTable.Columns.Add(CustID)\n         myCustomerTable.Columns.Add(CustName)\n         &#39; Add table to DataSet.\n         myDataSet.Tables.Add(myCustomerTable)\n         dataGrid1.SetDataBinding(myDataSet, &quot;Customers&quot;)\n         myTableStyle = New DataGridTableStyle()\n         myTableStyle.MappingName = &quot;Customers&quot;\n         AddHandler myTableStyle.HeaderBackColorChanged, AddressOf HeaderBackColorChangedHandler\n         AddHandler myTableStyle.HeaderForeColorChanged, AddressOf HeaderForeColorChangedHandler\n      End Sub &#39;Create_Table\n      \n      \n      &#39; Change header background color.\n      Private Sub OnHeaderBackColor_Click(sender As Object, e As System.EventArgs) Handles button1.Click\n         dataGrid1.TableStyles.Clear()\n         Select Case comboBox1.SelectedItem.ToString()\n            Case &quot;Red&quot;\n               myTableStyle.HeaderBackColor = Color.Red\n            Case &quot;Yellow&quot;\n               myTableStyle.HeaderBackColor = Color.Yellow\n            Case &quot;Blue&quot;\n               myTableStyle.HeaderBackColor = Color.Blue\n         End Select\n         myTableStyle.AlternatingBackColor = Color.LightGray\n         dataGrid1.TableStyles.Add(myTableStyle)\n      End Sub &#39;OnHeaderBackColor_Click\n      \n        Private Sub HeaderBackColorChangedHandler(ByVal sender As Object, ByVal e As EventArgs)\n            MessageBox.Show(&quot;Changed Header Background color to : &quot; + comboBox1.SelectedItem.ToString(), &quot;Success&quot;, MessageBoxButtons.OK, MessageBoxIcon.Exclamation)\n        End Sub &#39;HeaderBackColorChangedHandler\n      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_HeaderFontChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HeaderFontChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.HeaderFont*</span> value changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler HeaderFontChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridTableStyle_Sample#4\">      private void AddCustomDataTableStyle()\n      {\n         myDataGridTableStyle1 = new DataGridTableStyle();\n         myDataGridTableStyle2 = new DataGridTableStyle();\n\n         MessageBox.Show(&quot;LinkColor Before : &quot;\n            +myDataGridTableStyle1.LinkColor);\n         MessageBox.Show(&quot;HeaderFont Before : &quot;\n            +myDataGridTableStyle1.HeaderFont);\n         \n         myDataGridTableStyle1.LinkColorChanged +=\n            new System.EventHandler(LinkColorChanged_Handler);\n         myDataGridTableStyle1.HeaderFontChanged \n            += new System.EventHandler(HeaderFontChanged_Handler);\n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;;\n\n         // Set other properties.\n         myDataGridTableStyle1.AlternatingBackColor = Color.LightGray;\n         myDataGridTableStyle1.LinkColor = Color.Red;         \n         myDataGridTableStyle1.HeaderFont = \n            new System.Drawing.Font(&quot;Verdana&quot;,\n               8.25F,\n               System.Drawing.FontStyle.Bold, \n               System.Drawing.GraphicsUnit.Point,\n               ((System.Byte)(0)));\n\n         // Add a GridColumnStyle and set its MappingName.             \n         DataGridColumnStyle myBoolCol = new DataGridBoolColumn();\n         myBoolCol.MappingName = &quot;Current&quot;;\n         myBoolCol.HeaderText = &quot;IsCurrent Customer&quot;;\n         myBoolCol.Width = 150;\n         myDataGridTableStyle1.GridColumnStyles.Add(myBoolCol);\n      \n         // Add a second column style.\n         DataGridColumnStyle myTextCol = new DataGridTextBoxColumn();\n         myTextCol.MappingName = &quot;custName&quot;;\n         myTextCol.HeaderText = &quot;Customer Name&quot;;\n         myTextCol.Width = 250;\n         myDataGridTableStyle1.GridColumnStyles.Add(myTextCol);\n\n         // Create new ColumnStyle objects\n         DataGridColumnStyle cOrderDate = new DataGridTextBoxColumn();\n         cOrderDate.MappingName = &quot;OrderDate&quot;;\n         cOrderDate.HeaderText = &quot;Order Date&quot;;\n         cOrderDate.Width = 100;\n\n         // PropertyDescriptor to create a formatted column.\n         PropertyDescriptorCollection myPropertyDescriptorCollection = this.BindingContext\n            [myDataSet, &quot;Customers.custToOrders&quot;].GetItemProperties(); \n         \n         DataGridColumnStyle csOrderAmount = \n            new DataGridTextBoxColumn(myPropertyDescriptorCollection[&quot;OrderAmount&quot;], &quot;c&quot;, true);\n         csOrderAmount.MappingName = &quot;OrderAmount&quot;;\n         csOrderAmount.HeaderText = &quot;Total&quot;;\n         csOrderAmount.Width = 100;\n              \n         // Add the DataGridTableStyle instances to GridTableStylesCollection.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1);\n      \n      }\n      private void LinkColorChanged_Handler(object sender,EventArgs e)\n      {         \n        MessageBox.Show(&quot;LinkColor changed to &#39;RED&#39;&quot;, &quot;DataGridTableStyle&quot;);\n      }\n\n      private void HeaderFontChanged_Handler(object sender,EventArgs e)\n      {                  \n         MessageBox.Show(&quot;HeaderFont changed to &#39;VERDANA&#39;&quot;,\n            &quot;DataGridTableStyle&quot;);\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_Sample#4\">      Private Sub AddCustomDataTableStyle()\n         myDataGridTableStyle1 = New DataGridTableStyle()\n         myDataGridTableStyle2 = New DataGridTableStyle()\n\n         MessageBox.Show(&quot;LinkColor Before : &quot; &amp; myDataGridTableStyle1.LinkColor.ToString)\n         MessageBox.Show(&quot;HeaderFont Before : &quot; &amp; myDataGridTableStyle1.HeaderFont.ToString)\n\n         AddHandler myDataGridTableStyle1.LinkColorChanged, AddressOf LinkColorChanged_Handler\n         AddHandler myDataGridTableStyle1.HeaderFontChanged, AddressOf HeaderFontChanged_Handler\n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;\n\n         &#39; Set other properties.\n         myDataGridTableStyle1.AlternatingBackColor = Color.LightGray\n         myDataGridTableStyle1.LinkColor = Color.Red\n         myDataGridTableStyle1.HeaderFont = New System.Drawing.Font _\n                  (&quot;Verdana&quot;, 8.25F, System.Drawing.FontStyle.Bold, _\n                   System.Drawing.GraphicsUnit.Point, CType(0, System.Byte))\n\n         &#39; Add a GridColumnStyle and set its MappingName.\n         Dim myBoolCol = New DataGridBoolColumn()\n         myBoolCol.MappingName = &quot;Current&quot;\n         myBoolCol.HeaderText = &quot;IsCurrent Customer&quot;\n         myBoolCol.Width = 150\n         myDataGridTableStyle1.GridColumnStyles.Add(myBoolCol)\n\n         &#39; Add a second column style.\n         Dim myTextCol = New DataGridTextBoxColumn()\n         myTextCol.MappingName = &quot;custName&quot;\n         myTextCol.HeaderText = &quot;Customer Name&quot;\n         myTextCol.Width = 250\n         myDataGridTableStyle1.GridColumnStyles.Add(myTextCol)\n\n         &#39; Create new ColumnStyle objects\n         Dim cOrderDate = New DataGridTextBoxColumn()\n         cOrderDate.MappingName = &quot;OrderDate&quot;\n         cOrderDate.HeaderText = &quot;Order Date&quot;\n         cOrderDate.Width = 100\n\n         &#39; PropertyDescriptor to create a formatted column.\n         Dim myPropertyDescriptorCollection As PropertyDescriptorCollection = _\n                  Me.BindingContext(myDataSet, &quot;Customers.custToOrders&quot;).GetItemProperties()\n\n         Dim csOrderAmount = New DataGridTextBoxColumn(myPropertyDescriptorCollection _\n                                 (&quot;OrderAmount&quot;), &quot;c&quot;, True)\n         csOrderAmount.MappingName = &quot;OrderAmount&quot;\n         csOrderAmount.HeaderText = &quot;Total&quot;\n         csOrderAmount.Width = 100\n\n         &#39; Add the DataGridTableStyle instances to GridTableStylesCollection.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1)\n      End Sub &#39;AddCustomDataTableStyle\n\n      Private Sub LinkColorChanged_Handler(ByVal sender As Object, ByVal e As EventArgs)\n         MessageBox.Show(&quot;LinkColor changed to &#39;RED&#39;&quot;, &quot;DataGridTableStyle&quot;)\n      End Sub &#39;LinkColorChanged_Handler\n\n\n      Private Sub HeaderFontChanged_Handler(ByVal sender As Object, ByVal e As EventArgs)\n         MessageBox.Show(&quot;HeaderFont changed to &#39;VERDANA&#39;&quot;, &quot;DataGridTableStyle&quot;)\n      End Sub &#39;HeaderFontChanged_Handler\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_Sample#4\">   private:\n      void AddCustomDataTableStyle()\n      {\n         myDataGridTableStyle1 = gcnew DataGridTableStyle;\n         myDataGridTableStyle2 = gcnew DataGridTableStyle;\n         MessageBox::Show( String::Concat( &quot;LinkColor Before : &quot;, myDataGridTableStyle1-&gt;LinkColor ) );\n         MessageBox::Show( String::Concat( &quot;HeaderFont Before : &quot;, myDataGridTableStyle1-&gt;HeaderFont ) );\n         myDataGridTableStyle1-&gt;LinkColorChanged += gcnew System::EventHandler( this, &amp;DataGridTableStyle_Sample::LinkColorChanged_Handler );\n         myDataGridTableStyle1-&gt;HeaderFontChanged += gcnew System::EventHandler( this, &amp;DataGridTableStyle_Sample::HeaderFontChanged_Handler );\n         myDataGridTableStyle1-&gt;MappingName = &quot;Customers&quot;;\n\n         // Set other properties.\n         myDataGridTableStyle1-&gt;AlternatingBackColor = Color::LightGray;\n         myDataGridTableStyle1-&gt;LinkColor = Color::Red;\n         myDataGridTableStyle1-&gt;HeaderFont = gcnew System::Drawing::Font( &quot;Verdana&quot;,8.25F,System::Drawing::FontStyle::Bold,System::Drawing::GraphicsUnit::Point,((System::Byte)(0)) );\n\n         // Add a GridColumnStyle and set its MappingName.\n         DataGridColumnStyle^ myBoolCol = gcnew DataGridBoolColumn;\n         myBoolCol-&gt;MappingName = &quot;Current&quot;;\n         myBoolCol-&gt;HeaderText = &quot;IsCurrent Customer&quot;;\n         myBoolCol-&gt;Width = 150;\n         myDataGridTableStyle1-&gt;GridColumnStyles-&gt;Add( myBoolCol );\n\n         // Add a second column style.\n         DataGridColumnStyle^ myTextCol = gcnew DataGridTextBoxColumn;\n         myTextCol-&gt;MappingName = &quot;custName&quot;;\n         myTextCol-&gt;HeaderText = &quot;Customer Name&quot;;\n         myTextCol-&gt;Width = 250;\n         myDataGridTableStyle1-&gt;GridColumnStyles-&gt;Add( myTextCol );\n\n         // Create new ColumnStyle objects\n         DataGridColumnStyle^ cOrderDate = gcnew DataGridTextBoxColumn;\n         cOrderDate-&gt;MappingName = &quot;OrderDate&quot;;\n         cOrderDate-&gt;HeaderText = &quot;Order Date&quot;;\n         cOrderDate-&gt;Width = 100;\n\n         // PropertyDescriptor to create a formatted column.\n         PropertyDescriptorCollection^ myPropertyDescriptorCollection = this-&gt;BindingContext[myDataSet, &quot;Customers.custToOrders&quot;]-&gt;GetItemProperties();\n         DataGridColumnStyle^ csOrderAmount = gcnew DataGridTextBoxColumn( myPropertyDescriptorCollection[ &quot;OrderAmount&quot; ],&quot;c&quot;,true );\n         csOrderAmount-&gt;MappingName = &quot;OrderAmount&quot;;\n         csOrderAmount-&gt;HeaderText = &quot;Total&quot;;\n         csOrderAmount-&gt;Width = 100;\n\n         // Add the DataGridTableStyle instances to GridTableStylesCollection.\n         myDataGrid-&gt;TableStyles-&gt;Add( myDataGridTableStyle1 );\n      }\n\n      void LinkColorChanged_Handler( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         MessageBox::Show( &quot;LinkColor changed to &#39;RED&#39;&quot;, &quot;DataGridTableStyle&quot; );\n      }\n\n      void HeaderFontChanged_Handler( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         MessageBox::Show( &quot;HeaderFont changed to &#39;VERDANA&#39;&quot;, &quot;DataGridTableStyle&quot; );\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_HeaderForeColorChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HeaderForeColorChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.HeaderForeColor*</span> value changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler HeaderForeColorChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_Header_4#1\">   private:\n      void Create_Table()\n      {\n         // Create DataSet.\n         myDataSet = gcnew DataSet( &quot;myDataSet&quot; );\n\n         // Create DataTable.\n         DataTable^ myCustomerTable = gcnew DataTable( &quot;Customers&quot; );\n\n         // Create two columns, and add them to the table.\n         DataColumn^ CustID = gcnew DataColumn( &quot;CustID&quot;,int::typeid );\n         DataColumn^ CustName = gcnew DataColumn( &quot;CustName&quot; );\n         myCustomerTable-&gt;Columns-&gt;Add( CustID );\n         myCustomerTable-&gt;Columns-&gt;Add( CustName );\n\n         // Add table to DataSet.\n         myDataSet-&gt;Tables-&gt;Add( myCustomerTable );\n         dataGrid1-&gt;SetDataBinding( myDataSet, &quot;Customers&quot; );\n         myTableStyle = gcnew DataGridTableStyle;\n         myTableStyle-&gt;MappingName = &quot;Customers&quot;;\n         myTableStyle-&gt;HeaderBackColorChanged += gcnew System::EventHandler( this, &amp;Form1::HeaderBackColorChangedHandler );\n         myTableStyle-&gt;HeaderForeColorChanged += gcnew System::EventHandler( this, &amp;Form1::HeaderForeColorChangedHandler );\n      }\n\n      // Change header background color.\n      void OnHeaderBackColor_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n      {\n         dataGrid1-&gt;TableStyles-&gt;Clear();\n         String^ str = dynamic_cast&lt;String^&gt;(comboBox1-&gt;SelectedItem);\n         if ( str-&gt;Equals( &quot;Red&quot; ) )\n                  myTableStyle-&gt;ForeColor = Color::Red;\n         else\n         if ( str-&gt;Equals( &quot;Yellow&quot; ) )\n                  myTableStyle-&gt;ForeColor = Color::Yellow;\n         else\n         if ( str-&gt;Equals( &quot;Blue&quot; ) )\n                  myTableStyle-&gt;ForeColor = Color::Blue;\n\n         myTableStyle-&gt;AlternatingBackColor = Color::LightGray;\n         dataGrid1-&gt;TableStyles-&gt;Add( myTableStyle );\n      }\n\n      void HeaderBackColorChangedHandler( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         MessageBox::Show( String::Concat( &quot;Changed Header Background color to : &quot;, comboBox1-&gt;SelectedItem ), &quot;Success&quot;, MessageBoxButtons::OK, MessageBoxIcon::Exclamation );\n      }\n\n      // Change header forecolor.\n      void OnHeaderForeColor_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n      {\n         dataGrid1-&gt;TableStyles-&gt;Clear();\n         String^ str = dynamic_cast&lt;String^&gt;(comboBox1-&gt;SelectedItem);\n         if ( str-&gt;Equals( &quot;Green&quot; ) )\n                  myTableStyle-&gt;ForeColor = Color::Green;\n         else\n         if ( str-&gt;Equals( &quot;White&quot; ) )\n                  myTableStyle-&gt;ForeColor = Color::White;\n         else\n         if ( str-&gt;Equals( &quot;Violet&quot; ) )\n                  myTableStyle-&gt;ForeColor = Color::Violet;\n\n         myTableStyle-&gt;AlternatingBackColor = Color::LightGray;\n         dataGrid1-&gt;TableStyles-&gt;Add( myTableStyle );\n      }\n\n      void HeaderForeColorChangedHandler( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         MessageBox::Show( String::Concat( &quot;Changed Header Fore color to : &quot;, comboBox2-&gt;SelectedItem ), &quot;Success&quot;, MessageBoxButtons::OK, MessageBoxIcon::Exclamation );\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridTableStyle_Header_4#1\">      private void Create_Table()\n      {\n         // Create DataSet.\n         myDataSet = new DataSet(&quot;myDataSet&quot;);\n         // Create DataTable.\n         DataTable myCustomerTable = new DataTable(&quot;Customers&quot;);\n         // Create two columns, and add them to the table.\n         DataColumn CustID = new DataColumn(&quot;CustID&quot;, typeof(int));\n         DataColumn CustName = new DataColumn(&quot;CustName&quot;);\n         myCustomerTable.Columns.Add(CustID);\n         myCustomerTable.Columns.Add(CustName);\n         // Add table to DataSet.\n         myDataSet.Tables.Add(myCustomerTable);\n         dataGrid1.SetDataBinding(myDataSet,&quot;Customers&quot;);\n         myTableStyle = new DataGridTableStyle();\n         myTableStyle.MappingName = &quot;Customers&quot;;\n         myTableStyle.HeaderBackColorChanged += \n            new System.EventHandler(HeaderBackColorChangedHandler); \n         myTableStyle.HeaderForeColorChanged +=\n            new System.EventHandler(HeaderForeColorChangedHandler); \n      }\n      \n      // Change header background color.\n      private void OnHeaderBackColor_Click(object sender, System.EventArgs e)\n      {\n         dataGrid1.TableStyles.Clear ();\n         switch(comboBox1.SelectedItem.ToString())\n         {\n            case &quot;Red&quot;:\n               myTableStyle.HeaderBackColor = Color.Red;\n               break;\n            case &quot;Yellow&quot;:\n               myTableStyle.HeaderBackColor = Color.Yellow ;\n               break;\n            case &quot;Blue&quot;:\n               myTableStyle.HeaderBackColor = Color.Blue ;\n               break;\n         }\n         myTableStyle.AlternatingBackColor = Color.LightGray;\n         dataGrid1.TableStyles.Add(myTableStyle);\n      }\n\n      private void HeaderBackColorChangedHandler(object sender,EventArgs e)\n      {\n         MessageBox.Show(&quot;Changed Header Background color to : &quot; + \n         comboBox1.SelectedItem.ToString(),&quot;Success&quot;, MessageBoxButtons.OK, \n         MessageBoxIcon.Exclamation);\n      }\n\n      // Change header forecolor.\n      private void OnHeaderForeColor_Click(object sender, System.EventArgs e)\n      {\n         dataGrid1.TableStyles.Clear();\n         switch(comboBox2.SelectedItem.ToString())\n         {\n            case &quot;Green&quot;:\n               myTableStyle.HeaderForeColor = Color.Green;\n               break;\n            case &quot;White&quot;:\n               myTableStyle.HeaderForeColor = Color.White;\n               break;\n            case &quot;Violet&quot;:\n               myTableStyle.HeaderForeColor = Color.Violet;\n               break;\n         }\n         myTableStyle.AlternatingBackColor = Color.LightGray;\n         dataGrid1.TableStyles.Add(myTableStyle);\n      }\n\n      private void HeaderForeColorChangedHandler(object sender,EventArgs e)\n      {\n         MessageBox.Show(&quot;Changed Header Fore color to : &quot; + \n         comboBox2.SelectedItem.ToString(), &quot;Success&quot;,\n         MessageBoxButtons.OK, MessageBoxIcon.Exclamation);\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_Header_4#1\">      Private Sub Create_Table()\n         &#39; Create DataSet.\n         myDataSet = New DataSet(&quot;myDataSet&quot;)\n         &#39; Create DataTable.\n         Dim myCustomerTable As New DataTable(&quot;Customers&quot;)\n         &#39; Create two columns, and add them to the table.\n         Dim CustID As New DataColumn(&quot;CustID&quot;, GetType(Integer))\n         Dim CustName As New DataColumn(&quot;CustName&quot;)\n         myCustomerTable.Columns.Add(CustID)\n         myCustomerTable.Columns.Add(CustName)\n         &#39; Add table to DataSet.\n         myDataSet.Tables.Add(myCustomerTable)\n         dataGrid1.SetDataBinding(myDataSet, &quot;Customers&quot;)\n         myTableStyle = New DataGridTableStyle()\n         myTableStyle.MappingName = &quot;Customers&quot;\n         AddHandler myTableStyle.HeaderBackColorChanged, AddressOf HeaderBackColorChangedHandler\n         AddHandler myTableStyle.HeaderForeColorChanged, AddressOf HeaderForeColorChangedHandler\n      End Sub &#39;Create_Table\n      \n      \n      &#39; Change header background color.\n      Private Sub OnHeaderBackColor_Click(sender As Object, e As System.EventArgs) Handles button1.Click\n         dataGrid1.TableStyles.Clear()\n         Select Case comboBox1.SelectedItem.ToString()\n            Case &quot;Red&quot;\n               myTableStyle.HeaderBackColor = Color.Red\n            Case &quot;Yellow&quot;\n               myTableStyle.HeaderBackColor = Color.Yellow\n            Case &quot;Blue&quot;\n               myTableStyle.HeaderBackColor = Color.Blue\n         End Select\n         myTableStyle.AlternatingBackColor = Color.LightGray\n         dataGrid1.TableStyles.Add(myTableStyle)\n      End Sub &#39;OnHeaderBackColor_Click\n      \n        Private Sub HeaderBackColorChangedHandler(ByVal sender As Object, ByVal e As EventArgs)\n            MessageBox.Show(&quot;Changed Header Background color to : &quot; + comboBox1.SelectedItem.ToString(), &quot;Success&quot;, MessageBoxButtons.OK, MessageBoxIcon.Exclamation)\n        End Sub &#39;HeaderBackColorChangedHandler\n      \n      &#39; Change header forecolor.\n      Private Sub OnHeaderForeColor_Click(sender As Object, e As System.EventArgs) Handles button2.Click\n         dataGrid1.TableStyles.Clear()\n         Select Case comboBox2.SelectedItem.ToString()\n            Case &quot;Green&quot;\n               myTableStyle.HeaderForeColor = Color.Green\n            Case &quot;White&quot;\n               myTableStyle.HeaderForeColor = Color.White\n            Case &quot;Violet&quot;\n               myTableStyle.HeaderForeColor = Color.Violet\n         End Select\n         myTableStyle.AlternatingBackColor = Color.LightGray\n         dataGrid1.TableStyles.Add(myTableStyle)\n      End Sub &#39;OnHeaderForeColor_Click\n      \n        Private Sub HeaderForeColorChangedHandler(ByVal sender As Object, ByVal e As EventArgs)\n            MessageBox.Show(&quot;Changed Header Fore color to : &quot; + comboBox2.SelectedItem.ToString(), &quot;Success&quot;, MessageBoxButtons.OK, MessageBoxIcon.Exclamation)\n        End Sub &#39;HeaderForeColorChangedHandler\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_LinkColorChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LinkColorChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.LinkColor*</span> value changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler LinkColorChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridTableStyle_Sample#3\">      private void AddCustomDataTableStyle()\n      {\n         myDataGridTableStyle1 = new DataGridTableStyle();\n         myDataGridTableStyle2 = new DataGridTableStyle();\n\n         MessageBox.Show(&quot;LinkColor Before : &quot;\n            +myDataGridTableStyle1.LinkColor);\n         MessageBox.Show(&quot;HeaderFont Before : &quot;\n            +myDataGridTableStyle1.HeaderFont);\n         \n         myDataGridTableStyle1.LinkColorChanged +=\n            new System.EventHandler(LinkColorChanged_Handler);\n         myDataGridTableStyle1.HeaderFontChanged \n            += new System.EventHandler(HeaderFontChanged_Handler);\n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;;\n\n         // Set other properties.\n         myDataGridTableStyle1.AlternatingBackColor = Color.LightGray;\n         myDataGridTableStyle1.LinkColor = Color.Red;         \n         myDataGridTableStyle1.HeaderFont = \n            new System.Drawing.Font(&quot;Verdana&quot;,\n               8.25F,\n               System.Drawing.FontStyle.Bold, \n               System.Drawing.GraphicsUnit.Point,\n               ((System.Byte)(0)));\n\n         // Add a GridColumnStyle and set its MappingName.             \n         DataGridColumnStyle myBoolCol = new DataGridBoolColumn();\n         myBoolCol.MappingName = &quot;Current&quot;;\n         myBoolCol.HeaderText = &quot;IsCurrent Customer&quot;;\n         myBoolCol.Width = 150;\n         myDataGridTableStyle1.GridColumnStyles.Add(myBoolCol);\n      \n         // Add a second column style.\n         DataGridColumnStyle myTextCol = new DataGridTextBoxColumn();\n         myTextCol.MappingName = &quot;custName&quot;;\n         myTextCol.HeaderText = &quot;Customer Name&quot;;\n         myTextCol.Width = 250;\n         myDataGridTableStyle1.GridColumnStyles.Add(myTextCol);\n\n         // Create new ColumnStyle objects\n         DataGridColumnStyle cOrderDate = new DataGridTextBoxColumn();\n         cOrderDate.MappingName = &quot;OrderDate&quot;;\n         cOrderDate.HeaderText = &quot;Order Date&quot;;\n         cOrderDate.Width = 100;\n\n         // PropertyDescriptor to create a formatted column.\n         PropertyDescriptorCollection myPropertyDescriptorCollection = this.BindingContext\n            [myDataSet, &quot;Customers.custToOrders&quot;].GetItemProperties(); \n         \n         DataGridColumnStyle csOrderAmount = \n            new DataGridTextBoxColumn(myPropertyDescriptorCollection[&quot;OrderAmount&quot;], &quot;c&quot;, true);\n         csOrderAmount.MappingName = &quot;OrderAmount&quot;;\n         csOrderAmount.HeaderText = &quot;Total&quot;;\n         csOrderAmount.Width = 100;\n              \n         // Add the DataGridTableStyle instances to GridTableStylesCollection.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1);\n      \n      }\n      private void LinkColorChanged_Handler(object sender,EventArgs e)\n      {         \n        MessageBox.Show(&quot;LinkColor changed to &#39;RED&#39;&quot;, &quot;DataGridTableStyle&quot;);\n      }\n\n      private void HeaderFontChanged_Handler(object sender,EventArgs e)\n      {                  \n         MessageBox.Show(&quot;HeaderFont changed to &#39;VERDANA&#39;&quot;,\n            &quot;DataGridTableStyle&quot;);\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_Sample#3\">      Private Sub AddCustomDataTableStyle()\n         myDataGridTableStyle1 = New DataGridTableStyle()\n         myDataGridTableStyle2 = New DataGridTableStyle()\n\n         MessageBox.Show(&quot;LinkColor Before : &quot; &amp; myDataGridTableStyle1.LinkColor.ToString)\n         MessageBox.Show(&quot;HeaderFont Before : &quot; &amp; myDataGridTableStyle1.HeaderFont.ToString)\n\n         AddHandler myDataGridTableStyle1.LinkColorChanged, AddressOf LinkColorChanged_Handler\n         AddHandler myDataGridTableStyle1.HeaderFontChanged, AddressOf HeaderFontChanged_Handler\n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;\n\n         &#39; Set other properties.\n         myDataGridTableStyle1.AlternatingBackColor = Color.LightGray\n         myDataGridTableStyle1.LinkColor = Color.Red\n         myDataGridTableStyle1.HeaderFont = New System.Drawing.Font _\n                  (&quot;Verdana&quot;, 8.25F, System.Drawing.FontStyle.Bold, _\n                   System.Drawing.GraphicsUnit.Point, CType(0, System.Byte))\n\n         &#39; Add a GridColumnStyle and set its MappingName.\n         Dim myBoolCol = New DataGridBoolColumn()\n         myBoolCol.MappingName = &quot;Current&quot;\n         myBoolCol.HeaderText = &quot;IsCurrent Customer&quot;\n         myBoolCol.Width = 150\n         myDataGridTableStyle1.GridColumnStyles.Add(myBoolCol)\n\n         &#39; Add a second column style.\n         Dim myTextCol = New DataGridTextBoxColumn()\n         myTextCol.MappingName = &quot;custName&quot;\n         myTextCol.HeaderText = &quot;Customer Name&quot;\n         myTextCol.Width = 250\n         myDataGridTableStyle1.GridColumnStyles.Add(myTextCol)\n\n         &#39; Create new ColumnStyle objects\n         Dim cOrderDate = New DataGridTextBoxColumn()\n         cOrderDate.MappingName = &quot;OrderDate&quot;\n         cOrderDate.HeaderText = &quot;Order Date&quot;\n         cOrderDate.Width = 100\n\n         &#39; PropertyDescriptor to create a formatted column.\n         Dim myPropertyDescriptorCollection As PropertyDescriptorCollection = _\n                  Me.BindingContext(myDataSet, &quot;Customers.custToOrders&quot;).GetItemProperties()\n\n         Dim csOrderAmount = New DataGridTextBoxColumn(myPropertyDescriptorCollection _\n                                 (&quot;OrderAmount&quot;), &quot;c&quot;, True)\n         csOrderAmount.MappingName = &quot;OrderAmount&quot;\n         csOrderAmount.HeaderText = &quot;Total&quot;\n         csOrderAmount.Width = 100\n\n         &#39; Add the DataGridTableStyle instances to GridTableStylesCollection.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1)\n      End Sub &#39;AddCustomDataTableStyle\n\n      Private Sub LinkColorChanged_Handler(ByVal sender As Object, ByVal e As EventArgs)\n         MessageBox.Show(&quot;LinkColor changed to &#39;RED&#39;&quot;, &quot;DataGridTableStyle&quot;)\n      End Sub &#39;LinkColorChanged_Handler\n\n\n      Private Sub HeaderFontChanged_Handler(ByVal sender As Object, ByVal e As EventArgs)\n         MessageBox.Show(&quot;HeaderFont changed to &#39;VERDANA&#39;&quot;, &quot;DataGridTableStyle&quot;)\n      End Sub &#39;HeaderFontChanged_Handler\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_Sample#3\">   private:\n      void AddCustomDataTableStyle()\n      {\n         myDataGridTableStyle1 = gcnew DataGridTableStyle;\n         myDataGridTableStyle2 = gcnew DataGridTableStyle;\n         MessageBox::Show( String::Concat( &quot;LinkColor Before : &quot;, myDataGridTableStyle1-&gt;LinkColor ) );\n         MessageBox::Show( String::Concat( &quot;HeaderFont Before : &quot;, myDataGridTableStyle1-&gt;HeaderFont ) );\n         myDataGridTableStyle1-&gt;LinkColorChanged += gcnew System::EventHandler( this, &amp;DataGridTableStyle_Sample::LinkColorChanged_Handler );\n         myDataGridTableStyle1-&gt;HeaderFontChanged += gcnew System::EventHandler( this, &amp;DataGridTableStyle_Sample::HeaderFontChanged_Handler );\n         myDataGridTableStyle1-&gt;MappingName = &quot;Customers&quot;;\n\n         // Set other properties.\n         myDataGridTableStyle1-&gt;AlternatingBackColor = Color::LightGray;\n         myDataGridTableStyle1-&gt;LinkColor = Color::Red;\n         myDataGridTableStyle1-&gt;HeaderFont = gcnew System::Drawing::Font( &quot;Verdana&quot;,8.25F,System::Drawing::FontStyle::Bold,System::Drawing::GraphicsUnit::Point,((System::Byte)(0)) );\n\n         // Add a GridColumnStyle and set its MappingName.\n         DataGridColumnStyle^ myBoolCol = gcnew DataGridBoolColumn;\n         myBoolCol-&gt;MappingName = &quot;Current&quot;;\n         myBoolCol-&gt;HeaderText = &quot;IsCurrent Customer&quot;;\n         myBoolCol-&gt;Width = 150;\n         myDataGridTableStyle1-&gt;GridColumnStyles-&gt;Add( myBoolCol );\n\n         // Add a second column style.\n         DataGridColumnStyle^ myTextCol = gcnew DataGridTextBoxColumn;\n         myTextCol-&gt;MappingName = &quot;custName&quot;;\n         myTextCol-&gt;HeaderText = &quot;Customer Name&quot;;\n         myTextCol-&gt;Width = 250;\n         myDataGridTableStyle1-&gt;GridColumnStyles-&gt;Add( myTextCol );\n\n         // Create new ColumnStyle objects\n         DataGridColumnStyle^ cOrderDate = gcnew DataGridTextBoxColumn;\n         cOrderDate-&gt;MappingName = &quot;OrderDate&quot;;\n         cOrderDate-&gt;HeaderText = &quot;Order Date&quot;;\n         cOrderDate-&gt;Width = 100;\n\n         // PropertyDescriptor to create a formatted column.\n         PropertyDescriptorCollection^ myPropertyDescriptorCollection = this-&gt;BindingContext[myDataSet, &quot;Customers.custToOrders&quot;]-&gt;GetItemProperties();\n         DataGridColumnStyle^ csOrderAmount = gcnew DataGridTextBoxColumn( myPropertyDescriptorCollection[ &quot;OrderAmount&quot; ],&quot;c&quot;,true );\n         csOrderAmount-&gt;MappingName = &quot;OrderAmount&quot;;\n         csOrderAmount-&gt;HeaderText = &quot;Total&quot;;\n         csOrderAmount-&gt;Width = 100;\n\n         // Add the DataGridTableStyle instances to GridTableStylesCollection.\n         myDataGrid-&gt;TableStyles-&gt;Add( myDataGridTableStyle1 );\n      }\n\n      void LinkColorChanged_Handler( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         MessageBox::Show( &quot;LinkColor changed to &#39;RED&#39;&quot;, &quot;DataGridTableStyle&quot; );\n      }\n\n      void HeaderFontChanged_Handler( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         MessageBox::Show( &quot;HeaderFont changed to &#39;VERDANA&#39;&quot;, &quot;DataGridTableStyle&quot; );\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_LinkHoverColorChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LinkHoverColorChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.LinkHoverColor*</span> value changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler LinkHoverColorChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_MappingNameChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MappingNameChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.MappingName*</span> value changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler MappingNameChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridTableStyle_sample1#1\">      private void AddCustomDataTableStyle()\n      {\n         myDataGridTableStyle1 = new DataGridTableStyle();\n         myDataGridTableStyle1.MappingNameChanged+=\n            new System.EventHandler(MappingNameChanged_Handler);\n         myDataGridTableStyle1.GridLineStyleChanged += \n            new System.EventHandler(GridLineStyleChanged_Handler);\n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;;\n\n         // Set other properties.\n         myDataGridTableStyle1.AlternatingBackColor = Color.LightGray;\n         myDataGridTableStyle1.GridLineStyle=\n            System.Windows.Forms.DataGridLineStyle.None;\n\n         // Add a GridColumnStyle and set its MappingName.          \n         DataGridColumnStyle myBoolCol = new DataGridBoolColumn();\n         myBoolCol.MappingName = &quot;Current&quot;;\n         myBoolCol.HeaderText = &quot;IsCurrent Customer&quot;;\n         myBoolCol.Width = 150;\n         myDataGridTableStyle1.GridColumnStyles.Add(myBoolCol);\n      \n         // Add a second column style.\n         DataGridColumnStyle myTextCol = new DataGridTextBoxColumn();\n         myTextCol.MappingName = &quot;custName&quot;;\n         myTextCol.HeaderText = &quot;Customer Name&quot;;\n         myTextCol.Width = 250;\n         myDataGridTableStyle1.GridColumnStyles.Add(myTextCol);\n\n         // Create new ColumnStyle objects.\n         DataGridColumnStyle cOrderDate = new DataGridTextBoxColumn();\n         cOrderDate.MappingName = &quot;OrderDate&quot;;\n         cOrderDate.HeaderText = &quot;Order Date&quot;;\n         cOrderDate.Width = 100;\n\n         // Use PropertyDescriptor to create a formatted column.         \n         PropertyDescriptorCollection myPropertyDescriptorCollection = this.BindingContext\n            [myDataSet, &quot;Customers.custToOrders&quot;].GetItemProperties();         \n         DataGridColumnStyle csOrderAmount = \n            new DataGridTextBoxColumn(myPropertyDescriptorCollection[&quot;OrderAmount&quot;], &quot;c&quot;, true);\n         csOrderAmount.MappingName = &quot;OrderAmount&quot;;\n         csOrderAmount.HeaderText = &quot;Total&quot;;\n         csOrderAmount.Width = 100;\n              \n         // Add the DataGridTableStyle object to GridTableStylesCollection.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1);      \n      }\n      private void MappingNameChanged_Handler(object sender,EventArgs e)\n      {         \n         MessageBox.Show(&quot;MappingName Changed&quot;, &quot;DataGridTableStyle&quot;);\n      }\n      private void GridLineStyleChanged_Handler(object sender,EventArgs e)\n      {\n         MessageBox.Show(&quot;GridLineStyle  Changed&quot;, &quot;DataGridTableStyle&quot;);\n      }    \n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_sample1#1\">      Private Sub AddCustomDataTableStyle()\n         myDataGridTableStyle1 = New DataGridTableStyle()\n         AddHandler myDataGridTableStyle1.MappingNameChanged, AddressOf MappingNameChanged_Handler\n         AddHandler myDataGridTableStyle1.GridLineStyleChanged, AddressOf GridLineStyleChanged_Handler\n         myDataGridTableStyle1.MappingName = &quot;Customers&quot;\n\n         &#39; Set other properties.\n         myDataGridTableStyle1.AlternatingBackColor = Color.LightGray\n         myDataGridTableStyle1.GridLineStyle = System.Windows.Forms.DataGridLineStyle.None\n\n         &#39; Add a GridColumnStyle and set its MappingName.\n         Dim myBoolCol = New DataGridBoolColumn()\n         myBoolCol.MappingName = &quot;Current&quot;\n         myBoolCol.HeaderText = &quot;IsCurrent Customer&quot;\n         myBoolCol.Width = 150\n         myDataGridTableStyle1.GridColumnStyles.Add(myBoolCol)\n\n         &#39; Add a second column style.\n         Dim myTextCol = New DataGridTextBoxColumn()\n         myTextCol.MappingName = &quot;custName&quot;\n         myTextCol.HeaderText = &quot;Customer Name&quot;\n         myTextCol.Width = 250\n         myDataGridTableStyle1.GridColumnStyles.Add(myTextCol)\n\n         &#39; Create new ColumnStyle objects.\n         Dim cOrderDate = New DataGridTextBoxColumn()\n         cOrderDate.MappingName = &quot;OrderDate&quot;\n         cOrderDate.HeaderText = &quot;Order Date&quot;\n         cOrderDate.Width = 100\n\n         &#39; Use PropertyDescriptor to create a formatted column.\n         Dim myPropertyDescriptorCollection As PropertyDescriptorCollection = _\n                     Me.BindingContext(myDataSet, &quot;Customers.custToOrders&quot;).GetItemProperties()\n         Dim csOrderAmount = New DataGridTextBoxColumn _\n                  (myPropertyDescriptorCollection(&quot;OrderAmount&quot;), &quot;c&quot;, True)\n         csOrderAmount.MappingName = &quot;OrderAmount&quot;\n         csOrderAmount.HeaderText = &quot;Total&quot;\n         csOrderAmount.Width = 100\n\n         &#39; Add the DataGridTableStyle object to GridTableStylesCollection.\n         myDataGrid.TableStyles.Add(myDataGridTableStyle1)\n      End Sub &#39;AddCustomDataTableStyle\n\n      Private Sub MappingNameChanged_Handler(ByVal sender As Object, ByVal e As EventArgs)\n         MessageBox.Show(&quot;MappingName Changed&quot;, &quot;DataGridTableStyle&quot;)\n      End Sub &#39;MappingNameChanged_Handler\n\n      Private Sub GridLineStyleChanged_Handler(ByVal sender As Object, ByVal e As EventArgs)\n         MessageBox.Show(&quot;GridLineStyle  Changed&quot;, &quot;DataGridTableStyle&quot;)\n      End Sub &#39;GridLineStyleChanged_Handler\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_sample1#1\">   private:\n      void AddCustomDataTableStyle()\n      {\n         myDataGridTableStyle1 = gcnew DataGridTableStyle;\n         myDataGridTableStyle1-&gt;MappingNameChanged += gcnew System::EventHandler( this, &amp;DataGridTableStyle_Sample::MappingNameChanged_Handler );\n         myDataGridTableStyle1-&gt;GridLineStyleChanged += gcnew System::EventHandler( this, &amp;DataGridTableStyle_Sample::GridLineStyleChanged_Handler );\n         myDataGridTableStyle1-&gt;MappingName = &quot;Customers&quot;;\n\n         // Set other properties.\n         myDataGridTableStyle1-&gt;AlternatingBackColor = Color::LightGray;\n         myDataGridTableStyle1-&gt;GridLineStyle = System::Windows::Forms::DataGridLineStyle::None;\n\n         // Add a GridColumnStyle and set its MappingName.\n         DataGridColumnStyle^ myBoolCol = gcnew DataGridBoolColumn;\n         myBoolCol-&gt;MappingName = &quot;Current&quot;;\n         myBoolCol-&gt;HeaderText = &quot;IsCurrent Customer&quot;;\n         myBoolCol-&gt;Width = 150;\n         myDataGridTableStyle1-&gt;GridColumnStyles-&gt;Add( myBoolCol );\n\n         // Add a second column style.\n         DataGridColumnStyle^ myTextCol = gcnew DataGridTextBoxColumn;\n         myTextCol-&gt;MappingName = &quot;custName&quot;;\n         myTextCol-&gt;HeaderText = &quot;Customer Name&quot;;\n         myTextCol-&gt;Width = 250;\n         myDataGridTableStyle1-&gt;GridColumnStyles-&gt;Add( myTextCol );\n\n         // Create new ColumnStyle objects.\n         DataGridColumnStyle^ cOrderDate = gcnew DataGridTextBoxColumn;\n         cOrderDate-&gt;MappingName = &quot;OrderDate&quot;;\n         cOrderDate-&gt;HeaderText = &quot;Order Date&quot;;\n         cOrderDate-&gt;Width = 100;\n\n         // Use PropertyDescriptor to create a formatted column.\n         PropertyDescriptorCollection^ myPropertyDescriptorCollection = this-&gt;BindingContext[myDataSet, &quot;Customers::custToOrders&quot;]-&gt;GetItemProperties();\n         DataGridColumnStyle^ csOrderAmount = gcnew DataGridTextBoxColumn( myPropertyDescriptorCollection[ &quot;OrderAmount&quot; ],&quot;c&quot;,true );\n         csOrderAmount-&gt;MappingName = &quot;OrderAmount&quot;;\n         csOrderAmount-&gt;HeaderText = &quot;Total&quot;;\n         csOrderAmount-&gt;Width = 100;\n\n         // Add the DataGridTableStyle Object* to GridTableStylesCollection.\n         myDataGrid-&gt;TableStyles-&gt;Add( myDataGridTableStyle1 );\n      }\n\n      void MappingNameChanged_Handler( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         MessageBox::Show( &quot;MappingName Changed&quot;, &quot;DataGridTableStyle&quot; );\n      }\n\n      void GridLineStyleChanged_Handler( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         MessageBox::Show( &quot;GridLineStyle  Changed&quot;, &quot;DataGridTableStyle&quot; );\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_PreferredColumnWidthChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PreferredColumnWidthChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.PreferredColumnWidth*</span> property value changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler PreferredColumnWidthChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the PreferredColumnWidthChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> named <code>DataGridTableStyle1</code>. Then ensure that the event handler is associated with the PreferredColumnWidthChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#231\">private void DataGridTableStyle1_PreferredColumnWidthChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridTableStyle.PreferredColumnWidthChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#231\">Private Sub DataGridTableStyle1_PreferredColumnWidthChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridTableStyle1.PreferredColumnWidthChanged\n\n   MessageBox.Show(&quot;You are in the DataGridTableStyle.PreferredColumnWidthChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_PreferredRowHeightChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PreferredRowHeightChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.PreferredRowHeight*</span> value changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler PreferredRowHeightChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridTableStyle_PreferredRowHeightChanged#1\">      private void SetUp()\n      {\n         // Create a DataSet with a table.\n         MakeDataSet();\n         // Bind the DataGrid to the DataSet.\n         myDataGrid.SetDataBinding(myDataSet, &quot;Orders&quot;);\n         myTableStyle = new DataGridTableStyle();\n         // Map &#39;DataGridTableStyle&#39; instance to the DataTable.\n         myTableStyle.MappingName = &quot;Orders&quot;;\n         // Add EventHandler function for &#39;PreferredRowHeightChanged&#39; Event.\n         myTableStyle.PreferredRowHeightChanged+=new EventHandler(RowHeight_Changed);\n      }\n      // Called when the PreferredRowHeight property of myTableStyle is modified\n      private void RowHeight_Changed(object sender, EventArgs e)\n      {\n         MessageBox.Show(&quot;PreferredRowHeight property is changed&quot;);\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_PreferredRowHeightChanged#1\">   Private Sub SetUp()\n      &#39; Create a DataSet with a table.\n      MakeDataSet()\n      &#39; Bind the DataGrid to the DataSet.\n      myDataGrid.SetDataBinding(myDataSet, &quot;Orders&quot;)\n      myTableStyle = New DataGridTableStyle()\n      &#39; Map &#39;DataGridTableStyle&#39; instance to the DataTable.\n      myTableStyle.MappingName = &quot;Orders&quot;\n      &#39; Add EventHandler function for &#39;PreferredRowHeightChanged&#39; Event.\n      AddHandler myTableStyle.PreferredRowHeightChanged, AddressOf RowHeight_Changed\n   End Sub &#39;SetUp\n\n   &#39; Called when the PreferredRowHeight property of myTableStyle is modified\n    Private Sub RowHeight_Changed(ByVal sender As Object, ByVal e As EventArgs)\n        MessageBox.Show(&quot;PreferredRowHeight property is changed&quot;)\n    End Sub &#39;RowHeight_Changed\n   \n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_PreferredRowHeightChanged#1\">   void SetUp()\n   {\n      // Create a DataSet with a table.\n      MakeDataSet();\n\n      // Bind the DataGrid to the DataSet.\n      myDataGrid-&gt;SetDataBinding( myDataSet, &quot;Orders&quot; );\n      myTableStyle = gcnew DataGridTableStyle;\n\n      // Map &#39;DataGridTableStyle&#39; instance to the DataTable.\n      myTableStyle-&gt;MappingName = &quot;Orders&quot;;\n\n      // Add EventHandler function for &#39;PreferredRowHeightChanged&#39; Event.\n      myTableStyle-&gt;PreferredRowHeightChanged += gcnew EventHandler( this, &amp;MyDataForm::RowHeight_Changed );\n   }\n\n   // Called when the PreferredRowHeight property of myTableStyle is modified\n   void RowHeight_Changed( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      MessageBox::Show( &quot;PreferredRowHeight property is changed&quot; );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_ReadOnlyChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadOnlyChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.ReadOnly*</span> value changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler ReadOnlyChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-vb\" name=\"DataGridTableStyle_ReadOnlyChanged#1\">   Protected Sub AddTableStyle()\n      &#39; Create a new DataGridTableStyle.\n      myDataGridTableStyle = New DataGridTableStyle()\n      myDataGridTableStyle.MappingName = myDataSet1.Tables(0).TableName\n      myDataGrid1.DataSource = myDataSet1.Tables(0)\n      AddHandler myDataGridTableStyle.ReadOnlyChanged, AddressOf MyReadOnlyChangedEventHandler\n      myDataGrid1.TableStyles.Add(myDataGridTableStyle)\n   End Sub &#39;AddTableStyle\n   \n   &#39; Handle the &#39;ReadOnlyChanged&#39; event.\n   Private Sub MyReadOnlyChangedEventHandler(sender As Object, e As EventArgs)\n      MessageBox.Show(&quot;ReadOnly property is changed&quot;)\n   End Sub &#39;MyReadOnlyChangedEventHandler\n\n   &#39; Handle the check box&#39;s CheckedChanged event\n   Private Sub myCheckBox1_CheckedChanged(sender As Object, e As EventArgs)\n      If myDataGridTableStyle.ReadOnly Then\n         myDataGridTableStyle.ReadOnly = False\n      Else\n         myDataGridTableStyle.ReadOnly = True\n      End If\n   End Sub &#39;myCheckBox1_CheckedChanged\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_ReadOnlyChanged#1\">protected:\n   void AddTableStyle()\n   {\n      \n      // Create a new DataGridTableStyle.\n      myDataGridTableStyle = gcnew DataGridTableStyle;\n      myDataGridTableStyle-&gt;MappingName = myDataSet1-&gt;Tables[ 0 ]-&gt;TableName;\n      myDataGrid1-&gt;DataSource = myDataSet1-&gt;Tables[ 0 ];\n      myDataGridTableStyle-&gt;ReadOnlyChanged += gcnew EventHandler( this, &amp;Form1::MyReadOnlyChangedEventHandler );\n      myDataGrid1-&gt;TableStyles-&gt;Add( myDataGridTableStyle );\n   }\n\nprivate:\n   // Handle the &#39;ReadOnlyChanged&#39; event.\n   void MyReadOnlyChangedEventHandler( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      MessageBox::Show( &quot;ReadOnly property is changed&quot; );\n   }\n\n   // Handle the check box&#39;s CheckedChanged event\n   void myCheckBox1_CheckedChanged( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      if ( myDataGridTableStyle-&gt;ReadOnly )\n      {\n         myDataGridTableStyle-&gt;ReadOnly = false;\n      }\n      else\n      {\n         myDataGridTableStyle-&gt;ReadOnly = true;\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridTableStyle_ReadOnlyChanged#1\">      protected void AddTableStyle()\n      {\n         // Create a new DataGridTableStyle.\n         myDataGridTableStyle = new DataGridTableStyle();\n         myDataGridTableStyle.MappingName = myDataSet1.Tables[0].TableName;\n         myDataGrid1.DataSource=myDataSet1.Tables[0];\n         myDataGridTableStyle.ReadOnlyChanged+=new EventHandler(MyReadOnlyChangedEventHandler);\n         myDataGrid1.TableStyles.Add(myDataGridTableStyle);\n      }\n\n      // Handle the &#39;ReadOnlyChanged&#39; event.\n      private void MyReadOnlyChangedEventHandler(object sender, EventArgs e)\n      {\n         MessageBox.Show(&quot;ReadOnly property is changed&quot;);\n      }\n\n      // Handle the check box&#39;s CheckedChanged event\n      private void myCheckBox1_CheckedChanged(object sender, EventArgs e)\n      {\n         if(myDataGridTableStyle.ReadOnly)\n         {\n            myDataGridTableStyle.ReadOnly=false;\n         }\n         else\n         {\n            myDataGridTableStyle.ReadOnly=true;\n         }\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_RowHeadersVisibleChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowHeadersVisibleChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.RowHeadersVisible*</span> value changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler RowHeadersVisibleChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridTableStyle_RowHeadersVisibleChanged#2\">   // Instantiate the EventHandler.\n   public void AttachRowHeaderVisibleChanged()\n   {\n      myDataGridTableStyle.RowHeadersVisibleChanged += new EventHandler (MyDelegateRowHeadersVisibleChanged);\n   }\n\n   // raise the event when RowHeadersVisible property is changed.\n   private void MyDelegateRowHeadersVisibleChanged(object sender, EventArgs e)\n   {\n      string myString = &quot;&#39;RowHeadersVisibleChanged&#39; event raised, Row Headers are&quot;;\n      if (myDataGridTableStyle.RowHeadersVisible)\n         myString += &quot; visible&quot;;\n      else\n         myString += &quot; not visible&quot;;\n\n      MessageBox.Show(myString, &quot;RowHeader information&quot;);\n   }\n\n   // raise the event when a button is clicked.\n   private void myButton_Click(object sender, System.EventArgs e)\n   {\n      if (myDataGridTableStyle.RowHeadersVisible)\n         myDataGridTableStyle.RowHeadersVisible = false;\n      else\n         myDataGridTableStyle.RowHeadersVisible = true;\n   }\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_RowHeadersVisibleChanged#2\">   // Instantiate the EventHandler.\npublic:\n   void AttachRowHeaderVisibleChanged()\n   {\n      myDataGridTableStyle-&gt;RowHeadersVisibleChanged += gcnew EventHandler( this, &amp;MyDataGridTableStyle_RowHeadersVisibleChanged::MyDelegateRowHeadersVisibleChanged );\n   }\n\n   // raise the event when RowHeadersVisible property is changed.\nprivate:\n   void MyDelegateRowHeadersVisibleChanged( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      String^ myString = &quot;&#39;RowHeadersVisibleChanged&#39; event raised, Row Headers are&quot;;\n      if ( myDataGridTableStyle-&gt;RowHeadersVisible )\n            myString = String::Concat( myString, &quot; visible&quot; );\n      else\n            myString = String::Concat( myString, &quot; not visible&quot; );\n\n      MessageBox::Show( myString, &quot;RowHeader information&quot; );\n   }\n\n   // raise the event when a button is clicked.\n   void myButton_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      if ( myDataGridTableStyle-&gt;RowHeadersVisible )\n            myDataGridTableStyle-&gt;RowHeadersVisible = false;\n      else\n            myDataGridTableStyle-&gt;RowHeadersVisible = true;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_RowHeadersVisibleChanged#2\">   &#39; Instantiate the EventHandler.\n   Public Sub AttachRowHeaderVisibleChanged()\n      AddHandler myDataGridTableStyle.RowHeadersVisibleChanged, AddressOf MyDelegateRowHeadersVisibleChanged\n   End Sub &#39;AttachRowHeaderVisibleChanged\n   \n   \n   &#39; raise the event when RowHeadersVisible property is changed.\n    Private Sub MyDelegateRowHeadersVisibleChanged(ByVal sender As Object, ByVal e As EventArgs)\n        Dim myString As String = &quot;&#39;RowHeadersVisibleChanged&#39; event raised, Row Headers are&quot;\n        If myDataGridTableStyle.RowHeadersVisible Then\n            myString += &quot; visible&quot;\n        Else\n            myString += &quot; not visible&quot;\n        End If\n        MessageBox.Show(myString, &quot;RowHeader information&quot;)\n    End Sub &#39;MyDelegateRowHeadersVisibleChanged\n   \n   \n   &#39; raise the event when a button is clicked.\n   Private Sub myButton_Click(sender As Object, e As System.EventArgs)\n      If myDataGridTableStyle.RowHeadersVisible Then\n         myDataGridTableStyle.RowHeadersVisible = False\n      Else\n         myDataGridTableStyle.RowHeadersVisible = True\n      End If\n   End Sub &#39;myButton_Click \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_RowHeaderWidthChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowHeaderWidthChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.RowHeaderWidth*</span> value changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler RowHeaderWidthChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-vb\" name=\"DataGridTableStyle_RowHeaderWidth#2\">   Private Sub CallEventLoader()\n      AddHandler Load, AddressOf DataGridTableStyle_RowHeaderWidth_Load\n   End Sub &#39;CallEventLoader\n   \n   \n   Public Sub AttachRowHeaderWidthChanged()\n      AddHandler myDataGridTableStyle.RowHeaderWidthChanged, AddressOf MyDelegateRowHeaderChanged\n   End Sub &#39;AttachRowHeaderWidthChanged\n   \n    Private Sub MyDelegateRowHeaderChanged(ByVal sender As Object, ByVal e As EventArgs)\n        MessageBox.Show(&quot;Row header width is changed&quot;)\n    End Sub &#39;MyDelegateRowHeaderChanged\n   \n   \n   Private Sub button1_Click(sender As Object, e As EventArgs) Handles button1.Click\n      myDataGridTableStyle.RowHeaderWidth = 30\n   End Sub &#39;button1_Click\n   \n   \n   Private Sub button2_Click(sender As Object, e As EventArgs) Handles button2.Click\n      MessageBox.Show(&quot;Row header width is: &quot; &amp; myDataGridTableStyle.RowHeaderWidth)\n   End Sub &#39;button2_Click\n</code></pre><pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_RowHeaderWidth#2\">private:\n   void CallEventLoader()\n   {\n      this-&gt;Load += gcnew EventHandler( this, &amp;DataGridTableStyle_RowHeaderWidth::DataGridTableStyle_RowHeaderWidth_Load );\n   }\n\npublic:\n   void AttachRowHeaderWidthChanged()\n   {\n      myDataGridTableStyle-&gt;RowHeaderWidthChanged +=\n         gcnew EventHandler( this, &amp;DataGridTableStyle_RowHeaderWidth::MyDelegateRowHeaderChanged );\n   }\n\nprivate:\n   void MyDelegateRowHeaderChanged( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      MessageBox::Show( &quot;Row header width is changed&quot; );\n   }\n\n   void button1_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      myDataGridTableStyle-&gt;RowHeaderWidth = 30;\n   }\n\n   void button2_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      MessageBox::Show( String::Concat( &quot;Row header width is: &quot;, myDataGridTableStyle-&gt;RowHeaderWidth ) );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridTableStyle_RowHeaderWidth#2\">   private void CallEventLoader()\n   {\n      this.Load += new EventHandler(\n         this.DataGridTableStyle_RowHeaderWidth_Load);\n   }\n\n   public void AttachRowHeaderWidthChanged()\n   {\n      myDataGridTableStyle.RowHeaderWidthChanged += \n                               new EventHandler(MyDelegateRowHeaderChanged);\n   }\n   private void MyDelegateRowHeaderChanged(object sender, EventArgs e)\n   {\n      MessageBox.Show(&quot;Row header width is changed&quot;);\n   }\n\n   private void button1_Click(object sender, System.EventArgs e)\n   {  \n      myDataGridTableStyle.RowHeaderWidth = 30;\n   }\n\n   private void button2_Click(object sender, System.EventArgs e)\n   {\n      MessageBox.Show(&quot;Row header width is: &quot; + \n                          myDataGridTableStyle.RowHeaderWidth);\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_SelectionBackColorChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectionBackColorChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.SelectionBackColor*</span> value changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler SelectionBackColorChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cpp\" name=\"DataGridTableStyle_SelectionBackColor#1\">public:\n   void AttachSelectionBackColorChanged()\n   {\n      // Handle the &#39;SelectionBackColorChanged&#39; event.\n      myGridTableStyle-&gt;SelectionBackColorChanged += gcnew EventHandler( this, &amp;MyForm::MyDataGrid_SelectedBackColorChanged );\n   }\n\nprivate:\n   void MyDataGrid_SelectedBackColorChanged( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      MessageBox::Show( &quot;SelectionBackColorChanged event was raised, Color changed to &quot; + myGridTableStyle-&gt;SelectionBackColor );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridTableStyle_SelectionBackColor#1\">   public void AttachSelectionBackColorChanged()\n   {\n      // Handle the &#39;SelectionBackColorChanged&#39; event.\n      myGridTableStyle.SelectionBackColorChanged  += new EventHandler(this.MyDataGrid_SelectedBackColorChanged);      \n   }\n   \n   private void MyDataGrid_SelectedBackColorChanged(object sender, System.EventArgs e)  \n   {\n      MessageBox.Show(&quot;SelectionBackColorChanged event was raised, Color changed to &quot;+ myGridTableStyle.SelectionBackColor);\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridTableStyle_SelectionBackColor#1\">   Public Sub AttachSelectionBackColorChanged()\n      &#39; Handle the &#39;SelectionBackColorChanged&#39; event.\n      AddHandler myGridTableStyle.SelectionBackColorChanged, AddressOf MyDataGrid_SelectedBackColorChanged\n   End Sub &#39;AttachSelectionBackColorChanged\n   \n   \n    Private Sub MyDataGrid_SelectedBackColorChanged(ByVal sender As Object, ByVal e As EventArgs)\n        MessageBox.Show(&quot;SelectionBackColorChanged event was raised, Color changed to &quot; &amp; myGridTableStyle.SelectionBackColor.ToString())\n    End Sub &#39;MyDataGrid_SelectedBackColorChanged\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridTableStyle_SelectionForeColorChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectionForeColorChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridTableStyle.SelectionForeColor*</span> value changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler SelectionForeColorChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the SelectionForeColorChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridtablestyle\" data-linktype=\"relative-path\">DataGridTableStyle</a> named <code>DataGridTableStyle1</code>. Then ensure that the event handler is associated with the SelectionForeColorChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#237\">private void DataGridTableStyle1_SelectionForeColorChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridTableStyle.SelectionForeColorChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#237\">Private Sub DataGridTableStyle1_SelectionForeColorChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridTableStyle1.SelectionForeColorChanged\n\n   MessageBox.Show(&quot;You are in the DataGridTableStyle.SelectionForeColorChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.DataGridTableStyle.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.DataGridTableStyle.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.AllowSorting\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.AllowSortingChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.add_AllowSortingChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.remove_AllowSortingChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.AlternatingBackColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.AlternatingBackColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.add_AlternatingBackColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.remove_AlternatingBackColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.BackColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.BackColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.add_BackColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.remove_BackColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.BeginEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisibleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.add_ColumnHeadersVisibleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.remove_ColumnHeadersVisibleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.CreateGridColumn\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.DataGrid\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.DefaultTableStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.EndEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ForeColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ForeColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.add_ForeColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.remove_ForeColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.GridColumnStyles\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.GridLineColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.GridLineColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.add_GridLineColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.remove_GridLineColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.GridLineStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.GridLineStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.add_GridLineStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.remove_GridLineStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.HeaderBackColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.HeaderBackColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.add_HeaderBackColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.remove_HeaderBackColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.HeaderFont\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.HeaderFontChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.add_HeaderFontChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.remove_HeaderFontChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.HeaderForeColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.HeaderForeColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.add_HeaderForeColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.remove_HeaderForeColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.LinkColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.LinkColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.add_LinkColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.remove_LinkColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.LinkHoverColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.LinkHoverColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.add_LinkHoverColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.remove_LinkHoverColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.MappingName\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.MappingNameChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.add_MappingNameChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.remove_MappingNameChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.OnAllowSortingChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.OnAlternatingBackColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.OnBackColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.OnColumnHeadersVisibleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.OnForeColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.OnGridLineColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.OnGridLineStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.OnHeaderBackColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.OnHeaderFontChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.OnHeaderForeColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.OnLinkColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.OnLinkHoverColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.OnMappingNameChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.OnPreferredColumnWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.OnPreferredRowHeightChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.OnReadOnlyChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.OnRowHeadersVisibleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.OnRowHeaderWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.OnSelectionBackColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.OnSelectionForeColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.PreferredColumnWidth\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.add_PreferredColumnWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.remove_PreferredColumnWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.PreferredRowHeight\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.PreferredRowHeightChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.add_PreferredRowHeightChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.remove_PreferredRowHeightChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ReadOnlyChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.add_ReadOnlyChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.remove_ReadOnlyChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ResetAlternatingBackColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ResetBackColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ResetForeColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ResetGridLineColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ResetHeaderBackColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ResetHeaderFont\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ResetHeaderForeColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ResetLinkColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ResetLinkHoverColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ResetSelectionBackColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ResetSelectionForeColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.RowHeadersVisible\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.RowHeadersVisibleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.add_RowHeadersVisibleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.remove_RowHeadersVisibleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.RowHeaderWidth\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.RowHeaderWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.add_RowHeaderWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.remove_RowHeaderWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.SelectionBackColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.SelectionBackColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.add_SelectionBackColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.remove_SelectionBackColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.SelectionForeColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.add_SelectionForeColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.remove_SelectionForeColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ShouldSerializeAlternatingBackColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ShouldSerializeBackColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ShouldSerializeForeColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ShouldSerializeGridLineColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderBackColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderForeColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkHoverColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ShouldSerializePreferredRowHeight\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionBackColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionForeColor\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"6d727cee-f158-7dce-21d0-63ebafc5103a\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\DataGridTableStyle.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the table drawn by the  control at run time.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.DataGridTableStyle\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.DataGridTableStyle.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.DataGridTableStyle.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.DataGridTableStyle","System.Windows.Forms.DataGridTableStyle..ctor","System.Windows.Forms.DataGridTableStyle.AllowSorting","System.Windows.Forms.DataGridTableStyle.AllowSortingChanged","System.Windows.Forms.DataGridTableStyle.add_AllowSortingChanged","System.Windows.Forms.DataGridTableStyle.remove_AllowSortingChanged","System.Windows.Forms.DataGridTableStyle.AlternatingBackColor","System.Windows.Forms.DataGridTableStyle.AlternatingBackColorChanged","System.Windows.Forms.DataGridTableStyle.add_AlternatingBackColorChanged","System.Windows.Forms.DataGridTableStyle.remove_AlternatingBackColorChanged","System.Windows.Forms.DataGridTableStyle.BackColor","System.Windows.Forms.DataGridTableStyle.BackColorChanged","System.Windows.Forms.DataGridTableStyle.add_BackColorChanged","System.Windows.Forms.DataGridTableStyle.remove_BackColorChanged","System.Windows.Forms.DataGridTableStyle.BeginEdit","System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible","System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisibleChanged","System.Windows.Forms.DataGridTableStyle.add_ColumnHeadersVisibleChanged","System.Windows.Forms.DataGridTableStyle.remove_ColumnHeadersVisibleChanged","System.Windows.Forms.DataGridTableStyle.CreateGridColumn","System.Windows.Forms.DataGridTableStyle.DataGrid","System.Windows.Forms.DataGridTableStyle.DefaultTableStyle","System.Windows.Forms.DataGridTableStyle.Dispose","System.Windows.Forms.DataGridTableStyle.EndEdit","System.Windows.Forms.DataGridTableStyle.ForeColor","System.Windows.Forms.DataGridTableStyle.ForeColorChanged","System.Windows.Forms.DataGridTableStyle.add_ForeColorChanged","System.Windows.Forms.DataGridTableStyle.remove_ForeColorChanged","System.Windows.Forms.DataGridTableStyle.GridColumnStyles","System.Windows.Forms.DataGridTableStyle.GridLineColor","System.Windows.Forms.DataGridTableStyle.GridLineColorChanged","System.Windows.Forms.DataGridTableStyle.add_GridLineColorChanged","System.Windows.Forms.DataGridTableStyle.remove_GridLineColorChanged","System.Windows.Forms.DataGridTableStyle.GridLineStyle","System.Windows.Forms.DataGridTableStyle.GridLineStyleChanged","System.Windows.Forms.DataGridTableStyle.add_GridLineStyleChanged","System.Windows.Forms.DataGridTableStyle.remove_GridLineStyleChanged","System.Windows.Forms.DataGridTableStyle.HeaderBackColor","System.Windows.Forms.DataGridTableStyle.HeaderBackColorChanged","System.Windows.Forms.DataGridTableStyle.add_HeaderBackColorChanged","System.Windows.Forms.DataGridTableStyle.remove_HeaderBackColorChanged","System.Windows.Forms.DataGridTableStyle.HeaderFont","System.Windows.Forms.DataGridTableStyle.HeaderFontChanged","System.Windows.Forms.DataGridTableStyle.add_HeaderFontChanged","System.Windows.Forms.DataGridTableStyle.remove_HeaderFontChanged","System.Windows.Forms.DataGridTableStyle.HeaderForeColor","System.Windows.Forms.DataGridTableStyle.HeaderForeColorChanged","System.Windows.Forms.DataGridTableStyle.add_HeaderForeColorChanged","System.Windows.Forms.DataGridTableStyle.remove_HeaderForeColorChanged","System.Windows.Forms.DataGridTableStyle.LinkColor","System.Windows.Forms.DataGridTableStyle.LinkColorChanged","System.Windows.Forms.DataGridTableStyle.add_LinkColorChanged","System.Windows.Forms.DataGridTableStyle.remove_LinkColorChanged","System.Windows.Forms.DataGridTableStyle.LinkHoverColor","System.Windows.Forms.DataGridTableStyle.LinkHoverColorChanged","System.Windows.Forms.DataGridTableStyle.add_LinkHoverColorChanged","System.Windows.Forms.DataGridTableStyle.remove_LinkHoverColorChanged","System.Windows.Forms.DataGridTableStyle.MappingName","System.Windows.Forms.DataGridTableStyle.MappingNameChanged","System.Windows.Forms.DataGridTableStyle.add_MappingNameChanged","System.Windows.Forms.DataGridTableStyle.remove_MappingNameChanged","System.Windows.Forms.DataGridTableStyle.OnAllowSortingChanged","System.Windows.Forms.DataGridTableStyle.OnAlternatingBackColorChanged","System.Windows.Forms.DataGridTableStyle.OnBackColorChanged","System.Windows.Forms.DataGridTableStyle.OnColumnHeadersVisibleChanged","System.Windows.Forms.DataGridTableStyle.OnForeColorChanged","System.Windows.Forms.DataGridTableStyle.OnGridLineColorChanged","System.Windows.Forms.DataGridTableStyle.OnGridLineStyleChanged","System.Windows.Forms.DataGridTableStyle.OnHeaderBackColorChanged","System.Windows.Forms.DataGridTableStyle.OnHeaderFontChanged","System.Windows.Forms.DataGridTableStyle.OnHeaderForeColorChanged","System.Windows.Forms.DataGridTableStyle.OnLinkColorChanged","System.Windows.Forms.DataGridTableStyle.OnLinkHoverColorChanged","System.Windows.Forms.DataGridTableStyle.OnMappingNameChanged","System.Windows.Forms.DataGridTableStyle.OnPreferredColumnWidthChanged","System.Windows.Forms.DataGridTableStyle.OnPreferredRowHeightChanged","System.Windows.Forms.DataGridTableStyle.OnReadOnlyChanged","System.Windows.Forms.DataGridTableStyle.OnRowHeadersVisibleChanged","System.Windows.Forms.DataGridTableStyle.OnRowHeaderWidthChanged","System.Windows.Forms.DataGridTableStyle.OnSelectionBackColorChanged","System.Windows.Forms.DataGridTableStyle.OnSelectionForeColorChanged","System.Windows.Forms.DataGridTableStyle.PreferredColumnWidth","System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged","System.Windows.Forms.DataGridTableStyle.add_PreferredColumnWidthChanged","System.Windows.Forms.DataGridTableStyle.remove_PreferredColumnWidthChanged","System.Windows.Forms.DataGridTableStyle.PreferredRowHeight","System.Windows.Forms.DataGridTableStyle.PreferredRowHeightChanged","System.Windows.Forms.DataGridTableStyle.add_PreferredRowHeightChanged","System.Windows.Forms.DataGridTableStyle.remove_PreferredRowHeightChanged","System.Windows.Forms.DataGridTableStyle.ReadOnly","System.Windows.Forms.DataGridTableStyle.ReadOnlyChanged","System.Windows.Forms.DataGridTableStyle.add_ReadOnlyChanged","System.Windows.Forms.DataGridTableStyle.remove_ReadOnlyChanged","System.Windows.Forms.DataGridTableStyle.ResetAlternatingBackColor","System.Windows.Forms.DataGridTableStyle.ResetBackColor","System.Windows.Forms.DataGridTableStyle.ResetForeColor","System.Windows.Forms.DataGridTableStyle.ResetGridLineColor","System.Windows.Forms.DataGridTableStyle.ResetHeaderBackColor","System.Windows.Forms.DataGridTableStyle.ResetHeaderFont","System.Windows.Forms.DataGridTableStyle.ResetHeaderForeColor","System.Windows.Forms.DataGridTableStyle.ResetLinkColor","System.Windows.Forms.DataGridTableStyle.ResetLinkHoverColor","System.Windows.Forms.DataGridTableStyle.ResetSelectionBackColor","System.Windows.Forms.DataGridTableStyle.ResetSelectionForeColor","System.Windows.Forms.DataGridTableStyle.RowHeadersVisible","System.Windows.Forms.DataGridTableStyle.RowHeadersVisibleChanged","System.Windows.Forms.DataGridTableStyle.add_RowHeadersVisibleChanged","System.Windows.Forms.DataGridTableStyle.remove_RowHeadersVisibleChanged","System.Windows.Forms.DataGridTableStyle.RowHeaderWidth","System.Windows.Forms.DataGridTableStyle.RowHeaderWidthChanged","System.Windows.Forms.DataGridTableStyle.add_RowHeaderWidthChanged","System.Windows.Forms.DataGridTableStyle.remove_RowHeaderWidthChanged","System.Windows.Forms.DataGridTableStyle.SelectionBackColor","System.Windows.Forms.DataGridTableStyle.SelectionBackColorChanged","System.Windows.Forms.DataGridTableStyle.add_SelectionBackColorChanged","System.Windows.Forms.DataGridTableStyle.remove_SelectionBackColorChanged","System.Windows.Forms.DataGridTableStyle.SelectionForeColor","System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged","System.Windows.Forms.DataGridTableStyle.add_SelectionForeColorChanged","System.Windows.Forms.DataGridTableStyle.remove_SelectionForeColorChanged","System.Windows.Forms.DataGridTableStyle.ShouldSerializeAlternatingBackColor","System.Windows.Forms.DataGridTableStyle.ShouldSerializeBackColor","System.Windows.Forms.DataGridTableStyle.ShouldSerializeForeColor","System.Windows.Forms.DataGridTableStyle.ShouldSerializeGridLineColor","System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderBackColor","System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderForeColor","System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkColor","System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkHoverColor","System.Windows.Forms.DataGridTableStyle.ShouldSerializePreferredRowHeight","System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionBackColor","System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionForeColor"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.DataGridTableStyle","System::Windows::Forms::DataGridTableStyle","System.Windows.Forms.DataGridTableStyle.#ctor","System::Windows::Forms::DataGridTableStyle::#ctor","System.Windows.Forms.DataGridTableStyle.AllowSorting","System::Windows::Forms::DataGridTableStyle::AllowSorting","System.Windows.Forms.DataGridTableStyle.AllowSortingChanged","System::Windows::Forms::DataGridTableStyle::AllowSortingChanged","System.Windows.Forms.DataGridTableStyle.AlternatingBackColor","System::Windows::Forms::DataGridTableStyle::AlternatingBackColor","System.Windows.Forms.DataGridTableStyle.AlternatingBackColorChanged","System::Windows::Forms::DataGridTableStyle::AlternatingBackColorChanged","System.Windows.Forms.DataGridTableStyle.BackColor","System::Windows::Forms::DataGridTableStyle::BackColor","System.Windows.Forms.DataGridTableStyle.BackColorChanged","System::Windows::Forms::DataGridTableStyle::BackColorChanged","System.Windows.Forms.DataGridTableStyle.BeginEdit","System::Windows::Forms::DataGridTableStyle::BeginEdit","System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible","System::Windows::Forms::DataGridTableStyle::ColumnHeadersVisible","System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisibleChanged","System::Windows::Forms::DataGridTableStyle::ColumnHeadersVisibleChanged","System.Windows.Forms.DataGridTableStyle.CreateGridColumn","System::Windows::Forms::DataGridTableStyle::CreateGridColumn","System.Windows.Forms.DataGridTableStyle.DataGrid","System::Windows::Forms::DataGridTableStyle::DataGrid","System.Windows.Forms.DataGridTableStyle.DefaultTableStyle","System::Windows::Forms::DataGridTableStyle::DefaultTableStyle","System.Windows.Forms.DataGridTableStyle.Dispose","System::Windows::Forms::DataGridTableStyle::Dispose","System.Windows.Forms.DataGridTableStyle.EndEdit","System::Windows::Forms::DataGridTableStyle::EndEdit","System.Windows.Forms.DataGridTableStyle.ForeColor","System::Windows::Forms::DataGridTableStyle::ForeColor","System.Windows.Forms.DataGridTableStyle.ForeColorChanged","System::Windows::Forms::DataGridTableStyle::ForeColorChanged","System.Windows.Forms.DataGridTableStyle.GridColumnStyles","System::Windows::Forms::DataGridTableStyle::GridColumnStyles","System.Windows.Forms.DataGridTableStyle.GridLineColor","System::Windows::Forms::DataGridTableStyle::GridLineColor","System.Windows.Forms.DataGridTableStyle.GridLineColorChanged","System::Windows::Forms::DataGridTableStyle::GridLineColorChanged","System.Windows.Forms.DataGridTableStyle.GridLineStyle","System::Windows::Forms::DataGridTableStyle::GridLineStyle","System.Windows.Forms.DataGridTableStyle.GridLineStyleChanged","System::Windows::Forms::DataGridTableStyle::GridLineStyleChanged","System.Windows.Forms.DataGridTableStyle.HeaderBackColor","System::Windows::Forms::DataGridTableStyle::HeaderBackColor","System.Windows.Forms.DataGridTableStyle.HeaderBackColorChanged","System::Windows::Forms::DataGridTableStyle::HeaderBackColorChanged","System.Windows.Forms.DataGridTableStyle.HeaderFont","System::Windows::Forms::DataGridTableStyle::HeaderFont","System.Windows.Forms.DataGridTableStyle.HeaderFontChanged","System::Windows::Forms::DataGridTableStyle::HeaderFontChanged","System.Windows.Forms.DataGridTableStyle.HeaderForeColor","System::Windows::Forms::DataGridTableStyle::HeaderForeColor","System.Windows.Forms.DataGridTableStyle.HeaderForeColorChanged","System::Windows::Forms::DataGridTableStyle::HeaderForeColorChanged","System.Windows.Forms.DataGridTableStyle.LinkColor","System::Windows::Forms::DataGridTableStyle::LinkColor","System.Windows.Forms.DataGridTableStyle.LinkColorChanged","System::Windows::Forms::DataGridTableStyle::LinkColorChanged","System.Windows.Forms.DataGridTableStyle.LinkHoverColor","System::Windows::Forms::DataGridTableStyle::LinkHoverColor","System.Windows.Forms.DataGridTableStyle.LinkHoverColorChanged","System::Windows::Forms::DataGridTableStyle::LinkHoverColorChanged","System.Windows.Forms.DataGridTableStyle.MappingName","System::Windows::Forms::DataGridTableStyle::MappingName","System.Windows.Forms.DataGridTableStyle.MappingNameChanged","System::Windows::Forms::DataGridTableStyle::MappingNameChanged","System.Windows.Forms.DataGridTableStyle.OnAllowSortingChanged","System::Windows::Forms::DataGridTableStyle::OnAllowSortingChanged","System.Windows.Forms.DataGridTableStyle.OnAlternatingBackColorChanged","System::Windows::Forms::DataGridTableStyle::OnAlternatingBackColorChanged","System.Windows.Forms.DataGridTableStyle.OnBackColorChanged","System::Windows::Forms::DataGridTableStyle::OnBackColorChanged","System.Windows.Forms.DataGridTableStyle.OnColumnHeadersVisibleChanged","System::Windows::Forms::DataGridTableStyle::OnColumnHeadersVisibleChanged","System.Windows.Forms.DataGridTableStyle.OnForeColorChanged","System::Windows::Forms::DataGridTableStyle::OnForeColorChanged","System.Windows.Forms.DataGridTableStyle.OnGridLineColorChanged","System::Windows::Forms::DataGridTableStyle::OnGridLineColorChanged","System.Windows.Forms.DataGridTableStyle.OnGridLineStyleChanged","System::Windows::Forms::DataGridTableStyle::OnGridLineStyleChanged","System.Windows.Forms.DataGridTableStyle.OnHeaderBackColorChanged","System::Windows::Forms::DataGridTableStyle::OnHeaderBackColorChanged","System.Windows.Forms.DataGridTableStyle.OnHeaderFontChanged","System::Windows::Forms::DataGridTableStyle::OnHeaderFontChanged","System.Windows.Forms.DataGridTableStyle.OnHeaderForeColorChanged","System::Windows::Forms::DataGridTableStyle::OnHeaderForeColorChanged","System.Windows.Forms.DataGridTableStyle.OnLinkColorChanged","System::Windows::Forms::DataGridTableStyle::OnLinkColorChanged","System.Windows.Forms.DataGridTableStyle.OnLinkHoverColorChanged","System::Windows::Forms::DataGridTableStyle::OnLinkHoverColorChanged","System.Windows.Forms.DataGridTableStyle.OnMappingNameChanged","System::Windows::Forms::DataGridTableStyle::OnMappingNameChanged","System.Windows.Forms.DataGridTableStyle.OnPreferredColumnWidthChanged","System::Windows::Forms::DataGridTableStyle::OnPreferredColumnWidthChanged","System.Windows.Forms.DataGridTableStyle.OnPreferredRowHeightChanged","System::Windows::Forms::DataGridTableStyle::OnPreferredRowHeightChanged","System.Windows.Forms.DataGridTableStyle.OnReadOnlyChanged","System::Windows::Forms::DataGridTableStyle::OnReadOnlyChanged","System.Windows.Forms.DataGridTableStyle.OnRowHeadersVisibleChanged","System::Windows::Forms::DataGridTableStyle::OnRowHeadersVisibleChanged","System.Windows.Forms.DataGridTableStyle.OnRowHeaderWidthChanged","System::Windows::Forms::DataGridTableStyle::OnRowHeaderWidthChanged","System.Windows.Forms.DataGridTableStyle.OnSelectionBackColorChanged","System::Windows::Forms::DataGridTableStyle::OnSelectionBackColorChanged","System.Windows.Forms.DataGridTableStyle.OnSelectionForeColorChanged","System::Windows::Forms::DataGridTableStyle::OnSelectionForeColorChanged","System.Windows.Forms.DataGridTableStyle.PreferredColumnWidth","System::Windows::Forms::DataGridTableStyle::PreferredColumnWidth","System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged","System::Windows::Forms::DataGridTableStyle::PreferredColumnWidthChanged","System.Windows.Forms.DataGridTableStyle.PreferredRowHeight","System::Windows::Forms::DataGridTableStyle::PreferredRowHeight","System.Windows.Forms.DataGridTableStyle.PreferredRowHeightChanged","System::Windows::Forms::DataGridTableStyle::PreferredRowHeightChanged","System.Windows.Forms.DataGridTableStyle.ReadOnly","System::Windows::Forms::DataGridTableStyle::ReadOnly","System.Windows.Forms.DataGridTableStyle.ReadOnlyChanged","System::Windows::Forms::DataGridTableStyle::ReadOnlyChanged","System.Windows.Forms.DataGridTableStyle.ResetAlternatingBackColor","System::Windows::Forms::DataGridTableStyle::ResetAlternatingBackColor","System.Windows.Forms.DataGridTableStyle.ResetBackColor","System::Windows::Forms::DataGridTableStyle::ResetBackColor","System.Windows.Forms.DataGridTableStyle.ResetForeColor","System::Windows::Forms::DataGridTableStyle::ResetForeColor","System.Windows.Forms.DataGridTableStyle.ResetGridLineColor","System::Windows::Forms::DataGridTableStyle::ResetGridLineColor","System.Windows.Forms.DataGridTableStyle.ResetHeaderBackColor","System::Windows::Forms::DataGridTableStyle::ResetHeaderBackColor","System.Windows.Forms.DataGridTableStyle.ResetHeaderFont","System::Windows::Forms::DataGridTableStyle::ResetHeaderFont","System.Windows.Forms.DataGridTableStyle.ResetHeaderForeColor","System::Windows::Forms::DataGridTableStyle::ResetHeaderForeColor","System.Windows.Forms.DataGridTableStyle.ResetLinkColor","System::Windows::Forms::DataGridTableStyle::ResetLinkColor","System.Windows.Forms.DataGridTableStyle.ResetLinkHoverColor","System::Windows::Forms::DataGridTableStyle::ResetLinkHoverColor","System.Windows.Forms.DataGridTableStyle.ResetSelectionBackColor","System::Windows::Forms::DataGridTableStyle::ResetSelectionBackColor","System.Windows.Forms.DataGridTableStyle.ResetSelectionForeColor","System::Windows::Forms::DataGridTableStyle::ResetSelectionForeColor","System.Windows.Forms.DataGridTableStyle.RowHeadersVisible","System::Windows::Forms::DataGridTableStyle::RowHeadersVisible","System.Windows.Forms.DataGridTableStyle.RowHeadersVisibleChanged","System::Windows::Forms::DataGridTableStyle::RowHeadersVisibleChanged","System.Windows.Forms.DataGridTableStyle.RowHeaderWidth","System::Windows::Forms::DataGridTableStyle::RowHeaderWidth","System.Windows.Forms.DataGridTableStyle.RowHeaderWidthChanged","System::Windows::Forms::DataGridTableStyle::RowHeaderWidthChanged","System.Windows.Forms.DataGridTableStyle.SelectionBackColor","System::Windows::Forms::DataGridTableStyle::SelectionBackColor","System.Windows.Forms.DataGridTableStyle.SelectionBackColorChanged","System::Windows::Forms::DataGridTableStyle::SelectionBackColorChanged","System.Windows.Forms.DataGridTableStyle.SelectionForeColor","System::Windows::Forms::DataGridTableStyle::SelectionForeColor","System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged","System::Windows::Forms::DataGridTableStyle::SelectionForeColorChanged","System.Windows.Forms.DataGridTableStyle.ShouldSerializeAlternatingBackColor","System::Windows::Forms::DataGridTableStyle::ShouldSerializeAlternatingBackColor","System.Windows.Forms.DataGridTableStyle.ShouldSerializeBackColor","System::Windows::Forms::DataGridTableStyle::ShouldSerializeBackColor","System.Windows.Forms.DataGridTableStyle.ShouldSerializeForeColor","System::Windows::Forms::DataGridTableStyle::ShouldSerializeForeColor","System.Windows.Forms.DataGridTableStyle.ShouldSerializeGridLineColor","System::Windows::Forms::DataGridTableStyle::ShouldSerializeGridLineColor","System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderBackColor","System::Windows::Forms::DataGridTableStyle::ShouldSerializeHeaderBackColor","System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderForeColor","System::Windows::Forms::DataGridTableStyle::ShouldSerializeHeaderForeColor","System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkColor","System::Windows::Forms::DataGridTableStyle::ShouldSerializeLinkColor","System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkHoverColor","System::Windows::Forms::DataGridTableStyle::ShouldSerializeLinkHoverColor","System.Windows.Forms.DataGridTableStyle.ShouldSerializePreferredRowHeight","System::Windows::Forms::DataGridTableStyle::ShouldSerializePreferredRowHeight","System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionBackColor","System::Windows::Forms::DataGridTableStyle::ShouldSerializeSelectionBackColor","System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionForeColor","System::Windows::Forms::DataGridTableStyle::ShouldSerializeSelectionForeColor"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"6d727cee-f158-7dce-21d0-63ebafc5103a","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\DataGridTableStyle.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/DataGridTableStyle.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataGridTableStyle class | Microsoft Docs","_op_ogTitle":"DataGridTableStyle class","description":"Represents the table drawn by the  control at run time.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.DataGridTableStyle","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.datagridtablestyle","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.datagridtablestyle","fileRelativePath":"System.Windows.Forms.DataGridTableStyle.html"},"themesRelativePathToOutputRoot":"_themes/"}