{"content":"    \r\n    <h1 id=\"System_Windows_Input_ICommand\">\r\n      <span class=\"lang-csharp\">ICommand</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines a command.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.TypeConverter(&quot;System.Windows.Input.CommandConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null&quot;)]\n[System.Windows.Markup.ValueSerializer(&quot;System.Windows.Input.CommandValueSerializer, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null&quot;)]\npublic interface ICommand</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p><a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a> and <a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a> are two implementations of the ICommand interface in Windows Presentation Foundation (WPF).  </p>\n<h2 id=\"icommand-in-windows-runtime-apps\">ICommand in Windows Runtime apps</h2>\n<p> The ICommand interface is the code contract for commands that are written in .NET for Windows Runtime apps. These commands provide the commanding behavior for UI elements such as a Windows Runtime XAML <code>Button</code> and in particular an <code>AppBarButton</code>. If you&#39;re defining commands for Windows Runtime apps you use basically the same techniques you&#39;d use for defining commands for a .NET app. Implement the command by defining a class that implements ICommand and specifically implement the <a class=\"xref\" href=\"system.windows.input.icommand#System_Windows_Input_ICommand_Execute_\" data-linktype=\"relative-path\">Execute</a> method.  </p>\n<p> XAML for Windows Runtime does not support x<code>:Static</code>, so don&#39;t attempt to use the <code>x:Static</code> markup extension if the command is used from Windows Runtime XAML. Also, the Windows Runtime does not have any predefined command libraries, so the XAML syntax shown here doesn&#39;t really apply for the case where you&#39;re implementing the interface and defining the command for Windows Runtime usage.  </p>\n<p><a name=\"xamlTextUsage_ICommand\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<p> &lt;<em>object property</em>=&quot;<em>predefinedCommandName</em>&quot;/&gt;  </p>\n<p> - or -  </p>\n<p> &lt;<em>object property</em>=&quot;<em>predefinedCommandName.predefinedCommandName</em>&quot;/&gt;  </p>\n<p> - or -  </p>\n<p> &lt;<em>object property</em>=&quot;{ <em>customClassName.customCommandName</em>}&quot;/&gt;  </p>\n<p><a name=\"xamlValues_ICommand\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <em>predefinedClassName</em><br> One of the predefined command classes.  </p>\n<p> <em>predefinedCommandName</em><br> One of the predefined commands.  </p>\n<p> <em>customClassName</em><br> A custom class that contains the custom command. Custom classes generally require an <code>xlmns</code> prefix mapping; see <a href=\"../Topic/XAML%20Namespaces%20and%20Namespace%20Mapping%20for%20WPF%20XAML.md\" data-linktype=\"relative-path\">XAML Namespaces and Namespace Mapping for WPF XAML</a>.  </p>\n<p> <em>customCommandName</em><br> A custom command.</p>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_ICommand_CanExecute_System_Object_\" data-linktype=\"self-bookmark\">CanExecute(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Defines the method that determines whether the command can execute in its current state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_ICommand_Execute_System_Object_\" data-linktype=\"self-bookmark\">Execute(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Defines the method to be called when the command is invoked.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_ICommand_CanExecuteChanged\" data-linktype=\"self-bookmark\">CanExecuteChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when changes occur that affect whether or not the command should execute.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_ICommand_CanExecute_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Input_ICommand_CanExecute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanExecute(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Defines the method that determines whether the command can execute in its current state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CanExecute (object parameter);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Data used by the command.  If the command does not require data to be passed, this object can be set to <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this command can be executed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Typically, a command source calls the CanExecute method when the <a class=\"xref\" href=\"system.windows.input.icommand#System_Windows_Input_ICommand_CanExecuteChanged\" data-linktype=\"relative-path\">CanExecuteChanged</a> event is raised.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_ICommand_Execute_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Input_ICommand_Execute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Execute(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Defines the method to be called when the command is invoked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Execute (object parameter);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Data used by the command.  If the command does not require data to be passed, this object can be set to <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_ICommand_CanExecuteChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanExecuteChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when changes occur that affect whether or not the command should execute.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler CanExecuteChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Normally, a command source calls <a class=\"xref\" href=\"system.windows.input.icommand#System_Windows_Input_ICommand_CanExecute_\" data-linktype=\"relative-path\">CanExecute</a> on the command when this event occurs.  </p>\n<p> Normally, if the command cannot execute, the command source disables itself.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Input.ICommand.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Input.ICommand.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ICommand\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ICommand.CanExecute\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ICommand.CanExecuteChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ICommand.add_CanExecuteChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ICommand.remove_CanExecuteChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ICommand.Execute\">\r\n<meta name=\"APILocation\" content=\"PresentationCore.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"55d364fb-bafe-7504-5092-ebf314edab11\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines a command.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Input/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Input.ICommand\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Input.ICommand.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Input.ICommand.yml","open_to_public_contributors":true,"api_name":["System.Windows.Input.ICommand","System.Windows.Input.ICommand.CanExecute","System.Windows.Input.ICommand.CanExecuteChanged","System.Windows.Input.ICommand.add_CanExecuteChanged","System.Windows.Input.ICommand.remove_CanExecuteChanged","System.Windows.Input.ICommand.Execute"],"api_location":["PresentationCore.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Input.ICommand","System::Windows::Input::ICommand","System.Windows.Input.ICommand.CanExecute","System::Windows::Input::ICommand::CanExecute","System.Windows.Input.ICommand.CanExecuteChanged","System::Windows::Input::ICommand::CanExecuteChanged","System.Windows.Input.ICommand.Execute","System::Windows::Input::ICommand::Execute"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"55d364fb-bafe-7504-5092-ebf314edab11","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Input/ICommand.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ICommand interface | Microsoft Docs","_op_ogTitle":"ICommand interface","description":"Defines a command.\n","toc_asset_id":"_splitted/System.Windows.Input/toc.json","toc_rel":"_splitted/System.Windows.Input/toc.json","source_url":"","ms.assetid":"System.Windows.Input.ICommand","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.input.icommand","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.input.icommand","fileRelativePath":"System.Windows.Input.ICommand.html"},"themesRelativePathToOutputRoot":"_themes/"}