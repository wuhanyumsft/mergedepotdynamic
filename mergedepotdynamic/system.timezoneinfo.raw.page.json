{"content":"    \r\n    <h1 id=\"System_TimeZoneInfo\">\r\n      <span class=\"lang-csharp\">TimeZoneInfo</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents any time zone in the world.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.CompilerServices.TypeForwardedFrom(&quot;System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089&quot;)]\npublic sealed class TimeZoneInfo : IEquatable&lt;TimeZoneInfo&gt;, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">TimeZoneInfo</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A time zone is a geographical region in which the same time is used.  </p>\n<p> TheTimeZoneInfo class offers significant enhancements over the <a class=\"xref\" href=\"system.timezone\" data-linktype=\"relative-path\">TimeZone</a> class, which provides only limited functionality.  </p>\n<p> The <a class=\"xref\" href=\"system.timezone\" data-linktype=\"relative-path\">TimeZone</a> class recognizes only the local time zone, and can convert times between Coordinated Universal Time (UTC) and local time. A TimeZoneInfo object can represent any time zone, and methods of the TimeZoneInfo class can be used to convert the time in one time zone to the corresponding time in any other time zone. The members of the TimeZoneInfo class support the following operations:  </p>\n<ul>\n<li><p>Retrieving a time zone that is already defined by the operating system.  </p>\n</li>\n<li><p>Enumerating the time zones that are available on a system.  </p>\n</li>\n<li><p>Converting times between different time zones.  </p>\n</li>\n<li><p>Creating a new time zone that is not already defined by the operating system.  </p>\n</li>\n<li><p>Serializing a time zone for later retrieval.  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> An instance of the TimeZoneInfo class is immutable. Once an object has been instantiated, its values cannot be modified.  </p>\n</div>\n<p> You cannot instantiate a TimeZoneInfo object using the <code>new</code> keyword. Instead, you must call one of the static members of the TimeZoneInfo class shown in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Static member name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_CreateCustomTimeZone_\" data-linktype=\"relative-path\">CreateCustomTimeZone</a> method</td>\n<td>Creates a custom time zone from application-supplied data.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_FindSystemTimeZoneById_\" data-linktype=\"relative-path\">FindSystemTimeZoneById</a> method</td>\n<td>Instantiates a time zone defined in the system registry based on the zone&#39;s identifier.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_FromSerializedString_\" data-linktype=\"relative-path\">FromSerializedString</a> method</td>\n<td>Deserializes a string value to re-create a previously serialized TimeZoneInfo object.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_GetSystemTimeZones_\" data-linktype=\"relative-path\">GetSystemTimeZones</a> method</td>\n<td>Returns an enumerable <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> of TimeZoneInfo objects that represents all time zones that are available on the local system.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a> property</td>\n<td>Instantiates a TimeZoneInfo object that represents the local time zone.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Utc_\" data-linktype=\"relative-path\">Utc</a> property</td>\n<td>Instantiates a TimeZoneInfo object that represents the UTC zone.</td>\n</tr>\n</tbody>\n</table>\n<p> You can use the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_CreateCustomTimeZone_\" data-linktype=\"relative-path\">CreateCustomTimeZone</a> method to create a time zone that is not defined in the local system registry. You can then use the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ToSerializedString_\" data-linktype=\"relative-path\">ToSerializedString</a> property to save the time zone object&#39;s information as a string, which can be stored in some form that is accessible to the application. You can use the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_FromSerializedString_\" data-linktype=\"relative-path\">FromSerializedString</a> method to convert a serialized string back to a TimeZoneInfo object.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_BaseUtcOffset\" data-linktype=\"self-bookmark\">BaseUtcOffset</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the time difference between the current time zone&#39;s standard time and Coordinated Universal Time (UTC).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_DaylightName\" data-linktype=\"self-bookmark\">DaylightName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the display name for the current time zone&#39;s daylight saving time.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_DisplayName\" data-linktype=\"self-bookmark\">DisplayName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the general display name that represents the time zone.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_Id\" data-linktype=\"self-bookmark\">Id</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the time zone identifier.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_Local\" data-linktype=\"self-bookmark\">Local</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object that represents the local time zone.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_StandardName\" data-linktype=\"self-bookmark\">StandardName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the display name for the time zone&#39;s standard time.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_SupportsDaylightSavingTime\" data-linktype=\"self-bookmark\">SupportsDaylightSavingTime</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the time zone has any daylight saving time rules.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_Utc\" data-linktype=\"self-bookmark\">Utc</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object that represents the Coordinated Universal Time (UTC) zone.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_ClearCachedData\" data-linktype=\"self-bookmark\">ClearCachedData()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Clears cached time zone data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_ConvertTime_System_DateTime_System_TimeZoneInfo_\" data-linktype=\"self-bookmark\">ConvertTime(DateTime,TimeZoneInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts a time to the time in a particular time zone.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_ConvertTime_System_DateTimeOffset_System_TimeZoneInfo_\" data-linktype=\"self-bookmark\">ConvertTime(DateTimeOffset,TimeZoneInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts a time to the time in a particular time zone.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_ConvertTime_System_DateTime_System_TimeZoneInfo_System_TimeZoneInfo_\" data-linktype=\"self-bookmark\">ConvertTime(DateTime,TimeZoneInfo,TimeZoneInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts a time from one time zone to another.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_ConvertTimeBySystemTimeZoneId_System_DateTime_System_String_\" data-linktype=\"self-bookmark\">ConvertTimeBySystemTimeZoneId(DateTime,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts a time to the time in another time zone based on the time zone&#39;s identifier.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_ConvertTimeBySystemTimeZoneId_System_DateTimeOffset_System_String_\" data-linktype=\"self-bookmark\">ConvertTimeBySystemTimeZoneId(DateTimeOffset,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts a time to the time in another time zone based on the time zone&#39;s identifier.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_ConvertTimeBySystemTimeZoneId_System_DateTime_System_String_System_String_\" data-linktype=\"self-bookmark\">ConvertTimeBySystemTimeZoneId(DateTime,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts a time from one time zone to another based on time zone identifiers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_ConvertTimeFromUtc_System_DateTime_System_TimeZoneInfo_\" data-linktype=\"self-bookmark\">ConvertTimeFromUtc(DateTime,TimeZoneInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts a Coordinated Universal Time (UTC) to the time in a specified time zone.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_ConvertTimeToUtc_System_DateTime_\" data-linktype=\"self-bookmark\">ConvertTimeToUtc(DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the specified date and time to Coordinated Universal Time (UTC).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_ConvertTimeToUtc_System_DateTime_System_TimeZoneInfo_\" data-linktype=\"self-bookmark\">ConvertTimeToUtc(DateTime,TimeZoneInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the time in a specified time zone to Coordinated Universal Time (UTC).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_CreateCustomTimeZone_System_String_System_TimeSpan_System_String_System_String_\" data-linktype=\"self-bookmark\">CreateCustomTimeZone(String,TimeSpan,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, and a standard time display name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_CreateCustomTimeZone_System_String_System_TimeSpan_System_String_System_String_System_String_System_TimeZoneInfo_AdjustmentRule___\" data-linktype=\"self-bookmark\">CreateCustomTimeZone(String,TimeSpan,String,String,String,TimeZoneInfo+AdjustmentRule[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, a standard time name, a daylight saving time name, and daylight saving time rules.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_CreateCustomTimeZone_System_String_System_TimeSpan_System_String_System_String_System_String_System_TimeZoneInfo_AdjustmentRule___System_Boolean_\" data-linktype=\"self-bookmark\">CreateCustomTimeZone(String,TimeSpan,String,String,String,TimeZoneInfo+AdjustmentRule[],Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, a standard time name, a daylight saving time name, daylight saving time rules, and a value that indicates whether the returned object reflects daylight saving time information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the current <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object and another object are equal.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_Equals_System_TimeZoneInfo_\" data-linktype=\"self-bookmark\">Equals(TimeZoneInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the current <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object and another <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object are equal.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_FindSystemTimeZoneById_System_String_\" data-linktype=\"self-bookmark\">FindSystemTimeZoneById(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object from the registry based on its identifier.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_FromSerializedString_System_String_\" data-linktype=\"self-bookmark\">FromSerializedString(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deserializes a string to re-create an original serialized <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_GetAdjustmentRules\" data-linktype=\"self-bookmark\">GetAdjustmentRules()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves an array of <a class=\"xref\" href=\"system.timezoneinfo.adjustmentrule\" data-linktype=\"relative-path\">TimeZoneInfo+AdjustmentRule</a> objects that apply to the current <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_GetAmbiguousTimeOffsets_System_DateTime_\" data-linktype=\"self-bookmark\">GetAmbiguousTimeOffsets(DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns information about the possible dates and times that an ambiguous date and time can be mapped to.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_GetAmbiguousTimeOffsets_System_DateTimeOffset_\" data-linktype=\"self-bookmark\">GetAmbiguousTimeOffsets(DateTimeOffset)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns information about the possible dates and times that an ambiguous date and time can be mapped to.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serves as a hash function for hashing algorithms and data structures such as hash tables.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_GetSystemTimeZones\" data-linktype=\"self-bookmark\">GetSystemTimeZones()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a sorted collection of all the time zones about which information is available on the local system.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_GetUtcOffset_System_DateTime_\" data-linktype=\"self-bookmark\">GetUtcOffset(DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Calculates the offset or difference between the time in this time zone and Coordinated Universal Time (UTC) for a particular date and time.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_GetUtcOffset_System_DateTimeOffset_\" data-linktype=\"self-bookmark\">GetUtcOffset(DateTimeOffset)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Calculates the offset or difference between the time in this time zone and Coordinated Universal Time (UTC) for a particular date and time.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_HasSameRules_System_TimeZoneInfo_\" data-linktype=\"self-bookmark\">HasSameRules(TimeZoneInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the current object and another <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object have the same adjustment rules.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_IsAmbiguousTime_System_DateTime_\" data-linktype=\"self-bookmark\">IsAmbiguousTime(DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether a particular date and time in a particular time zone is ambiguous and can be mapped to two or more Coordinated Universal Time (UTC) times.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_IsAmbiguousTime_System_DateTimeOffset_\" data-linktype=\"self-bookmark\">IsAmbiguousTime(DateTimeOffset)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether a particular date and time in a particular time zone is ambiguous and can be mapped to two or more Coordinated Universal Time (UTC) times.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_IsDaylightSavingTime_System_DateTime_\" data-linktype=\"self-bookmark\">IsDaylightSavingTime(DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether a specified date and time falls in the range of daylight saving time for the time zone of the current <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_IsDaylightSavingTime_System_DateTimeOffset_\" data-linktype=\"self-bookmark\">IsDaylightSavingTime(DateTimeOffset)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether a specified date and time falls in the range of daylight saving time for the time zone of the current <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_IsInvalidTime_System_DateTime_\" data-linktype=\"self-bookmark\">IsInvalidTime(DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether a particular date and time is invalid.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_ToSerializedString\" data-linktype=\"self-bookmark\">ToSerializedString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the current <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object to a serialized string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the current <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object&#39;s display name.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_System_Object_\" data-linktype=\"self-bookmark\">IDeserializationCallback.OnDeserialization(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Runs when the deserialization of an object has been completed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZoneInfo_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Populates a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object with the data needed to serialize the current <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_BaseUtcOffset\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_BaseUtcOffset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BaseUtcOffset</div>        \r\n          </div>\r\n    \r\n            <p>Gets the time difference between the current time zone&#39;s standard time and Coordinated Universal Time (UTC).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TimeSpan BaseUtcOffset { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </div>\r\n                  <p>An object that indicates the time difference between the current time zone&#39;s standard time and Coordinated Universal Time (UTC).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The time span returned by the BaseUtcOffset property can range from 14 hours (for a time zone that is 14 hours ahead of Coordinated Universal Time (UTC)) to -14 hours (for a time zone that is 14 hours behind UTC). Time zones that are ahead of UTC have a positive offset; time zones that are behind UTC have a negative offset.  </p>\n<p> The BaseUtcOffset value is represented as a whole number of minutes. It cannot include a fractional number of minutes.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Because BaseUtcOffset is a property of the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object rather than the <a class=\"xref\" href=\"system.timezoneinfo.adjustmentrule\" data-linktype=\"relative-path\">TimeZoneInfo+AdjustmentRule</a> object, the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> class applies a single offset from UTC to all of a time zone&#39;s adjustments. To reflect a time zone that has modified its offset from UTC, you must create a new time zone using the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_CreateCustomTimeZone_\" data-linktype=\"relative-path\">CreateCustomTimeZone</a> method.  </p>\n</div>\n<p> The BaseUtcOffset property differs from the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_GetUtcOffset_\" data-linktype=\"relative-path\">GetUtcOffset</a> method in the following ways:  </p>\n<ul>\n<li><p>The BaseUtcOffset property returns the difference between UTC and the time zone&#39;s standard time; the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_GetUtcOffset_\" data-linktype=\"relative-path\">GetUtcOffset</a> method returns the difference between UTC and the time zone&#39;s time at a particular point in time.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_GetUtcOffset_\" data-linktype=\"relative-path\">GetUtcOffset</a> method reflects the application of any adjustment rules to the time zone; the BaseUtcOffset property does not.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the BaseUtcOffset property to display the difference between the local time and Coordinated Universal Time (UTC).  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZone2.Class#1\">         TimeZoneInfo localZone = TimeZoneInfo.Local;\n         Console.WriteLine(&quot;The {0} time zone is {1}:{2} {3} than Coordinated Universal Time.&quot;,  \n                           localZone.DisplayName, \n                           Math.Abs(localZone.BaseUtcOffset.Hours), \n                           Math.Abs(localZone.BaseUtcOffset.Minutes), \n                           (localZone.BaseUtcOffset &gt;= TimeSpan.Zero) ? &quot;later&quot; : &quot;earlier&quot;);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone2.Class#1\">      Dim localZone As TimeZoneInfo = TimeZoneInfo.Local\n      Console.WriteLine(&quot;The {0} time zone is {1}:{2} {3} than Coordinated Universal Time.&quot;, _ \n                        localZone.StandardName, _\n                        Math.Abs(localZone.BaseUtcOffset.Hours), _\n                        Math.Abs(localZone.BaseUtcOffset.Minutes), _\n                        IIf(localZone.BaseUtcOffset &gt;= TimeSpan.Zero, &quot;later&quot;, &quot;earlier&quot;))\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_DaylightName\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_DaylightName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DaylightName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the display name for the current time zone&#39;s daylight saving time.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string DaylightName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The display name for the time zone&#39;s daylight saving time.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The display name is localized based on the culture installed with the Windows operating system.  </p>\n<p> A DaylightName property whose value is not <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">System.String</a> or <code>null</code> does not necessarily indicate that the time zone supports daylight saving time. To determine whether the time zone supports daylight saving time, check the value of its <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_SupportsDaylightSavingTime_\" data-linktype=\"relative-path\">SupportsDaylightSavingTime</a> property.  </p>\n<p> In most cases, the DaylightName property of time zones defined in the registry is not <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">System.String.Empty</a> or <code>null</code>. However, the DaylightName property of custom time zones can be set to <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">System.String.Empty</a>. This occurs when custom time zones are created by the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_CreateCustomTimeZone_System_String_System_TimeSpan_System_String_System_String_\" data-linktype=\"relative-path\">System.TimeZoneInfo.CreateCustomTimeZone(String,TimeSpan,String,String)</a> or the [TimeZoneInfo.CreateCustomTimeZone(String,â€‚TimeSpan,â€‚String,â€‚String,â€‚String,â€‚TimeZoneInfo.AdjustmentRule&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.TimeZoneInfo.AdjustmentRule%5B%5D%2CSystem.Boolean%29?displayProperty=fullName&gt; overload and the <code>disableDaylightSavingTime</code> parameter is <code>true</code>. Therefore, your code should never assume that the value of the DaylightName property is not <code>null</code> or empty.  </p>\n<p> The DaylightName property is equivalent to the <a class=\"xref\" href=\"system.timezone#System_TimeZone_DaylightName_\" data-linktype=\"relative-path\">DaylightName</a> property of the <a class=\"xref\" href=\"system.timezone\" data-linktype=\"relative-path\">TimeZone</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example defines a method named <code>DisplayDateWithTimeZoneName</code> that uses the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_IsDaylightSavingTime_System_DateTime_\" data-linktype=\"relative-path\">IsDaylightSavingTime(DateTime)</a> method to determine whether to display a time zone&#39;s standard time name or daylight saving time name.  </p>\n<pre><code class=\"lang-vb\" name=\"System.TimeZone2.IsDaylightSavingTime#1\">   Private Sub DisplayDateWithTimeZoneName(date1 As Date, timeZone As TimeZoneInfo)\n      Console.WriteLine(&quot;The time is {0:t} on {0:d} {1}&quot;, _\n                        date1, _\n                        IIf(timeZone.IsDaylightSavingTime(date1), _\n                            timezone.DaylightName, timezone.StandardName))   \n   End Sub\n   &#39; The example displays output similar to the following:\n   &#39;    The time is 1:00 AM on 4/2/2006 Pacific Standard Time   \n</code></pre><pre><code class=\"lang-cs\" name=\"System.TimeZone2.IsDaylightSavingTime#1\">   private void DisplayDateWithTimeZoneName(DateTime date1, TimeZoneInfo timeZone)\n   {\n      Console.WriteLine(&quot;The time is {0:t} on {0:d} {1}&quot;, \n                        date1, \n                        timeZone.IsDaylightSavingTime(date1) ?\n                            timeZone.DaylightName : timeZone.StandardName);   \n   }\n   // The example displays output similar to the following:\n   //    The time is 1:00 AM on 4/2/2006 Pacific Standard Time   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_DisplayName\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_DisplayName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DisplayName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the general display name that represents the time zone.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string DisplayName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The time zone&#39;s general display name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The display name is localized based on the culture installed with the Windows operating system.  </p>\n<p> Time zone display names for Windows system time zones follow a fairly standard format. The first portion of the display name is the time zone&#39;s base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses. For Coordinated Universal Time, the GMT acronym with no offset is enclosed in parentheses.  This is followed by a string that identifies the time zone or one or more of the cities, regions, or countries in the time zone. For example:  </p>\n<pre><code>(GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London  \n(GMT+02:00) Athens, Beirut, Istanbul, Minsk  \n(GMT-02:00) Mid-Atlantic  \n(GMT-07:00) Mountain Time (US &amp; Canada)\n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example retrieves a <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object that represents the local time zone and outputs its display name, standard time name, and daylight saving time name. The output is displayed for a system in the U.S. Pacific Standard Time zone.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZone2.Class#2\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      TimeZoneInfo localZone = TimeZoneInfo.Local;\n      Console.WriteLine(&quot;Local Time Zone ID: {0}&quot;, localZone.Id);\n      Console.WriteLine(&quot;   Display Name is: {0}.&quot;, localZone.DisplayName);\n      Console.WriteLine(&quot;   Standard name is: {0}.&quot;, localZone.StandardName);\n      Console.WriteLine(&quot;   Daylight saving name is: {0}.&quot;, localZone.DaylightName); \n   }\n}\n// The example displays output like the following:\n//     Local Time Zone ID: Pacific Standard Time\n//        Display Name is: (UTC-08:00) Pacific Time (US &amp; Canada).\n//        Standard name is: Pacific Standard Time.\n//        Daylight saving name is: Pacific Daylight Time.\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone2.Class#2\">Module Example\n   Public Sub Main()\n      Dim localZone As TimeZoneInfo = TimeZoneInfo.Local\n      Console.WriteLine(&quot;Local Time Zone ID: {0}&quot;, localZone.Id)\n      Console.WriteLine(&quot;   Display Name is: {0}.&quot;, localZone.DisplayName)\n      Console.WriteLine(&quot;   Standard name is: {0}.&quot;, localZone.StandardName)\n      Console.WriteLine(&quot;   Daylight saving name is: {0}.&quot;, localZone.DaylightName) \n   End Sub\nEnd Module\n&#39; The example displays output like the following:\n&#39;     Local Time Zone ID: Pacific Standard Time\n&#39;        Display Name is: (UTC-08:00) Pacific Time (US &amp; Canada).\n&#39;        Standard name is: Pacific Standard Time.\n&#39;        Daylight saving name is: Pacific Daylight Time.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_Id\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_Id_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Id</div>        \r\n          </div>\r\n    \r\n            <p>Gets the time zone identifier.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Id { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The time zone identifier.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The time zone identifier is a key string that uniquely identifies a particular time zone. In Windows XP and Windows Vista, it corresponds to the subkeys of the HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Time Zone branch of the registry. It can be passed as a parameter to the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_FindSystemTimeZoneById_\" data-linktype=\"relative-path\">FindSystemTimeZoneById</a> method to retrieve a particular time zone from the registry.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Although a key name in the Windows registry can be a maximum of 255 characters, we recommend that an identifier that you assign to a custom time zone be 32 characters or fewer. The longer the identifier, the greater the probability that an incorrect key name will be supplied when retrieving it.  </p>\n</div>\n<p> The value of the Id property is usually, but not always, identical to that of the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_StandardName_\" data-linktype=\"relative-path\">StandardName</a> property. The identifier of the Coordinated Universal Time zone is UTC.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example lists the identifier of each of the time zones defined on the local computer.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZone2.Class#5\">         ReadOnlyCollection&lt;TimeZoneInfo&gt; zones = TimeZoneInfo.GetSystemTimeZones();\n         Console.WriteLine(&quot;The local system has the following {0} time zones&quot;, zones.Count);\n         foreach (TimeZoneInfo zone in zones)\n            Console.WriteLine(zone.Id);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone2.Class#5\">      Dim zones As ReadOnlyCollection(Of TimeZoneInfo) = TimeZoneInfo.GetSystemTimeZones()\n      Console.WriteLine(&quot;The local system has the following {0} time zones&quot;, zones.Count)\n      For Each zone As TimeZoneInfo In zones\n         Console.WriteLine(zone.Id)\n      Next\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_Local\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_Local_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Local</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object that represents the local time zone.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static TimeZoneInfo Local { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a></div>\r\n                  </div>\r\n                  <p>An object that represents the local time zone.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The local time zone is the time zone on the computer where the code is executing.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> You should always access the local time zone through the Local property rather than assigning the local time zone to a <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object variable. This prevents the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object variable from being invalidated by a call to the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ClearCachedData_\" data-linktype=\"relative-path\">ClearCachedData</a> method.  </p>\n</div>\n<p> The <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object returned by the Local property reflects the setting of the <strong>Automatically adjust clock for daylight saving changes</strong> checkbox or the <strong>Automatically adjust clock for Daylight Saving Time</strong> checkbox in the Control Panel <strong>Date and Time</strong> application for Windows XP and Windows Vista, respectively. If the checkbox is unchecked, the cached copy of the local time zone contains no daylight saving time information. This means that:  </p>\n<ul>\n<li><p>The local time zone&#39;s <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_GetAdjustmentRules_\" data-linktype=\"relative-path\">GetAdjustmentRules</a> method returns an array whose length is zero.  </p>\n</li>\n<li><p>The local time zone&#39;s <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_SupportsDaylightSavingTime_\" data-linktype=\"relative-path\">SupportsDaylightSavingTime</a> property returns <code>false</code>.  </p>\n</li>\n<li><p>The local time zone has no ambiguous or invalid times (all calls to <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_IsAmbiguousTime_\" data-linktype=\"relative-path\">IsAmbiguousTime</a> or <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_IsInvalidTime_\" data-linktype=\"relative-path\">IsInvalidTime</a> return <code>false</code>).  </p>\n</li>\n<li><p>All calls to <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_IsDaylightSavingTime_\" data-linktype=\"relative-path\">IsDaylightSavingTime</a> with individual local times return false.  </p>\n<p>This is not true, however, if a reference to the local time zone is retrieved using the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_FindSystemTimeZoneById_\" data-linktype=\"relative-path\">FindSystemTimeZoneById</a> method.  </p>\n<p>The Local property corresponds to the <a class=\"xref\" href=\"system.timezone#System_TimeZone_CurrentTimeZone_\" data-linktype=\"relative-path\">CurrentTimeZone</a> property of the <a class=\"xref\" href=\"system.timezone\" data-linktype=\"relative-path\">TimeZone</a> class.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example retrieves a <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object that represents the local time zone and outputs its display name, standard time name, and daylight saving time name.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZone2.Class#2\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      TimeZoneInfo localZone = TimeZoneInfo.Local;\n      Console.WriteLine(&quot;Local Time Zone ID: {0}&quot;, localZone.Id);\n      Console.WriteLine(&quot;   Display Name is: {0}.&quot;, localZone.DisplayName);\n      Console.WriteLine(&quot;   Standard name is: {0}.&quot;, localZone.StandardName);\n      Console.WriteLine(&quot;   Daylight saving name is: {0}.&quot;, localZone.DaylightName); \n   }\n}\n// The example displays output like the following:\n//     Local Time Zone ID: Pacific Standard Time\n//        Display Name is: (UTC-08:00) Pacific Time (US &amp; Canada).\n//        Standard name is: Pacific Standard Time.\n//        Daylight saving name is: Pacific Daylight Time.\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone2.Class#2\">Module Example\n   Public Sub Main()\n      Dim localZone As TimeZoneInfo = TimeZoneInfo.Local\n      Console.WriteLine(&quot;Local Time Zone ID: {0}&quot;, localZone.Id)\n      Console.WriteLine(&quot;   Display Name is: {0}.&quot;, localZone.DisplayName)\n      Console.WriteLine(&quot;   Standard name is: {0}.&quot;, localZone.StandardName)\n      Console.WriteLine(&quot;   Daylight saving name is: {0}.&quot;, localZone.DaylightName) \n   End Sub\nEnd Module\n&#39; The example displays output like the following:\n&#39;     Local Time Zone ID: Pacific Standard Time\n&#39;        Display Name is: (UTC-08:00) Pacific Time (US &amp; Canada).\n&#39;        Standard name is: Pacific Standard Time.\n&#39;        Daylight saving name is: Pacific Daylight Time.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_StandardName\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_StandardName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StandardName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the display name for the time zone&#39;s standard time.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string StandardName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The display name of the time zone&#39;s standard time.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The display name is localized based on the culture installed with the Windows operating system.  </p>\n<p> The StandardName property is identical to the <a class=\"xref\" href=\"system.timezone#System_TimeZone_StandardName_\" data-linktype=\"relative-path\">StandardName</a> property of the <a class=\"xref\" href=\"system.timezone\" data-linktype=\"relative-path\">TimeZone</a> class.  </p>\n<p> If the operating system language is English, the value of the StandardName property is usually, but not always, identical to that of the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Id_\" data-linktype=\"relative-path\">Id</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example defines a method named <code>DisplayDateWithTimeZoneName</code> that uses the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_IsDaylightSavingTime_System_DateTime_\" data-linktype=\"relative-path\">IsDaylightSavingTime(DateTime)</a> method to determine whether to display a time zone&#39;s standard time name or daylight saving time name.  </p>\n<pre><code class=\"lang-vb\" name=\"System.TimeZone2.IsDaylightSavingTime#1\">   Private Sub DisplayDateWithTimeZoneName(date1 As Date, timeZone As TimeZoneInfo)\n      Console.WriteLine(&quot;The time is {0:t} on {0:d} {1}&quot;, _\n                        date1, _\n                        IIf(timeZone.IsDaylightSavingTime(date1), _\n                            timezone.DaylightName, timezone.StandardName))   \n   End Sub\n   &#39; The example displays output similar to the following:\n   &#39;    The time is 1:00 AM on 4/2/2006 Pacific Standard Time   \n</code></pre><pre><code class=\"lang-cs\" name=\"System.TimeZone2.IsDaylightSavingTime#1\">   private void DisplayDateWithTimeZoneName(DateTime date1, TimeZoneInfo timeZone)\n   {\n      Console.WriteLine(&quot;The time is {0:t} on {0:d} {1}&quot;, \n                        date1, \n                        timeZone.IsDaylightSavingTime(date1) ?\n                            timeZone.DaylightName : timeZone.StandardName);   \n   }\n   // The example displays output similar to the following:\n   //    The time is 1:00 AM on 4/2/2006 Pacific Standard Time   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_SupportsDaylightSavingTime\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_SupportsDaylightSavingTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SupportsDaylightSavingTime</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the time zone has any daylight saving time rules.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool SupportsDaylightSavingTime { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the time zone supports daylight saving time; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of the SupportsDaylightSavingTime property for the local time zone returned by the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a> property reflects the setting of the Control Panel <strong>Date and Time</strong> application&#39;s checkbox that defines whether the system automatically adjusts for daylight saving time. If it is unchecked, or if no checkbox is displayed for a time zone, the value of this property is <code>false</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example retrieves a collection of all time zones that are available on a local system and displays the names of those that do not support daylight saving time.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZone2.Class#4\">         ReadOnlyCollection&lt;TimeZoneInfo&gt; zones = TimeZoneInfo.GetSystemTimeZones();\n         foreach(TimeZoneInfo zone in zones)\n         {\n            if (! zone.SupportsDaylightSavingTime)\n               Console.WriteLine(zone.DisplayName);\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone2.Class#4\">      Dim zones As ReadOnlyCollection(Of TimeZoneInfo) = TimeZoneInfo.GetSystemTimeZones()\n      For Each zone As TimeZoneInfo In zones\n         If Not zone.SupportsDaylightSavingTime Then _\n            Console.WriteLine(zone.DisplayName)\n      Next\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_Utc\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_Utc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Utc</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object that represents the Coordinated Universal Time (UTC) zone.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static TimeZoneInfo Utc { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a></div>\r\n                  </div>\r\n                  <p>An object that represents the Coordinated Universal Time (UTC) zone.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is a built-in object; information about this <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object is not retrieved from the registry.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> You should always access the Coordinated Universal Time (UTC) zone through the Utc property rather than assigning the UTC time zone to a <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object variable. This prevents the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object variable from being invalidated by a call to the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ClearCachedData_\" data-linktype=\"relative-path\">ClearCachedData</a> method.  </p>\n</div>\n<p> Coordinated Universal Time was previously known as Greenwich Mean Time (GMT).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example retrieves a <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object that represents Coordinated Universal Time (UTC) and outputs its display name, standard time name, and daylight saving time name.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZone2.Class#3\">         TimeZoneInfo universalZone = TimeZoneInfo.Utc;\n         Console.WriteLine(&quot;The universal time zone is {0}.&quot;, universalZone.DisplayName);\n         Console.WriteLine(&quot;Its standard name is {0}.&quot;, universalZone.StandardName);\n         Console.WriteLine(&quot;Its daylight savings name is {0}.&quot;, universalZone.DaylightName); \n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone2.Class#3\">      Dim universalZone As TimeZoneInfo = TimeZoneInfo.Utc\n      Console.WriteLine(&quot;The universal time zone is {0}.&quot;, universalZone.DisplayName)\n      Console.WriteLine(&quot;Its standard name is {0}.&quot;, universalZone.StandardName)\n      Console.WriteLine(&quot;Its daylight savings name is {0}.&quot;, universalZone.DaylightName) \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_ClearCachedData\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_ClearCachedData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClearCachedData()</div>        \r\n          </div>\r\n    \r\n            <p>Clears cached time zone data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void ClearCachedData ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Cached time zone data includes data on the local time zone, the Coordinated Universal Time (UTC) zone, and any time zones that are retrieved by using methods such as <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_FindSystemTimeZoneById_\" data-linktype=\"relative-path\">FindSystemTimeZoneById</a> and <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_GetSystemTimeZones_\" data-linktype=\"relative-path\">GetSystemTimeZones</a>.  </p>\n<p> You might call the ClearCachedData method to reduce the memory devoted to the application&#39;s cache of time zone information or to reflect the fact that the local system&#39;s time zone has changed.  </p>\n<p> Storing references to the local and UTC time zones is not recommended. After the call to the ClearCachedData method, these object variables will be undefined <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> objects that are no longer references to <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a> or <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Utc_\" data-linktype=\"relative-path\">Utc</a>. For example, in the following code, the second call to the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTime_System_DateTime_System_TimeZoneInfo_System_TimeZoneInfo_\" data-linktype=\"relative-path\">System.TimeZoneInfo.ConvertTime(DateTime,TimeZoneInfo,TimeZoneInfo)</a> method throws an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> because the <code>local</code> variable is no longer considered equal to <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZone2.BestPractices#1\">      TimeZoneInfo cst = TimeZoneInfo.FindSystemTimeZoneById(&quot;Central Standard Time&quot;);\n      TimeZoneInfo local = TimeZoneInfo.Local;\n      Console.WriteLine(TimeZoneInfo.ConvertTime(DateTime.Now, local, cst));\n\n      TimeZoneInfo.ClearCachedData();\n      try\n      {\n         Console.WriteLine(TimeZoneInfo.ConvertTime(DateTime.Now, local, cst));\n      }\n      catch (ArgumentException e)\n      {\n         Console.WriteLine(e.GetType().Name + &quot;\\n   &quot; + e.Message);\n      }      \n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone2.BestPractices#1\">      Dim cst As TimeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById(&quot;Central Standard Time&quot;)\n      Dim local As TimeZoneInfo = TimeZoneInfo.Local\n      Console.WriteLine(TimeZoneInfo.ConvertTime(Date.Now, local, cst))\n      \n      TimeZoneInfo.ClearCachedData()\n      Try\n         Console.WriteLine(TimeZoneInfo.ConvertTime(Date.Now, local, cst))\n      Catch e As ArgumentException\n         Console.WriteLine(e.GetType().Name &amp; vbCrLf &amp; &quot;   &quot; &amp; e.Message)\n      End Try\n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_ConvertTime_System_DateTime_System_TimeZoneInfo_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_ConvertTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConvertTime(DateTime,TimeZoneInfo)</div>        \r\n          </div>\r\n    \r\n            <p>Converts a time to the time in a particular time zone.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTime ConvertTime (DateTime dateTime, TimeZoneInfo destinationTimeZone);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTime</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The date and time to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destinationTimeZone</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time zone to convert <code>dateTime</code> to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>The date and time in the destination time zone.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The value of the <code>dateTime</code> parameter represents an invalid time.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The value of the <code>destinationTimeZone</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When performing the conversion, the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTime_System_DateTimeOffset_System_TimeZoneInfo_\" data-linktype=\"relative-path\">ConvertTime(DateTimeOffset,TimeZoneInfo)</a> method applies any adjustment rules in effect in the <code>destinationTimeZone</code> time zone.  </p>\n<p> This overload of the ConvertTime method determines the source time zone from the value of the <code>dateTime</code> parameter&#39;s <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property, as the following table shows.  </p>\n<table>\n<thead>\n<tr>\n<th>Kind property value</th>\n<th>Source time zone</th>\n<th>Method behavior</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a></td>\n<td>Converts the local time to the time in <code>destinationTimeZone</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Utc_\" data-linktype=\"relative-path\">Utc</a></td>\n<td>Converts Coordinated Universal Time (UTC) to the time in <code>destinationTimeZone</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Assumed to be <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a>.</td>\n<td>Converts the local time to the time in <code>destinationTimeZone</code>.</td>\n</tr>\n</tbody>\n</table>\n<p> The <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value is set as shown in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Condition</th>\n<th>Returned Kind property value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>The <code>destinationTimeZone</code> is <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Utc_\" data-linktype=\"relative-path\">Utc</a>.</td>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n</tr>\n<tr>\n<td>The <code>destinationTimeZone</code> is <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a>.</td>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n</tr>\n<tr>\n<td>All other date and time values and destination time zones.</td>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n</tr>\n</tbody>\n</table>\n<p> If the value of the <code>dateTime</code> parameter is an ambiguous local time, it is interpreted as a standard time. If the <code>dateTime</code> parameter is an invalid local time, this method throws an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a>.  </p>\n<p> If the conversion of <code>dateTime</code> results in a date and time value that is earlier than <a class=\"xref\" href=\"system.datetime#System_DateTime_MinValue\" data-linktype=\"relative-path\">System.DateTime.MinValue</a> or later than <a class=\"xref\" href=\"system.datetime#System_DateTime_MaxValue\" data-linktype=\"relative-path\">System.DateTime.MaxValue</a>, this method returns <a class=\"xref\" href=\"system.datetime#System_DateTime_MinValue\" data-linktype=\"relative-path\">System.DateTime.MinValue</a> or <a class=\"xref\" href=\"system.datetime#System_DateTime_MaxValue\" data-linktype=\"relative-path\">System.DateTime.MaxValue</a>, respectively.  </p>\n<p> You can also convert to or from UTC by calling the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTimeFromUtc_\" data-linktype=\"relative-path\">ConvertTimeFromUtc</a> and <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTimeToUtc_\" data-linktype=\"relative-path\">ConvertTimeToUtc</a> methods.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example converts an array of date and time values to times in the Eastern Time zone of the U.S. and Canada. It shows that the source time zone depends on the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the source <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value. It also illustrates that the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTime_\" data-linktype=\"relative-path\">ConvertTime</a> method takes time zone adjustments into account, because a time zone adjustment occurs in both the source and destination time zones at 2:00 A.M. on November 7, 2010.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZoneInfo.ConvertTime#1\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      // Define times to be converted.\n      DateTime[] times = { new DateTime(2010, 1, 1, 0, 1, 0), \n                           new DateTime(2010, 1, 1, 0, 1, 0, DateTimeKind.Utc), \n                           new DateTime(2010, 1, 1, 0, 1, 0, DateTimeKind.Local),                            \n                           new DateTime(2010, 11, 6, 23, 30, 0),\n                           new DateTime(2010, 11, 7, 2, 30, 0) };\n                              \n      // Retrieve the time zone for Eastern Standard Time (U.S. and Canada).\n      TimeZoneInfo est; \n      try {\n         est = TimeZoneInfo.FindSystemTimeZoneById(&quot;Eastern Standard Time&quot;);\n      }\n      catch (TimeZoneNotFoundException) {\n         Console.WriteLine(&quot;Unable to retrieve the Eastern Standard time zone.&quot;);\n         return;\n      }\n      catch (InvalidTimeZoneException) {\n         Console.WriteLine(&quot;Unable to retrieve the Eastern Standard time zone.&quot;);\n         return;\n      }   \n\n      // Display the current time zone name.\n      Console.WriteLine(&quot;Local time zone: {0}<br>&quot;, TimeZoneInfo.Local.DisplayName);\n      \n      // Convert each time in the array.\n      foreach (DateTime timeToConvert in times)\n      {\n         DateTime targetTime = TimeZoneInfo.ConvertTime(timeToConvert, est);\n         Console.WriteLine(&quot;Converted {0} {1} to {2}.&quot;, timeToConvert, \n                           timeToConvert.Kind, targetTime);\n      }                        \n   }\n}\n// The example displays the following output:\n//    Local time zone: (GMT-08:00) Pacific Time (US &amp; Canada)\n//    \n//    Converted 1/1/2010 12:01:00 AM Unspecified to 1/1/2010 3:01:00 AM.\n//    Converted 1/1/2010 12:01:00 AM Utc to 12/31/2009 7:01:00 PM.\n//    Converted 1/1/2010 12:01:00 AM Local to 1/1/2010 3:01:00 AM.\n//    Converted 11/6/2010 11:30:00 PM Unspecified to 11/7/2010 1:30:00 AM.\n//    Converted 11/7/2010 2:30:00 AM Unspecified to 11/7/2010 5:30:00 AM.\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZoneInfo.ConvertTime#1\">Module Example\n   Public Sub Main()\n      &#39; Define times to be converted.\n      Dim times() As Date = { #1/1/2010 12:01AM#, _\n                              DateTime.SpecifyKind(#1/1/2010 12:01AM#, DateTimeKind.Utc), _\n                              DateTime.SpecifyKind(#1/1/2010 12:01AM#, DateTimeKind.Local), _\n                              #11/6/2010 11:30PM#, #11/7/2010 2:30AM# }\n                              \n      &#39; Retrieve the time zone for Eastern Standard Time (U.S. and Canada).\n      Dim est As TimeZoneInfo \n      Try\n         est = TimeZoneInfo.FindSystemTimeZoneById(&quot;Eastern Standard Time&quot;)\n      Catch e As TimeZoneNotFoundException\n         Console.WriteLine(&quot;Unable to retrieve the Eastern Standard time zone.&quot;)\n         Exit Sub\n      Catch e As InvalidTimeZoneException\n         Console.WriteLine(&quot;Unable to retrieve the Eastern Standard time zone.&quot;)\n         Exit Sub\n      End Try   \n\n      &#39; Display the current time zone name.\n      Console.WriteLine(&quot;Local time zone: {0}&quot;, TimeZoneInfo.Local.DisplayName)\n      Console.WriteLine()\n      \n      &#39; Convert each time in the array.\n      For Each timeToConvert As Date In times\n         Dim targetTime As Date = TimeZoneInfo.ConvertTime(timeToConvert, est)\n         Console.WriteLine(&quot;Converted {0} {1} to {2}.&quot;, timeToConvert, _\n                           timeToConvert.Kind, targetTime)\n      Next                        \n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;    Local time zone: (GMT-08:00) Pacific Time (US &amp; Canada)\n&#39;    \n&#39;    Converted 1/1/2010 12:01:00 AM Unspecified to 1/1/2010 3:01:00 AM.\n&#39;    Converted 1/1/2010 12:01:00 AM Utc to 12/31/2009 7:01:00 PM.\n&#39;    Converted 1/1/2010 12:01:00 AM Local to 1/1/2010 3:01:00 AM.\n&#39;    Converted 11/6/2010 11:30:00 PM Unspecified to 11/7/2010 1:30:00 AM.\n&#39;    Converted 11/7/2010 2:30:00 AM Unspecified to 11/7/2010 5:30:00 AM.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_ConvertTime_System_DateTimeOffset_System_TimeZoneInfo_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_ConvertTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConvertTime(DateTimeOffset,TimeZoneInfo)</div>        \r\n          </div>\r\n    \r\n            <p>Converts a time to the time in a particular time zone.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTimeOffset ConvertTime (DateTimeOffset dateTimeOffset, TimeZoneInfo destinationTimeZone);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTimeOffset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The date and time to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destinationTimeZone</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time zone to convert <code>dateTime</code> to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>The date and time in the destination time zone.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The value of the <code>destinationTimeZone</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When performing the conversion, the ConvertTime method applies any adjustment rules in effect in the <code>destinationTimeZone</code> time zone.  </p>\n<p> This overload differs from the other overloads of the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTime_\" data-linktype=\"relative-path\">ConvertTime</a> method by accepting a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value as its first parameter. This identifies the date and time as an offset from Coordinated Universal Time (UTC) rather than as the date and time in a particular time zone. As a result, the <code>dateTimeOffset</code> parameter cannot represent either an ambiguous time or an invalid time.  </p>\n<p> In converting the <code>dateTimeOffset</code> value to the time in the destination time zone, this method takes into account any adjustment rules in effect in the destination time zone.  </p>\n<p> If the conversion of <code>dateTimeOffset</code> results in a date and time value that is earlier than <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MinValue\" data-linktype=\"relative-path\">System.DateTimeOffset.MinValue</a> or later than <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MaxValue\" data-linktype=\"relative-path\">System.DateTimeOffset.MaxValue</a>, this method returns <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MinValue\" data-linktype=\"relative-path\">System.DateTimeOffset.MinValue</a> or <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MaxValue\" data-linktype=\"relative-path\">System.DateTimeOffset.MaxValue</a>, respectively.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example converts an array of <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> values to times in the Eastern Time zone of the U.S. and Canada. It illustrates that the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTime_\" data-linktype=\"relative-path\">ConvertTime</a> method takes time zone adjustments into account, because a time zone adjustment occurs in both the source and destination time zones at 2:00 A.M. on November 7, 2010.  </p>\n<pre><code class=\"lang-vb\" name=\"System.TimeZoneInfo.ConvertTime#2\">Module Example\n   Public Sub Main()\n      &#39; Define times to be converted.\n      Dim time1 As Date = #1/1/2010 12:01AM#\n      Dim time2 As Date = #11/6/2010 11:30PM#\n      Dim times() As DateTimeOffset = { New DateTimeOffset(time1, TimeZoneInfo.Local.GetUtcOffset(time1)), _\n                                        New DateTimeOffset(time1, Timespan.Zero), _\n                                        New DateTimeOffset(time2, TimeZoneInfo.Local.GetUtcOffset(time2)), _\n                                        New DateTimeOffset(time2.AddHours(3), TimeZoneInfo.Local.GetUtcOffset(time2.AddHours(3))) }\n                              \n      &#39; Retrieve the time zone for Eastern Standard Time (U.S. and Canada).\n      Dim est As TimeZoneInfo \n      Try\n         est = TimeZoneInfo.FindSystemTimeZoneById(&quot;Eastern Standard Time&quot;)\n      Catch e As TimeZoneNotFoundException\n         Console.WriteLine(&quot;Unable to retrieve the Eastern Standard time zone.&quot;)\n         Exit Sub\n      Catch e As InvalidTimeZoneException\n         Console.WriteLine(&quot;Unable to retrieve the Eastern Standard time zone.&quot;)\n         Exit Sub\n      End Try   \n\n      &#39; Display the current time zone name.\n      Console.WriteLine(&quot;Local time zone: {0}&quot;, TimeZoneInfo.Local.DisplayName)\n      Console.WriteLine()\n      \n      &#39; Convert each time in the array.\n      For Each timeToConvert As DateTimeOffset In times\n         Dim targetTime As DateTimeOffset = TimeZoneInfo.ConvertTime(timeToConvert, est)\n         Console.WriteLine(&quot;Converted {0} to {1}.&quot;, timeToConvert, targetTime)\n      Next                        \n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;    Local time zone: (GMT-08:00) Pacific Time (US &amp; Canada)\n&#39;    \n&#39;    Converted 1/1/2010 12:01:00 AM -08:00 to 1/1/2010 3:01:00 AM -05:00.\n&#39;    Converted 1/1/2010 12:01:00 AM +00:00 to 12/31/2009 7:01:00 PM -05:00.\n&#39;    Converted 11/6/2010 11:30:00 PM -07:00 to 11/7/2010 1:30:00 AM -05:00.\n&#39;    Converted 11/7/2010 2:30:00 AM -08:00 to 11/7/2010 5:30:00 AM -05:00.\n</code></pre><pre><code class=\"lang-cs\" name=\"System.TimeZoneInfo.ConvertTime#2\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      // Define times to be converted.\n      DateTime time1 = new DateTime(2010, 1, 1, 12, 1, 0);\n      DateTime time2 = new DateTime(2010, 11, 6, 23, 30, 0);\n      DateTimeOffset[] times = { new DateTimeOffset(time1, TimeZoneInfo.Local.GetUtcOffset(time1)),\n                                 new DateTimeOffset(time1, TimeSpan.Zero),\n                                 new DateTimeOffset(time2, TimeZoneInfo.Local.GetUtcOffset(time2)),\n                                 new DateTimeOffset(time2.AddHours(3), TimeZoneInfo.Local.GetUtcOffset(time2.AddHours(3))) };\n                              \n      // Retrieve the time zone for Eastern Standard Time (U.S. and Canada).\n      TimeZoneInfo est; \n      try {\n         est = TimeZoneInfo.FindSystemTimeZoneById(&quot;Eastern Standard Time&quot;);\n      }\n      catch (TimeZoneNotFoundException) {\n         Console.WriteLine(&quot;Unable to retrieve the Eastern Standard time zone.&quot;);\n         return;\n      }\n      catch (InvalidTimeZoneException) {\n         Console.WriteLine(&quot;Unable to retrieve the Eastern Standard time zone.&quot;);\n         return;\n      }   \n\n      // Display the current time zone name.\n      Console.WriteLine(&quot;Local time zone: {0}<br>&quot;, TimeZoneInfo.Local.DisplayName);\n      \n      // Convert each time in the array.\n      foreach (DateTimeOffset timeToConvert in times)\n      {\n         DateTimeOffset targetTime = TimeZoneInfo.ConvertTime(timeToConvert, est);\n         Console.WriteLine(&quot;Converted {0} to {1}.&quot;, timeToConvert, targetTime);\n      }                        \n   }\n}\n// The example displays the following output:\n//    Local time zone: (GMT-08:00) Pacific Time (US &amp; Canada)\n//    \n//    Converted 1/1/2010 12:01:00 AM -08:00 to 1/1/2010 3:01:00 AM -05:00.\n//    Converted 1/1/2010 12:01:00 AM +00:00 to 12/31/2009 7:01:00 PM -05:00.\n//    Converted 11/6/2010 11:30:00 PM -07:00 to 11/7/2010 1:30:00 AM -05:00.\n//    Converted 11/7/2010 2:30:00 AM -08:00 to 11/7/2010 5:30:00 AM -05:00.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_ConvertTime_System_DateTime_System_TimeZoneInfo_System_TimeZoneInfo_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_ConvertTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConvertTime(DateTime,TimeZoneInfo,TimeZoneInfo)</div>        \r\n          </div>\r\n    \r\n            <p>Converts a time from one time zone to another.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTime ConvertTime (DateTime dateTime, TimeZoneInfo sourceTimeZone, TimeZoneInfo destinationTimeZone);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTime</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The date and time to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sourceTimeZone</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time zone of <code>dateTime</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destinationTimeZone</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time zone to convert <code>dateTime</code> to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>The date and time in the destination time zone that corresponds to the <code>dateTime</code> parameter in the source time zone.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.DateTime.Kind*</span> property of the <code>dateTime</code> parameter is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a>, but the <code>sourceTimeZone</code> parameter does not equal <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a>. For more information, see the Remarks section.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.DateTime.Kind*</span> property of the <code>dateTime</code> parameter is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a>, but the <code>sourceTimeZone</code> parameter does not equal <span class=\"xref\">stem.TimeZoneInfo.Utc*</span>.  </p>\n<p> -or-  </p>\n<p> The <code>dateTime</code> parameter is an invalid time (that is, it represents a time that does not exist because of a time zone&#39;s adjustment rules).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>sourceTimeZone</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>destinationTimeZone</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When performing the conversion, the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTime_\" data-linktype=\"relative-path\">ConvertTime</a> method applies any adjustment rules in effect in the <code>destinationTimeZone</code> time zone.  </p>\n<p> The value of the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the <code>dateTime</code> parameter must correspond to the <code>sourceTimeZone</code> parameter, as the following table shows.  </p>\n<table>\n<thead>\n<tr>\n<th>DateTime.Kind value</th>\n<th>sourceTimeZone value</th>\n<th>Method behavior</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Equals <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Utc_\" data-linktype=\"relative-path\">Utc</a>.</td>\n<td>Converts <code>dateTime</code> to the destination time zone&#39;s time.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Does not equal <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Utc_\" data-linktype=\"relative-path\">Utc</a>.</td>\n<td>Throws an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Equals <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a>.</td>\n<td>Converts <code>dateTime</code> to the destination time zone&#39;s time.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Does not equal <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a>.</td>\n<td>Throws an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Any.</td>\n<td>Converts <code>dateTime</code> to the destination time zone&#39;s time.</td>\n</tr>\n</tbody>\n</table>\n<p> You can also convert to or from Coordinated Universal Time (UTC) by calling the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTimeFromUtc_\" data-linktype=\"relative-path\">ConvertTimeFromUtc</a> and <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTimeToUtc_\" data-linktype=\"relative-path\">ConvertTimeToUtc</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value is set as shown in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Condition</th>\n<th>Returned Kind property value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>The <code>destinationTimeZone</code> argument is <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Utc_\" data-linktype=\"relative-path\">Utc</a>.</td>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n</tr>\n<tr>\n<td>The <code>destinationTimeZone</code> argument is <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a>.</td>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n</tr>\n<tr>\n<td>All other date and time values, source time zones, and destination time zones.</td>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n</tr>\n</tbody>\n</table>\n<p> If the value of the <code>dateTime</code> parameter is an ambiguous time in the source time zone, it is interpreted as a standard time. If the <code>dateTime</code> parameter is an invalid time in the source time zone, this method throws an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a>.  </p>\n<p> If the conversion of <code>dateTime</code> results in a date and time value that is earlier than <a class=\"xref\" href=\"system.datetime#System_DateTime_MinValue\" data-linktype=\"relative-path\">System.DateTime.MinValue</a> or later than <a class=\"xref\" href=\"system.datetime#System_DateTime_MaxValue\" data-linktype=\"relative-path\">System.DateTime.MaxValue</a>, this method returns <a class=\"xref\" href=\"system.datetime#System_DateTime_MinValue\" data-linktype=\"relative-path\">System.DateTime.MinValue</a> or <a class=\"xref\" href=\"system.datetime#System_DateTime_MaxValue\" data-linktype=\"relative-path\">System.DateTime.MaxValue</a>, respectively.  </p>\n<p> The ConvertTime method throws an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> exception if the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the <code>dateTime</code> argument is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a> but the <code>sourceTimeZone</code> argument is not <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a>. To determine whether the source time zone is the local time zone or the universal time zone, the method tests for reference equality instead of testing for value equality with the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Equals_System_TimeZoneInfo_\" data-linktype=\"relative-path\">Equals(TimeZoneInfo)</a> method. Note that <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> objects that represent the local time zone and that are retrieved by calling the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_FindSystemTimeZoneById_\" data-linktype=\"relative-path\">FindSystemTimeZoneById</a> method do not have referential equality with <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a>. Furthermore, <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> objects that represent the local or universal time zone and that are retrieved by iterating the collection returned by the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_GetSystemTimeZones_\" data-linktype=\"relative-path\">GetSystemTimeZones</a> method do not have referential equality with <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a> or <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Utc_\" data-linktype=\"relative-path\">Utc</a>. As an alternative, you can call the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTimeBySystemTimeZoneId_System_DateTime_System_String_System_String_\" data-linktype=\"relative-path\">ConvertTimeBySystemTimeZoneId(DateTime,String,String)</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example illustrates the use of the ConvertTime method to convert from Hawaiian Standard Time to local time.  </p>\n<pre><code class=\"lang-vb\" name=\"System.TimeZone2.Concepts#9\">      Dim hwTime As Date = #2/01/2007 8:00:00 AM#\n      Try\n         Dim hwZone As TimeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById(&quot;Hawaiian Standard Time&quot;)\n         Console.WriteLine(&quot;{0} {1} is {2} local time.&quot;, _\n                           hwTime, _\n                           IIf(hwZone.IsDaylightSavingTime(hwTime), hwZone.DaylightName, hwZone.StandardName), _\n                           TimeZoneInfo.ConvertTime(hwTime, hwZone, TimeZoneInfo.Local))\n      Catch e As TimeZoneNotFoundException\n         Console.WriteLine(&quot;The registry does not define the Hawaiian Standard Time zone.&quot;)\n      Catch e As InvalidTimeZoneException\n         Console.WriteLine(&quot;Registry data on the Hawaiian Standard Time zone has been corrupted.&quot;)\n      End Try                     \n</code></pre><pre><code class=\"lang-cs\" name=\"System.TimeZone2.Concepts#9\">      DateTime hwTime = new DateTime(2007, 02, 01, 08, 00, 00);\n      try\n      {\n         TimeZoneInfo hwZone = TimeZoneInfo.FindSystemTimeZoneById(&quot;Hawaiian Standard Time&quot;);\n         Console.WriteLine(&quot;{0} {1} is {2} local time.&quot;, \n                 hwTime, \n                 hwZone.IsDaylightSavingTime(hwTime) ? hwZone.DaylightName : hwZone.StandardName, \n                 TimeZoneInfo.ConvertTime(hwTime, hwZone, TimeZoneInfo.Local));\n      }\n      catch (TimeZoneNotFoundException)\n      {\n         Console.WriteLine(&quot;The registry does not define the Hawaiian Standard Time zone.&quot;);\n      }                           \n      catch (InvalidTimeZoneException)\n      {\n         Console.WriteLine(&quot;Registry data on the Hawaiian STandard Time zone has been corrupted.&quot;);\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_ConvertTimeBySystemTimeZoneId_System_DateTime_System_String_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_ConvertTimeBySystemTimeZoneId_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConvertTimeBySystemTimeZoneId(DateTime,String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts a time to the time in another time zone based on the time zone&#39;s identifier.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTime ConvertTimeBySystemTimeZoneId (DateTime dateTime, string destinationTimeZoneId);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTime</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The date and time to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destinationTimeZoneId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The identifier of the destination time zone.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>The date and time in the destination time zone.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>destinationTimeZoneId</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidtimezoneexception\" data-linktype=\"relative-path\">InvalidTimeZoneException</a></div>\r\n                  </div>\r\n                  <p>The time zone identifier was found, but the registry data is corrupted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The process does not have the permissions required to read from the registry key that contains the time zone information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timezonenotfoundexception\" data-linktype=\"relative-path\">TimeZoneNotFoundException</a></div>\r\n                  </div>\r\n                  <p>The <code>destinationTimeZoneId</code> identifier was not found on the local system.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When performing the conversion, the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTimeBySystemTimeZoneId_\" data-linktype=\"relative-path\">ConvertTimeBySystemTimeZoneId</a> method applies any adjustment rules in effect in the <code>destinationTimeZoneId</code> time zone.  </p>\n<p> This overload is largely identical to calling the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTime_System_DateTime_System_TimeZoneInfo_\" data-linktype=\"relative-path\">ConvertTime(DateTime,TimeZoneInfo)</a> method, except that it allows you to specify the destination time zone by its identifier rather than by an object reference. This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.  </p>\n<p> The ConvertTimeBySystemTimeZoneId method determines the source time zone from the value of the <code>dateTime</code> parameter&#39;s <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property, as the following table shows.  </p>\n<table>\n<thead>\n<tr>\n<th>Kind property value</th>\n<th>Source time zone</th>\n<th>Method behavior</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a></td>\n<td>Converts the local time to the time in <code>destinationTimeZone</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Utc_\" data-linktype=\"relative-path\">Utc</a></td>\n<td>Converts Coordinated Universal Time (UTC) to the time in <code>destinationTimeZone</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Assumed to be <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a>.</td>\n<td>Converts the local time to the time in <code>destinationTimeZone</code>.</td>\n</tr>\n</tbody>\n</table>\n<p> The <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value is set as shown in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Condition</th>\n<th>Returned Kind property value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>The <code>destinationTimeZone</code> is <code>TimeZoneInfo.Utc.Id</code>.</td>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n</tr>\n<tr>\n<td>Any other <code>destinationTimeZone</code> value.</td>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n</tr>\n</tbody>\n</table>\n<p> If the value of the <code>dateTime</code> parameter is an ambiguous local time, it is interpreted as a standard time. If the <code>dateTime</code> parameter is an invalid local time, this method throws an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a>.  </p>\n<p> If the conversion of <code>dateTime</code> results in a date and time value that is earlier than <a class=\"xref\" href=\"system.datetime#System_DateTime_MinValue\" data-linktype=\"relative-path\">System.DateTime.MinValue</a> or later than <a class=\"xref\" href=\"system.datetime#System_DateTime_MaxValue\" data-linktype=\"relative-path\">System.DateTime.MaxValue</a>, this method returns <a class=\"xref\" href=\"system.datetime#System_DateTime_MinValue\" data-linktype=\"relative-path\">System.DateTime.MinValue</a> or <a class=\"xref\" href=\"system.datetime#System_DateTime_MaxValue\" data-linktype=\"relative-path\">System.DateTime.MaxValue</a>, respectively.  </p>\n<p> This method retrieves the time zone whose identifier is specified by the <code>destinationTimeZoneId</code> parameter from the registry. It cannot retrieve a time zone object that is created using the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_CreateCustomTimeZone_\" data-linktype=\"relative-path\">CreateCustomTimeZone</a> method. The <code>destinationTimeZoneId</code> parameter must correspond exactly to the time zone&#39;s registry key in length, but not in case, for a successful match to occur; that is, the comparison of <code>destinationTimeZoneId</code> with time zone identifiers is case-insensitive.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_ConvertTimeBySystemTimeZoneId_System_DateTimeOffset_System_String_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_ConvertTimeBySystemTimeZoneId_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConvertTimeBySystemTimeZoneId(DateTimeOffset,String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts a time to the time in another time zone based on the time zone&#39;s identifier.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTimeOffset ConvertTimeBySystemTimeZoneId (DateTimeOffset dateTimeOffset, string destinationTimeZoneId);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTimeOffset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The date and time to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destinationTimeZoneId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The identifier of the destination time zone.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>The date and time in the destination time zone.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>destinationTimeZoneId</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidtimezoneexception\" data-linktype=\"relative-path\">InvalidTimeZoneException</a></div>\r\n                  </div>\r\n                  <p>The time zone identifier was found but the registry data is corrupted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The process does not have the permissions required to read from the registry key that contains the time zone information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timezonenotfoundexception\" data-linktype=\"relative-path\">TimeZoneNotFoundException</a></div>\r\n                  </div>\r\n                  <p>The <code>destinationTimeZoneId</code> identifier was not found on the local system.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When performing the conversion, the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTimeBySystemTimeZoneId_\" data-linktype=\"relative-path\">ConvertTimeBySystemTimeZoneId</a> method applies any adjustment rules in effect in the <code>destinationTimeZoneId</code> time zone.  </p>\n<p> This overload is identical to calling the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTime_System_DateTime_System_TimeZoneInfo_\" data-linktype=\"relative-path\">ConvertTime(DateTime,TimeZoneInfo)</a> method, except that it allows you to specify the destination time zone by its identifier rather than by an object reference. This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.  </p>\n<p> Because the <code>dateTimeOffset</code> parameter represents a date and time together with that time&#39;s offset from Coordinated Universal Time (UTC), it cannot represent either an ambiguous time or an invalid time.  </p>\n<p> This method retrieves the time zone whose identifier is specified by the <code>destinationTimeZoneId</code> parameter from the registry. It cannot retrieve a time zone object that is created using the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_CreateCustomTimeZone_\" data-linktype=\"relative-path\">CreateCustomTimeZone</a> method. The <code>destinationTimeZoneId</code> parameter must correspond exactly to the time zone&#39;s registry key in length, but not in case, for a successful match to occur; that is, the comparison of <code>destinationTimeZoneId</code> with time zone identifiers is case-insensitive.  </p>\n<p> In converting the <code>dateTimeOffset</code> value to the time in the destination time zone, the method takes into account any adjustment rules in effect in the destination time zone.  </p>\n<p> If the conversion of <code>dateTimeOffset</code> results in a date and time value that is earlier than <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MinValue\" data-linktype=\"relative-path\">System.DateTimeOffset.MinValue</a> or later than <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MaxValue\" data-linktype=\"relative-path\">System.DateTimeOffset.MaxValue</a>, this method returns <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MinValue\" data-linktype=\"relative-path\">System.DateTimeOffset.MinValue</a> or <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MaxValue\" data-linktype=\"relative-path\">System.DateTimeOffset.MaxValue</a>, respectively.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_ConvertTimeBySystemTimeZoneId_System_DateTime_System_String_System_String_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_ConvertTimeBySystemTimeZoneId_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConvertTimeBySystemTimeZoneId(DateTime,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts a time from one time zone to another based on time zone identifiers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTime ConvertTimeBySystemTimeZoneId (DateTime dateTime, string sourceTimeZoneId, string destinationTimeZoneId);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTime</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The date and time to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sourceTimeZoneId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The identifier of the source time zone.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destinationTimeZoneId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The identifier of the destination time zone.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>The date and time in the destination time zone that corresponds to the <code>dateTime</code> parameter in the source time zone.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.DateTime.Kind*</span> property of the <code>dateTime</code> parameter does not correspond to the source time zone.  </p>\n<p> -or-  </p>\n<p> <code>dateTime</code> is an invalid time in the source time zone.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>sourceTimeZoneId</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>destinationTimeZoneId</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidtimezoneexception\" data-linktype=\"relative-path\">InvalidTimeZoneException</a></div>\r\n                  </div>\r\n                  <p>The time zone identifiers were found, but the registry data is corrupted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The user does not have the permissions required to read from the registry keys that hold time zone data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timezonenotfoundexception\" data-linktype=\"relative-path\">TimeZoneNotFoundException</a></div>\r\n                  </div>\r\n                  <p>The <code>sourceTimeZoneId</code> identifier was not found on the local system.  </p>\n<p> -or-  </p>\n<p> The <code>destinationTimeZoneId</code> identifier was not found on the local system.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When performing the conversion, the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTimeBySystemTimeZoneId_\" data-linktype=\"relative-path\">ConvertTimeBySystemTimeZoneId</a> method applies any adjustment rules in effect in the <code>destinationTimeZoneId</code> time zone.  </p>\n<p> Although it is similar to the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTime_System_DateTime_System_TimeZoneInfo_System_TimeZoneInfo_\" data-linktype=\"relative-path\">System.TimeZoneInfo.ConvertTime(DateTime,TimeZoneInfo,TimeZoneInfo)</a> method, you can use ConvertTimeBySystemTimeZoneId to specify the source and destination time zones using their identifiers instead of their <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> objects. This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.  </p>\n<p> This method retrieves the time zones whose identifiers are the <code>sourceTimeZoneId</code> and <code>destinationTimeZoneId</code> parameters from the registry. It cannot retrieve time zone objects that are created using the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_CreateCustomTimeZone_\" data-linktype=\"relative-path\">CreateCustomTimeZone</a> method.  </p>\n<p> The value of the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the <code>dateTime</code> parameter must correspond to the <code>sourceTimeZoneId</code> parameter, as the following table shows.  </p>\n<table>\n<thead>\n<tr>\n<th>DateTime.Kind value</th>\n<th>sourceTimeZone value</th>\n<th>Method behavior</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Equals <code>TimeZoneInfo.Utc.Id</code>.</td>\n<td>Converts <code>dateTime</code> to the destination time zone&#39;s time.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Does not equal <code>TimeZoneInfo.Utc.Id</code>.</td>\n<td>Throws an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Equals <code>TimeZoneInfo.Local.Id</code>.</td>\n<td>Converts <code>dateTime</code> to the destination time zone&#39;s time.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Does not equal <code>TimeZoneInfo.Local.Id</code>.</td>\n<td>Throws an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Any.</td>\n<td>Converts <code>dateTime</code> to the destination time zone&#39;s time.</td>\n</tr>\n</tbody>\n</table>\n<p> Because it relies on calls to the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_FindSystemTimeZoneById_\" data-linktype=\"relative-path\">FindSystemTimeZoneById</a> method, the ConvertTimeBySystemTimeZoneId method performs a case-insensitive search to locate the time zones that correspond to <code>sourceTimeZoneId</code> and <code>destinationTimeZoneId</code>.  </p>\n<p> If the value of the <code>dateTime</code> parameter is an ambiguous time in the source time zone, it is interpreted as a standard time. If the <code>dateTime</code> parameter is an invalid time in the source time zone, this method throws an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a>.  </p>\n<p> The <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value is set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a> unless the destination time zone is Coordinated Universal Time (UTC), in which case it is set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the ConvertTimeBySystemTimeZoneId method to display the time that corresponds to the local system time in eight cities of the world.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZone2.Conversions#3\">      DateTime currentTime = DateTime.Now;\n      Console.WriteLine(&quot;Current Times:&quot;);\n      Console.WriteLine();\n      Console.WriteLine(&quot;Los Angeles: {0}&quot;, \n                        TimeZoneInfo.ConvertTimeBySystemTimeZoneId(currentTime, TimeZoneInfo.Local.Id, &quot;Pacific Standard Time&quot;));\n      Console.WriteLine(&quot;Chicago: {0}&quot;, \n                        TimeZoneInfo.ConvertTimeBySystemTimeZoneId(currentTime, TimeZoneInfo.Local.Id, &quot;Central Standard Time&quot;));\n      Console.WriteLine(&quot;New York: {0}&quot;, \n                        TimeZoneInfo.ConvertTimeBySystemTimeZoneId(currentTime, TimeZoneInfo.Local.Id, &quot;Eastern Standard Time&quot;));\n      Console.WriteLine(&quot;London: {0}&quot;, \n                        TimeZoneInfo.ConvertTimeBySystemTimeZoneId(currentTime, TimeZoneInfo.Local.Id, &quot;GMT Standard Time&quot;));\n      Console.WriteLine(&quot;Moscow: {0}&quot;, \n                        TimeZoneInfo.ConvertTimeBySystemTimeZoneId(currentTime, TimeZoneInfo.Local.Id, &quot;Russian Standard Time&quot;));\n      Console.WriteLine(&quot;New Delhi: {0}&quot;, \n                        TimeZoneInfo.ConvertTimeBySystemTimeZoneId(currentTime, TimeZoneInfo.Local.Id, &quot;India Standard Time&quot;));\n      Console.WriteLine(&quot;Beijing: {0}&quot;, \n                        TimeZoneInfo.ConvertTimeBySystemTimeZoneId(currentTime, TimeZoneInfo.Local.Id, &quot;China Standard Time&quot;));\n      Console.WriteLine(&quot;Tokyo: {0}&quot;, \n                        TimeZoneInfo.ConvertTimeBySystemTimeZoneId(currentTime, TimeZoneInfo.Local.Id, &quot;Tokyo Standard Time&quot;));\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone2.Conversions#3\">      Dim currentTime As Date = Date.Now\n      Console.WriteLine(&quot;Current Times:&quot;)\n      Console.WriteLine()\n      Console.WriteLine(&quot;Los Angeles: {0}&quot;, _\n                        TimeZoneInfo.ConvertTimeBySystemTimeZoneId(currentTime, TimeZoneInfo.Local.Id, &quot;Pacific Standard Time&quot;))\n      Console.WriteLine(&quot;Chicago: {0}&quot;, _ \n                        TimeZoneInfo.ConvertTimeBySystemTimeZoneId(currentTime, TimeZoneInfo.Local.Id, &quot;Central Standard Time&quot;))\n      Console.WriteLine(&quot;New York: {0}&quot;, _\n                        TimeZoneInfo.ConvertTimeBySystemTimeZoneId(currentTime, TimeZoneInfo.Local.Id, &quot;Eastern Standard Time&quot;))\n      Console.WriteLine(&quot;London: {0}&quot;, _\n                        TimeZoneInfo.ConvertTimeBySystemTimeZoneId(currentTime, TimeZoneInfo.Local.Id, &quot;GMT Standard Time&quot;))\n      Console.WriteLine(&quot;Moscow: {0}&quot;, _\n                        TimeZoneInfo.ConvertTimeBySystemTimeZoneId(currentTime, TimeZoneInfo.Local.Id, &quot;Russian Standard Time&quot;))\n      Console.WriteLine(&quot;New Delhi: {0}&quot;, _\n                        TimeZoneInfo.ConvertTimeBySystemTimeZoneId(currentTime, TimeZoneInfo.Local.Id, &quot;India Standard Time&quot;))\n      Console.WriteLine(&quot;Beijing: {0}&quot;, _\n                        TimeZoneInfo.ConvertTimeBySystemTimeZoneId(currentTime, TimeZoneInfo.Local.Id, &quot;China Standard Time&quot;))\n      Console.WriteLine(&quot;Tokyo: {0}&quot;, _\n                        TimeZoneInfo.ConvertTimeBySystemTimeZoneId(currentTime, TimeZoneInfo.Local.Id, &quot;Tokyo Standard Time&quot;))\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_ConvertTimeFromUtc_System_DateTime_System_TimeZoneInfo_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_ConvertTimeFromUtc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConvertTimeFromUtc(DateTime,TimeZoneInfo)</div>        \r\n          </div>\r\n    \r\n            <p>Converts a Coordinated Universal Time (UTC) to the time in a specified time zone.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTime ConvertTimeFromUtc (DateTime dateTime, TimeZoneInfo destinationTimeZone);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTime</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Coordinated Universal Time (UTC).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destinationTimeZone</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time zone to convert <code>dateTime</code> to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>The date and time in the destination time zone. Its <span class=\"xref\">stem.DateTime.Kind*</span> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a> if <code>destinationTimeZone</code> is <span class=\"xref\">stem.TimeZoneInfo.Utc*</span>; otherwise, its <span class=\"xref\">stem.DateTime.Kind*</span> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.DateTime.Kind*</span> property of <code>dateTime</code> is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>destinationTimeZone</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When performing the conversion, the ConvertTimeFromUtc method applies any adjustment rules in effect in the <code>destinationTimeZone</code> time zone.  </p>\n<p> The precise behavior of this method depends on the value of the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the <code>dateTime</code> parameter, as the following table shows.  </p>\n<table>\n<thead>\n<tr>\n<th>DateTime.Kind property</th>\n<th>Conversion</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Throws an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a> or <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Converts from Coordinated Universal Time (UTC).</td>\n</tr>\n</tbody>\n</table>\n<p> If the conversion of <code>dateTime</code> results in a date and time value that is earlier than <a class=\"xref\" href=\"system.datetime#System_DateTime_MinValue\" data-linktype=\"relative-path\">System.DateTime.MinValue</a> or later than <a class=\"xref\" href=\"system.datetime#System_DateTime_MaxValue\" data-linktype=\"relative-path\">System.DateTime.MaxValue</a>, this method returns <a class=\"xref\" href=\"system.datetime#System_DateTime_MinValue\" data-linktype=\"relative-path\">System.DateTime.MinValue</a> or <a class=\"xref\" href=\"system.datetime#System_DateTime_MaxValue\" data-linktype=\"relative-path\">System.DateTime.MaxValue</a>, respectively.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example converts Coordinated Universal Time (UTC) to Central Time.  </p>\n<pre><code class=\"lang-vb\" name=\"System.TimeZone2.Concepts#8\">      Dim timeUtc As Date = Date.UtcNow\n      Try\n         Dim cstZone As TimeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById(&quot;Central Standard Time&quot;)\n         Dim cstTime As Date = TimeZoneInfo.ConvertTimeFromUtc(timeUtc, cstZone)\n         Console.WriteLine(&quot;The date and time are {0} {1}.&quot;, _\n                           cstTime, _\n                           IIf(cstZone.IsDaylightSavingTime(cstTime), _\n                               cstZone.DaylightName, cstZone.StandardName))\n      Catch e As TimeZoneNotFoundException\n         Console.WriteLine(&quot;The registry does not define the Central Standard Time zone.&quot;)\n      Catch e As InvalidTimeZoneException\n         Console.WriteLine(&quot;Registry data on the Central Standard Time zone has been corrupted.&quot;)\n      End Try\n</code></pre><pre><code class=\"lang-cs\" name=\"System.TimeZone2.Concepts#8\">      DateTime timeUtc = DateTime.UtcNow;\n      try\n      {\n         TimeZoneInfo cstZone = TimeZoneInfo.FindSystemTimeZoneById(&quot;Central Standard Time&quot;);\n         DateTime cstTime = TimeZoneInfo.ConvertTimeFromUtc(timeUtc, cstZone);\n         Console.WriteLine(&quot;The date and time are {0} {1}.&quot;, \n                           cstTime, \n                           cstZone.IsDaylightSavingTime(cstTime) ?\n                                   cstZone.DaylightName : cstZone.StandardName);\n      }\n      catch (TimeZoneNotFoundException)\n      {\n         Console.WriteLine(&quot;The registry does not define the Central Standard Time zone.&quot;);\n      }                           \n      catch (InvalidTimeZoneException)\n      {\n         Console.WriteLine(&quot;Registry data on the Central Standard Time zone has been corrupted.&quot;);\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_ConvertTimeToUtc_System_DateTime_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_ConvertTimeToUtc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConvertTimeToUtc(DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the specified date and time to Coordinated Universal Time (UTC).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTime ConvertTimeToUtc (DateTime dateTime);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTime</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The date and time to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>The Coordinated Universal Time (UTC) that corresponds to the <code>dateTime</code> parameter. The <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value&#39;s <span class=\"xref\">stem.DateTime.Kind*</span> property is always set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>TimeZoneInfo.Local.IsInvalidDateTime(</code>\n    <code>dateTime</code>\n    <code>)</code> returns <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The exact conversion performed depends on the value of the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the <code>dateTime</code> parameter, as the following table shows.  </p>\n<table>\n<thead>\n<tr>\n<th>DateTime.Kind property</th>\n<th>Conversion</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Converts from local time to Coordinated Universal Time (UTC).</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Assumes <code>dateTime</code> is local time and converts from local time to UTC.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Returns <code>dateTime</code> unchanged.</td>\n</tr>\n</tbody>\n</table>\n<p> If <code>dateTime</code> corresponds to an ambiguous local time, this method assumes that it is standard local time. If <code>dateTime</code> corresponds to an invalid local time, the method throws an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the current computer&#39;s local time zone includes multiple adjustment rules, this overload of the ConvertTimeToUtc method can return results that differ from the <a class=\"xref\" href=\"system.timezone#System_TimeZone_ToUniversalTime_\" data-linktype=\"relative-path\">ToUniversalTime</a> and <a class=\"xref\" href=\"system.datetime#System_DateTime_ToUniversalTime_\" data-linktype=\"relative-path\">ToUniversalTime</a> methods. <a class=\"xref\" href=\"system.timezone#System_TimeZone_ToUniversalTime_\" data-linktype=\"relative-path\">ToUniversalTime</a> always applies the current adjustment rule to time zone conversion, whether or not <code>dateTime</code> lies within its date range. And when executing on <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/net-v35-long-md.md&quot; --> .NET Framework 3.5 <!--END INCLUDE -->, <a class=\"xref\" href=\"system.datetime#System_DateTime_ToUniversalTime_\" data-linktype=\"relative-path\">ToUniversalTime</a> also applies the current adjustment rule to time zone conversion, whether or not <code>dateTime</code> lies within its date range.  </p>\n</div>\n<p> If the UTC equivalent of <code>dateTime</code> is earlier than <a class=\"xref\" href=\"system.datetime#System_DateTime_MinValue\" data-linktype=\"relative-path\">System.DateTime.MinValue</a> or later that <a class=\"xref\" href=\"system.datetime#System_DateTime_MaxValue\" data-linktype=\"relative-path\">System.DateTime.MaxValue</a>, this method returns <a class=\"xref\" href=\"system.datetime#System_DateTime_MinValue\" data-linktype=\"relative-path\">MinValue</a> or <a class=\"xref\" href=\"system.datetime#System_DateTime_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>, respectively.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example illustrates the conversion of time values whose <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>, <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>, and <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>, respectively. It also illustrates the conversion of ambiguous and invalid times.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZone2.Conversions#1\">      DateTime datNowLocal = DateTime.Now;\n      Console.WriteLine(&quot;Converting {0}, Kind {1}:&quot;, datNowLocal, datNowLocal.Kind);\n      Console.WriteLine(&quot;   ConvertTimeToUtc: {0}, Kind {1}&quot;, TimeZoneInfo.ConvertTimeToUtc(datNowLocal), TimeZoneInfo.ConvertTimeToUtc(datNowLocal).Kind);\n      Console.WriteLine();\n\n      DateTime datNowUtc = DateTime.UtcNow;\n      Console.WriteLine(&quot;Converting {0}, Kind {1}&quot;, datNowUtc, datNowUtc.Kind);\n      Console.WriteLine(&quot;   ConvertTimeToUtc: {0}, Kind {1}&quot;, TimeZoneInfo.ConvertTimeToUtc(datNowUtc), TimeZoneInfo.ConvertTimeToUtc(datNowUtc).Kind);\n      Console.WriteLine();\n      \n      DateTime datNow = new DateTime(2006, 10, 26, 13, 32, 00);\n      Console.WriteLine(&quot;Converting {0}, Kind {1}&quot;, datNow, datNow.Kind);\n      Console.WriteLine(&quot;   ConvertTimeToUtc: {0}, Kind {1}&quot;, TimeZoneInfo.ConvertTimeToUtc(datNow), TimeZoneInfo.ConvertTimeToUtc(datNow).Kind);\n      Console.WriteLine();\n      \n      DateTime datAmbiguous = new DateTime(2007, 11, 4, 1, 30, 00);    \n      Console.WriteLine(&quot;Converting {0}, Kind {1}, Ambiguous {2}&quot;, datAmbiguous, datAmbiguous.Kind, TimeZoneInfo.Local.IsAmbiguousTime(datAmbiguous));\n      Console.WriteLine(&quot;   ConvertTimeToUtc: {0}, Kind {1}&quot;, TimeZoneInfo.ConvertTimeToUtc(datAmbiguous), TimeZoneInfo.ConvertTimeToUtc(datAmbiguous).Kind);\n      Console.WriteLine();\n      \n      DateTime datInvalid = new DateTime(2007, 3, 11, 02, 30, 00);    \n      Console.WriteLine(&quot;Converting {0}, Kind {1}, Invalid {2}&quot;, datInvalid, datInvalid.Kind, TimeZoneInfo.Local.IsInvalidTime(datInvalid));\n      try\n      {\n         Console.WriteLine(&quot;   ConvertTimeToUtc: {0}, Kind {1}&quot;, TimeZoneInfo.ConvertTimeToUtc(datInvalid), TimeZoneInfo.ConvertTimeToUtc(datInvalid).Kind);\n      }\n      catch (ArgumentException e)\n      {   \n         Console.WriteLine(&quot;   {0}: Cannot convert {1} to UTC.&quot;, e.GetType().Name, datInvalid);\n      }\n      Console.WriteLine();\n\n      DateTime datNearMax = new DateTime(9999, 12, 31, 22, 00, 00);\n      Console.WriteLine(&quot;Converting {0}, Kind {1}&quot;, datNearMax, datNearMax.Kind);\n      Console.WriteLine(&quot;   ConvertTimeToUtc: {0}, Kind {1}&quot;, TimeZoneInfo.ConvertTimeToUtc(datNearMax), TimeZoneInfo.ConvertTimeToUtc(datNearMax).Kind);\n      Console.WriteLine();\n      //\n      // This example produces the following output if the local time zone \n      // is Pacific Standard Time:\n      //\n      //    Converting 8/31/2007 2:26:28 PM, Kind Local:\n      //       ConvertTimeToUtc: 8/31/2007 9:26:28 PM, Kind Utc\n      //    \n      //    Converting 8/31/2007 9:26:28 PM, Kind Utc\n      //       ConvertTimeToUtc: 8/31/2007 9:26:28 PM, Kind Utc\n      //    \n      //    Converting 10/26/2007 1:32:00 PM, Kind Unspecified\n      //       ConvertTimeToUtc: 10/26/2007 8:32:00 PM, Kind Utc\n      //    \n      //    Converting 11/4/2007 1:30:00 AM, Kind Unspecified, Ambiguous True\n      //       ConvertTimeToUtc: 11/4/2007 9:30:00 AM, Kind Utc\n      //    \n      //    Converting 3/11/2007 2:30:00 AM, Kind Unspecified, Invalid True\n      //       ArgumentException: Cannot convert 3/11/2007 2:30:00 AM to UTC.\n      //    \n      //    Converting 12/31/9999 10:00:00 PM, Kind Unspecified\n      //       ConvertTimeToUtc: 12/31/9999 11:59:59 PM, Kind Utc\n      // \n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone2.Conversions#1\">      Dim datNowLocal As Date = Date.Now\n      Console.WriteLine(&quot;Converting {0}, Kind {1}:&quot;, datNowLocal, datNowLocal.Kind)\n      Console.WriteLine(&quot;   ConvertTimeToUtc: {0}, Kind {1}&quot;, TimeZoneInfo.ConvertTimeToUtc(datNowLocal), TimeZoneInfo.ConvertTimeToUtc(datNowLocal).Kind)\n      Console.WriteLine()\n\n      Dim datNowUtc As Date = Date.UtcNow\n      Console.WriteLine(&quot;Converting {0}, Kind {1}&quot;, datNowUtc, datNowUtc.Kind)\n      Console.WriteLine(&quot;   ConvertTimeToUtc: {0}, Kind {1}&quot;, TimeZoneInfo.ConvertTimeToUtc(datNowUtc), TimeZoneInfo.ConvertTimeToUtc(datNowUtc).Kind)\n      Console.WriteLine()\n      \n      Dim datNow As Date = CDate(&quot;10/26/2007 1:32:00 PM&quot;)\n      Console.WriteLine(&quot;Converting {0}, Kind {1}&quot;, datNow, datNow.Kind)\n      Console.WriteLine(&quot;   ConvertTimeToUtc: {0}, Kind {1}&quot;, TimeZoneInfo.ConvertTimeToUtc(datNow), TimeZoneInfo.ConvertTimeToUtc(datNow).Kind)\n      Console.WriteLine()\n      \n      Dim datAmbiguous As Date = #11/4/2007 1:30:00AM#    \n      Console.WriteLine(&quot;Converting {0}, Kind {1}, Ambiguous {2}&quot;, datAmbiguous, datAmbiguous.Kind, TimeZoneInfo.Local.IsAmbiguousTime(datAmbiguous))\n      Console.WriteLine(&quot;   ConvertTimeToUtc: {0}, Kind {1}&quot;, TimeZoneInfo.ConvertTimeToUtc(datAmbiguous), TimeZoneInfo.ConvertTimeToUtc(datAmbiguous).Kind)\n      Console.WriteLine()\n      \n      Dim datInvalid As Date = #03/11/2007 2:30:00AM#    \n      Console.WriteLine(&quot;Converting {0}, Kind {1}, Invalid {2}&quot;, datInvalid, datInvalid.Kind, TimeZoneInfo.Local.IsInvalidTime(datInvalid))\n      Try\n         Console.WriteLine(&quot;   ConvertTimeToUtc: {0}, Kind {1}&quot;, TimeZoneInfo.ConvertTimeToUtc(datInvalid), TimeZoneInfo.ConvertTimeToUtc(datInvalid).Kind)\n      Catch e As ArgumentException\n         Console.WriteLine(&quot;   {0}: Cannot convert {1} to UTC.&quot;, e.GetType().Name, datInvalid)\n      End Try\n      Console.WriteLine()\n\n      Dim datNearMax As Date = #12/31/9999 10:00:00PM#\n      Console.WriteLine(&quot;Converting {0}, Kind {1}&quot;, datNearMax, datNearMax.Kind)\n      Console.WriteLine(&quot;   ConvertTimeToUtc: {0}, Kind {1}&quot;, TimeZoneInfo.ConvertTimeToUtc(datNearMax), TimeZoneInfo.ConvertTimeToUtc(datNearMax).Kind)\n      Console.WriteLine()\n      &#39;\n      &#39; This example produces the following output if the local time zone \n      &#39; is Pacific Standard Time:\n      &#39;\n      &#39;    Converting 8/31/2007 2:26:28 PM, Kind Local:\n      &#39;       ConvertTimeToUtc: 8/31/2007 9:26:28 PM, Kind Utc\n      &#39;    \n      &#39;    Converting 8/31/2007 9:26:28 PM, Kind Utc\n      &#39;       ConvertTimeToUtc: 8/31/2007 9:26:28 PM, Kind Utc\n      &#39;    \n      &#39;    Converting 10/26/2007 1:32:00 PM, Kind Unspecified\n      &#39;       ConvertTimeToUtc: 10/26/2007 8:32:00 PM, Kind Utc\n      &#39;    \n      &#39;    Converting 11/4/2007 1:30:00 AM, Kind Unspecified, Ambiguous True\n      &#39;       ConvertTimeToUtc: 11/4/2007 9:30:00 AM, Kind Utc\n      &#39;    \n      &#39;    Converting 3/11/2007 2:30:00 AM, Kind Unspecified, Invalid True\n      &#39;       ArgumentException: Cannot convert 3/11/2007 2:30:00 AM to UTC.\n      &#39;    \n      &#39;    Converting 12/31/9999 10:00:00 PM, Kind Unspecified\n      &#39;       ConvertTimeToUtc: 12/31/9999 11:59:59 PM, Kind Utc\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_ConvertTimeToUtc_System_DateTime_System_TimeZoneInfo_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_ConvertTimeToUtc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConvertTimeToUtc(DateTime,TimeZoneInfo)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the time in a specified time zone to Coordinated Universal Time (UTC).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTime ConvertTimeToUtc (DateTime dateTime, TimeZoneInfo sourceTimeZone);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTime</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The date and time to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sourceTimeZone</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time zone of <code>dateTime</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>The Coordinated Universal Time (UTC) that corresponds to the <code>dateTime</code> parameter. The <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object&#39;s <span class=\"xref\">stem.DateTime.Kind*</span> property is always set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>dateTime</code>\n    <code>.Kind</code> is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a> and <code>sourceTimeZone</code> does not equal <span class=\"xref\">stem.TimeZoneInfo.Utc*</span>.  </p>\n<p> -or-  </p>\n<p> <code>dateTime</code><code>.Kind</code> is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a> and <code>sourceTimeZone</code> does not equal <span class=\"xref\">stem.TimeZoneInfo.Local*</span>.  </p>\n<p> -or-  </p>\n<p> <code>sourceTimeZone</code><code>.IsInvalidDateTime(</code><code>dateTime</code><code>)</code> returns <code>true</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>sourceTimeZone</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the <code>dateTime</code> parameter equals <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a> and the <code>sourceTimeZone</code> parameter equals <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Utc_\" data-linktype=\"relative-path\">Utc</a>, this method returns <code>dateTime</code> without performing any conversion.  </p>\n<p> If <code>dateTime</code> corresponds to an ambiguous time, this method assumes that it is the standard time of the source time zone. If <code>dateTime</code> corresponds to an invalid time, this method throws an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a>.  </p>\n<p> If the Coordinated Universal Time (UTC) equivalent of <code>dateTime</code> is earlier than <a class=\"xref\" href=\"system.datetime#System_DateTime_MinValue\" data-linktype=\"relative-path\">System.DateTime.MinValue</a> or later that <a class=\"xref\" href=\"system.datetime#System_DateTime_MaxValue\" data-linktype=\"relative-path\">System.DateTime.MaxValue</a>, this method returns <a class=\"xref\" href=\"system.datetime#System_DateTime_MinValue\" data-linktype=\"relative-path\">MinValue</a> or <a class=\"xref\" href=\"system.datetime#System_DateTime_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>, respectively.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example retrieves the current date from the local system and converts it to Coordinated Universal Time (UTC), then converts it to Tokyo Standard Time, and finally converts from Tokyo Standard Time back to UTC. Note that the two UTC times are identical.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZone2.Conversions#2\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      // Get time in local time zone \n      DateTime thisTime = DateTime.Now;\n      Console.WriteLine(&quot;Time in {0} zone: {1}&quot;, TimeZoneInfo.Local.IsDaylightSavingTime(thisTime) ?\n                        TimeZoneInfo.Local.DaylightName : TimeZoneInfo.Local.StandardName, thisTime);\n      Console.WriteLine(&quot;   UTC Time: {0}&quot;, TimeZoneInfo.ConvertTimeToUtc(thisTime, TimeZoneInfo.Local));\n      // Get Tokyo Standard Time zone\n      TimeZoneInfo tst = TimeZoneInfo.FindSystemTimeZoneById(&quot;Tokyo Standard Time&quot;);\n      DateTime tstTime = TimeZoneInfo.ConvertTime(thisTime, TimeZoneInfo.Local, tst);      \n      Console.WriteLine(&quot;Time in {0} zone: {1}&quot;, tst.IsDaylightSavingTime(tstTime) ?\n                        tst.DaylightName : tst.StandardName, tstTime);\n      Console.WriteLine(&quot;   UTC Time: {0}&quot;, TimeZoneInfo.ConvertTimeToUtc(tstTime, tst));\n   }\n}\n// The example displays output like the following when run on a system in the\n// U.S. Pacific Standard Time zone:\n//       Time in Pacific Standard Time zone: 12/6/2013 10:57:51 AM\n//          UTC Time: 12/6/2013 6:57:51 PM\n//       Time in Tokyo Standard Time zone: 12/7/2013 3:57:51 AM\n//          UTC Time: 12/6/2013 6:57:51 PM\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone2.Conversions#2\">Module Example\n   Public Sub Main()\n      &#39; Get time in local time zone \n      Dim thisTime As Date = Date.Now\n      Console.WriteLine(&quot;Time in {0} zone: {1}&quot;, IIf(TimeZoneInfo.Local.IsDaylightSavingTime(thisTime), \n                        TimeZoneInfo.Local.DaylightName, TimeZoneInfo.Local.StandardName), thisTime)\n      Console.WriteLine(&quot;   UTC Time: {0}&quot;, TimeZoneInfo.ConvertTimeToUtc(thisTime, TimeZoneInfo.Local))\n      &#39; Get Tokyo Standard Time zone\n      Dim tst As TimeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById(&quot;Tokyo Standard Time&quot;)\n      Dim tstTime As Date = TimeZoneInfo.ConvertTime(thisTime, TimeZoneInfo.Local, tst)      \n      Console.WriteLine(&quot;Time in {0} zone: {1}&quot;, IIf(tst.IsDaylightSavingTime(tstTime), \n                        tst.DaylightName, tst.StandardName), tstTime)\n      Console.WriteLine(&quot;   UTC Time: {0}&quot;, TimeZoneInfo.ConvertTimeToUtc(tstTime, tst))\n   End Sub\nEnd Module\n&#39; The example displays output like the following when run on a system in the U.S.\n&#39; Pacific Standard Time zone:\n&#39;    Time in Pacific Standard Time zone: 12/6/2013 10:57:51 AM\n&#39;       UTC Time: 12/6/2013 6:57:51 PM\n&#39;    Time in Tokyo Standard Time zone: 12/7/2013 3:57:51 AM\n&#39;       UTC Time: 12/6/2013 6:57:51 PM\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_CreateCustomTimeZone_System_String_System_TimeSpan_System_String_System_String_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_CreateCustomTimeZone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateCustomTimeZone(String,TimeSpan,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, and a standard time display name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static TimeZoneInfo CreateCustomTimeZone (string id, TimeSpan baseUtcOffset, string displayName, string standardDisplayName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>id</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time zone&#39;s identifier.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>baseUtcOffset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that represents the time difference between this time zone and Coordinated Universal Time (UTC).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>displayName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The display name of the new time zone.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>standardDisplayName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the new time zone&#39;s standard time.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a></div>\r\n                  </div>\r\n                  <p>The new time zone.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>id</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>id</code> parameter is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> The <code>baseUtcOffset</code> parameter does not represent a whole number of minutes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>baseUtcOffset</code> parameter is greater than 14 hours or less than -14 hours.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This overload of the CreateCustomTimeZone method is suitable for creating a time zone that has no adjustments (that is, a time zone that does not support daylight saving time). To define a time zone that includes adjustments for daylight saving time, use either the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_CreateCustomTimeZone_\" data-linktype=\"relative-path\">CreateCustomTimeZone</a> or the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_CreateCustomTimeZone_\" data-linktype=\"relative-path\">CreateCustomTimeZone</a> method.  </p>\n<p> The following table shows the relationship between the parameters that are provided to the CreateCustomTimeZone method and the properties of the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object that are returned by the method call.  </p>\n<table>\n<thead>\n<tr>\n<th>CreateCustomTimeZone parameter</th>\n<th>TimeZoneInfo property</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>id</code></td>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Id_\" data-linktype=\"relative-path\">Id</a></td>\n</tr>\n<tr>\n<td><code>baseUtcOffset</code></td>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_BaseUtcOffset_\" data-linktype=\"relative-path\">BaseUtcOffset</a></td>\n</tr>\n<tr>\n<td><code>displayName</code></td>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_DisplayName_\" data-linktype=\"relative-path\">DisplayName</a></td>\n</tr>\n<tr>\n<td><code>standardDisplayName</code></td>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_StandardName_\" data-linktype=\"relative-path\">StandardName</a></td>\n</tr>\n</tbody>\n</table>\n<p> Typically, the time zone&#39;s standard time name and its identifier are the same. However, the length of the time zone&#39;s identifier should not exceed 32 characters. The string passed to the <code>displayName</code> parameter follows a fairly standard format. The first portion of the display name is the time zone&#39;s base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses. This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both. For example:  </p>\n<pre><code>(GMT+02:00) Athens, Beirut, Istanbul, Minsk  \n(GMT-02:00) Mid-Atlantic  \n(GMT-07:00) Mountain Time (US &amp; Canada)\n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a custom time zone for the Mawson and Holme Bay regions of Antarctica. It then displays the result of converting the local time to the time in the new time zone.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZone2.CreateTimeZone#1\">      string displayName = &quot;(GMT+06:00) Antarctica/Mawson Time&quot;;\n      string standardName = &quot;Mawson Time&quot;; \n      TimeSpan offset = new TimeSpan(06, 00, 00);\n      TimeZoneInfo mawson = TimeZoneInfo.CreateCustomTimeZone(standardName, offset, displayName, standardName);\n      Console.WriteLine(&quot;The current time is {0} {1}&quot;, \n                        TimeZoneInfo.ConvertTime(DateTime.Now, TimeZoneInfo.Local, mawson),\n                        mawson.StandardName);      \n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone2.CreateTimeZone#1\">      Dim displayName As String = &quot;(GMT+06:00) Antarctica/Mawson Time&quot;\n      Dim standardName As String = &quot;Mawson Time&quot; \n      Dim offset As TimeSpan = New TimeSpan(06, 00, 00)\n      Dim mawson As TimeZoneInfo = TimeZoneInfo.CreateCustomTimeZone(standardName, offset, displayName, standardName)\n      Console.WriteLine(&quot;The current time is {0} {1}&quot;, _ \n                        TimeZoneInfo.ConvertTime(Date.Now, TimeZoneInfo.Local, mawson), _\n                        mawson.StandardName)      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_CreateCustomTimeZone_System_String_System_TimeSpan_System_String_System_String_System_String_System_TimeZoneInfo_AdjustmentRule___\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_CreateCustomTimeZone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateCustomTimeZone(String,TimeSpan,String,String,String,TimeZoneInfo+AdjustmentRule[])</div>        \r\n          </div>\r\n    \r\n            <p>Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, a standard time name, a daylight saving time name, and daylight saving time rules.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static TimeZoneInfo CreateCustomTimeZone (string id, TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, TimeZoneInfo.AdjustmentRule[] adjustmentRules);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>id</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time zone&#39;s identifier.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>baseUtcOffset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that represents the time difference between this time zone and Coordinated Universal Time (UTC).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>displayName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The display name of the new time zone.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>standardDisplayName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new time zone&#39;s standard time name.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>daylightDisplayName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The daylight saving time name of the new time zone.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>adjustmentRules</dt>\r\n                  <dd>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array that augments the base UTC offset for a particular period.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object that represents the new time zone.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>id</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>id</code> parameter is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> The <code>baseUtcOffset</code> parameter does not represent a whole number of minutes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>baseUtcOffset</code> parameter is greater than 14 hours or less than -14 hours.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidtimezoneexception\" data-linktype=\"relative-path\">InvalidTimeZoneException</a></div>\r\n                  </div>\r\n                  <p>The adjustment rules specified in the <code>adjustmentRules</code> parameter overlap.  </p>\n<p> -or-  </p>\n<p> The adjustment rules specified in the <code>adjustmentRules</code> parameter are not in chronological order.  </p>\n<p> -or-  </p>\n<p> One or more elements in <code>adjustmentRules</code> are <code>null</code>.  </p>\n<p> -or-  </p>\n<p> A date can have multiple adjustment rules applied to it.  </p>\n<p> -or-  </p>\n<p> The sum of the <code>baseUtcOffset</code> parameter and the <span class=\"xref\">stem.TimeZoneInfo.AdjustmentRule.DaylightDelta*</span> value of one or more objects in the <code>adjustmentRules</code> array is greater than 14 hours or less than -14 hours.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This overload of the CreateCustomTimeZone method is suitable for creating a time zone that supports daylight saving time. To define a time zone that does not support daylight saving time, use either the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_CreateCustomTimeZone_\" data-linktype=\"relative-path\">CreateCustomTimeZone</a> or the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_CreateCustomTimeZone_\" data-linktype=\"relative-path\">CreateCustomTimeZone</a> method.  </p>\n<p> The following table shows the relationship between the parameters that are provided to the CreateCustomTimeZone method and the members of the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object that are returned by the method call.  </p>\n<table>\n<thead>\n<tr>\n<th>CreateCustomTimeZone parameter</th>\n<th>TimeZoneInfo member</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>id</code></td>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Id_\" data-linktype=\"relative-path\">Id</a></td>\n</tr>\n<tr>\n<td><code>baseUtcOffset</code></td>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_BaseUtcOffset_\" data-linktype=\"relative-path\">BaseUtcOffset</a></td>\n</tr>\n<tr>\n<td><code>displayName</code></td>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_DisplayName_\" data-linktype=\"relative-path\">DisplayName</a></td>\n</tr>\n<tr>\n<td><code>standardDisplayName</code></td>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_StandardName_\" data-linktype=\"relative-path\">StandardName</a></td>\n</tr>\n<tr>\n<td><code>daylightDisplayName</code></td>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_DaylightName_\" data-linktype=\"relative-path\">DaylightName</a></td>\n</tr>\n<tr>\n<td><code>adjustmentRules</code></td>\n<td>An array of <a class=\"xref\" href=\"system.timezoneinfo.adjustmentrule\" data-linktype=\"relative-path\">System.TimeZoneInfo+AdjustmentRule</a> objects returned by the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_GetAdjustmentRules_\" data-linktype=\"relative-path\">GetAdjustmentRules</a> method.</td>\n</tr>\n</tbody>\n</table>\n<p> Typically, the time zone&#39;s standard time name and its identifier are the same. However, the length of the time zone&#39;s identifier should not exceed 32 characters. The string passed to the <code>displayName</code> parameter follows a fairly standard format. The first portion of the display name is the time zone&#39;s base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses. This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both. For example:  </p>\n<pre><code>(GMT+02:00) Athens, Beirut, Istanbul, Minsk  \n(GMT-02:00) Mid-Atlantic  \n(GMT-07:00) Mountain Time (US &amp; Canada)\n</code></pre><p> The <code>baseUtcOffset</code> parameter defines the custom time zone&#39;s offset from Coordinated Universal Time (UTC) for all of the time zone&#39;s adjustment rules. In other words, the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object model assumes that the time zone&#39;s offset from UTC is constant throughout the life of the time zone, and exists independent of particular adjustment rules. To reflect a time zone that has changed its offset from UTC, you must create a new time zone object.  </p>\n<p> A time zone&#39;s adjustment rules are defined by doing the following:  </p>\n<ol>\n<li><p>Calling either the <a class=\"xref\" href=\"system.timezoneinfo.transitiontime#System_TimeZoneInfo_TransitionTime_CreateFloatingDateRule_\" data-linktype=\"relative-path\">CreateFloatingDateRule</a> or the <a class=\"xref\" href=\"system.timezoneinfo.transitiontime#System_TimeZoneInfo_TransitionTime_CreateFixedDateRule_\" data-linktype=\"relative-path\">CreateFixedDateRule</a> method to define the starting and ending transition time for each adjustment rule.  </p>\n</li>\n<li><p>Calling the <a class=\"xref\" href=\"system.timezoneinfo.adjustmentrule#System_TimeZoneInfo_AdjustmentRule_CreateAdjustmentRule_\" data-linktype=\"relative-path\">CreateAdjustmentRule</a> method for each adjustment rule.  </p>\n</li>\n<li><p>Assigning the adjustment rules to an array that can be passed as the <code>adjustmentRules</code> parameter.</p>\n</li>\n</ol>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a custom time zone for the Palmer station and Anvers Island in Antarctica. It then converts the local time to the time in the new time zone and displays the result.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZone2.CreateTimeZone#2\">      // Define transition times to/from DST\n      TimeZoneInfo.TransitionTime startTransition, endTransition;\n      startTransition = TimeZoneInfo.TransitionTime.CreateFloatingDateRule(new DateTime(1, 1, 1, 4, 0, 0), \n                                                                        10, 2, DayOfWeek.Sunday); \n      endTransition = TimeZoneInfo.TransitionTime.CreateFloatingDateRule(new DateTime(1, 1, 1, 3, 0, 0), \n                                                                      3, 2, DayOfWeek.Sunday);\n      // Define adjustment rule\n      TimeSpan delta = new TimeSpan(1, 0, 0);\n      TimeZoneInfo.AdjustmentRule adjustment;\n      adjustment = TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(new DateTime(1999, 10, 1), DateTime.MaxValue.Date, delta, startTransition, endTransition);\n      // Create array for adjustment rules\n      TimeZoneInfo.AdjustmentRule[] adjustments = {adjustment};\n      // Define other custom time zone arguments\n      string displayName = &quot;(GMT-04:00) Antarctica/Palmer Time&quot;;\n      string standardName = &quot;Palmer Time&quot;;\n      string daylightName = &quot;Palmer Daylight Time&quot;;\n      TimeSpan offset = new TimeSpan(-4, 0, 0);\n      TimeZoneInfo palmer = TimeZoneInfo.CreateCustomTimeZone(standardName, offset, displayName, standardName, daylightName, adjustments);\n      Console.WriteLine(&quot;The current time is {0} {1}&quot;,  \n                        TimeZoneInfo.ConvertTime(DateTime.Now, TimeZoneInfo.Local, palmer), \n                        palmer.StandardName);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone2.CreateTimeZone#2\">      &#39; Define transition times to/from DST\n      Dim startTransition As TimeZoneInfo.TransitionTime = TimeZoneInfo.TransitionTime.CreateFloatingDateRule(#04:00:00#, 10, 2, DayOfWeek.Sunday) \n      Dim endTransition As TimeZoneInfo.TransitionTime = TimeZoneInfo.TransitionTime.CreateFloatingDateRule(#3:00:00#, 3, 2, DayOfWeek.Sunday)\n      &#39; Define adjustment rule\n      Dim delta As TimeSpan = New TimeSpan(1, 0, 0)\n      Dim adjustment As TimeZoneInfo.AdjustmentRule = TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(#10/01/1999#, Date.MaxValue.Date, delta, startTransition, endTransition)\n      &#39; Create array for adjustment rules\n      Dim adjustments() As TimeZoneInfo.AdjustmentRule = {adjustment}\n      &#39; Define other custom time zone arguments\n      Dim DisplayName As String = &quot;(GMT-04:00) Antarctica/Palmer Time&quot;\n      Dim standardName As String = &quot;Palmer Standard Time&quot;\n      Dim daylightName As String = &quot;Palmer Daylight Time&quot;\n      Dim offset As TimeSpan = New TimeSpan(-4, 0, 0)\n      Dim palmer As TimeZoneInfo = TimeZoneInfo.CreateCustomTimeZone(standardName, offset, displayName, standardName, daylightName, adjustments)\n      Console.WriteLine(&quot;The current time is {0} {1}&quot;, _ \n                        TimeZoneInfo.ConvertTime(Date.Now, TimeZoneInfo.Local, palmer), _\n                        palmer.StandardName)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_CreateCustomTimeZone_System_String_System_TimeSpan_System_String_System_String_System_String_System_TimeZoneInfo_AdjustmentRule___System_Boolean_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_CreateCustomTimeZone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateCustomTimeZone(String,TimeSpan,String,String,String,TimeZoneInfo+AdjustmentRule[],Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, a standard time name, a daylight saving time name, daylight saving time rules, and a value that indicates whether the returned object reflects daylight saving time information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static TimeZoneInfo CreateCustomTimeZone (string id, TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, TimeZoneInfo.AdjustmentRule[] adjustmentRules, bool disableDaylightSavingTime);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>id</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time zone&#39;s identifier.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>baseUtcOffset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> object that represents the time difference between this time zone and Coordinated Universal Time (UTC).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>displayName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The display name of the new time zone.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>standardDisplayName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The standard time name of the new time zone.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>daylightDisplayName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The daylight saving time name of the new time zone.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>adjustmentRules</dt>\r\n                  <dd>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.timezoneinfo.adjustmentrule\" data-linktype=\"relative-path\">TimeZoneInfo+AdjustmentRule</a> objects that augment the base UTC offset for a particular period.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>disableDaylightSavingTime</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to discard any daylight saving time-related information present in <code>adjustmentRules</code> with the new object; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a></div>\r\n                  </div>\r\n                  <p>The new time zone. If the <code>disableDaylightSavingTime</code> parameter is <code>true</code>, the returned object has no daylight saving time data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>id</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>id</code> parameter is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> The <code>baseUtcOffset</code> parameter does not represent a whole number of minutes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>baseUtcOffset</code> parameter is greater than 14 hours or less than -14 hours.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidtimezoneexception\" data-linktype=\"relative-path\">InvalidTimeZoneException</a></div>\r\n                  </div>\r\n                  <p>The adjustment rules specified in the <code>adjustmentRules</code> parameter overlap.  </p>\n<p> -or-  </p>\n<p> The adjustment rules specified in the <code>adjustmentRules</code> parameter are not in chronological order.  </p>\n<p> -or-  </p>\n<p> One or more elements in <code>adjustmentRules</code> are <code>null</code>.  </p>\n<p> -or-  </p>\n<p> A date can have multiple adjustment rules applied to it.  </p>\n<p> -or-  </p>\n<p> The sum of the <code>baseUtcOffset</code> parameter and the <span class=\"xref\">stem.TimeZoneInfo.AdjustmentRule.DaylightDelta*</span> value of one or more objects in the <code>adjustmentRules</code> array is greater than 14 hours or less than -14 hours.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this overload of the CreateCustomTimeZone method to create a custom time zone whose support for daylight saving time can be determined by conditions at run time.  </p>\n<p> The following table shows the relationship between the parameters that are provided to the CreateCustomTimeZone method and the members of the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object that are returned by the method call.  </p>\n<table>\n<thead>\n<tr>\n<th>CreateCustomTimeZone parameter</th>\n<th>TimeZoneInfo property</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>id</code></td>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Id_\" data-linktype=\"relative-path\">Id</a></td>\n</tr>\n<tr>\n<td><code>baseUtcOffset</code></td>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_BaseUtcOffset_\" data-linktype=\"relative-path\">BaseUtcOffset</a></td>\n</tr>\n<tr>\n<td><code>displayName</code></td>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_DisplayName_\" data-linktype=\"relative-path\">DisplayName</a></td>\n</tr>\n<tr>\n<td><code>standardDisplayName</code></td>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_StandardName_\" data-linktype=\"relative-path\">StandardName</a></td>\n</tr>\n<tr>\n<td><code>daylightDisplayName</code></td>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_DaylightName_\" data-linktype=\"relative-path\">DaylightName</a> if <code>disableDaylightSavingTime</code> is <code>false</code>; <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">System.String.Empty</a> if <code>disableDaylightSavingTime</code> is <code>true</code>.</td>\n</tr>\n<tr>\n<td><code>adjustmentRules</code></td>\n<td>An array of <a class=\"xref\" href=\"system.timezoneinfo.adjustmentrule\" data-linktype=\"relative-path\">TimeZoneInfo+AdjustmentRule</a> objects returned by the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_GetAdjustmentRules_\" data-linktype=\"relative-path\">GetAdjustmentRules</a> method if <code>disableDaylightSavingTime</code> is <code>false</code>; an empty array returned by the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_GetAdjustmentRules_\" data-linktype=\"relative-path\">GetAdjustmentRules</a> method if <code>disableDaylightSavingTime</code> is <code>true</code>.</td>\n</tr>\n<tr>\n<td><code>disableDaylightSavingTime</code></td>\n<td>Not <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_SupportsDaylightSavingTime_\" data-linktype=\"relative-path\">SupportsDaylightSavingTime</a>.</td>\n</tr>\n</tbody>\n</table>\n<p> Typically, the time zone&#39;s standard time name and its identifier are the same. However, the length of the time zone&#39;s identifier should not exceed 32 characters. The string passed to the <code>displayName</code> parameter follows a fairly standard format. The first portion of the display name is the time zone&#39;s base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses. This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both. For example:  </p>\n<pre><code>(GMT+02:00) Athens, Beirut, Istanbul, Minsk  \n(GMT-02:00) Mid-Atlantic  \n(GMT-07:00) Mountain Time (US &amp; Canada)\n</code></pre><p> A time zone&#39;s adjustment rules are defined by doing the following:  </p>\n<ol>\n<li><p>Calling either the <a class=\"xref\" href=\"system.timezoneinfo.transitiontime#System_TimeZoneInfo_TransitionTime_CreateFloatingDateRule_\" data-linktype=\"relative-path\">CreateFloatingDateRule</a> or the <a class=\"xref\" href=\"system.timezoneinfo.transitiontime#System_TimeZoneInfo_TransitionTime_CreateFixedDateRule_\" data-linktype=\"relative-path\">CreateFixedDateRule</a> method to define the starting and ending transition rules for each adjustment rule.  </p>\n</li>\n<li><p>Calling the <a class=\"xref\" href=\"system.timezoneinfo.adjustmentrule#System_TimeZoneInfo_AdjustmentRule_CreateAdjustmentRule_\" data-linktype=\"relative-path\">CreateAdjustmentRule</a> method for each adjustment rule.  </p>\n</li>\n<li><p>Assigning the adjustment rules to an array that can be passed as the <code>adjustmentRules</code> parameter.  </p>\n<p>If <code>disableDaylightSavingTime</code> parameter is <code>false</code>, the operation of this method is identical to the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_CreateCustomTimeZone_\" data-linktype=\"relative-path\">CreateCustomTimeZone</a> overload. If <code>disableDaylightSavingTime</code> is <code>true</code>, the returned object includes no adjustment rules and a <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_DaylightName_\" data-linktype=\"relative-path\">DaylightName</a> property whose value is an empty string.</p>\n</li>\n</ol>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a custom time zone for the Palmer station and Anvers Island in Antarctica. It sets the <code>disableDaylightSavingTime</code> parameter in the call to the CreateCustomTimeZone method to <code>true</code>. It then displays the new time zone&#39;s daylight saving time name, if one is present, and the number of adjustment rules to confirm that the new time zone has no daylight saving time information.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZone2.CreateTimeZone#3\">      // Define transition times to/from DST\n      TimeZoneInfo.TransitionTime startTransition, endTransition;\n      startTransition = TimeZoneInfo.TransitionTime.CreateFloatingDateRule(new DateTime(1, 1, 1, 4, 0, 0),\n                                                                        10, 2, DayOfWeek.Sunday); \n      endTransition = TimeZoneInfo.TransitionTime.CreateFloatingDateRule(new DateTime(1, 1, 1,3, 0, 0), \n                                                                      3, 2, DayOfWeek.Sunday);\n      // Define adjustment rule\n      TimeSpan delta = new TimeSpan(1, 0, 0);\n      TimeZoneInfo.AdjustmentRule adjustment = TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(new DateTime(1999, 10, 1), \n                                            DateTime.MaxValue.Date, delta, startTransition, endTransition);\n      // Create array for adjustment rules\n      TimeZoneInfo.AdjustmentRule[] adjustments = {adjustment};\n      // Define other custom time zone arguments\n      string displayName = &quot;(GMT-04:00) Antarctica/Palmer Time&quot;;\n      string standardName = &quot;Palmer Standard Time&quot;;\n      string daylightName = &quot;Palmer Daylight Time&quot;;\n      TimeSpan offset = new TimeSpan(-4, 0, 0);\n      // Create custom time zone without copying DST information\n      TimeZoneInfo palmer = TimeZoneInfo.CreateCustomTimeZone(standardName, offset, displayName, standardName, \n                                                        daylightName, adjustments, true);\n      // Indicate whether new time zone//s adjustment rules are present\n      Console.WriteLine(&quot;{0} {1}has {2} adjustment rules.&quot;, \n                        palmer.StandardName, \n                        ! (string.IsNullOrEmpty(palmer.DaylightName)) ?  &quot;(&quot; + palmer.DaylightName + &quot;) &quot;: &quot;&quot; , \n                        palmer.GetAdjustmentRules().Length);\n      // Indicate whether new time zone supports DST\n      Console.WriteLine(&quot;{0} supports DST: {1}&quot;, palmer.StandardName, palmer.SupportsDaylightSavingTime);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone2.CreateTimeZone#3\">      &#39; Define transition times to/from DST\n      Dim startTransition As TimeZoneInfo.TransitionTime = TimeZoneInfo.TransitionTime.CreateFloatingDateRule(#04:00:00#, 10, 2, DayOfWeek.Sunday) \n      Dim endTransition As TimeZoneInfo.TransitionTime = TimeZoneInfo.TransitionTime.CreateFloatingDateRule(#3:00:00#, 3, 2, DayOfWeek.Sunday)\n      &#39; Define adjustment rule\n      Dim delta As TimeSpan = New TimeSpan(1, 0, 0)\n      Dim adjustment As TimeZoneInfo.AdjustmentRule = TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(#10/01/1999#, Date.MaxValue.Date, delta, startTransition, endTransition)\n      &#39; Create array for adjustment rules\n      Dim adjustments() As TimeZoneInfo.AdjustmentRule = {adjustment}\n      &#39; Define other custom time zone arguments\n      Dim displayName As String = &quot;(GMT-04:00) Antarctica/Palmer Time&quot;\n      Dim standardName As String = &quot;Palmer Standard Time&quot;\n      Dim daylightName As String = &quot;Palmer Daylight Time&quot;\n      Dim offset As TimeSpan = New TimeSpan(-4, 0, 0)\n      Dim palmer As TimeZoneInfo = TimeZoneInfo.CreateCustomTimeZone(standardName, offset, displayName, standardName, daylightName, adjustments, True)\n      &#39; Indicate whether new time zone&#39;s adjustment rules are present\n      Console.WriteLine(&quot;{0} {1}has {2} adjustment rules.&quot;, _\n                        palmer.StandardName, _\n                        IIf(Not String.IsNullOrEmpty(palmer.DaylightName), &quot;(&quot; &amp; palmer.DaylightName &amp; &quot;) &quot;, &quot;&quot;), _\n                        palmer.GetAdjustmentRules().Length)\n      &#39; Indicate whether new time zone supports DST\n      Console.WriteLine(&quot;{0} supports DST: {1}&quot;, palmer.StandardName, palmer.SupportsDaylightSavingTime)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the current <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object and another object are equal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A second object to compare with the current object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>obj</code> is a <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object that is equal to the current instance; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method converts or casts <code>obj</code> to a <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object and compares it with the current instance. The test for equality is based on a comparison of values. The current <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> instance and <code>obj</code> are considered to be equal under the following conditions:  </p>\n<ul>\n<li><p>The run-time type of <code>obj</code> is <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a>.  </p>\n</li>\n<li><p>The two objects have the same <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Id_\" data-linktype=\"relative-path\">Id</a> property value.  </p>\n</li>\n<li><p>The two objects have the same adjustment rules.  </p>\n<p>If <code>obj</code> is <code>null</code>, this method returns <code>false</code>.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the Equals method to determine whether the local time zone is Pacific Time or Eastern Time.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZoneInfo.Equals#1\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      TimeZoneInfo thisTimeZone;\n      object obj1, obj2;\n      \n      thisTimeZone = TimeZoneInfo.Local;\n      obj1 = TimeZoneInfo.FindSystemTimeZoneById(&quot;Pacific Standard Time&quot;);\n      obj2 = TimeZoneInfo.FindSystemTimeZoneById(&quot;Eastern Standard Time&quot;);\n      Console.WriteLine(thisTimeZone.Equals(obj1));\n      Console.WriteLine(thisTimeZone.Equals(obj2));\n   }\n}\n// The example displays the following output:\n//      True\n//      False\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZoneInfo.Equals#1\">Module Example\n   Public Sub Main()\n      Dim thisTimeZone As TimeZoneInfo\n      Dim obj1, obj2 As Object\n      \n      thisTimeZone = TimeZoneInfo.Local\n      obj1 = TimeZoneInfo.FindSystemTimeZoneById(&quot;Pacific Standard Time&quot;)\n      obj2 = TimeZoneInfo.FindSystemTimeZoneById(&quot;Eastern Standard Time&quot;)\n      Console.WriteLine(thisTimeZone.Equals(obj1))\n      Console.WriteLine(thisTimeZone.Equals(obj2))\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;      True\n&#39;      False\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_Equals_System_TimeZoneInfo_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(TimeZoneInfo)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the current <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object and another <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object are equal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Equals (TimeZoneInfo other);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>other</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A second object to compare with the current object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the two <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> objects are equal; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Equality is based on a comparison of values. Two <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> objects are considered to be equal under the following conditions:  </p>\n<ul>\n<li><p>The value of their <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Id_\" data-linktype=\"relative-path\">Id</a> property is the same.  </p>\n</li>\n<li><p>They have the same adjustment rules.  </p>\n<p>Equals returns the Boolean value that results from evaluating the following expression:  </p>\n<p>[C#]  </p>\n<p><code>other.Id == this.Id &amp;&amp; HasSameRules(other);</code>  </p>\n<p>[Visual Basic]  </p>\n<p><code>other.Id = me.Id AndAlso HasSameRules(other)</code>  </p>\n<p>If the <code>other</code> parameter is an uninitialized <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object, this method returns <code>false</code>.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the Equals method to determine whether the local time zone is Pacific Time or Eastern Time.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZone2.Class#7\">         TimeZoneInfo thisTimeZone, zone1, zone2;\n      \n         thisTimeZone = TimeZoneInfo.Local;\n         zone1 = TimeZoneInfo.FindSystemTimeZoneById(&quot;Pacific Standard Time&quot;);\n         zone2 = TimeZoneInfo.FindSystemTimeZoneById(&quot;Eastern Standard Time&quot;);\n         Console.WriteLine(thisTimeZone.Equals(zone1));\n         Console.WriteLine(thisTimeZone.Equals(zone2));\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone2.Class#7\">      Dim thisTimeZone, zone1, zone2 As TimeZoneInfo\n      \n      thisTimeZone = TimeZoneInfo.Local\n      zone1 = TimeZoneInfo.FindSystemTimeZoneById(&quot;Pacific Standard Time&quot;)\n      zone2 = TimeZoneInfo.FindSystemTimeZoneById(&quot;Eastern Standard Time&quot;)\n      Console.WriteLine(thisTimeZone.Equals(zone1))\n      Console.WriteLine(thisTimeZone.Equals(zone2))\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_FindSystemTimeZoneById_System_String_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_FindSystemTimeZoneById_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FindSystemTimeZoneById(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object from the registry based on its identifier.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static TimeZoneInfo FindSystemTimeZoneById (string id);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>id</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time zone identifier, which corresponds to the <span class=\"xref\">stem.TimeZoneInfo.Id*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a></div>\r\n                  </div>\r\n                  <p>An object whose identifier is the value of the <code>id</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.outofmemoryexception\" data-linktype=\"relative-path\">OutOfMemoryException</a></div>\r\n                  </div>\r\n                  <p>The system does not have enough memory to hold information about the time zone.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>id</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timezonenotfoundexception\" data-linktype=\"relative-path\">TimeZoneNotFoundException</a></div>\r\n                  </div>\r\n                  <p>The time zone identifier specified by <code>id</code> was not found. This means that a registry key whose name matches <code>id</code> does not exist, or that the key exists but does not contain any time zone data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The process does not have the permissions required to read from the registry key that contains the time zone information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidtimezoneexception\" data-linktype=\"relative-path\">InvalidTimeZoneException</a></div>\r\n                  </div>\r\n                  <p>The time zone identifier was found, but the registry data is corrupted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>id</code> parameter must correspond exactly to the time zone&#39;s registry key in length, but not in case, for a successful match to occur; that is, the comparison of <code>id</code> with time zone identifiers is case-insensitive. If you want to retrieve time zone objects based on partial matches, you can write custom procedures that work with the read-only collection of <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> objects returned by the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_GetSystemTimeZones_\" data-linktype=\"relative-path\">GetSystemTimeZones</a> method.  </p>\n<p> FindSystemTimeZoneById tries to match <code>id</code> to the subkey names of the HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones branch of the registry under Windows XP and Windows Vista. This branch does not necessarily contain a comprehensive list of time zone identifiers. If required by an application, you can create a particular time zone either by calling one of the overloads of the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_CreateCustomTimeZone_\" data-linktype=\"relative-path\">CreateCustomTimeZone</a> method or by calling <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_FromSerializedString_\" data-linktype=\"relative-path\">FromSerializedString</a> to deserialize a <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object that represents the required time zone. However, time zones created by these method calls are not included in the registry and cannot be retrieved using the FindSystemTimeZoneById method. These custom time zones can be accessed only through the object reference returned by the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_CreateCustomTimeZone_\" data-linktype=\"relative-path\">CreateCustomTimeZone</a> or <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_FromSerializedString_\" data-linktype=\"relative-path\">FromSerializedString</a> method call.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the FindSystemTimeZoneById method to retrieve the Tokyo Standard Time zone. This <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object is then used to convert the local time to the time in Tokyo and to determine whether it is Tokyo Standard Time or Tokyo Daylight Time.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZone2.Conversions#2\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      // Get time in local time zone \n      DateTime thisTime = DateTime.Now;\n      Console.WriteLine(&quot;Time in {0} zone: {1}&quot;, TimeZoneInfo.Local.IsDaylightSavingTime(thisTime) ?\n                        TimeZoneInfo.Local.DaylightName : TimeZoneInfo.Local.StandardName, thisTime);\n      Console.WriteLine(&quot;   UTC Time: {0}&quot;, TimeZoneInfo.ConvertTimeToUtc(thisTime, TimeZoneInfo.Local));\n      // Get Tokyo Standard Time zone\n      TimeZoneInfo tst = TimeZoneInfo.FindSystemTimeZoneById(&quot;Tokyo Standard Time&quot;);\n      DateTime tstTime = TimeZoneInfo.ConvertTime(thisTime, TimeZoneInfo.Local, tst);      \n      Console.WriteLine(&quot;Time in {0} zone: {1}&quot;, tst.IsDaylightSavingTime(tstTime) ?\n                        tst.DaylightName : tst.StandardName, tstTime);\n      Console.WriteLine(&quot;   UTC Time: {0}&quot;, TimeZoneInfo.ConvertTimeToUtc(tstTime, tst));\n   }\n}\n// The example displays output like the following when run on a system in the\n// U.S. Pacific Standard Time zone:\n//       Time in Pacific Standard Time zone: 12/6/2013 10:57:51 AM\n//          UTC Time: 12/6/2013 6:57:51 PM\n//       Time in Tokyo Standard Time zone: 12/7/2013 3:57:51 AM\n//          UTC Time: 12/6/2013 6:57:51 PM\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone2.Conversions#2\">Module Example\n   Public Sub Main()\n      &#39; Get time in local time zone \n      Dim thisTime As Date = Date.Now\n      Console.WriteLine(&quot;Time in {0} zone: {1}&quot;, IIf(TimeZoneInfo.Local.IsDaylightSavingTime(thisTime), \n                        TimeZoneInfo.Local.DaylightName, TimeZoneInfo.Local.StandardName), thisTime)\n      Console.WriteLine(&quot;   UTC Time: {0}&quot;, TimeZoneInfo.ConvertTimeToUtc(thisTime, TimeZoneInfo.Local))\n      &#39; Get Tokyo Standard Time zone\n      Dim tst As TimeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById(&quot;Tokyo Standard Time&quot;)\n      Dim tstTime As Date = TimeZoneInfo.ConvertTime(thisTime, TimeZoneInfo.Local, tst)      \n      Console.WriteLine(&quot;Time in {0} zone: {1}&quot;, IIf(tst.IsDaylightSavingTime(tstTime), \n                        tst.DaylightName, tst.StandardName), tstTime)\n      Console.WriteLine(&quot;   UTC Time: {0}&quot;, TimeZoneInfo.ConvertTimeToUtc(tstTime, tst))\n   End Sub\nEnd Module\n&#39; The example displays output like the following when run on a system in the U.S.\n&#39; Pacific Standard Time zone:\n&#39;    Time in Pacific Standard Time zone: 12/6/2013 10:57:51 AM\n&#39;       UTC Time: 12/6/2013 6:57:51 PM\n&#39;    Time in Tokyo Standard Time zone: 12/7/2013 3:57:51 AM\n&#39;       UTC Time: 12/6/2013 6:57:51 PM\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_FromSerializedString_System_String_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_FromSerializedString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromSerializedString(String)</div>        \r\n          </div>\r\n    \r\n            <p>Deserializes a string to re-create an original serialized <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static TimeZoneInfo FromSerializedString (string source);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>source</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string representation of the serialized <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a></div>\r\n                  </div>\r\n                  <p>The original serialized object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>source</code> parameter is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>source</code> parameter is a null string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>The source parameter cannot be deserialized back into a <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>There is an alternative to providing all the code required to create a time zone that is not found in the registry. You can define a custom time zone and either use the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ToSerializedString_\" data-linktype=\"relative-path\">ToSerializedString</a> method in a standalone executable or use an application&#39;s setup program to save the time zone as a string. The application can then retrieve this string from its storage location and instantiate it using the FromSerializedString method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example tries to retrieve the Antarctica/South Pole time zone from the local system. If it fails, the code tries to retrieve information about the time zone from a text file in the application directory. If this attempt fails, the code creates the time zone and writes information about the time zone to the text file.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZone2.CreateTimeZone#4\">   private TimeZoneInfo InitializeTimeZone()\n   {\n      TimeZoneInfo southPole = null;\n      // Determine if South Pole time zone is defined in system\n      try\n      {\n         southPole = TimeZoneInfo.FindSystemTimeZoneById(&quot;Antarctica/South Pole Standard Time&quot;);\n      }\n      // Time zone does not exist; create it, store it in a text file, and return it\n      catch\n      {\n         const string filename = @&quot;.&nbsp;&nbsp;&nbsp;&nbsp;imeZoneInfo.txt&quot;;\n         bool found = false;\n         \n         if (File.Exists(filename))\n         {\n            StreamReader reader = new StreamReader(filename);\n            string timeZoneInfo;\n            while (reader.Peek() &gt;= 0)\n            {\n               timeZoneInfo = reader.ReadLine();\n               if (timeZoneInfo.Contains(&quot;Antarctica/South Pole&quot;))\n               {\n                  southPole = TimeZoneInfo.FromSerializedString(timeZoneInfo);\n                  reader.Close();\n                  found = true;\n                  break;\n               }   \n            }\n         }\n         if (! found)\n         {               \n            // Define transition times to/from DST\n            TimeZoneInfo.TransitionTime startTransition = TimeZoneInfo.TransitionTime.CreateFloatingDateRule(new DateTime(1, 1, 1, 2, 0, 0), 10, 1, DayOfWeek.Sunday); \n            TimeZoneInfo.TransitionTime endTransition = TimeZoneInfo.TransitionTime.CreateFloatingDateRule(new DateTime(1, 1, 1, 2, 0, 0), 3, 3, DayOfWeek.Sunday);\n            // Define adjustment rule\n            TimeSpan delta = new TimeSpan(1, 0, 0);\n            TimeZoneInfo.AdjustmentRule adjustment = TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(new DateTime(1989, 10, 1), DateTime.MaxValue.Date, delta, startTransition, endTransition);\n            // Create array for adjustment rules\n            TimeZoneInfo.AdjustmentRule[] adjustments = {adjustment};\n            // Define other custom time zone arguments\n            string displayName = &quot;(GMT+12:00) Antarctica/South Pole&quot;;\n            string standardName = &quot;Antarctica/South Pole Standard Time&quot;;\n            string daylightName = &quot;Antarctica/South Pole Daylight Time&quot;;\n            TimeSpan offset = new TimeSpan(12, 0, 0);\n            southPole = TimeZoneInfo.CreateCustomTimeZone(standardName, offset, displayName, standardName, daylightName, adjustments);\n            // Write time zone to the file\n            StreamWriter writer = new StreamWriter(filename, true);\n            writer.WriteLine(southPole.ToSerializedString());\n            writer.Close();\n         }\n      }\n      return southPole;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone2.CreateTimeZone#4\">   Private Function InitializeTimeZone() As TimeZoneInfo\n      Dim southPole As TimeZoneInfo = Nothing\n      &#39; Determine if South Pole time zone is defined in system\n      Try\n         southPole = TimeZoneInfo.FindSystemTimeZoneById(&quot;Antarctica/South Pole Standard Time&quot;)\n      &#39; Time zone does not exist; create it, store it in a text file, and return it\n      Catch e As TimeZoneNotFoundException\n         Dim found As Boolean\n         Const filename As String = &quot;.&nbsp;&nbsp;&nbsp;&nbsp;imeZoneInfo.txt&quot;\n         \n         If File.Exists(filename) Then\n            Dim reader As StreamReader = New StreamReader(fileName)\n            Dim timeZoneString As String\n            Do While reader.Peek() &gt;= 0\n               timeZoneString = reader.ReadLine()\n               If timeZoneString.Contains(&quot;Antarctica/South Pole&quot;) Then\n                  southPole = TimeZoneInfo.FromSerializedString(timeZoneString)\n                  reader.Close()\n                  found = True\n                  Exit Do\n               End If   \n            Loop\n         End If\n         If Not found Then               \n            &#39; Define transition times to/from DST\n            Dim startTransition As TimeZoneInfo.TransitionTime = TimeZoneInfo.TransitionTime.CreateFloatingDateRule(#02:00:00#, 10, 1, DayOfWeek.Sunday) \n            Dim endTransition As TimeZoneInfo.TransitionTime = TimeZoneInfo.TransitionTime.CreateFloatingDateRule(#02:00:00#, 3, 3, DayOfWeek.Sunday)\n            &#39; Define adjustment rule\n            Dim delta As TimeSpan = New TimeSpan(1, 0, 0)\n            Dim adjustment As TimeZoneInfo.AdjustmentRule = TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(#10/01/1989#, Date.MaxValue.Date, delta, startTransition, endTransition)\n            &#39; Create array for adjustment rules\n            Dim adjustments() As TimeZoneInfo.AdjustmentRule = {adjustment}\n            &#39; Define other custom time zone arguments\n            Dim displayName As String = &quot;(GMT+12:00) Antarctica/South Pole&quot;\n            Dim standardName As String = &quot;Antarctica/South Pole Standard Time&quot;\n            Dim daylightName As String = &quot;Antarctica/South Pole Daylight Time&quot;\n            Dim offset As TimeSpan = New TimeSpan(12, 0, 0)\n            southPole = TimeZoneInfo.CreateCustomTimeZone(standardName, offset, displayName, standardName, daylightName, adjustments)\n            &#39; Write time zone to the file\n            Dim writer As StreamWriter = New StreamWriter(filename, True)\n            writer.WriteLine(southPole.ToSerializedString())\n            writer.Close()\n         End If\n      End Try\n      Return southPole\n   End Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_GetAdjustmentRules\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_GetAdjustmentRules_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetAdjustmentRules()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves an array of <a class=\"xref\" href=\"system.timezoneinfo.adjustmentrule\" data-linktype=\"relative-path\">TimeZoneInfo+AdjustmentRule</a> objects that apply to the current <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TimeZoneInfo.AdjustmentRule[] GetAdjustmentRules ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                  </div>\r\n                  <p>An array of objects for this time zone.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.outofmemoryexception\" data-linktype=\"relative-path\">OutOfMemoryException</a></div>\r\n                  </div>\r\n                  <p>The system does not have enough memory to make an in-memory copy of the adjustment rules.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GetAdjustmentRules method retrieves an array of <a class=\"xref\" href=\"system.timezoneinfo.adjustmentrule\" data-linktype=\"relative-path\">System.TimeZoneInfo+AdjustmentRule</a> objects. Each object in the array defines the effective start and end date of that time zone adjustment, as well as its delta (the exact amount by which the adjustment causes the time to change). In addition, two properties return <a class=\"xref\" href=\"system.timezoneinfo.transitiontime\" data-linktype=\"relative-path\">System.TimeZoneInfo+TransitionTime</a> objects that define when each annual transition to and from standard time occurs.  </p>\n<p> If a time zone has multiple adjustment rules, they are generally ordered from earliest (at index 0) to latest (at index <a class=\"xref\" href=\"system.array#System_Array_Length_\" data-linktype=\"relative-path\">Length</a> â€“ 1).  </p>\n<p> If a time zone has no adjustment rules, the GetAdjustmentRules method returns an empty array (an array whose <a class=\"xref\" href=\"system.array#System_Array_Length_\" data-linktype=\"relative-path\">Length</a> is zero).  </p>\n<p> Any modifications to the elements of the array returned by the GetAdjustmentRules method are not reflected in the adjustment rules that belong to a particular time zone. To modify a time zone&#39;s adjustment rules (such as to reflect its historical transition to and from daylight saving time) you must create a new time zone with the appropriate adjustment rules, rather than modify the existing one.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example retrieves all time zones that are defined on the local system and displays complete information about their adjustment rules to the console.  </p>\n<pre><code class=\"lang-vb\" name=\"System.TimeZone2.AdjustmentRule.Class#3\">   Private Enum WeekOfMonth As Integer\n      First = 1\n      Second = 2\n      Third = 3\n      Fourth = 4\n      Last = 5\n   End Enum\n   \n   Private Sub ShowStartAndEndDates()\n      &#39; Get all time zones from system\n      Dim timeZones As ReadOnlyCollection(Of TimeZoneInfo) = TimeZoneInfo.GetSystemTimeZones()\n      &#39; Get each time zone\n      For Each timeZone As TimeZoneInfo In timeZones\n         Dim adjustments() As TimeZoneInfo.AdjustmentRule = timeZone.GetAdjustmentRules()\n         &#39; Display message for time zones with no adjustments\n         If adjustments.Length = 0 Then\n            Console.WriteLine(&quot;{0} has no adjustment rules&quot;, timeZone.StandardName)\n         Else\n            &#39; Handle time zones with 1 or 2+ adjustments differently\n            Dim showCount As Boolean = False\n            Dim ctr As Integer = 0\n            Dim spacer As String = &quot;&quot;\n            \n            Console.WriteLine(&quot;{0} Adjustment rules&quot;, timeZone.StandardName)\n            If adjustments.Length &gt; 1 Then showCount = True : spacer = &quot;   &quot;  \n            &#39; Iterate adjustment rules\n            For Each adjustment As TimeZoneInfo.AdjustmentRule in adjustments\n               If showCount Then \n                  Console.WriteLine(&quot;   Adjustment rule #{0}&quot;, ctr+1)\n                  ctr += 1\n               End If\n               &#39; Display general adjustment information\n               Console.WriteLine(&quot;{0}   Start Date: {1:D}&quot;, spacer, adjustment.DateStart)\n               Console.WriteLine(&quot;{0}   End Date: {1:D}&quot;, spacer, adjustment.DateEnd)\n               Console.WriteLine(&quot;{0}   Time Change: {1}:{2:00} hours&quot;, spacer, _\n                                 adjustment.DaylightDelta.Hours, adjustment.DaylightDelta.Minutes)\n               &#39; Get transition start information\n               Dim transitionStart As TimeZoneInfo.TransitionTime = adjustment.DaylightTransitionStart\n               Console.Write(&quot;{0}   Annual Start: &quot;, spacer)\n               If transitionStart.IsFixedDateRule Then\n                  Console.WriteLine(&quot;On {0} {1} at {2:t}&quot;, _\n                                    MonthName(transitionStart.Month), _\n                                    transitionStart.Day, _\n                                    transitionStart.TimeOfDay)\n               Else\n                  Console.WriteLine(&quot;The {0} {1} of {2} at {3:t}&quot;, _\n                                    CType(transitionStart.Week, WeekOfMonth).ToString(), _\n                                    transitionStart.DayOfWeek.ToString(), _\n                                    MonthName(transitionStart.Month), _\n                                    transitionStart.TimeOfDay)\n               End If\n               &#39; Get transition end information\n               Dim transitionEnd As TimeZoneInfo.TransitionTime = adjustment.DaylightTransitionEnd\n                                 \n               Console.Write(&quot;{0}   Annual End: &quot;, spacer)\n               If transitionEnd.IsFixedDateRule Then\n                  Console.WriteLine(&quot;On {0} {1} at {2:t}&quot;, _\n                                    MonthName(transitionEnd.Month), _\n                                    transitionEnd.Day, _\n                                    transitionEnd.TimeOfDay)\n               Else\n                  Console.WriteLine(&quot;The {0} {1} of {2} at {3:t}&quot;, _\n                                    CType(transitionEnd.Week, WeekOfMonth).ToString(), _\n                                    transitionEnd.DayOfWeek.ToString(), _\n                                    MonthName(transitionEnd.Month), _\n                                    transitionEnd.TimeOfDay)\n               End If\n            Next\n         End If   \n         Console.WriteLine()\n      Next \n   End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.TimeZone2.AdjustmentRule.Class#3\">   private enum WeekOfMonth \n   {\n      First = 1,\n      Second = 2,\n      Third = 3,\n      Fourth = 4,\n      Last = 5,\n   }\n\n   private static void ShowStartAndEndDates()\n   {\n      // Get all time zones from system\n      ReadOnlyCollection&lt;TimeZoneInfo&gt; timeZones = TimeZoneInfo.GetSystemTimeZones();\n      string[] monthNames = CultureInfo.CurrentCulture.DateTimeFormat.MonthNames;\n      // Get each time zone\n      foreach (TimeZoneInfo timeZone in timeZones)\n      {\n         TimeZoneInfo.AdjustmentRule[] adjustments = timeZone.GetAdjustmentRules();\n         // Display message for time zones with no adjustments\n         if (adjustments.Length == 0)\n         {\n            Console.WriteLine(&quot;{0} has no adjustment rules&quot;, timeZone.StandardName);\n         }   \n         else\n         {\n            // Handle time zones with 1 or 2+ adjustments differently\n            bool showCount = false;\n            int ctr = 0;\n            string spacer = &quot;&quot;;\n            \n            Console.WriteLine(&quot;{0} Adjustment rules&quot;, timeZone.StandardName);\n            if (adjustments.Length &gt; 1)\n            {\n               showCount = true;\n               spacer = &quot;   &quot;;\n            }   \n            // Iterate adjustment rules\n            foreach (TimeZoneInfo.AdjustmentRule adjustment in adjustments)\n            {\n               if (showCount)\n               { \n                  Console.WriteLine(&quot;   Adjustment rule #{0}&quot;, ctr+1);\n                  ctr++;\n               }\n               // Display general adjustment information\n               Console.WriteLine(&quot;{0}   Start Date: {1:D}&quot;, spacer, adjustment.DateStart);\n               Console.WriteLine(&quot;{0}   End Date: {1:D}&quot;, spacer, adjustment.DateEnd);\n               Console.WriteLine(&quot;{0}   Time Change: {1}:{2:00} hours&quot;, spacer, \n                                 adjustment.DaylightDelta.Hours, adjustment.DaylightDelta.Minutes);\n               // Get transition start information\n               TimeZoneInfo.TransitionTime transitionStart = adjustment.DaylightTransitionStart;\n               Console.Write(&quot;{0}   Annual Start: &quot;, spacer);\n               if (transitionStart.IsFixedDateRule)\n               {\n                  Console.WriteLine(&quot;On {0} {1} at {2:t}&quot;, \n                                    monthNames[transitionStart.Month - 1], \n                                    transitionStart.Day, \n                                    transitionStart.TimeOfDay);\n               }\n               else\n               {\n                  Console.WriteLine(&quot;The {0} {1} of {2} at {3:t}&quot;, \n                                    ((WeekOfMonth)transitionStart.Week).ToString(), \n                                    transitionStart.DayOfWeek.ToString(), \n                                    monthNames[transitionStart.Month - 1], \n                                    transitionStart.TimeOfDay);\n               }\n               // Get transition end information\n               TimeZoneInfo.TransitionTime transitionEnd = adjustment.DaylightTransitionEnd;\n               Console.Write(&quot;{0}   Annual End: &quot;, spacer);\n               if (transitionEnd.IsFixedDateRule)\n               {\n                  Console.WriteLine(&quot;On {0} {1} at {2:t}&quot;, \n                                    monthNames[transitionEnd.Month - 1], \n                                    transitionEnd.Day, \n                                    transitionEnd.TimeOfDay);\n               }\n               else\n               {\n                  Console.WriteLine(&quot;The {0} {1} of {2} at {3:t}&quot;, \n                                    ((WeekOfMonth)transitionEnd.Week).ToString(), \n                                    transitionEnd.DayOfWeek.ToString(), \n                                    monthNames[transitionEnd.Month - 1], \n                                    transitionEnd.TimeOfDay);\n               }\n            }\n         }   \n         Console.WriteLine();\n      } \n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_GetAmbiguousTimeOffsets_System_DateTime_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_GetAmbiguousTimeOffsets_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetAmbiguousTimeOffsets(DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Returns information about the possible dates and times that an ambiguous date and time can be mapped to.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TimeSpan[] GetAmbiguousTimeOffsets (DateTime dateTime);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTime</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A date and time.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a>[]</div>\r\n                  </div>\r\n                  <p>An array of objects that represents possible Coordinated Universal Time (UTC) offsets that a particular date and time can be mapped to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>dateTime</code> is not an ambiguous time.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The precise behavior of this method depends on the relationship between the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property and the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object, as the following table shows.  </p>\n<table>\n<thead>\n<tr>\n<th>TimeZoneInfo object type</th>\n<th>Kind property value</th>\n<th>Behavior</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a></td>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a> or <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Returns ambiguous time offsets for <code>dateTime</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a></td>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Converts <code>dateTime</code> to the local time, and then returns ambiguous time offsets for that time.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Utc_\" data-linktype=\"relative-path\">Utc</a></td>\n<td>Any value.</td>\n<td>Throws an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a>.</td>\n</tr>\n<tr>\n<td>Any other time zone.</td>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a> or <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Converts <code>dateTime</code> to the specified time zone, and then determines whether that time is ambiguous.</td>\n</tr>\n<tr>\n<td>Any other time zone.</td>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Determines whether <code>dateTime</code> is ambiguous in the specified time zone.</td>\n</tr>\n</tbody>\n</table>\n<p> The order of <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> objects in the array returned by this method is undefined. However, you can determine which element represents an offset from the time zone&#39;s standard time by comparing its value with the time zone&#39;s <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_BaseUtcOffset_\" data-linktype=\"relative-path\">BaseUtcOffset</a> property. To map an ambiguous time to a time zone&#39;s standard time, see <a href=\"../Topic/How%20to:%20Resolve%20Ambiguous%20Times.md\" data-linktype=\"relative-path\">How to: Resolve Ambiguous Times</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example defines a method named <code>ShowPossibleUtcTimes</code> that uses the GetAmbiguousTimeOffsets method to map an ambiguous time to its possible corresponding Coordinated Universal Time (UTC) times.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZone2.GetAmbiguousTimeOffsets#1\">   private void ShowPossibleUtcTimes(DateTime ambiguousTime, TimeZoneInfo timeZone)\n   {\n      // Determine if time is ambiguous in target time zone\n      if (! timeZone.IsAmbiguousTime(ambiguousTime))\n      {\n         Console.WriteLine(&quot;{0} is not ambiguous in time zone {1}.&quot;, \n                           ambiguousTime, \n                           timeZone.DisplayName);\n      }\n      else\n      {\n         // Display time and its time zone (local, UTC, or indicated by timeZone argument)\n         string originalTimeZoneName; \n         if (ambiguousTime.Kind == DateTimeKind.Utc)\n            originalTimeZoneName = &quot;UTC&quot;;\n         else if (ambiguousTime.Kind == DateTimeKind.Local)\n            originalTimeZoneName = &quot;local time&quot;;\n         else\n            originalTimeZoneName = timeZone.DisplayName;\n\n         Console.WriteLine(&quot;{0} {1} maps to the following possible times:&quot;, \n                           ambiguousTime, originalTimeZoneName);\n         // Get ambiguous offsets \n         TimeSpan[] offsets = timeZone.GetAmbiguousTimeOffsets(ambiguousTime);\n         // Handle times not in time zone of timeZone argument\n         // Local time where timeZone is not local zone\n         if ((ambiguousTime.Kind == DateTimeKind.Local) &amp;&amp; ! timeZone.Equals(TimeZoneInfo.Local)) \n            ambiguousTime = TimeZoneInfo.ConvertTime(ambiguousTime, TimeZoneInfo.Local, timeZone);\n         // UTC time where timeZone is not UTC zone   \n         else if ((ambiguousTime.Kind == DateTimeKind.Utc) &amp;&amp; ! timeZone.Equals(TimeZoneInfo.Utc))\n            ambiguousTime = TimeZoneInfo.ConvertTime(ambiguousTime, TimeZoneInfo.Utc, timeZone);\n\n         // Display each offset and its mapping to UTC\n         foreach (TimeSpan offset in offsets)\n         {\n            if (offset.Equals(timeZone.BaseUtcOffset))\n               Console.WriteLine(&quot;If {0} is {1}, {2} UTC&quot;, ambiguousTime, timeZone.StandardName, ambiguousTime - offset);\n            else\n               Console.WriteLine(&quot;If {0} is {1}, {2} UTC&quot;, ambiguousTime, timeZone.DaylightName, ambiguousTime - offset);\n         }\n      }            \n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone2.GetAmbiguousTimeOffsets#1\">   Private Sub ShowPossibleUtcTimes(ambiguousTime As Date, timeZone As TimeZoneInfo)\n      &#39; Determine if time is ambiguous in target time zone\n      If Not timeZone.IsAmbiguousTime(ambiguousTime) Then\n         Console.WriteLine(&quot;{0} is not ambiguous in time zone {1}.&quot;, _\n                           ambiguousTime, _\n                           timeZone.DisplayName)\n      Else\n         &#39; Display time and its time zone (local, UTC, or indicated by timeZone argument)\n         Dim originalTimeZoneName As String \n         If ambiguousTime.Kind = DateTimeKind.Utc Then\n            originalTimeZoneName = &quot;UTC&quot;\n         ElseIf ambiguousTime.Kind = DateTimeKind.Local Then\n            originalTimeZoneName = &quot;local time&quot;\n         Else\n            originalTimeZoneName = timeZone.DisplayName\n         End If      \n         Console.WriteLine(&quot;{0} {1} maps to the following possible times:&quot;, _\n                           ambiguousTime, originalTimeZoneName)\n         &#39; Get ambiguous offsets \n         Dim offsets() As TimeSpan = timeZone.GetAmbiguousTimeOffsets(ambiguousTime)\n         &#39; Handle times not in time zone of timeZone argument\n         &#39; Local time where timeZone is not local zone\n         If (ambiguousTime.Kind = DateTimeKind.Local) And Not timeZone.Equals(TimeZoneInfo.Local) Then\n            ambiguousTime = TimeZoneInfo.ConvertTime(ambiguousTime, TimeZoneInfo.Local, timeZone)\n         &#39; UTC time where timeZone is not UTC zone   \n         ElseIf (ambiguousTime.Kind = DateTimeKind.Utc) And Not timeZone.Equals(TimeZoneInfo.Utc) Then\n            ambiguousTime = TimeZoneInfo.ConvertTime(ambiguousTime, TimeZoneInfo.Utc, timeZone)\n         End If       \n         &#39; Display each offset and its mapping to UTC\n         For Each offset As TimeSpan In offsets\n            If offset.Equals(timeZone.BaseUtcOffset) Then\n               Console.WriteLine(&quot;If {0} is {1}, {2} UTC&quot;, ambiguousTime, timeZone.StandardName, ambiguousTime - offset)\n            Else\n               Console.WriteLine(&quot;If {0} is {1}, {2} UTC&quot;, ambiguousTime, timeZone.DaylightName, ambiguousTime - offset)\n            End If   \n         Next\n      End If            \n   End Sub\n</code></pre><p> The method can then be called using code such as the following:  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZone2.GetAmbiguousTimeOffsets#2\">      Console.WriteLine();\n      ShowPossibleUtcTimes(new DateTime(2007, 11, 4, 1, 0, 0), \n                           TimeZoneInfo.FindSystemTimeZoneById(&quot;Central Standard Time&quot;));\n      Console.WriteLine();\n      ShowPossibleUtcTimes(new DateTime(2007, 11, 4, 01, 00, 00, DateTimeKind.Local), \n                           TimeZoneInfo.FindSystemTimeZoneById(&quot;Central Standard Time&quot;));\n      Console.WriteLine();\n      ShowPossibleUtcTimes(new DateTime(2007, 11, 4, 00, 00, 00, DateTimeKind.Local), \n                           TimeZoneInfo.FindSystemTimeZoneById(&quot;Central Standard Time&quot;));\n      Console.WriteLine();                     \n      ShowPossibleUtcTimes(new DateTime(2007, 11, 4, 01, 00, 00, DateTimeKind.Unspecified), \n                           TimeZoneInfo.FindSystemTimeZoneById(&quot;Central Standard Time&quot;));\n      Console.WriteLine();\n      ShowPossibleUtcTimes(new DateTime(2007, 11, 4, 07, 00, 00, DateTimeKind.Utc), \n                           TimeZoneInfo.FindSystemTimeZoneById(&quot;Central Standard Time&quot;));\n      // \n      // This example produces the following output if run in the Pacific time zone:\n      //\n      //    11/4/2007 1:00:00 AM (GMT-06:00) Central Time (US &amp; Canada) maps to the following possible times:\n      //    If 11/4/2007 1:00:00 AM is Central Standard Time, 11/4/2007 7:00:00 AM UTC\n      //    If 11/4/2007 1:00:00 AM is Central Daylight Time, 11/4/2007 6:00:00 AM UTC\n      //       \n      //    11/4/2007 1:00:00 AM Pacific Standard Time is not ambiguous in time zone (GMT-06:00) Central Time (US &amp; Canada).\n      //     \n      //    11/4/2007 12:00:00 AM local time maps to the following possible times:\n      //    If 11/4/2007 1:00:00 AM is Central Standard Time, 11/4/2007 7:00:00 AM UTC\n      //    If 11/4/2007 1:00:00 AM is Central Daylight Time, 11/4/2007 6:00:00 AM UTC\n      //    \n      //    11/4/2007 1:00:00 AM (GMT-06:00) Central Time (US &amp; Canada) maps to the following possible times:\n      //    If 11/4/2007 1:00:00 AM is Central Standard Time, 11/4/2007 7:00:00 AM UTC\n      //    If 11/4/2007 1:00:00 AM is Central Daylight Time, 11/4/2007 6:00:00 AM UTC\n      //       \n      //    11/4/2007 7:00:00 AM UTC maps to the following possible times:\n      //    If 11/4/2007 1:00:00 AM is Central Standard Time, 11/4/2007 7:00:00 AM UTC\n      //    If 11/4/2007 1:00:00 AM is Central Daylight Time, 11/4/2007 6:00:00 AM UTC\n      //\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone2.GetAmbiguousTimeOffsets#2\">      ShowPossibleUtcTimes(#11/4/2007 1:00:00#, TimeZoneInfo.FindSystemTimeZoneById(&quot;Central Standard Time&quot;))\n      Console.WriteLine()\n      ShowPossibleUtcTimes(New Date(2007, 11, 4, 01, 00, 00, DateTimeKind.Local), _\n                           TimeZoneInfo.FindSystemTimeZoneById(&quot;Central Standard Time&quot;))\n      Console.WriteLine()\n      ShowPossibleUtcTimes(New Date(2007, 11, 4, 00, 00, 00, DateTimeKind.Local), _\n                           TimeZoneInfo.FindSystemTimeZoneById(&quot;Central Standard Time&quot;))\n      Console.WriteLine()                     \n      ShowPossibleUtcTimes(New Date(2007, 11, 4, 01, 00, 00, DateTimeKind.Unspecified), _\n                           TimeZoneInfo.FindSystemTimeZoneById(&quot;Central Standard Time&quot;))\n      Console.WriteLine()\n      ShowPossibleUtcTimes(New Date(2007, 11, 4, 07, 00, 00, DateTimeKind.Utc), _\n                           TimeZoneInfo.FindSystemTimeZoneById(&quot;Central Standard Time&quot;))\n      &#39; \n      &#39; This example produces the following output if run in the Pacific time zone:\n      &#39;\n      &#39;    11/4/2007 1:00:00 AM (GMT-06:00) Central Time (US &amp; Canada) maps to the following possible times:\n      &#39;    If 11/4/2007 1:00:00 AM is Central Standard Time, 11/4/2007 7:00:00 AM UTC\n      &#39;    If 11/4/2007 1:00:00 AM is Central Daylight Time, 11/4/2007 6:00:00 AM UTC\n      &#39; \n      &#39;    11/4/2007 1:00:00 AM Pacific Standard Time is not ambiguous in time zone (GMT-06:00) Central Time (US &amp; Canada).\n      &#39; \n      &#39;    11/4/2007 12:00:00 AM local time maps to the following possible times:\n      &#39;    If 11/4/2007 1:00:00 AM is Central Standard Time, 11/4/2007 7:00:00 AM UTC\n      &#39;    If 11/4/2007 1:00:00 AM is Central Daylight Time, 11/4/2007 6:00:00 AM UTC\n      &#39; \n      &#39;    11/4/2007 1:00:00 AM (GMT-06:00) Central Time (US &amp; Canada) maps to the following possible times:\n      &#39;    If 11/4/2007 1:00:00 AM is Central Standard Time, 11/4/2007 7:00:00 AM UTC\n      &#39;    If 11/4/2007 1:00:00 AM is Central Daylight Time, 11/4/2007 6:00:00 AM UTC\n      &#39; \n      &#39;    11/4/2007 7:00:00 AM UTC maps to the following possible times:\n      &#39;    If 11/4/2007 1:00:00 AM is Central Standard Time, 11/4/2007 7:00:00 AM UTC\n      &#39;    If 11/4/2007 1:00:00 AM is Central Daylight Time, 11/4/2007 6:00:00 AM UTC\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_GetAmbiguousTimeOffsets_System_DateTimeOffset_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_GetAmbiguousTimeOffsets_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetAmbiguousTimeOffsets(DateTimeOffset)</div>        \r\n          </div>\r\n    \r\n            <p>Returns information about the possible dates and times that an ambiguous date and time can be mapped to.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TimeSpan[] GetAmbiguousTimeOffsets (DateTimeOffset dateTimeOffset);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTimeOffset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A date and time.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a>[]</div>\r\n                  </div>\r\n                  <p>An array of objects that represents possible Coordinated Universal Time (UTC) offsets that a particular date and time can be mapped to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>dateTimeOffset</code> is not an ambiguous time.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The precise behavior of this method depends on the relationship between the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property of the <code>dateTimeOffset</code> parameter and the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object. If the value of the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property corresponds to the current time zone&#39;s possible offsets from Coordinated Universal Time (UTC) for that date and time, the method returns the possible offsets. Otherwise, it converts <code>dateTimeOffset</code> to the time in the current time zone, and then returns the possible offsets of that date and time.  </p>\n<p> The order of <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> objects in the array returned by this method is undefined. However, you can determine which element represents an offset from the time zone&#39;s standard time by comparing its value with the time zone&#39;s <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_BaseUtcOffset_\" data-linktype=\"relative-path\">BaseUtcOffset</a> property. To map an ambiguous time to a time zone&#39;s standard time, see <a href=\"../Topic/How%20to:%20Resolve%20Ambiguous%20Times.md\" data-linktype=\"relative-path\">How to: Resolve Ambiguous Times</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_GetHashCode\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Serves as a hash function for hashing algorithms and data structures such as hash tables.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A 32-bit signed integer that serves as the hash code for this <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For additional detail about the GetHashCode method, see <a class=\"xref\" href=\"system.object#System_Object_GetHashCode_\" data-linktype=\"relative-path\">GetHashCode</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_GetSystemTimeZones\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_GetSystemTimeZones_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSystemTimeZones()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a sorted collection of all the time zones about which information is available on the local system.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Collections.ObjectModel.ReadOnlyCollection&lt;TimeZoneInfo&gt; GetSystemTimeZones ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a>&gt;</div>\r\n                  </div>\r\n                  <p>A read-only collection of <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> objects.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.outofmemoryexception\" data-linktype=\"relative-path\">OutOfMemoryException</a></div>\r\n                  </div>\r\n                  <p>There is insufficient memory to store all time zone information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The user does not have permission to read from the registry keys that contain time zone information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GetSystemTimeZones method retrieves all available time zone information from the subkeys of the registry&#39;s HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones key. If it is unable to successfully retrieve and parse values for particular string properties of individual <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> objects, this method sets their value to an empty string (&quot;&quot;).  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The GetSystemTimeZones method returns a collection of <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> objects only for time zones defined in the registry. It does not include time zones created using the overloads of the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_CreateCustomTimeZone_\" data-linktype=\"relative-path\">CreateCustomTimeZone</a> method. These are accessible only through the object reference returned by the time zone creation method.  </p>\n</div>\n<p> The collection returned by this method is sorted by UTC offset and, for time zones that have the same UTC offset, by the display name using the current culture. For information about the display name, see <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_DisplayName_\" data-linktype=\"relative-path\">DisplayName</a>.  </p>\n<p> The <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> object returned by this method supports the <a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable&lt;T&gt;</a> interface, which means that it can be iterated using the <code>foreach</code> (in C#) or <code>For Eachâ€¦Next</code> (in Visual Basic) statements. Each iteration of the loop provides the next <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object in the collection.  </p>\n<p> The collection of <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> objects represents time zones defined on the local computer; it does not necessarily provide complete information for all time zones during all time periods. If your application requires time zones not found on the local computer, you can create custom time zones using the overloads of the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_CreateCustomTimeZone_\" data-linktype=\"relative-path\">CreateCustomTimeZone</a> method. For more information, see <a href=\"../Topic/How%20to:%20Create%20Time%20Zones%20Without%20Adjustment%20Rules.md\" data-linktype=\"relative-path\">How to: Create Time Zones Without Adjustment Rules</a> and <a href=\"../Topic/How%20to:%20Create%20Time%20Zones%20with%20Adjustment%20Rules.md\" data-linktype=\"relative-path\">How to: Create Time Zones with Adjustment Rules</a>.  </p>\n<p> You can also determine whether an individual time zone is defined on the local computer by calling the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_FindSystemTimeZoneById_\" data-linktype=\"relative-path\">FindSystemTimeZoneById</a> method and providing the identifier of the time zone you want to retrieve as a parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example retrieves a collection of time zone objects that represent the time zones defined on a computer and writes information about them to a text file.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZone2.Class#6\">using System;\nusing System.Globalization;\nusing System.IO;\nusing System.Collections.ObjectModel;\n\npublic class Example\n{\n   public static void Main()\n   {\n      const string OUTPUTFILENAME = @&quot;C:&nbsp;&nbsp;&nbsp;&nbsp;emp&nbsp;&nbsp;&nbsp;&nbsp;imeZoneInfo.txt&quot;;\n   \n      DateTimeFormatInfo dateFormats = CultureInfo.CurrentCulture.DateTimeFormat;\n      ReadOnlyCollection&lt;TimeZoneInfo&gt; timeZones = TimeZoneInfo.GetSystemTimeZones(); \n      StreamWriter sw = new StreamWriter(OUTPUTFILENAME, false);\n   \n      foreach (TimeZoneInfo timeZone in timeZones)\n      {\n         bool hasDST = timeZone.SupportsDaylightSavingTime;\n         TimeSpan offsetFromUtc = timeZone.BaseUtcOffset;\n         TimeZoneInfo.AdjustmentRule[] adjustRules;\n         string offsetString;\n      \n         sw.WriteLine(&quot;ID: {0}&quot;, timeZone.Id);\n         sw.WriteLine(&quot;   Display Name: {0, 40}&quot;, timeZone.DisplayName);\n         sw.WriteLine(&quot;   Standard Name: {0, 39}&quot;, timeZone.StandardName);\n         sw.Write(&quot;   Daylight Name: {0, 39}&quot;, timeZone.DaylightName);\n         sw.Write(hasDST ? &quot;   ***Has &quot; : &quot;   ***Does Not Have &quot;);\n         sw.WriteLine(&quot;Daylight Saving Time***&quot;);\n         offsetString = String.Format(&quot;{0} hours, {1} minutes&quot;, offsetFromUtc.Hours, offsetFromUtc.Minutes);\n         sw.WriteLine(&quot;   Offset from UTC: {0, 40}&quot;, offsetString);\n         adjustRules = timeZone.GetAdjustmentRules();\n         sw.WriteLine(&quot;   Number of adjustment rules: {0, 26}&quot;, adjustRules.Length);  \n         if (adjustRules.Length &gt; 0)\n         {\n            sw.WriteLine(&quot;   Adjustment Rules:&quot;);\n            foreach (TimeZoneInfo.AdjustmentRule rule in adjustRules)\n            {\n               TimeZoneInfo.TransitionTime transTimeStart = rule.DaylightTransitionStart;\n               TimeZoneInfo.TransitionTime transTimeEnd = rule.DaylightTransitionEnd; \n            \n               sw.WriteLine(&quot;      From {0} to {1}&quot;, rule.DateStart, rule.DateEnd);\n               sw.WriteLine(&quot;      Delta: {0}&quot;, rule.DaylightDelta);\n               if (! transTimeStart.IsFixedDateRule)\n               {\n                  sw.WriteLine(&quot;      Begins at {0:t} on {1} of week {2} of {3}&quot;, transTimeStart.TimeOfDay, \n                                                                                transTimeStart.DayOfWeek,                                                                                 \n                                                                                transTimeStart.Week, \n                                                                                dateFormats.MonthNames[transTimeStart.Month - 1]);\n                  sw.WriteLine(&quot;      Ends at {0:t} on {1} of week {2} of {3}&quot;, transTimeEnd.TimeOfDay,\n                                                                                transTimeEnd.DayOfWeek, \n                                                                                transTimeEnd.Week,\n                                                                                dateFormats.MonthNames[transTimeEnd.Month - 1]);\n               }\n               else\n               {\n                  sw.WriteLine(&quot;      Begins at {0:t} on {1} {2}&quot;, transTimeStart.TimeOfDay, \n                                                                 transTimeStart.Day, \n                                                                 dateFormats.MonthNames[transTimeStart.Month - 1]);\n                  sw.WriteLine(&quot;      Ends at {0:t} on {1} {2}&quot;, transTimeEnd.TimeOfDay, \n                                                               transTimeEnd.Day, \n                                                               dateFormats.MonthNames[transTimeEnd.Month - 1]);\n               }\n            }\n         }            \n      }\n      sw.Close();\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone2.Class#6\">Imports System.Collections.ObjectModel\nImports System.Globalization\nImports System.IO\n\nModule Example\n   Public Sub Main()\n      Const OUTPUTFILENAME As String = &quot;C:&nbsp;&nbsp;&nbsp;&nbsp;emp&nbsp;&nbsp;&nbsp;&nbsp;imeZoneInfo.txt&quot;\n      \n      Dim timeZones As ReadOnlyCollection(Of TimeZoneInfo) = TimeZoneInfo.GetSystemTimeZones() \n      Dim sw As StreamWriter = New StreamWriter(OUTPUTFILENAME, False)\n      \n      For Each timeZone As TimeZoneInfo in timeZones\n         Dim hasDST As Boolean = timeZone.SupportsDaylightSavingTime\n         Dim offsetFromUtc As TimeSpan = timeZone.BaseUtcOffset\n         Dim adjustRules() As System.TimeZoneInfo.AdjustmentRule\n         Dim offsetString As String\n         \n         sw.WriteLine(&quot;ID: {0}&quot;, timeZone.Id)\n         sw.WriteLine(&quot;   Display Name: {0, 40}&quot;, timeZone.DisplayName)\n         sw.WriteLine(&quot;   Standard Name: {0, 39}&quot;, timeZone.StandardName)\n         sw.Write(&quot;   Daylight Name: {0, 39}&quot;, timeZone.DaylightName)\n         sw.Write(iif(hasDST, &quot;   ***Has &quot;, &quot;   ***Does Not Have &quot;))\n         sw.WriteLine(&quot;Daylight Saving Time***&quot;)\n         offsetString = String.Format(&quot;{0} hours, {1} minutes&quot;, offsetFromUtc.Hours, offsetFromUtc.Minutes)\n         sw.WriteLine(&quot;   Offset from UTC: {0, 40}&quot;, offsetString)\n         adjustRules = timeZone.GetAdjustmentRules()\n         sw.WriteLine(&quot;   Number of adjustment rules: {0, 26}&quot;, adjustRules.Length)  \n         If adjustRules.Length &gt; 0 Then\n            sw.WriteLine(&quot;   Adjustment Rules:&quot;)\n            For Each rule As TimeZoneInfo.AdjustmentRule In adjustRules\n               Dim transTimeStart As TimeZoneInfo.TransitionTime = rule.DaylightTransitionStart\n               Dim transTimeEnd As TimeZoneInfo.TransitionTime = rule.DaylightTransitionEnd \n               \n               sw.WriteLine(&quot;      From {0} to {1}&quot;, rule.DateStart, rule.DateEnd)\n               sw.WriteLine(&quot;      Delta: {0}&quot;, rule.DaylightDelta)\n               If Not transTimeStart.IsFixedDateRule\n                  sw.WriteLine(&quot;      Begins at {0:t} on {1} of week {2} of {3}&quot;, transTimeStart.TimeOfDay, _\n                                                                                transTimeStart.DayOfWeek, _\n                                                                                transTimeStart.Week, _\n                                                                                MonthName(transTimeStart.Month))\n                  sw.WriteLine(&quot;      Ends at {0:t} on {1} of week {2} of {3}&quot;, transTimeEnd.TimeOfDay, _\n                                                                                transTimeEnd.DayOfWeek, _\n                                                                                transTimeEnd.Week, _\n                                                                                MonthName(transTimeEnd.Month))\n               Else\n                  sw.WriteLine(&quot;      Begins at {0:t} on {1} {2}&quot;, transTimeStart.TimeOfDay, _\n                                                                 transTimeStart.Day, _\n                                                                 MonthName(transTimeStart.Month))\n                  sw.WriteLine(&quot;      Ends at {0:t} on {1} {2}&quot;, transTimeEnd.TimeOfDay, _\n                                                               transTimeEnd.Day, _\n                                                               MonthName(transTimeEnd.Month))\n               End If\n            Next\n         End If            \n      Next\n      sw.Close()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_GetUtcOffset_System_DateTime_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_GetUtcOffset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetUtcOffset(DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Calculates the offset or difference between the time in this time zone and Coordinated Universal Time (UTC) for a particular date and time.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TimeSpan GetUtcOffset (DateTime dateTime);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTime</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The date and time to determine the offset for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </div>\r\n                  <p>An object that indicates the time difference between the two time zones.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The returned time span includes any differences due to the application of adjustment rules to the current time zone. It differs from the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_BaseUtcOffset_\" data-linktype=\"relative-path\">BaseUtcOffset</a> property, which returns the difference between Coordinated Universal Time (UTC) and the time zone&#39;s standard time and, therefore, does not take adjustment rules into account.  </p>\n<p> If the <code>dateTime</code> parameter&#39;s <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property does not correspond to the time zone object, this method performs the necessary conversion before returning a result. For example, this can occur if the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a> but the time zone object is not the local time zone. If <code>dateTime</code> is ambiguous, or if the converted time is ambiguous, this method interprets the ambiguous time as a standard time. If <code>dateTime</code> is invalid, this method returns a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> object that reflects the difference between UTC and the time zone&#39;s standard time.  </p>\n<p> The GetUtcOffset method is similar in operation to the <a class=\"xref\" href=\"system.timezone#System_TimeZone_GetUtcOffset_\" data-linktype=\"relative-path\">GetUtcOffset</a> method of the <a class=\"xref\" href=\"system.timezone\" data-linktype=\"relative-path\">TimeZone</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example illustrates the use of the GetUtcOffset method with different time zones and with date values that have different <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property values.  </p>\n<pre><code class=\"lang-vb\" name=\"System.TimeZone2.GetUtcOffset#1\">Option Strict On\n\n&lt;Assembly: CLSCompliant(True)&gt;\nModule TimeOffsets\n   Public Sub Main()\n      Dim cst As TimeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById(&quot;Central Standard Time&quot;)\n\n      ShowOffset(#6/12/2006 11:00AM#, TimeZoneInfo.Local)\n      ShowOffset(#11/4/2007 1:00AM#, TimeZoneInfo.Local)\n      ShowOffset(#12/10/2006 3:00PM#, TimeZoneInfo.Local)\n      ShowOffset(#3/11/2007 2:30:00AM#, TimeZoneInfo.Local)\n      ShowOffset(Date.UtcNow, TimeZoneInfo.Local)\n      ShowOffset(#6/12/2006 11:00AM#, TimeZoneInfo.Utc)\n      ShowOffset(#11/4/2007 1:00AM#, TimeZoneInfo.Utc)\n      ShowOffset(#12/10/2006 3:00PM#, TimeZoneInfo.Utc)\n      ShowOffset(#3/11/2007 2:30:00AM#, TimeZoneInfo.Utc)\n      ShowOffset(Date.Now, TimeZoneInfo.Utc)\n      ShowOffset(#6/12/2006 11:00AM#, cst)\n      ShowOffset(#11/4/2007 1:00AM#, cst)\n      ShowOffset(#12/10/2006 3:00PM#, cst)\n      ShowOffset(#3/11/2007 2:30:00AM#, cst)\n      ShowOffset(New Date(2007, 11, 14, 00, 00, 00, DateTimeKind.Local), cst)\n   End Sub\n   \n   Private Sub ShowOffset(time As Date, timeZone As TimeZoneInfo)\n      Dim convertedTime As Date = time  \n      Dim offset As TimeSpan\n      \n      If time.Kind = DateTimeKind.Local And Not timeZone.Equals(TimeZoneInfo.Local) Then\n         convertedTime = TimeZoneInfo.ConvertTime(time, TimeZoneInfo.Local, timeZone)\n      ElseIf time.Kind = DateTimeKind.Utc And Not timeZone.Equals(TimeZoneInfo.Utc) Then\n         convertedTime = TimeZoneInfo.ConvertTime(time, TimeZoneInfo.Utc, timeZone)         \n      End If\n      offset = timeZone.GetUtcOffset(time)\n      If time = convertedTime Then\n         Console.WriteLine(&quot;{0} {1} &quot;, time, _\n                           IIf(timeZone.IsDaylightSavingTime(time), timeZone.DaylightName, timeZone.StandardName))\n         Console.WriteLine(&quot;   It differs from UTC by {0} hours, {1} minutes.&quot;, _\n                            offset.Hours, _\n                            offset.Minutes)\n      Else\n         Console.WriteLine(&quot;{0} {1} &quot;, time, _\n                           IIf(time.Kind = DateTimeKind.Utc, &quot;UTC&quot;, TimeZoneInfo.Local.Id))       \n         Console.WriteLine(&quot;   converts to {0} {1}.&quot;, _\n                           convertedTime, _\n                           timeZone.Id)\n         Console.WriteLine(&quot;   It differs from UTC by {0} hours, {1} minutes.&quot;, _\n                           offset.Hours, offset.Minutes)  \n       End If\n       Console.WriteLine()                                             \n   End Sub\nEnd Module\n&#39;\n&#39; The example produces the following output:\n&#39; \n&#39;       6/12/2006 11:00:00 AM Pacific Daylight Time \n&#39;          It differs from UTC by -7 hours, 0 minutes.\n&#39;       \n&#39;       11/4/2007 1:00:00 AM Pacific Standard Time \n&#39;          It differs from UTC by -8 hours, 0 minutes.\n&#39;       \n&#39;       12/10/2006 3:00:00 PM Pacific Standard Time \n&#39;          It differs from UTC by -8 hours, 0 minutes.\n&#39;       \n&#39;       3/11/2007 2:30:00 AM Pacific Standard Time \n&#39;          It differs from UTC by -8 hours, 0 minutes.\n&#39;       \n&#39;       2/2/2007 8:35:46 PM UTC \n&#39;          converts to 2/2/2007 12:35:46 PM Pacific Standard Time.\n&#39;          It differs from UTC by -8 hours, 0 minutes.\n&#39;       \n&#39;       6/12/2006 11:00:00 AM UTC \n&#39;          It differs from UTC by 0 hours, 0 minutes.\n&#39;       \n&#39;       11/4/2007 1:00:00 AM UTC \n&#39;          It differs from UTC by 0 hours, 0 minutes.\n&#39;       \n&#39;       12/10/2006 3:00:00 AM UTC \n&#39;          It differs from UTC by 0 hours, 0 minutes.\n&#39;       \n&#39;       3/11/2007 2:30:00 AM UTC \n&#39;          It differs from UTC by 0 hours, 0 minutes.\n&#39;       \n&#39;       2/2/2007 12:35:46 PM Pacific Standard Time \n&#39;          converts to 2/2/2007 8:35:46 PM UTC.\n&#39;          It differs from UTC by 0 hours, 0 minutes.\n&#39;       \n&#39;       6/12/2006 11:00:00 AM Central Daylight Time \n&#39;          It differs from UTC by -5 hours, 0 minutes.\n&#39;       \n&#39;       11/4/2007 1:00:00 AM Central Standard Time \n&#39;          It differs from UTC by -6 hours, 0 minutes.\n&#39;       \n&#39;       12/10/2006 3:00:00 PM Central Standard Time \n&#39;          It differs from UTC by -6 hours, 0 minutes.\n&#39;       \n&#39;       3/11/2007 2:30:00 AM Central Standard Time \n&#39;          It differs from UTC by -6 hours, 0 minutes.\n&#39;       \n&#39;       11/14/2007 12:00:00 AM Pacific Standard Time \n&#39;          converts to 11/14/2007 2:00:00 AM Central Standard Time.\n&#39;          It differs from UTC by -6 hours, 0 minutes.\n</code></pre><pre><code class=\"lang-cs\" name=\"System.TimeZone2.GetUtcOffset#1\">using System;\n\n[assembly:CLSCompliant(true)]\nnamespace TimeZoneInfoCode\n{\n   public class TimeOffsets\n   {\n      public static void Main()\n      {\n         TimeOffsets timeoff = new TimeOffsets();\n         TimeZoneInfo cst = TimeZoneInfo.FindSystemTimeZoneById(&quot;Central Standard Time&quot;);\n   \n         timeoff.ShowOffset(new DateTime(2006, 6, 12, 11, 0, 0), TimeZoneInfo.Local);\n         timeoff.ShowOffset(new DateTime(2007, 11, 4, 1, 0, 0), TimeZoneInfo.Local);\n         timeoff.ShowOffset(new DateTime(2006, 12, 10, 15, 0, 0), TimeZoneInfo.Local);\n         timeoff.ShowOffset(new DateTime(2007, 3, 11, 2, 30, 0), TimeZoneInfo.Local);\n         timeoff.ShowOffset(DateTime.UtcNow, TimeZoneInfo.Local);\n         timeoff.ShowOffset(new DateTime(2006, 6, 12, 11, 0, 0), TimeZoneInfo.Utc);\n         timeoff.ShowOffset(new DateTime(2007, 11, 4, 1, 0, 0), TimeZoneInfo.Utc);\n         timeoff.ShowOffset(new DateTime(2006, 12, 10, 3, 0, 0), TimeZoneInfo.Utc);\n         timeoff.ShowOffset(new DateTime(2007, 3, 11, 2, 30, 0), TimeZoneInfo.Utc);\n         timeoff.ShowOffset(DateTime.Now, TimeZoneInfo.Utc);\n         timeoff.ShowOffset(new DateTime(2006, 6, 12, 11, 0, 0), cst);\n         timeoff.ShowOffset(new DateTime(2007, 11, 4, 1, 0, 0), cst);\n         timeoff.ShowOffset(new DateTime(2006, 12, 10, 15, 0, 0), cst);\n         timeoff.ShowOffset(new DateTime(2007, 3, 11, 2, 30, 0, 0), cst);\n         timeoff.ShowOffset(new DateTime(2007, 11, 14, 00, 00, 00, DateTimeKind.Local), cst);\n      }\n      \n      private void ShowOffset(DateTime time, TimeZoneInfo timeZone)\n      {\n         DateTime convertedTime = time;  \n         TimeSpan offset;\n         \n         if (time.Kind == DateTimeKind.Local &amp;&amp; ! timeZone.Equals(TimeZoneInfo.Local)) \n            convertedTime = TimeZoneInfo.ConvertTime(time, TimeZoneInfo.Local, timeZone);\n         else if (time.Kind == DateTimeKind.Utc &amp;&amp; ! timeZone.Equals(TimeZoneInfo.Utc)) \n            convertedTime = TimeZoneInfo.ConvertTime(time, TimeZoneInfo.Utc, timeZone);         \n   \n         offset = timeZone.GetUtcOffset(time);\n         if (time == convertedTime)\n         {\n            Console.WriteLine(&quot;{0} {1} &quot;, time, \n                              timeZone.IsDaylightSavingTime(time) ? timeZone.DaylightName : timeZone.StandardName);\n            Console.WriteLine(&quot;   It differs from UTC by {0} hours, {1} minutes.&quot;, \n                               offset.Hours, \n                               offset.Minutes);\n         }\n         else\n         {\n            Console.WriteLine(&quot;{0} {1} &quot;, time, \n                              time.Kind == DateTimeKind.Utc ? &quot;UTC&quot; :  TimeZoneInfo.Local.Id);       \n            Console.WriteLine(&quot;   converts to {0} {1}.&quot;, \n                              convertedTime, \n                              timeZone.Id);\n            Console.WriteLine(&quot;   It differs from UTC by {0} hours, {1} minutes.&quot;, \n                              offset.Hours, offset.Minutes);  \n         }\n         Console.WriteLine();                                             \n      }\n   }\n}\n// The example produces the following output:\n//\n//       6/12/2006 11:00:00 AM Pacific Daylight Time \n//          It differs from UTC by -7 hours, 0 minutes.\n//       \n//       11/4/2007 1:00:00 AM Pacific Standard Time \n//          It differs from UTC by -8 hours, 0 minutes.\n//       \n//       12/10/2006 3:00:00 PM Pacific Standard Time \n//          It differs from UTC by -8 hours, 0 minutes.\n//       \n//       3/11/2007 2:30:00 AM Pacific Standard Time \n//          It differs from UTC by -8 hours, 0 minutes.\n//       \n//       2/2/2007 8:35:46 PM UTC \n//          converts to 2/2/2007 12:35:46 PM Pacific Standard Time.\n//          It differs from UTC by -8 hours, 0 minutes.\n//       \n//       6/12/2006 11:00:00 AM UTC \n//          It differs from UTC by 0 hours, 0 minutes.\n//       \n//       11/4/2007 1:00:00 AM UTC \n//          It differs from UTC by 0 hours, 0 minutes.\n//       \n//       12/10/2006 3:00:00 AM UTC \n//          It differs from UTC by 0 hours, 0 minutes.\n//       \n//       3/11/2007 2:30:00 AM UTC \n//          It differs from UTC by 0 hours, 0 minutes.\n//       \n//       2/2/2007 12:35:46 PM Pacific Standard Time \n//          converts to 2/2/2007 8:35:46 PM UTC.\n//          It differs from UTC by 0 hours, 0 minutes.\n//       \n//       6/12/2006 11:00:00 AM Central Daylight Time \n//          It differs from UTC by -5 hours, 0 minutes.\n//       \n//       11/4/2007 1:00:00 AM Central Standard Time \n//          It differs from UTC by -6 hours, 0 minutes.\n//       \n//       12/10/2006 3:00:00 PM Central Standard Time \n//          It differs from UTC by -6 hours, 0 minutes.\n//       \n//       3/11/2007 2:30:00 AM Central Standard Time \n//          It differs from UTC by -6 hours, 0 minutes.\n//       \n//       11/14/2007 12:00:00 AM Pacific Standard Time \n//          converts to 11/14/2007 2:00:00 AM Central Standard Time.\n//          It differs from UTC by -6 hours, 0 minutes.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_GetUtcOffset_System_DateTimeOffset_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_GetUtcOffset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetUtcOffset(DateTimeOffset)</div>        \r\n          </div>\r\n    \r\n            <p>Calculates the offset or difference between the time in this time zone and Coordinated Universal Time (UTC) for a particular date and time.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TimeSpan GetUtcOffset (DateTimeOffset dateTimeOffset);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTimeOffset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The date and time to determine the offset for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </div>\r\n                  <p>An object that indicates the time difference between Coordinated Universal Time (UTC) and the current time zone.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The returned time span includes any differences due to the application of adjustment rules to the current time zone. It differs from the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_BaseUtcOffset_\" data-linktype=\"relative-path\">BaseUtcOffset</a> property, which returns the difference between Coordinated Universal Time (UTC) and the time zone&#39;s standard time and, therefore, does not take adjustment rules into account.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_HasSameRules_System_TimeZoneInfo_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_HasSameRules_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HasSameRules(TimeZoneInfo)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the current object and another <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object have the same adjustment rules.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool HasSameRules (TimeZoneInfo other);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>other</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A second object to compare with the current <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the two time zones have identical adjustment rules and an identical base offset; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>other</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Like the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Equals_System_TimeZoneInfo_\" data-linktype=\"relative-path\">System.TimeZoneInfo.Equals(TimeZoneInfo)</a> method, the HasSameRules method indicates whether two time zones have the same base offset (as defined by the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_BaseUtcOffset_\" data-linktype=\"relative-path\">BaseUtcOffset</a> property) and the same adjustment rules. Unlike the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Equals_System_TimeZoneInfo_\" data-linktype=\"relative-path\">System.TimeZoneInfo.Equals(TimeZoneInfo)</a> method, HasSameRules does not compare time zone identifiers (as defined by the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Id_\" data-linktype=\"relative-path\">Id</a> property).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>Typically, a number of time zones defined in the registry have the same offset from Coordinated Universal Time (UTC) and the same adjustment rules. The following example displays a list of these time zones to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZone2.HasSameRules#1\">      ReadOnlyCollection&lt;TimeZoneInfo&gt; timeZones = TimeZoneInfo.GetSystemTimeZones();\n      TimeZoneInfo[] timeZoneArray = new TimeZoneInfo[timeZones.Count];\n      timeZones.CopyTo(timeZoneArray, 0);\n      // Iterate array from top to bottom\n      for (int ctr = timeZoneArray.GetUpperBound(0); ctr &gt;= 1; ctr--)\n      {\n         // Get next item from top\n         TimeZoneInfo thisTimeZone = timeZoneArray[ctr];\n         for (int compareCtr = 0; compareCtr &lt;= ctr - 1; compareCtr++)\n         {\n            // Determine if time zones have the same rules\n            if (thisTimeZone.HasSameRules(timeZoneArray[compareCtr]))\n            {\n               Console.WriteLine(&quot;{0} has the same rules as {1}&quot;, \n                                 thisTimeZone.StandardName,\n                                 timeZoneArray[compareCtr].StandardName);\n            }\n         }\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone2.HasSameRules#1\">      Dim timeZones As ReadOnlyCollection(Of TimeZoneInfo) = TimeZoneInfo.GetSystemTimeZones()\n      Dim timeZoneArray(timeZones.Count - 1) As TimeZoneInfo\n      timeZones.CopyTo(timeZoneArray, 0) \n      &#39;Dim arrayPtr As Integer = 1\n      &#39; Iterate array from top to bottom\n      For ctr As Integer = timeZoneArray.GetUpperBound(0) To 1 Step -1\n         &#39; Get next item from top\n         Dim thisTimeZone As TimeZoneInfo = timeZoneArray(ctr)\n         For compareCtr As Integer = 0 To ctr - 1\n            &#39; Determine if time zones have the same rules\n            If thisTimeZone.HasSameRules(timeZoneArray(compareCtr)) Then\n               Console.WriteLine(&quot;{0} has the same rules as {1}&quot;, _\n                                 thisTimeZone.StandardName, _\n                                 timeZoneArray(compareCtr).StandardName)\n            End If                     \n         Next      \n      Next\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_IsAmbiguousTime_System_DateTime_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_IsAmbiguousTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsAmbiguousTime(DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether a particular date and time in a particular time zone is ambiguous and can be mapped to two or more Coordinated Universal Time (UTC) times.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsAmbiguousTime (DateTime dateTime);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTime</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A date and time value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <code>dateTime</code> parameter is ambiguous; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.DateTime.Kind*</span> property of the <code>dateTime</code> value is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a> and <code>dateTime</code> is an invalid time.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An ambiguous time falls within a range of times for the current time zone. This means it can be either a standard time or a time that results from the application of an adjustment rule. Typically, ambiguous times result when the clock is set to return to standard time from daylight saving time. See the Example section for an illustration.  </p>\n<p> Coordinated Universal Time (UTC) has no ambiguous times; neither do time zones that do not support daylight saving time. Therefore, these time zones have no adjustment rules and calls to the IsAmbiguousTime method always return <code>false</code>.  </p>\n<p> For time zones that do observe daylight saving time, the precise behavior of this method depends on the relationship between the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property and the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object, as the following table shows.  </p>\n<table>\n<thead>\n<tr>\n<th>TimeZoneInfo object type</th>\n<th>Kind property value</th>\n<th>Behavior</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a></td>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a> or <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Determines whether the <code>dateTime</code> parameter is ambiguous.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a></td>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Converts <code>dateTime</code> to the local time and then determines whether that time is ambiguous.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Utc_\" data-linktype=\"relative-path\">Utc</a></td>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a> or <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Returns <code>false</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Utc_\" data-linktype=\"relative-path\">Utc</a></td>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>If <code>dateTime</code> is ambiguous, assumes it is a standard time, converts it to UTC, and returns <code>false</code>.</td>\n</tr>\n<tr>\n<td>Any other time zone.</td>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a> or <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Converts <code>dateTime</code> to the time in the specified time zone and then determines whether that time is ambiguous.</td>\n</tr>\n<tr>\n<td>Any other time zone.</td>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Determines whether <code>dateTime</code> is ambiguous.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the Pacific Time zone, daylight saving time ends at 2:00 A.M. on November 4, 2007. The following example passes the time at one-minute intervals from 12:59 A.M. on November 4, 2007, to 2:01 A.M. on November 4, 2007, to the IsAmbiguousTime method of a <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object that represents the Pacific Time zone. The console output indicates that all times from 1:00 A.M. on November 4, 2007, to 1:59 A.M. on November 4, 2007, are ambiguous.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZone2.Class#8\">         // Specify DateTimeKind in Date constructor\n         DateTime baseTime = new DateTime(2007, 11, 4, 0, 59, 00, DateTimeKind.Unspecified);\n         DateTime newTime;\n      \n         // Get Pacific Standard Time zone\n         TimeZoneInfo pstZone = TimeZoneInfo.FindSystemTimeZoneById(&quot;Pacific Standard Time&quot;);\n\n         // List possible ambiguous times for 63-minute interval, from 12:59 AM to 2:01 AM \n         for (int ctr = 0; ctr &lt; 63; ctr++)\n         {\n            // Because of assignment, newTime.Kind is also DateTimeKind.Unspecified\n            newTime = baseTime.AddMinutes(ctr);   \n            Console.WriteLine(&quot;{0} is ambiguous: {1}&quot;, newTime, pstZone.IsAmbiguousTime(newTime));\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone2.Class#8\">      &#39; Specify DateTimeKind in Date constructor\n      Dim baseTime As New Date(2007, 11, 4, 0, 59, 00, DateTimeKind.Unspecified)\n      Dim newTime As Date\n      \n      &#39; Get Pacific Standard Time zone\n      Dim pstZone As TimeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById(&quot;Pacific Standard Time&quot;)\n\n      &#39; List possible ambiguous times for 63-minute interval, from 12:59 AM to 2:01 AM \n      For ctr As Integer = 0 To 62\n         &#39; Because of assignment, newTime.Kind is also DateTimeKind.Unspecified\n         newTime = baseTime.AddMinutes(ctr)   \n         Console.WriteLine(&quot;{0} is ambiguous: {1}&quot;, newTime, pstZone.IsAmbiguousTime(newTime))\n      Next\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_IsAmbiguousTime_System_DateTimeOffset_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_IsAmbiguousTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsAmbiguousTime(DateTimeOffset)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether a particular date and time in a particular time zone is ambiguous and can be mapped to two or more Coordinated Universal Time (UTC) times.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsAmbiguousTime (DateTimeOffset dateTimeOffset);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTimeOffset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A date and time.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <code>dateTimeOffset</code> parameter is ambiguous in the current time zone; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An ambiguous time falls within a range of times for the current time zone. This means that it can be either a standard time or a time that results from the application of an adjustment rule. Typically, ambiguous times result when the clock is set to return to standard time from daylight saving time. Coordinated Universal Time (UTC) has no ambiguous times; neither do time zones that do not support daylight saving time.  </p>\n<p> The precise behavior of the method depends on the relationship between the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property of the <code>dateTimeOffset</code> parameter and the current time zone. If the value of the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property is a possible offset from the UTC of the current time zone, the method determines whether that date and time is ambiguous. Otherwise, it converts <code>dateTimeOffset</code> to the time in the current time zone, and then determines whether that date and time is ambiguous.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_IsDaylightSavingTime_System_DateTime_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_IsDaylightSavingTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsDaylightSavingTime(DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether a specified date and time falls in the range of daylight saving time for the time zone of the current <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsDaylightSavingTime (DateTime dateTime);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTime</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A date and time value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <code>dateTime</code> parameter is a daylight saving time; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.DateTime.Kind*</span> property of the <code>dateTime</code> value is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a> and <code>dateTime</code> is an invalid time.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The return value of IsDaylightSavingTime is affected by the relationship between the time zone represented by the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object and the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the <code>dateTime</code> parameter, as the following table shows.  </p>\n<table>\n<thead>\n<tr>\n<th>TimeZoneInfo object</th>\n<th>DateTime.Kind property</th>\n<th>Result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a></td>\n<td><code>DateTimeKind.Local</code></td>\n<td>Determines whether <code>dateTime</code> is daylight saving time.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a></td>\n<td><code>DateTimeKind.Utc</code></td>\n<td>Converts <code>dateTime</code> from Coordinated Universal Time (UTC) to local time and determines whether it is daylight saving time.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a></td>\n<td><code>DateTimeKind.Unspecified</code></td>\n<td>Assumes that <code>dateTime</code> represents local time and determines whether it is daylight saving time.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Utc_\" data-linktype=\"relative-path\">Utc</a></td>\n<td><code>DateTimeKind.Local</code>, <code>DateTimeKind.Unspecified</code>, or <code>DateTimeKind.Utc</code></td>\n<td>Returns <code>false</code> (UTC does not support daylight saving time).</td>\n</tr>\n<tr>\n<td>Any other <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a>object.</td>\n<td><code>DateTimeKind.Local</code></td>\n<td>Converts the local time to the equivalent time of the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object and then determines whether the latter is daylight saving time.</td>\n</tr>\n<tr>\n<td>Any other <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a>object.</td>\n<td><code>DateTimeKind.Utc</code></td>\n<td>Converts UTC to the equivalent time of the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object and then determines whether the latter is daylight saving time.</td>\n</tr>\n<tr>\n<td>Any other <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a>object.</td>\n<td><code>DateTimeKind.Unspecified</code></td>\n<td>Determines whether <code>dateTime</code> is daylight saving time.</td>\n</tr>\n</tbody>\n</table>\n<p> If the time zone represented by the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object does not support daylight saving time, the method always returns <code>false</code>. A number of time zones, including <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Utc_\" data-linktype=\"relative-path\">Utc</a>, do not observe daylight saving time.  To determine whether a time zone supports daylight saving time, retrieve the value of its <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_SupportsDaylightSavingTime_\" data-linktype=\"relative-path\">SupportsDaylightSavingTime</a> property.  </p>\n<p> If the <code>dateTime</code> parameter specifies an ambiguous time in the current object&#39;s time zone, the IsDaylightSavingTime method interprets <code>dateTime</code> as standard time and returns <code>false</code> if its <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a> or <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. If the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>, this method will select the correct ambiguous time and indicate whether it is a daylight saving time.  </p>\n<p> Because the IsDaylightSavingTime method can return <code>false</code> for a date and time that is ambiguous (that is, a date and time that can represent either a standard time or a daylight saving time in a particular time zone), the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_IsAmbiguousTime_System_DateTime_\" data-linktype=\"relative-path\">System.TimeZoneInfo.IsAmbiguousTime(DateTime)</a> method can be paired with the IsDaylightSavingTime method to determine whether a time may be a daylight saving time. Because an ambiguous time is one that can be both a daylight saving time and a standard time, the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_IsAmbiguousTime_System_DateTime_\" data-linktype=\"relative-path\">IsAmbiguousTime(DateTime)</a> method can be called first to determine whether a date and time may be a daylight saving time. If the method returns <code>false</code>, the IsDaylightSavingTime method can be called to determine whether the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value is a daylight saving time. The following example illustrates this technique.  </p>\n<pre><code class=\"lang-vb\" name=\"System.TimeZone2.IsDaylightSavingTime#2\">      Dim unclearDate As Date = #11/4/2007 1:30AM#\n      &#39; Test if time is ambiguous.\n      Console.WriteLine(&quot;In the {0}, {1} is {2}ambiguous.&quot;, _ \n                        TimeZoneInfo.Local.DisplayName, _\n                        unclearDate, _\n                        IIf(TimeZoneInfo.Local.IsAmbiguousTime(unclearDate), &quot;&quot;, &quot;not &quot;))\n      &#39; Test if time is DST.\n      Console.WriteLine(&quot;In the {0}, {1} is {2}daylight saving time.&quot;, _ \n                        TimeZoneInfo.Local.DisplayName, _\n                        unclearDate, _\n                        IIf(TimeZoneInfo.Local.IsDaylightSavingTime(unclearDate), &quot;&quot;, &quot;not &quot;))\n      Console.WriteLine()    \n      &#39; Report time as DST if it is either ambiguous or DST.\n      If TimeZoneInfo.Local.IsAmbiguousTime(unclearDate) OrElse _ \n         TimeZoneInfo.Local.IsDaylightSavingTime(unclearDate) Then\n          Console.WriteLine(&quot;{0} may be daylight saving time in {1}.&quot;, _ \n                            unclearDate, TimeZoneInfo.Local.DisplayName)                                           \n      End If\n      &#39; The example displays the following output:\n      &#39;    In the (GMT-08:00) Pacific Time (US &amp; Canada), 11/4/2007 1:30:00 AM is ambiguous.\n      &#39;    In the (GMT-08:00) Pacific Time (US &amp; Canada), 11/4/2007 1:30:00 AM is not daylight saving time.\n      &#39;    \n      &#39;    11/4/2007 1:30:00 AM may be daylight saving time in (GMT-08:00) Pacific Time (US &amp; Canada).\n</code></pre><pre><code class=\"lang-cs\" name=\"System.TimeZone2.IsDaylightSavingTime#2\">      DateTime unclearDate = new DateTime(2007, 11, 4, 1, 30, 0);\n      // Test if time is ambiguous.\n      Console.WriteLine(&quot;In the {0}, {1} is {2}ambiguous.&quot;, \n                        TimeZoneInfo.Local.DisplayName, \n                        unclearDate, \n                        TimeZoneInfo.Local.IsAmbiguousTime(unclearDate) ? &quot;&quot; : &quot;not &quot;);\n      // Test if time is DST.\n      Console.WriteLine(&quot;In the {0}, {1} is {2}daylight saving time.&quot;, \n                        TimeZoneInfo.Local.DisplayName, \n                        unclearDate, \n                        TimeZoneInfo.Local.IsDaylightSavingTime(unclearDate) ? &quot;&quot; : &quot;not &quot;);\n      Console.WriteLine();    \n      // Report time as DST if it is either ambiguous or DST.\n      if (TimeZoneInfo.Local.IsAmbiguousTime(unclearDate) || \n          TimeZoneInfo.Local.IsDaylightSavingTime(unclearDate))\n          Console.WriteLine(&quot;{0} may be daylight saving time in {1}.&quot;, \n                            unclearDate, TimeZoneInfo.Local.DisplayName);  \n      // The example displays the following output:\n      //    In the (GMT-08:00) Pacific Time (US &amp; Canada), 11/4/2007 1:30:00 AM is ambiguous.\n      //    In the (GMT-08:00) Pacific Time (US &amp; Canada), 11/4/2007 1:30:00 AM is not daylight saving time.\n      //    \n      //    11/4/2007 1:30:00 AM may be daylight saving time in (GMT-08:00) Pacific Time (US &amp; Canada).\n</code></pre><p> If the <code>dateTime</code> parameter specifies an invalid time, the method call throws an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> if the value of the <code>dateTime</code> parameter&#39;s <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>; otherwise, the method returns <code>false</code>.  </p>\n<p> Call the IsDaylightSavingTime method to determine whether to use a time zone&#39;s <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_StandardName_\" data-linktype=\"relative-path\">StandardName</a> value or its <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_DaylightName_\" data-linktype=\"relative-path\">DaylightName</a> value when displaying the time zone name. See the Example section for an illustration.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example defines a method named <code>DisplayDateWithTimeZoneName</code> that uses the IsDaylightSavingTime method to determine whether to display a time zone&#39;s standard time name or daylight saving time name.  </p>\n<pre><code class=\"lang-vb\" name=\"System.TimeZone2.IsDaylightSavingTime#1\">   Private Sub DisplayDateWithTimeZoneName(date1 As Date, timeZone As TimeZoneInfo)\n      Console.WriteLine(&quot;The time is {0:t} on {0:d} {1}&quot;, _\n                        date1, _\n                        IIf(timeZone.IsDaylightSavingTime(date1), _\n                            timezone.DaylightName, timezone.StandardName))   \n   End Sub\n   &#39; The example displays output similar to the following:\n   &#39;    The time is 1:00 AM on 4/2/2006 Pacific Standard Time   \n</code></pre><pre><code class=\"lang-cs\" name=\"System.TimeZone2.IsDaylightSavingTime#1\">   private void DisplayDateWithTimeZoneName(DateTime date1, TimeZoneInfo timeZone)\n   {\n      Console.WriteLine(&quot;The time is {0:t} on {0:d} {1}&quot;, \n                        date1, \n                        timeZone.IsDaylightSavingTime(date1) ?\n                            timeZone.DaylightName : timeZone.StandardName);   \n   }\n   // The example displays output similar to the following:\n   //    The time is 1:00 AM on 4/2/2006 Pacific Standard Time   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_IsDaylightSavingTime_System_DateTimeOffset_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_IsDaylightSavingTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsDaylightSavingTime(DateTimeOffset)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether a specified date and time falls in the range of daylight saving time for the time zone of the current <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsDaylightSavingTime (DateTimeOffset dateTimeOffset);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTimeOffset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A date and time value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <code>dateTimeOffset</code> parameter is a daylight saving time; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The return value of <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_IsDaylightSavingTime_\" data-linktype=\"relative-path\">IsDaylightSavingTime</a> is affected by the relationship between the time zone represented by the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object and the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property of the <code>dateTimeOffset</code> parameter. If <code>dateTimeOffset</code> does not correspond to the current time zone&#39;s offset from Coordinated Universal Time (UTC), the method converts that time to the time in the current time zone. It then determines whether that date and time is a daylight saving time.  </p>\n<p> If the time zone represented by the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object does not support daylight saving time, the method always returns <code>false</code>. To determine whether a time zone supports daylight saving time, retrieve the value of its <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_SupportsDaylightSavingTime_\" data-linktype=\"relative-path\">SupportsDaylightSavingTime</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_IsInvalidTime_System_DateTime_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_IsInvalidTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsInvalidTime(DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether a particular date and time is invalid.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsInvalidTime (DateTime dateTime);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTime</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A date and time value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>dateTime</code> is invalid; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An invalid time falls within a range of times for the current time zone that cannot be mapped to Coordinated Universal Time (UTC) due to the application of an adjustment rule. Typically, invalid times occur when the time moves ahead for daylight saving time. See the Example section for an illustration.  </p>\n<p> The value of the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the <code>dateTime</code> parameter affects whether <code>dateTime</code> represents an invalid time, as the following table shows.  </p>\n<table>\n<thead>\n<tr>\n<th>DateTime.Kind property</th>\n<th>TimeZoneInfo object (if applicable)</th>\n<th>Behavior</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a></td>\n<td>Determines whether the time is invalid.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td><a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Utc_\" data-linktype=\"relative-path\">Utc</a> or a non-local time zone.</td>\n<td>Converts <code>dateTime</code> to the time of the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object and returns <code>false</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Not applicable.</td>\n<td>Assumes <code>dateTime</code> is the time of the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object and determines whether it is invalid.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a></td>\n<td>Not applicable.</td>\n<td>Returns <code>false</code>.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the Pacific Time zone, daylight saving time begins at 2:00 A.M. on April 2, 2006. The following code passes the time at one-minute intervals from 1:59 A.M. on April 2, 2006, to 3:01 A.M. on April 2, 2006, to the IsInvalidTime method of a <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object that represents the Pacific Time zone. The console output indicates that all times from 2:00 A.M. on April 2, 2006, to 2:59 A.M. on April 2, 2006, are invalid.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZone2.Class#9\">         // Specify DateTimeKind in Date constructor\n         DateTime baseTime = new DateTime(2007, 3, 11, 1, 59, 0, DateTimeKind.Unspecified);\n         DateTime newTime;\n         \n         // Get Pacific Standard Time zone\n         TimeZoneInfo pstZone = TimeZoneInfo.FindSystemTimeZoneById(&quot;Pacific Standard Time&quot;);\n         \n         // List possible invalid times for a 63-minute interval, from 1:59 AM to 3:01 AM\n         for (int ctr = 0; ctr &lt; 63; ctr++)\n         {\n            // Because of assignment, newTime.Kind is also DateTimeKind.Unspecified\n            newTime = baseTime.AddMinutes(ctr);\n            Console.WriteLine(&quot;{0} is invalid: {1}&quot;, newTime, pstZone.IsInvalidTime(newTime));\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone2.Class#9\">      &#39; Specify DateTimeKind in Date constructor\n      Dim baseTime As New Date(2007, 3, 11, 1, 59, 0, DateTimeKind.Unspecified)\n      Dim newTime As Date\n      \n      &#39; Get Pacific Standard Time zone\n      Dim pstZone As TimeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById(&quot;Pacific Standard Time&quot;)\n      \n      &#39; List possible invalid times for 63-minute interval, from 1:59 AM to 3:01 AM\n      For ctr As Integer = 0 To 62\n         &#39; Because of assignment, newTime.Kind is also DateTimeKind.Unspecified\n         newTime = baseTime.AddMinutes(ctr)\n         Console.WriteLine(&quot;{0} is invalid: {1}&quot;, newTime, pstZone.IsInvalidTime(newTime))\n      Next\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_ToSerializedString\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_ToSerializedString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToSerializedString()</div>        \r\n          </div>\r\n    \r\n            <p>Converts the current <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object to a serialized string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ToSerializedString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that represents the current <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Applications that rely on time zones that are not typically defined in the registry of Windows systems can use the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_CreateCustomTimeZone_\" data-linktype=\"relative-path\">CreateCustomTimeZone</a> method to instantiate the necessary time zones as <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> objects. The application can then call the ToSerializedString method to convert the time zone object to a string.  </p>\n<p> The <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object should also be stored in a location where the application can retrieve it when needed. Possible locations include:  </p>\n<ul>\n<li><p>The registry.  </p>\n</li>\n<li><p>An application resource file.  </p>\n</li>\n<li><p>An external file, such as a text file.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example tries to retrieve the Antarctica/South Pole time zone from the local system. If it fails, the code tries to retrieve information about the time zone from a text file in the application directory. If this attempt fails, the code creates the time zone and writes information about it to the text file.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TimeZone2.CreateTimeZone#4\">   private TimeZoneInfo InitializeTimeZone()\n   {\n      TimeZoneInfo southPole = null;\n      // Determine if South Pole time zone is defined in system\n      try\n      {\n         southPole = TimeZoneInfo.FindSystemTimeZoneById(&quot;Antarctica/South Pole Standard Time&quot;);\n      }\n      // Time zone does not exist; create it, store it in a text file, and return it\n      catch\n      {\n         const string filename = @&quot;.&nbsp;&nbsp;&nbsp;&nbsp;imeZoneInfo.txt&quot;;\n         bool found = false;\n         \n         if (File.Exists(filename))\n         {\n            StreamReader reader = new StreamReader(filename);\n            string timeZoneInfo;\n            while (reader.Peek() &gt;= 0)\n            {\n               timeZoneInfo = reader.ReadLine();\n               if (timeZoneInfo.Contains(&quot;Antarctica/South Pole&quot;))\n               {\n                  southPole = TimeZoneInfo.FromSerializedString(timeZoneInfo);\n                  reader.Close();\n                  found = true;\n                  break;\n               }   \n            }\n         }\n         if (! found)\n         {               \n            // Define transition times to/from DST\n            TimeZoneInfo.TransitionTime startTransition = TimeZoneInfo.TransitionTime.CreateFloatingDateRule(new DateTime(1, 1, 1, 2, 0, 0), 10, 1, DayOfWeek.Sunday); \n            TimeZoneInfo.TransitionTime endTransition = TimeZoneInfo.TransitionTime.CreateFloatingDateRule(new DateTime(1, 1, 1, 2, 0, 0), 3, 3, DayOfWeek.Sunday);\n            // Define adjustment rule\n            TimeSpan delta = new TimeSpan(1, 0, 0);\n            TimeZoneInfo.AdjustmentRule adjustment = TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(new DateTime(1989, 10, 1), DateTime.MaxValue.Date, delta, startTransition, endTransition);\n            // Create array for adjustment rules\n            TimeZoneInfo.AdjustmentRule[] adjustments = {adjustment};\n            // Define other custom time zone arguments\n            string displayName = &quot;(GMT+12:00) Antarctica/South Pole&quot;;\n            string standardName = &quot;Antarctica/South Pole Standard Time&quot;;\n            string daylightName = &quot;Antarctica/South Pole Daylight Time&quot;;\n            TimeSpan offset = new TimeSpan(12, 0, 0);\n            southPole = TimeZoneInfo.CreateCustomTimeZone(standardName, offset, displayName, standardName, daylightName, adjustments);\n            // Write time zone to the file\n            StreamWriter writer = new StreamWriter(filename, true);\n            writer.WriteLine(southPole.ToSerializedString());\n            writer.Close();\n         }\n      }\n      return southPole;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone2.CreateTimeZone#4\">   Private Function InitializeTimeZone() As TimeZoneInfo\n      Dim southPole As TimeZoneInfo = Nothing\n      &#39; Determine if South Pole time zone is defined in system\n      Try\n         southPole = TimeZoneInfo.FindSystemTimeZoneById(&quot;Antarctica/South Pole Standard Time&quot;)\n      &#39; Time zone does not exist; create it, store it in a text file, and return it\n      Catch e As TimeZoneNotFoundException\n         Dim found As Boolean\n         Const filename As String = &quot;.&nbsp;&nbsp;&nbsp;&nbsp;imeZoneInfo.txt&quot;\n         \n         If File.Exists(filename) Then\n            Dim reader As StreamReader = New StreamReader(fileName)\n            Dim timeZoneString As String\n            Do While reader.Peek() &gt;= 0\n               timeZoneString = reader.ReadLine()\n               If timeZoneString.Contains(&quot;Antarctica/South Pole&quot;) Then\n                  southPole = TimeZoneInfo.FromSerializedString(timeZoneString)\n                  reader.Close()\n                  found = True\n                  Exit Do\n               End If   \n            Loop\n         End If\n         If Not found Then               \n            &#39; Define transition times to/from DST\n            Dim startTransition As TimeZoneInfo.TransitionTime = TimeZoneInfo.TransitionTime.CreateFloatingDateRule(#02:00:00#, 10, 1, DayOfWeek.Sunday) \n            Dim endTransition As TimeZoneInfo.TransitionTime = TimeZoneInfo.TransitionTime.CreateFloatingDateRule(#02:00:00#, 3, 3, DayOfWeek.Sunday)\n            &#39; Define adjustment rule\n            Dim delta As TimeSpan = New TimeSpan(1, 0, 0)\n            Dim adjustment As TimeZoneInfo.AdjustmentRule = TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(#10/01/1989#, Date.MaxValue.Date, delta, startTransition, endTransition)\n            &#39; Create array for adjustment rules\n            Dim adjustments() As TimeZoneInfo.AdjustmentRule = {adjustment}\n            &#39; Define other custom time zone arguments\n            Dim displayName As String = &quot;(GMT+12:00) Antarctica/South Pole&quot;\n            Dim standardName As String = &quot;Antarctica/South Pole Standard Time&quot;\n            Dim daylightName As String = &quot;Antarctica/South Pole Daylight Time&quot;\n            Dim offset As TimeSpan = New TimeSpan(12, 0, 0)\n            southPole = TimeZoneInfo.CreateCustomTimeZone(standardName, offset, displayName, standardName, daylightName, adjustments)\n            &#39; Write time zone to the file\n            Dim writer As StreamWriter = New StreamWriter(filename, True)\n            writer.WriteLine(southPole.ToSerializedString())\n            writer.Close()\n         End If\n      End Try\n      Return southPole\n   End Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_ToString\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the current <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object&#39;s display name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.TimeZoneInfo.DisplayName*</span> property of the current <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When assigning a collection that contains <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> objects to a list control such as the <a class=\"xref\" href=\"system.windows.forms.listbox\" data-linktype=\"relative-path\">ListBox</a> control, the control automatically calls the ToString method to extract a string that describes each object to be represented in the list. As a result, you do not need to store a meaningful description of the object as a string, and the user does not need to use that string to extract the object from the collection. See <a href=\"../Topic/How%20to:%20Enumerate%20Time%20Zones%20Present%20on%20a%20Computer.md\" data-linktype=\"relative-path\">How to: Enumerate Time Zones Present on a Computer</a> for more detail.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_System_Object_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDeserializationCallback.OnDeserialization(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Runs when the deserialization of an object has been completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IDeserializationCallback.OnDeserialization (object sender);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sender</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object that initiated the callback. The functionality for this parameter is not currently implemented.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object contains invalid or corrupted data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZoneInfo_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_TimeZoneInfo_System_Runtime_Serialization_ISerializable_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Populates a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object with the data needed to serialize the current <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>info</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object to populate with data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The destination for this serialization (see <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a>).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>info</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.TimeZoneInfo.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.TimeZoneInfo.yml\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.BaseUtcOffset\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.ClearCachedData\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.ConvertTime\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.ConvertTimeFromUtc\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.ConvertTimeToUtc\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.CreateCustomTimeZone\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.DaylightName\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.DisplayName\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.Equals\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.FindSystemTimeZoneById\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.FromSerializedString\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.GetAdjustmentRules\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.GetAmbiguousTimeOffsets\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.GetSystemTimeZones\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.GetUtcOffset\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.HasSameRules\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.Id\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.IsAmbiguousTime\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.IsDaylightSavingTime\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.IsInvalidTime\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.Local\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.StandardName\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.SupportsDaylightSavingTime\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.IDeserializationCallback.OnDeserialization\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.ISerializable.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.ToSerializedString\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.ToString\">\r\n<meta name=\"APIName\" content=\"System.TimeZoneInfo.Utc\">\r\n<meta name=\"APILocation\" content=\"System.Core.dll\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"cb44420d-8d4e-d5f8-ebb2-35f41bd63577\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System\\TimeZoneInfo.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents any time zone in the world.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.TimeZoneInfo\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.TimeZoneInfo.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.TimeZoneInfo.yml","open_to_public_contributors":true,"api_name":["System.TimeZoneInfo","System.TimeZoneInfo.BaseUtcOffset","System.TimeZoneInfo.ClearCachedData","System.TimeZoneInfo.ConvertTime","System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId","System.TimeZoneInfo.ConvertTimeFromUtc","System.TimeZoneInfo.ConvertTimeToUtc","System.TimeZoneInfo.CreateCustomTimeZone","System.TimeZoneInfo.DaylightName","System.TimeZoneInfo.DisplayName","System.TimeZoneInfo.Equals","System.TimeZoneInfo.FindSystemTimeZoneById","System.TimeZoneInfo.FromSerializedString","System.TimeZoneInfo.GetAdjustmentRules","System.TimeZoneInfo.GetAmbiguousTimeOffsets","System.TimeZoneInfo.GetHashCode","System.TimeZoneInfo.GetSystemTimeZones","System.TimeZoneInfo.GetUtcOffset","System.TimeZoneInfo.HasSameRules","System.TimeZoneInfo.Id","System.TimeZoneInfo.IsAmbiguousTime","System.TimeZoneInfo.IsDaylightSavingTime","System.TimeZoneInfo.IsInvalidTime","System.TimeZoneInfo.Local","System.TimeZoneInfo.StandardName","System.TimeZoneInfo.SupportsDaylightSavingTime","System.TimeZoneInfo.IDeserializationCallback.OnDeserialization","System.TimeZoneInfo.ISerializable.GetObjectData","System.TimeZoneInfo.ToSerializedString","System.TimeZoneInfo.ToString","System.TimeZoneInfo.Utc"],"api_location":["System.Core.dll","mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.TimeZoneInfo","System::TimeZoneInfo","System.TimeZoneInfo.BaseUtcOffset","System::TimeZoneInfo::BaseUtcOffset","System.TimeZoneInfo.ClearCachedData","System::TimeZoneInfo::ClearCachedData","System.TimeZoneInfo.ConvertTime","System::TimeZoneInfo::ConvertTime","System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId","System::TimeZoneInfo::ConvertTimeBySystemTimeZoneId","System.TimeZoneInfo.ConvertTimeFromUtc","System::TimeZoneInfo::ConvertTimeFromUtc","System.TimeZoneInfo.ConvertTimeToUtc","System::TimeZoneInfo::ConvertTimeToUtc","System.TimeZoneInfo.CreateCustomTimeZone","System::TimeZoneInfo::CreateCustomTimeZone","System.TimeZoneInfo.DaylightName","System::TimeZoneInfo::DaylightName","System.TimeZoneInfo.DisplayName","System::TimeZoneInfo::DisplayName","System.TimeZoneInfo.Equals","System::TimeZoneInfo::Equals","System.TimeZoneInfo.FindSystemTimeZoneById","System::TimeZoneInfo::FindSystemTimeZoneById","System.TimeZoneInfo.FromSerializedString","System::TimeZoneInfo::FromSerializedString","System.TimeZoneInfo.GetAdjustmentRules","System::TimeZoneInfo::GetAdjustmentRules","System.TimeZoneInfo.GetAmbiguousTimeOffsets","System::TimeZoneInfo::GetAmbiguousTimeOffsets","System.TimeZoneInfo.GetHashCode","System::TimeZoneInfo::GetHashCode","System.TimeZoneInfo.GetSystemTimeZones","System::TimeZoneInfo::GetSystemTimeZones","System.TimeZoneInfo.GetUtcOffset","System::TimeZoneInfo::GetUtcOffset","System.TimeZoneInfo.HasSameRules","System::TimeZoneInfo::HasSameRules","System.TimeZoneInfo.Id","System::TimeZoneInfo::Id","System.TimeZoneInfo.IsAmbiguousTime","System::TimeZoneInfo::IsAmbiguousTime","System.TimeZoneInfo.IsDaylightSavingTime","System::TimeZoneInfo::IsDaylightSavingTime","System.TimeZoneInfo.IsInvalidTime","System::TimeZoneInfo::IsInvalidTime","System.TimeZoneInfo.Local","System::TimeZoneInfo::Local","System.TimeZoneInfo.StandardName","System::TimeZoneInfo::StandardName","System.TimeZoneInfo.SupportsDaylightSavingTime","System::TimeZoneInfo::SupportsDaylightSavingTime","System.TimeZoneInfo.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization","System::TimeZoneInfo::System#Runtime#Serialization#IDeserializationCallback#OnDeserialization","System.TimeZoneInfo.System#Runtime#Serialization#ISerializable#GetObjectData","System::TimeZoneInfo::System#Runtime#Serialization#ISerializable#GetObjectData","System.TimeZoneInfo.ToSerializedString","System::TimeZoneInfo::ToSerializedString","System.TimeZoneInfo.ToString","System::TimeZoneInfo::ToString","System.TimeZoneInfo.Utc","System::TimeZoneInfo::Utc"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"cb44420d-8d4e-d5f8-ebb2-35f41bd63577","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System\\TimeZoneInfo.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System/TimeZoneInfo.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"TimeZoneInfo class | Microsoft Docs","_op_ogTitle":"TimeZoneInfo class","description":"Represents any time zone in the world.\n","toc_asset_id":"_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.TimeZoneInfo","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.timezoneinfo","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.timezoneinfo","fileRelativePath":"System.TimeZoneInfo.html"},"themesRelativePathToOutputRoot":"_themes/"}