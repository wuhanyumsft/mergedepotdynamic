{"content":"    \r\n    <h1 id=\"System_Windows_Forms_FontDialog\">\r\n      <span class=\"lang-csharp\">FontDialog</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Prompts the user to choose a font from among those installed on the local computer.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.DefaultEvent(&quot;Apply&quot;)]\n[System.ComponentModel.DefaultProperty(&quot;Font&quot;)]\npublic class FontDialog : System.Windows.Forms.CommonDialog</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l3\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.commondialog\" data-linktype=\"relative-path\">System.Windows.Forms.CommonDialog</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l4\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">FontDialog</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_HelpRequest\" data-linktype=\"relative-path\">HelpRequest</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_OnHelpRequest_System_EventArgs_\" data-linktype=\"relative-path\">OnHelpRequest(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_OwnerWndProc_System_IntPtr_System_Int32_System_IntPtr_System_IntPtr_\" data-linktype=\"relative-path\">OwnerWndProc(IntPtr,Int32,IntPtr,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_ShowDialog\" data-linktype=\"relative-path\">ShowDialog()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_ShowDialog_System_Windows_Forms_IWin32Window_\" data-linktype=\"relative-path\">ShowDialog(IWin32Window)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_Tag\" data-linktype=\"relative-path\">Tag</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The inherited member <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> must be invoked to create this specific common dialog box. <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_HookProc_\" data-linktype=\"relative-path\">HookProc</a> can be overridden to implement specific dialog box hook functionality.  </p>\n<p> When you create an instance of FontDialog, some of the read/write properties are set to initial values. For a list of these values, see the <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog__ctor_\" data-linktype=\"relative-path\">FontDialog</a> constructor.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FontDialog__ctor\" data-linktype=\"self-bookmark\">FontDialog()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.fontdialog\" data-linktype=\"relative-path\">FontDialog</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FontDialog_EventApply\" data-linktype=\"self-bookmark\">EventApply</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Owns the <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_Apply\" data-linktype=\"relative-path\">Apply</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FontDialog_AllowScriptChange\" data-linktype=\"self-bookmark\">AllowScriptChange</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the user can change the character set specified in the <strong>Script</strong> combo box to display a character set other than the one currently displayed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FontDialog_AllowSimulations\" data-linktype=\"self-bookmark\">AllowSimulations</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the dialog box allows graphics device interface (GDI) font simulations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FontDialog_AllowVectorFonts\" data-linktype=\"self-bookmark\">AllowVectorFonts</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the dialog box allows vector font selections.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FontDialog_AllowVerticalFonts\" data-linktype=\"self-bookmark\">AllowVerticalFonts</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the dialog box displays both vertical and horizontal fonts or only horizontal fonts.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FontDialog_Color\" data-linktype=\"self-bookmark\">Color</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the selected font color.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FontDialog_FixedPitchOnly\" data-linktype=\"self-bookmark\">FixedPitchOnly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the dialog box allows only the selection of fixed-pitch fonts.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FontDialog_Font\" data-linktype=\"self-bookmark\">Font</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the selected font.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FontDialog_FontMustExist\" data-linktype=\"self-bookmark\">FontMustExist</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the dialog box specifies an error condition if the user attempts to select a font or style that does not exist.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FontDialog_MaxSize\" data-linktype=\"self-bookmark\">MaxSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the maximum point size a user can select.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FontDialog_MinSize\" data-linktype=\"self-bookmark\">MinSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the minimum point size a user can select.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FontDialog_Options\" data-linktype=\"self-bookmark\">Options</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets values to initialize the <a class=\"xref\" href=\"system.windows.forms.fontdialog\" data-linktype=\"relative-path\">FontDialog</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FontDialog_ScriptsOnly\" data-linktype=\"self-bookmark\">ScriptsOnly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the dialog box allows selection of fonts for all non-OEM and Symbol character sets, as well as the ANSI character set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FontDialog_ShowApply\" data-linktype=\"self-bookmark\">ShowApply</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the dialog box contains an <strong>Apply</strong> button.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FontDialog_ShowColor\" data-linktype=\"self-bookmark\">ShowColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the dialog box displays the color choice.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FontDialog_ShowEffects\" data-linktype=\"self-bookmark\">ShowEffects</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the dialog box contains controls that allow the user to specify strikethrough, underline, and text color options.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FontDialog_ShowHelp\" data-linktype=\"self-bookmark\">ShowHelp</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the dialog box displays a Help button.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FontDialog_HookProc_System_IntPtr_System_Int32_System_IntPtr_System_IntPtr_\" data-linktype=\"self-bookmark\">HookProc(IntPtr,Int32,IntPtr,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies the common dialog box hook procedure that is overridden to add specific functionality to a common dialog box.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FontDialog_OnApply_System_EventArgs_\" data-linktype=\"self-bookmark\">OnApply(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_Apply\" data-linktype=\"relative-path\">Apply</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FontDialog_Reset\" data-linktype=\"self-bookmark\">Reset()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resets all dialog box options to their default values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FontDialog_RunDialog_System_IntPtr_\" data-linktype=\"self-bookmark\">RunDialog(IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies a file dialog box.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FontDialog_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a string that includes the name of the current font selected in the dialog box.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FontDialog_Apply\" data-linktype=\"self-bookmark\">Apply</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user clicks the <strong>Apply</strong> button in the font dialog box.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FontDialog__ctor\">\r\n    \r\n            <a id=\"System_Windows_Forms_FontDialog__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FontDialog()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.fontdialog\" data-linktype=\"relative-path\">FontDialog</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public FontDialog ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you create an instance of <a class=\"xref\" href=\"system.windows.forms.fontdialog\" data-linktype=\"relative-path\">FontDialog</a>, the following read/write properties are initialized.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Initial Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_AllowSimulations_\" data-linktype=\"relative-path\">AllowSimulations</a></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_AllowVectorFonts_\" data-linktype=\"relative-path\">AllowVectorFonts</a></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_AllowVerticalFonts_\" data-linktype=\"relative-path\">AllowVerticalFonts</a></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_AllowScriptChange_\" data-linktype=\"relative-path\">AllowScriptChange</a></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_Color_\" data-linktype=\"relative-path\">Color</a></td>\n<td><code>Color.Black</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_FixedPitchOnly_\" data-linktype=\"relative-path\">FixedPitchOnly</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_MaxSize_\" data-linktype=\"relative-path\">MaxSize</a></td>\n<td>0</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_MinSize_\" data-linktype=\"relative-path\">MinSize</a></td>\n<td>0</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_ScriptsOnly_\" data-linktype=\"relative-path\">ScriptsOnly</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_ShowApply_\" data-linktype=\"relative-path\">ShowApply</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_ShowColor_\" data-linktype=\"relative-path\">ShowColor</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_ShowEffects_\" data-linktype=\"relative-path\">ShowEffects</a></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_ShowHelp_\" data-linktype=\"relative-path\">ShowHelp</a></td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n<p> You can change the value for any of these properties through a separate call to the property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FontDialog_EventApply\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EventApply</div>        \r\n          </div>\r\n    \r\n            <p>Owns the <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_Apply\" data-linktype=\"relative-path\">Apply</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected static readonly object EventApply;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FontDialog_AllowScriptChange\">\r\n    \r\n            <a id=\"System_Windows_Forms_FontDialog_AllowScriptChange_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowScriptChange</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the user can change the character set specified in the <strong>Script</strong> combo box to display a character set other than the one currently displayed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AllowScriptChange { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the user can change the character set specified in the <strong>Script</strong> combo box; otherwise, <code>false</code>. The default value is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <strong>Script</strong> combo box found on the <strong>Font</strong> dialog box contains character sets associated with the selected font.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FontDialog_AllowSimulations\">\r\n    \r\n            <a id=\"System_Windows_Forms_FontDialog_AllowSimulations_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowSimulations</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the dialog box allows graphics device interface (GDI) font simulations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AllowSimulations { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if font simulations are allowed; otherwise, <code>false</code>. The default value is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FontDialog_AllowVectorFonts\">\r\n    \r\n            <a id=\"System_Windows_Forms_FontDialog_AllowVectorFonts_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowVectorFonts</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the dialog box allows vector font selections.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AllowVectorFonts { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if vector fonts are allowed; otherwise, <code>false</code>. The default value is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FontDialog_AllowVerticalFonts\">\r\n    \r\n            <a id=\"System_Windows_Forms_FontDialog_AllowVerticalFonts_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowVerticalFonts</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the dialog box displays both vertical and horizontal fonts or only horizontal fonts.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AllowVerticalFonts { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if both vertical and horizontal fonts are allowed; otherwise, <code>false</code>. The default value is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FontDialog_Color\">\r\n    \r\n            <a id=\"System_Windows_Forms_FontDialog_Color_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Color</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the selected font color.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Color Color { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>The color of the selected font. The default value is <span class=\"xref\">stem.Drawing.Color.Black*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> to display a <a class=\"xref\" href=\"system.windows.forms.fontdialog\" data-linktype=\"relative-path\">FontDialog</a>. This code requires that a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> has already been created with a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> and button placed on it. It also requires that the <code>fontDialog1</code> has been created. The <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> contains the size information but not the color information.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic FontDialog Example#1\">private void button1_Click(object sender, System.EventArgs e)\n {\n    fontDialog1.ShowColor = true;\n\n    fontDialog1.Font = textBox1.Font;\n    fontDialog1.Color = textBox1.ForeColor;\n\n    if(fontDialog1.ShowDialog() != DialogResult.Cancel )\n    {\n       textBox1.Font = fontDialog1.Font ;\n       textBox1.ForeColor = fontDialog1.Color;\n    }\n }\n \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FontDialog Example#1\">    Private Sub button1_Click(sender As Object, e As System.EventArgs)\n        fontDialog1.ShowColor = True\n\n        fontDialog1.Font = textBox1.Font\n        fontDialog1.Color = textBox1.ForeColor\n\n        If fontDialog1.ShowDialog() &lt;&gt; DialogResult.Cancel Then\n            textBox1.Font = fontDialog1.Font\n            textBox1.ForeColor = fontDialog1.Color\n        End If\n    End Sub &#39;button1_Click\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic FontDialog Example#1\">private:\n   void button1_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      fontDialog1-&gt;ShowColor = true;\n\n      fontDialog1-&gt;Font = textBox1-&gt;Font;\n      fontDialog1-&gt;Color = textBox1-&gt;ForeColor;\n\n      if ( fontDialog1-&gt;ShowDialog() != ::DialogResult::Cancel )\n      {\n         textBox1-&gt;Font = fontDialog1-&gt;Font;\n         textBox1-&gt;ForeColor = fontDialog1-&gt;Color;\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FontDialog_FixedPitchOnly\">\r\n    \r\n            <a id=\"System_Windows_Forms_FontDialog_FixedPitchOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FixedPitchOnly</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the dialog box allows only the selection of fixed-pitch fonts.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool FixedPitchOnly { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if only fixed-pitch fonts can be selected; otherwise, <code>false</code>. The default value is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FontDialog_Font\">\r\n    \r\n            <a id=\"System_Windows_Forms_FontDialog_Font_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Font</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the selected font.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Font Font { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></div>\r\n                  </div>\r\n                  <p>The selected font.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> to display a <a class=\"xref\" href=\"system.windows.forms.fontdialog\" data-linktype=\"relative-path\">FontDialog</a>. This code requires that a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> has already been created with a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> and button placed on it. It also requires that the <code>fontDialog1</code> has been created. The <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> contains the size information but not the color information.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic FontDialog Example#1\">private void button1_Click(object sender, System.EventArgs e)\n {\n    fontDialog1.ShowColor = true;\n\n    fontDialog1.Font = textBox1.Font;\n    fontDialog1.Color = textBox1.ForeColor;\n\n    if(fontDialog1.ShowDialog() != DialogResult.Cancel )\n    {\n       textBox1.Font = fontDialog1.Font ;\n       textBox1.ForeColor = fontDialog1.Color;\n    }\n }\n \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FontDialog Example#1\">    Private Sub button1_Click(sender As Object, e As System.EventArgs)\n        fontDialog1.ShowColor = True\n\n        fontDialog1.Font = textBox1.Font\n        fontDialog1.Color = textBox1.ForeColor\n\n        If fontDialog1.ShowDialog() &lt;&gt; DialogResult.Cancel Then\n            textBox1.Font = fontDialog1.Font\n            textBox1.ForeColor = fontDialog1.Color\n        End If\n    End Sub &#39;button1_Click\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic FontDialog Example#1\">private:\n   void button1_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      fontDialog1-&gt;ShowColor = true;\n\n      fontDialog1-&gt;Font = textBox1-&gt;Font;\n      fontDialog1-&gt;Color = textBox1-&gt;ForeColor;\n\n      if ( fontDialog1-&gt;ShowDialog() != ::DialogResult::Cancel )\n      {\n         textBox1-&gt;Font = fontDialog1-&gt;Font;\n         textBox1-&gt;ForeColor = fontDialog1-&gt;Color;\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FontDialog_FontMustExist\">\r\n    \r\n            <a id=\"System_Windows_Forms_FontDialog_FontMustExist_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FontMustExist</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the dialog box specifies an error condition if the user attempts to select a font or style that does not exist.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool FontMustExist { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the dialog box specifies an error condition when the user tries to select a font or style that does not exist; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates using the <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_MinSize_\" data-linktype=\"relative-path\">MinSize</a>, <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_MaxSize_\" data-linktype=\"relative-path\">MaxSize</a>, <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_ShowEffects_\" data-linktype=\"relative-path\">ShowEffects</a> and FontMustExist members and handling the <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_Apply\" data-linktype=\"relative-path\">Apply</a> event. To run this example paste the following code in a form containing a <a class=\"xref\" href=\"system.windows.forms.fontdialog\" data-linktype=\"relative-path\">FontDialog</a> named <code>FontDialog1</code> and a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> named <code>Button1</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.FontDialogMustExist#1\">\tprivate void Button1_Click(System.Object sender, System.EventArgs e)\n\t{\n\t\t// Set FontMustExist to true, which causes message box error\n\t\t// if the user enters a font that does not exist. \n\t\tFontDialog1.FontMustExist = true;\n\t\t\n\t\t// Associate the method handling the Apply event with the event.\n\t\tFontDialog1.Apply += new System.EventHandler(FontDialog1_Apply);\n\n\t\t// Set a minimum and maximum size to be\n\t\t// shown in the FontDialog.\n\t\tFontDialog1.MaxSize = 32;\n\t\tFontDialog1.MinSize = 18;\n\n\t\t// Show the Apply button in the dialog.\n\t\tFontDialog1.ShowApply = true;\n\n\t\t// Do not show effects such as Underline\n\t\t// and Bold.\n\t\tFontDialog1.ShowEffects = false;\n\t\t\n\t\t// Save the existing font.\n\t\tSystem.Drawing.Font oldFont = this.Font;\n\n\t\t//Show the dialog, and get the result\n\t\tDialogResult result = FontDialog1.ShowDialog();\n \n\t\t// If the OK button in the Font dialog box is clicked, \n\t\t// set all the controls&#39; fonts to the chosen font by calling\n\t\t// the FontDialog1_Apply method.\n\t\tif (result == DialogResult.OK)\n\t\t{\n\t\t\tFontDialog1_Apply(this.Button1, new System.EventArgs());\n\t\t}\n\t\t\t// If Cancel is clicked, set the font back to\n\t\t\t// the original font.\n\t\telse if (result == DialogResult.Cancel)\n\t\t{\n\t\t\tthis.Font = oldFont;\n\t\t\tforeach ( Control containedControl in this.Controls)\n\t\t\t{\n\t\t\t\tcontainedControl.Font = oldFont;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Handle the Apply event by setting all controls&#39; fonts to \n\t// the chosen font. \n\tprivate void FontDialog1_Apply(object sender, System.EventArgs e)\n\t{\n\n\t\tthis.Font = FontDialog1.Font;\n\t\tforeach ( Control containedControl in this.Controls )\n\t\t{\n\t\t\tcontainedControl.Font = FontDialog1.Font;\n\t\t}\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.FontDialogMustExist#1\">    Private Sub Button1_Click(ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles Button1.Click\n\n        &#39; Set FontMustExist to true, which causes message box error\n        &#39; if the user enters a font that does not exist. \n        FontDialog1.FontMustExist = True\n\n        &#39; Set a minimum and maximum size to be\n        &#39; shown in the FontDialog.\n        FontDialog1.MaxSize = 32\n        FontDialog1.MinSize = 18\n\n        &#39; Show the Apply button in the dialog.\n        FontDialog1.ShowApply = True\n\n        &#39; Do not show effects such as Underline\n        &#39; and Bold.\n        FontDialog1.ShowEffects = False\n\n        &#39; Save the existing font.\n        Dim oldFont As System.Drawing.Font = Me.Font\n\n        &#39; Show the dialog and save the result.\n        Dim result As DialogResult = FontDialog1.ShowDialog()\n\n        &#39; If The OK button in the Font dialog box is clicked, \n        &#39; set all the controls&#39; fonts to the chosen font by\n        &#39; calling the FontDialog1_Apply method.\n        If result = DialogResult.OK Then\n            FontDialog1_Apply(Me.Button1, New System.EventArgs)\n\n            &#39; If the Cancel button is clicked, set the controls&#39;\n            &#39; fonts back to the original font.\n        ElseIf (result = DialogResult.Cancel) Then\n            Dim containedControl As Control\n            For Each containedControl In Me.Controls\n                containedControl.Font = oldFont\n            Next\n\n        End If\n    End Sub\n\n    &#39; Handle the Apply event by setting all controls&#39; fonts to \n    &#39; the chosen font. \n    Private Sub FontDialog1_Apply(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles FontDialog1.Apply\n\n        Me.Font = FontDialog1.Font\n        Dim containedControl As Control\n        For Each containedControl In Me.Controls\n            containedControl.Font = FontDialog1.Font\n        Next\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.FontDialogMustExist#1\">   void Button1_Click( System::Object^ sender, System::EventArgs^ e )\n   {\n      // Set FontMustExist to true, which causes message box error\n      // if the user enters a font that does not exist. \n      FontDialog1-&gt;FontMustExist = true;\n      \n      // Associate the method handling the Apply event with the event.\n      FontDialog1-&gt;Apply += gcnew System::EventHandler( this, &amp;Form1::FontDialog1_Apply );\n      \n      // Set a minimum and maximum size to be\n      // shown in the FontDialog.\n      FontDialog1-&gt;MaxSize = 32;\n      FontDialog1-&gt;MinSize = 18;\n      \n      // Show the Apply button in the dialog.\n      FontDialog1-&gt;ShowApply = true;\n      \n      // Do not show effects such as Underline\n      // and Bold.\n      FontDialog1-&gt;ShowEffects = false;\n      \n      // Save the existing font.\n      System::Drawing::Font^ oldFont = this-&gt;Font;\n      \n      //Show the dialog, and get the result\n      System::Windows::Forms::DialogResult result = FontDialog1-&gt;ShowDialog();\n      \n      // If the OK button in the Font dialog box is clicked, \n      // set all the controls&#39; fonts to the chosen font by calling\n      // the FontDialog1_Apply method.\n      if ( result == ::DialogResult::OK )\n      {\n         FontDialog1_Apply( this-&gt;Button1, gcnew System::EventArgs );\n      }\n      // If Cancel is clicked, set the font back to\n      // the original font.\n      else\n      \n      // If Cancel is clicked, set the font back to\n      // the original font.\n      if ( result == ::DialogResult::Cancel )\n      {\n         this-&gt;Font = oldFont;\n         System::Collections::IEnumerator^ myEnum = this-&gt;Controls-&gt;GetEnumerator();\n         while ( myEnum-&gt;MoveNext() )\n         {\n            Control^ containedControl = safe_cast&lt;Control^&gt;(myEnum-&gt;Current);\n            containedControl-&gt;Font = oldFont;\n         }\n      }\n   }\n\n\n   // Handle the Apply event by setting all controls&#39; fonts to \n   // the chosen font. \n   void FontDialog1_Apply( Object^ sender, System::EventArgs^ e )\n   {\n      this-&gt;Font = FontDialog1-&gt;Font;\n      System::Collections::IEnumerator^ myEnum1 = this-&gt;Controls-&gt;GetEnumerator();\n      while ( myEnum1-&gt;MoveNext() )\n      {\n         Control^ containedControl = safe_cast&lt;Control^&gt;(myEnum1-&gt;Current);\n         containedControl-&gt;Font = FontDialog1-&gt;Font;\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FontDialog_MaxSize\">\r\n    \r\n            <a id=\"System_Windows_Forms_FontDialog_MaxSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MaxSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the maximum point size a user can select.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int MaxSize { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The maximum point size a user can select. The default is 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In order for the maximum and minimum size settings to take effect, MaxSize must be greater than <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_MinSize_\" data-linktype=\"relative-path\">MinSize</a>, and both must be greater than 0.  </p>\n<p> Attempts to set this property to values less than 0 will result in a value of 0 being used. If you set MaxSize to a value less than <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_MinSize_\" data-linktype=\"relative-path\">MinSize</a>, <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_MinSize_\" data-linktype=\"relative-path\">MinSize</a> is set to MaxSize. The effect of setting <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_MinSize_\" data-linktype=\"relative-path\">MinSize</a> and MaxSize to the same values is to limit the size selection to a single font size.  </p>\n<p> When the point size is 0, there are no font size limits.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates using the <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_MinSize_\" data-linktype=\"relative-path\">MinSize</a>, MaxSize, <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_ShowEffects_\" data-linktype=\"relative-path\">ShowEffects</a> and <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_FontMustExist_\" data-linktype=\"relative-path\">FontMustExist</a> members and handling the <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_Apply\" data-linktype=\"relative-path\">Apply</a> event. To run this example paste the following code in a form containing a <a class=\"xref\" href=\"system.windows.forms.fontdialog\" data-linktype=\"relative-path\">FontDialog</a> named <code>FontDialog1</code> and a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> named <code>Button1</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.FontDialogMustExist#1\">\tprivate void Button1_Click(System.Object sender, System.EventArgs e)\n\t{\n\t\t// Set FontMustExist to true, which causes message box error\n\t\t// if the user enters a font that does not exist. \n\t\tFontDialog1.FontMustExist = true;\n\t\t\n\t\t// Associate the method handling the Apply event with the event.\n\t\tFontDialog1.Apply += new System.EventHandler(FontDialog1_Apply);\n\n\t\t// Set a minimum and maximum size to be\n\t\t// shown in the FontDialog.\n\t\tFontDialog1.MaxSize = 32;\n\t\tFontDialog1.MinSize = 18;\n\n\t\t// Show the Apply button in the dialog.\n\t\tFontDialog1.ShowApply = true;\n\n\t\t// Do not show effects such as Underline\n\t\t// and Bold.\n\t\tFontDialog1.ShowEffects = false;\n\t\t\n\t\t// Save the existing font.\n\t\tSystem.Drawing.Font oldFont = this.Font;\n\n\t\t//Show the dialog, and get the result\n\t\tDialogResult result = FontDialog1.ShowDialog();\n \n\t\t// If the OK button in the Font dialog box is clicked, \n\t\t// set all the controls&#39; fonts to the chosen font by calling\n\t\t// the FontDialog1_Apply method.\n\t\tif (result == DialogResult.OK)\n\t\t{\n\t\t\tFontDialog1_Apply(this.Button1, new System.EventArgs());\n\t\t}\n\t\t\t// If Cancel is clicked, set the font back to\n\t\t\t// the original font.\n\t\telse if (result == DialogResult.Cancel)\n\t\t{\n\t\t\tthis.Font = oldFont;\n\t\t\tforeach ( Control containedControl in this.Controls)\n\t\t\t{\n\t\t\t\tcontainedControl.Font = oldFont;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Handle the Apply event by setting all controls&#39; fonts to \n\t// the chosen font. \n\tprivate void FontDialog1_Apply(object sender, System.EventArgs e)\n\t{\n\n\t\tthis.Font = FontDialog1.Font;\n\t\tforeach ( Control containedControl in this.Controls )\n\t\t{\n\t\t\tcontainedControl.Font = FontDialog1.Font;\n\t\t}\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.FontDialogMustExist#1\">    Private Sub Button1_Click(ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles Button1.Click\n\n        &#39; Set FontMustExist to true, which causes message box error\n        &#39; if the user enters a font that does not exist. \n        FontDialog1.FontMustExist = True\n\n        &#39; Set a minimum and maximum size to be\n        &#39; shown in the FontDialog.\n        FontDialog1.MaxSize = 32\n        FontDialog1.MinSize = 18\n\n        &#39; Show the Apply button in the dialog.\n        FontDialog1.ShowApply = True\n\n        &#39; Do not show effects such as Underline\n        &#39; and Bold.\n        FontDialog1.ShowEffects = False\n\n        &#39; Save the existing font.\n        Dim oldFont As System.Drawing.Font = Me.Font\n\n        &#39; Show the dialog and save the result.\n        Dim result As DialogResult = FontDialog1.ShowDialog()\n\n        &#39; If The OK button in the Font dialog box is clicked, \n        &#39; set all the controls&#39; fonts to the chosen font by\n        &#39; calling the FontDialog1_Apply method.\n        If result = DialogResult.OK Then\n            FontDialog1_Apply(Me.Button1, New System.EventArgs)\n\n            &#39; If the Cancel button is clicked, set the controls&#39;\n            &#39; fonts back to the original font.\n        ElseIf (result = DialogResult.Cancel) Then\n            Dim containedControl As Control\n            For Each containedControl In Me.Controls\n                containedControl.Font = oldFont\n            Next\n\n        End If\n    End Sub\n\n    &#39; Handle the Apply event by setting all controls&#39; fonts to \n    &#39; the chosen font. \n    Private Sub FontDialog1_Apply(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles FontDialog1.Apply\n\n        Me.Font = FontDialog1.Font\n        Dim containedControl As Control\n        For Each containedControl In Me.Controls\n            containedControl.Font = FontDialog1.Font\n        Next\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.FontDialogMustExist#1\">   void Button1_Click( System::Object^ sender, System::EventArgs^ e )\n   {\n      // Set FontMustExist to true, which causes message box error\n      // if the user enters a font that does not exist. \n      FontDialog1-&gt;FontMustExist = true;\n      \n      // Associate the method handling the Apply event with the event.\n      FontDialog1-&gt;Apply += gcnew System::EventHandler( this, &amp;Form1::FontDialog1_Apply );\n      \n      // Set a minimum and maximum size to be\n      // shown in the FontDialog.\n      FontDialog1-&gt;MaxSize = 32;\n      FontDialog1-&gt;MinSize = 18;\n      \n      // Show the Apply button in the dialog.\n      FontDialog1-&gt;ShowApply = true;\n      \n      // Do not show effects such as Underline\n      // and Bold.\n      FontDialog1-&gt;ShowEffects = false;\n      \n      // Save the existing font.\n      System::Drawing::Font^ oldFont = this-&gt;Font;\n      \n      //Show the dialog, and get the result\n      System::Windows::Forms::DialogResult result = FontDialog1-&gt;ShowDialog();\n      \n      // If the OK button in the Font dialog box is clicked, \n      // set all the controls&#39; fonts to the chosen font by calling\n      // the FontDialog1_Apply method.\n      if ( result == ::DialogResult::OK )\n      {\n         FontDialog1_Apply( this-&gt;Button1, gcnew System::EventArgs );\n      }\n      // If Cancel is clicked, set the font back to\n      // the original font.\n      else\n      \n      // If Cancel is clicked, set the font back to\n      // the original font.\n      if ( result == ::DialogResult::Cancel )\n      {\n         this-&gt;Font = oldFont;\n         System::Collections::IEnumerator^ myEnum = this-&gt;Controls-&gt;GetEnumerator();\n         while ( myEnum-&gt;MoveNext() )\n         {\n            Control^ containedControl = safe_cast&lt;Control^&gt;(myEnum-&gt;Current);\n            containedControl-&gt;Font = oldFont;\n         }\n      }\n   }\n\n\n   // Handle the Apply event by setting all controls&#39; fonts to \n   // the chosen font. \n   void FontDialog1_Apply( Object^ sender, System::EventArgs^ e )\n   {\n      this-&gt;Font = FontDialog1-&gt;Font;\n      System::Collections::IEnumerator^ myEnum1 = this-&gt;Controls-&gt;GetEnumerator();\n      while ( myEnum1-&gt;MoveNext() )\n      {\n         Control^ containedControl = safe_cast&lt;Control^&gt;(myEnum1-&gt;Current);\n         containedControl-&gt;Font = FontDialog1-&gt;Font;\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FontDialog_MinSize\">\r\n    \r\n            <a id=\"System_Windows_Forms_FontDialog_MinSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MinSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the minimum point size a user can select.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int MinSize { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The minimum point size a user can select. The default is 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In order for the maximum and minimum size settings to take effect, <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_MaxSize_\" data-linktype=\"relative-path\">MaxSize</a> must be greater than MinSize, and both must be greater than 0.  </p>\n<p> Attempts to set this property to values less than 0 will result in a value of 0 being used. If you set MinSize to a value greater than <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_MaxSize_\" data-linktype=\"relative-path\">MaxSize</a>, <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_MaxSize_\" data-linktype=\"relative-path\">MaxSize</a> is set to the value of MinSize. The effect of setting MinSize and <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_MaxSize_\" data-linktype=\"relative-path\">MaxSize</a> to the same value is to limit the size selection to a single font size.  </p>\n<p> When the point size is 0, there are no font size limits.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates using the MinSize, <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_MaxSize_\" data-linktype=\"relative-path\">MaxSize</a>, <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_ShowEffects_\" data-linktype=\"relative-path\">ShowEffects</a> and <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_FontMustExist_\" data-linktype=\"relative-path\">FontMustExist</a> members and handling the <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_Apply\" data-linktype=\"relative-path\">Apply</a> event. To run this example paste the following code in a form containing a <a class=\"xref\" href=\"system.windows.forms.fontdialog\" data-linktype=\"relative-path\">FontDialog</a> named <code>FontDialog1</code> and a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> named <code>Button1</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.FontDialogMustExist#1\">\tprivate void Button1_Click(System.Object sender, System.EventArgs e)\n\t{\n\t\t// Set FontMustExist to true, which causes message box error\n\t\t// if the user enters a font that does not exist. \n\t\tFontDialog1.FontMustExist = true;\n\t\t\n\t\t// Associate the method handling the Apply event with the event.\n\t\tFontDialog1.Apply += new System.EventHandler(FontDialog1_Apply);\n\n\t\t// Set a minimum and maximum size to be\n\t\t// shown in the FontDialog.\n\t\tFontDialog1.MaxSize = 32;\n\t\tFontDialog1.MinSize = 18;\n\n\t\t// Show the Apply button in the dialog.\n\t\tFontDialog1.ShowApply = true;\n\n\t\t// Do not show effects such as Underline\n\t\t// and Bold.\n\t\tFontDialog1.ShowEffects = false;\n\t\t\n\t\t// Save the existing font.\n\t\tSystem.Drawing.Font oldFont = this.Font;\n\n\t\t//Show the dialog, and get the result\n\t\tDialogResult result = FontDialog1.ShowDialog();\n \n\t\t// If the OK button in the Font dialog box is clicked, \n\t\t// set all the controls&#39; fonts to the chosen font by calling\n\t\t// the FontDialog1_Apply method.\n\t\tif (result == DialogResult.OK)\n\t\t{\n\t\t\tFontDialog1_Apply(this.Button1, new System.EventArgs());\n\t\t}\n\t\t\t// If Cancel is clicked, set the font back to\n\t\t\t// the original font.\n\t\telse if (result == DialogResult.Cancel)\n\t\t{\n\t\t\tthis.Font = oldFont;\n\t\t\tforeach ( Control containedControl in this.Controls)\n\t\t\t{\n\t\t\t\tcontainedControl.Font = oldFont;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Handle the Apply event by setting all controls&#39; fonts to \n\t// the chosen font. \n\tprivate void FontDialog1_Apply(object sender, System.EventArgs e)\n\t{\n\n\t\tthis.Font = FontDialog1.Font;\n\t\tforeach ( Control containedControl in this.Controls )\n\t\t{\n\t\t\tcontainedControl.Font = FontDialog1.Font;\n\t\t}\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.FontDialogMustExist#1\">    Private Sub Button1_Click(ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles Button1.Click\n\n        &#39; Set FontMustExist to true, which causes message box error\n        &#39; if the user enters a font that does not exist. \n        FontDialog1.FontMustExist = True\n\n        &#39; Set a minimum and maximum size to be\n        &#39; shown in the FontDialog.\n        FontDialog1.MaxSize = 32\n        FontDialog1.MinSize = 18\n\n        &#39; Show the Apply button in the dialog.\n        FontDialog1.ShowApply = True\n\n        &#39; Do not show effects such as Underline\n        &#39; and Bold.\n        FontDialog1.ShowEffects = False\n\n        &#39; Save the existing font.\n        Dim oldFont As System.Drawing.Font = Me.Font\n\n        &#39; Show the dialog and save the result.\n        Dim result As DialogResult = FontDialog1.ShowDialog()\n\n        &#39; If The OK button in the Font dialog box is clicked, \n        &#39; set all the controls&#39; fonts to the chosen font by\n        &#39; calling the FontDialog1_Apply method.\n        If result = DialogResult.OK Then\n            FontDialog1_Apply(Me.Button1, New System.EventArgs)\n\n            &#39; If the Cancel button is clicked, set the controls&#39;\n            &#39; fonts back to the original font.\n        ElseIf (result = DialogResult.Cancel) Then\n            Dim containedControl As Control\n            For Each containedControl In Me.Controls\n                containedControl.Font = oldFont\n            Next\n\n        End If\n    End Sub\n\n    &#39; Handle the Apply event by setting all controls&#39; fonts to \n    &#39; the chosen font. \n    Private Sub FontDialog1_Apply(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles FontDialog1.Apply\n\n        Me.Font = FontDialog1.Font\n        Dim containedControl As Control\n        For Each containedControl In Me.Controls\n            containedControl.Font = FontDialog1.Font\n        Next\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.FontDialogMustExist#1\">   void Button1_Click( System::Object^ sender, System::EventArgs^ e )\n   {\n      // Set FontMustExist to true, which causes message box error\n      // if the user enters a font that does not exist. \n      FontDialog1-&gt;FontMustExist = true;\n      \n      // Associate the method handling the Apply event with the event.\n      FontDialog1-&gt;Apply += gcnew System::EventHandler( this, &amp;Form1::FontDialog1_Apply );\n      \n      // Set a minimum and maximum size to be\n      // shown in the FontDialog.\n      FontDialog1-&gt;MaxSize = 32;\n      FontDialog1-&gt;MinSize = 18;\n      \n      // Show the Apply button in the dialog.\n      FontDialog1-&gt;ShowApply = true;\n      \n      // Do not show effects such as Underline\n      // and Bold.\n      FontDialog1-&gt;ShowEffects = false;\n      \n      // Save the existing font.\n      System::Drawing::Font^ oldFont = this-&gt;Font;\n      \n      //Show the dialog, and get the result\n      System::Windows::Forms::DialogResult result = FontDialog1-&gt;ShowDialog();\n      \n      // If the OK button in the Font dialog box is clicked, \n      // set all the controls&#39; fonts to the chosen font by calling\n      // the FontDialog1_Apply method.\n      if ( result == ::DialogResult::OK )\n      {\n         FontDialog1_Apply( this-&gt;Button1, gcnew System::EventArgs );\n      }\n      // If Cancel is clicked, set the font back to\n      // the original font.\n      else\n      \n      // If Cancel is clicked, set the font back to\n      // the original font.\n      if ( result == ::DialogResult::Cancel )\n      {\n         this-&gt;Font = oldFont;\n         System::Collections::IEnumerator^ myEnum = this-&gt;Controls-&gt;GetEnumerator();\n         while ( myEnum-&gt;MoveNext() )\n         {\n            Control^ containedControl = safe_cast&lt;Control^&gt;(myEnum-&gt;Current);\n            containedControl-&gt;Font = oldFont;\n         }\n      }\n   }\n\n\n   // Handle the Apply event by setting all controls&#39; fonts to \n   // the chosen font. \n   void FontDialog1_Apply( Object^ sender, System::EventArgs^ e )\n   {\n      this-&gt;Font = FontDialog1-&gt;Font;\n      System::Collections::IEnumerator^ myEnum1 = this-&gt;Controls-&gt;GetEnumerator();\n      while ( myEnum1-&gt;MoveNext() )\n      {\n         Control^ containedControl = safe_cast&lt;Control^&gt;(myEnum1-&gt;Current);\n         containedControl-&gt;Font = FontDialog1-&gt;Font;\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FontDialog_Options\">\r\n    \r\n            <a id=\"System_Windows_Forms_FontDialog_Options_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Options</div>        \r\n          </div>\r\n    \r\n            <p>Gets values to initialize the <a class=\"xref\" href=\"system.windows.forms.fontdialog\" data-linktype=\"relative-path\">FontDialog</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected int Options { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A bitwise combination of internal values that initializes the <a class=\"xref\" href=\"system.windows.forms.fontdialog\" data-linktype=\"relative-path\">FontDialog</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Options property corresponds to the flags used to initialize a color dialog box using Win32. Use the properties of the <a class=\"xref\" href=\"system.windows.forms.fontdialog\" data-linktype=\"relative-path\">FontDialog</a> class to get and set the options.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FontDialog_ScriptsOnly\">\r\n    \r\n            <a id=\"System_Windows_Forms_FontDialog_ScriptsOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ScriptsOnly</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the dialog box allows selection of fonts for all non-OEM and Symbol character sets, as well as the ANSI character set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ScriptsOnly { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if selection of fonts for all non-OEM and Symbol character sets, as well as the ANSI character set, is allowed; otherwise, <code>false</code>. The default value is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FontDialog_ShowApply\">\r\n    \r\n            <a id=\"System_Windows_Forms_FontDialog_ShowApply_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowApply</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the dialog box contains an <strong>Apply</strong> button.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShowApply { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the dialog box contains an <strong>Apply</strong> button; otherwise, <code>false</code>. The default value is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to apply the selections in a <a class=\"xref\" href=\"system.windows.forms.fontdialog\" data-linktype=\"relative-path\">FontDialog</a> to the text in a <a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a>. In the event handler that displays the dialog box, the example initializes the ShowApply property to <code>true</code> and then displays the <a class=\"xref\" href=\"system.windows.forms.fontdialog\" data-linktype=\"relative-path\">FontDialog</a>. In the <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_Apply\" data-linktype=\"relative-path\">Apply</a> event handler, the <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_Font_\" data-linktype=\"relative-path\">Font</a> property is assigned to the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Font_\" data-linktype=\"relative-path\">Font</a> property.  </p>\n<pre><code class=\"lang-cs\" name=\"FontDialog.ShowApply#1\">\nprivate void button1_Click(object sender, System.EventArgs e)\n{\n\t// Sets the ShowApply property, then displays the dialog.\n\n\tfontDialog1.ShowApply = true;\n\tfontDialog1.ShowDialog();\n}\n\nprivate void fontDialog1_Apply(object sender, System.EventArgs e)\n{\n\t// Applies the selected font to the selected text.\n\trichTextBox1.Font = fontDialog1.Font;\n\t\t\t\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"FontDialog.ShowApply#1\">    Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click\n\n        &#39; Sets the ShowApply property, then displays the dialog.\n        FontDialog1.ShowApply = True\n        FontDialog1.ShowDialog()\n\n    End Sub\n\n    Private Sub FontDialog1_Apply(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles FontDialog1.Apply\n\n        &#39; Applies the selected font to the selected text.\n        RichTextBox1.SelectionFont = FontDialog1.Font\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"FontDialog.ShowApply#1\">   private:\n      void button1_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n      {\n         // Sets the ShowApply property, then displays the dialog.\n         fontDialog1-&gt;ShowApply = true;\n         fontDialog1-&gt;ShowDialog();\n      }\n\n      void fontDialog1_Apply( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n      {\n         // Applies the selected font to the selected text.\n         richTextBox1-&gt;Font = fontDialog1-&gt;Font;\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FontDialog_ShowColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_FontDialog_ShowColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the dialog box displays the color choice.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShowColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the dialog box displays the color choice; otherwise, <code>false</code>. The default value is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> to display a <a class=\"xref\" href=\"system.windows.forms.fontdialog\" data-linktype=\"relative-path\">FontDialog</a>. This code requires that a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> has already been created with a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> and button placed on it. It also requires that the <code>fontDialog1</code> has been created. The <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> contains the size information but not the color information.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic FontDialog Example#1\">private void button1_Click(object sender, System.EventArgs e)\n {\n    fontDialog1.ShowColor = true;\n\n    fontDialog1.Font = textBox1.Font;\n    fontDialog1.Color = textBox1.ForeColor;\n\n    if(fontDialog1.ShowDialog() != DialogResult.Cancel )\n    {\n       textBox1.Font = fontDialog1.Font ;\n       textBox1.ForeColor = fontDialog1.Color;\n    }\n }\n \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FontDialog Example#1\">    Private Sub button1_Click(sender As Object, e As System.EventArgs)\n        fontDialog1.ShowColor = True\n\n        fontDialog1.Font = textBox1.Font\n        fontDialog1.Color = textBox1.ForeColor\n\n        If fontDialog1.ShowDialog() &lt;&gt; DialogResult.Cancel Then\n            textBox1.Font = fontDialog1.Font\n            textBox1.ForeColor = fontDialog1.Color\n        End If\n    End Sub &#39;button1_Click\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic FontDialog Example#1\">private:\n   void button1_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      fontDialog1-&gt;ShowColor = true;\n\n      fontDialog1-&gt;Font = textBox1-&gt;Font;\n      fontDialog1-&gt;Color = textBox1-&gt;ForeColor;\n\n      if ( fontDialog1-&gt;ShowDialog() != ::DialogResult::Cancel )\n      {\n         textBox1-&gt;Font = fontDialog1-&gt;Font;\n         textBox1-&gt;ForeColor = fontDialog1-&gt;Color;\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FontDialog_ShowEffects\">\r\n    \r\n            <a id=\"System_Windows_Forms_FontDialog_ShowEffects_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowEffects</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the dialog box contains controls that allow the user to specify strikethrough, underline, and text color options.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShowEffects { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the dialog box contains controls to set strikethrough, underline, and text color options; otherwise, <code>false</code>. The default value is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates using the <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_MinSize_\" data-linktype=\"relative-path\">MinSize</a>, <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_MaxSize_\" data-linktype=\"relative-path\">MaxSize</a>, ShowEffects and <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_FontMustExist_\" data-linktype=\"relative-path\">FontMustExist</a> members and handling the <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_Apply\" data-linktype=\"relative-path\">Apply</a> event. To run this example paste the following code in a form containing a <a class=\"xref\" href=\"system.windows.forms.fontdialog\" data-linktype=\"relative-path\">FontDialog</a> named <code>FontDialog1</code> and a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> named <code>Button1</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.FontDialogMustExist#1\">\tprivate void Button1_Click(System.Object sender, System.EventArgs e)\n\t{\n\t\t// Set FontMustExist to true, which causes message box error\n\t\t// if the user enters a font that does not exist. \n\t\tFontDialog1.FontMustExist = true;\n\t\t\n\t\t// Associate the method handling the Apply event with the event.\n\t\tFontDialog1.Apply += new System.EventHandler(FontDialog1_Apply);\n\n\t\t// Set a minimum and maximum size to be\n\t\t// shown in the FontDialog.\n\t\tFontDialog1.MaxSize = 32;\n\t\tFontDialog1.MinSize = 18;\n\n\t\t// Show the Apply button in the dialog.\n\t\tFontDialog1.ShowApply = true;\n\n\t\t// Do not show effects such as Underline\n\t\t// and Bold.\n\t\tFontDialog1.ShowEffects = false;\n\t\t\n\t\t// Save the existing font.\n\t\tSystem.Drawing.Font oldFont = this.Font;\n\n\t\t//Show the dialog, and get the result\n\t\tDialogResult result = FontDialog1.ShowDialog();\n \n\t\t// If the OK button in the Font dialog box is clicked, \n\t\t// set all the controls&#39; fonts to the chosen font by calling\n\t\t// the FontDialog1_Apply method.\n\t\tif (result == DialogResult.OK)\n\t\t{\n\t\t\tFontDialog1_Apply(this.Button1, new System.EventArgs());\n\t\t}\n\t\t\t// If Cancel is clicked, set the font back to\n\t\t\t// the original font.\n\t\telse if (result == DialogResult.Cancel)\n\t\t{\n\t\t\tthis.Font = oldFont;\n\t\t\tforeach ( Control containedControl in this.Controls)\n\t\t\t{\n\t\t\t\tcontainedControl.Font = oldFont;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Handle the Apply event by setting all controls&#39; fonts to \n\t// the chosen font. \n\tprivate void FontDialog1_Apply(object sender, System.EventArgs e)\n\t{\n\n\t\tthis.Font = FontDialog1.Font;\n\t\tforeach ( Control containedControl in this.Controls )\n\t\t{\n\t\t\tcontainedControl.Font = FontDialog1.Font;\n\t\t}\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.FontDialogMustExist#1\">    Private Sub Button1_Click(ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles Button1.Click\n\n        &#39; Set FontMustExist to true, which causes message box error\n        &#39; if the user enters a font that does not exist. \n        FontDialog1.FontMustExist = True\n\n        &#39; Set a minimum and maximum size to be\n        &#39; shown in the FontDialog.\n        FontDialog1.MaxSize = 32\n        FontDialog1.MinSize = 18\n\n        &#39; Show the Apply button in the dialog.\n        FontDialog1.ShowApply = True\n\n        &#39; Do not show effects such as Underline\n        &#39; and Bold.\n        FontDialog1.ShowEffects = False\n\n        &#39; Save the existing font.\n        Dim oldFont As System.Drawing.Font = Me.Font\n\n        &#39; Show the dialog and save the result.\n        Dim result As DialogResult = FontDialog1.ShowDialog()\n\n        &#39; If The OK button in the Font dialog box is clicked, \n        &#39; set all the controls&#39; fonts to the chosen font by\n        &#39; calling the FontDialog1_Apply method.\n        If result = DialogResult.OK Then\n            FontDialog1_Apply(Me.Button1, New System.EventArgs)\n\n            &#39; If the Cancel button is clicked, set the controls&#39;\n            &#39; fonts back to the original font.\n        ElseIf (result = DialogResult.Cancel) Then\n            Dim containedControl As Control\n            For Each containedControl In Me.Controls\n                containedControl.Font = oldFont\n            Next\n\n        End If\n    End Sub\n\n    &#39; Handle the Apply event by setting all controls&#39; fonts to \n    &#39; the chosen font. \n    Private Sub FontDialog1_Apply(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles FontDialog1.Apply\n\n        Me.Font = FontDialog1.Font\n        Dim containedControl As Control\n        For Each containedControl In Me.Controls\n            containedControl.Font = FontDialog1.Font\n        Next\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.FontDialogMustExist#1\">   void Button1_Click( System::Object^ sender, System::EventArgs^ e )\n   {\n      // Set FontMustExist to true, which causes message box error\n      // if the user enters a font that does not exist. \n      FontDialog1-&gt;FontMustExist = true;\n      \n      // Associate the method handling the Apply event with the event.\n      FontDialog1-&gt;Apply += gcnew System::EventHandler( this, &amp;Form1::FontDialog1_Apply );\n      \n      // Set a minimum and maximum size to be\n      // shown in the FontDialog.\n      FontDialog1-&gt;MaxSize = 32;\n      FontDialog1-&gt;MinSize = 18;\n      \n      // Show the Apply button in the dialog.\n      FontDialog1-&gt;ShowApply = true;\n      \n      // Do not show effects such as Underline\n      // and Bold.\n      FontDialog1-&gt;ShowEffects = false;\n      \n      // Save the existing font.\n      System::Drawing::Font^ oldFont = this-&gt;Font;\n      \n      //Show the dialog, and get the result\n      System::Windows::Forms::DialogResult result = FontDialog1-&gt;ShowDialog();\n      \n      // If the OK button in the Font dialog box is clicked, \n      // set all the controls&#39; fonts to the chosen font by calling\n      // the FontDialog1_Apply method.\n      if ( result == ::DialogResult::OK )\n      {\n         FontDialog1_Apply( this-&gt;Button1, gcnew System::EventArgs );\n      }\n      // If Cancel is clicked, set the font back to\n      // the original font.\n      else\n      \n      // If Cancel is clicked, set the font back to\n      // the original font.\n      if ( result == ::DialogResult::Cancel )\n      {\n         this-&gt;Font = oldFont;\n         System::Collections::IEnumerator^ myEnum = this-&gt;Controls-&gt;GetEnumerator();\n         while ( myEnum-&gt;MoveNext() )\n         {\n            Control^ containedControl = safe_cast&lt;Control^&gt;(myEnum-&gt;Current);\n            containedControl-&gt;Font = oldFont;\n         }\n      }\n   }\n\n\n   // Handle the Apply event by setting all controls&#39; fonts to \n   // the chosen font. \n   void FontDialog1_Apply( Object^ sender, System::EventArgs^ e )\n   {\n      this-&gt;Font = FontDialog1-&gt;Font;\n      System::Collections::IEnumerator^ myEnum1 = this-&gt;Controls-&gt;GetEnumerator();\n      while ( myEnum1-&gt;MoveNext() )\n      {\n         Control^ containedControl = safe_cast&lt;Control^&gt;(myEnum1-&gt;Current);\n         containedControl-&gt;Font = FontDialog1-&gt;Font;\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FontDialog_ShowHelp\">\r\n    \r\n            <a id=\"System_Windows_Forms_FontDialog_ShowHelp_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowHelp</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the dialog box displays a Help button.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShowHelp { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the dialog box displays a Help button; otherwise, <code>false</code>. The default value is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FontDialog_HookProc_System_IntPtr_System_Int32_System_IntPtr_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Windows_Forms_FontDialog_HookProc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HookProc(IntPtr,Int32,IntPtr,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Specifies the common dialog box hook procedure that is overridden to add specific functionality to a common dialog box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override IntPtr HookProc (IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hWnd</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The handle to the dialog box window.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>msg</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The message being received.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>wparam</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Additional information about the message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>lparam</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Additional information about the message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </div>\r\n                  <p>A zero value if the default dialog box procedure processes the message; a nonzero value if the default dialog box procedure ignores the message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A hook procedure is a mechanism by which a function can intercept events before they reach an application. When you override the <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_HookProc_\" data-linktype=\"relative-path\">HookProc</a> method for a <a class=\"xref\" href=\"system.windows.forms.commondialog\" data-linktype=\"relative-path\">CommonDialog</a> class, the operating system invokes your override of the function to post operating system messages to the window.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to override the HookProc method. The example consists of a class that inherits the <a class=\"xref\" href=\"system.windows.forms.fontdialog\" data-linktype=\"relative-path\">FontDialog</a> class. In the class&#39;s HookProc override, the example evaluates the method&#39;s <code>msg</code> parameter against constant values for particular Windows messages. If the <code>msg</code> parameter equals the specified constant, the example writes trace output identifying the Windows message that was passed to the HookProc method. This example requires that the class in which the HookProc method is declared inherits the <a class=\"xref\" href=\"system.windows.forms.fontdialog\" data-linktype=\"relative-path\">FontDialog</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"HookProc Example#1\">\n// Defines the constants for Windows messages.\n\nconst int WM_SETFOCUS = 0x0007;\nconst int WM_INITDIALOG = 0x0110;\nconst int WM_LBUTTONDOWN = 0x0201;\nconst int WM_RBUTTONDOWN = 0x0204;\nconst int WM_MOVE = 0x0003;\n\n// Overrides the base class hook procedure...\n[System.Security.Permissions.PermissionSet(System.Security.Permissions.SecurityAction.Demand, Name=&quot;FullTrust&quot;)] \nprotected override IntPtr HookProc(IntPtr hWnd, int msg, IntPtr wParam, IntPtr lParam)\n{\n\n\t// Evaluates the message parameter to determine the user action.\n\n\tswitch(msg)\n\t{\n\n\t\tcase WM_INITDIALOG:\n\t\t\tSystem.Diagnostics.Trace.Write(&quot;The WM_INITDIALOG message was received.&quot;);\n\t\t\tbreak;\n\t\tcase WM_SETFOCUS:\n\t\t\tSystem.Diagnostics.Trace.Write(&quot;The WM_SETFOCUS message was received.&quot;);\n\t\t\tbreak;\n\t\tcase WM_LBUTTONDOWN:\n\t\t\tSystem.Diagnostics.Trace.Write(&quot;The WM_LBUTTONDOWN message was received.&quot;);\n\t\t\tbreak;\n\t\tcase WM_RBUTTONDOWN:\n\t\t\tSystem.Diagnostics.Trace.Write(&quot;The WM_RBUTTONDOWN message was received.&quot;);\n\t\t\tbreak;\n\t\tcase WM_MOVE:\n\t\t\tSystem.Diagnostics.Trace.Write(&quot;The WM_MOVE message was received.&quot;);\n\t\t\tbreak;\n\n\t}\n\n\t// Always call the base class hook procedure.\n\n\treturn base.HookProc(hWnd, msg, wParam, lParam);\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"HookProc Example#1\">   private:\n      // Defines the constants for Windows messages.\n      literal int WM_SETFOCUS = 0x0007;\n      literal int WM_INITDIALOG = 0x0110;\n      literal int WM_LBUTTONDOWN = 0x0201;\n      literal int WM_RBUTTONDOWN = 0x0204;\n      literal int WM_MOVE = 0x0003;\n\n   protected:\n      // Overrides the base class hook procedure...\n      [SecurityPermission(SecurityAction::Demand, Flags=SecurityPermissionFlag::UnmanagedCode)] \n      virtual IntPtr HookProc( IntPtr hWnd, int msg, IntPtr wParam, IntPtr lParam ) override\n      {\n         // Evaluates the message parameter to determine the user action.\n         #if defined(TRACE)\n         switch ( msg )\n         {\n            case WM_INITDIALOG:\n               System::Diagnostics::Trace::Write( &quot;The WM_INITDIALOG message was received.&quot; );\n               break;\n            case WM_SETFOCUS:\n               System::Diagnostics::Trace::Write( &quot;The WM_SETFOCUS message was received.&quot; );\n               break;\n            case WM_LBUTTONDOWN:\n               System::Diagnostics::Trace::Write( &quot;The WM_LBUTTONDOWN message was received.&quot; );\n               break;\n            case WM_RBUTTONDOWN:\n               System::Diagnostics::Trace::Write( &quot;The WM_RBUTTONDOWN message was received.&quot; );\n               break;\n            case WM_MOVE:\n               System::Diagnostics::Trace::Write( &quot;The WM_MOVE message was received.&quot; );\n               break;\n         }\n         #endif\n        \n         // Always call the base class hook procedure.\n         return FontDialog::HookProc( hWnd, msg, wParam, lParam );\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"HookProc Example#1\">    &#39; Defines the constants for Windows messages.\n\n    Const WM_SETFOCUS = &amp;H7\n    Const WM_INITDIALOG = &amp;H110\n    Const WM_LBUTTONDOWN = &amp;H201\n    Const WM_RBUTTONDOWN = &amp;H204\n    Const WM_MOVE = &amp;H3\n&lt;System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\n    Protected Overrides Function HookProc(ByVal hWnd As IntPtr, ByVal msg As Integer, ByVal wParam As IntPtr, ByVal lParam As IntPtr) As IntPtr\n\n\n        &#39; Evaluates the message parameter to determine the user action.\n\n        Select Case msg\n\n            Case WM_INITDIALOG\n                System.Diagnostics.Trace.Write(&quot;The WM_INITDIALOG message was received.&quot;)\n            Case WM_SETFOCUS\n                System.Diagnostics.Trace.Write(&quot;The WM_SETFOCUS message was received.&quot;)\n            Case WM_LBUTTONDOWN\n                System.Diagnostics.Trace.Write(&quot;The WM_LBUTTONDOWN message was received.&quot;)\n            Case WM_RBUTTONDOWN\n                System.Diagnostics.Trace.Write(&quot;The WM_RBUTTONDOWN message was received.&quot;)\n            Case WM_MOVE\n                System.Diagnostics.Trace.Write(&quot;The WM_MOVE message was received.&quot;)\n\n        End Select\n\n        &#39; Always call the base class hook procedure.\n\n        Return MyBase.HookProc(hWnd, msg, wParam, lParam)\n\n    End Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FontDialog_OnApply_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_FontDialog_OnApply_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnApply(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_Apply\" data-linktype=\"relative-path\">Apply</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnApply (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For an overview, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FontDialog_Reset\">\r\n    \r\n            <a id=\"System_Windows_Forms_FontDialog_Reset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Reset()</div>        \r\n          </div>\r\n    \r\n            <p>Resets all dialog box options to their default values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Reset ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the options are reset, the strikethrough, underline, and color effects are enabled. The fonts listed include only the screen fonts supported by the system.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FontDialog_RunDialog_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Windows_Forms_FontDialog_RunDialog_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RunDialog(IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Specifies a file dialog box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool RunDialog (IntPtr hWndOwner);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hWndOwner</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The window handle of the owner window for the common dialog box.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the dialog box was successfully run; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RunDialog method is invoked when the user of a font dialog box calls the <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FontDialog_ToString\">\r\n    \r\n            <a id=\"System_Windows_Forms_FontDialog_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a string that includes the name of the current font selected in the dialog box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that includes the name of the currently selected font.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FontDialog_Apply\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Apply</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user clicks the <strong>Apply</strong> button in the font dialog box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler Apply;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Every time the <strong>Apply</strong> button is clicked, another Apply event is raised.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates using the <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_MinSize_\" data-linktype=\"relative-path\">MinSize</a>, <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_MaxSize_\" data-linktype=\"relative-path\">MaxSize</a>, <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_ShowEffects_\" data-linktype=\"relative-path\">ShowEffects</a> and <a class=\"xref\" href=\"system.windows.forms.fontdialog#System_Windows_Forms_FontDialog_FontMustExist_\" data-linktype=\"relative-path\">FontMustExist</a> members and handling the Apply event. To run this example paste the following code in a form containing a <a class=\"xref\" href=\"system.windows.forms.fontdialog\" data-linktype=\"relative-path\">FontDialog</a> named <code>FontDialog1</code> and a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> named <code>Button1</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.FontDialogMustExist#1\">\tprivate void Button1_Click(System.Object sender, System.EventArgs e)\n\t{\n\t\t// Set FontMustExist to true, which causes message box error\n\t\t// if the user enters a font that does not exist. \n\t\tFontDialog1.FontMustExist = true;\n\t\t\n\t\t// Associate the method handling the Apply event with the event.\n\t\tFontDialog1.Apply += new System.EventHandler(FontDialog1_Apply);\n\n\t\t// Set a minimum and maximum size to be\n\t\t// shown in the FontDialog.\n\t\tFontDialog1.MaxSize = 32;\n\t\tFontDialog1.MinSize = 18;\n\n\t\t// Show the Apply button in the dialog.\n\t\tFontDialog1.ShowApply = true;\n\n\t\t// Do not show effects such as Underline\n\t\t// and Bold.\n\t\tFontDialog1.ShowEffects = false;\n\t\t\n\t\t// Save the existing font.\n\t\tSystem.Drawing.Font oldFont = this.Font;\n\n\t\t//Show the dialog, and get the result\n\t\tDialogResult result = FontDialog1.ShowDialog();\n \n\t\t// If the OK button in the Font dialog box is clicked, \n\t\t// set all the controls&#39; fonts to the chosen font by calling\n\t\t// the FontDialog1_Apply method.\n\t\tif (result == DialogResult.OK)\n\t\t{\n\t\t\tFontDialog1_Apply(this.Button1, new System.EventArgs());\n\t\t}\n\t\t\t// If Cancel is clicked, set the font back to\n\t\t\t// the original font.\n\t\telse if (result == DialogResult.Cancel)\n\t\t{\n\t\t\tthis.Font = oldFont;\n\t\t\tforeach ( Control containedControl in this.Controls)\n\t\t\t{\n\t\t\t\tcontainedControl.Font = oldFont;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Handle the Apply event by setting all controls&#39; fonts to \n\t// the chosen font. \n\tprivate void FontDialog1_Apply(object sender, System.EventArgs e)\n\t{\n\n\t\tthis.Font = FontDialog1.Font;\n\t\tforeach ( Control containedControl in this.Controls )\n\t\t{\n\t\t\tcontainedControl.Font = FontDialog1.Font;\n\t\t}\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.FontDialogMustExist#1\">    Private Sub Button1_Click(ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles Button1.Click\n\n        &#39; Set FontMustExist to true, which causes message box error\n        &#39; if the user enters a font that does not exist. \n        FontDialog1.FontMustExist = True\n\n        &#39; Set a minimum and maximum size to be\n        &#39; shown in the FontDialog.\n        FontDialog1.MaxSize = 32\n        FontDialog1.MinSize = 18\n\n        &#39; Show the Apply button in the dialog.\n        FontDialog1.ShowApply = True\n\n        &#39; Do not show effects such as Underline\n        &#39; and Bold.\n        FontDialog1.ShowEffects = False\n\n        &#39; Save the existing font.\n        Dim oldFont As System.Drawing.Font = Me.Font\n\n        &#39; Show the dialog and save the result.\n        Dim result As DialogResult = FontDialog1.ShowDialog()\n\n        &#39; If The OK button in the Font dialog box is clicked, \n        &#39; set all the controls&#39; fonts to the chosen font by\n        &#39; calling the FontDialog1_Apply method.\n        If result = DialogResult.OK Then\n            FontDialog1_Apply(Me.Button1, New System.EventArgs)\n\n            &#39; If the Cancel button is clicked, set the controls&#39;\n            &#39; fonts back to the original font.\n        ElseIf (result = DialogResult.Cancel) Then\n            Dim containedControl As Control\n            For Each containedControl In Me.Controls\n                containedControl.Font = oldFont\n            Next\n\n        End If\n    End Sub\n\n    &#39; Handle the Apply event by setting all controls&#39; fonts to \n    &#39; the chosen font. \n    Private Sub FontDialog1_Apply(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles FontDialog1.Apply\n\n        Me.Font = FontDialog1.Font\n        Dim containedControl As Control\n        For Each containedControl In Me.Controls\n            containedControl.Font = FontDialog1.Font\n        Next\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.FontDialogMustExist#1\">   void Button1_Click( System::Object^ sender, System::EventArgs^ e )\n   {\n      // Set FontMustExist to true, which causes message box error\n      // if the user enters a font that does not exist. \n      FontDialog1-&gt;FontMustExist = true;\n      \n      // Associate the method handling the Apply event with the event.\n      FontDialog1-&gt;Apply += gcnew System::EventHandler( this, &amp;Form1::FontDialog1_Apply );\n      \n      // Set a minimum and maximum size to be\n      // shown in the FontDialog.\n      FontDialog1-&gt;MaxSize = 32;\n      FontDialog1-&gt;MinSize = 18;\n      \n      // Show the Apply button in the dialog.\n      FontDialog1-&gt;ShowApply = true;\n      \n      // Do not show effects such as Underline\n      // and Bold.\n      FontDialog1-&gt;ShowEffects = false;\n      \n      // Save the existing font.\n      System::Drawing::Font^ oldFont = this-&gt;Font;\n      \n      //Show the dialog, and get the result\n      System::Windows::Forms::DialogResult result = FontDialog1-&gt;ShowDialog();\n      \n      // If the OK button in the Font dialog box is clicked, \n      // set all the controls&#39; fonts to the chosen font by calling\n      // the FontDialog1_Apply method.\n      if ( result == ::DialogResult::OK )\n      {\n         FontDialog1_Apply( this-&gt;Button1, gcnew System::EventArgs );\n      }\n      // If Cancel is clicked, set the font back to\n      // the original font.\n      else\n      \n      // If Cancel is clicked, set the font back to\n      // the original font.\n      if ( result == ::DialogResult::Cancel )\n      {\n         this-&gt;Font = oldFont;\n         System::Collections::IEnumerator^ myEnum = this-&gt;Controls-&gt;GetEnumerator();\n         while ( myEnum-&gt;MoveNext() )\n         {\n            Control^ containedControl = safe_cast&lt;Control^&gt;(myEnum-&gt;Current);\n            containedControl-&gt;Font = oldFont;\n         }\n      }\n   }\n\n\n   // Handle the Apply event by setting all controls&#39; fonts to \n   // the chosen font. \n   void FontDialog1_Apply( Object^ sender, System::EventArgs^ e )\n   {\n      this-&gt;Font = FontDialog1-&gt;Font;\n      System::Collections::IEnumerator^ myEnum1 = this-&gt;Controls-&gt;GetEnumerator();\n      while ( myEnum1-&gt;MoveNext() )\n      {\n         Control^ containedControl = safe_cast&lt;Control^&gt;(myEnum1-&gt;Current);\n         containedControl-&gt;Font = FontDialog1-&gt;Font;\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.FontDialog.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.FontDialog.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.AllowScriptChange\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.AllowSimulations\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.AllowVectorFonts\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.AllowVerticalFonts\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.Apply\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.add_Apply\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.remove_Apply\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.Color\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.EventApply\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.FixedPitchOnly\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.Font\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.FontMustExist\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.HookProc\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.MaxSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.MinSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.OnApply\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.Options\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.Reset\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.RunDialog\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.ScriptsOnly\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.ShowApply\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.ShowColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.ShowEffects\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.ShowHelp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FontDialog.ToString\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"8b40f893-7a67-00e0-787e-17d93ef9e613\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Prompts the user to choose a font from among those installed on the local computer.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.FontDialog\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.FontDialog.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.FontDialog.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.FontDialog","System.Windows.Forms.FontDialog..ctor","System.Windows.Forms.FontDialog.AllowScriptChange","System.Windows.Forms.FontDialog.AllowSimulations","System.Windows.Forms.FontDialog.AllowVectorFonts","System.Windows.Forms.FontDialog.AllowVerticalFonts","System.Windows.Forms.FontDialog.Apply","System.Windows.Forms.FontDialog.add_Apply","System.Windows.Forms.FontDialog.remove_Apply","System.Windows.Forms.FontDialog.Color","System.Windows.Forms.FontDialog.EventApply","System.Windows.Forms.FontDialog.FixedPitchOnly","System.Windows.Forms.FontDialog.Font","System.Windows.Forms.FontDialog.FontMustExist","System.Windows.Forms.FontDialog.HookProc","System.Windows.Forms.FontDialog.MaxSize","System.Windows.Forms.FontDialog.MinSize","System.Windows.Forms.FontDialog.OnApply","System.Windows.Forms.FontDialog.Options","System.Windows.Forms.FontDialog.Reset","System.Windows.Forms.FontDialog.RunDialog","System.Windows.Forms.FontDialog.ScriptsOnly","System.Windows.Forms.FontDialog.ShowApply","System.Windows.Forms.FontDialog.ShowColor","System.Windows.Forms.FontDialog.ShowEffects","System.Windows.Forms.FontDialog.ShowHelp","System.Windows.Forms.FontDialog.ToString"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.FontDialog","System::Windows::Forms::FontDialog","System.Windows.Forms.FontDialog.#ctor","System::Windows::Forms::FontDialog::#ctor","System.Windows.Forms.FontDialog.AllowScriptChange","System::Windows::Forms::FontDialog::AllowScriptChange","System.Windows.Forms.FontDialog.AllowSimulations","System::Windows::Forms::FontDialog::AllowSimulations","System.Windows.Forms.FontDialog.AllowVectorFonts","System::Windows::Forms::FontDialog::AllowVectorFonts","System.Windows.Forms.FontDialog.AllowVerticalFonts","System::Windows::Forms::FontDialog::AllowVerticalFonts","System.Windows.Forms.FontDialog.Apply","System::Windows::Forms::FontDialog::Apply","System.Windows.Forms.FontDialog.Color","System::Windows::Forms::FontDialog::Color","System.Windows.Forms.FontDialog.EventApply","System::Windows::Forms::FontDialog::EventApply","System.Windows.Forms.FontDialog.FixedPitchOnly","System::Windows::Forms::FontDialog::FixedPitchOnly","System.Windows.Forms.FontDialog.Font","System::Windows::Forms::FontDialog::Font","System.Windows.Forms.FontDialog.FontMustExist","System::Windows::Forms::FontDialog::FontMustExist","System.Windows.Forms.FontDialog.HookProc","System::Windows::Forms::FontDialog::HookProc","System.Windows.Forms.FontDialog.MaxSize","System::Windows::Forms::FontDialog::MaxSize","System.Windows.Forms.FontDialog.MinSize","System::Windows::Forms::FontDialog::MinSize","System.Windows.Forms.FontDialog.OnApply","System::Windows::Forms::FontDialog::OnApply","System.Windows.Forms.FontDialog.Options","System::Windows::Forms::FontDialog::Options","System.Windows.Forms.FontDialog.Reset","System::Windows::Forms::FontDialog::Reset","System.Windows.Forms.FontDialog.RunDialog","System::Windows::Forms::FontDialog::RunDialog","System.Windows.Forms.FontDialog.ScriptsOnly","System::Windows::Forms::FontDialog::ScriptsOnly","System.Windows.Forms.FontDialog.ShowApply","System::Windows::Forms::FontDialog::ShowApply","System.Windows.Forms.FontDialog.ShowColor","System::Windows::Forms::FontDialog::ShowColor","System.Windows.Forms.FontDialog.ShowEffects","System::Windows::Forms::FontDialog::ShowEffects","System.Windows.Forms.FontDialog.ShowHelp","System::Windows::Forms::FontDialog::ShowHelp","System.Windows.Forms.FontDialog.ToString","System::Windows::Forms::FontDialog::ToString"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"8b40f893-7a67-00e0-787e-17d93ef9e613","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/FontDialog.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"FontDialog class | Microsoft Docs","_op_ogTitle":"FontDialog class","description":"Prompts the user to choose a font from among those installed on the local computer.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.FontDialog","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.fontdialog","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.fontdialog","fileRelativePath":"System.Windows.Forms.FontDialog.html"},"themesRelativePathToOutputRoot":"_themes/"}