{"content":"    \r\n    <h1 id=\"System_Collections_IStructuralEquatable\">\r\n      <span class=\"lang-csharp\">IStructuralEquatable</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines methods to support the comparison of objects for structural equality.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface IStructuralEquatable</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Structural equality means that two objects are equal because they have equal values. It differs from reference equality, which indicates that two object references are equal because they reference the same physical object. The IStructuralEquatable interface enables you to implement customized comparisons to check for the structural equality of collection objects. That is, you can create your own definition of structural equality and specify that this definition be used with a collection type that accepts the IStructuralEquatable interface. The interface has two members: <a class=\"xref\" href=\"system.collections.istructuralequatable#System_Collections_IStructuralEquatable_Equals_\" data-linktype=\"relative-path\">Equals</a>, which tests for equality by using a specified <a class=\"xref\" href=\"system.collections.iequalitycomparer\" data-linktype=\"relative-path\">IEqualityComparer</a> implementation, and <a class=\"xref\" href=\"system.collections.istructuralequatable#System_Collections_IStructuralEquatable_GetHashCode_\" data-linktype=\"relative-path\">GetHashCode</a>, which returns identical hash codes for objects that are equal.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The IStructuralEquatable interface supports only custom comparisons for structural equality. The <a class=\"xref\" href=\"system.collections.istructuralcomparable\" data-linktype=\"relative-path\">IStructuralComparable</a> interface supports custom structural comparisons for sorting and ordering.  </p>\n</div>\n<p> The .NET Framework also provides default equality comparers, which are returned by the <a class=\"xref\" href=\"system.collections.generic.equalitycomparer-1#System_Collections_Generic_EqualityComparer_1_Default_\" data-linktype=\"relative-path\">Default</a> and <a class=\"xref\" href=\"system.collections.structuralcomparisons#System_Collections_StructuralComparisons_StructuralEqualityComparer_\" data-linktype=\"relative-path\">StructuralEqualityComparer</a> properties. For more information, see the example.  </p>\n<p> The generic tuple classes (<a class=\"xref\" href=\"system.tuple-1\" data-linktype=\"relative-path\">Tuple&lt;T1&gt;</a>, <a class=\"xref\" href=\"system.tuple-2\" data-linktype=\"relative-path\">Tuple&lt;T1,T2&gt;</a>, <a class=\"xref\" href=\"system.tuple-3\" data-linktype=\"relative-path\">Tuple&lt;T1,T2,T3&gt;</a>, and so on) and the <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> class provide explicit implementations of the IStructuralEquatable interface. By casting (in C#) or converting (in Visual Basic) the current instance of an array or tuple to an IStructuralEquatable interface value and providing your <a class=\"xref\" href=\"system.collections.iequalitycomparer\" data-linktype=\"relative-path\">IEqualityComparer</a> implementation as an argument to the <a class=\"xref\" href=\"system.collections.istructuralequatable#System_Collections_IStructuralEquatable_Equals_\" data-linktype=\"relative-path\">Equals</a> method, you can define a custom equality comparison for the array or collection.</p>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_IStructuralEquatable_Equals_System_Object_System_Collections_IEqualityComparer_\" data-linktype=\"self-bookmark\">Equals(Object,IEqualityComparer)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether an object is structurally equal to the current instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_IStructuralEquatable_GetHashCode_System_Collections_IEqualityComparer_\" data-linktype=\"self-bookmark\">GetHashCode(IEqualityComparer)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a hash code for the current instance.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_IStructuralEquatable_Equals_System_Object_System_Collections_IEqualityComparer_\">\r\n    \r\n            <a id=\"System_Collections_IStructuralEquatable_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object,IEqualityComparer)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether an object is structurally equal to the current instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Equals (object other, System.Collections.IEqualityComparer comparer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>other</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to compare with the current instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>comparer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.iequalitycomparer\" data-linktype=\"relative-path\">IEqualityComparer</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that determines whether the current instance and <code>other</code> are equal.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the two objects are equal; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Equals method supports custom structural comparison of array and tuple objects. This method in turn calls the <code>comparer</code> object&#39;s <a class=\"xref\" href=\"system.collections.iequalitycomparer#System_Collections_IEqualityComparer_Equals_\" data-linktype=\"relative-path\">Equals</a> method to compare individual array elements or tuple components, starting with the first element or component. The individual calls to <a class=\"xref\" href=\"system.collections.iequalitycomparer#System_Collections_IEqualityComparer_Equals_\" data-linktype=\"relative-path\">Equals</a> end and the Equals method returns a value either when a method call returns <code>false</code> or after all array elements or tuple components have been compared.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The default equality comparer, <code>EqualityComparer&lt;Object&gt;.Default.Equals</code>, considers two <code>NaN</code> values to be equal. However, in some cases, you may want the comparison of <code>NaN</code> values for equality to return <code>false</code>, which indicates that the values cannot be compared. The following example defines a <code>NanComparer</code> class that implements the <a class=\"xref\" href=\"system.collections.istructuralequatable\" data-linktype=\"relative-path\">IStructuralEquatable</a> interface. It compares two <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> or two <a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a> values by using the equality operator. It passes values of any other type to the default equality comparer.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Collections.IStructuralEquatable#1\">Imports System.Collections\nImports System.Collections.Generic\n\nPublic Class NanComparer : Implements IEqualityComparer\n   Public Overloads Function Equals(x As Object, y As Object) As Boolean _\n          Implements IEqualityComparer.Equals\n      If TypeOf x Is Single Then\n         Return CSng(x) = CSng(y)\n      ElseIf TypeOf x Is Double Then\n         Return CDbl(x) = CDbl(y)\n      Else\n         Return EqualityComparer(Of Object).Default.Equals(x, y)\n      End If\n   End Function\n   \n   Public Overloads Function GetHashCode(obj As Object) As Integer _\n          Implements IEqualityComparer.GetHashCode\n      Return EqualityComparer(Of Object).Default.GetHashCode(obj)\n   End Function\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.IStructuralEquatable#1\">using System;\nusing System.Collections;\nusing System.Collections.Generic;\n\npublic class NanComparer : IEqualityComparer\n{\n   public new bool Equals(object x, object y)\n   {\n      if (x is float)\n         return (float) x == (float) y;\n      else if (x is double)\n         return (double) x == (double) y;\n      else\n         return EqualityComparer&lt;object&gt;.Default.Equals(x, y);\n   }\n   \n   public int GetHashCode(object obj)\n   {\n      return EqualityComparer&lt;object&gt;.Default.GetHashCode(obj);\n   }\n}\n</code></pre><p> The following example creates two identical 3-tuple objects whose components consist of three <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> values. The value of the second component is <a class=\"xref\" href=\"system.double#System_Double_NaN\" data-linktype=\"relative-path\">System.Double.NaN</a>. The example then calls the <a class=\"xref\" href=\"system.tuple-3#System_Tuple_3_Equals_\" data-linktype=\"relative-path\">Equals</a> method, and it calls the Equals method three times. The first time, it passes the default equality comparer that is returned by the <a class=\"xref\" href=\"system.collections.generic.equalitycomparer-1#System_Collections_Generic_EqualityComparer_1_Default_\" data-linktype=\"relative-path\">Default</a> property. The second time, it passes the default equality comparer that is returned by the <a class=\"xref\" href=\"system.collections.structuralcomparisons#System_Collections_StructuralComparisons_StructuralEqualityComparer_\" data-linktype=\"relative-path\">StructuralEqualityComparer</a> property. The third time, it passes the custom <code>NanComparer</code> object. As the output from the example shows, the first three method calls return <code>true</code>, whereas the fourth call returns <code>false</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Collections.IStructuralEquatable#2\">Module Example\n   Public Sub Main()\n      Dim t1 = Tuple.Create(12.3, Double.NaN, 16.4)\n      Dim t2 = Tuple.Create(12.3, Double.NaN, 16.4)\n      \n      &#39; Call default Equals method.\n      Console.WriteLine(t1.Equals(t2))\n      \n      Dim equ As IStructuralEquatable = t1\n      &#39; Call IStructuralEquatable.Equals using default comparer.\n      Console.WriteLine(equ.Equals(t2, EqualityComparer(Of Object).Default))\n      \n      &#39; Call IStructuralEquatable.Equals using \n      &#39; StructuralComparisons.StructuralEqualityComparer.\n      Console.WriteLine(equ.Equals(t2, \n                        StructuralComparisons.StructuralEqualityComparer))\n      \n      &#39; Call IStructuralEquatable.Equals using custom comparer.\n      Console.WriteLine(equ.Equals(t2, New NanComparer))\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       True\n&#39;       True\n&#39;       True\n&#39;       False\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.IStructuralEquatable#2\">public class Example\n{\n   public static void Main()\n   {\n      var t1 = Tuple.Create(12.3, Double.NaN, 16.4);\n      var t2 = Tuple.Create(12.3, Double.NaN, 16.4);\n      \n      // Call default Equals method.\n      Console.WriteLine(t1.Equals(t2));\n      \n      IStructuralEquatable equ = t1;\n      // Call IStructuralEquatable.Equals using default comparer.\n      Console.WriteLine(equ.Equals(t2, EqualityComparer&lt;object&gt;.Default));\n      \n      // Call IStructuralEquatable.Equals using \n      // StructuralComparisons.StructuralEqualityComparer.\n      Console.WriteLine(equ.Equals(t2, \n                        StructuralComparisons.StructuralEqualityComparer));\n      \n      // Call IStructuralEquatable.Equals using custom comparer.\n      Console.WriteLine(equ.Equals(t2, new NanComparer()));\n   }\n}\n// The example displays the following output:\n//       True\n//       True\n//       True\n//       False\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_IStructuralEquatable_GetHashCode_System_Collections_IEqualityComparer_\">\r\n    \r\n            <a id=\"System_Collections_IStructuralEquatable_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode(IEqualityComparer)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a hash code for the current instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int GetHashCode (System.Collections.IEqualityComparer comparer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>comparer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.iequalitycomparer\" data-linktype=\"relative-path\">IEqualityComparer</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that computes the hash code of the current object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The hash code for the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Implement this method to return customized hash codes for collection objects that correspond to the customized comparison for structural equality provided by the <a class=\"xref\" href=\"system.collections.istructuralequatable#System_Collections_IStructuralEquatable_Equals_\" data-linktype=\"relative-path\">Equals</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Collections.IStructuralEquatable.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Collections.IStructuralEquatable.yml\">\r\n<meta name=\"APIName\" content=\"System.Collections.IStructuralEquatable\">\r\n<meta name=\"APIName\" content=\"System.Collections.IStructuralEquatable.Equals\">\r\n<meta name=\"APIName\" content=\"System.Collections.IStructuralEquatable.GetHashCode\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"3da2b822-6709-ef08-cb39-e6f4d418cf77\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Collections\\IStructuralEquatable.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines methods to support the comparison of objects for structural equality.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Collections/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Collections.IStructuralEquatable\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Collections.IStructuralEquatable.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Collections.IStructuralEquatable.yml","open_to_public_contributors":true,"api_name":["System.Collections.IStructuralEquatable","System.Collections.IStructuralEquatable.Equals","System.Collections.IStructuralEquatable.GetHashCode"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Collections.IStructuralEquatable","System::Collections::IStructuralEquatable","System.Collections.IStructuralEquatable.Equals","System::Collections::IStructuralEquatable::Equals","System.Collections.IStructuralEquatable.GetHashCode","System::Collections::IStructuralEquatable::GetHashCode"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"3da2b822-6709-ef08-cb39-e6f4d418cf77","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Collections\\IStructuralEquatable.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Collections/IStructuralEquatable.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IStructuralEquatable interface | Microsoft Docs","_op_ogTitle":"IStructuralEquatable interface","description":"Defines methods to support the comparison of objects for structural equality.\n","toc_asset_id":"_splitted/System.Collections/toc.json","toc_rel":"_splitted/System.Collections/toc.json","source_url":"","ms.assetid":"System.Collections.IStructuralEquatable","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.collections.istructuralequatable","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.collections.istructuralequatable","fileRelativePath":"System.Collections.IStructuralEquatable.html"},"themesRelativePathToOutputRoot":"_themes/"}