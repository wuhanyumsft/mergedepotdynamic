{"content":"    \r\n    <h1 id=\"System_AttributeUsageAttribute\">\r\n      <span class=\"lang-csharp\">AttributeUsageAttribute</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Specifies the usage of another attribute class. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.AttributeUsage(System.AttributeTargets.Class, Inherited=true)]\n[System.Runtime.InteropServices.ComVisible(true)]\npublic sealed class AttributeUsageAttribute : Attribute</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">System.Attribute</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">AttributeUsageAttribute</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(Assembly,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(Assembly,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(MemberInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(MemberInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(Module,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(Module,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(ParameterInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(ParameterInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_\" data-linktype=\"relative-path\">GetCustomAttributes(Module)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Module,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(Module,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Module,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefaultAttribute\" data-linktype=\"relative-path\">IsDefaultAttribute()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">IsDefined(Assembly,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(Assembly,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">IsDefined(MemberInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(MemberInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">IsDefined(Module,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(Module,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">IsDefined(ParameterInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(ParameterInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_Match_System_Object_\" data-linktype=\"relative-path\">Match(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetIDsOfNames_System_Guid__System_IntPtr_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetTypeInfo_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.GetTypeInfo(UInt32,UInt32,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetTypeInfoCount_System_UInt32__\" data-linktype=\"relative-path\">_Attribute.GetTypeInfoCount(UInt32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_Invoke_System_UInt32_System_Guid__System_UInt32_System_Int16_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId\" data-linktype=\"relative-path\">TypeId</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>When you are defining your own attribute class, you can control the manner in which it is used by placing an AttributeUsageAttribute on your attribute class. The indicated attribute class must derive from <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a>, either directly or indirectly.  </p>\n<p> Attribute classes have positional and named parameters. Each public constructor for an attribute class defines a valid sequence of positional parameters for that class. Named parameters are defined by the non-static, public, and read-write fields or properties of the attribute class.  </p>\n<p> The three properties of AttributeUsageAttribute are set by defining the following parameters:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.attributeusageattribute#System_AttributeUsageAttribute_ValidOn_\" data-linktype=\"relative-path\">ValidOn</a>  \n\n<p>This positional parameter specifies the program elements that the indicated attribute can be placed on. The set of all possible elements that you can place an attribute on is listed in the <a class=\"xref\" href=\"system.attributetargets\" data-linktype=\"relative-path\">AttributeTargets</a> enumeration. You can combine several <a class=\"xref\" href=\"system.attributetargets\" data-linktype=\"relative-path\">AttributeTargets</a> values using a bitwise OR operation to get the desired combination of valid program elements.  </p>\n</li>\n<li><a class=\"xref\" href=\"system.attributeusageattribute#System_AttributeUsageAttribute_AllowMultiple_\" data-linktype=\"relative-path\">AllowMultiple</a>  \n\n<p>This named parameter specifies whether the indicated attribute can be specified more than once for a given program element.  </p>\n</li>\n<li><a class=\"xref\" href=\"system.attributeusageattribute#System_AttributeUsageAttribute_Inherited_\" data-linktype=\"relative-path\">Inherited</a>  \n\n<p>This named parameter specifies whether the indicated attribute can be inherited by derived classes and overriding members.  </p>\n<p>For more information about using attributes, see <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a> and <a href=\"../Topic/Extending%20Metadata%20Using%20Attributes.md\" data-linktype=\"relative-path\">Attributes</a>.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AttributeUsageAttribute__ctor_System_AttributeTargets_\" data-linktype=\"self-bookmark\">AttributeUsageAttribute(AttributeTargets)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.attributeusageattribute\" data-linktype=\"relative-path\">AttributeUsageAttribute</a> class with the specified list of <a class=\"xref\" href=\"system.attributetargets\" data-linktype=\"relative-path\">AttributeTargets</a>, the <span class=\"xref\">stem.AttributeUsageAttribute.AllowMultiple*</span> value, and the <span class=\"xref\">stem.AttributeUsageAttribute.Inherited*</span> value.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AttributeUsageAttribute_AllowMultiple\" data-linktype=\"self-bookmark\">AllowMultiple</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a Boolean value indicating whether more than one instance of the indicated attribute can be specified for a single program element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AttributeUsageAttribute_Inherited\" data-linktype=\"self-bookmark\">Inherited</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that determines whether the indicated attribute is inherited by derived classes and overriding members.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AttributeUsageAttribute_ValidOn\" data-linktype=\"self-bookmark\">ValidOn</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a set of values identifying which program elements that the indicated attribute can be applied to.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_AttributeUsageAttribute__ctor_System_AttributeTargets_\">\r\n    \r\n            <a id=\"System_AttributeUsageAttribute__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AttributeUsageAttribute(AttributeTargets)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.attributeusageattribute\" data-linktype=\"relative-path\">AttributeUsageAttribute</a> class with the specified list of <a class=\"xref\" href=\"system.attributetargets\" data-linktype=\"relative-path\">AttributeTargets</a>, the <span class=\"xref\">stem.AttributeUsageAttribute.AllowMultiple*</span> value, and the <span class=\"xref\">stem.AttributeUsageAttribute.Inherited*</span> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public AttributeUsageAttribute (AttributeTargets validOn);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>validOn</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.attributetargets\" data-linktype=\"relative-path\">AttributeTargets</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The set of values combined using a bitwise OR operation to indicate which program elements are valid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can combine several <a class=\"xref\" href=\"system.attributetargets\" data-linktype=\"relative-path\">AttributeTargets</a> values using a bitwise OR operation to get the desired combination of valid program elements.  </p>\n<p> For default property values, see the <a class=\"xref\" href=\"system.attributeusageattribute#System_AttributeUsageAttribute_ValidOn_\" data-linktype=\"relative-path\">ValidOn</a>, <a class=\"xref\" href=\"system.attributeusageattribute#System_AttributeUsageAttribute_AllowMultiple_\" data-linktype=\"relative-path\">AllowMultiple</a>, and <a class=\"xref\" href=\"system.attributeusageattribute#System_AttributeUsageAttribute_Inherited_\" data-linktype=\"relative-path\">Inherited</a> properties.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The definition of the DispId attribute illustrates the use of a bitwise OR operation to combine several <a class=\"xref\" href=\"system.attributetargets\" data-linktype=\"relative-path\">AttributeTargets</a> values.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1\">namespace InteropServices\n{\n   [AttributeUsage(AttributeTargets::Method|\n   AttributeTargets::Field|\n   AttributeTargets::Property)\n   ]\n   public ref class DispIdAttribute: public Attribute\n   {\n   public:\n      DispIdAttribute( int value )\n      {\n         // . . .\n      }\n\n      property int Value \n      {\n         int get()\n         {\n            // . . .\n            return 0;\n         }\n      }\n   };\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1\">Namespace System.Runtime.InteropServices\n    \n    &lt;AttributeUsage(AttributeTargets.Method _\n        Or AttributeTargets.Field _\n        Or AttributeTargets.Property)&gt; _    \n    Public Class DispIdAttribute    \n        Inherits System.Attribute\n        \n        Public Sub New(value As Integer)\n            &#39; . . .\n        End Sub\n        \n        Public ReadOnly Property Value() As Integer\n            Get\n                &#39; . . .\n                Return 0\n            End Get\n        End Property\n    End Class\nEnd Namespace\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1\">namespace System.Runtime.InteropServices\n{\n   [AttributeUsage(AttributeTargets.Method | AttributeTargets.Field |\n    AttributeTargets.Property)]\n   public class DispIdAttribute: System.Attribute\n   {\n      public DispIdAttribute(int value) {\n        // . . .\n      }\n      \n      public int Value {\n         get {\n            // . . .\n            return 0;\n         }\n      }\n   }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_AttributeUsageAttribute_AllowMultiple\">\r\n    \r\n            <a id=\"System_AttributeUsageAttribute_AllowMultiple_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowMultiple</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a Boolean value indicating whether more than one instance of the indicated attribute can be specified for a single program element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AllowMultiple { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if more than one instance is allowed to be specified; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An attribute that can be specified more than once for a program element is called a multi-use attribute. An attribute that can be specified only once is called a single-use attribute.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_AttributeUsageAttribute_Inherited\">\r\n    \r\n            <a id=\"System_AttributeUsageAttribute_Inherited_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Inherited</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that determines whether the indicated attribute is inherited by derived classes and overriding members.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Inherited { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the attribute can be inherited by derived classes and overriding members; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Inherited property determines:  </p>\n<ul>\n<li><p>Whether classes derived from a base class tagged with the attribute to which the <a class=\"xref\" href=\"system.attributeusageattribute\" data-linktype=\"relative-path\">AttributeUsageAttribute</a> attribute is applied inherit that attribute.  </p>\n</li>\n<li><p>Whether methods of derived classes that override a base class method tagged with the attribute to which the <a class=\"xref\" href=\"system.attributeusageattribute\" data-linktype=\"relative-path\">AttributeUsageAttribute</a> attribute is applied inherit that attribute.  (If a class inherits a base class member, it also inherits any attributes applied to that member.)</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example illustrates the difference between an attribute to which an <a class=\"xref\" href=\"system.attributeusageattribute\" data-linktype=\"relative-path\">AttributeUsageAttribute</a> attribute with an Inherited property value of <code>true</code> is applied and one to which  <a class=\"xref\" href=\"system.attributeusageattribute\" data-linktype=\"relative-path\">AttributeUsageAttribute</a> attribute with an Inherited property value of <code>true</code> is applied . The example defines two attributes, <code>InheritedAttribute</code> and <code>NotInheritedAttribute</code>. Both attributes can apply to classes and methods. Because the Inherited property of the <a class=\"xref\" href=\"system.attributeusageattribute\" data-linktype=\"relative-path\">AttributeUsageAttribute</a> attribute applied to <code>InheritedAttribute</code> is <code>true</code>, it is inherited by derived classes and the members of derived classes that override the base class method.  On the other hand, because the Inherited property of the <a class=\"xref\" href=\"system.attributeusageattribute\" data-linktype=\"relative-path\">AttributeUsageAttribute</a> attribute applied to <code>NotInheritedAttribute</code> is <code>false</code>, it is not inherited by derived classes and the members of derived classes that override the base class method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.AttributeUsageAttribute.Inherited#1\">&lt;AttributeUsage(AttributeTargets.Class Or AttributeTargets.Method _ \n                Or AttributeTargets.Property Or AttributeTargets.Field, \n                Inherited := True)&gt;\nPublic Class InheritedAttribute : Inherits Attribute\nEnd Class\n\n&lt;AttributeUsage(AttributeTargets.Class Or AttributeTargets.Method _\n                Or AttributeTargets.Property Or AttributeTargets.Field, \n                Inherited := False)&gt;\nPublic Class NotInheritedAttribute : Inherits Attribute\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"System.AttributeUsageAttribute.Inherited#1\">[AttributeUsage(AttributeTargets.Class | AttributeTargets.Method |  \n                AttributeTargets.Property | AttributeTargets.Field, \n                Inherited = true)]\npublic class InheritedAttribute : Attribute\n{}\n\n[AttributeUsage(AttributeTargets.Class | AttributeTargets.Method |\n                AttributeTargets.Property | AttributeTargets.Field, \n                Inherited = false)]\npublic class NotInheritedAttribute : Attribute\n{} \n</code></pre><p> The example then defines two  base classes. The first, <code>BaseA</code>, has a single method, <code>MethodA</code>.  The second, <code>BaseB</code>, has a single method, <code>MethodB</code>. <code>BaseA</code> and <code>MethodA</code> are tagged with the <code>InheritedAttribute</code> attribute, and <code>BaseB</code> and <code>MethodB</code> are tagged with the <code>NotInheritedAttribute</code> attribute. <code>DerivedA</code> inherits from <code>BaseA</code> and overrides its <code>MethodA</code> method. <code>DerivedB</code> inherits from <code>BaseB</code> and overrides its <code>MethodB</code> method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.AttributeUsageAttribute.Inherited#2\">Imports System.Reflection\n\n&lt;InheritedAttribute&gt; Public Class BaseA\n   &lt;InheritedAttribute&gt; Public Overridable Sub MethodA()   \n   End Sub\nEnd Class\n\nPublic Class DerivedA : Inherits BaseA\n   Public Overrides Sub MethodA\n   End Sub\nEnd Class \n\n&lt;NotInheritedAttribute&gt; Public Class BaseB\n   &lt;NotInheritedAttribute&gt; Public Overridable Sub MethodB()   \n   End Sub\nEnd Class\n\nPublic Class DerivedB : Inherits BaseB\n   Public Overrides Sub MethodB\n   End Sub\nEnd Class \n\nModule Example\n   Public Sub Main()\n      Dim typeA As Type = GetType(DerivedA)\n      Console.WriteLine(&quot;DerivedA has Inherited attribute: {0}&quot;, \n                        typeA.GetCustomAttributes(GetType(InheritedAttribute), True).Length &gt; 0) \n      Dim memberA As MethodInfo = typeA.GetMethod(&quot;MethodA&quot;)\n      Console.WriteLine(&quot;DerivedA.MemberA has Inherited attribute: {0}&quot;, \n                        memberA.GetCustomAttributes(GetType(InheritedAttribute), True).Length &gt; 0) \n      Console.WriteLine()\n      \n      Dim typeB As Type = GetType(DerivedB)\n      Console.WriteLine(&quot;DerivedB has Inherited attribute: {0}&quot;, \n                        typeB.GetCustomAttributes(GetType(InheritedAttribute), True).Length &gt; 0) \n      Dim memberB As MethodInfo = typeB.GetMethod(&quot;MethodB&quot;)\n      Console.WriteLine(&quot;DerivedB.MemberB has Inherited attribute: {0}&quot;, \n                        memberB.GetCustomAttributes(GetType(InheritedAttribute), True).Length &gt; 0) \n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       DerivedA has Inherited attribute: True\n&#39;       DerivedA.MemberA has Inherited attribute: True\n&#39;       \n&#39;       DerivedB has Inherited attribute: False\n&#39;       DerivedB.MemberB has Inherited attribute: False\n</code></pre><pre><code class=\"lang-cs\" name=\"System.AttributeUsageAttribute.Inherited#2\">using System;\nusing System.Reflection;\n\n[InheritedAttribute]\npublic class BaseA\n{\n   [InheritedAttribute] \n   public virtual void MethodA()   \n   {}\n}\n\npublic class DerivedA : BaseA\n{\n   public override void MethodA()\n   {}\n} \n\n[NotInheritedAttribute] \npublic class BaseB\n{\n   [NotInheritedAttribute] \n   public virtual void MethodB()   \n   {}\n}\n\npublic class DerivedB : BaseB\n{\n   public override void MethodB()\n   {}\n}\n\npublic class Example\n{\n   public static void Main()\n   {\n      Type typeA = typeof(DerivedA);\n      Console.WriteLine(&quot;DerivedA has Inherited attribute: {0}&quot;, \n                        typeA.GetCustomAttributes(typeof(InheritedAttribute), true).Length &gt; 0); \n      MethodInfo memberA = typeA.GetMethod(&quot;MethodA&quot;);\n      Console.WriteLine(&quot;DerivedA.MemberA has Inherited attribute: {0}<br>&quot;, \n                        memberA.GetCustomAttributes(typeof(InheritedAttribute), true).Length &gt; 0); \n      \n      Type typeB = typeof(DerivedB);\n      Console.WriteLine(&quot;DerivedB has Inherited attribute: {0}&quot;, \n                        typeB.GetCustomAttributes(typeof(InheritedAttribute), true).Length &gt; 0); \n      MethodInfo memberB = typeB.GetMethod(&quot;MethodB&quot;);\n      Console.WriteLine(&quot;DerivedB.MemberB has Inherited attribute: {0}&quot;, \n                        memberB.GetCustomAttributes(typeof(InheritedAttribute), true).Length &gt; 0); \n   }\n}\n// The example displays the following output:\n//       DerivedA has Inherited attribute: True\n//       DerivedA.MemberA has Inherited attribute: True\n//       \n//       DerivedB has Inherited attribute: False\n//       DerivedB.MemberB has Inherited attribute: False\n</code></pre><p> As the output from the example shows, <code>DerivedA</code> and <code>DerivedA.MethodA</code> inherit the <code>InheritedAttribute</code> attribute, but <code>DerivedB</code> and <code>DerivedB.MethodB</code> do not inherit the <code>NotInheritedAttribute</code> attribute.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_AttributeUsageAttribute_ValidOn\">\r\n    \r\n            <a id=\"System_AttributeUsageAttribute_ValidOn_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidOn</div>        \r\n          </div>\r\n    \r\n            <p>Gets a set of values identifying which program elements that the indicated attribute can be applied to.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public AttributeTargets ValidOn { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.attributetargets\" data-linktype=\"relative-path\">AttributeTargets</a></div>\r\n                  </div>\r\n                  <p>One or several <a class=\"xref\" href=\"system.attributetargets\" data-linktype=\"relative-path\">AttributeTargets</a> values. The default is <code>All</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.AttributeUsageAttribute.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.AttributeUsageAttribute.yml\">\r\n<meta name=\"APIName\" content=\"System.AttributeUsageAttribute\">\r\n<meta name=\"APIName\" content=\"System.AttributeUsageAttribute..ctor\">\r\n<meta name=\"APIName\" content=\"System.AttributeUsageAttribute.AllowMultiple\">\r\n<meta name=\"APIName\" content=\"System.AttributeUsageAttribute.Inherited\">\r\n<meta name=\"APIName\" content=\"System.AttributeUsageAttribute.ValidOn\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"00597f0e-540c-2822-6c70-ed7fe02f5f5d\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies the usage of another attribute class. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.AttributeUsageAttribute\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.AttributeUsageAttribute.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.AttributeUsageAttribute.yml","open_to_public_contributors":true,"api_name":["System.AttributeUsageAttribute","System.AttributeUsageAttribute..ctor","System.AttributeUsageAttribute.AllowMultiple","System.AttributeUsageAttribute.Inherited","System.AttributeUsageAttribute.ValidOn"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.AttributeUsageAttribute","System::AttributeUsageAttribute","System.AttributeUsageAttribute.#ctor","System::AttributeUsageAttribute::#ctor","System.AttributeUsageAttribute.AllowMultiple","System::AttributeUsageAttribute::AllowMultiple","System.AttributeUsageAttribute.Inherited","System::AttributeUsageAttribute::Inherited","System.AttributeUsageAttribute.ValidOn","System::AttributeUsageAttribute::ValidOn"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"00597f0e-540c-2822-6c70-ed7fe02f5f5d","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System/AttributeUsageAttribute.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"AttributeUsageAttribute class | Microsoft Docs","_op_ogTitle":"AttributeUsageAttribute class","description":"Specifies the usage of another attribute class. This class cannot be inherited.\n","toc_asset_id":"_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.AttributeUsageAttribute","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.attributeusageattribute","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.attributeusageattribute","fileRelativePath":"System.AttributeUsageAttribute.html"},"themesRelativePathToOutputRoot":"_themes/"}