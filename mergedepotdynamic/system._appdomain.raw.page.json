{"content":"    \r\n    <h1 id=\"System__AppDomain\">\r\n      <span class=\"lang-csharp\">_AppDomain</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Exposes the public members of the <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a> class to unmanaged code.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.CLSCompliant(false)]\n[System.Runtime.InteropServices.ComVisible(true)]\n[System.Runtime.InteropServices.Guid(&quot;05F696DC-2B29-3663-AD8B-C4389CF2A713&quot;)]\n[System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\npublic interface _AppDomain</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This interface preserves the vtable order of the <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">System.AppDomain</a> class members that can be accessed by unmanaged COM objects.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_BaseDirectory\" data-linktype=\"self-bookmark\">BaseDirectory</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.BaseDirectory*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_DynamicDirectory\" data-linktype=\"self-bookmark\">DynamicDirectory</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.DynamicDirectory*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_Evidence\" data-linktype=\"self-bookmark\">Evidence</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.Evidence*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_FriendlyName\" data-linktype=\"self-bookmark\">FriendlyName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.FriendlyName*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_RelativeSearchPath\" data-linktype=\"self-bookmark\">RelativeSearchPath</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.RelativeSearchPath*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_ShadowCopyFiles\" data-linktype=\"self-bookmark\">ShadowCopyFiles</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.ShadowCopyFiles*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_AppendPrivatePath_System_String_\" data-linktype=\"self-bookmark\">AppendPrivatePath(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.AppendPrivatePath*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_ClearPrivatePath\" data-linktype=\"self-bookmark\">ClearPrivatePath()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.ClearPrivatePath*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_ClearShadowCopyPath\" data-linktype=\"self-bookmark\">ClearShadowCopyPath()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.ClearShadowCopyPath*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_CreateInstance_System_String_System_String_\" data-linktype=\"self-bookmark\">CreateInstance(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.CreateInstance*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_CreateInstance_System_String_System_String_System_Object___\" data-linktype=\"self-bookmark\">CreateInstance(String,String,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the [AppDomain.CreateInstance(String,â€‚String,â€‚Object&lt;xref href=&quot;stem.AppDomain.CreateInstance%28System.String%2CSystem.String%2CSystem.Object%5B%5D%29&quot;&gt; method overload.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_CreateInstance_System_String_System_String_System_Boolean_System_Reflection_BindingFlags_System_Reflection_Binder_System_Object___System_Globalization_CultureInfo_System_Object___System_Security_Policy_Evidence_\" data-linktype=\"self-bookmark\">CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the [AppDomain.CreateInstance(String,â€‚String,â€‚Boolean,â€‚BindingFlags,â€‚Binder,â€‚Object[],â€‚CultureInfo,â€‚Object&lt;xref href=&quot;stem.AppDomain.CreateInstance%28System.String%2CSystem.String%2CSystem.Boolean%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%2CSystem.Security.Policy.Evidence%29&quot;&gt; method overload.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_CreateInstanceFrom_System_String_System_String_\" data-linktype=\"self-bookmark\">CreateInstanceFrom(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.CreateInstanceFrom(System.String,System.String)</span> method overload.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_CreateInstanceFrom_System_String_System_String_System_Object___\" data-linktype=\"self-bookmark\">CreateInstanceFrom(String,String,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the [AppDomain.CreateInstanceFrom(String,â€‚String,â€‚Object&lt;xref href=&quot;stem.AppDomain.CreateInstanceFrom%28System.String%2CSystem.String%2CSystem.Object%5B%5D%29&quot;&gt; method overload.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_CreateInstanceFrom_System_String_System_String_System_Boolean_System_Reflection_BindingFlags_System_Reflection_Binder_System_Object___System_Globalization_CultureInfo_System_Object___System_Security_Policy_Evidence_\" data-linktype=\"self-bookmark\">CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the [AppDomain.CreateInstanceFrom(String,â€‚String,â€‚Boolean,â€‚BindingFlags,â€‚Binder,â€‚Object[],â€‚CultureInfo,â€‚Object&lt;xref href=&quot;stem.AppDomain.CreateInstanceFrom%28System.String%2CSystem.String%2CSystem.Boolean%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%2CSystem.Security.Policy.Evidence%29&quot;&gt; method overload.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_\" data-linktype=\"self-bookmark\">DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)</span> method overload.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_System_Security_Policy_Evidence_\" data-linktype=\"self-bookmark\">DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)</span> method overload.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_System_String_\" data-linktype=\"self-bookmark\">DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)</span> method overload.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_System_String_System_Security_Policy_Evidence_\" data-linktype=\"self-bookmark\">DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)</span> method overload.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_System_Security_PermissionSet_System_Security_PermissionSet_System_Security_PermissionSet_\" data-linktype=\"self-bookmark\">DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)</span> method overload.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_System_Security_Policy_Evidence_System_Security_PermissionSet_System_Security_PermissionSet_System_Security_PermissionSet_\" data-linktype=\"self-bookmark\">DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)</span> method overload.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_System_String_System_Security_PermissionSet_System_Security_PermissionSet_System_Security_PermissionSet_\" data-linktype=\"self-bookmark\">DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)</span> method overload.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_System_String_System_Security_Policy_Evidence_System_Security_PermissionSet_System_Security_PermissionSet_System_Security_PermissionSet_\" data-linktype=\"self-bookmark\">DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)</span> method overload.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_System_String_System_Security_Policy_Evidence_System_Security_PermissionSet_System_Security_PermissionSet_System_Security_PermissionSet_System_Boolean_\" data-linktype=\"self-bookmark\">DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)</span> method overload.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_DoCallBack_System_CrossAppDomainDelegate_\" data-linktype=\"self-bookmark\">DoCallBack(CrossAppDomainDelegate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.DoCallBack*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the inherited <span class=\"xref\">stem.Object.Equals*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_ExecuteAssembly_System_String_\" data-linktype=\"self-bookmark\">ExecuteAssembly(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.ExecuteAssembly(System.String)</span> method overload.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_ExecuteAssembly_System_String_System_Security_Policy_Evidence_\" data-linktype=\"self-bookmark\">ExecuteAssembly(String,Evidence)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)</span> method overload.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_ExecuteAssembly_System_String_System_Security_Policy_Evidence_System_String___\" data-linktype=\"self-bookmark\">ExecuteAssembly(String,Evidence,String[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the [AppDomain.ExecuteAssembly(String,â€‚Evidence,â€‚String&lt;xref href=&quot;stem.AppDomain.ExecuteAssembly%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.String%5B%5D%29&quot;&gt; method overload.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_GetAssemblies\" data-linktype=\"self-bookmark\">GetAssemblies()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.GetAssemblies*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_GetData_System_String_\" data-linktype=\"self-bookmark\">GetData(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.GetData*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the inherited <span class=\"xref\">stem.Object.GetHashCode*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_GetIDsOfNames_System_Guid__System_IntPtr_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"self-bookmark\">GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Maps a set of names to a corresponding set of dispatch identifiers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_GetLifetimeService\" data-linktype=\"self-bookmark\">GetLifetimeService()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the inherited <span class=\"xref\">stem.MarshalByRefObject.GetLifetimeService*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_GetType\" data-linktype=\"self-bookmark\">GetType()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.GetType*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_GetTypeInfo_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"self-bookmark\">GetTypeInfo(UInt32,UInt32,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the type information for an object, which can then be used to get the type information for an interface.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_GetTypeInfoCount_System_UInt32__\" data-linktype=\"self-bookmark\">GetTypeInfoCount(UInt32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_InitializeLifetimeService\" data-linktype=\"self-bookmark\">InitializeLifetimeService()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.InitializeLifetimeService*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_Invoke_System_UInt32_System_Guid__System_UInt32_System_Int16_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_\" data-linktype=\"self-bookmark\">Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides access to properties and methods exposed by an object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_Load_System_Byte___\" data-linktype=\"self-bookmark\">Load(Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the [AppDomain.Load(Byte&lt;xref href=&quot;stem.AppDomain.Load%28System.Byte%5B%5D%29&quot;&gt; method overload.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_Load_System_Reflection_AssemblyName_\" data-linktype=\"self-bookmark\">Load(AssemblyName)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.Load(System.Reflection.AssemblyName)</span> method overload.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_Load_System_String_\" data-linktype=\"self-bookmark\">Load(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.Load(System.String)</span> method overload.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_Load_System_Byte___System_Byte___\" data-linktype=\"self-bookmark\">Load(Byte[],Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the [AppDomain.Load(Byte[],â€‚Byte&lt;xref href=&quot;stem.AppDomain.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%29&quot;&gt; method overload.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_Load_System_Reflection_AssemblyName_System_Security_Policy_Evidence_\" data-linktype=\"self-bookmark\">Load(AssemblyName,Evidence)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)</span> method overload.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_Load_System_String_System_Security_Policy_Evidence_\" data-linktype=\"self-bookmark\">Load(String,Evidence)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.Load(System.String,System.Security.Policy.Evidence)</span> method overload.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_Load_System_Byte___System_Byte___System_Security_Policy_Evidence_\" data-linktype=\"self-bookmark\">Load(Byte[],Byte[],Evidence)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the [AppDomain.Load(Byte[],â€‚Byte&lt;xref href=&quot;stem.AppDomain.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29&quot;&gt; method overload.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_SetAppDomainPolicy_System_Security_Policy_PolicyLevel_\" data-linktype=\"self-bookmark\">SetAppDomainPolicy(PolicyLevel)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.SetAppDomainPolicy*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_SetCachePath_System_String_\" data-linktype=\"self-bookmark\">SetCachePath(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.SetCachePath*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_SetData_System_String_System_Object_\" data-linktype=\"self-bookmark\">SetData(String,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.SetData*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_SetPrincipalPolicy_System_Security_Principal_PrincipalPolicy_\" data-linktype=\"self-bookmark\">SetPrincipalPolicy(PrincipalPolicy)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.SetPrincipalPolicy*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_SetShadowCopyPath_System_String_\" data-linktype=\"self-bookmark\">SetShadowCopyPath(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.SetShadowCopyPath*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_SetThreadPrincipal_System_Security_Principal_IPrincipal_\" data-linktype=\"self-bookmark\">SetThreadPrincipal(IPrincipal)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.SetThreadPrincipal*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.ToString*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_AssemblyLoad\" data-linktype=\"self-bookmark\">AssemblyLoad</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_AssemblyLoad\" data-linktype=\"relative-path\">AssemblyLoad</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_AssemblyResolve\" data-linktype=\"self-bookmark\">AssemblyResolve</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_AssemblyResolve\" data-linktype=\"relative-path\">AssemblyResolve</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_DomainUnload\" data-linktype=\"self-bookmark\">DomainUnload</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_DomainUnload\" data-linktype=\"relative-path\">DomainUnload</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_ProcessExit\" data-linktype=\"self-bookmark\">ProcessExit</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_ProcessExit\" data-linktype=\"relative-path\">ProcessExit</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_ResourceResolve\" data-linktype=\"self-bookmark\">ResourceResolve</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_ResourceResolve\" data-linktype=\"relative-path\">ResourceResolve</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_TypeResolve\" data-linktype=\"self-bookmark\">TypeResolve</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_TypeResolve\" data-linktype=\"relative-path\">TypeResolve</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System__AppDomain_UnhandledException\" data-linktype=\"self-bookmark\">UnhandledException</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides COM objects with version-independent access to the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_UnhandledException\" data-linktype=\"relative-path\">UnhandledException</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_BaseDirectory\">\r\n    \r\n            <a id=\"System__AppDomain_BaseDirectory_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BaseDirectory</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.BaseDirectory*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string BaseDirectory { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The base directory that the assembly resolver uses to probe for assemblies.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_BaseDirectory_\" data-linktype=\"relative-path\">BaseDirectory</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_DynamicDirectory\">\r\n    \r\n            <a id=\"System__AppDomain_DynamicDirectory_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DynamicDirectory</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.DynamicDirectory*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string DynamicDirectory { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Get the directory that the assembly resolver uses to probe for dynamically-created assemblies.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_DynamicDirectory_\" data-linktype=\"relative-path\">DynamicDirectory</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_Evidence\">\r\n    \r\n            <a id=\"System__AppDomain_Evidence_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Evidence</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.Evidence*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Policy.Evidence Evidence { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></div>\r\n                  </div>\r\n                  <p>Gets the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> associated with this application domain that is used as input to the security policy.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_Evidence_\" data-linktype=\"relative-path\">Evidence</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_FriendlyName\">\r\n    \r\n            <a id=\"System__AppDomain_FriendlyName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FriendlyName</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.FriendlyName*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string FriendlyName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The friendly name of this application domain.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_FriendlyName_\" data-linktype=\"relative-path\">FriendlyName</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_RelativeSearchPath\">\r\n    \r\n            <a id=\"System__AppDomain_RelativeSearchPath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RelativeSearchPath</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.RelativeSearchPath*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string RelativeSearchPath { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The path under the base directory where the assembly resolver should probe for private assemblies.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_RelativeSearchPath_\" data-linktype=\"relative-path\">RelativeSearchPath</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_ShadowCopyFiles\">\r\n    \r\n            <a id=\"System__AppDomain_ShadowCopyFiles_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShadowCopyFiles</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.ShadowCopyFiles*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShadowCopyFiles { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the application domain is configured to shadow copy files; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_ShadowCopyFiles_\" data-linktype=\"relative-path\">ShadowCopyFiles</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_AppendPrivatePath_System_String_\">\r\n    \r\n            <a id=\"System__AppDomain_AppendPrivatePath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AppendPrivatePath(String)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.AppendPrivatePath*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AppendPrivatePath (string path);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the directory to be appended to the private path.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_AppendPrivatePath_\" data-linktype=\"relative-path\">AppendPrivatePath</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_ClearPrivatePath\">\r\n    \r\n            <a id=\"System__AppDomain_ClearPrivatePath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClearPrivatePath()</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.ClearPrivatePath*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ClearPrivatePath ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_ClearPrivatePath_\" data-linktype=\"relative-path\">ClearPrivatePath</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_ClearShadowCopyPath\">\r\n    \r\n            <a id=\"System__AppDomain_ClearShadowCopyPath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClearShadowCopyPath()</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.ClearShadowCopyPath*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ClearShadowCopyPath ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_ClearShadowCopyPath_\" data-linktype=\"relative-path\">ClearShadowCopyPath</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_CreateInstance_System_String_System_String_\">\r\n    \r\n            <a id=\"System__AppDomain_CreateInstance_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateInstance(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.CreateInstance*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The display name of the assembly. See <span class=\"xref\">stem.Reflection.Assembly.FullName*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <span class=\"xref\">stem.Type.FullName*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.objecthandle\" data-linktype=\"relative-path\">ObjectHandle</a></div>\r\n                  </div>\r\n                  <p>An object that is a wrapper for the new instance specified by <code>typeName</code>. The return value needs to be unwrapped to access the real object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_CreateInstance_\" data-linktype=\"relative-path\">CreateInstance</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_CreateInstance_System_String_System_String_System_Object___\">\r\n    \r\n            <a id=\"System__AppDomain_CreateInstance_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateInstance(String,String,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the [AppDomain.CreateInstance(String,â€‚String,â€‚Object&lt;xref href=&quot;stem.AppDomain.CreateInstance%28System.String%2CSystem.String%2CSystem.Object%5B%5D%29&quot;&gt; method overload.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, object[] activationAttributes);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The display name of the assembly. See <span class=\"xref\">stem.Reflection.Assembly.FullName*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <span class=\"xref\">stem.Type.FullName*</span> property.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>activationAttributes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of one or more attributes that can participate in activation. Typically, an array that contains a single <a class=\"xref\" href=\"system.runtime.remoting.activation.urlattribute\" data-linktype=\"relative-path\">UrlAttribute</a> object. The <a class=\"xref\" href=\"system.runtime.remoting.activation.urlattribute\" data-linktype=\"relative-path\">UrlAttribute</a> specifies the URL that is required to activate a remote object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.objecthandle\" data-linktype=\"relative-path\">ObjectHandle</a></div>\r\n                  </div>\r\n                  <p>An object that is a wrapper for the new instance specified by <code>typeName</code>. The return value needs to be unwrapped to access the real object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the [AppDomain.CreateInstance(String,â€‚String,â€‚Object&lt;xref:System.AppDomain.CreateInstance%28System.String%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt; method overload.  </p>\n<p> The <code>activationAttributes</code> parameter is related to client-activated objects, a legacy technology.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_CreateInstance_System_String_System_String_System_Boolean_System_Reflection_BindingFlags_System_Reflection_Binder_System_Object___System_Globalization_CultureInfo_System_Object___System_Security_Policy_Evidence_\">\r\n    \r\n            <a id=\"System__AppDomain_CreateInstance_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the [AppDomain.CreateInstance(String,â€‚String,â€‚Boolean,â€‚BindingFlags,â€‚Binder,â€‚Object[],â€‚CultureInfo,â€‚Object&lt;xref href=&quot;stem.AppDomain.CreateInstance%28System.String%2CSystem.String%2CSystem.Boolean%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%2CSystem.Security.Policy.Evidence%29&quot;&gt; method overload.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The display name of the assembly. See <span class=\"xref\">stem.Reflection.Assembly.FullName*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <span class=\"xref\">stem.Type.FullName*</span> property.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ignoreCase</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A Boolean value specifying whether to perform a case-sensitive search or not.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>bindingAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A combination of zero or more bit flags that affect the search for the <code>typeName</code> constructor. If <code>bindingAttr</code> is zero, a case-sensitive search for public constructors is conducted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>binder</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.binder\" data-linktype=\"relative-path\">Binder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> objects using reflection. If <code>binder</code> is null, the default binder is used.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The arguments to pass to the constructor. This array of arguments must match in number, order, and type the parameters of the constructor to invoke. If the default constructor is preferred, <code>args</code> must be an empty array or null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>culture</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Culture-specific information that governs the coercion of <code>args</code> to the formal types declared for the <code>typeName</code> constructor. If <code>culture</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> for the current thread is used.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>activationAttributes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of one or more attributes that can participate in activation. Typically, an array that contains a single <a class=\"xref\" href=\"system.runtime.remoting.activation.urlattribute\" data-linktype=\"relative-path\">UrlAttribute</a> object. The <a class=\"xref\" href=\"system.runtime.remoting.activation.urlattribute\" data-linktype=\"relative-path\">UrlAttribute</a> specifies the URL that is required to activate a remote object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>securityAttributes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Information used to authorize creation of <code>typeName</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.objecthandle\" data-linktype=\"relative-path\">ObjectHandle</a></div>\r\n                  </div>\r\n                  <p>An object that is a wrapper for the new instance specified by <code>typeName</code>. The return value needs to be unwrapped to access the real object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the [AppDomain.CreateInstance(String,â€‚String,â€‚Boolean,â€‚BindingFlags,â€‚Binder,â€‚Object[],â€‚CultureInfo,â€‚Object&lt;xref:System.AppDomain.CreateInstance%28System.String%2CSystem.String%2CSystem.Boolean%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%2CSystem.Security.Policy.Evidence%29?displayProperty=fullName&gt; method overload.  </p>\n<p> The <code>activationAttributes</code> parameter is related to client-activated objects, a legacy technology.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_CreateInstanceFrom_System_String_System_String_\">\r\n    \r\n            <a id=\"System__AppDomain_CreateInstanceFrom_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateInstanceFrom(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.CreateInstanceFrom(System.String,System.String)</span> method overload.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyFile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name, including the path, of a file that contains an assembly that defines the requested type. The assembly is loaded using the <span class=\"xref\">stem.Reflection.Assembly.LoadFrom*</span> method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <span class=\"xref\">stem.Type.FullName*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.objecthandle\" data-linktype=\"relative-path\">ObjectHandle</a></div>\r\n                  </div>\r\n                  <p>An object that is a wrapper for the new instance, or <code>null</code> if <code>typeName</code> is not found. The return value needs to be unwrapped to access the real object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_CreateInstanceFrom_System_String_System_String_\" data-linktype=\"relative-path\">System.AppDomain.CreateInstanceFrom(String,String)</a> method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_CreateInstanceFrom_System_String_System_String_System_Object___\">\r\n    \r\n            <a id=\"System__AppDomain_CreateInstanceFrom_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateInstanceFrom(String,String,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the [AppDomain.CreateInstanceFrom(String,â€‚String,â€‚Object&lt;xref href=&quot;stem.AppDomain.CreateInstanceFrom%28System.String%2CSystem.String%2CSystem.Object%5B%5D%29&quot;&gt; method overload.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, object[] activationAttributes);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyFile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name, including the path, of a file that contains an assembly that defines the requested type. The assembly is loaded using the <span class=\"xref\">stem.Reflection.Assembly.LoadFrom*</span> method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <span class=\"xref\">stem.Type.FullName*</span> property.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>activationAttributes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of one or more attributes that can participate in activation. Typically, an array that contains a single <a class=\"xref\" href=\"system.runtime.remoting.activation.urlattribute\" data-linktype=\"relative-path\">UrlAttribute</a> object. The <a class=\"xref\" href=\"system.runtime.remoting.activation.urlattribute\" data-linktype=\"relative-path\">UrlAttribute</a> specifies the URL that is required to activate a remote object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.objecthandle\" data-linktype=\"relative-path\">ObjectHandle</a></div>\r\n                  </div>\r\n                  <p>An object that is a wrapper for the new instance, or <code>null</code> if <code>typeName</code> is not found. The return value needs to be unwrapped to access the real object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the [AppDomain.CreateInstanceFrom(String,â€‚String,â€‚Object&lt;xref:System.AppDomain.CreateInstanceFrom%28System.String%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt; method overload.  </p>\n<p> The <code>activationAttributes</code> parameter is related to client-activated objects, a legacy technology.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_CreateInstanceFrom_System_String_System_String_System_Boolean_System_Reflection_BindingFlags_System_Reflection_Binder_System_Object___System_Globalization_CultureInfo_System_Object___System_Security_Policy_Evidence_\">\r\n    \r\n            <a id=\"System__AppDomain_CreateInstanceFrom_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the [AppDomain.CreateInstanceFrom(String,â€‚String,â€‚Boolean,â€‚BindingFlags,â€‚Binder,â€‚Object[],â€‚CultureInfo,â€‚Object&lt;xref href=&quot;stem.AppDomain.CreateInstanceFrom%28System.String%2CSystem.String%2CSystem.Boolean%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%2CSystem.Security.Policy.Evidence%29&quot;&gt; method overload.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyFile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name, including the path, of a file that contains an assembly that defines the requested type. The assembly is loaded using the <span class=\"xref\">stem.Reflection.Assembly.LoadFrom*</span> method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <span class=\"xref\">stem.Type.FullName*</span> property.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ignoreCase</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A Boolean value specifying whether to perform a case-sensitive search or not.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>bindingAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A combination of zero or more bit flags that affect the search for the <code>typeName</code> constructor. If <code>bindingAttr</code> is zero, a case-sensitive search for public constructors is conducted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>binder</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.binder\" data-linktype=\"relative-path\">Binder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> objects through reflection. If <code>binder</code> is null, the default binder is used.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The arguments to pass to the constructor. This array of arguments must match in number, order, and type the parameters of the constructor to invoke. If the default constructor is preferred, <code>args</code> must be an empty array or null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>culture</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Culture-specific information that governs the coercion of <code>args</code> to the formal types declared for the <code>typeName</code> constructor. If <code>culture</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> for the current thread is used.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>activationAttributes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of one or more attributes that can participate in activation. Typically, an array that contains a single <a class=\"xref\" href=\"system.runtime.remoting.activation.urlattribute\" data-linktype=\"relative-path\">UrlAttribute</a> object. The <a class=\"xref\" href=\"system.runtime.remoting.activation.urlattribute\" data-linktype=\"relative-path\">UrlAttribute</a> specifies the URL that is required to activate a remote object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>securityAttributes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Information used to authorize creation of <code>typeName</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.objecthandle\" data-linktype=\"relative-path\">ObjectHandle</a></div>\r\n                  </div>\r\n                  <p>An object that is a wrapper for the new instance, or <code>null</code> if <code>typeName</code> is not found. The return value needs to be unwrapped to access the real object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the [AppDomain.CreateInstanceFrom(String,â€‚String,â€‚Boolean,â€‚BindingFlags,â€‚Binder,â€‚Object[],â€‚CultureInfo,â€‚Object&lt;xref:System.AppDomain.CreateInstanceFrom%28System.String%2CSystem.String%2CSystem.Boolean%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%2CSystem.Security.Policy.Evidence%29?displayProperty=fullName&gt; method overload.  </p>\n<p> The <code>activationAttributes</code> parameter is related to client-activated objects, a legacy technology.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_\">\r\n    \r\n            <a id=\"System__AppDomain_DefineDynamicAssembly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)</span> method overload.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assemblyname\" data-linktype=\"relative-path\">AssemblyName</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The unique identity of the dynamic assembly.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>access</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.assemblybuilderaccess\" data-linktype=\"relative-path\">AssemblyBuilderAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The access mode for the dynamic assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.assemblybuilder\" data-linktype=\"relative-path\">AssemblyBuilder</a></div>\r\n                  </div>\r\n                  <p>Represents the dynamic assembly created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_\" data-linktype=\"relative-path\">System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)</a> method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_System_Security_Policy_Evidence_\">\r\n    \r\n            <a id=\"System__AppDomain_DefineDynamicAssembly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)</span> method overload.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Security.Policy.Evidence evidence);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assemblyname\" data-linktype=\"relative-path\">AssemblyName</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The unique identity of the dynamic assembly.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>access</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.assemblybuilderaccess\" data-linktype=\"relative-path\">AssemblyBuilderAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The mode in which the dynamic assembly will be accessed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>evidence</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The evidence supplied for the dynamic assembly. The evidence is used unaltered as the final set of evidence used for policy resolution.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.assemblybuilder\" data-linktype=\"relative-path\">AssemblyBuilder</a></div>\r\n                  </div>\r\n                  <p>Represents the dynamic assembly created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_System_Security_Policy_Evidence_\" data-linktype=\"relative-path\">System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)</a> method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_System_String_\">\r\n    \r\n            <a id=\"System__AppDomain_DefineDynamicAssembly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)</span> method overload.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assemblyname\" data-linktype=\"relative-path\">AssemblyName</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The unique identity of the dynamic assembly.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>access</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.assemblybuilderaccess\" data-linktype=\"relative-path\">AssemblyBuilderAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The mode in which the dynamic assembly will be accessed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dir</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the directory where the assembly will be saved. If <code>dir</code> is <code>null</code>, the directory defaults to the current directory.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.assemblybuilder\" data-linktype=\"relative-path\">AssemblyBuilder</a></div>\r\n                  </div>\r\n                  <p>Represents the dynamic assembly created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_System_String_\" data-linktype=\"relative-path\">System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)</a> method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_System_String_System_Security_Policy_Evidence_\">\r\n    \r\n            <a id=\"System__AppDomain_DefineDynamicAssembly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)</span> method overload.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.Policy.Evidence evidence);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assemblyname\" data-linktype=\"relative-path\">AssemblyName</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The unique identity of the dynamic assembly.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>access</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.assemblybuilderaccess\" data-linktype=\"relative-path\">AssemblyBuilderAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The mode in which the dynamic assembly will be accessed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dir</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the directory where the assembly will be saved. If <code>dir</code> is <code>null</code>, the directory defaults to the current directory.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>evidence</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The evidence supplied for the dynamic assembly. The evidence is used unaltered as the final set of evidence used for policy resolution.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.assemblybuilder\" data-linktype=\"relative-path\">AssemblyBuilder</a></div>\r\n                  </div>\r\n                  <p>Represents the dynamic assembly created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_System_String_System_Security_Policy_Evidence_\" data-linktype=\"relative-path\">System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)</a> method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_System_Security_PermissionSet_System_Security_PermissionSet_System_Security_PermissionSet_\">\r\n    \r\n            <a id=\"System__AppDomain_DefineDynamicAssembly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)</span> method overload.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assemblyname\" data-linktype=\"relative-path\">AssemblyName</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The unique identity of the dynamic assembly.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>access</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.assemblybuilderaccess\" data-linktype=\"relative-path\">AssemblyBuilderAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The mode in which the dynamic assembly will be accessed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>requiredPermissions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissionset\" data-linktype=\"relative-path\">PermissionSet</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The required permissions request.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>optionalPermissions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissionset\" data-linktype=\"relative-path\">PermissionSet</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The optional permissions request.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>refusedPermissions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissionset\" data-linktype=\"relative-path\">PermissionSet</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The refused permissions request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.assemblybuilder\" data-linktype=\"relative-path\">AssemblyBuilder</a></div>\r\n                  </div>\r\n                  <p>Represents the dynamic assembly created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_System_Security_PermissionSet_System_Security_PermissionSet_System_Security_PermissionSet_\" data-linktype=\"relative-path\">System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)</a> method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_System_Security_Policy_Evidence_System_Security_PermissionSet_System_Security_PermissionSet_System_Security_PermissionSet_\">\r\n    \r\n            <a id=\"System__AppDomain_DefineDynamicAssembly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)</span> method overload.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assemblyname\" data-linktype=\"relative-path\">AssemblyName</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The unique identity of the dynamic assembly.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>access</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.assemblybuilderaccess\" data-linktype=\"relative-path\">AssemblyBuilderAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The mode in which the dynamic assembly will be accessed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>evidence</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The evidence supplied for the dynamic assembly. The evidence is used unaltered as the final set of evidence used for policy resolution.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>requiredPermissions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissionset\" data-linktype=\"relative-path\">PermissionSet</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The required permissions request.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>optionalPermissions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissionset\" data-linktype=\"relative-path\">PermissionSet</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The optional permissions request.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>refusedPermissions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissionset\" data-linktype=\"relative-path\">PermissionSet</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The refused permissions request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.assemblybuilder\" data-linktype=\"relative-path\">AssemblyBuilder</a></div>\r\n                  </div>\r\n                  <p>Represents the dynamic assembly created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_System_Security_Policy_Evidence_System_Security_PermissionSet_System_Security_PermissionSet_System_Security_PermissionSet_\" data-linktype=\"relative-path\">System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)</a> method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_System_String_System_Security_PermissionSet_System_Security_PermissionSet_System_Security_PermissionSet_\">\r\n    \r\n            <a id=\"System__AppDomain_DefineDynamicAssembly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)</span> method overload.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assemblyname\" data-linktype=\"relative-path\">AssemblyName</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The unique identity of the dynamic assembly.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>access</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.assemblybuilderaccess\" data-linktype=\"relative-path\">AssemblyBuilderAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The mode in which the dynamic assembly will be accessed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dir</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the directory where the assembly will be saved. If <code>dir</code> is <code>null</code>, the directory defaults to the current directory.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>requiredPermissions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissionset\" data-linktype=\"relative-path\">PermissionSet</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The required permissions request.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>optionalPermissions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissionset\" data-linktype=\"relative-path\">PermissionSet</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The optional permissions request.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>refusedPermissions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissionset\" data-linktype=\"relative-path\">PermissionSet</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The refused permissions request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.assemblybuilder\" data-linktype=\"relative-path\">AssemblyBuilder</a></div>\r\n                  </div>\r\n                  <p>Represents the dynamic assembly created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_System_String_System_Security_PermissionSet_System_Security_PermissionSet_System_Security_PermissionSet_\" data-linktype=\"relative-path\">System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)</a> method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_System_String_System_Security_Policy_Evidence_System_Security_PermissionSet_System_Security_PermissionSet_System_Security_PermissionSet_\">\r\n    \r\n            <a id=\"System__AppDomain_DefineDynamicAssembly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)</span> method overload.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assemblyname\" data-linktype=\"relative-path\">AssemblyName</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The unique identity of the dynamic assembly.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>access</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.assemblybuilderaccess\" data-linktype=\"relative-path\">AssemblyBuilderAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The mode in which the dynamic assembly will be accessed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dir</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the directory where the assembly will be saved. If <code>dir</code> is <code>null</code>, the directory defaults to the current directory.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>evidence</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The evidence supplied for the dynamic assembly. The evidence is used unaltered as the final set of evidence used for policy resolution.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>requiredPermissions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissionset\" data-linktype=\"relative-path\">PermissionSet</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The required permissions request.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>optionalPermissions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissionset\" data-linktype=\"relative-path\">PermissionSet</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The optional permissions request.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>refusedPermissions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissionset\" data-linktype=\"relative-path\">PermissionSet</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The refused permissions request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.assemblybuilder\" data-linktype=\"relative-path\">AssemblyBuilder</a></div>\r\n                  </div>\r\n                  <p>Represents the dynamic assembly created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_System_String_System_Security_Policy_Evidence_System_Security_PermissionSet_System_Security_PermissionSet_System_Security_PermissionSet_\" data-linktype=\"relative-path\">System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)</a> method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_System_String_System_Security_Policy_Evidence_System_Security_PermissionSet_System_Security_PermissionSet_System_Security_PermissionSet_System_Boolean_\">\r\n    \r\n            <a id=\"System__AppDomain_DefineDynamicAssembly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)</span> method overload.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions, bool isSynchronized);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assemblyname\" data-linktype=\"relative-path\">AssemblyName</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The unique identity of the dynamic assembly.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>access</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.assemblybuilderaccess\" data-linktype=\"relative-path\">AssemblyBuilderAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The mode in which the dynamic assembly will be accessed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dir</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the directory where the dynamic assembly will be saved. If <code>dir</code> is <code>null</code>, the directory defaults to the current directory.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>evidence</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The evidence supplied for the dynamic assembly. The evidence is used unaltered as the final set of evidence used for policy resolution.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>requiredPermissions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissionset\" data-linktype=\"relative-path\">PermissionSet</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The required permissions request.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>optionalPermissions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissionset\" data-linktype=\"relative-path\">PermissionSet</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The optional permissions request.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>refusedPermissions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissionset\" data-linktype=\"relative-path\">PermissionSet</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The refused permissions request.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>isSynchronized</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to synchronize the creation of modules, types, and members in the dynamic assembly; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.assemblybuilder\" data-linktype=\"relative-path\">AssemblyBuilder</a></div>\r\n                  </div>\r\n                  <p>Represents the dynamic assembly created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_DefineDynamicAssembly_System_Reflection_AssemblyName_System_Reflection_Emit_AssemblyBuilderAccess_System_String_System_Security_Policy_Evidence_System_Security_PermissionSet_System_Security_PermissionSet_System_Security_PermissionSet_System_Boolean_\" data-linktype=\"relative-path\">System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)</a> method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_DoCallBack_System_CrossAppDomainDelegate_\">\r\n    \r\n            <a id=\"System__AppDomain_DoCallBack_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DoCallBack(CrossAppDomainDelegate)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.DoCallBack*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DoCallBack (CrossAppDomainDelegate theDelegate);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>theDelegate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.crossappdomaindelegate\" data-linktype=\"relative-path\">CrossAppDomainDelegate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate that specifies a method to call.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_DoCallBack_\" data-linktype=\"relative-path\">DoCallBack</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_Equals_System_Object_\">\r\n    \r\n            <a id=\"System__AppDomain_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the inherited <span class=\"xref\">stem.Object.Equals*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Equals (object other);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>other</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to compare to the current <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> is equal to the current <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.object#System_Object_Equals_\" data-linktype=\"relative-path\">Equals</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_ExecuteAssembly_System_String_\">\r\n    \r\n            <a id=\"System__AppDomain_ExecuteAssembly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExecuteAssembly(String)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.ExecuteAssembly(System.String)</span> method overload.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ExecuteAssembly (string assemblyFile);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyFile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the file that contains the assembly to execute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The value returned by the entry point of the assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_ExecuteAssembly_System_String_\" data-linktype=\"relative-path\">System.AppDomain.ExecuteAssembly(String)</a> method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_ExecuteAssembly_System_String_System_Security_Policy_Evidence_\">\r\n    \r\n            <a id=\"System__AppDomain_ExecuteAssembly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExecuteAssembly(String,Evidence)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)</span> method overload.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ExecuteAssembly (string assemblyFile, System.Security.Policy.Evidence assemblySecurity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyFile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the file that contains the assembly to execute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblySecurity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Evidence for loading the assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The value returned by the entry point of the assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_ExecuteAssembly_System_String_System_Security_Policy_Evidence_\" data-linktype=\"relative-path\">System.AppDomain.ExecuteAssembly(String,Evidence)</a> method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_ExecuteAssembly_System_String_System_Security_Policy_Evidence_System_String___\">\r\n    \r\n            <a id=\"System__AppDomain_ExecuteAssembly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExecuteAssembly(String,Evidence,String[])</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the [AppDomain.ExecuteAssembly(String,â€‚Evidence,â€‚String&lt;xref href=&quot;stem.AppDomain.ExecuteAssembly%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.String%5B%5D%29&quot;&gt; method overload.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ExecuteAssembly (string assemblyFile, System.Security.Policy.Evidence assemblySecurity, string[] args);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyFile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the file that contains the assembly to execute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblySecurity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The supplied evidence for the assembly.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The arguments to the entry point of the assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The value returned by the entry point of the assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the [AppDomain.ExecuteAssembly(String,â€‚Evidence,â€‚String&lt;xref:System.AppDomain.ExecuteAssembly%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.String%5B%5D%29?displayProperty=fullName&gt; method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_GetAssemblies\">\r\n    \r\n            <a id=\"System__AppDomain_GetAssemblies_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetAssemblies()</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.GetAssemblies*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.Assembly[] GetAssemblies ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a>[]</div>\r\n                  </div>\r\n                  <p>An array of assemblies in this application domain.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_GetAssemblies_\" data-linktype=\"relative-path\">GetAssemblies</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_GetData_System_String_\">\r\n    \r\n            <a id=\"System__AppDomain_GetData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetData(String)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.GetData*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object GetData (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of a predefined application domain property, or the name of an application domain property you have defined.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The value of the <code>name</code> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_GetData_\" data-linktype=\"relative-path\">GetData</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_GetHashCode\">\r\n    \r\n            <a id=\"System__AppDomain_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the inherited <span class=\"xref\">stem.Object.GetHashCode*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A hash code for the current <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.object#System_Object_GetHashCode_\" data-linktype=\"relative-path\">GetHashCode</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_GetIDsOfNames_System_Guid__System_IntPtr_System_UInt32_System_UInt32_System_IntPtr_\">\r\n    \r\n            <a id=\"System__AppDomain_GetIDsOfNames_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Maps a set of names to a corresponding set of dispatch identifiers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>riid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Reserved for future use. Must be IID_NULL.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rgszNames</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Passed-in array of names to be mapped.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cNames</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Count of the names to be mapped.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>lcid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The locale context in which to interpret the names.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rgDispId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Caller-allocated array which receives the IDs corresponding to the names.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>The method is called late-bound using the COM <code>IDispatch</code> interface.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about <code>IDispatch::GetIDsOfNames</code>, see the MSDN Library.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_GetLifetimeService\">\r\n    \r\n            <a id=\"System__AppDomain_GetLifetimeService_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetLifetimeService()</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the inherited <span class=\"xref\">stem.MarshalByRefObject.GetLifetimeService*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object GetLifetimeService ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An object of type <a class=\"xref\" href=\"system.runtime.remoting.lifetime.ilease\" data-linktype=\"relative-path\">ILease</a> used to control the lifetime policy for this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService_\" data-linktype=\"relative-path\">GetLifetimeService</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_GetType\">\r\n    \r\n            <a id=\"System__AppDomain_GetType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetType()</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.GetType*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Type GetType ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> representing the type of the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_GetType_\" data-linktype=\"relative-path\">GetType</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_GetTypeInfo_System_UInt32_System_UInt32_System_IntPtr_\">\r\n    \r\n            <a id=\"System__AppDomain_GetTypeInfo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetTypeInfo(UInt32,UInt32,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the type information for an object, which can then be used to get the type information for an interface.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>iTInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type information to return.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>lcid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The locale identifier for the type information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ppTInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Receives a pointer to the requested type information object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>The method is called late-bound using the COM <code>IDispatch</code> interface.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about <code>IDispatch::GetTypeInfo</code>, see the MSDN Library.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_GetTypeInfoCount_System_UInt32__\">\r\n    \r\n            <a id=\"System__AppDomain_GetTypeInfoCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetTypeInfoCount(UInt32)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void GetTypeInfoCount (out uint pcTInfo);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pcTInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Points to a location that receives the number of type information interfaces provided by the object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>The method is called late-bound using the COM <code>IDispatch</code> interface.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about <code>IDispatch::GetTypeInfoCount</code>, see the MSDN Library.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_InitializeLifetimeService\">\r\n    \r\n            <a id=\"System__AppDomain_InitializeLifetimeService_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InitializeLifetimeService()</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.InitializeLifetimeService*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object InitializeLifetimeService ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>Always <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_InitializeLifetimeService_\" data-linktype=\"relative-path\">InitializeLifetimeService</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_Invoke_System_UInt32_System_Guid__System_UInt32_System_Int16_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_\">\r\n    \r\n            <a id=\"System__AppDomain_Invoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Provides access to properties and methods exposed by an object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dispIdMember</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Identifies the member.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>riid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Reserved for future use. Must be IID_NULL.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>lcid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The locale context in which to interpret arguments.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>wFlags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Flags describing the context of the call.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pDispParams</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pVarResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Pointer to the location where the result is to be stored.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pExcepInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Pointer to a structure that contains exception information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>puArgErr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the first argument that has an error.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>The method is called late-bound using the COM <code>IDispatch</code> interface.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about <code>IDispatch::Invoke</code>, see the MSDN Library.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_Load_System_Byte___\">\r\n    \r\n            <a id=\"System__AppDomain_Load_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Load(Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the [AppDomain.Load(Byte&lt;xref href=&quot;stem.AppDomain.Load%28System.Byte%5B%5D%29&quot;&gt; method overload.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.Assembly Load (byte[] rawAssembly);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rawAssembly</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of type <code>byte</code> that is a COFF-based image containing an emitted assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a></div>\r\n                  </div>\r\n                  <p>The loaded assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the [AppDomain.Load(Byte&lt;xref:System.AppDomain.Load%28System.Byte%5B%5D%29?displayProperty=fullName&gt; method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_Load_System_Reflection_AssemblyName_\">\r\n    \r\n            <a id=\"System__AppDomain_Load_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Load(AssemblyName)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.Load(System.Reflection.AssemblyName)</span> method overload.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyRef</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assemblyname\" data-linktype=\"relative-path\">AssemblyName</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that describes the assembly to load.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a></div>\r\n                  </div>\r\n                  <p>The loaded assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_Load_System_Reflection_AssemblyName_\" data-linktype=\"relative-path\">System.AppDomain.Load(AssemblyName)</a> method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_Load_System_String_\">\r\n    \r\n            <a id=\"System__AppDomain_Load_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Load(String)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.Load(System.String)</span> method overload.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.Assembly Load (string assemblyString);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyString</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The display name of the assembly. See <span class=\"xref\">stem.Reflection.Assembly.FullName*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a></div>\r\n                  </div>\r\n                  <p>The loaded assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_Load_System_String_\" data-linktype=\"relative-path\">System.AppDomain.Load(String)</a> method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_Load_System_Byte___System_Byte___\">\r\n    \r\n            <a id=\"System__AppDomain_Load_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Load(Byte[],Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the [AppDomain.Load(Byte[],â€‚Byte&lt;xref href=&quot;stem.AppDomain.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%29&quot;&gt; method overload.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rawAssembly</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of type <code>byte</code> that is a COFF-based image containing an emitted assembly.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rawSymbolStore</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of type <code>byte</code> containing the raw bytes representing the symbols for the assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a></div>\r\n                  </div>\r\n                  <p>The loaded assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the [AppDomain.Load(Byte[],â€‚Byte&lt;xref:System.AppDomain.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%29?displayProperty=fullName&gt; method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_Load_System_Reflection_AssemblyName_System_Security_Policy_Evidence_\">\r\n    \r\n            <a id=\"System__AppDomain_Load_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Load(AssemblyName,Evidence)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)</span> method overload.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef, System.Security.Policy.Evidence assemblySecurity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyRef</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assemblyname\" data-linktype=\"relative-path\">AssemblyName</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that describes the assembly to load.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblySecurity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Evidence for loading the assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a></div>\r\n                  </div>\r\n                  <p>The loaded assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_Load_System_Reflection_AssemblyName_System_Security_Policy_Evidence_\" data-linktype=\"relative-path\">System.AppDomain.Load(AssemblyName,Evidence)</a> method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_Load_System_String_System_Security_Policy_Evidence_\">\r\n    \r\n            <a id=\"System__AppDomain_Load_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Load(String,Evidence)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.Load(System.String,System.Security.Policy.Evidence)</span> method overload.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.Assembly Load (string assemblyString, System.Security.Policy.Evidence assemblySecurity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyString</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The display name of the assembly. See <span class=\"xref\">stem.Reflection.Assembly.FullName*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblySecurity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Evidence for loading the assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a></div>\r\n                  </div>\r\n                  <p>The loaded assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_Load_System_String_System_Security_Policy_Evidence_\" data-linktype=\"relative-path\">System.AppDomain.Load(String,Evidence)</a> method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_Load_System_Byte___System_Byte___System_Security_Policy_Evidence_\">\r\n    \r\n            <a id=\"System__AppDomain_Load_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Load(Byte[],Byte[],Evidence)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the [AppDomain.Load(Byte[],â€‚Byte&lt;xref href=&quot;stem.AppDomain.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29&quot;&gt; method overload.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore, System.Security.Policy.Evidence securityEvidence);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rawAssembly</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of type <code>byte</code> that is a COFF-based image containing an emitted assembly.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rawSymbolStore</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of type <code>byte</code> containing the raw bytes representing the symbols for the assembly.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>securityEvidence</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Evidence for loading the assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a></div>\r\n                  </div>\r\n                  <p>The loaded assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the [AppDomain.Load(Byte[],â€‚Byte&lt;xref:System.AppDomain.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29?displayProperty=fullName&gt; method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_SetAppDomainPolicy_System_Security_Policy_PolicyLevel_\">\r\n    \r\n            <a id=\"System__AppDomain_SetAppDomainPolicy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetAppDomainPolicy(PolicyLevel)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.SetAppDomainPolicy*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetAppDomainPolicy (System.Security.Policy.PolicyLevel domainPolicy);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>domainPolicy</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.policylevel\" data-linktype=\"relative-path\">PolicyLevel</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The security policy level.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_SetAppDomainPolicy_\" data-linktype=\"relative-path\">SetAppDomainPolicy</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_SetCachePath_System_String_\">\r\n    \r\n            <a id=\"System__AppDomain_SetCachePath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetCachePath(String)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.SetCachePath*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetCachePath (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The fully qualified path to the shadow copy location.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_SetCachePath_\" data-linktype=\"relative-path\">SetCachePath</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_SetData_System_String_System_Object_\">\r\n    \r\n            <a id=\"System__AppDomain_SetData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetData(String,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.SetData*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetData (string name, object data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of a user-defined application domain property to create or change.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_SetData_\" data-linktype=\"relative-path\">SetData</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_SetPrincipalPolicy_System_Security_Principal_PrincipalPolicy_\">\r\n    \r\n            <a id=\"System__AppDomain_SetPrincipalPolicy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetPrincipalPolicy(PrincipalPolicy)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.SetPrincipalPolicy*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetPrincipalPolicy (System.Security.Principal.PrincipalPolicy policy);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>policy</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.principalpolicy\" data-linktype=\"relative-path\">PrincipalPolicy</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.principal.principalpolicy\" data-linktype=\"relative-path\">PrincipalPolicy</a> values that specifies the type of the principal object to attach to threads.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_SetPrincipalPolicy_\" data-linktype=\"relative-path\">SetPrincipalPolicy</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_SetShadowCopyPath_System_String_\">\r\n    \r\n            <a id=\"System__AppDomain_SetShadowCopyPath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetShadowCopyPath(String)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.SetShadowCopyPath*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetShadowCopyPath (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A list of directory names, where each name is separated by a semicolon.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_SetShadowCopyPath_\" data-linktype=\"relative-path\">SetShadowCopyPath</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_SetThreadPrincipal_System_Security_Principal_IPrincipal_\">\r\n    \r\n            <a id=\"System__AppDomain_SetThreadPrincipal_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetThreadPrincipal(IPrincipal)</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.SetThreadPrincipal*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetThreadPrincipal (System.Security.Principal.IPrincipal principal);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>principal</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.iprincipal\" data-linktype=\"relative-path\">IPrincipal</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The principal object to attach to threads.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_SetThreadPrincipal_\" data-linktype=\"relative-path\">SetThreadPrincipal</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_ToString\">\r\n    \r\n            <a id=\"System__AppDomain_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <span class=\"xref\">stem.AppDomain.ToString*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string formed by concatenating the literal string &quot;Name:&quot;, the friendly name of the application domain, and either string representations of the context policies or the string &quot;There are no context policies.&quot;</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_ToString_\" data-linktype=\"relative-path\">ToString</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_AssemblyLoad\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AssemblyLoad</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_AssemblyLoad\" data-linktype=\"relative-path\">AssemblyLoad</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event AssemblyLoadEventHandler AssemblyLoad;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_AssemblyLoad\" data-linktype=\"relative-path\">System.AppDomain.AssemblyLoad</a> event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_AssemblyResolve\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AssemblyResolve</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_AssemblyResolve\" data-linktype=\"relative-path\">AssemblyResolve</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event ResolveEventHandler AssemblyResolve;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_AssemblyResolve\" data-linktype=\"relative-path\">System.AppDomain.AssemblyResolve</a> event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_DomainUnload\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DomainUnload</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_DomainUnload\" data-linktype=\"relative-path\">DomainUnload</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler DomainUnload;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_DomainUnload\" data-linktype=\"relative-path\">System.AppDomain.DomainUnload</a> event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_ProcessExit\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessExit</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_ProcessExit\" data-linktype=\"relative-path\">ProcessExit</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler ProcessExit;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_ProcessExit\" data-linktype=\"relative-path\">System.AppDomain.ProcessExit</a> event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_ResourceResolve\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResourceResolve</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_ResourceResolve\" data-linktype=\"relative-path\">ResourceResolve</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event ResolveEventHandler ResourceResolve;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_ResourceResolve\" data-linktype=\"relative-path\">System.AppDomain.ResourceResolve</a> event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_TypeResolve\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TypeResolve</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_TypeResolve\" data-linktype=\"relative-path\">TypeResolve</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event ResolveEventHandler TypeResolve;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_ToString_\" data-linktype=\"relative-path\">ToString</a> event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System__AppDomain_UnhandledException\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UnhandledException</div>        \r\n          </div>\r\n    \r\n            <p>Provides COM objects with version-independent access to the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_UnhandledException\" data-linktype=\"relative-path\">UnhandledException</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event UnhandledExceptionEventHandler UnhandledException;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_UnhandledException\" data-linktype=\"relative-path\">System.AppDomain.UnhandledException</a> event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System._AppDomain.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System._AppDomain.yml\">\r\n<meta name=\"APIName\" content=\"System._AppDomain\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.AppendPrivatePath\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.AssemblyLoad\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.add_AssemblyLoad\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.remove_AssemblyLoad\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.AssemblyResolve\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.add_AssemblyResolve\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.remove_AssemblyResolve\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.BaseDirectory\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.ClearPrivatePath\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.ClearShadowCopyPath\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.CreateInstance\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.CreateInstanceFrom\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.DefineDynamicAssembly\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.DoCallBack\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.DomainUnload\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.add_DomainUnload\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.remove_DomainUnload\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.DynamicDirectory\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.Equals\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.Evidence\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.ExecuteAssembly\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.FriendlyName\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.GetAssemblies\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.GetData\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.GetIDsOfNames\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.GetLifetimeService\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.GetType\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.GetTypeInfo\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.GetTypeInfoCount\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.InitializeLifetimeService\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.Invoke\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.Load\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.ProcessExit\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.add_ProcessExit\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.remove_ProcessExit\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.RelativeSearchPath\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.ResourceResolve\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.add_ResourceResolve\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.remove_ResourceResolve\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.SetAppDomainPolicy\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.SetCachePath\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.SetData\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.SetPrincipalPolicy\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.SetShadowCopyPath\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.SetThreadPrincipal\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.ShadowCopyFiles\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.ToString\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.TypeResolve\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.add_TypeResolve\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.remove_TypeResolve\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.UnhandledException\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.add_UnhandledException\">\r\n<meta name=\"APIName\" content=\"System._AppDomain.remove_UnhandledException\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"9ca73ca0-b634-07bd-f4c4-6c42f43e268f\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System\\_AppDomain.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Exposes the public members of the  class to unmanaged code.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System._AppDomain\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System._AppDomain.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System._AppDomain.yml","open_to_public_contributors":true,"api_name":["System._AppDomain","System._AppDomain.AppendPrivatePath","System._AppDomain.AssemblyLoad","System._AppDomain.add_AssemblyLoad","System._AppDomain.remove_AssemblyLoad","System._AppDomain.AssemblyResolve","System._AppDomain.add_AssemblyResolve","System._AppDomain.remove_AssemblyResolve","System._AppDomain.BaseDirectory","System._AppDomain.ClearPrivatePath","System._AppDomain.ClearShadowCopyPath","System._AppDomain.CreateInstance","System._AppDomain.CreateInstanceFrom","System._AppDomain.DefineDynamicAssembly","System._AppDomain.DoCallBack","System._AppDomain.DomainUnload","System._AppDomain.add_DomainUnload","System._AppDomain.remove_DomainUnload","System._AppDomain.DynamicDirectory","System._AppDomain.Equals","System._AppDomain.Evidence","System._AppDomain.ExecuteAssembly","System._AppDomain.FriendlyName","System._AppDomain.GetAssemblies","System._AppDomain.GetData","System._AppDomain.GetHashCode","System._AppDomain.GetIDsOfNames","System._AppDomain.GetLifetimeService","System._AppDomain.GetType","System._AppDomain.GetTypeInfo","System._AppDomain.GetTypeInfoCount","System._AppDomain.InitializeLifetimeService","System._AppDomain.Invoke","System._AppDomain.Load","System._AppDomain.ProcessExit","System._AppDomain.add_ProcessExit","System._AppDomain.remove_ProcessExit","System._AppDomain.RelativeSearchPath","System._AppDomain.ResourceResolve","System._AppDomain.add_ResourceResolve","System._AppDomain.remove_ResourceResolve","System._AppDomain.SetAppDomainPolicy","System._AppDomain.SetCachePath","System._AppDomain.SetData","System._AppDomain.SetPrincipalPolicy","System._AppDomain.SetShadowCopyPath","System._AppDomain.SetThreadPrincipal","System._AppDomain.ShadowCopyFiles","System._AppDomain.ToString","System._AppDomain.TypeResolve","System._AppDomain.add_TypeResolve","System._AppDomain.remove_TypeResolve","System._AppDomain.UnhandledException","System._AppDomain.add_UnhandledException","System._AppDomain.remove_UnhandledException"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System._AppDomain","System::_AppDomain","System._AppDomain.AppendPrivatePath","System::_AppDomain::AppendPrivatePath","System._AppDomain.AssemblyLoad","System::_AppDomain::AssemblyLoad","System._AppDomain.AssemblyResolve","System::_AppDomain::AssemblyResolve","System._AppDomain.BaseDirectory","System::_AppDomain::BaseDirectory","System._AppDomain.ClearPrivatePath","System::_AppDomain::ClearPrivatePath","System._AppDomain.ClearShadowCopyPath","System::_AppDomain::ClearShadowCopyPath","System._AppDomain.CreateInstance","System::_AppDomain::CreateInstance","System._AppDomain.CreateInstanceFrom","System::_AppDomain::CreateInstanceFrom","System._AppDomain.DefineDynamicAssembly","System::_AppDomain::DefineDynamicAssembly","System._AppDomain.DoCallBack","System::_AppDomain::DoCallBack","System._AppDomain.DomainUnload","System::_AppDomain::DomainUnload","System._AppDomain.DynamicDirectory","System::_AppDomain::DynamicDirectory","System._AppDomain.Equals","System::_AppDomain::Equals","System._AppDomain.Evidence","System::_AppDomain::Evidence","System._AppDomain.ExecuteAssembly","System::_AppDomain::ExecuteAssembly","System._AppDomain.FriendlyName","System::_AppDomain::FriendlyName","System._AppDomain.GetAssemblies","System::_AppDomain::GetAssemblies","System._AppDomain.GetData","System::_AppDomain::GetData","System._AppDomain.GetHashCode","System::_AppDomain::GetHashCode","System._AppDomain.GetIDsOfNames","System::_AppDomain::GetIDsOfNames","System._AppDomain.GetLifetimeService","System::_AppDomain::GetLifetimeService","System._AppDomain.GetType","System::_AppDomain::GetType","System._AppDomain.GetTypeInfo","System::_AppDomain::GetTypeInfo","System._AppDomain.GetTypeInfoCount","System::_AppDomain::GetTypeInfoCount","System._AppDomain.InitializeLifetimeService","System::_AppDomain::InitializeLifetimeService","System._AppDomain.Invoke","System::_AppDomain::Invoke","System._AppDomain.Load","System::_AppDomain::Load","System._AppDomain.ProcessExit","System::_AppDomain::ProcessExit","System._AppDomain.RelativeSearchPath","System::_AppDomain::RelativeSearchPath","System._AppDomain.ResourceResolve","System::_AppDomain::ResourceResolve","System._AppDomain.SetAppDomainPolicy","System::_AppDomain::SetAppDomainPolicy","System._AppDomain.SetCachePath","System::_AppDomain::SetCachePath","System._AppDomain.SetData","System::_AppDomain::SetData","System._AppDomain.SetPrincipalPolicy","System::_AppDomain::SetPrincipalPolicy","System._AppDomain.SetShadowCopyPath","System::_AppDomain::SetShadowCopyPath","System._AppDomain.SetThreadPrincipal","System::_AppDomain::SetThreadPrincipal","System._AppDomain.ShadowCopyFiles","System::_AppDomain::ShadowCopyFiles","System._AppDomain.ToString","System::_AppDomain::ToString","System._AppDomain.TypeResolve","System::_AppDomain::TypeResolve","System._AppDomain.UnhandledException","System::_AppDomain::UnhandledException"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"9ca73ca0-b634-07bd-f4c4-6c42f43e268f","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System\\_AppDomain.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System/_AppDomain.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"_AppDomain interface | Microsoft Docs","_op_ogTitle":"_AppDomain interface","description":"Exposes the public members of the  class to unmanaged code.\n","toc_asset_id":"_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System._AppDomain","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system._appdomain","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system._appdomain","fileRelativePath":"System._AppDomain.html"},"themesRelativePathToOutputRoot":"_themes/"}