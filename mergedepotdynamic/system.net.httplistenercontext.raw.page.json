{"content":"    \r\n    <h1 id=\"System_Net_HttpListenerContext\">\r\n      <span class=\"lang-csharp\">HttpListenerContext</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides access to the request and response objects used by the <a class=\"xref\" href=\"system.net.httplistener\" data-linktype=\"relative-path\">HttpListener</a> class. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class HttpListenerContext</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">HttpListenerContext</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class provides the information related to a client&#39;s Hypertext Transfer Protocol (HTTP) request being processed by an <a class=\"xref\" href=\"system.net.httplistener\" data-linktype=\"relative-path\">HttpListener</a> object. This class also has methods that allow an <a class=\"xref\" href=\"system.net.httplistener\" data-linktype=\"relative-path\">HttpListener</a> object to accept a WebSocket connection.  </p>\n<p> The <a class=\"xref\" href=\"system.net.httplistener#System_Net_HttpListener_GetContext_\" data-linktype=\"relative-path\">GetContext</a> method returns instances of the HttpListenerContext class. To get the object that represents the client request, use the <a class=\"xref\" href=\"system.net.httplistenercontext#System_Net_HttpListenerContext_Request_\" data-linktype=\"relative-path\">Request</a> property. To get the object that represents the response that will be sent to the client by the <a class=\"xref\" href=\"system.net.httplistener\" data-linktype=\"relative-path\">HttpListener</a>, use the <a class=\"xref\" href=\"system.net.httplistenercontext#System_Net_HttpListenerContext_Response_\" data-linktype=\"relative-path\">Response</a> property. To get user information about the client sending the request, such as its login name and whether it has been authenticated, you can query the properties in the <a class=\"xref\" href=\"system.security.principal.iprincipal\" data-linktype=\"relative-path\">IPrincipal</a> object returned by the <a class=\"xref\" href=\"system.net.httplistenercontext#System_Net_HttpListenerContext_User_\" data-linktype=\"relative-path\">User</a> property.  </p>\n<p> Closing an HttpListenerContext object sends the response to the client and frees any resources used by the HttpListenerContext. Aborting an HttpListenerContext object discards the response to the client if it has not already been sent, and frees any resources used by the HttpListenerContext. After closing or aborting an HttpListenerContext object, you cannot reference its methods or properties. If you do so, you will receive an <a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a> exception.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_HttpListenerContext_Request\" data-linktype=\"self-bookmark\">Request</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.net.httplistenerrequest\" data-linktype=\"relative-path\">HttpListenerRequest</a> that represents a client&#39;s request for a resource.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_HttpListenerContext_Response\" data-linktype=\"self-bookmark\">Response</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.net.httplistenerresponse\" data-linktype=\"relative-path\">HttpListenerResponse</a> object that will be sent to the client in response to the client&#39;s request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_HttpListenerContext_User\" data-linktype=\"self-bookmark\">User</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an object used to obtain identity, authentication information, and security roles for the client whose request is represented by this <a class=\"xref\" href=\"system.net.httplistenercontext\" data-linktype=\"relative-path\">HttpListenerContext</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_HttpListenerContext_AcceptWebSocketAsync_System_String_\" data-linktype=\"self-bookmark\">AcceptWebSocketAsync(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Accept a WebSocket connection as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_HttpListenerContext_AcceptWebSocketAsync_System_String_System_TimeSpan_\" data-linktype=\"self-bookmark\">AcceptWebSocketAsync(String,TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Accept a WebSocket connection specifying the supported WebSocket sub-protocol  and WebSocket keep-alive interval as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_HttpListenerContext_AcceptWebSocketAsync_System_String_System_Int32_System_TimeSpan_\" data-linktype=\"self-bookmark\">AcceptWebSocketAsync(String,Int32,TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, and WebSocket keep-alive interval as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_HttpListenerContext_AcceptWebSocketAsync_System_String_System_Int32_System_TimeSpan_System_ArraySegment_System_Byte__\" data-linktype=\"self-bookmark\">AcceptWebSocketAsync(String,Int32,TimeSpan,ArraySegment&lt;Byte&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, WebSocket keep-alive interval, and the internal buffer as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_HttpListenerContext_Request\">\r\n    \r\n            <a id=\"System_Net_HttpListenerContext_Request_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Request</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.net.httplistenerrequest\" data-linktype=\"relative-path\">HttpListenerRequest</a> that represents a client&#39;s request for a resource.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.HttpListenerRequest Request { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.httplistenerrequest\" data-linktype=\"relative-path\">HttpListenerRequest</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.net.httplistenerrequest\" data-linktype=\"relative-path\">HttpListenerRequest</a> object that represents the client request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If you close this <a class=\"xref\" href=\"system.net.httplistenercontext\" data-linktype=\"relative-path\">HttpListenerContext</a>, it will send the response to the client, close the <a class=\"xref\" href=\"system.net.httplistenerresponse\" data-linktype=\"relative-path\">HttpListenerResponse</a> that contains the response, and close the <a class=\"xref\" href=\"system.net.httplistenerrequest\" data-linktype=\"relative-path\">HttpListenerRequest</a> object returned by this property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates calling this method. The <code>listener</code> variable holds an <a class=\"xref\" href=\"system.net.httplistener\" data-linktype=\"relative-path\">HttpListener</a> object.  </p>\n<pre><code class=\"lang-cs\" name=\"Net_Listener_Basic#3\">    // This example requires the System and System.Net namespaces.\n    public static string ClientInformation(HttpListenerContext context)\n    {\n        System.Security.Principal.IPrincipal user = context.User;\n        System.Security.Principal.IIdentity id = user.Identity;\n        if (id == null)\n        {\n            return &quot;Client authentication is not enabled for this Web server.&quot;;\n        }\n        \n        string display;\n        if (id.IsAuthenticated)\n        {\n            display = String.Format(&quot;{0} was authenticated using {1}&quot;, id.Name, \n                id.AuthenticationType);\n        }\n        else\n        {\n           display = String.Format(&quot;{0} was not authenticated&quot;, id.Name);\n        }\n        return display;\n    }\n\n    public static void SimpleListenerWithAuthentication(string[] prefixes)\n    {\n        if (!HttpListener.IsSupported)\n        {\n            Console.WriteLine (&quot;Windows XP SP2 or Server 2003 is required to use the HttpListener class.&quot;);\n            return;\n        }\n\n        // URI prefixes are required,\n        // for example &quot;http://contoso.com:8080/index/&quot;.\n        if (prefixes == null || prefixes.Length == 0)\n          throw new ArgumentException(&quot;prefixes&quot;);\n\n        // Set up a listener.\n        HttpListener listener = new HttpListener();\n        foreach (string s in prefixes)\n        {\n            listener.Prefixes.Add(s);\n        }\n        listener.Start();\n        // Specify Negotiate as the authentication scheme.\n        listener.AuthenticationSchemes = AuthenticationSchemes.Negotiate;\n        Console.WriteLine(&quot;Listening...&quot;);\n        // GetContext blocks while waiting for a request. \n        HttpListenerContext context = listener.GetContext();\n        HttpListenerRequest request = context.Request;\n        // Obtain a response object.\n        HttpListenerResponse response = context.Response;\n        // Construct a response.\n        string clientInformation = ClientInformation(context);\n        byte[] buffer = System.Text.Encoding.UTF8.GetBytes(&quot;&lt;HTML&gt;&lt;BODY&gt; &quot; + clientInformation + &quot;&lt;/BODY&gt;&lt;/HTML&gt;&quot;);\n        // Get a response stream and write the response to it.\n        response.ContentLength64 = buffer.Length;\n        System.IO.Stream output = response.OutputStream;\n        output.Write(buffer,0,buffer.Length);\n        output.Close();\n        listener.Stop();\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_HttpListenerContext_Response\">\r\n    \r\n            <a id=\"System_Net_HttpListenerContext_Response_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Response</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.net.httplistenerresponse\" data-linktype=\"relative-path\">HttpListenerResponse</a> object that will be sent to the client in response to the client&#39;s request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.HttpListenerResponse Response { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.httplistenerresponse\" data-linktype=\"relative-path\">HttpListenerResponse</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.net.httplistenerresponse\" data-linktype=\"relative-path\">HttpListenerResponse</a> object used to send a response back to the client.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Your application configures the response by setting properties in the <a class=\"xref\" href=\"system.net.httplistenerresponse\" data-linktype=\"relative-path\">HttpListenerResponse</a> object returned by this property. After configuring the response, you send it to the client by closing the response, or by closing this <a class=\"xref\" href=\"system.net.httplistenercontext\" data-linktype=\"relative-path\">HttpListenerContext</a> object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates getting the response to a client&#39;s request and adding the response body.  </p>\n<pre><code class=\"lang-cs\" name=\"Net_Listener_Basic#3\">    // This example requires the System and System.Net namespaces.\n    public static string ClientInformation(HttpListenerContext context)\n    {\n        System.Security.Principal.IPrincipal user = context.User;\n        System.Security.Principal.IIdentity id = user.Identity;\n        if (id == null)\n        {\n            return &quot;Client authentication is not enabled for this Web server.&quot;;\n        }\n        \n        string display;\n        if (id.IsAuthenticated)\n        {\n            display = String.Format(&quot;{0} was authenticated using {1}&quot;, id.Name, \n                id.AuthenticationType);\n        }\n        else\n        {\n           display = String.Format(&quot;{0} was not authenticated&quot;, id.Name);\n        }\n        return display;\n    }\n\n    public static void SimpleListenerWithAuthentication(string[] prefixes)\n    {\n        if (!HttpListener.IsSupported)\n        {\n            Console.WriteLine (&quot;Windows XP SP2 or Server 2003 is required to use the HttpListener class.&quot;);\n            return;\n        }\n\n        // URI prefixes are required,\n        // for example &quot;http://contoso.com:8080/index/&quot;.\n        if (prefixes == null || prefixes.Length == 0)\n          throw new ArgumentException(&quot;prefixes&quot;);\n\n        // Set up a listener.\n        HttpListener listener = new HttpListener();\n        foreach (string s in prefixes)\n        {\n            listener.Prefixes.Add(s);\n        }\n        listener.Start();\n        // Specify Negotiate as the authentication scheme.\n        listener.AuthenticationSchemes = AuthenticationSchemes.Negotiate;\n        Console.WriteLine(&quot;Listening...&quot;);\n        // GetContext blocks while waiting for a request. \n        HttpListenerContext context = listener.GetContext();\n        HttpListenerRequest request = context.Request;\n        // Obtain a response object.\n        HttpListenerResponse response = context.Response;\n        // Construct a response.\n        string clientInformation = ClientInformation(context);\n        byte[] buffer = System.Text.Encoding.UTF8.GetBytes(&quot;&lt;HTML&gt;&lt;BODY&gt; &quot; + clientInformation + &quot;&lt;/BODY&gt;&lt;/HTML&gt;&quot;);\n        // Get a response stream and write the response to it.\n        response.ContentLength64 = buffer.Length;\n        System.IO.Stream output = response.OutputStream;\n        output.Write(buffer,0,buffer.Length);\n        output.Close();\n        listener.Stop();\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_HttpListenerContext_User\">\r\n    \r\n            <a id=\"System_Net_HttpListenerContext_User_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">User</div>        \r\n          </div>\r\n    \r\n            <p>Gets an object used to obtain identity, authentication information, and security roles for the client whose request is represented by this <a class=\"xref\" href=\"system.net.httplistenercontext\" data-linktype=\"relative-path\">HttpListenerContext</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Principal.IPrincipal User { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.iprincipal\" data-linktype=\"relative-path\">IPrincipal</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.security.principal.iprincipal\" data-linktype=\"relative-path\">IPrincipal</a> object that describes the client, or <code>null</code> if the <a class=\"xref\" href=\"system.net.httplistener\" data-linktype=\"relative-path\">HttpListener</a> that supplied this <a class=\"xref\" href=\"system.net.httplistenercontext\" data-linktype=\"relative-path\">HttpListenerContext</a> does not require authentication.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An <a class=\"xref\" href=\"system.net.httplistener\" data-linktype=\"relative-path\">HttpListener</a> indicates that it requires authentication using the <a class=\"xref\" href=\"system.net.httplistener#System_Net_HttpListener_AuthenticationSchemes_\" data-linktype=\"relative-path\">AuthenticationSchemes</a> property or by specifying an <a class=\"xref\" href=\"system.net.authenticationschemeselector\" data-linktype=\"relative-path\">AuthenticationSchemeSelector</a> delegate using the <a class=\"xref\" href=\"system.net.httplistener#System_Net_HttpListener_AuthenticationSchemeSelectorDelegate_\" data-linktype=\"relative-path\">AuthenticationSchemeSelectorDelegate</a> property.  </p>\n<p> To determine the client&#39;s login name and authentication information, check the <a class=\"xref\" href=\"system.security.principal.iprincipal#System_Security_Principal_IPrincipal_Identity_\" data-linktype=\"relative-path\">Identity</a> property in the object returned by this property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates accessing identity and authentication information about the client, and returning it to the client in the response.  </p>\n<pre><code class=\"lang-cs\" name=\"Net_Listener_Basic#8\">    public static string ClientInformation(HttpListenerContext context)\n    {\n        System.Security.Principal.IPrincipal user = context.User;\n        System.Security.Principal.IIdentity id = user.Identity;\n        if (id == null)\n        {\n            return &quot;Client authentication is not enabled for this Web server.&quot;;\n        }\n        \n        string display;\n        if (id.IsAuthenticated)\n        {\n            display = String.Format(&quot;{0} was authenticated using {1}&quot;, id.Name, \n                id.AuthenticationType);\n        }\n        else\n        {\n           display = String.Format(&quot;{0} was not authenticated&quot;, id.Name);\n        }\n        return display;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_HttpListenerContext_AcceptWebSocketAsync_System_String_\">\r\n    \r\n            <a id=\"System_Net_HttpListenerContext_AcceptWebSocketAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AcceptWebSocketAsync(String)</div>        \r\n          </div>\r\n    \r\n            <p>Accept a WebSocket connection as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync (string subProtocol);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>subProtocol</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The supported WebSocket sub-protocol.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.websockets.httplistenerwebsocketcontext\" data-linktype=\"relative-path\">HttpListenerWebSocketContext</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns an <a class=\"xref\" href=\"system.net.websockets.httplistenerwebsocketcontext\" data-linktype=\"relative-path\">HttpListenerWebSocketContext</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>subProtocol</code> is an empty string  </p>\n<p> -or-  </p>\n<p> <code>subProtocol</code> contains illegal characters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.websockets.websocketexception\" data-linktype=\"relative-path\">WebSocketException</a></div>\r\n                  </div>\r\n                  <p>An error occurred when sending the response to complete the WebSocket handshake.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the WebSocket connection has been accepted.  </p>\n<p> The size of the receive buffer is 16,385 bytes. The WebSocket keep-alive interval is set to the default value of 30,000 (30 seconds).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_HttpListenerContext_AcceptWebSocketAsync_System_String_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_Net_HttpListenerContext_AcceptWebSocketAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AcceptWebSocketAsync(String,TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Accept a WebSocket connection specifying the supported WebSocket sub-protocol  and WebSocket keep-alive interval as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync (string subProtocol, TimeSpan keepAliveInterval);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>subProtocol</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The supported WebSocket sub-protocol.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>keepAliveInterval</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The WebSocket protocol keep-alive interval in milliseconds.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.websockets.httplistenerwebsocketcontext\" data-linktype=\"relative-path\">HttpListenerWebSocketContext</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns an <a class=\"xref\" href=\"system.net.websockets.httplistenerwebsocketcontext\" data-linktype=\"relative-path\">HttpListenerWebSocketContext</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>subProtocol</code> is an empty string  </p>\n<p> -or-  </p>\n<p> <code>subProtocol</code> contains illegal characters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>keepAliveInterval</code> is too small.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.websockets.websocketexception\" data-linktype=\"relative-path\">WebSocketException</a></div>\r\n                  </div>\r\n                  <p>An error occurred when sending the response to complete the WebSocket handshake.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the WebSocket connection has been accepted.  </p>\n<p> The size of the receive buffer is 16,385 bytes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_HttpListenerContext_AcceptWebSocketAsync_System_String_System_Int32_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_Net_HttpListenerContext_AcceptWebSocketAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AcceptWebSocketAsync(String,Int32,TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, and WebSocket keep-alive interval as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync (string subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>subProtocol</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The supported WebSocket sub-protocol.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>receiveBufferSize</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The receive buffer size in bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>keepAliveInterval</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The WebSocket protocol keep-alive interval in milliseconds.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.websockets.httplistenerwebsocketcontext\" data-linktype=\"relative-path\">HttpListenerWebSocketContext</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns an <a class=\"xref\" href=\"system.net.websockets.httplistenerwebsocketcontext\" data-linktype=\"relative-path\">HttpListenerWebSocketContext</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>subProtocol</code> is an empty string  </p>\n<p> -or-  </p>\n<p> <code>subProtocol</code> contains illegal characters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>keepAliveInterval</code> is too small.  </p>\n<p> -or-  </p>\n<p> <code>receiveBufferSize</code> is less than 16 bytes  </p>\n<p> -or-  </p>\n<p> <code>receiveBufferSize</code> is greater than 64K bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.websockets.websocketexception\" data-linktype=\"relative-path\">WebSocketException</a></div>\r\n                  </div>\r\n                  <p>An error occurred when sending the response to complete the WebSocket handshake.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> &gt; object will complete after the WebSocket connection has been accepted.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_HttpListenerContext_AcceptWebSocketAsync_System_String_System_Int32_System_TimeSpan_System_ArraySegment_System_Byte__\">\r\n    \r\n            <a id=\"System_Net_HttpListenerContext_AcceptWebSocketAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AcceptWebSocketAsync(String,Int32,TimeSpan,ArraySegment&lt;Byte&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, WebSocket keep-alive interval, and the internal buffer as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync (string subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval, ArraySegment&lt;byte&gt; internalBuffer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>subProtocol</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The supported WebSocket sub-protocol.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>receiveBufferSize</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The receive buffer size in bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>keepAliveInterval</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The WebSocket protocol keep-alive interval in milliseconds.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>internalBuffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.arraysegment-1\" data-linktype=\"relative-path\">ArraySegment</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An internal buffer to use for this operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.websockets.httplistenerwebsocketcontext\" data-linktype=\"relative-path\">HttpListenerWebSocketContext</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns an <a class=\"xref\" href=\"system.net.websockets.httplistenerwebsocketcontext\" data-linktype=\"relative-path\">HttpListenerWebSocketContext</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>subProtocol</code> is an empty string  </p>\n<p> -or-  </p>\n<p> <code>subProtocol</code> contains illegal characters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>keepAliveInterval</code> is too small.  </p>\n<p> -or-  </p>\n<p> <code>receiveBufferSize</code> is less than 16 bytes  </p>\n<p> -or-  </p>\n<p> <code>receiveBufferSize</code> is greater than 64K bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.websockets.websocketexception\" data-linktype=\"relative-path\">WebSocketException</a></div>\r\n                  </div>\r\n                  <p>An error occurred when sending the response to complete the WebSocket handshake.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the WebSocket connection has been accepted.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.HttpListenerContext.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.HttpListenerContext.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.HttpListenerContext\">\r\n<meta name=\"APIName\" content=\"System.Net.HttpListenerContext.AcceptWebSocketAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.HttpListenerContext.Request\">\r\n<meta name=\"APIName\" content=\"System.Net.HttpListenerContext.Response\">\r\n<meta name=\"APIName\" content=\"System.Net.HttpListenerContext.User\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"e4ca0f3d-0cc6-e6ee-2ca7-604840947093\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides access to the request and response objects used by the  class. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.HttpListenerContext\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.HttpListenerContext.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.HttpListenerContext.yml","open_to_public_contributors":true,"api_name":["System.Net.HttpListenerContext","System.Net.HttpListenerContext.AcceptWebSocketAsync","System.Net.HttpListenerContext.Request","System.Net.HttpListenerContext.Response","System.Net.HttpListenerContext.User"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.HttpListenerContext","System::Net::HttpListenerContext","System.Net.HttpListenerContext.AcceptWebSocketAsync","System::Net::HttpListenerContext::AcceptWebSocketAsync","System.Net.HttpListenerContext.Request","System::Net::HttpListenerContext::Request","System.Net.HttpListenerContext.Response","System::Net::HttpListenerContext::Response","System.Net.HttpListenerContext.User","System::Net::HttpListenerContext::User"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"e4ca0f3d-0cc6-e6ee-2ca7-604840947093","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net/HttpListenerContext.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"HttpListenerContext class | Microsoft Docs","_op_ogTitle":"HttpListenerContext class","description":"Provides access to the request and response objects used by the  class. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Net/toc.json","toc_rel":"_splitted/System.Net/toc.json","source_url":"","ms.assetid":"System.Net.HttpListenerContext","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.httplistenercontext","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.httplistenercontext","fileRelativePath":"System.Net.HttpListenerContext.html"},"themesRelativePathToOutputRoot":"_themes/"}