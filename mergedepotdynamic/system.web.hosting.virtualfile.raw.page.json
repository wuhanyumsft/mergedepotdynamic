{"content":"    \r\n    <h1 id=\"System_Web_Hosting_VirtualFile\">\r\n      <span class=\"lang-csharp\">VirtualFile</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a file object in a virtual file or resource space.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class VirtualFile : System.Web.Hosting.VirtualFileBase</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.hosting.virtualfilebase\" data-linktype=\"relative-path\">System.Web.Hosting.VirtualFileBase</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">VirtualFile</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.hosting.virtualfilebase#System_Web_Hosting_VirtualFileBase_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.hosting.virtualfilebase#System_Web_Hosting_VirtualFileBase_Name\" data-linktype=\"relative-path\">Name</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.hosting.virtualfilebase#System_Web_Hosting_VirtualFileBase_VirtualPath\" data-linktype=\"relative-path\">VirtualPath</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The VirtualFile class is the base class for objects that represent files in a virtual file system. Typically, you would implement a descendent of the VirtualFile class for each <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> object descendent in your Web application.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Hosting_VirtualFile__ctor_System_String_\" data-linktype=\"self-bookmark\">VirtualFile(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.hosting.virtualfile\" data-linktype=\"relative-path\">VirtualFile</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Hosting_VirtualFile_IsDirectory\" data-linktype=\"self-bookmark\">IsDirectory</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates that this is a virtual resource that should be treated as a file.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Hosting_VirtualFile_Open\" data-linktype=\"self-bookmark\">Open()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, returns a read-only stream to the virtual resource.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Hosting_VirtualFile__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Web_Hosting_VirtualFile__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VirtualFile(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.hosting.virtualfile\" data-linktype=\"relative-path\">VirtualFile</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected VirtualFile (string virtualPath);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>virtualPath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The virtual path to the resource represented by this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is an implementation of the VirtualFile constructor that retrieves virtual file information from a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object provided by a custom <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> object. For the full code required to run the example, see the Example section of the <a class=\"xref\" href=\"system.web.hosting.virtualfile\" data-linktype=\"relative-path\">VirtualFile</a> class overview.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.Hosting.VirtualPathProvider#41\">    public SampleVirtualFile(string virtualPath, SamplePathProvider provider)\n      : base(virtualPath)\n    {\n      this.spp = provider;\n      GetData();\n    }\n\n    protected void GetData()\n    {\n      // Get the data from the SamplePathProvider\n      DataSet ds = spp.GetVirtualData();\n\n      // Get the virtual file from the resource table.\n      DataTable files = ds.Tables[&quot;resource&quot;];\n      DataRow[] rows = files.Select(\n        String.Format(&quot;(name = &#39;{0}&#39;) AND (type=&#39;file&#39;)&quot;, this.Name));\n\n      // If the select returned a row, store the file contents.\n      if (rows.Length &gt; 0)\n      {\n        DataRow row = rows[0];\n\n        content = row[&quot;content&quot;].ToString();\n      }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.Hosting.VirtualPathProvider#41\">    Public Sub New(ByVal virtualPath As String, ByVal provider As SamplePathProvider)\n      MyBase.New(virtualPath)\n      spp = provider\n      GetData()\n    End Sub\n\n    Protected Sub GetData()\n      &#39; Get the data from the SamplePathProvider.\n      Dim spp As SamplePathProvider\n      spp = CType(HostingEnvironment.VirtualPathProvider, SamplePathProvider)\n\n      Dim ds As DataSet\n      ds = spp.GetVirtualData\n\n      &#39; Get the virtual file data from the resource table.\n      Dim files As DataTable\n      files = ds.Tables(&quot;resource&quot;)\n\n      Dim rows As DataRow()\n      rows = files.Select( _\n        String.Format(&quot;(name=&#39;{0}&#39;) AND (type=&#39;file&#39;)&quot;, Me.Name))\n\n      &#39; If the select returned a row, store the file contents.\n      If (rows.Length &gt; 0) Then\n        Dim row As DataRow\n        row = rows(0)\n\n        content = row(&quot;content&quot;).ToString()\n      End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Hosting_VirtualFile_IsDirectory\">\r\n    \r\n            <a id=\"System_Web_Hosting_VirtualFile_IsDirectory_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsDirectory</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates that this is a virtual resource that should be treated as a file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool IsDirectory { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Always <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Hosting_VirtualFile_Open\">\r\n    \r\n            <a id=\"System_Web_Hosting_VirtualFile_Open_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Open()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, returns a read-only stream to the virtual resource.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.IO.Stream Open ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>A read-only stream to the virtual file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Open method returns a stream containing the data treated as a file by the <a class=\"xref\" href=\"system.web.hosting.virtualpathprovider\" data-linktype=\"relative-path\">VirtualPathProvider</a> class. The stream is read-only and is seekable (the <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CanSeek_\" data-linktype=\"relative-path\">CanSeek</a> property is true).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is an implementation of the Open method that combines virtual-file-specific information with a template file and then returns the combination. The template file is cached to reduce the overhead of reading the file system multiple times to retrieve the template file. For the full code required to run the example, see the Example section of the <a class=\"xref\" href=\"system.web.hosting.virtualfile\" data-linktype=\"relative-path\">VirtualFile</a> class overview.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.Hosting.VirtualPathProvider#42\">    private string FormatTimeStamp(DateTime time)\n    {\n      return String.Format(&quot;{0} at {1}&quot;,\n        time.ToLongDateString(), time.ToLongTimeString());\n    }\n\n    public override Stream Open()\n    {\n      string templateFile = HostingEnvironment.ApplicationPhysicalPath + &quot;App_Data\\&nbsp;&nbsp;&nbsp;&nbsp;emplate.txt&quot;;\n      string pageTemplate;\n      DateTime now = DateTime.Now;\n\n      // Try to get the page template out of the cache.\n      pageTemplate = (string)HostingEnvironment.Cache.Get(&quot;pageTemplate&quot;);\n\n      if (pageTemplate == null)\n      {\n        // Get the page template.\n        using (StreamReader reader = new StreamReader(templateFile))\n        {\n          pageTemplate = reader.ReadToEnd();\n        }\n\n        // Set template timestamp\n        pageTemplate = pageTemplate.Replace(&quot;%templateTimestamp%&quot;, \n          FormatTimeStamp(now));\n\n        // Make pageTemplate dependent on the template file.\n        CacheDependency cd = new CacheDependency(templateFile);\n\n        // Put pageTemplate into cache for maximum of 20 minutes.\n        HostingEnvironment.Cache.Add(&quot;pageTemplate&quot;, pageTemplate, cd,\n          Cache.NoAbsoluteExpiration,\n          new TimeSpan(0, 20, 0),\n          CacheItemPriority.Default, null);\n      }\n\n      // Put the page data into the template.\n      pageTemplate = pageTemplate.Replace(&quot;%file%&quot;, this.Name);\n      pageTemplate = pageTemplate.Replace(&quot;%content%&quot;, content);\n\n      // Get the data time stamp from the cache.\n      DateTime dataTimeStamp = (DateTime)HostingEnvironment.Cache.Get(&quot;dataTimeStamp&quot;);\n      pageTemplate = pageTemplate.Replace(&quot;%dataTimestamp%&quot;, \n        FormatTimeStamp(dataTimeStamp));\n      pageTemplate = pageTemplate.Replace(&quot;%pageTimestamp%&quot;, \n        FormatTimeStamp(now));\n\n      // Put the page content on the stream.\n      Stream stream = new MemoryStream();\n      StreamWriter writer = new StreamWriter(stream);\n\n      writer.Write(pageTemplate);\n      writer.Flush();\n      stream.Seek(0, SeekOrigin.Begin);\n\n      return stream;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.Hosting.VirtualPathProvider#42\">\n    Private Function FormatTimeStamp(ByVal time As DateTime) As String\n      Return String.Format(&quot;{0} at {1}&quot;, _\n        time.ToLongDateString(), time.ToLongTimeString)\n    End Function\n\n    Public Overrides Function Open() As System.IO.Stream\n      Dim templateFile As String\n      templateFile = HostingEnvironment.ApplicationPhysicalPath &amp; &quot;App_Data&nbsp;&nbsp;&nbsp;&nbsp;emplate.txt&quot;\n\n      Dim pageTemplate As String\n      Dim now As DateTime\n      now = DateTime.Now\n\n      &#39; Try to get the page template out of the cache.\n      pageTemplate = CType(HostingEnvironment.Cache.Get(&quot;pageTemplate&quot;), String)\n\n      If pageTemplate Is Nothing Then\n        &#39; Get the page template.\n        Try\n          pageTemplate = My.Computer.FileSystem.ReadAllText(templateFile)\n        Catch fileException As Exception\n          Throw fileException\n        End Try\n\n        &#39; Set template timestamp.\n        pageTemplate = pageTemplate.Replace(&quot;%templateTimestamp%&quot;, _\n          FormatTimeStamp(Now))\n\n        &#39; Make pageTemplate dependent on the template file.\n        Dim cd As CacheDependency\n        cd = New CacheDependency(templateFile)\n\n        &#39; Put pageTemplate into cache for maximum of 20 minutes.\n        HostingEnvironment.Cache.Add(&quot;pageTemplate&quot;, pageTemplate, cd, _\n          Cache.NoAbsoluteExpiration, _\n          New TimeSpan(0, 20, 0), _\n          CacheItemPriority.Default, Nothing)\n      End If\n\n      &#39; Put the page data into the template.\n      pageTemplate = pageTemplate.Replace(&quot;%file%&quot;, Me.Name)\n      pageTemplate = pageTemplate.Replace(&quot;%content%&quot;, content)\n\n      &#39; Get the data timestamp from the cache.\n      Dim dataTimeStamp As DateTime\n      dataTimeStamp = CType(HostingEnvironment.Cache.Get(&quot;dataTimeStamp&quot;), DateTime)\n      pageTemplate = pageTemplate.Replace(&quot;%dataTimestamp%&quot;, _\n        FormatTimeStamp(dataTimeStamp))\n\n      &#39; Set a timestamp for the page.\n      Dim pageTimeStamp As String\n      pageTimeStamp = FormatTimeStamp(now)\n      pageTemplate = pageTemplate.Replace(&quot;%pageTimestamp%&quot;, pageTimeStamp)\n\n      &#39; Put the page content on the stream.\n      Dim stream As MemoryStream\n      stream = New MemoryStream()\n\n      Dim writer As StreamWriter\n      writer = New StreamWriter(stream)\n\n      writer.Write(pageTemplate)\n      writer.Flush()\n      stream.Seek(0, SeekOrigin.Begin)\n\n      Return stream\n    End Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Hosting.VirtualFile.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Hosting.VirtualFile.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.Hosting.VirtualFile\">\r\n<meta name=\"APIName\" content=\"System.Web.Hosting.VirtualFile..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.Hosting.VirtualFile.IsDirectory\">\r\n<meta name=\"APIName\" content=\"System.Web.Hosting.VirtualFile.Open\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"a69d6a2d-f119-6938-3d9b-eb1a60d68ddf\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Web.Hosting\\VirtualFile.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a file object in a virtual file or resource space.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.Hosting/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.Hosting.VirtualFile\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Hosting.VirtualFile.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Hosting.VirtualFile.yml","open_to_public_contributors":true,"api_name":["System.Web.Hosting.VirtualFile","System.Web.Hosting.VirtualFile..ctor","System.Web.Hosting.VirtualFile.IsDirectory","System.Web.Hosting.VirtualFile.Open"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.Hosting.VirtualFile","System::Web::Hosting::VirtualFile","System.Web.Hosting.VirtualFile.#ctor","System::Web::Hosting::VirtualFile::#ctor","System.Web.Hosting.VirtualFile.IsDirectory","System::Web::Hosting::VirtualFile::IsDirectory","System.Web.Hosting.VirtualFile.Open","System::Web::Hosting::VirtualFile::Open"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"a69d6a2d-f119-6938-3d9b-eb1a60d68ddf","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Web.Hosting\\VirtualFile.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.Hosting/VirtualFile.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"VirtualFile class | Microsoft Docs","_op_ogTitle":"VirtualFile class","description":"Represents a file object in a virtual file or resource space.\n","toc_asset_id":"_splitted/System.Web.Hosting/toc.json","toc_rel":"_splitted/System.Web.Hosting/toc.json","source_url":"","ms.assetid":"System.Web.Hosting.VirtualFile","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.hosting.virtualfile","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.hosting.virtualfile","fileRelativePath":"System.Web.Hosting.VirtualFile.html"},"themesRelativePathToOutputRoot":"_themes/"}