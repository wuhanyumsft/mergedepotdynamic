{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ResourceManager</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents a resource manager that provides convenient access to culture-specific resources at run time.  </p>\n<p> <strong>Security Note</strong>: Calling methods in this class with untrusted data is a security risk. Call the methods in the class only with trusted data. For more information, see <a href=\"https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks\" data-linktype=\"external\">Untrusted Data Security Risks</a>.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class ResourceManager</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">ResourceManager</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The ResourceManager class retrieves resources from a binary .resources file that is embedded in an assembly or from a standalone .resources file. If an app has been localized and localized resources have been deployed in <a href=\"../Topic/Creating%20Satellite%20Assemblies%20for%20Desktop%20Apps.md\" data-linktype=\"relative-path\">satellite assemblies</a>, it looks up culture-specific resources, provides resource fallback when a localized resource does not exist, and supports resource serialization.  </p>\n<p> For more information about creating and managing resources in desktop apps and Windows 8.x Store apps, see the following sections:  </p>\n<ul>\n<li><p><a href=\"#desktop\" data-linktype=\"self-bookmark\">Desktop Apps</a>  </p>\n<ul>\n<li><p><a href=\"#creating_resources\" data-linktype=\"self-bookmark\">Creating Resources</a>  </p>\n</li>\n<li><p><a href=\"#instantiating\" data-linktype=\"self-bookmark\">Instantiating a ResourceManager Object</a>  </p>\n</li>\n<li><p><a href=\"#CultureSpecific\" data-linktype=\"self-bookmark\">ResourceManager and Culture-Specific Resources</a>  </p>\n</li>\n<li><p><a href=\"#retrieving\" data-linktype=\"self-bookmark\">Retrieving Resources</a>  </p>\n</li>\n<li><p><a href=\"#exception\" data-linktype=\"self-bookmark\">Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions</a>  </p>\n</li>\n<li><p><a href=\"#versioning\" data-linktype=\"self-bookmark\">Resource Versioning</a>  </p>\n</li>\n<li><p><a href=\"#config\" data-linktype=\"self-bookmark\">&lt;satelliteassemblies&gt; Configuration File Node</a>  </p>\n</li>\n</ul>\n</li>\n<li><p><a href=\"#ws\" data-linktype=\"self-bookmark\">Windows Store Apps</a>  </p>\n</li>\n</ul>\n<p><a name=\"desktop\"></a>   </p>\n<h2 id=\"desktop-apps\">Desktop Apps</h2>\n<p> For desktop apps, theResourceManager class retrieves resources from binary resource (.resources) files. Typically, a language compiler or the  <a href=\"../Topic/Al.exe%20(Assembly%20Linker).md\" data-linktype=\"relative-path\">Assembly Linker (AL.exe)</a> embeds these resource files in an assembly. You can also use a ResourceManager object to retrieve resources directly from a .resources file that is not embedded in an assembly, by calling the <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_CreateFileBasedResourceManager_\" data-linktype=\"relative-path\">CreateFileBasedResourceManager</a> method.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Using standalone .resources files in an ASP.NET app will break XCOPY deployment, because the resources remain locked until they are explicitly released by the <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_ReleaseAllResources_\" data-linktype=\"relative-path\">ReleaseAllResources</a> method. If you want to deploy resources with your ASP.NET apps, you should compile your .resources files into satellite assemblies.  </p>\n</div>\n<p> In a resource-based app, one .resources file contains the resources of the default culture whose resources are used if no culture-specific resources can be found. For example, if an app&#39;s default culture is English (en), the English language resources are used whenever localized resources cannot be found for a specific culture, such as English (United States) (en-US) or French (France) (fr-FR). Typically, the resources for the default culture are embedded in the main app assembly, and resources for other localized cultures are embedded in satellite assemblies. Satellite assemblies contain only resources. They have the same root file name as the main assembly and an extension of .resources.dll. For apps whose assemblies are not registered in the global assembly cache, satellite assemblies are stored in an app subdirectory whose name corresponds to the assembly&#39;s culture.  </p>\n<p><a name=\"creating_resources\"></a>   </p>\n<h3 id=\"creating-resources\">Creating Resources</h3>\n<p> When you develop a resource-based app, you store resource information in text files (files that have a .txt or .restext extension) or XML files (files that have a .resx extension). You then compile the text or XML files with the  <a href=\"../Topic/Resgen.exe%20(Resource%20File%20Generator).md\" data-linktype=\"relative-path\">Resource File Generator (Resgen.exe)</a> to create a binary .resources file. You can then embed the resulting .resources file in an executable or library by using a compiler option such as <code>/resources</code> for the C# and Visual Basic compilers, or you can embed it in a satellite assembly by using the . If you include a .resx file in your Visual Studio project, Visual Studio handles the compilation and embedding of default and localized resources automatically as part of the build process.  </p>\n<p> Ideally, you should create resources for every language your app supports, or at least for a meaningful subset of each language. The binary .resources file names follow the naming convention <em>basename</em>.<em>cultureName</em>.resources, where <em>basename</em> is the name of the app or the name of a class, depending on the level of detail you want. The <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_Name_\" data-linktype=\"relative-path\">Name</a> property is used to determine <em>cultureName</em>. A resource for the app&#39;s default culture should be named <em>basename</em>.resources.  </p>\n<p> For example, suppose that an assembly has several resources in a resource file that has the base name MyResources. These resource files should have names such as MyResources.ja-JP.resources for the Japan (Japanese) culture, MyResources.de.resources for the German culture, MyResources.zh-CHS.resources for the simplified Chinese culture, and MyResources.fr-BE.resources for the French (Belgium) culture. The default resource file should be named MyResources.resources. The culture-specific resource files are commonly packaged in satellite assemblies for each culture. The default resource file should be embedded in the app&#39;s main assembly.  </p>\n<p> Note that  allows resources to be marked as private, but you should always mark them as public so they can be accessed by other assemblies. (Because a satellite assembly contains no code, resources that are marked as private are unavailable to your app through any mechanism.)  </p>\n<p> For more information about creating, packaging, and deploying resources, see the articles <a href=\"../Topic/Creating%20Resource%20Files%20for%20Desktop%20Apps.md\" data-linktype=\"relative-path\">Creating Resource Files</a>, <a href=\"../Topic/Creating%20Satellite%20Assemblies%20for%20Desktop%20Apps.md\" data-linktype=\"relative-path\">Creating Satellite Assemblies</a>, and <a href=\"../Topic/Packaging%20and%20Deploying%20Resources%20in%20Desktop%20Apps.md\" data-linktype=\"relative-path\">Packaging and Deploying Resources</a>.  </p>\n<p><a name=\"instantiating\"></a>   </p>\n<h3 id=\"instantiating-a-resourcemanager-object\">Instantiating a ResourceManager Object</h3>\n<p> You instantiate a ResourceManager object that retrieves resources from an embedded .resources file by calling one of its class constructor overloads. This tightly couples a ResourceManager object with a particular .resources file and with any associated localized .resources files in satellite assemblies.  </p>\n<p> The two most commonly called constructors are:  </p>\n<ul>\n<li><p><a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager__ctor_System_String_System_Reflection_Assembly_\" data-linktype=\"relative-path\">ResourceManager(String,Assembly)</a> looks up resources based on two pieces of information that you supply: the base name of the .resources file, and the assembly in which the default .resources file resides. The base name includes the namespace and root name of the .resources file, without its culture or extension. Note that .resources files that are compiled from the command line typically do not include a namespace name, whereas .resources files that are created in the Visual Studio environment do. For example, if a resource file is named MyCompany.StringResources.resources and the ResourceManager constructor is called from a static method named <code>Example.Main</code>, the following code instantiates a ResourceManager object that can retrieve resources from the .resources file:  </p>\n<pre><code class=\"lang-cs\" name=\"Conceptual.Resources.Retrieving#1\">      ResourceManager rm = new ResourceManager(&quot;MyCompany.StringResources&quot;, \n                                               typeof(Example).Assembly);\n</code></pre><pre><code class=\"lang-vb\" name=\"Conceptual.Resources.Retrieving#1\">      Dim rm As New ResourceManager(&quot;MyCompany.StringResources&quot;,\n                                    GetType(Example).Assembly)\n</code></pre></li>\n<li><p><a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager__ctor_System_Type_\" data-linktype=\"relative-path\">ResourceManager(Type)</a> looks up resources in satellite assemblies based on information from a type object. The type&#39;s fully qualified name corresponds to the base name of the .resources file without its file name extension. In desktop apps that are created by using the Visual Studio Resource Designer, Visual Studio creates a wrapper class whose fully qualified name is the same as the root name of the .resources file. For example, if a resource file is named MyCompany.StringResources.resources and there is a wrapper class named <code>MyCompany.StringResources</code>, the following code instantiates a ResourceManager object that can retrieve resources from the .resources file:  </p>\n<pre><code class=\"lang-cs\" name=\"Conceptual.Resources.Retrieving#2\">      ResourceManager rm = new ResourceManager(typeof(MyCompany.StringResources));\n</code></pre><pre><code class=\"lang-vb\" name=\"Conceptual.Resources.Retrieving#2\">      Dim rm As New ResourceManager(GetType(MyCompany.StringResources))\n</code></pre><p>If the appropriate resources cannot be found, the constructor call creates a valid ResourceManager object. However, the attempt to retrieve a resource throws a <a class=\"xref\" href=\"system.resources.missingmanifestresourceexception\" data-linktype=\"relative-path\">MissingManifestResourceException</a> exception. For information about dealing with the exception, see the <a href=\"#exception\" data-linktype=\"self-bookmark\">Handling MissingManifestResourceException and MissingSatelliteAssembly Exceptions</a> section later in this article.  </p>\n<p>The following example shows how to instantiate a ResourceManager object. It contains the source code for an executable named ShowTime.exe. It also includes the following text file named Strings.txt that contains a single string resource, <code>TimeHeader</code>:  </p>\n</li>\n</ul>\n<pre><code>TimeHeader=The current time is  \n</code></pre><p> You can use a batch file to generate the resource file and embed it into the executable. Here&#39;s the batch file to generate an executable by using the C# compiler:  </p>\n<pre><code>\nresgen strings.txt  \ncsc ShowTime.cs /resource:strings.resources  \n</code></pre><p> For the Visual Basic compiler, you can use the following batch file:  </p>\n<pre><code>\nresgen strings.txt  \nvbc ShowTime.vb /resource:strings.resources  \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Resources.ResourceManager.Class#1\">using System;\nusing System.Resources;\n\npublic class Example\n{\n   public static void Main()\n   {\n      ResourceManager rm = new ResourceManager(&quot;Strings&quot;, \n                               typeof(Example).Assembly);\n      string timeString = rm.GetString(&quot;TimeHeader&quot;);\n      Console.WriteLine(&quot;{0} {1:T}&quot;, timeString, DateTime.Now);   \n   }\n}\n// The example displays output like the following:\n//        The current time is 2:03:14 PM\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Resources.ResourceManager.Class#1\">Imports System.Resources\n\nModule Example\n   Public Sub Main()\n      Dim rm As New ResourceManager(&quot;Strings&quot;, GetType(Example).Assembly)\n      Dim timeString As String = rm.GetString(&quot;TimeHeader&quot;)\n      Console.WriteLine(&quot;{0} {1:T}&quot;, timeString, Date.Now)   \n   End Sub\nEnd Module\n&#39; The example displays output similar to the following:\n&#39;       The current time is 2:03:14 PM\n</code></pre><p><a name=\"CultureSpecific\"></a>   </p>\n<h3 id=\"resourcemanager-and-culture-specific-resources\">ResourceManager and Culture-Specific Resources</h3>\n<p> A localized app requires resources to be deployed, as discussed in the article <a href=\"../Topic/Packaging%20and%20Deploying%20Resources%20in%20Desktop%20Apps.md\" data-linktype=\"relative-path\">Packaging and Deploying Resources</a>. If the assemblies are properly configured, the resource manager determines which resources to retrieve based on the current thread&#39;s <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_CurrentUICulture_\" data-linktype=\"relative-path\">CurrentUICulture</a> property. (That property also returns the current thread&#39;s UI culture.) For example, if an app is compiled with default English language resources in the main assembly and with French and Russian language resources in two satellite assemblies, and the <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_CurrentUICulture_\" data-linktype=\"relative-path\">CurrentUICulture</a> property is set to fr-FR, the resource manager retrieves the French resources.  </p>\n<p> You can set the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentUICulture_\" data-linktype=\"relative-path\">CurrentUICulture</a> property explicitly or implicitly. The way you set it determines how the ResourceManager object retrieves resources based on culture:  </p>\n<ul>\n<li><p>If you explicitly set the <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_CurrentUICulture_\" data-linktype=\"relative-path\">CurrentUICulture</a> property to a specific culture, the resource manager always retrieves the resources for that culture, regardless of the user&#39;s browser or operating system language. Consider an app that is compiled with default English language resources and three satellite assemblies that contain resources for English (United States), French (France), and Russian (Russia). If the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentUICulture_\" data-linktype=\"relative-path\">CurrentUICulture</a> property is set to fr-FR, the ResourceManager object always retrieves the French (France) resources, even if the user&#39;s operating system language is not French. Make sure that this is the desired behavior before you set the property explicitly.  </p>\n<p> In ASP.NET apps, you must set the <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_CurrentUICulture_\" data-linktype=\"relative-path\">CurrentUICulture</a> property explicitly, because it is unlikely that the setting on the server will match incoming client requests. An ASP.NET app can set the <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_CurrentUICulture_\" data-linktype=\"relative-path\">CurrentUICulture</a> property explicitly to the user&#39;s browser accept language.  </p>\n<p> Explicitly setting the <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_CurrentUICulture_\" data-linktype=\"relative-path\">CurrentUICulture</a> property defines the current UI culture for that thread. It does not affect the current UI culture of any other threads in an app.  </p>\n</li>\n<li><p>You can set the UI culture of all threads in an app domain by assigning a <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents that culture to the static <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_DefaultThreadCurrentUICulture_\" data-linktype=\"relative-path\">DefaultThreadCurrentUICulture</a> property.  </p>\n</li>\n<li><p>If you do not explicitly set the current UI culture and you do not define a default culture for the current app domain, the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentUICulture_\" data-linktype=\"relative-path\">CurrentUICulture</a> property is set implicitly by the Windows <code>GetUserDefaultUILanguage</code> function. This function is provided by the Multilingual User Interface (MUI), which enables the user to set the default language. If the UI language is not set by the user, it defaults to the system-installed language, which is the language of operating system resources.  </p>\n<p>The following simple &quot;Hello world&quot; example sets the current UI culture explicitly. It contains resources for three cultures: English (United States) or en-US, French (France) or fr-FR, and Russian (Russia) or ru-RU. The en-US resources are contained in a text file named Greetings.txt:  </p>\n</li>\n</ul>\n<pre><code>HelloString=Hello world!  \n</code></pre><p> The fr-FR resources are contained in a text file named Greetings.fr-FR.txt:  </p>\n<pre><code>HelloString=Salut tout le monde!  \n</code></pre><p> The ru-RU resources are contained in a text file named Greetings.ru-RU.txt:  </p>\n<pre><code>HelloString=Всем привет!  \n</code></pre><p> Here&#39;s the source code for the example (Example.vb for the Visual Basic version or Example.cs for the C# version):  </p>\n<pre><code class=\"lang-vb\" name=\"Conceptual.Resources.CurrentCulture#1\">Imports System.Globalization\nImports System.Resources\nImports System.Threading\n\nModule Example\n   Sub Main()\n      &#39; Create array of supported cultures\n      Dim cultures() As String = {&quot;en-CA&quot;, &quot;en-US&quot;, &quot;fr-FR&quot;, &quot;ru-RU&quot; }\n      Dim rnd As New Random()\n      Dim cultureNdx As Integer = rnd.Next(0, cultures.Length)\n      Dim originalCulture As CultureInfo = Thread.CurrentThread.CurrentCulture\n      Dim rm As New ResourceManager(&quot;Greetings&quot;, GetType(Example).Assembly)\n      Try\n         Dim newCulture As New CultureInfo(cultures(cultureNdx))\n         Thread.CurrentThread.CurrentCulture = newCulture\n         Thread.CurrentThread.CurrentUICulture = newCulture\n         Dim greeting As String = String.Format(&quot;The current culture is {0}.{1}{2}&quot;,\n                                                Thread.CurrentThread.CurrentUICulture.Name,\n                                                vbCrLf, rm.GetString(&quot;HelloString&quot;))\n\n         Console.WriteLine(greeting)\n      Catch e As CultureNotFoundException\n         Console.WriteLine(&quot;Unable to instantiate culture {0}&quot;, e.InvalidCultureName)\n      Finally\n         Thread.CurrentThread.CurrentCulture = originalCulture\n         Thread.CurrentThread.CurrentUICulture = originalCulture\n      End Try\n   End Sub\nEnd Module\n&#39; The example displays output like the following:\n&#39;       The current culture is ru-RU.\n&#39;       Всем привет!\n</code></pre><pre><code class=\"lang-cs\" name=\"Conceptual.Resources.CurrentCulture#1\">using System;\nusing System.Globalization;\nusing System.Resources;\nusing System.Threading;\n\npublic class Example\n{\n   public static void Main()\n   {\n      // Create array of supported cultures\n      string[] cultures = {&quot;en-CA&quot;, &quot;en-US&quot;, &quot;fr-FR&quot;, &quot;ru-RU&quot; };\n      Random rnd = new Random();\n      int cultureNdx = rnd.Next(0, cultures.Length);\n      CultureInfo originalCulture = Thread.CurrentThread.CurrentCulture;\n      ResourceManager rm = new ResourceManager(&quot;Greetings&quot;, typeof(Example).Assembly);\n      try {\n         CultureInfo newCulture = new CultureInfo(cultures[cultureNdx]);\n         Thread.CurrentThread.CurrentCulture = newCulture;\n         Thread.CurrentThread.CurrentUICulture = newCulture;\n         string greeting = String.Format(&quot;The current culture is {0}.\\n{1}&quot;,\n                                         Thread.CurrentThread.CurrentUICulture.Name,\n                                         rm.GetString(&quot;HelloString&quot;));\n         Console.WriteLine(greeting);\n      }\n      catch (CultureNotFoundException e) {\n         Console.WriteLine(&quot;Unable to instantiate culture {0}&quot;, e.InvalidCultureName);\n      }\n      finally {\n         Thread.CurrentThread.CurrentCulture = originalCulture;\n         Thread.CurrentThread.CurrentUICulture = originalCulture;\n      }\n   }\n}\n// The example displays output like the following:\n//       The current culture is ru-RU.\n//       Всем привет!\n</code></pre><p> To compile this example, create a batch (.bat) file that contains the following commands and run it from the command prompt. If you&#39;re using C#, specify <code>csc</code> instead of <code>vbc</code> and <code>Example.cs</code> instead of <code>Example.vb</code>.  </p>\n<pre><code>resgen Greetings.txt   \nvbc Example.vb /resource:Greetings.resources  \n\nresgen Greetings.fr-FR.txt  \nMd fr-FR  \nal /embed:Greetings.fr-FR.resources /culture:fr-FR /out:fr-FR\\Example.resources.dll  \n\nresgen Greetings.ru-RU.txt  \nMd ru-RU  \nal /embed:Greetings.ru-RU.resources /culture:ru-RU /out:ru-RU\\Example.resources.dll  \n</code></pre><p><a name=\"retrieving\"></a>   </p>\n<h3 id=\"retrieving-resources\">Retrieving Resources</h3>\n<p> You call the <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_GetObject_System_String_\" data-linktype=\"relative-path\">GetObject(String)</a> and <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_GetString_System_String_\" data-linktype=\"relative-path\">GetString(String)</a> methods to access a specific resource. You can also call the <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_GetStream_System_String_\" data-linktype=\"relative-path\">GetStream(String)</a> method to retrieve non-string resources as a byte array. By default, in an app that has localized resources, these methods return the resource for the culture determined by the current UI culture of the thread that made the call. See the previous section, <a href=\"#CultureSpecific\" data-linktype=\"self-bookmark\">ResourceManager and Culture-Specific Resources</a>, for more information about how the current UI culture of a thread is defined. If the resource manager cannot find the resource for the current thread&#39;s UI culture, it uses a fallback process to retrieve the specified resource. If the resource manager cannot find any localized resources, it uses the resources of the default culture. For more information about resource fallback rules, see the &quot;Resource Fallback Process&quot; section of the article <a href=\"../Topic/Packaging%20and%20Deploying%20Resources%20in%20Desktop%20Apps.md\" data-linktype=\"relative-path\">Packaging and Deploying Resources</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the .resources file specified in the ResourceManager class constructor cannot be found, the attempt to retrieve a resource throws a <a class=\"xref\" href=\"system.resources.missingmanifestresourceexception\" data-linktype=\"relative-path\">MissingManifestResourceException</a> or <a class=\"xref\" href=\"system.resources.missingsatelliteassemblyexception\" data-linktype=\"relative-path\">MissingSatelliteAssemblyException</a> exception. For information about dealing with the exception, see the <a href=\"#exception\" data-linktype=\"self-bookmark\">Handling  MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions</a> section later in this topic.  </p>\n</div>\n<p> The following example uses the <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_GetString_\" data-linktype=\"relative-path\">GetString</a> method to retrieve culture-specific resources. It consists of resources compiled from .txt files for the English (en), French (France) (fr-FR), and Russian (Russia) (ru-RU) cultures. The example changes the current culture and current UI culture to English (United States), French (France), Russian (Russia), and Swedish (Sweden). It then calls the <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_GetString_\" data-linktype=\"relative-path\">GetString</a> method to retrieve the localized string, which it displays along with the current day and month. Notice that the output displays the appropriate localized string except when the current UI culture is Swedish (Sweden). Because Swedish language resources are unavailable, the app instead uses the resources of the default culture, which is English.  </p>\n<p> The example requires the text-based resource files listed in following table. Each has a single string resource named <code>DateStart</code>.  </p>\n<table>\n<thead>\n<tr>\n<th>Culture</th>\n<th>File name</th>\n<th>Resource name</th>\n<th>Resource value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>en-US</td>\n<td>DateStrings.txt</td>\n<td><code>DateStart</code></td>\n<td>Today is</td>\n</tr>\n<tr>\n<td>fr-FR</td>\n<td>DateStrings.fr-FR.txt</td>\n<td><code>DateStart</code></td>\n<td>Aujourd&#39;hui, c&#39;est le</td>\n</tr>\n<tr>\n<td>ru-RU</td>\n<td>DateStrings.ru-RU.txt</td>\n<td><code>DateStart</code></td>\n<td>Сегодня</td>\n</tr>\n</tbody>\n</table>\n<p> Here&#39;s the source code for the example (ShowDate.vb for the Visual Basic version or ShowDate.cs for the C# version of the code).  </p>\n<pre><code class=\"lang-cs\" name=\"System.Resources.ResourceManager.Class#2\">using System;\nusing System.Globalization;\nusing System.Resources;\nusing System.Threading;\n\n[assembly:NeutralResourcesLanguage(&quot;en&quot;)]\n\npublic class Example\n{\n   public static void Main()\n   {\n      string[] cultureNames = { &quot;en-US&quot;, &quot;fr-FR&quot;, &quot;ru-RU&quot;, &quot;sv-SE&quot; };\n      ResourceManager rm = new ResourceManager(&quot;DateStrings&quot;,\n                                               typeof(Example).Assembly);\n      \n      foreach (var cultureName in cultureNames) {\n         CultureInfo culture = CultureInfo.CreateSpecificCulture(cultureName);\n         Thread.CurrentThread.CurrentCulture = culture; \n         Thread.CurrentThread.CurrentUICulture = culture;\n\n         Console.WriteLine(&quot;Current UI Culture: {0}&quot;, \n                           CultureInfo.CurrentUICulture.Name);\n         string dateString = rm.GetString(&quot;DateStart&quot;);\n         Console.WriteLine(&quot;{0} {1:M}.\\n&quot;, dateString, DateTime.Now);                           \n      }                                           \n   }\n}\n// The example displays output similar to the following:\n//       Current UI Culture: en-US\n//       Today is February 03.\n//       \n//       Current UI Culture: fr-FR\n//       Aujourd&#39;hui, c&#39;est le 3 f&#233;vrier\n//       \n//       Current UI Culture: ru-RU\n//       Сегодня февраля 03.\n//       \n//       Current UI Culture: sv-SE\n//       Today is den 3 februari.\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Resources.ResourceManager.Class#2\">Imports System.Globalization\nImports System.Resources\nImports System.Threading\n\n&lt;Assembly:NeutralResourcesLanguage(&quot;en&quot;)&gt;\n\nModule Example\n   Public Sub Main()\n      Dim cultureNames() As String = { &quot;en-US&quot;, &quot;fr-FR&quot;, &quot;ru-RU&quot;, &quot;sv-SE&quot; }\n      Dim rm As New ResourceManager(&quot;DateStrings&quot;,\n                                    GetType(Example).Assembly)\n      \n      For Each cultureName In cultureNames\n         Dim culture As CultureInfo = CultureInfo.CreateSpecificCulture(cultureName)\n         Thread.CurrentThread.CurrentCulture = culture \n         Thread.CurrentThread.CurrentUICulture = culture\n\n         Console.WriteLine(&quot;Current UI Culture: {0}&quot;, \n                           CultureInfo.CurrentUICulture.Name)\n         Dim dateString As String = rm.GetString(&quot;DateStart&quot;)\n         Console.WriteLine(&quot;{0} {1:M}.&quot;, dateString, Date.Now)                           \n         Console.WriteLine()\n      Next                                           \n   End Sub\nEnd Module\n&#39; The example displays output similar to the following:\n&#39;       Current UI Culture: en-US\n&#39;       Today is February 03.\n&#39;       \n&#39;       Current UI Culture: fr-FR\n&#39;       Aujourd&#39;hui, c&#39;est le 3 f&#233;vrier\n&#39;       \n&#39;       Current UI Culture: ru-RU\n&#39;       Сегодня февраля 03.\n&#39;       \n&#39;       Current UI Culture: sv-SE\n&#39;       Today is den 3 februari.\n</code></pre><p> To compile this example, create a batch file that contains the following commands and run it from the command prompt. If you&#39;re using C#, specify <code>csc</code> instead of <code>vbc</code> and <code>showdate.cs</code> instead of <code>showdate.vb</code>.  </p>\n<pre><code>\nresgen DateStrings.txt  \nvbc showdate.vb /resource:DateStrings.resources  \n\nmd fr-FR  \nresgen DateStrings.fr-FR.txt  \nal /out:fr-FR\\Showdate.resources.dll /culture:fr-FR /embed:DateStrings.fr-FR.resources   \n\nmd ru-RU  \nresgen DateStrings.ru-RU.txt  \nal /out:ru-RU\\Showdate.resources.dll /culture:ru-RU /embed:DateStrings.ru-RU.resources  \n</code></pre><p> There are two ways to retrieve the resources of a specific culture other than the current UI culture:  </p>\n<ul>\n<li><p>You can call the <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_GetString_System_String_System_Globalization_CultureInfo_\" data-linktype=\"relative-path\">GetString(String,CultureInfo)</a>,  <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_GetObject_System_String_System_Globalization_CultureInfo_\" data-linktype=\"relative-path\">GetObject(String,CultureInfo)</a>, or <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_GetStream_System_String_System_Globalization_CultureInfo_\" data-linktype=\"relative-path\">GetStream(String,CultureInfo)</a> method to retrieve a resource for a specific culture. If a localized resource cannot be found, the resource manager uses the resource fallback process to locate an appropriate resource.  </p>\n</li>\n<li><p>You can call the <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_GetResourceSet_\" data-linktype=\"relative-path\">GetResourceSet</a> method to obtain a <a class=\"xref\" href=\"system.resources.resourceset\" data-linktype=\"relative-path\">ResourceSet</a> object that represents the resources for a particular culture. In the method call, you can determine whether the resource manager probes for parent cultures if it is unable to find localized resources, or whether it simply falls back to the resources of the default culture. You can then use the <a class=\"xref\" href=\"system.resources.resourceset\" data-linktype=\"relative-path\">ResourceSet</a> methods to access the resources (localized for that culture) by name, or to enumerate the resources in the set.  </p>\n</li>\n</ul>\n<p><a name=\"exception\"></a>   </p>\n<h3 id=\"handling-missingmanifestresourceexception-and-missingsatelliteassemblyexception-exceptions\">Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions</h3>\n<p> If you try to retrieve a specific resource, but the resource manager cannot find that resource and either no default culture has been defined or the resources of the default culture cannot be located, the resource manager throws a <a class=\"xref\" href=\"system.resources.missingmanifestresourceexception\" data-linktype=\"relative-path\">MissingManifestResourceException</a> exception if it expects to find the resources in the main assembly or a <a class=\"xref\" href=\"system.resources.missingsatelliteassemblyexception\" data-linktype=\"relative-path\">MissingSatelliteAssemblyException</a> if it expects to find the resources in a satellite assembly. Note that the exception is thrown when you call a resource retrieval method such as <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_GetString_\" data-linktype=\"relative-path\">GetString</a> or <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_GetObject_\" data-linktype=\"relative-path\">GetObject</a>, and not when you instantiate a ResourceManager object.  </p>\n<p> The exception is typically thrown under the following conditions:  </p>\n<ul>\n<li><p>The appropriate resource file or satellite assembly does not exist. If the resource manager expects the app&#39;s default resources to be embedded in the main app assembly, they are absent. If the <a class=\"xref\" href=\"system.resources.neutralresourceslanguageattribute\" data-linktype=\"relative-path\">NeutralResourcesLanguageAttribute</a> attribute indicates that the app&#39;s default resources reside in a satellite assembly, that assembly cannot be found. When you compile your app, make sure that resources are embedded in the main assembly or that the necessary satellite assembly is generated and is named appropriately. Its name should take the form <em>appName</em>.resources.dll, and it should be located in a directory named after the culture whose resources it contains.  </p>\n</li>\n<li><p>Your app doesn&#39;t have a default or neutral culture defined. Add the <a class=\"xref\" href=\"system.resources.neutralresourceslanguageattribute\" data-linktype=\"relative-path\">NeutralResourcesLanguageAttribute</a> attribute to a source code file or to the project information file (AssemblyInfo.vb for a Visual Basic app or AssemblyInfo.cs for a C# app) file.  </p>\n</li>\n<li><p>The <code>baseName</code> parameter in the <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager__ctor_System_String_System_Reflection_Assembly_\" data-linktype=\"relative-path\">ResourceManager(String,Assembly)</a> constructor does not specify the name of a .resources file. The name should include the resource file&#39;s fully qualified namespace but not its file name extension. Typically, resource files that are created in Visual Studio include namespace names, but resource files that are created and compiled at the command prompt do not. You can determine the names of embedded .resources files by compiling and running the following utility. This is a console app that accepts the name of a main assembly or satellite assembly as a command-line parameter. It displays the strings that should be provided as the <code>baseName</code> parameter so that the resource manager can correctly identify the resource.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Resources.ResourceManager.Class#4\">using System;\nusing System.IO;\nusing System.Reflection;\nusing System.Resources;\n\npublic class Example\n{\n   public static void Main()\n   {\n      if (Environment.GetCommandLineArgs().Length == 1) { \n         Console.WriteLine(&quot;No filename.&quot;);\n         return;\n      }\n      \n      string filename = Environment.GetCommandLineArgs()[1].Trim();\n      // Check whether the file exists.\n      if (! File.Exists(filename)) {\n         Console.WriteLine(&quot;{0} does not exist.&quot;, filename);\n         return;\n      }   \n      \n      // Try to load the assembly.\n      Assembly assem = Assembly.LoadFrom(filename);\n      Console.WriteLine(&quot;File: {0}&quot;, filename);\n         \n      // Enumerate the resource files.\n      string[] resNames = assem.GetManifestResourceNames();\n      if (resNames.Length == 0)\n         Console.WriteLine(&quot;   No resources found.&quot;);\n\n      foreach (var resName in resNames)\n         Console.WriteLine(&quot;   Resource: {0}&quot;, resName.Replace(&quot;.resources&quot;, &quot;&quot;));\n\n      Console.WriteLine();\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Resources.ResourceManager.Class#4\">Imports System.IO\nImports System.Reflection\nImports System.Resources\n \nModule Example\n   Public Sub Main()\n      If Environment.GetCommandLineArgs.Length = 1 Then \n         Console.WriteLine(&quot;No filename.&quot;)\n         Exit Sub\n      End If\n      Dim filename As String = Environment.GetCommandLineArgs(1).Trim()\n      &#39; Check whether the file exists.\n      If Not File.Exists(filename) Then\n         Console.WriteLine(&quot;{0} does not exist.&quot;, filename)\n         Exit Sub\n      End If   \n      \n      &#39; Try to load the assembly.\n      Dim assem As Assembly = Assembly.LoadFrom(filename)\n      Console.WriteLine(&quot;File: {0}&quot;, filename)\n         \n      &#39; Enumerate the resource files.\n      Dim resNames() As String = assem.GetManifestResourceNames()\n      If resNames.Length = 0 Then\n         Console.WriteLine(&quot;   No resources found.&quot;)\n      End If\n      For Each resName In resNames\n         Console.WriteLine(&quot;   Resource: {0}&quot;, resName.Replace(&quot;.resources&quot;, &quot;&quot;))\n      Next\n      Console.WriteLine()\n   End Sub\nEnd Module\n</code></pre><p>If you are changing the current culture of your application explicitly, you should also remember that the resource manager retrieves a resource set based on the value of the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentUICulture_\" data-linktype=\"relative-path\">CurrentUICulture</a> property, and not the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> property. Typically, if you change one value, you should also change the other.  </p>\n</li>\n</ul>\n<p><a name=\"versioning\"></a>   </p>\n<h3 id=\"resource-versioning\">Resource Versioning</h3>\n<p> Because the main assembly that contains an app&#39;s default resources is separate from the app&#39;s satellite assemblies, you can release a new version of your main assembly without redeploying the satellite assemblies. You use the <a class=\"xref\" href=\"system.resources.satellitecontractversionattribute\" data-linktype=\"relative-path\">SatelliteContractVersionAttribute</a> attribute to use existing satellite assemblies and instruct the resource manager not to redeploy them with a new version of your main assembly,  </p>\n<p> For more information about versioning support for satellite assemblies, see the article <a href=\"../Topic/Retrieving%20Resources%20in%20Desktop%20Apps.md\" data-linktype=\"relative-path\">Retrieving Resources</a>.  </p>\n<p><a name=\"config\"></a>   </p>\n<h3 id=\"satelliteassemblies-configuration-file-node\">&lt;satelliteassemblies&gt; Configuration File Node</h3>\n<p> For executables that are deployed and run from a website (HREF .exe files), the ResourceManager object may probe for satellite assemblies over the web, which can hurt your app&#39;s performance. To eliminate the performance problem, you can limit this probing to the satellite assemblies that you have deployed with your app. To do this, you create a <code>&lt;satelliteassemblies&gt;</code> node in your app&#39;s configuration file to specify that you have deployed a specific set of cultures for your app, and that the ResourceManager object should not try to probe for any culture that is not listed in that node.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The preferred alternative to creating a <code>&lt;satelliteassemblies&gt;</code> node is to use the <a href=\"../Topic/ClickOnce%20Deployment%20Manifest.md\" data-linktype=\"relative-path\">ClickOnce Deployment Manifest</a> feature.  </p>\n</div>\n<p> In your app&#39;s configuration file, create a section similar to the following:  </p>\n<pre><code>&lt;?xml version =&quot;1.0&quot;?&gt;  \n&lt;configuration&gt;  \n    &lt;satelliteassemblies&gt;  \n        &lt;assembly name=&quot;MainAssemblyName, Version=versionNumber, Culture=neutral, PublicKeyToken=null|yourPublicKeyToken&quot;&gt;  \n            &lt;culture&gt;cultureName1&lt;/culture&gt;  \n            &lt;culture&gt;cultureName2&lt;/culture&gt;  \n            &lt;culture&gt;cultureName3&lt;/culture&gt;  \n        &lt;/assembly&gt;  \n    &lt;/satelliteassemblies&gt;  \n&lt;/configuration&gt;  \n</code></pre><p> Edit this configuration information as follows:  </p>\n<ul>\n<li><p>Specify one or more <code>&lt;assembly&gt;</code> nodes for each main assembly that you deploy, where each node specifies a fully qualified assembly name. Specify the name of your main assembly in place of <em>MainAssemblyName</em>, and specify the <code>Version</code>, <code>PublicKeyToken</code>, and <code>Culture</code> attribute values that correspond to your main assembly.  </p>\n<p> For the <code>Version</code> attribute, specify the version number of your assembly. For example, the first release of your assembly might be version number 1.0.0.0.  </p>\n<p> For the <code>PublicKeyToken</code> attribute, specify the keyword <code>null</code> if you have not signed your assembly with a strong name, or specify your public key token if you have signed your assembly.  </p>\n<p> For the <code>Culture</code> attribute, specify the keyword <code>neutral</code> to designate the main assembly and cause the ResourceManager class to probe only for the cultures listed in the <code>&lt;culture&gt;</code> nodes.  </p>\n<p> For more information about fully qualified assembly names, see the article <a href=\"../Topic/Assembly%20Names.md\" data-linktype=\"relative-path\">Assembly Names</a>. For more information about strong-named assemblies, see the article <a href=\"../Topic/Creating%20and%20Using%20Strong-Named%20Assemblies.md\" data-linktype=\"relative-path\">Creating and Using Strong-Named Assemblies</a>.  </p>\n</li>\n<li><p>Specify one or more <code>&lt;culture&gt;</code> nodes with a specific culture name, such as &quot;fr-FR&quot;, or a neutral culture name, such as &quot;fr&quot;.  </p>\n<p>If resources are needed for any assembly not listed under the <code>&lt;satelliteassemblies&gt;</code> node, the ResourceManager class probes for cultures using standard probing rules.  </p>\n</li>\n</ul>\n<p><a name=\"ws\"></a>   </p>\n<h2 id=\"includewin8appnamelongaddincludeswin8-appname-long-mdmd-apps\">Windows 8.x Store Apps</h2>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Although the ResourceManager class is supported in Windows 8.x Store apps, we do not recommend its use. Use this class only when you develop Portable Class Library projects that can be used with Windows 8.x Store apps. To retrieve resources from Windows 8.x Store apps, use the <a href=\"http://go.microsoft.com/fwlink/p/?LinkId=238182\" data-linktype=\"external\">Windows.ApplicationModel.Resources.ResourceLoader</a> class instead.  </p>\n</div>\n<p> For Windows 8.x Store apps, theResourceManager class retrieves resources from package resource index (PRI) files. A single PRI file (the application package PRI file) contains the resources for both the default culture and any localized cultures. You use the MakePRI utility to create a PRI file from one or more resource files that are in XML resource (.resw) format. For resources that are included in a Visual Studio project, Visual Studio handles the process of creating and packaging the PRI file automatically. You can then use the .NET Framework ResourceManager class to access the app&#39;s or library&#39;s resources.  </p>\n<p> You can instantiate a ResourceManager object for a Windows 8.x Store app in the same way that you do for a desktop app.  </p>\n<p> You can then access the resources for a particular culture by passing the name of the resource to be retrieved to the <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_GetString_System_String_\" data-linktype=\"relative-path\">GetString(String)</a> method. By default, this method returns the resource for the culture determined by the current UI culture of the thread that made the call. You can also retrieve the resources for a specific culture by passing the name of the resource and a <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the culture whose resource is to be retrieved to the <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_GetString_System_String_System_Globalization_CultureInfo_\" data-linktype=\"relative-path\">GetString(String,CultureInfo)</a> method. If the resource for the current UI culture or the specified culture cannot be found, the resource manager uses a UI language fallback list to locate a suitable resource.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ResourceManager()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class with default values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected ResourceManager ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor is useful only if you write your own class that derives from  the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager__ctor_System_Type_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ResourceManager(Type)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class that looks up resources in satellite assemblies based on information from the specified type object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public ResourceManager (Type resourceSource);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>resourceSource</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A type from which the resource manager derives all information for finding .resources files.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>resourceSource</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<h2 id=\"desktop-apps\">Desktop Apps</h2>\n<p> In desktop apps, the resource manager uses the <code>resourceSource</code> parameter to load a particular resource file as follows:  </p>\n<ul>\n<li><p>If the <a class=\"xref\" href=\"system.resources.neutralresourceslanguageattribute\" data-linktype=\"relative-path\">NeutralResourcesLanguageAttribute</a> attribute is not used to indicate that the resources of the default culture reside in a satellite assembly, the resource manager assumes that the resource file for the default culture is found in the same assembly as the type specified by the <code>resourceSource</code> parameter.  </p>\n</li>\n<li><p>The resource manager assumes that the default resource file has the same base name as the type specified by the <code>resourceSource</code> parameter.  </p>\n</li>\n<li><p>The resource manager uses the default <a class=\"xref\" href=\"system.resources.resourceset\" data-linktype=\"relative-path\">ResourceSet</a> class to manipulate the resource file.  </p>\n<p>For example, given a type named MyCompany.MyProduct.MyType, the resource manager looks for a .resources file named MyCompany.MyProduct.MyType.resources in the assembly that defines MyType.  </p>\n<p>In Visual Studio, the Resource Designer automatically generates code that defines an <code>internal</code> (in C#) or <code>Friend</code> (in Visual Basic) class whose name is the same as the base name of the .resources file for the default culture. This makes it possible to instantiate a <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> object and couple it with a particular set of resources by getting a type object whose name corresponds to the name of the resource, because as long as the class is visible to the compiler, the resources must be as well. For example, if a .resources file is named Resource1, the following statement instantiates a <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> object to manage the .resources file named Resource1:  </p>\n<pre><code class=\"lang-cs\" name=\"System.Resources.ResourceManager.ctor#2\">      ResourceManager rm = new ResourceManager(typeof(Resource1));\n</code></pre><p>If you&#39;re not using Visual Studio, you can create a class with no members whose namespace and name are the same as that of the default .resources file. The example provides an illustration.  </p>\n</li>\n</ul>\n<h2 id=\"includewin8appnamelongaddincludeswin8-appname-long-mdmd-apps\">Windows 8.x Store Apps</h2>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Although the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class is supported in Windows 8.x Store apps, we do not recommend its use. Use this class only when you develop Portable Class Library projects that can be used with Windows 8.x Store apps. To retrieve resources from Windows 8.x Store apps, use the <a href=\"http://go.microsoft.com/fwlink/p/?LinkId=238182\" data-linktype=\"external\">Windows.ApplicationModel.Resources.ResourceLoader</a> class instead.  </p>\n</div>\n<p> In Windows 8.x Store apps, <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> uses the <code>resourceSource</code> parameter to infer the assembly, base name, and the namespace where the resource items can be located within the app&#39;s package resource index (PRI) file. For example, given a type named MyCompany.MyProduct.MyType that is defined in <code>MyAssembly</code>, the resource manager looks for a resource set identifier named MyAssembly and looks for a scope MyCompany.MyProduct.MyType within that resource set. The resource manager searches for resource items under the default context (current culture, current high contrast setting, and so on) within this scope.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager__ctor_System_String_System_Reflection_Assembly_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ResourceManager(String,Assembly)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class that looks up resources contained in files with the specified root name in the given assembly.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public ResourceManager (string baseName, System.Reflection.Assembly assembly);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>baseName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The root name of the resource file without its extension but including any fully qualified namespace name. For example, the root name for the resource file named MyApplication.MyResource.en-US.resources is MyApplication.MyResource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>assembly</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The main assembly for the resources.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>baseName</code> or <code>assembly</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<h2 id=\"desktop-apps\">Desktop Apps</h2>\n<p> In desktop apps, the individual culture-specific resource files should be contained in satellite assemblies, and the default culture&#39;s resource file should be contained in the main assembly. A satellite assembly is assumed to contain resources for a single culture specified in that assembly&#39;s manifest, and is loaded as necessary.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To retrieve resources from .resources files directly instead of retrieving them from assemblies, you must call the <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_CreateFileBasedResourceManager_\" data-linktype=\"relative-path\">CreateFileBasedResourceManager</a> method instead to instantiate a <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> object.  </p>\n</div>\n<p> If the resource file identified by <code>baseName</code> cannot be found in <code>assembly</code>, the method instantiates a <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> object, but the attempt to retrieve a specific resource throws an exception, typically <a class=\"xref\" href=\"system.resources.missingmanifestresourceexception\" data-linktype=\"relative-path\">MissingManifestResourceException</a>. For information about diagnosing the cause of the exception, see the &quot;Handling the MissingManifestResourceException Exception&quot; section of the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class topic.  </p>\n<h2 id=\"includewin8appnamelongaddincludeswin8-appname-long-mdmd-apps\">Windows 8.x Store Apps</h2>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Although the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class is supported in Windows 8.x Store apps, we do not recommend its use. Use this class only when you develop Portable Class Library projects that can be used with Windows 8.x Store apps. To retrieve resources from Windows 8.x Store apps, use the <a href=\"http://go.microsoft.com/fwlink/p/?LinkId=238182\" data-linktype=\"external\">Windows.ApplicationModel.Resources.ResourceLoader</a> class instead.  </p>\n</div>\n<p> In Windows 8.x Store apps, the resource manager uses the simple name of the <code>assembly</code> parameter to look up a matching resource set in the app&#39;s package resource index (PRI) file. The <code>baseName</code> parameter is used to look up a resource item within the resource set. For example, the root name for PortableLibrary1.Resource1.de-DE.resources is PortableLibrary1.Resource1.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager__ctor_System_String_System_Reflection_Assembly_System_Type_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ResourceManager(String,Assembly,Type)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class that uses a specified <a class=\"xref\" href=\"system.resources.resourceset\" data-linktype=\"relative-path\">ResourceSet</a> class to look up resources contained in files with the specified root name in the given assembly.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public ResourceManager (string baseName, System.Reflection.Assembly assembly, Type usingResourceSet);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>baseName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The root name of the resource file without its extension but including any fully qualified namespace name. For example, the root name for the resource file named MyApplication.MyResource.en-US.resources is MyApplication.MyResource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>assembly</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The main assembly for the resources.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>usingResourceSet</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type of the custom <a class=\"xref\" href=\"system.resources.resourceset\" data-linktype=\"relative-path\">ResourceSet</a> to use. If <code>null</code>, the default runtime <a class=\"xref\" href=\"system.resources.resourceset\" data-linktype=\"relative-path\">ResourceSet</a> object is used.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>usingResourceset</code> is not a derived class of <a class=\"xref\" href=\"system.resources.resourceset\" data-linktype=\"relative-path\">ResourceSet</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>baseName</code> or <code>assembly</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The individual culture-specific resource files should be contained in satellite assemblies, and the default culture&#39;s resource file should be contained in the main assembly. A satellite assembly is assumed to contain resources for a single culture specified in that assembly&#39;s manifest, and is loaded as necessary.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To retrieve resources from .resources files directly instead of retrieving them from assemblies, you must call the <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_CreateFileBasedResourceManager_\" data-linktype=\"relative-path\">CreateFileBasedResourceManager</a> method instead to instantiate a <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> object.  </p>\n</div>\n<p> If the resource file identified by <code>baseName</code> cannot be found in <code>assembly</code>, the method instantiates a <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> object, but the attempt to retrieve a specific resource throws an exception, typically <a class=\"xref\" href=\"system.resources.missingmanifestresourceexception\" data-linktype=\"relative-path\">MissingManifestResourceException</a>. For information about diagnosing the cause of the exception, see the &quot;Handling the MissingManifestResourceException Exception&quot; section of the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class topic.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>usingResourceSet</code> parameter is used to support your own resource format, and will commonly be <code>null</code>. This is different from the constructor that takes a <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> only.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Fields\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager_BaseNameField\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BaseNameField</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Specifies the root name of the resource files that the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> searches for resources.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected string BaseNameField;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The BaseNameField field is useful only if you write your own class that derives from the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager_HeaderVersionNumber\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">HeaderVersionNumber</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Specifies the version of resource file headers that the current implementation of <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> can interpret and produce.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly int HeaderVersionNumber;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager_MagicNumber\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MagicNumber</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Holds the number used to identify resource files.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly int MagicNumber;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value is set to 0xBEEFCACE. The first four bytes of the system default file format contain a 32-bit signed integer in little-endian format (see <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a>).  </p>\n<p> If the MagicNumber is found, the bytes following it will be a version number for a <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> header, followed by a number indicating how many bytes should be skipped to get past this header. The next number indicates the version of the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> that created the header, followed by version specific information.  </p>\n<p> The version number for the current implementation is one. The next bytes are a length-prefixed string containing the name of an <a class=\"xref\" href=\"system.resources.iresourcereader\" data-linktype=\"relative-path\">IResourceReader</a>, which can read this file.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager_MainAssembly\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MainAssembly</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Specifies the main assembly that contains the resources.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected System.Reflection.Assembly MainAssembly;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The MainAssembly field is useful only if you write your own class that derives from the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager_ResourceSets\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ResourceSets</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Contains a <a class=\"xref\" href=\"system.collections.hashtable\" data-linktype=\"relative-path\">Hashtable</a> that returns a mapping from cultures to <a class=\"xref\" href=\"system.resources.resourceset\" data-linktype=\"relative-path\">ResourceSet</a> objects.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected System.Collections.Hashtable ResourceSets;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager_BaseName\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BaseName</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the root name of the resource files that the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> searches for resources.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual string BaseName { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The root name of the resource files that the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> searches for resources.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The BaseName property reflects the fully qualified namespace name and the root resource name of a resource file, without its culture or file name extension. For example, if an app&#39;s default resource file is named <code>SampleApps.StringResources.resources</code>, the value of the BaseName property  is &quot;SampleApps.StringResources&quot;. If an app&#39;s default resource file is named <code>SampleApps.StringResources.en-US.resources</code> and is embedded in a satellite assembly, the value of the BaseName property is still &quot;SampleApps.StringResources&quot;.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The BaseName property value of a resource file that is compiled and embedded from the command line does not include a namespace name unless you explicitly include one when compiling the file. On the other hand, the BaseName property value of a resource file that is compiled and embedded within the Visual Studio environment typically does include the default namespace name.  </p>\n</div>\n<p> The BaseName property value is the same as the string passed to the <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager__ctor_System_String_System_Reflection_Assembly_\" data-linktype=\"relative-path\">ResourceManager(String,Assembly)</a> or <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager__ctor_System_String_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">ResourceManager(String,Assembly,Type)</a> constructor when instantiating a <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager_FallbackLocation\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FallbackLocation</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the location from which to retrieve default fallback resources.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected System.Resources.UltimateResourceFallbackLocation FallbackLocation { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.ultimateresourcefallbacklocation\" data-linktype=\"relative-path\">UltimateResourceFallbackLocation</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the enumeration values that specifies where the resource manager can look for fallback resources.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The FallbackLocation property is useful only if you write your own class that derives from the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.resources.neutralresourceslanguageattribute\" data-linktype=\"relative-path\">NeutralResourcesLanguageAttribute</a> attribute to inform the resource manager where to find the default culture for an app: in the main assembly (default) or in a satellite assembly.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager_IgnoreCase\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IgnoreCase</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value that indicates whether the resource manager allows case-insensitive resource lookups in the <span class=\"xref\">stem.Resources.ResourceManager.GetString*</span> and <span class=\"xref\">stem.Resources.ResourceManager.GetObject*</span> methods.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool IgnoreCase { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to ignore case during resource lookup; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the value of the IgnoreCase property is <code>false</code>, a resource with the name &quot;Resource&quot; is not equivalent to the resource with the name &quot;resource&quot;. If IgnoreCase is <code>true</code>, a resource with the name &quot;Resource&quot; is equivalent to the resource with the name &quot;resource&quot;. Note, however, that when IgnoreCase is <code>true</code>, the <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_GetString_\" data-linktype=\"relative-path\">GetString</a> and <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_GetObject_\" data-linktype=\"relative-path\">GetObject</a> methods perform case-insensitive string comparisons by using the invariant culture. The advantage is that results of case-insensitive string comparisons performed by these methods are the same on all computers regardless of culture. The disadvantage is that the results are not consistent with the casing rules of all cultures.  </p>\n<p> For example, the Turkish alphabet has two versions of the character I: one with a dot and one without a dot. In Turkish, the character I (Unicode 0049) is considered the uppercase version of a different character ı (Unicode 0131). The character i (Unicode 0069) is considered the lowercase version of yet another character İ (Unicode 0130). According to these casing rules, a case-insensitive string comparison of the characters i (Unicode 0069) and I (Unicode 0049) should fail for the culture &quot;tr-TR&quot; (Turkish in Turkey). However, because the comparison is conducted by using the casing rules of the invariant culture if IgnoreCase is <code>true</code>, this comparison succeeds.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> For performance reasons, it is best to always specify the correct case for your resource names. Setting IgnoreCase to <code>true</code> can cause a significant increase in working set and a significant decline in performance.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager_ResourceSetType\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ResourceSetType</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the type of the resource set object that the resource manager uses to construct a <a class=\"xref\" href=\"system.resources.resourceset\" data-linktype=\"relative-path\">ResourceSet</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual Type ResourceSetType { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type of the resource set object that the resource manager uses to construct a <a class=\"xref\" href=\"system.resources.resourceset\" data-linktype=\"relative-path\">ResourceSet</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager_CreateFileBasedResourceManager_System_String_System_String_System_Type_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateFileBasedResourceManager(String,String,Type)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> object that searches a specific directory instead of an assembly manifest for resources.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Resources.ResourceManager CreateFileBasedResourceManager (string baseName, string resourceDir, Type usingResourceSet);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>baseName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The root name of the resources. For example, the root name for the resource file named &quot;MyResource.en-US.resources&quot; is &quot;MyResource&quot;.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>resourceDir</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the directory to search for the resources. <code>resourceDir</code> can be an absolute path or a relative path from the application directory.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>usingResourceSet</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type of the custom <a class=\"xref\" href=\"system.resources.resourceset\" data-linktype=\"relative-path\">ResourceSet</a> to use. If <code>null</code>, the default runtime <a class=\"xref\" href=\"system.resources.resourceset\" data-linktype=\"relative-path\">ResourceSet</a> object is used.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A new instance of a resource manager that searches the specified directory instead of an assembly manifest for resources.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>baseName</code> or <code>resourceDir</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method returns a resource manager that retrieves resources from a .resources file that is not embedded in an assembly. You can use this <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> object to load resources for an ASP.NET page or to test a <a class=\"xref\" href=\"system.resources.resourceset\" data-linktype=\"relative-path\">ResourceSet</a> implementation.  For an example that retrieves resources from a standalone .resources file, see the <a href=\"../Topic/Retrieving%20Resources%20in%20Desktop%20Apps.md\" data-linktype=\"relative-path\">Retrieving Resources</a> article.  </p>\n<p> This method lets you specify a <a class=\"xref\" href=\"system.resources.resourceset\" data-linktype=\"relative-path\">ResourceSet</a> implementation. If you do not want a specific <a class=\"xref\" href=\"system.resources.resourceset\" data-linktype=\"relative-path\">ResourceSet</a> implementation, but would like to use a custom resource file format, you should derive from the <a class=\"xref\" href=\"system.resources.resourceset\" data-linktype=\"relative-path\">ResourceSet</a> class, override the <a class=\"xref\" href=\"system.resources.resourceset#System_Resources_ResourceSet_GetDefaultReader_\" data-linktype=\"relative-path\">GetDefaultReader</a> and <a class=\"xref\" href=\"system.resources.resourceset#System_Resources_ResourceSet_GetDefaultWriter_\" data-linktype=\"relative-path\">GetDefaultWriter</a> methods, and pass that type to this constructor.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Using standalone .resources files in an ASP.NET app will break XCOPY deployment, because the resources remain locked until they are explicitly released by the <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_ReleaseAllResources_\" data-linktype=\"relative-path\">ReleaseAllResources</a> method. If you want to deploy resources with your ASP.NET apps, compile your .resources files into satellite assemblies.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager_GetNeutralResourcesLanguage_System_Reflection_Assembly_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetNeutralResourcesLanguage(Assembly)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns culture-specific information for the main assembly&#39;s default resources by retrieving the value of the <a class=\"xref\" href=\"system.resources.neutralresourceslanguageattribute\" data-linktype=\"relative-path\">NeutralResourcesLanguageAttribute</a> attribute on a specified assembly.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected static System.Globalization.CultureInfo GetNeutralResourcesLanguage (System.Reflection.Assembly a);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>a</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The assembly for which to return culture-specific information.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The culture from the <a class=\"xref\" href=\"system.resources.neutralresourceslanguageattribute\" data-linktype=\"relative-path\">NeutralResourcesLanguageAttribute</a> attribute, if found; otherwise, the invariant culture.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager_GetObject_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetObject(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the value of the specified non-string resource.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual object GetObject (string name);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>name</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the resource to get.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The value of the resource localized for the caller&#39;s current culture settings. If an appropriate resource set exists but <code>name</code> cannot be found, the method returns <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>name</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.missingmanifestresourceexception\" data-linktype=\"relative-path\">MissingManifestResourceException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>No usable set of localized resources has been found, and there are no default culture resources. For information about how to handle this exception, see the &quot;Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions&quot; section in the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class topic.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.missingsatelliteassemblyexception\" data-linktype=\"relative-path\">MissingSatelliteAssemblyException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The default culture&#39;s resources reside in a satellite assembly that could not be found. For information about how to handle this exception, see the &quot;Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions&quot; section in the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class topic.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The GetObject method is used to retrieve non-string resources. These include values that belong to primitive data types such as <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> or <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>, bitmaps (such as a <a class=\"xref\" href=\"system.drawing.bitmap\" data-linktype=\"relative-path\">System.Drawing.Bitmap</a> object), or custom serialized objects. Typically, the returned object must be cast (in C#) or converted (in Visual Basic) to an object of the appropriate type.  </p>\n<p> The returned resource is localized for the UI culture of the current thread, which is defined by the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentUICulture_\" data-linktype=\"relative-path\">CurrentUICulture</a> property. If the resource is not localized for that culture, the resource manager uses fallback rules to load an appropriate resource. If no usable set of localized resources is found, the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> falls back on the default culture&#39;s resources. If a resource set for the default culture is not found, the method throws a <a class=\"xref\" href=\"system.resources.missingmanifestresourceexception\" data-linktype=\"relative-path\">MissingManifestResourceException</a> exception or, if the resource set is expected to reside in a satellite assembly, a <a class=\"xref\" href=\"system.resources.missingsatelliteassemblyexception\" data-linktype=\"relative-path\">MissingSatelliteAssemblyException</a> exception. If the resource manager can load an appropriate resource set but cannot find a resource named <code>name</code>, the method returns <code>null</code>.  </p>\n<p> The <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_IgnoreCase_\" data-linktype=\"relative-path\">IgnoreCase</a> property determines whether the comparison of <code>name</code> with the names of resources is case-insensitive (the default) or case-sensitive.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> This method can throw more exceptions than are listed. One reason this might occur is if a method that this method calls throws an exception.  For example, a <a class=\"xref\" href=\"system.io.fileloadexception\" data-linktype=\"relative-path\">FileLoadException</a> exception might be thrown if an error was made deploying or installing a satellite assembly, or a <a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a> exception might be thrown if a user-defined type throws a user-defined exception when the type is deserialized.  </p>\n</div>\n<h2 id=\"performance-considerations\">Performance Considerations</h2>\n<p> If you call the <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_GetObject_\" data-linktype=\"relative-path\">GetObject</a> method multiple times with the same <code>name</code> parameter, do not depend on the method returning a reference to the same object with each call. This is because the <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_GetObject_\" data-linktype=\"relative-path\">GetObject</a> method can return a reference to an existing resource object in a cache, or it can reload the resource and return a reference to a new resource object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager_GetObject_System_String_System_Globalization_CultureInfo_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetObject(String,CultureInfo)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value of the specified non-string resource localized for the specified culture.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual object GetObject (string name, System.Globalization.CultureInfo culture);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>name</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the resource to get.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>culture</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The culture for which the resource is localized. If the resource is not localized for this culture, the resource manager uses fallback rules to locate an appropriate resource.  </p>\n<p> If this value is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object is obtained by using the <span class=\"xref\">stem.Globalization.CultureInfo.CurrentUICulture*</span> property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The value of the resource, localized for the specified culture. If an appropriate resource set exists but <code>name</code> cannot be found, the method returns <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>name</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.missingmanifestresourceexception\" data-linktype=\"relative-path\">MissingManifestResourceException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>No usable set of resources have been found, and there are no default culture resources. For information about how to handle this exception, see the &quot;Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions&quot; section in the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class topic.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.missingsatelliteassemblyexception\" data-linktype=\"relative-path\">MissingSatelliteAssemblyException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The default culture&#39;s resources reside in a satellite assembly that could not be found. For information about how to handle this exception, see the &quot;Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions&quot; section in the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class topic.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The GetObject method is used to retrieve non-string resources. These include values that belong to primitive data types such as <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> or <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>, bitmaps (such as a <a class=\"xref\" href=\"system.drawing.bitmap\" data-linktype=\"relative-path\">System.Drawing.Bitmap</a> object), or custom serialized objects. Typically, the returned object must be cast (in C#) or converted (in Visual Basic) to an object of the appropriate type.  </p>\n<p> The returned resource is localized for the culture that is specified by <code>culture</code>, or for the culture that is specified by the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentUICulture_\" data-linktype=\"relative-path\">CurrentUICulture</a> property if <code>culture</code> is <code>null</code>. If the resource is not localized for that culture, the resource manager uses fallback rules to load an appropriate resource. If no usable set of localized resources is found, the resource manager falls back on the default culture&#39;s resources. If a resource set for the default culture is not found, the method throws a <a class=\"xref\" href=\"system.resources.missingmanifestresourceexception\" data-linktype=\"relative-path\">MissingManifestResourceException</a> exception or, if the resource set is expected to reside in a satellite assembly, a <a class=\"xref\" href=\"system.resources.missingsatelliteassemblyexception\" data-linktype=\"relative-path\">MissingSatelliteAssemblyException</a> exception. If the resource manager can load an appropriate resource set but cannot find a resource named <code>name</code>, the method returns <code>null</code>.  </p>\n<p> The <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_IgnoreCase_\" data-linktype=\"relative-path\">IgnoreCase</a> property determines whether the comparison of <code>name</code> with the names of resources is case-insensitive (the default) or case-sensitive.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> This method can throw more exceptions than are listed. One reason this might occur is if a method that this method calls throws an exception.  For example, a <a class=\"xref\" href=\"system.io.fileloadexception\" data-linktype=\"relative-path\">FileLoadException</a> exception might be thrown if an error was made deploying or installing a satellite assembly, or a <a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a> exception might be thrown if a user-defined type throws a user-defined exception when the type is deserialized.  </p>\n</div>\n<h2 id=\"performance-considerations\">Performance Considerations</h2>\n<p> If you call the <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_GetObject_\" data-linktype=\"relative-path\">GetObject</a> method multiple times with the same <code>name</code> parameter, do not depend on the method returning a reference to the same object with each call. This is because the <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_GetObject_\" data-linktype=\"relative-path\">GetObject</a> method can return a reference to an existing resource object in a cache, or it can reload the resource and return a reference to a new resource object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager_GetResourceFileName_System_Globalization_CultureInfo_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetResourceFileName(CultureInfo)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Generates the name of the resource file for the given <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual string GetResourceFileName (System.Globalization.CultureInfo culture);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>culture</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The culture object for which a resource file name is constructed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name that can be used for a resource file for the given <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The GetResourceFileName method is useful only if you write your own class that derives from the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class.  </p>\n<p> This method uses the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_Name_\" data-linktype=\"relative-path\">Name</a> property as part of the file name for all cultures other than the invariant culture. This method does not look in an assembly&#39;s manifest or touch the disk, and is used only to construct a resource file name (suitable for passing to the <a class=\"xref\" href=\"system.resources.resourcereader\" data-linktype=\"relative-path\">ResourceReader</a> constructor) or a manifest resource blob name.  </p>\n<p> A derived class can override this method to look for a different extension, such as &quot;.ResX&quot;, or a completely different scheme for naming resource files. Note that the method can be used to customize the name of a resource file within a satellite assembly, and not to customize the name of the satellite assembly itself.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager_GetResourceSet_System_Globalization_CultureInfo_System_Boolean_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetResourceSet(CultureInfo,Boolean,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the resource set for a particular culture.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Resources.ResourceSet GetResourceSet (System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>culture</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The culture whose resources are to be retrieved.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>createIfNotExists</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to load the resource set, if it has not been loaded yet; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>tryParents</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to use resource fallback to load an appropriate resource if the resource set cannot be found; <code>false</code> to bypass the resource fallback process. (See the Remarks section.)</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.resourceset\" data-linktype=\"relative-path\">ResourceSet</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The resource set for the specified culture.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>culture</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.missingmanifestresourceexception\" data-linktype=\"relative-path\">MissingManifestResourceException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>tryParents</code> is <code>true</code>, no usable set of resources has been found, and there are no default culture resources.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The resource set that is returned represents the resources that are localized for the specified culture. If the resources have not been localized for that culture and <code>tryParents</code> is <code>true</code>, GetResourceSet uses resource fallback rules to load an appropriate resource. If <code>tryParents</code> is <code>false</code> and a culture-specific resource set cannot be found, the method returns <code>null</code>. For more information about resource fallback, see &quot;The Resource Fallback Process&quot; section in the <a href=\"../Topic/Packaging%20and%20Deploying%20Resources%20in%20Desktop%20Apps.md\" data-linktype=\"relative-path\">Packaging and Deploying Resources</a> article.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager_GetSatelliteContractVersion_System_Reflection_Assembly_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetSatelliteContractVersion(Assembly)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the version specified by the <a class=\"xref\" href=\"system.resources.satellitecontractversionattribute\" data-linktype=\"relative-path\">SatelliteContractVersionAttribute</a> attribute in the given assembly.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected static Version GetSatelliteContractVersion (System.Reflection.Assembly a);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>a</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The assembly to check for the <a class=\"xref\" href=\"system.resources.satellitecontractversionattribute\" data-linktype=\"relative-path\">SatelliteContractVersionAttribute</a> attribute.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.version\" data-linktype=\"relative-path\">Version</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The satellite contract version of the given assembly, or <code>null</code> if no version was found.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.version\" data-linktype=\"relative-path\">Version</a> found in the assembly <code>a</code> is invalid.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>a</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information about satellite assembly versioning, see the <a class=\"xref\" href=\"system.resources.satellitecontractversionattribute\" data-linktype=\"relative-path\">SatelliteContractVersionAttribute</a> reference topic.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager_GetStream_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetStream(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns an unmanaged memory stream object from the specified resource.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.IO.UnmanagedMemoryStream GetStream (string name);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>name</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of a resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.unmanagedmemorystream\" data-linktype=\"relative-path\">UnmanagedMemoryStream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An unmanaged memory stream object that represents a resource .</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value of the specified resource is not a <a class=\"xref\" href=\"system.io.memorystream\" data-linktype=\"relative-path\">MemoryStream</a> object.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>name</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.missingmanifestresourceexception\" data-linktype=\"relative-path\">MissingManifestResourceException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>No usable set of resources is found, and there are no default resources. For information about how to handle this exception, see the &quot;Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions&quot; section in the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class topic.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.missingsatelliteassemblyexception\" data-linktype=\"relative-path\">MissingSatelliteAssemblyException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The default culture&#39;s resources reside in a satellite assembly that could not be found. For information about how to handle this exception, see the &quot;Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions&quot; section in the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class topic.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The GetStream method takes the name of a resource that is stored as a <a class=\"xref\" href=\"system.io.memorystream\" data-linktype=\"relative-path\">MemoryStream</a> object, gets the value of the <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> resource, and returns an <a class=\"xref\" href=\"system.io.unmanagedmemorystream\" data-linktype=\"relative-path\">UnmanagedMemoryStream</a> object. It requires that you work directly with a stream of bytes, which you then convert to an object. This method is useful primarily for performance reasons: Retrieving a resource as a byte stream instead of an explicit object can improve performance.  </p>\n<p> The returned resource is localized for the UI culture of the current thread, which is defined by the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentUICulture_\" data-linktype=\"relative-path\">CurrentUICulture</a> property. If the resource is not localized for that culture, the resource manager uses fallback rules to load an appropriate resource. If no usable set of localized resources is found, the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> falls back on the default culture&#39;s resources. If a resource set for the default culture is not found, the method throws a <a class=\"xref\" href=\"system.resources.missingmanifestresourceexception\" data-linktype=\"relative-path\">MissingManifestResourceException</a> exception or, if the resource set is expected to reside in a satellite assembly, a <a class=\"xref\" href=\"system.resources.missingsatelliteassemblyexception\" data-linktype=\"relative-path\">MissingSatelliteAssemblyException</a> exception. If the resource manager can load an appropriate resource set but cannot find a resource named <code>name</code>, the method returns <code>null</code>.  </p>\n<p> The <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_IgnoreCase_\" data-linktype=\"relative-path\">IgnoreCase</a> property determines whether the comparison of <code>name</code> with the names of resources is case-insensitive (the default) or case-sensitive.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager_GetStream_System_String_System_Globalization_CultureInfo_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetStream(String,CultureInfo)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns an unmanaged memory stream object from the specified resource, using the specified culture.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.IO.UnmanagedMemoryStream GetStream (string name, System.Globalization.CultureInfo culture);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>name</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of a resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>culture</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An  object that specifies the culture to use for the resource lookup. If <code>culture</code> is <code>null</code>, the culture for the current thread is used.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.unmanagedmemorystream\" data-linktype=\"relative-path\">UnmanagedMemoryStream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An unmanaged memory stream object that represents a resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value of the specified resource is not a <a class=\"xref\" href=\"system.io.memorystream\" data-linktype=\"relative-path\">MemoryStream</a> object.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>name</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.missingmanifestresourceexception\" data-linktype=\"relative-path\">MissingManifestResourceException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>No usable set of resources is found, and there are no default resources. For information about how to handle this exception, see the &quot;Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions&quot; section in the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class topic.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.missingsatelliteassemblyexception\" data-linktype=\"relative-path\">MissingSatelliteAssemblyException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The default culture&#39;s resources reside in a satellite assembly that could not be found. For information about how to handle this exception, see the &quot;Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions&quot; section in the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class topic.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The GetStream method takes the name of a resource that is stored as a <a class=\"xref\" href=\"system.io.memorystream\" data-linktype=\"relative-path\">MemoryStream</a> object, gets the value of the <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> resource, and returns an <a class=\"xref\" href=\"system.io.unmanagedmemorystream\" data-linktype=\"relative-path\">UnmanagedMemoryStream</a> object. It requires that you work directly with a stream of bytes, which you then convert to an object. This method is useful primarily for performance reasons: Retrieving a resource as a byte stream instead of an explicit object can improve performance.  </p>\n<p> The returned resource is localized for the culture that is specified by <code>culture</code>, or for the culture that is specified by the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentUICulture_\" data-linktype=\"relative-path\">CurrentUICulture</a> property if <code>culture</code> is <code>null</code>. If the resource is not localized for that culture, the resource manager uses fallback rules to load an appropriate resource. If no usable set of localized resources is found, the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> falls back on the default culture&#39;s resources. If a resource set for the default culture is not found, the method throws a <a class=\"xref\" href=\"system.resources.missingmanifestresourceexception\" data-linktype=\"relative-path\">MissingManifestResourceException</a> exception or, if the resource set is expected to reside in a satellite assembly, a <a class=\"xref\" href=\"system.resources.missingsatelliteassemblyexception\" data-linktype=\"relative-path\">MissingSatelliteAssemblyException</a> exception. If the resource manager can load an appropriate resource set but cannot find a resource named <code>name</code>, the method returns <code>null</code>.  </p>\n<p> The <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_IgnoreCase_\" data-linktype=\"relative-path\">IgnoreCase</a> property determines whether the comparison of <code>name</code> with the names of resources is case-insensitive (the default) or case-sensitive.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager_GetString_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetString(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the value of the specified string resource.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual string GetString (string name);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>name</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the resource to retrieve.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The value of the resource localized for the caller&#39;s current UI culture, or <code>null</code> if <code>name</code> cannot be found in a resource set.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>name</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value of the specified resource is not a string.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.missingmanifestresourceexception\" data-linktype=\"relative-path\">MissingManifestResourceException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>No usable set of resources has been found, and there are no resources for the default culture. For information about how to handle this exception, see the &quot;Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions&quot; section in the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class topic.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.missingsatelliteassemblyexception\" data-linktype=\"relative-path\">MissingSatelliteAssemblyException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The default culture&#39;s resources reside in a satellite assembly that could not be found. For information about how to handle this exception, see the &quot;Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions&quot; section in the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class topic.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<h2 id=\"desktop-apps\">Desktop Apps</h2>\n<p> In desktop apps, the resource that is returned is localized for the UI culture of the current thread, as defined by the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentUICulture_\" data-linktype=\"relative-path\">CurrentUICulture</a> property. If the resource has not been localized for that culture, the resource manager probes for a resource by following the steps outlined in the &quot;Resource Fallback Process&quot; section of the <a href=\"../Topic/Packaging%20and%20Deploying%20Resources%20in%20Desktop%20Apps.md\" data-linktype=\"relative-path\">Packaging and Deploying Resources</a> article. If no usable set of localized resources is found, the resource manager falls back on the default culture&#39;s resources. If the resource manager cannot load the default culture&#39;s resource set, the method throws a <a class=\"xref\" href=\"system.resources.missingmanifestresourceexception\" data-linktype=\"relative-path\">MissingManifestResourceException</a> exception or, if the resource set is expected to reside in a satellite assembly, a <a class=\"xref\" href=\"system.resources.missingsatelliteassemblyexception\" data-linktype=\"relative-path\">MissingSatelliteAssemblyException</a> exception. If the resource manager can load an appropriate resource set but cannot find a resource named <code>name</code>, the method returns <code>null</code>.  </p>\n<p> The <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_IgnoreCase_\" data-linktype=\"relative-path\">IgnoreCase</a> property determines whether the comparison of <code>name</code> with the names of resources is case-insensitive (the default) or case-sensitive.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> This method can throw more exceptions than are listed. One reason this might occur is if a method that this method calls throws an exception.  For example, a <a class=\"xref\" href=\"system.io.fileloadexception\" data-linktype=\"relative-path\">FileLoadException</a> exception might be thrown if an error was made deploying or installing a satellite assembly, or a <a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a> exception might be thrown if a user-defined type throws a user-defined exception when the type is deserialized.  </p>\n</div>\n<h2 id=\"includewin8appnamelongaddincludeswin8-appname-long-mdmd-apps\">Windows 8.x Store Apps</h2>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Although the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class is supported in Windows 8.x Store apps, we do not recommend its use. Use this class only when you develop Portable Class Library projects that can be used with Windows 8.x Store apps. To retrieve resources from Windows 8.x Store apps, use the <a href=\"http://go.microsoft.com/fwlink/p/?LinkId=238182\" data-linktype=\"external\">Windows.ApplicationModel.Resources.ResourceLoader</a> class instead.  </p>\n</div>\n<p> In Windows 8.x Store apps, the GetString method returns the value of the <code>name</code> string resource, localized for the caller&#39;s current UI culture settings. The list of cultures is derived from the operating system&#39;s preferred UI language list. If the resource manager cannot match <code>name</code>, the method returns <code>null</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager_GetString_System_String_System_Globalization_CultureInfo_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetString(String,CultureInfo)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the value of the string resource localized for the specified culture.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual string GetString (string name, System.Globalization.CultureInfo culture);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>name</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the resource to retrieve.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>culture</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that represents the culture for which the resource is localized.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The value of the resource localized for the specified culture, or <code>null</code> if <code>name</code> cannot be found in a resource set.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>name</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value of the specified resource is not a string.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.missingmanifestresourceexception\" data-linktype=\"relative-path\">MissingManifestResourceException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>No usable set of resources has been found, and there are no resources for a default culture. For information about how to handle this exception, see the &quot;Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions&quot; section in the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class topic.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.missingsatelliteassemblyexception\" data-linktype=\"relative-path\">MissingSatelliteAssemblyException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The default culture&#39;s resources reside in a satellite assembly that could not be found. For information about how to handle this exception, see the &quot;Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions&quot; section in the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class topic.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<h2 id=\"desktop-apps\">Desktop Apps</h2>\n<p> In desktop apps, if <code>culture</code> is <code>null</code>, the GetString method uses the current UI culture obtained from the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentUICulture_\" data-linktype=\"relative-path\">CurrentUICulture</a> property.  </p>\n<p> The resource that is returned is localized for the culture specified by the <code>culture</code> parameter. If the resource has not been localized for <code>culture</code>, the resource manager probes for a resource by following the steps outlined in the &quot;Resource Fallback Process&quot; section of the <a href=\"../Topic/Packaging%20and%20Deploying%20Resources%20in%20Desktop%20Apps.md\" data-linktype=\"relative-path\">Packaging and Deploying Resources</a> topic. If no usable set of resources is found, the resource manager falls back on the default culture&#39;s resources. If the resource manager cannot load the default culture&#39;s resource set, the method throws a <a class=\"xref\" href=\"system.resources.missingmanifestresourceexception\" data-linktype=\"relative-path\">MissingManifestResourceException</a> exception or, if the resource set is expected to reside in a satellite assembly, a <a class=\"xref\" href=\"system.resources.missingsatelliteassemblyexception\" data-linktype=\"relative-path\">MissingSatelliteAssemblyException</a> exception. If the resource manager can load an appropriate resource set but cannot find a resource named <code>name</code>, the method returns <code>null</code>.  </p>\n<p> The <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_IgnoreCase_\" data-linktype=\"relative-path\">IgnoreCase</a> property determines whether the comparison of <code>name</code> with the names of resources is case-insensitive (the default) or case-sensitive.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> This method can throw more exceptions than are listed. One reason this might occur is if a method that this method calls throws an exception.  For example, a <a class=\"xref\" href=\"system.io.fileloadexception\" data-linktype=\"relative-path\">FileLoadException</a> exception might be thrown if an error was made deploying or installing a satellite assembly, or a <a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a> exception might be thrown if a user-defined type throws a user-defined exception when the type is deserialized.  </p>\n</div>\n<h2 id=\"includewin8appnamelongaddincludeswin8-appname-long-mdmd-apps\">Windows 8.x Store Apps</h2>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Although the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a>class is supported in Windows 8.x Store apps, we do not recommend its use. Use this class only when you develop Portable Class Library projects that can be used with Windows 8.x Store apps. To retrieve resources from Windows 8.x Store apps, use the <a href=\"http://go.microsoft.com/fwlink/p/?LinkId=238182\" data-linktype=\"external\">Windows.ApplicationModel.Resources.ResourceLoader</a> class instead.  </p>\n</div>\n<p> In Windows 8.x Store apps, the GetString method returns the value of the <code>name</code> string resource, localized for the culture specified by the <code>culture</code> parameter. If the resource is not localized for the <code>culture</code> culture, the lookup uses the entire Windows 8 language fallback list, and stops after looking in the default culture. If the resource manager cannot match <code>name</code>, the method returns <code>null</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager_InternalGetResourceSet_System_Globalization_CultureInfo_System_Boolean_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InternalGetResourceSet(CultureInfo,Boolean,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Provides the implementation for finding a resource set.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Resources.ResourceSet InternalGetResourceSet (System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>culture</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The culture object to look for.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>createIfNotExists</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to load the resource set, if it has not been loaded yet; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>tryParents</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to check parent <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> objects if the resource set cannot be loaded; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.resourceset\" data-linktype=\"relative-path\">ResourceSet</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The specified resource set.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.missingmanifestresourceexception\" data-linktype=\"relative-path\">MissingManifestResourceException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The main assembly does not contain a .resources file, which is required to look up a resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.executionengineexception\" data-linktype=\"relative-path\">ExecutionEngineException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>There was an internal error in the runtime.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.missingsatelliteassemblyexception\" data-linktype=\"relative-path\">MissingSatelliteAssemblyException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The satellite assembly associated with <code>culture</code> could not be located.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Resources_ResourceManager_ReleaseAllResources\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReleaseAllResources()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Tells the resource manager to call the <span class=\"xref\">stem.Resources.ResourceSet.Close*</span> method on all <a class=\"xref\" href=\"system.resources.resourceset\" data-linktype=\"relative-path\">ResourceSet</a> objects and release all resources.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void ReleaseAllResources ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method will shrink the working set in a running app. Any future resource lookups on this <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> object will be as expensive as the first lookup, because the resource manager will have to search and load resources again. This can be useful in some complex threading scenarios, where creating a new <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> object is the appropriate behavior.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Starting with the .NET Framework version 2.0, the ReleaseAllResources method is not thread safe with respect to <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_GetObject_\" data-linktype=\"relative-path\">GetObject</a>, <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_GetString_\" data-linktype=\"relative-path\">GetString</a>, and <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_GetStream_\" data-linktype=\"relative-path\">GetStream</a> operations. The advantage of this change is a performance improvement for multiple threads that access resources. However, if you call the ReleaseAllResources method in one thread while simultaneously getting a resource in another thread, the get operation can throw an <a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a> exception.  </p>\n</div>\n<p> You can also use this method in situations where the managed instances for the resources created by the current resource manager have to be released deterministically, without waiting for the resource manager to go completely out of scope and be garbage collected.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Calling this method does not unload satellite assemblies. To unload satellite assemblies, use the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_Unload_\" data-linktype=\"relative-path\">Unload</a> method .</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Resources.ResourceManager.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Resources.ResourceManager.yml\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResourceManager\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResourceManager..ctor\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResourceManager.BaseName\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResourceManager.BaseNameField\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResourceManager.CreateFileBasedResourceManager\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResourceManager.FallbackLocation\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResourceManager.GetNeutralResourcesLanguage\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResourceManager.GetObject\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResourceManager.GetResourceFileName\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResourceManager.GetResourceSet\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResourceManager.GetSatelliteContractVersion\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResourceManager.GetStream\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResourceManager.GetString\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResourceManager.HeaderVersionNumber\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResourceManager.IgnoreCase\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResourceManager.InternalGetResourceSet\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResourceManager.MagicNumber\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResourceManager.MainAssembly\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResourceManager.ReleaseAllResources\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResourceManager.ResourceSets\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResourceManager.ResourceSetType\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"9b216160-1fa7-d685-0d1c-83f7c05b63f2\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a resource manager that provides convenient access to culture-specific resources at run time.  \n Security Note: Calling methods in this class with untrusted data is a security risk. Call t…\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Resources/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Resources.ResourceManager\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Resources.ResourceManager.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Resources.ResourceManager.yml","open_to_public_contributors":true,"api_name":["System.Resources.ResourceManager","System.Resources.ResourceManager..ctor","System.Resources.ResourceManager.BaseName","System.Resources.ResourceManager.BaseNameField","System.Resources.ResourceManager.CreateFileBasedResourceManager","System.Resources.ResourceManager.FallbackLocation","System.Resources.ResourceManager.GetNeutralResourcesLanguage","System.Resources.ResourceManager.GetObject","System.Resources.ResourceManager.GetResourceFileName","System.Resources.ResourceManager.GetResourceSet","System.Resources.ResourceManager.GetSatelliteContractVersion","System.Resources.ResourceManager.GetStream","System.Resources.ResourceManager.GetString","System.Resources.ResourceManager.HeaderVersionNumber","System.Resources.ResourceManager.IgnoreCase","System.Resources.ResourceManager.InternalGetResourceSet","System.Resources.ResourceManager.MagicNumber","System.Resources.ResourceManager.MainAssembly","System.Resources.ResourceManager.ReleaseAllResources","System.Resources.ResourceManager.ResourceSets","System.Resources.ResourceManager.ResourceSetType"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Resources.ResourceManager","System::Resources::ResourceManager","System.Resources.ResourceManager.#ctor","System::Resources::ResourceManager::#ctor","System.Resources.ResourceManager.BaseName","System::Resources::ResourceManager::BaseName","System.Resources.ResourceManager.BaseNameField","System::Resources::ResourceManager::BaseNameField","System.Resources.ResourceManager.CreateFileBasedResourceManager","System::Resources::ResourceManager::CreateFileBasedResourceManager","System.Resources.ResourceManager.FallbackLocation","System::Resources::ResourceManager::FallbackLocation","System.Resources.ResourceManager.GetNeutralResourcesLanguage","System::Resources::ResourceManager::GetNeutralResourcesLanguage","System.Resources.ResourceManager.GetObject","System::Resources::ResourceManager::GetObject","System.Resources.ResourceManager.GetResourceFileName","System::Resources::ResourceManager::GetResourceFileName","System.Resources.ResourceManager.GetResourceSet","System::Resources::ResourceManager::GetResourceSet","System.Resources.ResourceManager.GetSatelliteContractVersion","System::Resources::ResourceManager::GetSatelliteContractVersion","System.Resources.ResourceManager.GetStream","System::Resources::ResourceManager::GetStream","System.Resources.ResourceManager.GetString","System::Resources::ResourceManager::GetString","System.Resources.ResourceManager.HeaderVersionNumber","System::Resources::ResourceManager::HeaderVersionNumber","System.Resources.ResourceManager.IgnoreCase","System::Resources::ResourceManager::IgnoreCase","System.Resources.ResourceManager.InternalGetResourceSet","System::Resources::ResourceManager::InternalGetResourceSet","System.Resources.ResourceManager.MagicNumber","System::Resources::ResourceManager::MagicNumber","System.Resources.ResourceManager.MainAssembly","System::Resources::ResourceManager::MainAssembly","System.Resources.ResourceManager.ReleaseAllResources","System::Resources::ResourceManager::ReleaseAllResources","System.Resources.ResourceManager.ResourceSets","System::Resources::ResourceManager::ResourceSets","System.Resources.ResourceManager.ResourceSetType","System::Resources::ResourceManager::ResourceSetType"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"9b216160-1fa7-d685-0d1c-83f7c05b63f2","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Resources/ResourceManager.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ResourceManager class | Microsoft Docs","_op_ogTitle":"ResourceManager class","description":"Represents a resource manager that provides convenient access to culture-specific resources at run time.  \n Security Note: Calling methods in this class with untrusted data is a security risk. Call t…","toc_asset_id":"_splitted/System.Resources/toc.json","toc_rel":"_splitted/System.Resources/toc.json","source_url":"","ms.assetid":"System.Resources.ResourceManager","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.resources.resourcemanager","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.resources.resourcemanager","fileRelativePath":"System.Resources.ResourceManager.html"},"themesRelativePathToOutputRoot":"_themes/"}