{"content":"    \r\n    <h1 id=\"System_Windows_Input_CommandManager\">\r\n      <span class=\"lang-csharp\">CommandManager</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides command related utility methods that register <a class=\"xref\" href=\"system.windows.input.commandbinding\" data-linktype=\"relative-path\">CommandBinding</a> and <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> objects for class owners and commands, add and remove command event handlers, and provides services for querying the status of a command.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class CommandManager</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">CommandManager</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The CommandManager is responsible for managing routed commands.  For more information about commanding, see <a href=\"../Topic/Commanding%20Overview.md\" data-linktype=\"relative-path\">Commanding Overview</a>.  </p>\n<p> Use <a class=\"xref\" href=\"system.windows.input.commandmanager#System_Windows_Input_CommandManager_RegisterClassCommandBinding_\" data-linktype=\"relative-path\">RegisterClassCommandBinding</a> to register a <a class=\"xref\" href=\"system.windows.input.commandbinding\" data-linktype=\"relative-path\">CommandBinding</a> to a class as opposed to an instance.  </p>\n<p> Use <a class=\"xref\" href=\"system.windows.input.commandmanager#System_Windows_Input_CommandManager_RegisterClassInputBinding_\" data-linktype=\"relative-path\">RegisterClassInputBinding</a> to register an <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> to a class as opposed to an instance.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.input.commandmanager#System_Windows_Input_CommandManager_InvalidateRequerySuggested_\" data-linktype=\"relative-path\">InvalidateRequerySuggested</a> method forces the CommandManager to raise the <a class=\"xref\" href=\"system.windows.input.commandmanager#System_Windows_Input_CommandManager_RequerySuggested\" data-linktype=\"relative-path\">RequerySuggested</a> event.  The <a class=\"xref\" href=\"system.windows.input.commandmanager#System_Windows_Input_CommandManager_RequerySuggested\" data-linktype=\"relative-path\">RequerySuggested</a> event informs a command source to query the command it is associated with to determine whether or not the command can execute.</p>\n\r\n    \r\n    \r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_CommandManager_CanExecuteEvent\" data-linktype=\"self-bookmark\">CanExecuteEvent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Input.CommandManager.CanExecute</span> attached event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_CommandManager_ExecutedEvent\" data-linktype=\"self-bookmark\">ExecutedEvent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Input.CommandManager.Executed</span> attached event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_CommandManager_PreviewCanExecuteEvent\" data-linktype=\"self-bookmark\">PreviewCanExecuteEvent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Input.CommandManager.PreviewCanExecute</span> attached event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_CommandManager_PreviewExecutedEvent\" data-linktype=\"self-bookmark\">PreviewExecutedEvent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Input.CommandManager.PreviewExecuted</span> attached event.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_CommandManager_AddCanExecuteHandler_System_Windows_UIElement_System_Windows_Input_CanExecuteRoutedEventHandler_\" data-linktype=\"self-bookmark\">AddCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attaches the specified <a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a> to the specified element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_CommandManager_AddExecutedHandler_System_Windows_UIElement_System_Windows_Input_ExecutedRoutedEventHandler_\" data-linktype=\"self-bookmark\">AddExecutedHandler(UIElement,ExecutedRoutedEventHandler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attaches the specified <a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a> to the specified element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_CommandManager_AddPreviewCanExecuteHandler_System_Windows_UIElement_System_Windows_Input_CanExecuteRoutedEventHandler_\" data-linktype=\"self-bookmark\">AddPreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attaches the specified <a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a> to the specified element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_CommandManager_AddPreviewExecutedHandler_System_Windows_UIElement_System_Windows_Input_ExecutedRoutedEventHandler_\" data-linktype=\"self-bookmark\">AddPreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attaches the specified <a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a> to the specified element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_CommandManager_InvalidateRequerySuggested\" data-linktype=\"self-bookmark\">InvalidateRequerySuggested()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Forces the <a class=\"xref\" href=\"system.windows.input.commandmanager\" data-linktype=\"relative-path\">CommandManager</a> to raise the <a class=\"xref\" href=\"system.windows.input.commandmanager#System_Windows_Input_CommandManager_RequerySuggested\" data-linktype=\"relative-path\">RequerySuggested</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_CommandManager_RegisterClassCommandBinding_System_Type_System_Windows_Input_CommandBinding_\" data-linktype=\"self-bookmark\">RegisterClassCommandBinding(Type,CommandBinding)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers a <a class=\"xref\" href=\"system.windows.input.commandbinding\" data-linktype=\"relative-path\">CommandBinding</a> with the specified type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_CommandManager_RegisterClassInputBinding_System_Type_System_Windows_Input_InputBinding_\" data-linktype=\"self-bookmark\">RegisterClassInputBinding(Type,InputBinding)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers the specified <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> with the specified type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_CommandManager_RemoveCanExecuteHandler_System_Windows_UIElement_System_Windows_Input_CanExecuteRoutedEventHandler_\" data-linktype=\"self-bookmark\">RemoveCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Detaches the specified <a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a> from the specified element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_CommandManager_RemoveExecutedHandler_System_Windows_UIElement_System_Windows_Input_ExecutedRoutedEventHandler_\" data-linktype=\"self-bookmark\">RemoveExecutedHandler(UIElement,ExecutedRoutedEventHandler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Detaches the specified <a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a> from the specified element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_CommandManager_RemovePreviewCanExecuteHandler_System_Windows_UIElement_System_Windows_Input_CanExecuteRoutedEventHandler_\" data-linktype=\"self-bookmark\">RemovePreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Detaches the specified <a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a> from the specified element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_CommandManager_RemovePreviewExecutedHandler_System_Windows_UIElement_System_Windows_Input_ExecutedRoutedEventHandler_\" data-linktype=\"self-bookmark\">RemovePreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Detaches the specified <a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a> from the specified element.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_CommandManager_RequerySuggested\" data-linktype=\"self-bookmark\">RequerySuggested</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <a class=\"xref\" href=\"system.windows.input.commandmanager\" data-linktype=\"relative-path\">CommandManager</a> detects conditions that might change the ability of a command to execute.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_CommandManager_CanExecuteEvent\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanExecuteEvent</div>        \r\n          </div>\r\n    \r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Input.CommandManager.CanExecute</span> attached event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.RoutedEvent CanExecuteEvent;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_CommandManager_ExecutedEvent\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExecutedEvent</div>        \r\n          </div>\r\n    \r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Input.CommandManager.Executed</span> attached event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.RoutedEvent ExecutedEvent;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_CommandManager_PreviewCanExecuteEvent\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PreviewCanExecuteEvent</div>        \r\n          </div>\r\n    \r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Input.CommandManager.PreviewCanExecute</span> attached event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.RoutedEvent PreviewCanExecuteEvent;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_CommandManager_PreviewExecutedEvent\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PreviewExecutedEvent</div>        \r\n          </div>\r\n    \r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Input.CommandManager.PreviewExecuted</span> attached event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.RoutedEvent PreviewExecutedEvent;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_CommandManager_AddCanExecuteHandler_System_Windows_UIElement_System_Windows_Input_CanExecuteRoutedEventHandler_\">\r\n    \r\n            <a id=\"System_Windows_Input_CommandManager_AddCanExecuteHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)</div>        \r\n          </div>\r\n    \r\n            <p>Attaches the specified <a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a> to the specified element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void AddCanExecuteHandler (System.Windows.UIElement element, System.Windows.Input.CanExecuteRoutedEventHandler handler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>element</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The element to attach <code>handler</code> to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>handler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The can execute handler.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>element</code> or <code>handler</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a> and an <a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a> and attaches them to a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> which is a command source for the <a class=\"xref\" href=\"system.windows.input.applicationcommands#System_Windows_Input_ApplicationCommands_Help_\" data-linktype=\"relative-path\">Help</a> command.  </p>\n<p> First, the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> is created and associated with the <a class=\"xref\" href=\"system.windows.input.applicationcommands#System_Windows_Input_ApplicationCommands_Help_\" data-linktype=\"relative-path\">Help</a> command.  </p>\n<pre><code class=\"lang-xml\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlersXAML\">&lt;Button Command=&quot;ApplicationCommands.Help&quot;\n        Name=&quot;helpButton&quot;&gt;Help&lt;/Button&gt;\n</code></pre><p> Next, the <a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a> and the <a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a> are created.  </p>\n<pre><code class=\"lang-cs\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler\">private void HelpCmdExecuted(object sender, ExecutedRoutedEventArgs e)\n{\n    // OpenHelpFile opens the help file\n    OpenHelpFile();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler\">Private Sub HelpCmdExecuted(ByVal sender As Object, ByVal e As ExecutedRoutedEventArgs)\n\t&#39; OpenHelpFile opens the help file\n\tOpenHelpFile()\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler\">private void HelpCmdCanExecute(object sender, CanExecuteRoutedEventArgs e)\n{\n    // HelpFilesExists() determines if the help file exists\n    if (HelpFileExists() == true)\n    {\n        e.CanExecute = true;\n    }\n    else\n    {\n        e.CanExecute = false;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler\">Private Sub HelpCmdCanExecute(ByVal sender As Object, ByVal e As CanExecuteRoutedEventArgs)\n\t&#39; HelpFilesExists() determines if the help file exists\n\tIf HelpFileExists() = True Then\n\t\te.CanExecute = True\n\tElse\n\t\te.CanExecute = False\n\tEnd If\nEnd Sub\n</code></pre><p> And finally, the handlers are attached to the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> using the AddCanExecuteHandler and <a class=\"xref\" href=\"system.windows.input.commandmanager#System_Windows_Input_CommandManager_AddExecutedHandler_\" data-linktype=\"relative-path\">AddExecutedHandler</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers\">CommandManager.AddExecutedHandler(helpButton, HelpCmdExecuted);\nCommandManager.AddCanExecuteHandler(helpButton, HelpCmdCanExecute);\n</code></pre><pre><code class=\"lang-vb\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers\">CommandManager.AddExecutedHandler(helpButton, AddressOf HelpCmdExecuted)\nCommandManager.AddCanExecuteHandler(helpButton, AddressOf HelpCmdCanExecute)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_CommandManager_AddExecutedHandler_System_Windows_UIElement_System_Windows_Input_ExecutedRoutedEventHandler_\">\r\n    \r\n            <a id=\"System_Windows_Input_CommandManager_AddExecutedHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddExecutedHandler(UIElement,ExecutedRoutedEventHandler)</div>        \r\n          </div>\r\n    \r\n            <p>Attaches the specified <a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a> to the specified element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void AddExecutedHandler (System.Windows.UIElement element, System.Windows.Input.ExecutedRoutedEventHandler handler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>element</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The element to attach <code>handler</code> to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>handler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The executed handler.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>element</code> or <code>handler</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a> and an <a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a> and attaches them to a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> which is a command source for the <a class=\"xref\" href=\"system.windows.input.applicationcommands#System_Windows_Input_ApplicationCommands_Help_\" data-linktype=\"relative-path\">Help</a> command.  </p>\n<p> First, the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> is created and associated with the <a class=\"xref\" href=\"system.windows.input.applicationcommands#System_Windows_Input_ApplicationCommands_Help_\" data-linktype=\"relative-path\">Help</a> command.  </p>\n<pre><code class=\"lang-xml\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlersXAML\">&lt;Button Command=&quot;ApplicationCommands.Help&quot;\n        Name=&quot;helpButton&quot;&gt;Help&lt;/Button&gt;\n</code></pre><p> Next, the <a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a> and the <a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a> are created.  </p>\n<pre><code class=\"lang-cs\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler\">private void HelpCmdExecuted(object sender, ExecutedRoutedEventArgs e)\n{\n    // OpenHelpFile opens the help file\n    OpenHelpFile();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler\">Private Sub HelpCmdExecuted(ByVal sender As Object, ByVal e As ExecutedRoutedEventArgs)\n\t&#39; OpenHelpFile opens the help file\n\tOpenHelpFile()\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler\">private void HelpCmdCanExecute(object sender, CanExecuteRoutedEventArgs e)\n{\n    // HelpFilesExists() determines if the help file exists\n    if (HelpFileExists() == true)\n    {\n        e.CanExecute = true;\n    }\n    else\n    {\n        e.CanExecute = false;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler\">Private Sub HelpCmdCanExecute(ByVal sender As Object, ByVal e As CanExecuteRoutedEventArgs)\n\t&#39; HelpFilesExists() determines if the help file exists\n\tIf HelpFileExists() = True Then\n\t\te.CanExecute = True\n\tElse\n\t\te.CanExecute = False\n\tEnd If\nEnd Sub\n</code></pre><p> And finally, the handlers are attached to the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> using the <a class=\"xref\" href=\"system.windows.input.commandmanager#System_Windows_Input_CommandManager_AddCanExecuteHandler_\" data-linktype=\"relative-path\">AddCanExecuteHandler</a> and AddExecutedHandler.  </p>\n<pre><code class=\"lang-cs\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers\">CommandManager.AddExecutedHandler(helpButton, HelpCmdExecuted);\nCommandManager.AddCanExecuteHandler(helpButton, HelpCmdCanExecute);\n</code></pre><pre><code class=\"lang-vb\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers\">CommandManager.AddExecutedHandler(helpButton, AddressOf HelpCmdExecuted)\nCommandManager.AddCanExecuteHandler(helpButton, AddressOf HelpCmdCanExecute)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_CommandManager_AddPreviewCanExecuteHandler_System_Windows_UIElement_System_Windows_Input_CanExecuteRoutedEventHandler_\">\r\n    \r\n            <a id=\"System_Windows_Input_CommandManager_AddPreviewCanExecuteHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddPreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)</div>        \r\n          </div>\r\n    \r\n            <p>Attaches the specified <a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a> to the specified element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void AddPreviewCanExecuteHandler (System.Windows.UIElement element, System.Windows.Input.CanExecuteRoutedEventHandler handler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>element</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The element to attach <code>handler</code> to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>handler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The can execute handler.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>element</code> or <code>handler</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a> and an <a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a> and attaches them to a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> which is a command source for the <a class=\"xref\" href=\"system.windows.input.applicationcommands#System_Windows_Input_ApplicationCommands_Help_\" data-linktype=\"relative-path\">Help</a> command.  </p>\n<p> First, the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> is created and associated with the <a class=\"xref\" href=\"system.windows.input.applicationcommands#System_Windows_Input_ApplicationCommands_Help_\" data-linktype=\"relative-path\">Help</a> command.  </p>\n<pre><code class=\"lang-xml\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlersXAML\">&lt;Button Command=&quot;ApplicationCommands.Help&quot;\n        Name=&quot;helpButton&quot;&gt;Help&lt;/Button&gt;\n</code></pre><p> Next, the <a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a> and the <a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a> are created.  </p>\n<pre><code class=\"lang-cs\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler\">private void HelpCmdExecuted(object sender, ExecutedRoutedEventArgs e)\n{\n    // OpenHelpFile opens the help file\n    OpenHelpFile();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler\">Private Sub HelpCmdExecuted(ByVal sender As Object, ByVal e As ExecutedRoutedEventArgs)\n\t&#39; OpenHelpFile opens the help file\n\tOpenHelpFile()\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler\">private void HelpCmdCanExecute(object sender, CanExecuteRoutedEventArgs e)\n{\n    // HelpFilesExists() determines if the help file exists\n    if (HelpFileExists() == true)\n    {\n        e.CanExecute = true;\n    }\n    else\n    {\n        e.CanExecute = false;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler\">Private Sub HelpCmdCanExecute(ByVal sender As Object, ByVal e As CanExecuteRoutedEventArgs)\n\t&#39; HelpFilesExists() determines if the help file exists\n\tIf HelpFileExists() = True Then\n\t\te.CanExecute = True\n\tElse\n\t\te.CanExecute = False\n\tEnd If\nEnd Sub\n</code></pre><p> Finally, the handlers are attached to the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> using the <a class=\"xref\" href=\"system.windows.input.commandmanager#System_Windows_Input_CommandManager_AddCanExecuteHandler_\" data-linktype=\"relative-path\">AddCanExecuteHandler</a> and <a class=\"xref\" href=\"system.windows.input.commandmanager#System_Windows_Input_CommandManager_AddExecutedHandler_\" data-linktype=\"relative-path\">AddExecutedHandler</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers\">CommandManager.AddExecutedHandler(helpButton, HelpCmdExecuted);\nCommandManager.AddCanExecuteHandler(helpButton, HelpCmdCanExecute);\n</code></pre><pre><code class=\"lang-vb\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers\">CommandManager.AddExecutedHandler(helpButton, AddressOf HelpCmdExecuted)\nCommandManager.AddCanExecuteHandler(helpButton, AddressOf HelpCmdCanExecute)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_CommandManager_AddPreviewExecutedHandler_System_Windows_UIElement_System_Windows_Input_ExecutedRoutedEventHandler_\">\r\n    \r\n            <a id=\"System_Windows_Input_CommandManager_AddPreviewExecutedHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddPreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)</div>        \r\n          </div>\r\n    \r\n            <p>Attaches the specified <a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a> to the specified element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void AddPreviewExecutedHandler (System.Windows.UIElement element, System.Windows.Input.ExecutedRoutedEventHandler handler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>element</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The element to attach <code>handler</code> to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>handler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The can execute handler.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>element</code> or <code>handler</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a> and an <a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a> and attaches them to a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> which is a command source for the <a class=\"xref\" href=\"system.windows.input.applicationcommands#System_Windows_Input_ApplicationCommands_Help_\" data-linktype=\"relative-path\">Help</a> command.  </p>\n<p> First, the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> is created and associated with the <a class=\"xref\" href=\"system.windows.input.applicationcommands#System_Windows_Input_ApplicationCommands_Help_\" data-linktype=\"relative-path\">Help</a> command.  </p>\n<pre><code class=\"lang-xml\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlersXAML\">&lt;Button Command=&quot;ApplicationCommands.Help&quot;\n        Name=&quot;helpButton&quot;&gt;Help&lt;/Button&gt;\n</code></pre><p> Next, the <a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a> and the <a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a> are created.  </p>\n<pre><code class=\"lang-cs\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler\">private void HelpCmdExecuted(object sender, ExecutedRoutedEventArgs e)\n{\n    // OpenHelpFile opens the help file\n    OpenHelpFile();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler\">Private Sub HelpCmdExecuted(ByVal sender As Object, ByVal e As ExecutedRoutedEventArgs)\n\t&#39; OpenHelpFile opens the help file\n\tOpenHelpFile()\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler\">private void HelpCmdCanExecute(object sender, CanExecuteRoutedEventArgs e)\n{\n    // HelpFilesExists() determines if the help file exists\n    if (HelpFileExists() == true)\n    {\n        e.CanExecute = true;\n    }\n    else\n    {\n        e.CanExecute = false;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler\">Private Sub HelpCmdCanExecute(ByVal sender As Object, ByVal e As CanExecuteRoutedEventArgs)\n\t&#39; HelpFilesExists() determines if the help file exists\n\tIf HelpFileExists() = True Then\n\t\te.CanExecute = True\n\tElse\n\t\te.CanExecute = False\n\tEnd If\nEnd Sub\n</code></pre><p> Finally, the handlers are attached to the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> using the <a class=\"xref\" href=\"system.windows.input.commandmanager#System_Windows_Input_CommandManager_AddCanExecuteHandler_\" data-linktype=\"relative-path\">AddCanExecuteHandler</a> and <a class=\"xref\" href=\"system.windows.input.commandmanager#System_Windows_Input_CommandManager_AddExecutedHandler_\" data-linktype=\"relative-path\">AddExecutedHandler</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers\">CommandManager.AddExecutedHandler(helpButton, HelpCmdExecuted);\nCommandManager.AddCanExecuteHandler(helpButton, HelpCmdCanExecute);\n</code></pre><pre><code class=\"lang-vb\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers\">CommandManager.AddExecutedHandler(helpButton, AddressOf HelpCmdExecuted)\nCommandManager.AddCanExecuteHandler(helpButton, AddressOf HelpCmdCanExecute)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_CommandManager_InvalidateRequerySuggested\">\r\n    \r\n            <a id=\"System_Windows_Input_CommandManager_InvalidateRequerySuggested_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InvalidateRequerySuggested()</div>        \r\n          </div>\r\n    \r\n            <p>Forces the <a class=\"xref\" href=\"system.windows.input.commandmanager\" data-linktype=\"relative-path\">CommandManager</a> to raise the <a class=\"xref\" href=\"system.windows.input.commandmanager#System_Windows_Input_CommandManager_RequerySuggested\" data-linktype=\"relative-path\">RequerySuggested</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void InvalidateRequerySuggested ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.input.commandmanager\" data-linktype=\"relative-path\">CommandManager</a> only pays attention to certain conditions in determining when the command target has changed, such as change in keyboard focus.  In situations where the <a class=\"xref\" href=\"system.windows.input.commandmanager\" data-linktype=\"relative-path\">CommandManager</a> does not sufficiently determine a change in conditions that cause a command to not be able to execute, InvalidateRequerySuggested can be called to force the <a class=\"xref\" href=\"system.windows.input.commandmanager\" data-linktype=\"relative-path\">CommandManager</a> to raise the <a class=\"xref\" href=\"system.windows.input.commandmanager#System_Windows_Input_CommandManager_RequerySuggested\" data-linktype=\"relative-path\">RequerySuggested</a> event.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses a <a class=\"xref\" href=\"system.windows.threading.dispatchertimer\" data-linktype=\"relative-path\">DispatcherTimer</a> to periodically call InvalidateRequerySuggested to force the <a class=\"xref\" href=\"system.windows.input.commandmanager\" data-linktype=\"relative-path\">CommandManager</a> to raise the <a class=\"xref\" href=\"system.windows.input.commandmanager#System_Windows_Input_CommandManager_RequerySuggested\" data-linktype=\"relative-path\">RequerySuggested</a> event.  </p>\n<pre><code class=\"lang-vb\" name=\"InvalidateRequeryWithDispatcherTimer#InvalidateSampleDispatcherTimer\">&#39;  System.Windows.Threading.DispatcherTimer.Tick handler\n&#39;\n&#39;  Updates the current seconds display and calls\n&#39;  InvalidateRequerySuggested on the CommandManager to force \n&#39;  the Command to raise the CanExecuteChanged event.\nPrivate Sub dispatcherTimer_Tick(ByVal sender As Object, ByVal e As EventArgs)\n\t&#39; Updating the Label which displays the current second\n\tlblSeconds.Content = Date.Now.Second\n\n\t&#39; Forcing the CommandManager to raise the RequerySuggested event\n\tCommandManager.InvalidateRequerySuggested()\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"InvalidateRequeryWithDispatcherTimer#InvalidateSampleDispatcherTimer\">//  System.Windows.Threading.DispatcherTimer.Tick handler\n//\n//  Updates the current seconds display and calls\n//  InvalidateRequerySuggested on the CommandManager to force \n//  the Command to raise the CanExecuteChanged event.\nprivate void dispatcherTimer_Tick(object sender, EventArgs e)\n{\n    // Updating the Label which displays the current second\n    lblSeconds.Content = DateTime.Now.Second;\n\n    // Forcing the CommandManager to raise the RequerySuggested event\n    CommandManager.InvalidateRequerySuggested();\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_CommandManager_RegisterClassCommandBinding_System_Type_System_Windows_Input_CommandBinding_\">\r\n    \r\n            <a id=\"System_Windows_Input_CommandManager_RegisterClassCommandBinding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterClassCommandBinding(Type,CommandBinding)</div>        \r\n          </div>\r\n    \r\n            <p>Registers a <a class=\"xref\" href=\"system.windows.input.commandbinding\" data-linktype=\"relative-path\">CommandBinding</a> with the specified type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RegisterClassCommandBinding (Type type, System.Windows.Input.CommandBinding commandBinding);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The class with which to register <code>commandBinding</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>commandBinding</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.commandbinding\" data-linktype=\"relative-path\">CommandBinding</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The command binding to register.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>type</code> or <code>commandBinding</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enables a <a class=\"xref\" href=\"system.windows.input.commandbinding\" data-linktype=\"relative-path\">CommandBinding</a> to be associated with a class instead than an instance of a class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_CommandManager_RegisterClassInputBinding_System_Type_System_Windows_Input_InputBinding_\">\r\n    \r\n            <a id=\"System_Windows_Input_CommandManager_RegisterClassInputBinding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterClassInputBinding(Type,InputBinding)</div>        \r\n          </div>\r\n    \r\n            <p>Registers the specified <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> with the specified type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RegisterClassInputBinding (Type type, System.Windows.Input.InputBinding inputBinding);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type to register <code>inputBinding</code> with.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>inputBinding</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The input binding to register.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>type</code> or <code>inputBinding</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enables an <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> to be associated with a type instead of an instance of a class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_CommandManager_RemoveCanExecuteHandler_System_Windows_UIElement_System_Windows_Input_CanExecuteRoutedEventHandler_\">\r\n    \r\n            <a id=\"System_Windows_Input_CommandManager_RemoveCanExecuteHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)</div>        \r\n          </div>\r\n    \r\n            <p>Detaches the specified <a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a> from the specified element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RemoveCanExecuteHandler (System.Windows.UIElement element, System.Windows.Input.CanExecuteRoutedEventHandler handler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>element</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The element to remove <code>handler</code> from.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>handler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The can execute handler.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>element</code> or <code>handler</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example detaches a <a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a> and an <a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a> which had previously been attached to a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers\">CommandManager.RemoveExecutedHandler(helpButton, HelpCmdExecuted);\nCommandManager.RemoveCanExecuteHandler(helpButton, HelpCmdCanExecute);\n</code></pre><pre><code class=\"lang-vb\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers\">CommandManager.RemoveExecutedHandler(helpButton, AddressOf HelpCmdExecuted)\nCommandManager.RemoveCanExecuteHandler(helpButton, AddressOf HelpCmdCanExecute)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_CommandManager_RemoveExecutedHandler_System_Windows_UIElement_System_Windows_Input_ExecutedRoutedEventHandler_\">\r\n    \r\n            <a id=\"System_Windows_Input_CommandManager_RemoveExecutedHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveExecutedHandler(UIElement,ExecutedRoutedEventHandler)</div>        \r\n          </div>\r\n    \r\n            <p>Detaches the specified <a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a> from the specified element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RemoveExecutedHandler (System.Windows.UIElement element, System.Windows.Input.ExecutedRoutedEventHandler handler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>element</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The element to remove <code>handler</code> from.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>handler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The executed handler.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>element</code> or <code>handler</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example detaches a <a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a> and an <a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a> which had previously been attached to a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers\">CommandManager.RemoveExecutedHandler(helpButton, HelpCmdExecuted);\nCommandManager.RemoveCanExecuteHandler(helpButton, HelpCmdCanExecute);\n</code></pre><pre><code class=\"lang-vb\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers\">CommandManager.RemoveExecutedHandler(helpButton, AddressOf HelpCmdExecuted)\nCommandManager.RemoveCanExecuteHandler(helpButton, AddressOf HelpCmdCanExecute)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_CommandManager_RemovePreviewCanExecuteHandler_System_Windows_UIElement_System_Windows_Input_CanExecuteRoutedEventHandler_\">\r\n    \r\n            <a id=\"System_Windows_Input_CommandManager_RemovePreviewCanExecuteHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemovePreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)</div>        \r\n          </div>\r\n    \r\n            <p>Detaches the specified <a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a> from the specified element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RemovePreviewCanExecuteHandler (System.Windows.UIElement element, System.Windows.Input.CanExecuteRoutedEventHandler handler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>element</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The element to remove <code>handler</code> from.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>handler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The can execute handler.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>element</code> or <code>handler</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example detaches a <a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a> and an <a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a> which had previously been attached to a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers\">CommandManager.RemoveExecutedHandler(helpButton, HelpCmdExecuted);\nCommandManager.RemoveCanExecuteHandler(helpButton, HelpCmdCanExecute);\n</code></pre><pre><code class=\"lang-vb\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers\">CommandManager.RemoveExecutedHandler(helpButton, AddressOf HelpCmdExecuted)\nCommandManager.RemoveCanExecuteHandler(helpButton, AddressOf HelpCmdCanExecute)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_CommandManager_RemovePreviewExecutedHandler_System_Windows_UIElement_System_Windows_Input_ExecutedRoutedEventHandler_\">\r\n    \r\n            <a id=\"System_Windows_Input_CommandManager_RemovePreviewExecutedHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemovePreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)</div>        \r\n          </div>\r\n    \r\n            <p>Detaches the specified <a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a> from the specified element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RemovePreviewExecutedHandler (System.Windows.UIElement element, System.Windows.Input.ExecutedRoutedEventHandler handler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>element</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The element to remove <code>handler</code> from.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>handler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The executed handler.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>element</code> or <code>handler</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example detaches a <a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a> and an <a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a> which had previously been attached to a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers\">CommandManager.RemoveExecutedHandler(helpButton, HelpCmdExecuted);\nCommandManager.RemoveCanExecuteHandler(helpButton, HelpCmdCanExecute);\n</code></pre><pre><code class=\"lang-vb\" name=\"commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers\">CommandManager.RemoveExecutedHandler(helpButton, AddressOf HelpCmdExecuted)\nCommandManager.RemoveCanExecuteHandler(helpButton, AddressOf HelpCmdCanExecute)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_CommandManager_RequerySuggested\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RequerySuggested</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <a class=\"xref\" href=\"system.windows.input.commandmanager\" data-linktype=\"relative-path\">CommandManager</a> detects conditions that might change the ability of a command to execute.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static event EventHandler RequerySuggested;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Since this event is static, it will only hold onto the handler as a weak reference.  Objects that listen for this event should keep a strong reference to their event handler to avoid it being garbage collected. This can be accomplished by having a private field and assigning the handler as the value before or after attaching to this event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Input.CommandManager.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Input.CommandManager.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.CommandManager\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.CommandManager.AddCanExecuteHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.CommandManager.AddExecutedHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.CommandManager.AddPreviewExecutedHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.CommandManager.CanExecuteEvent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.CommandManager.ExecutedEvent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.CommandManager.InvalidateRequerySuggested\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.CommandManager.PreviewCanExecuteEvent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.CommandManager.PreviewExecutedEvent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.CommandManager.RegisterClassCommandBinding\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.CommandManager.RegisterClassInputBinding\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.CommandManager.RemoveCanExecuteHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.CommandManager.RemoveExecutedHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.CommandManager.RemovePreviewExecutedHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.CommandManager.RequerySuggested\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.CommandManager.add_RequerySuggested\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.CommandManager.remove_RequerySuggested\">\r\n<meta name=\"APILocation\" content=\"PresentationCore.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"15c962ad-34fd-9220-20c8-28e103309c1b\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides command related utility methods that register  and  objects for class owners and commands, add and remove command event handlers, and provides services for querying the status of a command.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Input/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Input.CommandManager\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Input.CommandManager.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Input.CommandManager.yml","open_to_public_contributors":true,"api_name":["System.Windows.Input.CommandManager","System.Windows.Input.CommandManager.AddCanExecuteHandler","System.Windows.Input.CommandManager.AddExecutedHandler","System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler","System.Windows.Input.CommandManager.AddPreviewExecutedHandler","System.Windows.Input.CommandManager.CanExecuteEvent","System.Windows.Input.CommandManager.ExecutedEvent","System.Windows.Input.CommandManager.InvalidateRequerySuggested","System.Windows.Input.CommandManager.PreviewCanExecuteEvent","System.Windows.Input.CommandManager.PreviewExecutedEvent","System.Windows.Input.CommandManager.RegisterClassCommandBinding","System.Windows.Input.CommandManager.RegisterClassInputBinding","System.Windows.Input.CommandManager.RemoveCanExecuteHandler","System.Windows.Input.CommandManager.RemoveExecutedHandler","System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler","System.Windows.Input.CommandManager.RemovePreviewExecutedHandler","System.Windows.Input.CommandManager.RequerySuggested","System.Windows.Input.CommandManager.add_RequerySuggested","System.Windows.Input.CommandManager.remove_RequerySuggested"],"api_location":["PresentationCore.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Input.CommandManager","System::Windows::Input::CommandManager","System.Windows.Input.CommandManager.AddCanExecuteHandler","System::Windows::Input::CommandManager::AddCanExecuteHandler","System.Windows.Input.CommandManager.AddExecutedHandler","System::Windows::Input::CommandManager::AddExecutedHandler","System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler","System::Windows::Input::CommandManager::AddPreviewCanExecuteHandler","System.Windows.Input.CommandManager.AddPreviewExecutedHandler","System::Windows::Input::CommandManager::AddPreviewExecutedHandler","System.Windows.Input.CommandManager.CanExecuteEvent","System::Windows::Input::CommandManager::CanExecuteEvent","System.Windows.Input.CommandManager.ExecutedEvent","System::Windows::Input::CommandManager::ExecutedEvent","System.Windows.Input.CommandManager.InvalidateRequerySuggested","System::Windows::Input::CommandManager::InvalidateRequerySuggested","System.Windows.Input.CommandManager.PreviewCanExecuteEvent","System::Windows::Input::CommandManager::PreviewCanExecuteEvent","System.Windows.Input.CommandManager.PreviewExecutedEvent","System::Windows::Input::CommandManager::PreviewExecutedEvent","System.Windows.Input.CommandManager.RegisterClassCommandBinding","System::Windows::Input::CommandManager::RegisterClassCommandBinding","System.Windows.Input.CommandManager.RegisterClassInputBinding","System::Windows::Input::CommandManager::RegisterClassInputBinding","System.Windows.Input.CommandManager.RemoveCanExecuteHandler","System::Windows::Input::CommandManager::RemoveCanExecuteHandler","System.Windows.Input.CommandManager.RemoveExecutedHandler","System::Windows::Input::CommandManager::RemoveExecutedHandler","System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler","System::Windows::Input::CommandManager::RemovePreviewCanExecuteHandler","System.Windows.Input.CommandManager.RemovePreviewExecutedHandler","System::Windows::Input::CommandManager::RemovePreviewExecutedHandler","System.Windows.Input.CommandManager.RequerySuggested","System::Windows::Input::CommandManager::RequerySuggested"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"15c962ad-34fd-9220-20c8-28e103309c1b","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Input/CommandManager.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CommandManager class | Microsoft Docs","_op_ogTitle":"CommandManager class","description":"Provides command related utility methods that register  and  objects for class owners and commands, add and remove command event handlers, and provides services for querying the status of a command.\n","toc_asset_id":"_splitted/System.Windows.Input/toc.json","toc_rel":"_splitted/System.Windows.Input/toc.json","source_url":"","ms.assetid":"System.Windows.Input.CommandManager","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.input.commandmanager","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.input.commandmanager","fileRelativePath":"System.Windows.Input.CommandManager.html"},"themesRelativePathToOutputRoot":"_themes/"}