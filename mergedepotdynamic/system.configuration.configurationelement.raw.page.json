{"content":"    \r\n    <h1 id=\"System_Configuration_ConfigurationElement\">\r\n      <span class=\"lang-csharp\">ConfigurationElement</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a configuration element within a configuration file.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class ConfigurationElement</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ConfigurationElement</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The ConfigurationElement is an abstract class that is used to represent an XML element in a configuration file (such as Web.config). An element in a configuration file can contain zero, one, or more child elements.  </p>\n<p> Because the ConfigurationElement class is defined as abstract, you cannot create an instance of it. You can only derive classes from it. The .NET Framework includes classes that derive from the ConfigurationElement class in order to represent standard XML configuration elements, such as <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a>. You can also extend the ConfigurationElement class to access custom configuration elements and sections. The example included later in this topic shows how to access custom configuration elements and sections by using custom classes that derive from ConfigurationElement.  </p>\n<p> You can also extend the standard configuration types such as ConfigurationElement, <a class=\"xref\" href=\"system.configuration.configurationelementcollection\" data-linktype=\"relative-path\">ConfigurationElementCollection</a>, <a class=\"xref\" href=\"system.configuration.configurationproperty\" data-linktype=\"relative-path\">ConfigurationProperty</a>, and <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a>. For more information, see the documentation for those classes.  </p>\n<p> For more information about how to access information in configuration files, see the <a class=\"xref\" href=\"system.configuration.configurationmanager\" data-linktype=\"relative-path\">ConfigurationManager</a> class and the <a class=\"xref\" href=\"system.web.configuration.webconfigurationmanager\" data-linktype=\"relative-path\">WebConfigurationManager</a> class.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement__ctor\" data-linktype=\"self-bookmark\">ConfigurationElement()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_CurrentConfiguration\" data-linktype=\"self-bookmark\">CurrentConfiguration</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the top-level <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> instance that represents the configuration hierarchy that the current <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> instance belongs to.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_ElementInformation\" data-linktype=\"self-bookmark\">ElementInformation</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an <a class=\"xref\" href=\"system.configuration.elementinformation\" data-linktype=\"relative-path\">ElementInformation</a> object that contains the non-customizable information and functionality of the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_ElementProperty\" data-linktype=\"self-bookmark\">ElementProperty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.configuration.configurationelementproperty\" data-linktype=\"relative-path\">ConfigurationElementProperty</a> object that represents the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object itself.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_EvaluationContext\" data-linktype=\"self-bookmark\">EvaluationContext</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.configuration.contextinformation\" data-linktype=\"relative-path\">ContextInformation</a> object for the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_HasContext\" data-linktype=\"self-bookmark\">HasContext</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the <span class=\"xref\">stem.Configuration.ConfigurationElement.CurrentConfiguration*</span> property is <code>null</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_Item_System_Configuration_ConfigurationProperty_\" data-linktype=\"self-bookmark\">Item(ConfigurationProperty)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a property or attribute of this configuration element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_Item_System_String_\" data-linktype=\"self-bookmark\">Item(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a property, attribute, or child element of this configuration element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_LockAllAttributesExcept\" data-linktype=\"self-bookmark\">LockAllAttributesExcept</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of locked attributes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_LockAllElementsExcept\" data-linktype=\"self-bookmark\">LockAllElementsExcept</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of locked elements.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_LockAttributes\" data-linktype=\"self-bookmark\">LockAttributes</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of locked attributes</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_LockElements\" data-linktype=\"self-bookmark\">LockElements</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of locked elements.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_LockItem\" data-linktype=\"self-bookmark\">LockItem</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the element is locked.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_Properties\" data-linktype=\"self-bookmark\">Properties</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of properties.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_DeserializeElement_System_Xml_XmlReader_System_Boolean_\" data-linktype=\"self-bookmark\">DeserializeElement(XmlReader,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reads XML from the configuration file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares the current <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> instance to the specified object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a unique value representing the current <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_GetTransformedAssemblyString_System_String_\" data-linktype=\"self-bookmark\">GetTransformedAssemblyString(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the transformed version of the specified assembly name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_GetTransformedTypeString_System_String_\" data-linktype=\"self-bookmark\">GetTransformedTypeString(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the transformed version of the specified type name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_Init\" data-linktype=\"self-bookmark\">Init()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object to its initial state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_InitializeDefault\" data-linktype=\"self-bookmark\">InitializeDefault()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Used to initialize a default set of values for the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_IsModified\" data-linktype=\"self-bookmark\">IsModified()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether this configuration element has been modified since it was last saved or loaded, when implemented in a derived class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_IsReadOnly\" data-linktype=\"self-bookmark\">IsReadOnly()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_ListErrors_System_Collections_IList_\" data-linktype=\"self-bookmark\">ListErrors(IList)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the invalid-property errors in this <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object, and in all subelements, to the passed list.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_OnDeserializeUnrecognizedAttribute_System_String_System_String_\" data-linktype=\"self-bookmark\">OnDeserializeUnrecognizedAttribute(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether an unknown attribute is encountered during deserialization.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_OnDeserializeUnrecognizedElement_System_String_System_Xml_XmlReader_\" data-linktype=\"self-bookmark\">OnDeserializeUnrecognizedElement(String,XmlReader)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether an unknown element is encountered during deserialization.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_OnRequiredPropertyNotFound_System_String_\" data-linktype=\"self-bookmark\">OnRequiredPropertyNotFound(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Throws an exception when a required property is not found.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_PostDeserialize\" data-linktype=\"self-bookmark\">PostDeserialize()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called after deserialization.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_PreSerialize_System_Xml_XmlWriter_\" data-linktype=\"self-bookmark\">PreSerialize(XmlWriter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called before serialization.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_Reset_System_Configuration_ConfigurationElement_\" data-linktype=\"self-bookmark\">Reset(ConfigurationElement)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resets the internal state of the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object, including the locks and the properties collections.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_ResetModified\" data-linktype=\"self-bookmark\">ResetModified()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resets the value of the <span class=\"xref\">stem.Configuration.ConfigurationElement.IsModified*</span> method to <code>false</code> when implemented in a derived class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_SerializeElement_System_Xml_XmlWriter_System_Boolean_\" data-linktype=\"self-bookmark\">SerializeElement(XmlWriter,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the contents of this configuration element to the configuration file when implemented in a derived class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_SerializeToXmlElement_System_Xml_XmlWriter_System_String_\" data-linktype=\"self-bookmark\">SerializeToXmlElement(XmlWriter,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the outer tags of this configuration element to the configuration file when implemented in a derived class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_SetPropertyValue_System_Configuration_ConfigurationProperty_System_Object_System_Boolean_\" data-linktype=\"self-bookmark\">SetPropertyValue(ConfigurationProperty,Object,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets a property to the specified value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_SetReadOnly\" data-linktype=\"self-bookmark\">SetReadOnly()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the <span class=\"xref\">stem.Configuration.ConfigurationElement.IsReadOnly*</span> property for the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object and all subelements.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_ConfigurationElement_Unmerge_System_Configuration_ConfigurationElement_System_Configuration_ConfigurationElement_System_Configuration_ConfigurationSaveMode_\" data-linktype=\"self-bookmark\">Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Modifies the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object to remove all values that should not be saved.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement__ctor\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConfigurationElement()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected ConfigurationElement ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You create a new instance of the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> class, for example, every time your application needs to add a new element to the related <a class=\"xref\" href=\"system.configuration.configurationelementcollection\" data-linktype=\"relative-path\">ConfigurationElementCollection</a> collection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use a customized constructor.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#32\">        // Constructor allowing name, url, and port to be specified.\n        public UrlConfigElement(String newName,\n            String newUrl, int newPort)\n        {\n            Name = newName;\n            Url = newUrl;\n            Port = newPort;\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#32\">    &#39; Constructor allowing name, url, and port to be specified.\n    Public Sub New(ByVal newName As String, _\n        ByVal newUrl As String, _\n        ByVal newPort As Integer)\n\n        Name = newName\n        Url = newUrl\n        Port = newPort\n\n    End Sub &#39;New\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_CurrentConfiguration\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_CurrentConfiguration_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CurrentConfiguration</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the top-level <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> instance that represents the configuration hierarchy that the current <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> instance belongs to.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Configuration.Configuration CurrentConfiguration { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a></div>\r\n                  </div>\r\n                  <p>The top-level <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> instance that the current <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> instance belongs to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CurrentConfiguration property makes it easy to determine which version of the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnshort-md.md&quot; -->.NET Framework<!--END INCLUDE --> is targeted. The <a class=\"xref\" href=\"system.configuration.configuration#System_Configuration_Configuration_TargetFramework_\" data-linktype=\"relative-path\">TargetFramework</a> property of the top-level <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> instance indicates the targeted framework version.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_ElementInformation\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_ElementInformation_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ElementInformation</div>        \r\n          </div>\r\n    \r\n            <p>Gets an <a class=\"xref\" href=\"system.configuration.elementinformation\" data-linktype=\"relative-path\">ElementInformation</a> object that contains the non-customizable information and functionality of the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Configuration.ElementInformation ElementInformation { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.elementinformation\" data-linktype=\"relative-path\">ElementInformation</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.configuration.elementinformation\" data-linktype=\"relative-path\">ElementInformation</a> that contains the non-customizable information and functionality of the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the ElementInformation property.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#80\">        static public ElementInformation\n            GetElementInformation()\n        {\n\n            // Get the current configuration file.\n            System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None);\n\n            // Get the section.\n            UrlsSection section =\n                (UrlsSection)config.GetSection(&quot;MyUrls&quot;);\n\n            // Get the element.\n            UrlConfigElement url = section.Simple;\n\n            ElementInformation eInfo =\n                url.ElementInformation;\n\n            return eInfo;\n\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#80\">    Public Shared Function GetElementInformation() _\n    As ElementInformation\n\n        &#39; Get the current configuration file.\n        Dim config _\n        As System.Configuration.Configuration = _\n        ConfigurationManager.OpenExeConfiguration( _\n        ConfigurationUserLevel.None)\n\n        &#39; Get the section.\n        Dim section As UrlsSection = CType( _\n        config.GetSection(&quot;MyUrls&quot;), UrlsSection)\n\n        &#39; Get the element.\n        Dim url As UrlConfigElement = _\n        section.Simple\n\n        Dim eInfo As ElementInformation = _\n        url.ElementInformation\n\n        Return eInfo\n\n    End Function &#39;GetElementInformation     \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_ElementProperty\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_ElementProperty_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ElementProperty</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.configuration.configurationelementproperty\" data-linktype=\"relative-path\">ConfigurationElementProperty</a> object that represents the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object itself.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Configuration.ConfigurationElementProperty ElementProperty { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationelementproperty\" data-linktype=\"relative-path\">ConfigurationElementProperty</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.configuration.configurationelementproperty\" data-linktype=\"relative-path\">ConfigurationElementProperty</a> that represents the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> itself.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_EvaluationContext\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_EvaluationContext_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EvaluationContext</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.configuration.contextinformation\" data-linktype=\"relative-path\">ContextInformation</a> object for the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected System.Configuration.ContextInformation EvaluationContext { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.contextinformation\" data-linktype=\"relative-path\">ContextInformation</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.configuration.contextinformation\" data-linktype=\"relative-path\">ContextInformation</a> for the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>The current element is not associated with a context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.configuration.contextinformation\" data-linktype=\"relative-path\">ContextInformation</a> object provides the context necessary for a <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object to make decisions based upon where it is being evaluated.  </p>\n<p> The <a class=\"xref\" href=\"system.configuration.contextinformation\" data-linktype=\"relative-path\">ContextInformation</a> object provides environment details related to an element of the configuration. For example, you can use the <a class=\"xref\" href=\"system.configuration.contextinformation#System_Configuration_ContextInformation_IsMachineLevel_\" data-linktype=\"relative-path\">IsMachineLevel</a> property to determine whether a <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> was set in Machine.config, or you can determine which hierarchy a <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> element belongs to by using the <a class=\"xref\" href=\"system.configuration.contextinformation#System_Configuration_ContextInformation_HostingContext_\" data-linktype=\"relative-path\">HostingContext</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_HasContext\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_HasContext_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HasContext</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the <span class=\"xref\">stem.Configuration.ConfigurationElement.CurrentConfiguration*</span> property is <code>null</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool HasContext { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>false if the <span class=\"xref\">stem.Configuration.ConfigurationElement.CurrentConfiguration*</span> property is <code>null</code>; otherwise, <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_Item_System_Configuration_ConfigurationProperty_\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(ConfigurationProperty)</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a property or attribute of this configuration element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected object this[System.Configuration.ConfigurationProperty prop] { get; set; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>prop</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationproperty\" data-linktype=\"relative-path\">ConfigurationProperty</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The property to access.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The specified property, attribute, or child element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationexception\" data-linktype=\"relative-path\">ConfigurationException</a></div>\r\n                  </div>\r\n                  <p><code>prop</code> is <code>null</code> or does not exist within the element.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p><code>prop</code> is read only or locked.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the Item property to get or set the values of a <a class=\"xref\" href=\"system.configuration.configurationproperty\" data-linktype=\"relative-path\">ConfigurationProperty</a> object.  </p>\n<p> In C#, this property is the indexer for the <a class=\"xref\" href=\"system.configuration.configurationsectioncollection\" data-linktype=\"relative-path\">ConfigurationSectionCollection</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_Item_System_String_\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(String)</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a property, attribute, or child element of this configuration element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected object this[string propertyName] { get; set; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>propertyName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the <a class=\"xref\" href=\"system.configuration.configurationproperty\" data-linktype=\"relative-path\">ConfigurationProperty</a> to access.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The specified property, attribute, or child element</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p><code>prop</code> is read-only or locked.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the Item property to get or set the values of a <a class=\"xref\" href=\"system.configuration.configurationproperty\" data-linktype=\"relative-path\">ConfigurationProperty</a> object.  </p>\n<p> In C#, this property is the indexer for the <a class=\"xref\" href=\"system.configuration.configurationsectioncollection\" data-linktype=\"relative-path\">ConfigurationSectionCollection</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_LockAllAttributesExcept\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_LockAllAttributesExcept_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LockAllAttributesExcept</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of locked attributes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Configuration.ConfigurationLockCollection LockAllAttributesExcept { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationlockcollection\" data-linktype=\"relative-path\">ConfigurationLockCollection</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.configuration.configurationlockcollection\" data-linktype=\"relative-path\">ConfigurationLockCollection</a> of locked attributes (properties) for the element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The LockAllAttributesExcept property allows you to lock all the attributes at once, with the exception of the one you specify. To do that, you use the <a class=\"xref\" href=\"system.configuration.configurationlockcollection#System_Configuration_ConfigurationLockCollection_Contains_\" data-linktype=\"relative-path\">Contains</a> method, as explained in the Example section.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The LockAllAttributesExcept property allows you to prevent the child configuration elements of the element to which you apply the rule from being modified. Use the <a class=\"xref\" href=\"system.configuration.configurationelement#System_Configuration_ConfigurationElement_LockItem_\" data-linktype=\"relative-path\">LockItem</a> property if you want to put a general lock on the parent element itself and its child elements.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the LockAllAttributesExcept.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#9\">        // Show how to use LockAllAttributesExcept.\n        // It locks and unlocks all urls elements \n        // except the port.\n        static void LockAllAttributesExcept()\n        {\n\n            try\n            {\n                // Get current configuration file.\n                System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None);\n\n                // Get the MyUrls section.\n                UrlsSection myUrlsSection =\n                    config.GetSection(&quot;MyUrls&quot;) as UrlsSection;\n\n                if (myUrlsSection == null)\n                    Console.WriteLine(\n                        &quot;Failed to load UrlsSection.&quot;);\n                else\n                {\n\n                    IEnumerator elemEnum =\n                         myUrlsSection.Urls.GetEnumerator();\n\n                    int i = 0;\n                    while (elemEnum.MoveNext())\n                    {\n\n                        // Get current element.\n                        ConfigurationElement element =\n                            myUrlsSection.Urls[i];\n\n                        // Get current element lock all attributes.\n                        ConfigurationLockCollection lockAllAttributesExcept =\n                            element.LockAllAttributesExcept;\n\n                        // Add or remove the lock on all attributes \n                        // except port.\n                        if (lockAllAttributesExcept.Contains(&quot;port&quot;))\n                            lockAllAttributesExcept.Remove(&quot;port&quot;);\n                        else\n                            lockAllAttributesExcept.Add(&quot;port&quot;);\n\n\n                        string lockedAttributes =\n                            lockAllAttributesExcept.AttributeList;\n\n                        Console.WriteLine(\n                            &quot;Element {0} Locked attributes list: {1}&quot;,\n                            i.ToString(), lockedAttributes);\n\n\n                        i += 1;\n\n                        config.Save(ConfigurationSaveMode.Full);\n\n                    }\n\n\n                }\n            }\n            catch (ConfigurationErrorsException e)\n            {\n                Console.WriteLine(\n                    &quot;[LockAllAttributesExcept: {0}]&quot;,\n                    e.ToString());\n            }\n\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#9\">    &#39; Show how to use LockAllAttributesExcept.\n    &#39; It locks and unlocks all urls elements \n    &#39; except the port.\n    Shared Sub LockAllAttributesExcept()\n\n        Try\n            &#39; Get the current configuration file.\n            Dim config _\n            As System.Configuration.Configuration = _\n            ConfigurationManager.OpenExeConfiguration( _\n            ConfigurationUserLevel.None)\n\n            &#39; Get the MyUrls section.\n            Dim myUrlsSection As UrlsSection = _\n            config.GetSection(&quot;MyUrls&quot;)\n\n            If myUrlsSection Is Nothing Then\n                Console.WriteLine(&quot;Failed to load UrlsSection.&quot;)\n            Else\n\n                Dim elemEnum As IEnumerator = _\n                myUrlsSection.Urls.GetEnumerator()\n\n                Dim i As Integer = 0\n                While elemEnum.MoveNext()\n\n                    &#39; Get current element.\n                    Dim element _\n                    As ConfigurationElement = _\n                    myUrlsSection.Urls(i)\n\n                    &#39; Get current element lock all attributes.\n                    Dim lockAllAttributesExcept _\n                    As ConfigurationLockCollection = _\n                    element.LockAllAttributesExcept\n\n                    &#39; Add or remove the lock on all attributes \n                    &#39; except port.\n                    If lockAllAttributesExcept.Contains(&quot;port&quot;) Then\n                        lockAllAttributesExcept.Remove(&quot;port&quot;)\n                    Else\n                        lockAllAttributesExcept.Add(&quot;port&quot;)\n                    End If\n\n                    Dim lockedAttributes As String = _\n                    lockAllAttributesExcept.AttributeList()\n\n                    Console.WriteLine(&quot;Element {0} Locked attributes list: {1}&quot;, _\n                    i.ToString(), lockedAttributes)\n\n                    i += 1\n\n                    config.Save(ConfigurationSaveMode.Full)\n                End While\n            End If\n\n\n        Catch e As ConfigurationErrorsException\n            Console.WriteLine(&quot;[LockAllAttributesExcept: {0}]&quot;, _\n            e.ToString())\n        End Try\n\n    End Sub &#39;LockAllAttributesExcept\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_LockAllElementsExcept\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_LockAllElementsExcept_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LockAllElementsExcept</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of locked elements.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Configuration.ConfigurationLockCollection LockAllElementsExcept { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationlockcollection\" data-linktype=\"relative-path\">ConfigurationLockCollection</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.configuration.configurationlockcollection\" data-linktype=\"relative-path\">ConfigurationLockCollection</a> of locked elements.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The LockAllElementsExcept property allows you to lock all the elements at once, except for the one you specify.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The LockAllElementsExcept property allows you to prevent the child configuration elements of the element to which you apply the rule from being modified. Use the <a class=\"xref\" href=\"system.configuration.configurationelement#System_Configuration_ConfigurationElement_LockItem_\" data-linktype=\"relative-path\">LockItem</a> property if you want to put a general lock on the element itself and its child elements.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the LockAllElementsExcept property.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#5\">        // Show how to use LockAllElementsExcept.\n        // It locks and unlocks all the MyUrls elements \n        // except urls.\n        static void LockAllElementsExcept()\n        {\n\n            try\n            {\n                // Get the configuration file.\n                System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None);\n\n                // Get the MyUrls section.\n                UrlsSection myUrlsSection =\n                    config.GetSection(&quot;MyUrls&quot;) as UrlsSection;\n\n                if (myUrlsSection == null)\n                    Console.WriteLine(&quot;Failed to load UrlsSection.&quot;);\n                else\n                {\n\n                    // Get MyUrls section LockElements collection.\n                    ConfigurationLockCollection lockElementsExcept =\n                        myUrlsSection.LockAllElementsExcept;\n\n                    // Get MyUrls section LockElements collection \n                    // enumerator.\n                    IEnumerator lockElementEnum =\n                         lockElementsExcept.GetEnumerator();\n\n                    // Position the collection index.\n                    lockElementEnum.MoveNext();\n\n                    if (lockElementsExcept.Contains(&quot;urls&quot;))\n                        // Remove the lock on all the ther elements.\n                        lockElementsExcept.Remove(&quot;urls&quot;);\n                    else\n                        // Add the lock on all the other elements \n                        // but urls element.\n                        lockElementsExcept.Add(&quot;urls&quot;);\n\n\n                    config.Save(ConfigurationSaveMode.Full);\n                }\n            }\n            catch (ConfigurationErrorsException err)\n            {\n                Console.WriteLine(&quot;[LockAllElementsExcept: {0}]&quot;,\n                    err.ToString());\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#5\">    &#39; Show how to use LockAllElementsExcept.\n    &#39; It locks and unlocks all the MyUrls elements \n    &#39; except urls.\n    Shared Sub LockAllElementsExcept()\n\n        Try\n            &#39; Get the current configuration file.\n            Dim config _\n            As System.Configuration.Configuration = _\n            ConfigurationManager.OpenExeConfiguration( _\n            ConfigurationUserLevel.None)\n\n            &#39; Get the MyUrls section.\n            Dim myUrlsSection As UrlsSection = _\n            config.GetSection(&quot;MyUrls&quot;)\n\n            If myUrlsSection Is Nothing Then\n                Console.WriteLine(&quot;Failed to load UrlsSection.&quot;)\n            Else\n\n                &#39; Get MyUrls section LockElements collection.\n                Dim lockElementsExcept _\n                As ConfigurationLockCollection = _\n                myUrlsSection.LockAllElementsExcept\n\n                &#39; Get MyUrls section LockElements collection \n                &#39; enumerator.\n                Dim lockElementEnum As IEnumerator = _\n                lockElementsExcept.GetEnumerator()\n\n                &#39; Position the collection index.\n                lockElementEnum.MoveNext()\n\n                If lockElementsExcept.Contains(&quot;urls&quot;) Then\n                    &#39; Remove the lock on all the ther elements.\n                    lockElementsExcept.Remove(&quot;urls&quot;)\n                    &#39; Add the lock on all the other elements \n                    &#39; but urls element.\n                Else\n                    lockElementsExcept.Add(&quot;urls&quot;)\n                End If\n\n                config.Save(ConfigurationSaveMode.Full)\n            End If\n        Catch err As ConfigurationErrorsException\n            Console.WriteLine(&quot;[LockAllElementsExcept: {0}]&quot;, _\n            err.ToString())\n        End Try\n\n    End Sub &#39;LockAllElementsExcept\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_LockAttributes\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_LockAttributes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LockAttributes</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of locked attributes</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Configuration.ConfigurationLockCollection LockAttributes { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationlockcollection\" data-linktype=\"relative-path\">ConfigurationLockCollection</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.configuration.configurationlockcollection\" data-linktype=\"relative-path\">ConfigurationLockCollection</a> of locked attributes (properties) for the element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The LockAttributes property allows you to lock all the attributes you specify.  </p>\n<p> To do that you use the <a class=\"xref\" href=\"system.configuration.configurationlockcollection#System_Configuration_ConfigurationLockCollection_Contains_\" data-linktype=\"relative-path\">Contains</a> method, as explained in the Example section.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The LockAttributes property allows you to prevent the child configuration elements of the element to which you apply the rule from being modified. Use <a class=\"xref\" href=\"system.configuration.configurationelement#System_Configuration_ConfigurationElement_LockItem_\" data-linktype=\"relative-path\">LockItem</a> if you want to put a general lock on the element itself and its child elements.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the LockAttributes property.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#8\">        // Show how to use LockAttributes.\n        // It locks and unlocks all the urls elements.\n        static void LockAttributes()\n        {\n\n            try\n            {\n                // Get the current configuration file.\n                System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None);\n\n                // Get the MyUrls section.\n                UrlsSection myUrlsSection =\n                    config.GetSection(&quot;MyUrls&quot;) as UrlsSection;\n\n                if (myUrlsSection == null)\n                    Console.WriteLine(&quot;Failed to load UrlsSection.&quot;);\n                else\n                {\n\n                    IEnumerator elemEnum =\n                         myUrlsSection.Urls.GetEnumerator();\n\n                    int i = 0;\n                    while (elemEnum.MoveNext())\n                    {\n\n                        // Get the current element.\n                        ConfigurationElement element =\n                            myUrlsSection.Urls[i];\n\n                        // Get the lock attributes collection of \n                        // the current element.\n                        ConfigurationLockCollection lockAttributes =\n                            element.LockAttributes;\n\n                        // Add or remove the lock on the attributes.\n                        if (lockAttributes.Contains(&quot;name&quot;))\n                            lockAttributes.Remove(&quot;name&quot;);\n                        else\n                            lockAttributes.Add(&quot;name&quot;);\n\n                        if (lockAttributes.Contains(&quot;url&quot;))\n                            lockAttributes.Remove(&quot;url&quot;);\n                        else\n                            lockAttributes.Add(&quot;url&quot;);\n\n                        if (lockAttributes.Contains(&quot;port&quot;))\n                            lockAttributes.Remove(&quot;port&quot;);\n                        else\n                            lockAttributes.Add(&quot;port&quot;);\n\n\n                        // Get the locket attributes.\n                        string lockedAttributes =\n                            lockAttributes.AttributeList;\n\n                        Console.WriteLine(\n                            &quot;Element {0} Locked attributes list: {1}&quot;,\n                            i.ToString(), lockedAttributes);\n\n                        i += 1;\n\n                        config.Save(ConfigurationSaveMode.Full);\n\n                    }\n\n                }\n            }\n            catch (ConfigurationErrorsException e)\n            {\n                Console.WriteLine(&quot;[LockAttributes: {0}]&quot;,\n                    e.ToString());\n            }\n\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#8\">    &#39; Show how to use LockAttributes.\n    &#39; It locks and unlocks all the urls elements.\n    Shared Sub LockAttributes()\n\n        Try\n            &#39; Get the current configuration file.\n            Dim config _\n            As System.Configuration.Configuration = _\n            ConfigurationManager.OpenExeConfiguration( _\n            ConfigurationUserLevel.None)\n\n            &#39; Get the MyUrls section.\n            Dim myUrlsSection As UrlsSection = _\n            config.GetSection(&quot;MyUrls&quot;)\n\n            If myUrlsSection Is Nothing Then\n                Console.WriteLine(&quot;Failed to load UrlsSection.&quot;)\n            Else\n\n                Dim elemEnum As IEnumerator = _\n                myUrlsSection.Urls.GetEnumerator()\n\n                Dim i As Integer = 0\n                While elemEnum.MoveNext()\n                    &#39; Get the current element.\n                    Dim element As ConfigurationElement = _\n                    myUrlsSection.Urls(i)\n\n                    &#39; Get the lock attributes collection of \n                    &#39; the current element.\n                    Dim lockAttributes _\n                    As ConfigurationLockCollection = _\n                    element.LockAttributes\n\n                    &#39; Add or remove the lock on the attributes.\n                    If lockAttributes.Contains(&quot;name&quot;) Then\n                        lockAttributes.Remove(&quot;name&quot;)\n                    Else\n                        lockAttributes.Add(&quot;name&quot;)\n                    End If\n                    If lockAttributes.Contains(&quot;url&quot;) Then\n                        lockAttributes.Remove(&quot;url&quot;)\n                    Else\n                        lockAttributes.Add(&quot;url&quot;)\n                    End If\n                    If lockAttributes.Contains(&quot;port&quot;) Then\n                        lockAttributes.Remove(&quot;port&quot;)\n                    Else\n                        lockAttributes.Add(&quot;port&quot;)\n                    End If\n\n                    &#39; Get the locket attributes.\n                    Dim lockedAttributes As String = _\n                    lockAttributes.AttributeList()\n\n                    Console.WriteLine(&quot;Element {0} Locked attributes list: {1}&quot;, _\n                    i.ToString(), lockedAttributes)\n\n                    i += 1\n\n                    config.Save(ConfigurationSaveMode.Full)\n                End While\n            End If\n\n        Catch e As ConfigurationErrorsException\n            Console.WriteLine(&quot;[LockAttributes: {0}]&quot;, _\n            e.ToString())\n        End Try\n\n    End Sub &#39;LockAttributes\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_LockElements\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_LockElements_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LockElements</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of locked elements.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Configuration.ConfigurationLockCollection LockElements { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationlockcollection\" data-linktype=\"relative-path\">ConfigurationLockCollection</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.configuration.configurationlockcollection\" data-linktype=\"relative-path\">ConfigurationLockCollection</a> of locked elements.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The LockElements property allows you to lock all the elements you specify.  </p>\n<p> To do that, you use the <a class=\"xref\" href=\"system.configuration.configurationlockcollection#System_Configuration_ConfigurationLockCollection_Contains_\" data-linktype=\"relative-path\">Contains</a> method, as explained in the next example.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The LockElements property allows you to prevent the child configuration elements of the element to which you apply the rule from being modified. Use <a class=\"xref\" href=\"system.configuration.configurationelement#System_Configuration_ConfigurationElement_LockItem_\" data-linktype=\"relative-path\">LockItem</a> if you want to put a general lock on the element itself and its child elements.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the LockElements property.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#4\">        // Show how to use LockElements\n        // It locks and unlocks the urls element.\n        static void LockElements()\n        {\n\n            try\n            {\n                // Get the configuration file.\n                System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None);\n\n                // Get the MyUrls section.\n                UrlsSection myUrlsSection =\n                    config.GetSection(&quot;MyUrls&quot;) as UrlsSection;\n\n                if (myUrlsSection == null)\n                    Console.WriteLine(&quot;Failed to load UrlsSection.&quot;);\n                else\n                {\n                    // Get MyUrls section LockElements collection.\n                    ConfigurationLockCollection lockElements =\n                        myUrlsSection.LockElements;\n\n                    // Get MyUrls section LockElements collection \n                    // enumerator.\n                    IEnumerator lockElementEnum =\n                         lockElements.GetEnumerator();\n\n                    // Position the collection index.\n                    lockElementEnum.MoveNext();\n\n                    if (lockElements.Contains(&quot;urls&quot;))\n                        // Remove the lock on the urls element.\n                        lockElements.Remove(&quot;urls&quot;);\n                    else\n                        // Add the lock on the urls element.\n                        lockElements.Add(&quot;urls&quot;);\n\n                    // Save the change.\n                    config.Save(ConfigurationSaveMode.Full);\n\n                }\n\n            }\n            catch (ConfigurationErrorsException err)\n            {\n                Console.WriteLine(&quot;[LockElements: {0}]&quot;,\n                    err.ToString());\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#4\">    &#39; Show how to use LockElements\n    &#39; It locks and unlocks the urls element.\n    Shared Sub LockElements()\n\n        Try\n            &#39; Get the current configuration file.\n            Dim config _\n            As System.Configuration.Configuration = _\n            ConfigurationManager.OpenExeConfiguration( _\n            ConfigurationUserLevel.None)\n\n            &#39; Get the MyUrls section.\n            Dim myUrlsSection As UrlsSection = _\n            config.GetSection(&quot;MyUrls&quot;)\n\n            If myUrlsSection Is Nothing Then\n                Console.WriteLine(&quot;Failed to load UrlsSection.&quot;)\n            Else\n                &#39; Get MyUrls section LockElements collection.\n                Dim lockElements _\n                As ConfigurationLockCollection = _\n                myUrlsSection.LockElements\n\n                &#39; Get MyUrls section LockElements collection \n                &#39; enumerator.\n                Dim lockElementEnum As IEnumerator = _\n                lockElements.GetEnumerator()\n\n                &#39; Position the collection index.\n                lockElementEnum.MoveNext()\n\n                If lockElements.Contains(&quot;urls&quot;) Then\n                    &#39; Remove the lock on the urls element.\n                    lockElements.Remove(&quot;urls&quot;)\n                Else\n                    &#39; Add the lock on the urls element.\n                    lockElements.Add(&quot;urls&quot;)\n                End If\n                &#39; Save the change.\n                config.Save(ConfigurationSaveMode.Full)\n            End If\n\n        Catch err As ConfigurationErrorsException\n            Console.WriteLine(&quot;[LockElements: {0}]&quot;, _\n            err.ToString())\n        End Try\n\n    End Sub &#39;LockElements\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_LockItem\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_LockItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LockItem</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the element is locked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool LockItem { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the element is locked; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>The element has already been locked at a higher configuration level.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the LockItem property if you want to put a general lock on the element itself and its child elements.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the LockItem.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#3\">        // Show how to set LockItem\n        // It adds a new UrlConfigElement to \n        // the collection.\n        static void LockItem()\n        {\n            string name = &quot;Contoso&quot;;\n            string url = &quot;http://www.contoso.com/&quot;;\n            int port = 8080;\n\n            try\n            {\n                // Get the current configuration file.\n                System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None);\n\n                // Get the MyUrls section.\n                UrlsSection myUrls =\n                   config.Sections[&quot;MyUrls&quot;] as UrlsSection;\n\n\n                // Create the new  element.\n                UrlConfigElement newElement =\n                    new UrlConfigElement(name, url, port);\n\n                // Set its lock.\n                newElement.LockItem = true;\n\n                // Save the new element to the \n                // configuration file.\n                if (!myUrls.ElementInformation.IsLocked)\n                {\n\n                    myUrls.Urls.Add(newElement);\n\n                    config.Save(ConfigurationSaveMode.Full);\n\n                    // This is used to obsolete the cached \n                    // section and read the updated \n                    // bersion from the configuration file.\n                    ConfigurationManager.RefreshSection(&quot;MyUrls&quot;);\n                }\n                else\n                    Console.WriteLine(\n                        &quot;Section was locked, could not update.&quot;);\n\n            }\n            catch (ConfigurationErrorsException e)\n            {\n                Console.WriteLine(&quot;[LockItem: {0}]&quot;,\n                    e.ToString());\n            }\n\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#3\">    &#39; Show how to set LockItem\n    &#39; It adds a new UrlConfigElement to \n    &#39; the collection.\n    Shared Sub LockItem()\n        Dim name As String = &quot;Contoso&quot;\n        Dim url As String = &quot;http://www.contoso.com/&quot;\n        Dim port As Integer = 8080\n\n        Try\n            &#39; Get the current configuration file.\n            Dim config _\n            As System.Configuration.Configuration = _\n            ConfigurationManager.OpenExeConfiguration( _\n            ConfigurationUserLevel.None)\n\n            &#39; Get the MyUrls section.\n            Dim myUrls As UrlsSection = _\n            config.Sections(&quot;MyUrls&quot;)\n\n\n            &#39; Create the new  element.\n            Dim newElement _\n            As New UrlConfigElement(name, url, port)\n\n            &#39; Set its lock.\n            newElement.LockItem = True\n\n            &#39; Save the new element to the \n            &#39; configuration file.\n            If Not myUrls.ElementInformation.IsLocked Then\n\n                myUrls.Urls.Add(newElement)\n\n                config.Save(ConfigurationSaveMode.Full)\n\n                &#39; This is used to obsolete the cached \n                &#39; section and read the updared version \n                &#39; from the configuration file.\n                ConfigurationManager.RefreshSection(&quot;MyUrls&quot;)\n            Else\n                Console.WriteLine(&quot;Section was locked, could not update.&quot;)\n            End If\n\n        Catch e As ConfigurationErrorsException\n            Console.WriteLine(&quot;[LockItem: {0}]&quot;, _\n            e.ToString())\n        End Try\n\n    End Sub &#39;LockItem\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_Properties\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_Properties_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Properties</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of properties.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Configuration.ConfigurationPropertyCollection Properties { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationpropertycollection\" data-linktype=\"relative-path\">ConfigurationPropertyCollection</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.configuration.configurationpropertycollection\" data-linktype=\"relative-path\">ConfigurationPropertyCollection</a> of properties for the element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Properties property, also called the property bag, contains all the properties (attributes) that apply to the element.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that shows how to use the Properties property, refer to the <a class=\"xref\" href=\"system.configuration.configurationproperty\" data-linktype=\"relative-path\">ConfigurationProperty</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_DeserializeElement_System_Xml_XmlReader_System_Boolean_\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_DeserializeElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeserializeElement(XmlReader,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Reads XML from the configuration file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void DeserializeElement (System.Xml.XmlReader reader, bool serializeCollectionKey);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>reader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> that reads from the configuration file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializeCollectionKey</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to serialize only the collection key properties; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>The element to read is locked.  </p>\n<p> - or -  </p>\n<p> An attribute of the current node is not recognized.  </p>\n<p> - or -  </p>\n<p> The lock status of the current node cannot be determined.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to extend the DeserializeElement method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#33\">        protected override void DeserializeElement(\n           System.Xml.XmlReader reader, \n            bool serializeCollectionKey)\n        {\n            base.DeserializeElement(reader, \n                serializeCollectionKey);\n            // You can your custom processing code here.\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#33\">    Protected Overrides Sub DeserializeElement(ByVal reader _\n        As System.Xml.XmlReader, _\n        ByVal serializeCollectionKey As Boolean)\n\n        MyBase.DeserializeElement(reader, _\n            serializeCollectionKey)\n        &#39; Enter your custom processing code here.\n    End Sub &#39;DeserializeElement\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Compares the current <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> instance to the specified object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object compareTo);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>compareTo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to compare with.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the object to compare with is equal to the current <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> instance; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_GetHashCode\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Gets a unique value representing the current <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A unique value representing the current <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_GetTransformedAssemblyString_System_String_\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_GetTransformedAssemblyString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetTransformedAssemblyString(String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the transformed version of the specified assembly name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual string GetTransformedAssemblyString (string assemblyName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The transformed version of the assembly name. If no transformer is available, the <code>assemblyName</code> parameter value is returned unchanged. The <span class=\"xref\">stem.Configuration.Configuration.TypeStringTransformer*</span> property is <code>null</code> if no transformer is available.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.configuration.configurationelement#System_Configuration_ConfigurationElement_SerializeElement_\" data-linktype=\"relative-path\">SerializeElement</a> method and the <a class=\"xref\" href=\"system.configuration.configurationelement#System_Configuration_ConfigurationElement_SerializeToXmlElement_\" data-linktype=\"relative-path\">SerializeToXmlElement</a> method call this method in order to transform an assembly name when an earlier version of the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnshort-md.md&quot; -->.NET Framework<!--END INCLUDE --> is targeted.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_GetTransformedTypeString_System_String_\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_GetTransformedTypeString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetTransformedTypeString(String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the transformed version of the specified type name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual string GetTransformedTypeString (string typeName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The transformed version of the specified type name. If no transformer is available, the <code>typeName</code> parameter value is returned unchanged. The <span class=\"xref\">stem.Configuration.Configuration.TypeStringTransformer*</span> property is <code>null</code> if no transformer is available.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.configuration.configurationelement#System_Configuration_ConfigurationElement_SerializeElement_\" data-linktype=\"relative-path\">SerializeElement</a> method and the <a class=\"xref\" href=\"system.configuration.configurationelement#System_Configuration_ConfigurationElement_SerializeToXmlElement_\" data-linktype=\"relative-path\">SerializeToXmlElement</a> method call this method in order to transform a type name when an earlier version of the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnshort-md.md&quot; -->.NET Framework<!--END INCLUDE --> is targeted.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_Init\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_Init_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Init()</div>        \r\n          </div>\r\n    \r\n            <p>Sets the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object to its initial state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Init ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_InitializeDefault\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_InitializeDefault_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InitializeDefault()</div>        \r\n          </div>\r\n    \r\n            <p>Used to initialize a default set of values for the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void InitializeDefault ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Called to set the internal state of the object to appropriate default values.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_IsModified\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_IsModified_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsModified()</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether this configuration element has been modified since it was last saved or loaded, when implemented in a derived class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool IsModified ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the element has been modified; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The IsModified method determines whether this <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object will be written to the configuration file when the <a class=\"xref\" href=\"system.configuration.configuration#System_Configuration_Configuration_Save_\" data-linktype=\"relative-path\">Save</a> method is called. If the return value is <code>false</code>, it is assumed that the configuration file represents the current state of the element.  </p>\n<p> By default, IsModified returns <code>true</code> after a property is set through the indexer to this <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object.  </p>\n<p> Override the IsModified method to provide custom indication of the state of this <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> element.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to extend IsModified.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#35\">        protected override bool IsModified()\n        {\n            bool ret = base.IsModified();\n            // You can enter your custom processing code here.\n            return ret;\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#35\">    Protected Overrides Function IsModified() As Boolean\n        Dim ret As Boolean = MyBase.IsModified()\n        &#39; Enter your custom processing code here.\n        Return ret\n\n    End Function &#39;IsModified\nEnd Class &#39;UrlConfigElement \n</code></pre><p> The method shown in the previous example is called when a configuration element is modified, as in the following example.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#6\">        // Show how to use IsModified.\n        // This method modifies the port property\n        // of the url element named Microsoft and\n        // saves the modification to the configuration\n        // file. This in turn will cause the overriden\n        // UrlConfigElement.IsModified() mathod to be called. \n        static void ModifyElement()\n        {\n            try\n            {\n                // Get the configuration file.\n                System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None);\n\n                // Get the MyUrls section.\n                UrlsSection myUrlsSection =\n                    config.GetSection(&quot;MyUrls&quot;) as UrlsSection;\n\n\n                UrlsCollection elements = myUrlsSection.Urls;\n\n\n                IEnumerator elemEnum =\n                    elements.GetEnumerator();\n\n                int i = 0;\n                while (elemEnum.MoveNext())\n                {\n                    if (elements[i].Name == &quot;Microsoft&quot;)\n                    {\n                        elements[i].Port = 1010;\n                        bool readOnly = elements[i].IsReadOnly();\n                        break;\n                    }\n                    i += 1;\n                }\n\n                if (!myUrlsSection.ElementInformation.IsLocked)\n                {\n\n                    config.Save(ConfigurationSaveMode.Full);\n\n                    // This to obsolete the MyUrls cached \n                    // section and read the updated version\n                    // from the configuration file.\n                    ConfigurationManager.RefreshSection(&quot;MyUrls&quot;);\n                }\n                else\n                    Console.WriteLine(\n                        &quot;Section was locked, could not update.&quot;);\n            }\n\n            catch (ConfigurationErrorsException err)\n            {\n                Console.WriteLine(&quot;[ModifyElement: {0}]&quot;,\n                    err.ToString());\n            }\n\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#6\">    &#39; Show how to use IsModified.\n    &#39; This method modifies the port property\n    &#39; of the url element named Microsoft and\n    &#39; saves the modification to the configuration\n    &#39; file. This in turn will cause the overriden\n    &#39; UrlConfigElement.IsModified() mathod to be called. \n    Shared Sub ModifyElement()\n        Try\n            &#39; Get the current configuration file.\n            Dim config _\n            As System.Configuration.Configuration = _\n            ConfigurationManager.OpenExeConfiguration( _\n            ConfigurationUserLevel.None)\n\n            &#39; Get the MyUrls section.\n            Dim myUrlsSection As UrlsSection = _\n            config.GetSection(&quot;MyUrls&quot;)\n\n\n            Dim elements As UrlsCollection = _\n            myUrlsSection.Urls\n\n\n            Dim elemEnum As IEnumerator = _\n            elements.GetEnumerator()\n\n            Dim i As Integer = 0\n            While elemEnum.MoveNext()\n                If elements(i).Name = &quot;Microsoft&quot; Then\n                    elements(i).Port = 1010\n                    Dim [readOnly] As Boolean = _\n                    elements(i).IsReadOnly()\n                    Exit While\n                End If\n                i += 1\n            End While\n\n            If Not myUrlsSection.ElementInformation.IsLocked Then\n\n                config.Save(ConfigurationSaveMode.Full)\n\n                &#39; This to obsolete the MyUrls cached \n                &#39; section and read the updated version \n                &#39; from the configuration file.\n                ConfigurationManager.RefreshSection(&quot;MyUrls&quot;)\n            Else\n                Console.WriteLine(&quot;Section was locked, could not update.&quot;)\n            End If\n\n        Catch err As ConfigurationErrorsException\n            Console.WriteLine(&quot;[ModifyElement: {0}]&quot;, _\n            err.ToString())\n        End Try\n\n    End Sub &#39;ModifyElement\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_IsReadOnly\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_IsReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsReadOnly()</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool IsReadOnly ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object is read-only; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The system defines configuration elements that cannot be modified.  </p>\n<p> To determine which elements can be modified, use the IsReadOnly method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the IsReadOnly method. It is used on a custom section and returns <code>false</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#7\">        // Show how to use IsReadOnly.\n        // It loops to see if the elements are read only. \n        static void ReadOnlyElements()\n        {\n            try\n            {\n                // Get the configuration file.\n                System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None);\n\n                // Get the MyUrls section.\n                UrlsSection myUrlsSection =\n                    config.GetSection(&quot;MyUrls&quot;) as UrlsSection;\n\n\n                UrlsCollection elements = myUrlsSection.Urls;\n\n\n                IEnumerator elemEnum =\n                    elements.GetEnumerator();\n\n                int i = 0;\n                Console.WriteLine(elements.Count.ToString());\n\n                while (elemEnum.MoveNext())\n                {\n                    Console.WriteLine(&quot;The element {0} is read only: {1}&quot;,\n                     elements[i].Name,\n                     elements[i].IsReadOnly().ToString());\n                    i += 1;\n                }\n            }\n            catch (ConfigurationErrorsException err)\n            {\n                Console.WriteLine(&quot;[ReadOnlyElements: {0}]&quot;,\n                    err.ToString());\n            }\n\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#7\">    &#39; Show how to use IsReadOnly.\n    &#39; It loops to see if the elements are read only. \n    Shared Sub ReadOnlyElements()\n        Try\n            &#39; Get the current configuration file.\n            Dim config _\n            As System.Configuration.Configuration = _\n            ConfigurationManager.OpenExeConfiguration( _\n            ConfigurationUserLevel.None)\n\n            &#39; Get the MyUrls section.\n            Dim myUrlsSection As UrlsSection = _\n            config.GetSection(&quot;MyUrls&quot;)\n\n            Dim elements As UrlsCollection = _\n            myUrlsSection.Urls\n\n            Dim elemEnum As IEnumerator = _\n            elements.GetEnumerator()\n\n            Dim i As Integer = 0\n            Console.WriteLine(elements.Count.ToString())\n\n            While elemEnum.MoveNext()\n                Console.WriteLine(&quot;The element {0} is read only: {1}&quot;, _\n                elements(i).Name, elements(i).IsReadOnly().ToString())\n                i += 1\n            End While\n        Catch err As ConfigurationErrorsException\n            Console.WriteLine(&quot;[ReadOnlyElements: {0}]&quot;, _\n            err.ToString())\n        End Try\n\n    End Sub &#39;ReadOnlyElements\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_ListErrors_System_Collections_IList_\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_ListErrors_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ListErrors(IList)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the invalid-property errors in this <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object, and in all subelements, to the passed list.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void ListErrors (System.Collections.IList errorList);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>errorList</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that implements the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> interface.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_OnDeserializeUnrecognizedAttribute_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_OnDeserializeUnrecognizedAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDeserializeUnrecognizedAttribute(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether an unknown attribute is encountered during deserialization.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool OnDeserializeUnrecognizedAttribute (string name, string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the unrecognized attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the unrecognized attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> when an unknown attribute is encountered while deserializing; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OnDeserializeUnrecognizedAttribute is invoked when an unknown attribute is encountered while deserializing the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_OnDeserializeUnrecognizedElement_System_String_System_Xml_XmlReader_\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_OnDeserializeUnrecognizedElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDeserializeUnrecognizedElement(String,XmlReader)</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether an unknown element is encountered during deserialization.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool OnDeserializeUnrecognizedElement (string elementName, System.Xml.XmlReader reader);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>elementName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the unknown subelement.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>reader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> being used for deserialization.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> when an unknown element is encountered while deserializing; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>The element identified by <code>elementName</code> is locked.  </p>\n<p> - or -  </p>\n<p> One or more of the element&#39;s attributes is locked.  </p>\n<p> - or -  </p>\n<p> <code>elementName</code> is unrecognized, or the element has an unrecognized attribute.  </p>\n<p> - or -  </p>\n<p> The element has a Boolean attribute with an invalid value.  </p>\n<p> - or -  </p>\n<p> An attempt was made to deserialize a property more than once.  </p>\n<p> - or -  </p>\n<p> An attempt was made to deserialize a property that is not a valid member of the element.  </p>\n<p> - or -  </p>\n<p> The element cannot contain a CDATA or text element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OnDeserializeUnrecognizedElement is invoked when an unknown attribute is encountered while deserializing the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_OnRequiredPropertyNotFound_System_String_\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_OnRequiredPropertyNotFound_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRequiredPropertyNotFound(String)</div>        \r\n          </div>\r\n    \r\n            <p>Throws an exception when a required property is not found.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual object OnRequiredPropertyNotFound (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the required attribute that was not found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>None.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>In all cases.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.configuration.configurationelement#System_Configuration_ConfigurationElement_OnDeserializeUnrecognizedElement_\" data-linktype=\"relative-path\">OnDeserializeUnrecognizedElement</a> is invoked when an unknown attribute is encountered while deserializing the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_PostDeserialize\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_PostDeserialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PostDeserialize()</div>        \r\n          </div>\r\n    \r\n            <p>Called after deserialization.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void PostDeserialize ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_PreSerialize_System_Xml_XmlWriter_\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_PreSerialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PreSerialize(XmlWriter)</div>        \r\n          </div>\r\n    \r\n            <p>Called before serialization.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void PreSerialize (System.Xml.XmlWriter writer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>writer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> that will be used to serialize the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_Reset_System_Configuration_ConfigurationElement_\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_Reset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Reset(ConfigurationElement)</div>        \r\n          </div>\r\n    \r\n            <p>Resets the internal state of the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object, including the locks and the properties collections.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Reset (System.Configuration.ConfigurationElement parentElement);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>parentElement</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The parent node of the configuration element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_ResetModified\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_ResetModified_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResetModified()</div>        \r\n          </div>\r\n    \r\n            <p>Resets the value of the <span class=\"xref\">stem.Configuration.ConfigurationElement.IsModified*</span> method to <code>false</code> when implemented in a derived class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void ResetModified ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ResetModified method is automatically called after changes to this <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object have been written to the configuration file.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_SerializeElement_System_Xml_XmlWriter_System_Boolean_\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_SerializeElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SerializeElement(XmlWriter,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the contents of this configuration element to the configuration file when implemented in a derived class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool SerializeElement (System.Xml.XmlWriter writer, bool serializeCollectionKey);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>writer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> that writes to the configuration file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializeCollectionKey</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to serialize only the collection key properties; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if any data was actually serialized; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>The current attribute is locked at a higher configuration level.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to extend the SerializeElement method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#34\">        protected override bool SerializeElement(\n            System.Xml.XmlWriter writer, \n            bool serializeCollectionKey)\n        {\n            bool ret = base.SerializeElement(writer, \n                serializeCollectionKey);\n            // You can enter your custom processing code here.\n            return ret;\n\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#34\">    Protected Overrides Function SerializeElement(ByVal writer _\n        As System.Xml.XmlWriter, _\n        ByVal serializeCollectionKey As Boolean) As Boolean\n\n        Dim ret As Boolean = _\n            MyBase.SerializeElement(writer, serializeCollectionKey)\n        &#39; Enter your custom processing code here.\n        Return ret\n    End Function &#39;SerializeElement\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_SerializeToXmlElement_System_Xml_XmlWriter_System_String_\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_SerializeToXmlElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SerializeToXmlElement(XmlWriter,String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the outer tags of this configuration element to the configuration file when implemented in a derived class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool SerializeToXmlElement (System.Xml.XmlWriter writer, string elementName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>writer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> that writes to the configuration file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>elementName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> to be written.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if writing was successful; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>The element has multiple child elements.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SerializeToXmlElement method is called after the call to the <a class=\"xref\" href=\"system.configuration.configurationelement#System_Configuration_ConfigurationElement_Unmerge_\" data-linktype=\"relative-path\">Unmerge</a> method during serialization. The SerializeToXmlElement method writes out the contents of the configuration element between the beginning and ending tags of the element. Override SerializeToXmlElement to provide a custom serialization method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_SetPropertyValue_System_Configuration_ConfigurationProperty_System_Object_System_Boolean_\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_SetPropertyValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetPropertyValue(ConfigurationProperty,Object,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Sets a property to the specified value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void SetPropertyValue (System.Configuration.ConfigurationProperty prop, object value, bool ignoreLocks);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>prop</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationproperty\" data-linktype=\"relative-path\">ConfigurationProperty</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The element property to set.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to assign to the property.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ignoreLocks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if the locks on the property should be ignored; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>Occurs if the element is read-only or <code>ignoreLocks</code> is <code>true</code> but the locks cannot be ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_SetReadOnly\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_SetReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetReadOnly()</div>        \r\n          </div>\r\n    \r\n            <p>Sets the <span class=\"xref\">stem.Configuration.ConfigurationElement.IsReadOnly*</span> property for the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object and all subelements.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void SetReadOnly ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used internally to set aside those system-configuration elements that cannot be modified.  </p>\n<p> To determine which elements can be modified, use the <a class=\"xref\" href=\"system.configuration.configurationelement#System_Configuration_ConfigurationElement_IsReadOnly_\" data-linktype=\"relative-path\">IsReadOnly</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_ConfigurationElement_Unmerge_System_Configuration_ConfigurationElement_System_Configuration_ConfigurationElement_System_Configuration_ConfigurationSaveMode_\">\r\n    \r\n            <a id=\"System_Configuration_ConfigurationElement_Unmerge_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)</div>        \r\n          </div>\r\n    \r\n            <p>Modifies the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object to remove all values that should not be saved.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Unmerge (System.Configuration.ConfigurationElement sourceElement, System.Configuration.ConfigurationElement parentElement, System.Configuration.ConfigurationSaveMode saveMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sourceElement</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> at the current level containing a merged view of the properties.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parentElement</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The parent <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a>, or <code>null</code> if this is the top level.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>saveMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationsavemode\" data-linktype=\"relative-path\">ConfigurationSaveMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.configuration.configurationsavemode\" data-linktype=\"relative-path\">ConfigurationSaveMode</a> that determines which property values to include.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called before the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> object is saved by the <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object in order to remove all unneeded properties.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Configuration.ConfigurationElement.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Configuration.ConfigurationElement.yml\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement..ctor\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.CurrentConfiguration\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.DeserializeElement\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.ElementInformation\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.ElementProperty\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.Equals\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.EvaluationContext\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.GetTransformedAssemblyString\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.GetTransformedTypeString\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.HasContext\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.Init\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.InitializeDefault\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.IsModified\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.IsReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.Item\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.ListErrors\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.LockAllAttributesExcept\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.LockAllElementsExcept\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.LockAttributes\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.LockElements\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.LockItem\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.PostDeserialize\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.PreSerialize\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.Properties\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.Reset\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.ResetModified\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.SerializeElement\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.SerializeToXmlElement\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.SetPropertyValue\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.SetReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Configuration.ConfigurationElement.Unmerge\">\r\n<meta name=\"APILocation\" content=\"System.Configuration.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"b5b08b6b-d91a-011a-88bf-034f0f21d451\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Configuration\\ConfigurationElement.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a configuration element within a configuration file.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Configuration/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Configuration.ConfigurationElement\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Configuration.ConfigurationElement.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Configuration.ConfigurationElement.yml","open_to_public_contributors":true,"api_name":["System.Configuration.ConfigurationElement","System.Configuration.ConfigurationElement..ctor","System.Configuration.ConfigurationElement.CurrentConfiguration","System.Configuration.ConfigurationElement.DeserializeElement","System.Configuration.ConfigurationElement.ElementInformation","System.Configuration.ConfigurationElement.ElementProperty","System.Configuration.ConfigurationElement.Equals","System.Configuration.ConfigurationElement.EvaluationContext","System.Configuration.ConfigurationElement.GetHashCode","System.Configuration.ConfigurationElement.GetTransformedAssemblyString","System.Configuration.ConfigurationElement.GetTransformedTypeString","System.Configuration.ConfigurationElement.HasContext","System.Configuration.ConfigurationElement.Init","System.Configuration.ConfigurationElement.InitializeDefault","System.Configuration.ConfigurationElement.IsModified","System.Configuration.ConfigurationElement.IsReadOnly","System.Configuration.ConfigurationElement.Item","System.Configuration.ConfigurationElement.ListErrors","System.Configuration.ConfigurationElement.LockAllAttributesExcept","System.Configuration.ConfigurationElement.LockAllElementsExcept","System.Configuration.ConfigurationElement.LockAttributes","System.Configuration.ConfigurationElement.LockElements","System.Configuration.ConfigurationElement.LockItem","System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute","System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement","System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound","System.Configuration.ConfigurationElement.PostDeserialize","System.Configuration.ConfigurationElement.PreSerialize","System.Configuration.ConfigurationElement.Properties","System.Configuration.ConfigurationElement.Reset","System.Configuration.ConfigurationElement.ResetModified","System.Configuration.ConfigurationElement.SerializeElement","System.Configuration.ConfigurationElement.SerializeToXmlElement","System.Configuration.ConfigurationElement.SetPropertyValue","System.Configuration.ConfigurationElement.SetReadOnly","System.Configuration.ConfigurationElement.Unmerge"],"api_location":["System.Configuration.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Configuration.ConfigurationElement","System::Configuration::ConfigurationElement","System.Configuration.ConfigurationElement.#ctor","System::Configuration::ConfigurationElement::#ctor","System.Configuration.ConfigurationElement.CurrentConfiguration","System::Configuration::ConfigurationElement::CurrentConfiguration","System.Configuration.ConfigurationElement.DeserializeElement","System::Configuration::ConfigurationElement::DeserializeElement","System.Configuration.ConfigurationElement.ElementInformation","System::Configuration::ConfigurationElement::ElementInformation","System.Configuration.ConfigurationElement.ElementProperty","System::Configuration::ConfigurationElement::ElementProperty","System.Configuration.ConfigurationElement.Equals","System::Configuration::ConfigurationElement::Equals","System.Configuration.ConfigurationElement.EvaluationContext","System::Configuration::ConfigurationElement::EvaluationContext","System.Configuration.ConfigurationElement.GetHashCode","System::Configuration::ConfigurationElement::GetHashCode","System.Configuration.ConfigurationElement.GetTransformedAssemblyString","System::Configuration::ConfigurationElement::GetTransformedAssemblyString","System.Configuration.ConfigurationElement.GetTransformedTypeString","System::Configuration::ConfigurationElement::GetTransformedTypeString","System.Configuration.ConfigurationElement.HasContext","System::Configuration::ConfigurationElement::HasContext","System.Configuration.ConfigurationElement.Init","System::Configuration::ConfigurationElement::Init","System.Configuration.ConfigurationElement.InitializeDefault","System::Configuration::ConfigurationElement::InitializeDefault","System.Configuration.ConfigurationElement.IsModified","System::Configuration::ConfigurationElement::IsModified","System.Configuration.ConfigurationElement.IsReadOnly","System::Configuration::ConfigurationElement::IsReadOnly","System.Configuration.ConfigurationElement.Item","System::Configuration::ConfigurationElement::Item","System.Configuration.ConfigurationElement.ListErrors","System::Configuration::ConfigurationElement::ListErrors","System.Configuration.ConfigurationElement.LockAllAttributesExcept","System::Configuration::ConfigurationElement::LockAllAttributesExcept","System.Configuration.ConfigurationElement.LockAllElementsExcept","System::Configuration::ConfigurationElement::LockAllElementsExcept","System.Configuration.ConfigurationElement.LockAttributes","System::Configuration::ConfigurationElement::LockAttributes","System.Configuration.ConfigurationElement.LockElements","System::Configuration::ConfigurationElement::LockElements","System.Configuration.ConfigurationElement.LockItem","System::Configuration::ConfigurationElement::LockItem","System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute","System::Configuration::ConfigurationElement::OnDeserializeUnrecognizedAttribute","System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement","System::Configuration::ConfigurationElement::OnDeserializeUnrecognizedElement","System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound","System::Configuration::ConfigurationElement::OnRequiredPropertyNotFound","System.Configuration.ConfigurationElement.PostDeserialize","System::Configuration::ConfigurationElement::PostDeserialize","System.Configuration.ConfigurationElement.PreSerialize","System::Configuration::ConfigurationElement::PreSerialize","System.Configuration.ConfigurationElement.Properties","System::Configuration::ConfigurationElement::Properties","System.Configuration.ConfigurationElement.Reset","System::Configuration::ConfigurationElement::Reset","System.Configuration.ConfigurationElement.ResetModified","System::Configuration::ConfigurationElement::ResetModified","System.Configuration.ConfigurationElement.SerializeElement","System::Configuration::ConfigurationElement::SerializeElement","System.Configuration.ConfigurationElement.SerializeToXmlElement","System::Configuration::ConfigurationElement::SerializeToXmlElement","System.Configuration.ConfigurationElement.SetPropertyValue","System::Configuration::ConfigurationElement::SetPropertyValue","System.Configuration.ConfigurationElement.SetReadOnly","System::Configuration::ConfigurationElement::SetReadOnly","System.Configuration.ConfigurationElement.Unmerge","System::Configuration::ConfigurationElement::Unmerge"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"b5b08b6b-d91a-011a-88bf-034f0f21d451","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Configuration\\ConfigurationElement.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Configuration/ConfigurationElement.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ConfigurationElement class | Microsoft Docs","_op_ogTitle":"ConfigurationElement class","description":"Represents a configuration element within a configuration file.\n","toc_asset_id":"_splitted/System.Configuration/toc.json","toc_rel":"_splitted/System.Configuration/toc.json","source_url":"","ms.assetid":"System.Configuration.ConfigurationElement","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.configuration.configurationelement","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.configuration.configurationelement","fileRelativePath":"System.Configuration.ConfigurationElement.html"},"themesRelativePathToOutputRoot":"_themes/"}