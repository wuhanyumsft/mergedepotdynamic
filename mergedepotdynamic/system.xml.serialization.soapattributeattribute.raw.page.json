{"content":"    \r\n    <h1 id=\"System_Xml_Serialization_SoapAttributeAttribute\">\r\n      <span class=\"lang-csharp\">SoapAttributeAttribute</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Specifies that the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> must serialize the class member as an encoded SOAP attribute.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)]\npublic class SoapAttributeAttribute : Attribute</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">System.Attribute</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SoapAttributeAttribute</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(Assembly,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(Assembly,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(MemberInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(MemberInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(Module,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(Module,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(ParameterInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(ParameterInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_\" data-linktype=\"relative-path\">GetCustomAttributes(Module)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Module,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(Module,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Module,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefaultAttribute\" data-linktype=\"relative-path\">IsDefaultAttribute()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">IsDefined(Assembly,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(Assembly,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">IsDefined(MemberInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(MemberInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">IsDefined(Module,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(Module,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">IsDefined(ParameterInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(ParameterInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_Match_System_Object_\" data-linktype=\"relative-path\">Match(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetIDsOfNames_System_Guid__System_IntPtr_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetTypeInfo_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.GetTypeInfo(UInt32,UInt32,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetTypeInfoCount_System_UInt32__\" data-linktype=\"relative-path\">_Attribute.GetTypeInfoCount(UInt32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_Invoke_System_UInt32_System_Guid__System_UInt32_System_Int16_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId\" data-linktype=\"relative-path\">TypeId</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The SoapAttributeAttribute class belongs to a family of attributes that controls how the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> serializes, or deserializes, an object as encoded SOAP XML. The resulting XML conforms to section 5 of the World Wide Web Consortium (www.w3.org) document, &quot;Simple Object Access Protocol (SOAP) 1.1&quot;. For a complete list of similar attributes, see <a href=\"../Topic/Attributes%20That%20Control%20Encoded%20SOAP%20Serialization.md\" data-linktype=\"relative-path\">Attributes That Control Encoded SOAP Serialization</a>.  </p>\n<p> To serialize an object as an encoded SOAP message, you must construct the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> using an <a class=\"xref\" href=\"system.xml.serialization.xmltypemapping\" data-linktype=\"relative-path\">XmlTypeMapping</a> created with the <a class=\"xref\" href=\"system.xml.serialization.soapreflectionimporter#System_Xml_Serialization_SoapReflectionImporter_ImportTypeMapping_\" data-linktype=\"relative-path\">ImportTypeMapping</a> method of the <a class=\"xref\" href=\"system.xml.serialization.soapreflectionimporter\" data-linktype=\"relative-path\">SoapReflectionImporter</a> class.  </p>\n<p> Apply the SoapAttributeAttribute to a public field to specify that the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> serializes the field as an XML attribute. You can specify an alternative name of the attribute by setting the <a class=\"xref\" href=\"system.xml.serialization.soapattributeattribute#System_Xml_Serialization_SoapAttributeAttribute_AttributeName_\" data-linktype=\"relative-path\">AttributeName</a> property. Set the <a class=\"xref\" href=\"system.xml.serialization.soapattributeattribute#System_Xml_Serialization_SoapAttributeAttribute_DataType_\" data-linktype=\"relative-path\">DataType</a> if the attribute must be given a specific XML Schema definition language (XSD) data type. If the attribute belongs to a specific XML namespace, set the <a class=\"xref\" href=\"system.xml.serialization.soapattributeattribute#System_Xml_Serialization_SoapAttributeAttribute_Namespace_\" data-linktype=\"relative-path\">Namespace</a> property.  </p>\n<p> For more information about using attributes, see <a href=\"../Topic/Extending%20Metadata%20Using%20Attributes.md\" data-linktype=\"relative-path\">Attributes</a>  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You can use the word <code>SoapAttribute</code> in your code instead of the longer SoapAttributeAttribute.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_SoapAttributeAttribute__ctor\" data-linktype=\"self-bookmark\">SoapAttributeAttribute()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.soapattributeattribute\" data-linktype=\"relative-path\">SoapAttributeAttribute</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_SoapAttributeAttribute__ctor_System_String_\" data-linktype=\"self-bookmark\">SoapAttributeAttribute(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.soapattributeattribute\" data-linktype=\"relative-path\">SoapAttributeAttribute</a> class using the specified value as the name of the XML attribute.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_SoapAttributeAttribute_AttributeName\" data-linktype=\"self-bookmark\">AttributeName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the XML attribute generated by the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_SoapAttributeAttribute_DataType\" data-linktype=\"self-bookmark\">DataType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the XML Schema definition language (XSD) data type of the SOAP attribute generated by the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_SoapAttributeAttribute_Namespace\" data-linktype=\"self-bookmark\">Namespace</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the XML namespace of the XML attribute.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_SoapAttributeAttribute__ctor\">\r\n    \r\n            <a id=\"System_Xml_Serialization_SoapAttributeAttribute__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SoapAttributeAttribute()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.soapattributeattribute\" data-linktype=\"relative-path\">SoapAttributeAttribute</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SoapAttributeAttribute ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor to create a <a class=\"xref\" href=\"system.xml.serialization.soapattributeattribute\" data-linktype=\"relative-path\">SoapAttributeAttribute</a> when you override the serialization of a class member. Create the <a class=\"xref\" href=\"system.xml.serialization.soapattributeattribute\" data-linktype=\"relative-path\">SoapAttributeAttribute</a>, set its properties, and set the object to the <a class=\"xref\" href=\"system.xml.serialization.soapattributes#System_Xml_Serialization_SoapAttributes_SoapAttribute_\" data-linktype=\"relative-path\">SoapAttribute</a> property of a <a class=\"xref\" href=\"system.xml.serialization.soapattributes\" data-linktype=\"relative-path\">SoapAttributes</a> object. For more details, see the <a class=\"xref\" href=\"system.xml.serialization.soapattributeoverrides\" data-linktype=\"relative-path\">SoapAttributeOverrides</a> class overview.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a new <a class=\"xref\" href=\"system.xml.serialization.soapattributeattribute\" data-linktype=\"relative-path\">SoapAttributeAttribute</a> that is used to override the serialization of a field. After creating a <a class=\"xref\" href=\"system.xml.serialization.soapattributeattribute\" data-linktype=\"relative-path\">SoapAttributeAttribute</a> and setting its properties, the object is set to the <a class=\"xref\" href=\"system.xml.serialization.soapattributes#System_Xml_Serialization_SoapAttributes_SoapAttribute_\" data-linktype=\"relative-path\">SoapAttribute</a> property of a <a class=\"xref\" href=\"system.xml.serialization.soapattributes\" data-linktype=\"relative-path\">SoapAttributes</a>. The <a class=\"xref\" href=\"system.xml.serialization.soapattributes\" data-linktype=\"relative-path\">SoapAttributes</a> is then added to a <a class=\"xref\" href=\"system.xml.serialization.soapattributeoverrides\" data-linktype=\"relative-path\">SoapAttributeOverrides</a> that is used to create an <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"SoapAttributeAttributeEx2#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\npublic ref class Group\n{\npublic:\n\n   // This attribute will be overridden.\n\n   [SoapAttributeAttribute(Namespace=&quot;http://www.cpandl.com&quot;)]\n   String^ GroupName;\n};\n\npublic ref class Run\n{\npublic:\n   void SerializeOverride( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class\n      // that overrides the serialization.\n      XmlSerializer^ overRideSerializer = CreateOverrideSerializer();\n\n      // Writing the file requires a TextWriter.\n      TextWriter^ writer = gcnew StreamWriter( filename );\n\n      // Create an instance of the class that will be serialized.\n      Group^ myGroup = gcnew Group;\n\n      // Set the Object* properties.\n      myGroup-&gt;GroupName = &quot;.NET&quot;;\n\n      // Serialize the class, and close the TextWriter.\n      overRideSerializer-&gt;Serialize( writer, myGroup );\n      writer-&gt;Close();\n   }\n\nprivate:\n   XmlSerializer^ CreateOverrideSerializer()\n   {\n      SoapAttributeOverrides^ mySoapAttributeOverrides = gcnew SoapAttributeOverrides;\n      SoapAttributes^ mySoapAttributes = gcnew SoapAttributes;\n\n      // Create a new SoapAttributeAttribute to  the \n      // one applied to the Group class. The resulting XML \n      // stream will use the new namespace and attribute name.\n      SoapAttributeAttribute^ mySoapAttribute = gcnew SoapAttributeAttribute;\n      mySoapAttribute-&gt;AttributeName = &quot;TeamName&quot;;\n\n      // Change the Namespace.\n      mySoapAttribute-&gt;Namespace = &quot;http://www.cohowinery.com&quot;;\n      mySoapAttributes-&gt;SoapAttribute = mySoapAttribute;\n      mySoapAttributeOverrides-&gt;Add( Group::typeid, &quot;GroupName&quot;, mySoapAttributes );\n      XmlTypeMapping^ myMapping = (gcnew SoapReflectionImporter( mySoapAttributeOverrides ))-&gt;ImportTypeMapping( Group::typeid );\n      XmlSerializer^ ser = gcnew XmlSerializer( myMapping );\n      return ser;\n   }\n};\n\nint main()\n{\n   Run^ test = gcnew Run;\n   test-&gt;SerializeOverride( &quot;SoapOveride.xml&quot; );\n}\n\n//&lt;?xml version=S&quot;1.0&quot; encoding=S&quot;utf-8&quot; ?&gt; \n// &lt;Group xmlns:xsi=S&quot;http://www.w3.org/2001/XMLSchema-instance&quot; \n//xmlns:xsd=S&quot;http://www.w3.org/2001/XMLSchema&quot; n1:TeamName=S&quot;.NET&quot; \n//xmlns:n1=S&quot;http://www.cohowinery&quot; /&gt; \n</code></pre><pre><code class=\"lang-vb\" name=\"SoapAttributeAttributeEx2#1\">Imports System\nImports System.IO\nImports System.Xml\nImports System.Xml.Serialization\n\n\nPublic Class Group\n   &#39; This attribute will be overridden.\n   &lt;SoapAttribute (Namespace: = &quot;http://www.cpandl.com&quot;)&gt; _\n   Public GroupName As String \n   \nEnd Class\n\npublic class Run\n   Public Shared Sub Main()\n   \n      Dim test  As Run = new Run()\n      test.SerializeOverride(&quot;SoapOveride.xml&quot;)\n   End Sub\n   \n   Public Sub SerializeOverride(filename As String )\n      &#39; Create an instance of the XmlSerializer class\n      &#39; that overrides the serialization.\n      Dim overRideSerializer  As XmlSerializer = _\n      CreateOverrideSerializer()\n\n      &#39; Writing the file requires a TextWriter.\n      Dim writer As TextWriter = new StreamWriter(filename)\n\n      &#39; Create an instance of the class that will be serialized.\n      Dim myGroup As Group = new Group()\n\n      &#39; Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;\n\n      &#39; Serialize the class, and close the TextWriter.\n      overRideSerializer.Serialize(writer, myGroup)\n       writer.Close()\n   End Sub\n\n\n   Private Function CreateOverrideSerializer() As XmlSerializer \n   \t\n      Dim mySoapAttributeOverrides As SoapAttributeOverrides = _\n      New SoapAttributeOverrides()\n      Dim mySoapAttributes As SoapAttributes = New SoapAttributes()\n      &#39; Create a new SoapAttributeAttribute to override the \n      &#39; one applied to the Group class. The resulting XML \n      &#39; stream will use the new namespace and attribute name.\n      Dim mySoapAttribute As SoapAttributeAttribute = _\n      New SoapAttributeAttribute()\n      mySoapAttribute.AttributeName = &quot;TeamName&quot;\n      &#39; Change the Namespace.\n      mySoapAttribute.Namespace = &quot;http://www.cohowinery&quot;\n\n      mySoapAttributes.SoapAttribute = mySoapAttribute\n      mySoapAttributeOverrides. _\n      Add(GetType(Group), &quot;GroupName&quot; ,mySoapAttributes)\n\t\n      Dim myMapping  As XmlTypeMapping = (new SoapReflectionImporter _\n      (mySoapAttributeOverrides)).ImportTypeMapping(GetType(Group))\n\t\n      Dim ser As XmlSerializer = new XmlSerializer(myMapping)\n      CreateOverrideSerializer = ser\n   End Function\n\nEnd Class\n&#39;&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt; \n&#39;&lt;Group xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; \n&#39;xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; n1:TeamName=&quot;.NET&quot; \n&#39;xmlns:n1=&quot;http://www.cohowinery&quot; /&gt; \n</code></pre><pre><code class=\"lang-cs\" name=\"SoapAttributeAttributeEx2#1\">using System;\nusing System.IO;\nusing System.Xml;\nusing System.Xml.Serialization;\n\n\npublic class Group\n{\n   // This attribute will be overridden.\n   [SoapAttribute (Namespace = &quot;http://www.cpandl.com&quot;)]\n   public string GroupName;\n   \n}\n\npublic class Run\n{\n   public static void Main()\n   {\n      Run test = new Run();\n      test.SerializeOverride(&quot;SoapOveride.xml&quot;);\n     \n   }\n\n   public void SerializeOverride(string filename)\n   {\n      // Create an instance of the XmlSerializer class\n      // that overrides the serialization.\n      XmlSerializer overRideSerializer = CreateOverrideSerializer();\n\n      // Writing the file requires a TextWriter.\n      TextWriter writer = new StreamWriter(filename);\n\n      // Create an instance of the class that will be serialized.\n      Group myGroup = new Group();\n\n      // Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;;\n\n      // Serialize the class, and close the TextWriter.\n      overRideSerializer.Serialize(writer, myGroup);\n       writer.Close();\n\n   }\n\n\n   private XmlSerializer CreateOverrideSerializer(){\n   \t\n      SoapAttributeOverrides mySoapAttributeOverrides = \n\t\tnew SoapAttributeOverrides();\n      SoapAttributes mySoapAttributes = new SoapAttributes();\n      // Create a new SoapAttributeAttribute to override the \n      // one applied to the Group class. The resulting XML \n      // stream will use the new namespace and attribute name.\n      SoapAttributeAttribute mySoapAttribute = \n      new SoapAttributeAttribute();\n      mySoapAttribute.AttributeName = &quot;TeamName&quot;;\n      // Change the Namespace.\n      mySoapAttribute.Namespace = &quot;http://www.cohowinery.com&quot;;\n\n      mySoapAttributes.SoapAttribute = mySoapAttribute;\n      mySoapAttributeOverrides.\n      Add(typeof(Group), &quot;GroupName&quot; ,mySoapAttributes);\n\t\n      XmlTypeMapping myMapping = (new SoapReflectionImporter\n        (mySoapAttributeOverrides)).ImportTypeMapping(typeof(Group));\n\t\n      XmlSerializer ser = new XmlSerializer(myMapping);\n      return ser;\n   }\n\n}\n//&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt; \n// &lt;Group xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; \n//xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; n1:TeamName=&quot;.NET&quot; \n//xmlns:n1=&quot;http://www.cohowinery&quot; /&gt; \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_SoapAttributeAttribute__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_SoapAttributeAttribute__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SoapAttributeAttribute(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.soapattributeattribute\" data-linktype=\"relative-path\">SoapAttributeAttribute</a> class using the specified value as the name of the XML attribute.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SoapAttributeAttribute (string attributeName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>attributeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the XML attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes a class that contains several fields to which a <a class=\"xref\" href=\"system.xml.serialization.soapattributeattribute\" data-linktype=\"relative-path\">SoapAttributeAttribute</a> is applied.  </p>\n<pre><code class=\"lang-cs\" name=\"SoapAttribute#1\">using System;\nusing System.IO;\nusing System.Text;\nusing System.Xml;\nusing System.Xml.Serialization;\nusing System.Xml.Schema;\n\n[SoapInclude(typeof(Vehicle))]\npublic class Group\n{\n   [SoapAttribute (Namespace = &quot;http://www.cpandl.com&quot;)]\n   public string GroupName;\n   \n   [SoapAttribute(DataType = &quot;base64Binary&quot;)]\n   public Byte [] GroupNumber;\n\n   [SoapAttribute(DataType = &quot;date&quot;, AttributeName = &quot;CreationDate&quot;)]\n   public DateTime Today;\n   [SoapElement(DataType = &quot;nonNegativeInteger&quot;, ElementName = &quot;PosInt&quot;)]\n   public string PostitiveInt;\n\n   public Vehicle GroupVehicle;\n}\n  \npublic class Vehicle\n{\n   public string licenseNumber;\n}\n\npublic class Run\n{\n   public static void Main()\n   {\n      Run test = new Run();\n      test.SerializeObject(&quot;SoapAtts.xml&quot;);\n      test.DeserializeObject(&quot;SoapAtts.xml&quot;);\n   }\n   public void SerializeObject(string filename)\n   {\n      // Create an instance of the XmlSerializer class that\n      // can generate encoded SOAP messages.\n      XmlSerializer mySerializer =  ReturnSOAPSerializer();\n\n      Group myGroup=MakeGroup();\n      // Writing the file requires a TextWriter.\n      XmlTextWriter writer = \n      new XmlTextWriter(filename, Encoding.UTF8);\n      writer.Formatting = Formatting.Indented;\n      writer.WriteStartElement(&quot;wrapper&quot;);\n      // Serialize the class, and close the TextWriter.\n      mySerializer.Serialize(writer, myGroup);\n      writer.WriteEndElement();\n      writer.Close();\n   }\n\n   private Group MakeGroup(){\n      // Create an instance of the class that will be serialized.\n      Group myGroup = new Group();\n\n      // Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;;\n\n      Byte [] hexByte = new Byte[2]{Convert.ToByte(100),\n      Convert.ToByte(50)};\n      myGroup.GroupNumber = hexByte;\n\n      DateTime myDate = new DateTime(2002,5,2);\n      myGroup.Today = myDate;\n      myGroup.PostitiveInt= &quot;10000&quot;;\n      myGroup.GroupVehicle = new Vehicle();\n      myGroup.GroupVehicle.licenseNumber=&quot;1234&quot;;\n      return myGroup;\n   }   \t\n\n   public void DeserializeObject(string filename)\n   {\n      // Create an instance of the XmlSerializer class that\n      // can generate encoded SOAP messages.\n      XmlSerializer mySerializer =  ReturnSOAPSerializer();\n\n      // Reading the file requires an  XmlTextReader.\n      XmlTextReader reader= \n      new XmlTextReader(filename);\n      reader.ReadStartElement(&quot;wrapper&quot;);\n\n      // Deserialize and cast the object.\n      Group myGroup; \n      myGroup = (Group) mySerializer.Deserialize(reader);\n      reader.ReadEndElement();\n      reader.Close();\n\n   }\n   \n   private XmlSerializer ReturnSOAPSerializer(){\n      // Create an instance of the XmlSerializer class.\n      XmlTypeMapping myMapping = \n      (new SoapReflectionImporter().ImportTypeMapping\n      (typeof(Group)));\n       return new XmlSerializer(myMapping);\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"SoapAttribute#1\">Imports System\nImports System.IO\nImports System.Text\nImports System.Xml\nImports System.Xml.Serialization\nImports System.Xml.Schema\n\n&lt;SoapInclude(GetType(Vehicle))&gt; _\nPublic Class Group\n\n   &lt;SoapAttribute (Namespace:= &quot;http:&#39;www.cpandl.com&quot;)&gt; _\n   Public GroupName As String    \n   &lt;SoapAttribute(DataType:= &quot;base64Binary&quot;)&gt; _\n   Public GroupNumber() As  Byte \n\n   &lt;SoapAttribute(DataType:= &quot;date&quot;, AttributeName:= &quot;CreationDate&quot;)&gt; _\n   Public Today As DateTime \n   &lt;SoapElement(DataType:= &quot;nonNegativeInteger&quot;, _\n   ElementName:= &quot;PosInt&quot;)&gt; _\n   Public PostitiveInt As String \n\n   Public GroupVehicle As Vehicle \nEnd Class\n  \nPublic Class Vehicle\n   Public licenseNumber As String \nEnd Class\n\nPublic Class Run\n\n   Shared Sub Main()\n   \n      Dim test As Run = New Run()\n      test.SerializeObject(&quot;SoapAtts.xml&quot;)\n      test.DeserializeObject(&quot;SoapAtts.xml&quot;)\n   End Sub\n   \n   Public Sub SerializeObject(filename As String)\n   \n      &#39; Create an instance of the XmlSerializer Class that\n      &#39; can generate encoded SOAP messages.\n      Dim mySerializer As XmlSerializer  =  ReturnSOAPSerializer()\n\n      Dim myGroup As Group = MakeGroup()\n      &#39; Writing the file requires a TextWriter.\n      Dim writer As XmlTextWriter = _\n      New XmlTextWriter(filename, Encoding.UTF8)\n      writer.Formatting = Formatting.Indented\n      writer.WriteStartElement(&quot;wrapper&quot;)\n      &#39; Serialize the Class, and close the TextWriter.\n      mySerializer.Serialize(writer, myGroup)\n      writer.WriteEndElement()\n      writer.Close()\n   End Sub\n\n   Private Function MakeGroup() As Group \n      &#39; Create an instance of the Class that will be serialized.\n      Dim myGroup As Group = New Group()\n\n      &#39; Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;\n\n      Dim hexByte() As Byte= New Byte(1){Convert.ToByte(100), _\n      Convert.ToByte(50)}\n      myGroup.GroupNumber = hexByte\n\n      Dim myDate As DateTime = New DateTime(2002,5,2)\n      myGroup.Today = myDate\n      myGroup.PostitiveInt= &quot;10000&quot;\n      myGroup.GroupVehicle = New Vehicle()\n      myGroup.GroupVehicle.licenseNumber=&quot;1234&quot;\n      return myGroup\n   End Function   \t\n\n   Public Sub DeserializeObject(filename As String)\n      &#39; Create an instance of the XmlSerializer Class that\n      &#39; can generate encoded SOAP messages.\n      Dim mySerializer As XmlSerializer =  ReturnSOAPSerializer()\n\n      &#39; Reading the file requires an  XmlTextReader.\n      Dim reader As XmlTextReader = _\n      New XmlTextReader(filename)\n      reader.ReadStartElement(&quot;wrapper&quot;)\n\n      &#39; Deserialize and cast the object.\n      Dim myGroup As Group \n      myGroup = _\n      CType(mySerializer.Deserialize(reader), Group)\n      reader.ReadEndElement()\n      reader.Close()\n\n   End Sub\n   \n   private Function ReturnSOAPSerializer() As XmlSerializer \n      &#39; Create an instance of the XmlSerializer Class.\n      Dim myMapping As XmlTypeMapping = _\n      (New SoapReflectionImporter().ImportTypeMapping _\n      (GetType(Group)))\n       return New XmlSerializer(myMapping)\n   End Function\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"SoapAttribute#1\">#using &lt;System.dll&gt;\n#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Text;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\nusing namespace System::Xml::Schema;\n\n//using namespace System::Runtime::Remoting::Metadata;\npublic ref class Vehicle\n{\npublic:\n   String^ licenseNumber;\n};\n\n\n[SoapInclude(Vehicle::typeid)]\npublic ref class Group\n{\npublic:\n\n   [SoapAttributeAttribute(Namespace=&quot;http://www.cpandl.com&quot;)]\n   String^ GroupName;\n\n   [SoapAttributeAttribute(DataType=&quot;base64Binary&quot;)]\n   array&lt;Byte&gt;^GroupNumber;\n\n   [SoapAttributeAttribute(DataType=&quot;date&quot;,AttributeName=&quot;CreationDate&quot;)]\n   DateTime Today;\n\n   [SoapElement(DataType=&quot;nonNegativeInteger&quot;,ElementName=&quot;PosInt&quot;)]\n   String^ PostitiveInt;\n   Vehicle^ GroupVehicle;\n};\n\npublic ref class Run\n{\npublic:\n   void SerializeObject( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class that\n      // can generate encoded SOAP messages.\n      XmlSerializer^ mySerializer = ReturnSOAPSerializer();\n      Group^ myGroup = MakeGroup();\n\n      // Writing the file requires a TextWriter.\n      XmlTextWriter^ writer = gcnew XmlTextWriter( filename,Encoding::UTF8 );\n      writer-&gt;Formatting = Formatting::Indented;\n      writer-&gt;WriteStartElement( &quot;wrapper&quot; );\n\n      // Serialize the class, and close the TextWriter.\n      mySerializer-&gt;Serialize( writer, myGroup );\n      writer-&gt;WriteEndElement();\n      writer-&gt;Close();\n   }\n\n\nprivate:\n   Group^ MakeGroup()\n   {\n      // Create an instance of the class that will be serialized.\n      Group^ myGroup = gcnew Group;\n\n      // Set the Object* properties.\n      myGroup-&gt;GroupName = &quot;.NET&quot;;\n      array&lt;Byte&gt;^hexByte = {Convert::ToByte( 100 ),Convert::ToByte( 50 )};\n      myGroup-&gt;GroupNumber = hexByte;\n      DateTime myDate = DateTime(2002,5,2);\n      myGroup-&gt;Today = myDate;\n      myGroup-&gt;PostitiveInt = &quot;10000&quot;;\n      myGroup-&gt;GroupVehicle = gcnew Vehicle;\n      myGroup-&gt;GroupVehicle-&gt;licenseNumber = &quot;1234&quot;;\n      return myGroup;\n   }\n\npublic:\n   void DeserializeObject( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class that\n      // can generate encoded SOAP messages.\n      XmlSerializer^ mySerializer = ReturnSOAPSerializer();\n\n      // Reading the file requires an  XmlTextReader.\n      XmlTextReader^ reader = gcnew XmlTextReader( filename );\n      reader-&gt;ReadStartElement( &quot;wrapper&quot; );\n\n      // Deserialize and cast the Object*.\n      Group^ myGroup;\n      myGroup = safe_cast&lt;Group^&gt;(mySerializer-&gt;Deserialize( reader ));\n      reader-&gt;ReadEndElement();\n      reader-&gt;Close();\n   }\n\nprivate:\n   XmlSerializer^ ReturnSOAPSerializer()\n   {\n      \n      // Create an instance of the XmlSerializer class.\n      XmlTypeMapping^ myMapping = (gcnew SoapReflectionImporter)-&gt;ImportTypeMapping( Group::typeid );\n      return gcnew XmlSerializer( myMapping );\n   }\n};\n\nint main()\n{\n   Run^ test = gcnew Run;\n   test-&gt;SerializeObject( &quot;SoapAtts.xml&quot; );\n   test-&gt;DeserializeObject( &quot;SoapAtts.xml&quot; );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_SoapAttributeAttribute_AttributeName\">\r\n    \r\n            <a id=\"System_Xml_Serialization_SoapAttributeAttribute_AttributeName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AttributeName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the XML attribute generated by the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string AttributeName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the XML attribute. The default is the member identifier.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the AttributeName property to specify an XML attribute name when the default value cannot be used. For example, if the XML attribute name is invalid as a member identifier, use a valid name for the identifier while setting the AttributeName to an invalid name.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes a class that contains several fields to which the <a class=\"xref\" href=\"system.xml.serialization.soapattributeattribute\" data-linktype=\"relative-path\">SoapAttributeAttribute</a> is applied. The AttributeName property is set for the <code>Today</code> field.  </p>\n<pre><code class=\"lang-cs\" name=\"SoapAttribute#1\">using System;\nusing System.IO;\nusing System.Text;\nusing System.Xml;\nusing System.Xml.Serialization;\nusing System.Xml.Schema;\n\n[SoapInclude(typeof(Vehicle))]\npublic class Group\n{\n   [SoapAttribute (Namespace = &quot;http://www.cpandl.com&quot;)]\n   public string GroupName;\n   \n   [SoapAttribute(DataType = &quot;base64Binary&quot;)]\n   public Byte [] GroupNumber;\n\n   [SoapAttribute(DataType = &quot;date&quot;, AttributeName = &quot;CreationDate&quot;)]\n   public DateTime Today;\n   [SoapElement(DataType = &quot;nonNegativeInteger&quot;, ElementName = &quot;PosInt&quot;)]\n   public string PostitiveInt;\n\n   public Vehicle GroupVehicle;\n}\n  \npublic class Vehicle\n{\n   public string licenseNumber;\n}\n\npublic class Run\n{\n   public static void Main()\n   {\n      Run test = new Run();\n      test.SerializeObject(&quot;SoapAtts.xml&quot;);\n      test.DeserializeObject(&quot;SoapAtts.xml&quot;);\n   }\n   public void SerializeObject(string filename)\n   {\n      // Create an instance of the XmlSerializer class that\n      // can generate encoded SOAP messages.\n      XmlSerializer mySerializer =  ReturnSOAPSerializer();\n\n      Group myGroup=MakeGroup();\n      // Writing the file requires a TextWriter.\n      XmlTextWriter writer = \n      new XmlTextWriter(filename, Encoding.UTF8);\n      writer.Formatting = Formatting.Indented;\n      writer.WriteStartElement(&quot;wrapper&quot;);\n      // Serialize the class, and close the TextWriter.\n      mySerializer.Serialize(writer, myGroup);\n      writer.WriteEndElement();\n      writer.Close();\n   }\n\n   private Group MakeGroup(){\n      // Create an instance of the class that will be serialized.\n      Group myGroup = new Group();\n\n      // Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;;\n\n      Byte [] hexByte = new Byte[2]{Convert.ToByte(100),\n      Convert.ToByte(50)};\n      myGroup.GroupNumber = hexByte;\n\n      DateTime myDate = new DateTime(2002,5,2);\n      myGroup.Today = myDate;\n      myGroup.PostitiveInt= &quot;10000&quot;;\n      myGroup.GroupVehicle = new Vehicle();\n      myGroup.GroupVehicle.licenseNumber=&quot;1234&quot;;\n      return myGroup;\n   }   \t\n\n   public void DeserializeObject(string filename)\n   {\n      // Create an instance of the XmlSerializer class that\n      // can generate encoded SOAP messages.\n      XmlSerializer mySerializer =  ReturnSOAPSerializer();\n\n      // Reading the file requires an  XmlTextReader.\n      XmlTextReader reader= \n      new XmlTextReader(filename);\n      reader.ReadStartElement(&quot;wrapper&quot;);\n\n      // Deserialize and cast the object.\n      Group myGroup; \n      myGroup = (Group) mySerializer.Deserialize(reader);\n      reader.ReadEndElement();\n      reader.Close();\n\n   }\n   \n   private XmlSerializer ReturnSOAPSerializer(){\n      // Create an instance of the XmlSerializer class.\n      XmlTypeMapping myMapping = \n      (new SoapReflectionImporter().ImportTypeMapping\n      (typeof(Group)));\n       return new XmlSerializer(myMapping);\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"SoapAttribute#1\">Imports System\nImports System.IO\nImports System.Text\nImports System.Xml\nImports System.Xml.Serialization\nImports System.Xml.Schema\n\n&lt;SoapInclude(GetType(Vehicle))&gt; _\nPublic Class Group\n\n   &lt;SoapAttribute (Namespace:= &quot;http:&#39;www.cpandl.com&quot;)&gt; _\n   Public GroupName As String    \n   &lt;SoapAttribute(DataType:= &quot;base64Binary&quot;)&gt; _\n   Public GroupNumber() As  Byte \n\n   &lt;SoapAttribute(DataType:= &quot;date&quot;, AttributeName:= &quot;CreationDate&quot;)&gt; _\n   Public Today As DateTime \n   &lt;SoapElement(DataType:= &quot;nonNegativeInteger&quot;, _\n   ElementName:= &quot;PosInt&quot;)&gt; _\n   Public PostitiveInt As String \n\n   Public GroupVehicle As Vehicle \nEnd Class\n  \nPublic Class Vehicle\n   Public licenseNumber As String \nEnd Class\n\nPublic Class Run\n\n   Shared Sub Main()\n   \n      Dim test As Run = New Run()\n      test.SerializeObject(&quot;SoapAtts.xml&quot;)\n      test.DeserializeObject(&quot;SoapAtts.xml&quot;)\n   End Sub\n   \n   Public Sub SerializeObject(filename As String)\n   \n      &#39; Create an instance of the XmlSerializer Class that\n      &#39; can generate encoded SOAP messages.\n      Dim mySerializer As XmlSerializer  =  ReturnSOAPSerializer()\n\n      Dim myGroup As Group = MakeGroup()\n      &#39; Writing the file requires a TextWriter.\n      Dim writer As XmlTextWriter = _\n      New XmlTextWriter(filename, Encoding.UTF8)\n      writer.Formatting = Formatting.Indented\n      writer.WriteStartElement(&quot;wrapper&quot;)\n      &#39; Serialize the Class, and close the TextWriter.\n      mySerializer.Serialize(writer, myGroup)\n      writer.WriteEndElement()\n      writer.Close()\n   End Sub\n\n   Private Function MakeGroup() As Group \n      &#39; Create an instance of the Class that will be serialized.\n      Dim myGroup As Group = New Group()\n\n      &#39; Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;\n\n      Dim hexByte() As Byte= New Byte(1){Convert.ToByte(100), _\n      Convert.ToByte(50)}\n      myGroup.GroupNumber = hexByte\n\n      Dim myDate As DateTime = New DateTime(2002,5,2)\n      myGroup.Today = myDate\n      myGroup.PostitiveInt= &quot;10000&quot;\n      myGroup.GroupVehicle = New Vehicle()\n      myGroup.GroupVehicle.licenseNumber=&quot;1234&quot;\n      return myGroup\n   End Function   \t\n\n   Public Sub DeserializeObject(filename As String)\n      &#39; Create an instance of the XmlSerializer Class that\n      &#39; can generate encoded SOAP messages.\n      Dim mySerializer As XmlSerializer =  ReturnSOAPSerializer()\n\n      &#39; Reading the file requires an  XmlTextReader.\n      Dim reader As XmlTextReader = _\n      New XmlTextReader(filename)\n      reader.ReadStartElement(&quot;wrapper&quot;)\n\n      &#39; Deserialize and cast the object.\n      Dim myGroup As Group \n      myGroup = _\n      CType(mySerializer.Deserialize(reader), Group)\n      reader.ReadEndElement()\n      reader.Close()\n\n   End Sub\n   \n   private Function ReturnSOAPSerializer() As XmlSerializer \n      &#39; Create an instance of the XmlSerializer Class.\n      Dim myMapping As XmlTypeMapping = _\n      (New SoapReflectionImporter().ImportTypeMapping _\n      (GetType(Group)))\n       return New XmlSerializer(myMapping)\n   End Function\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"SoapAttribute#1\">#using &lt;System.dll&gt;\n#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Text;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\nusing namespace System::Xml::Schema;\n\n//using namespace System::Runtime::Remoting::Metadata;\npublic ref class Vehicle\n{\npublic:\n   String^ licenseNumber;\n};\n\n\n[SoapInclude(Vehicle::typeid)]\npublic ref class Group\n{\npublic:\n\n   [SoapAttributeAttribute(Namespace=&quot;http://www.cpandl.com&quot;)]\n   String^ GroupName;\n\n   [SoapAttributeAttribute(DataType=&quot;base64Binary&quot;)]\n   array&lt;Byte&gt;^GroupNumber;\n\n   [SoapAttributeAttribute(DataType=&quot;date&quot;,AttributeName=&quot;CreationDate&quot;)]\n   DateTime Today;\n\n   [SoapElement(DataType=&quot;nonNegativeInteger&quot;,ElementName=&quot;PosInt&quot;)]\n   String^ PostitiveInt;\n   Vehicle^ GroupVehicle;\n};\n\npublic ref class Run\n{\npublic:\n   void SerializeObject( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class that\n      // can generate encoded SOAP messages.\n      XmlSerializer^ mySerializer = ReturnSOAPSerializer();\n      Group^ myGroup = MakeGroup();\n\n      // Writing the file requires a TextWriter.\n      XmlTextWriter^ writer = gcnew XmlTextWriter( filename,Encoding::UTF8 );\n      writer-&gt;Formatting = Formatting::Indented;\n      writer-&gt;WriteStartElement( &quot;wrapper&quot; );\n\n      // Serialize the class, and close the TextWriter.\n      mySerializer-&gt;Serialize( writer, myGroup );\n      writer-&gt;WriteEndElement();\n      writer-&gt;Close();\n   }\n\n\nprivate:\n   Group^ MakeGroup()\n   {\n      // Create an instance of the class that will be serialized.\n      Group^ myGroup = gcnew Group;\n\n      // Set the Object* properties.\n      myGroup-&gt;GroupName = &quot;.NET&quot;;\n      array&lt;Byte&gt;^hexByte = {Convert::ToByte( 100 ),Convert::ToByte( 50 )};\n      myGroup-&gt;GroupNumber = hexByte;\n      DateTime myDate = DateTime(2002,5,2);\n      myGroup-&gt;Today = myDate;\n      myGroup-&gt;PostitiveInt = &quot;10000&quot;;\n      myGroup-&gt;GroupVehicle = gcnew Vehicle;\n      myGroup-&gt;GroupVehicle-&gt;licenseNumber = &quot;1234&quot;;\n      return myGroup;\n   }\n\npublic:\n   void DeserializeObject( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class that\n      // can generate encoded SOAP messages.\n      XmlSerializer^ mySerializer = ReturnSOAPSerializer();\n\n      // Reading the file requires an  XmlTextReader.\n      XmlTextReader^ reader = gcnew XmlTextReader( filename );\n      reader-&gt;ReadStartElement( &quot;wrapper&quot; );\n\n      // Deserialize and cast the Object*.\n      Group^ myGroup;\n      myGroup = safe_cast&lt;Group^&gt;(mySerializer-&gt;Deserialize( reader ));\n      reader-&gt;ReadEndElement();\n      reader-&gt;Close();\n   }\n\nprivate:\n   XmlSerializer^ ReturnSOAPSerializer()\n   {\n      \n      // Create an instance of the XmlSerializer class.\n      XmlTypeMapping^ myMapping = (gcnew SoapReflectionImporter)-&gt;ImportTypeMapping( Group::typeid );\n      return gcnew XmlSerializer( myMapping );\n   }\n};\n\nint main()\n{\n   Run^ test = gcnew Run;\n   test-&gt;SerializeObject( &quot;SoapAtts.xml&quot; );\n   test-&gt;DeserializeObject( &quot;SoapAtts.xml&quot; );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_SoapAttributeAttribute_DataType\">\r\n    \r\n            <a id=\"System_Xml_Serialization_SoapAttributeAttribute_DataType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataType</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the XML Schema definition language (XSD) data type of the SOAP attribute generated by the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string DataType { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>An XML Schema data type, as defined by the World Wide Web Consortium (www.w3.org) document named &quot;XML Schema Part 2: Datatypes&quot;.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>The XML Schema data type you have specified cannot be mapped to the .NET data type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following table lists the XML Schema simple data types with their.NET equivalents.  </p>\n<p> For the XML Schema <code>base64Binary</code> and <code>hexBinary</code> data types, use an array of <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> structures, and apply a <a class=\"xref\" href=\"system.xml.serialization.soapattributeattribute\" data-linktype=\"relative-path\">SoapAttributeAttribute</a> with the DataType set to &quot;base64Binary&quot; or &quot;hexBinary&quot;, as appropriate. For the XML Schema <code>time</code> and <code>date</code> data types, use the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> type and apply the <a class=\"xref\" href=\"system.xml.serialization.soapattributeattribute\" data-linktype=\"relative-path\">SoapAttributeAttribute</a> with the DataType set to &quot;date&quot; or &quot;time&quot;.  </p>\n<p> For every XML Schema data type that is mapped to a string, apply the <a class=\"xref\" href=\"system.xml.serialization.soapattributeattribute\" data-linktype=\"relative-path\">SoapAttributeAttribute</a> with its DataType property set to the XML Schema data type. Note that this does not change the serialization format, only the schema for the member.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> Passing binary data as an XML element is more efficient then passing it as an XML attribute.  </p>\n</div>\n<p> For more information about XML Schema data types, see the World Wide Consortium (www.w3.org) document named &quot;XML Schema Part 2: Datatypes&quot;.  </p>\n<table>\n<thead>\n<tr>\n<th>XSD data type</th>\n<th>.NET data type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>anyURI</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>base64Binary</td>\n<td>Array of <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> objects</td>\n</tr>\n<tr>\n<td>boolean</td>\n<td><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></td>\n</tr>\n<tr>\n<td>byte</td>\n<td><a class=\"xref\" href=\"system.sbyte\" data-linktype=\"relative-path\">SByte</a></td>\n</tr>\n<tr>\n<td>date</td>\n<td><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></td>\n</tr>\n<tr>\n<td>dateTime</td>\n<td><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></td>\n</tr>\n<tr>\n<td>decimal</td>\n<td><a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a></td>\n</tr>\n<tr>\n<td>double</td>\n<td><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></td>\n</tr>\n<tr>\n<td>ENTITY</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>ENTITIES</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>float</td>\n<td><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></td>\n</tr>\n<tr>\n<td>gDay</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>gMonth</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>gMonthDay</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>gYear</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>gYearMonth</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>hexBinary</td>\n<td>Array of <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> objects</td>\n</tr>\n<tr>\n<td>ID</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>IDREF</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>IDREFS</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>int</td>\n<td><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></td>\n</tr>\n<tr>\n<td>integer</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>language</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>long</td>\n<td><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></td>\n</tr>\n<tr>\n<td>Name</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>NCName</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>negativeInteger</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>NMTOKEN</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>NMTOKENS</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>normalizedString</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>nonNegativeInteger</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>nonPositiveInteger</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>NOTATION</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>positiveInteger</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>QName</td>\n<td><a class=\"xref\" href=\"system.xml.xmlqualifiedname\" data-linktype=\"relative-path\">XmlQualifiedName</a></td>\n</tr>\n<tr>\n<td>duration</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>string</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>short</td>\n<td><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></td>\n</tr>\n<tr>\n<td>time</td>\n<td><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></td>\n</tr>\n<tr>\n<td>token</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>unsignedByte</td>\n<td><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></td>\n</tr>\n<tr>\n<td>unsignedInt</td>\n<td><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></td>\n</tr>\n<tr>\n<td>unsignedLong</td>\n<td><a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a></td>\n</tr>\n<tr>\n<td>unsignedShort</td>\n<td><a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">UInt16</a></td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes a class that contains several fields to which a <a class=\"xref\" href=\"system.xml.serialization.soapattributeattribute\" data-linktype=\"relative-path\">SoapAttributeAttribute</a> is applied. The DataType property is set for the <code>GroupNumber</code> and the <code>Today</code> fields.  </p>\n<pre><code class=\"lang-cs\" name=\"SoapAttribute#1\">using System;\nusing System.IO;\nusing System.Text;\nusing System.Xml;\nusing System.Xml.Serialization;\nusing System.Xml.Schema;\n\n[SoapInclude(typeof(Vehicle))]\npublic class Group\n{\n   [SoapAttribute (Namespace = &quot;http://www.cpandl.com&quot;)]\n   public string GroupName;\n   \n   [SoapAttribute(DataType = &quot;base64Binary&quot;)]\n   public Byte [] GroupNumber;\n\n   [SoapAttribute(DataType = &quot;date&quot;, AttributeName = &quot;CreationDate&quot;)]\n   public DateTime Today;\n   [SoapElement(DataType = &quot;nonNegativeInteger&quot;, ElementName = &quot;PosInt&quot;)]\n   public string PostitiveInt;\n\n   public Vehicle GroupVehicle;\n}\n  \npublic class Vehicle\n{\n   public string licenseNumber;\n}\n\npublic class Run\n{\n   public static void Main()\n   {\n      Run test = new Run();\n      test.SerializeObject(&quot;SoapAtts.xml&quot;);\n      test.DeserializeObject(&quot;SoapAtts.xml&quot;);\n   }\n   public void SerializeObject(string filename)\n   {\n      // Create an instance of the XmlSerializer class that\n      // can generate encoded SOAP messages.\n      XmlSerializer mySerializer =  ReturnSOAPSerializer();\n\n      Group myGroup=MakeGroup();\n      // Writing the file requires a TextWriter.\n      XmlTextWriter writer = \n      new XmlTextWriter(filename, Encoding.UTF8);\n      writer.Formatting = Formatting.Indented;\n      writer.WriteStartElement(&quot;wrapper&quot;);\n      // Serialize the class, and close the TextWriter.\n      mySerializer.Serialize(writer, myGroup);\n      writer.WriteEndElement();\n      writer.Close();\n   }\n\n   private Group MakeGroup(){\n      // Create an instance of the class that will be serialized.\n      Group myGroup = new Group();\n\n      // Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;;\n\n      Byte [] hexByte = new Byte[2]{Convert.ToByte(100),\n      Convert.ToByte(50)};\n      myGroup.GroupNumber = hexByte;\n\n      DateTime myDate = new DateTime(2002,5,2);\n      myGroup.Today = myDate;\n      myGroup.PostitiveInt= &quot;10000&quot;;\n      myGroup.GroupVehicle = new Vehicle();\n      myGroup.GroupVehicle.licenseNumber=&quot;1234&quot;;\n      return myGroup;\n   }   \t\n\n   public void DeserializeObject(string filename)\n   {\n      // Create an instance of the XmlSerializer class that\n      // can generate encoded SOAP messages.\n      XmlSerializer mySerializer =  ReturnSOAPSerializer();\n\n      // Reading the file requires an  XmlTextReader.\n      XmlTextReader reader= \n      new XmlTextReader(filename);\n      reader.ReadStartElement(&quot;wrapper&quot;);\n\n      // Deserialize and cast the object.\n      Group myGroup; \n      myGroup = (Group) mySerializer.Deserialize(reader);\n      reader.ReadEndElement();\n      reader.Close();\n\n   }\n   \n   private XmlSerializer ReturnSOAPSerializer(){\n      // Create an instance of the XmlSerializer class.\n      XmlTypeMapping myMapping = \n      (new SoapReflectionImporter().ImportTypeMapping\n      (typeof(Group)));\n       return new XmlSerializer(myMapping);\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"SoapAttribute#1\">Imports System\nImports System.IO\nImports System.Text\nImports System.Xml\nImports System.Xml.Serialization\nImports System.Xml.Schema\n\n&lt;SoapInclude(GetType(Vehicle))&gt; _\nPublic Class Group\n\n   &lt;SoapAttribute (Namespace:= &quot;http:&#39;www.cpandl.com&quot;)&gt; _\n   Public GroupName As String    \n   &lt;SoapAttribute(DataType:= &quot;base64Binary&quot;)&gt; _\n   Public GroupNumber() As  Byte \n\n   &lt;SoapAttribute(DataType:= &quot;date&quot;, AttributeName:= &quot;CreationDate&quot;)&gt; _\n   Public Today As DateTime \n   &lt;SoapElement(DataType:= &quot;nonNegativeInteger&quot;, _\n   ElementName:= &quot;PosInt&quot;)&gt; _\n   Public PostitiveInt As String \n\n   Public GroupVehicle As Vehicle \nEnd Class\n  \nPublic Class Vehicle\n   Public licenseNumber As String \nEnd Class\n\nPublic Class Run\n\n   Shared Sub Main()\n   \n      Dim test As Run = New Run()\n      test.SerializeObject(&quot;SoapAtts.xml&quot;)\n      test.DeserializeObject(&quot;SoapAtts.xml&quot;)\n   End Sub\n   \n   Public Sub SerializeObject(filename As String)\n   \n      &#39; Create an instance of the XmlSerializer Class that\n      &#39; can generate encoded SOAP messages.\n      Dim mySerializer As XmlSerializer  =  ReturnSOAPSerializer()\n\n      Dim myGroup As Group = MakeGroup()\n      &#39; Writing the file requires a TextWriter.\n      Dim writer As XmlTextWriter = _\n      New XmlTextWriter(filename, Encoding.UTF8)\n      writer.Formatting = Formatting.Indented\n      writer.WriteStartElement(&quot;wrapper&quot;)\n      &#39; Serialize the Class, and close the TextWriter.\n      mySerializer.Serialize(writer, myGroup)\n      writer.WriteEndElement()\n      writer.Close()\n   End Sub\n\n   Private Function MakeGroup() As Group \n      &#39; Create an instance of the Class that will be serialized.\n      Dim myGroup As Group = New Group()\n\n      &#39; Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;\n\n      Dim hexByte() As Byte= New Byte(1){Convert.ToByte(100), _\n      Convert.ToByte(50)}\n      myGroup.GroupNumber = hexByte\n\n      Dim myDate As DateTime = New DateTime(2002,5,2)\n      myGroup.Today = myDate\n      myGroup.PostitiveInt= &quot;10000&quot;\n      myGroup.GroupVehicle = New Vehicle()\n      myGroup.GroupVehicle.licenseNumber=&quot;1234&quot;\n      return myGroup\n   End Function   \t\n\n   Public Sub DeserializeObject(filename As String)\n      &#39; Create an instance of the XmlSerializer Class that\n      &#39; can generate encoded SOAP messages.\n      Dim mySerializer As XmlSerializer =  ReturnSOAPSerializer()\n\n      &#39; Reading the file requires an  XmlTextReader.\n      Dim reader As XmlTextReader = _\n      New XmlTextReader(filename)\n      reader.ReadStartElement(&quot;wrapper&quot;)\n\n      &#39; Deserialize and cast the object.\n      Dim myGroup As Group \n      myGroup = _\n      CType(mySerializer.Deserialize(reader), Group)\n      reader.ReadEndElement()\n      reader.Close()\n\n   End Sub\n   \n   private Function ReturnSOAPSerializer() As XmlSerializer \n      &#39; Create an instance of the XmlSerializer Class.\n      Dim myMapping As XmlTypeMapping = _\n      (New SoapReflectionImporter().ImportTypeMapping _\n      (GetType(Group)))\n       return New XmlSerializer(myMapping)\n   End Function\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"SoapAttribute#1\">#using &lt;System.dll&gt;\n#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Text;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\nusing namespace System::Xml::Schema;\n\n//using namespace System::Runtime::Remoting::Metadata;\npublic ref class Vehicle\n{\npublic:\n   String^ licenseNumber;\n};\n\n\n[SoapInclude(Vehicle::typeid)]\npublic ref class Group\n{\npublic:\n\n   [SoapAttributeAttribute(Namespace=&quot;http://www.cpandl.com&quot;)]\n   String^ GroupName;\n\n   [SoapAttributeAttribute(DataType=&quot;base64Binary&quot;)]\n   array&lt;Byte&gt;^GroupNumber;\n\n   [SoapAttributeAttribute(DataType=&quot;date&quot;,AttributeName=&quot;CreationDate&quot;)]\n   DateTime Today;\n\n   [SoapElement(DataType=&quot;nonNegativeInteger&quot;,ElementName=&quot;PosInt&quot;)]\n   String^ PostitiveInt;\n   Vehicle^ GroupVehicle;\n};\n\npublic ref class Run\n{\npublic:\n   void SerializeObject( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class that\n      // can generate encoded SOAP messages.\n      XmlSerializer^ mySerializer = ReturnSOAPSerializer();\n      Group^ myGroup = MakeGroup();\n\n      // Writing the file requires a TextWriter.\n      XmlTextWriter^ writer = gcnew XmlTextWriter( filename,Encoding::UTF8 );\n      writer-&gt;Formatting = Formatting::Indented;\n      writer-&gt;WriteStartElement( &quot;wrapper&quot; );\n\n      // Serialize the class, and close the TextWriter.\n      mySerializer-&gt;Serialize( writer, myGroup );\n      writer-&gt;WriteEndElement();\n      writer-&gt;Close();\n   }\n\n\nprivate:\n   Group^ MakeGroup()\n   {\n      // Create an instance of the class that will be serialized.\n      Group^ myGroup = gcnew Group;\n\n      // Set the Object* properties.\n      myGroup-&gt;GroupName = &quot;.NET&quot;;\n      array&lt;Byte&gt;^hexByte = {Convert::ToByte( 100 ),Convert::ToByte( 50 )};\n      myGroup-&gt;GroupNumber = hexByte;\n      DateTime myDate = DateTime(2002,5,2);\n      myGroup-&gt;Today = myDate;\n      myGroup-&gt;PostitiveInt = &quot;10000&quot;;\n      myGroup-&gt;GroupVehicle = gcnew Vehicle;\n      myGroup-&gt;GroupVehicle-&gt;licenseNumber = &quot;1234&quot;;\n      return myGroup;\n   }\n\npublic:\n   void DeserializeObject( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class that\n      // can generate encoded SOAP messages.\n      XmlSerializer^ mySerializer = ReturnSOAPSerializer();\n\n      // Reading the file requires an  XmlTextReader.\n      XmlTextReader^ reader = gcnew XmlTextReader( filename );\n      reader-&gt;ReadStartElement( &quot;wrapper&quot; );\n\n      // Deserialize and cast the Object*.\n      Group^ myGroup;\n      myGroup = safe_cast&lt;Group^&gt;(mySerializer-&gt;Deserialize( reader ));\n      reader-&gt;ReadEndElement();\n      reader-&gt;Close();\n   }\n\nprivate:\n   XmlSerializer^ ReturnSOAPSerializer()\n   {\n      \n      // Create an instance of the XmlSerializer class.\n      XmlTypeMapping^ myMapping = (gcnew SoapReflectionImporter)-&gt;ImportTypeMapping( Group::typeid );\n      return gcnew XmlSerializer( myMapping );\n   }\n};\n\nint main()\n{\n   Run^ test = gcnew Run;\n   test-&gt;SerializeObject( &quot;SoapAtts.xml&quot; );\n   test-&gt;DeserializeObject( &quot;SoapAtts.xml&quot; );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_SoapAttributeAttribute_Namespace\">\r\n    \r\n            <a id=\"System_Xml_Serialization_SoapAttributeAttribute_Namespace_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Namespace</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the XML namespace of the XML attribute.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Namespace { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The XML namespace of the XML attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.xml.serialization.xmlattributeattribute#System_Xml_Serialization_XmlAttributeAttribute_Namespace_\" data-linktype=\"relative-path\">Namespace</a> property conforms to the World Wide Web Consortium (www.w3.org) specification &quot;Namespaces in XML&quot;.  </p>\n<p> To create namespaces that are associated with prefixes, you must create an <a class=\"xref\" href=\"system.xml.serialization.xmlserializernamespaces\" data-linktype=\"relative-path\">XmlSerializerNamespaces</a> that contains the namespaces and prefixes used in the XML document. The namespace you set for each <a class=\"xref\" href=\"system.xml.serialization.xmlattributeattribute\" data-linktype=\"relative-path\">XmlAttributeAttribute</a> must match one of the namespaces in the <a class=\"xref\" href=\"system.xml.serialization.xmlserializernamespaces\" data-linktype=\"relative-path\">XmlSerializerNamespaces</a>. When the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> generates the XML code, it correctly prefixes each attribute name.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes a class that contains several fields to which a <a class=\"xref\" href=\"system.xml.serialization.soapattributeattribute\" data-linktype=\"relative-path\">SoapAttributeAttribute</a> is applied. The Namespace property is set for the <code>GroupName</code> the field.  </p>\n<pre><code class=\"lang-cs\" name=\"SoapAttribute#1\">using System;\nusing System.IO;\nusing System.Text;\nusing System.Xml;\nusing System.Xml.Serialization;\nusing System.Xml.Schema;\n\n[SoapInclude(typeof(Vehicle))]\npublic class Group\n{\n   [SoapAttribute (Namespace = &quot;http://www.cpandl.com&quot;)]\n   public string GroupName;\n   \n   [SoapAttribute(DataType = &quot;base64Binary&quot;)]\n   public Byte [] GroupNumber;\n\n   [SoapAttribute(DataType = &quot;date&quot;, AttributeName = &quot;CreationDate&quot;)]\n   public DateTime Today;\n   [SoapElement(DataType = &quot;nonNegativeInteger&quot;, ElementName = &quot;PosInt&quot;)]\n   public string PostitiveInt;\n\n   public Vehicle GroupVehicle;\n}\n  \npublic class Vehicle\n{\n   public string licenseNumber;\n}\n\npublic class Run\n{\n   public static void Main()\n   {\n      Run test = new Run();\n      test.SerializeObject(&quot;SoapAtts.xml&quot;);\n      test.DeserializeObject(&quot;SoapAtts.xml&quot;);\n   }\n   public void SerializeObject(string filename)\n   {\n      // Create an instance of the XmlSerializer class that\n      // can generate encoded SOAP messages.\n      XmlSerializer mySerializer =  ReturnSOAPSerializer();\n\n      Group myGroup=MakeGroup();\n      // Writing the file requires a TextWriter.\n      XmlTextWriter writer = \n      new XmlTextWriter(filename, Encoding.UTF8);\n      writer.Formatting = Formatting.Indented;\n      writer.WriteStartElement(&quot;wrapper&quot;);\n      // Serialize the class, and close the TextWriter.\n      mySerializer.Serialize(writer, myGroup);\n      writer.WriteEndElement();\n      writer.Close();\n   }\n\n   private Group MakeGroup(){\n      // Create an instance of the class that will be serialized.\n      Group myGroup = new Group();\n\n      // Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;;\n\n      Byte [] hexByte = new Byte[2]{Convert.ToByte(100),\n      Convert.ToByte(50)};\n      myGroup.GroupNumber = hexByte;\n\n      DateTime myDate = new DateTime(2002,5,2);\n      myGroup.Today = myDate;\n      myGroup.PostitiveInt= &quot;10000&quot;;\n      myGroup.GroupVehicle = new Vehicle();\n      myGroup.GroupVehicle.licenseNumber=&quot;1234&quot;;\n      return myGroup;\n   }   \t\n\n   public void DeserializeObject(string filename)\n   {\n      // Create an instance of the XmlSerializer class that\n      // can generate encoded SOAP messages.\n      XmlSerializer mySerializer =  ReturnSOAPSerializer();\n\n      // Reading the file requires an  XmlTextReader.\n      XmlTextReader reader= \n      new XmlTextReader(filename);\n      reader.ReadStartElement(&quot;wrapper&quot;);\n\n      // Deserialize and cast the object.\n      Group myGroup; \n      myGroup = (Group) mySerializer.Deserialize(reader);\n      reader.ReadEndElement();\n      reader.Close();\n\n   }\n   \n   private XmlSerializer ReturnSOAPSerializer(){\n      // Create an instance of the XmlSerializer class.\n      XmlTypeMapping myMapping = \n      (new SoapReflectionImporter().ImportTypeMapping\n      (typeof(Group)));\n       return new XmlSerializer(myMapping);\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"SoapAttribute#1\">Imports System\nImports System.IO\nImports System.Text\nImports System.Xml\nImports System.Xml.Serialization\nImports System.Xml.Schema\n\n&lt;SoapInclude(GetType(Vehicle))&gt; _\nPublic Class Group\n\n   &lt;SoapAttribute (Namespace:= &quot;http:&#39;www.cpandl.com&quot;)&gt; _\n   Public GroupName As String    \n   &lt;SoapAttribute(DataType:= &quot;base64Binary&quot;)&gt; _\n   Public GroupNumber() As  Byte \n\n   &lt;SoapAttribute(DataType:= &quot;date&quot;, AttributeName:= &quot;CreationDate&quot;)&gt; _\n   Public Today As DateTime \n   &lt;SoapElement(DataType:= &quot;nonNegativeInteger&quot;, _\n   ElementName:= &quot;PosInt&quot;)&gt; _\n   Public PostitiveInt As String \n\n   Public GroupVehicle As Vehicle \nEnd Class\n  \nPublic Class Vehicle\n   Public licenseNumber As String \nEnd Class\n\nPublic Class Run\n\n   Shared Sub Main()\n   \n      Dim test As Run = New Run()\n      test.SerializeObject(&quot;SoapAtts.xml&quot;)\n      test.DeserializeObject(&quot;SoapAtts.xml&quot;)\n   End Sub\n   \n   Public Sub SerializeObject(filename As String)\n   \n      &#39; Create an instance of the XmlSerializer Class that\n      &#39; can generate encoded SOAP messages.\n      Dim mySerializer As XmlSerializer  =  ReturnSOAPSerializer()\n\n      Dim myGroup As Group = MakeGroup()\n      &#39; Writing the file requires a TextWriter.\n      Dim writer As XmlTextWriter = _\n      New XmlTextWriter(filename, Encoding.UTF8)\n      writer.Formatting = Formatting.Indented\n      writer.WriteStartElement(&quot;wrapper&quot;)\n      &#39; Serialize the Class, and close the TextWriter.\n      mySerializer.Serialize(writer, myGroup)\n      writer.WriteEndElement()\n      writer.Close()\n   End Sub\n\n   Private Function MakeGroup() As Group \n      &#39; Create an instance of the Class that will be serialized.\n      Dim myGroup As Group = New Group()\n\n      &#39; Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;\n\n      Dim hexByte() As Byte= New Byte(1){Convert.ToByte(100), _\n      Convert.ToByte(50)}\n      myGroup.GroupNumber = hexByte\n\n      Dim myDate As DateTime = New DateTime(2002,5,2)\n      myGroup.Today = myDate\n      myGroup.PostitiveInt= &quot;10000&quot;\n      myGroup.GroupVehicle = New Vehicle()\n      myGroup.GroupVehicle.licenseNumber=&quot;1234&quot;\n      return myGroup\n   End Function   \t\n\n   Public Sub DeserializeObject(filename As String)\n      &#39; Create an instance of the XmlSerializer Class that\n      &#39; can generate encoded SOAP messages.\n      Dim mySerializer As XmlSerializer =  ReturnSOAPSerializer()\n\n      &#39; Reading the file requires an  XmlTextReader.\n      Dim reader As XmlTextReader = _\n      New XmlTextReader(filename)\n      reader.ReadStartElement(&quot;wrapper&quot;)\n\n      &#39; Deserialize and cast the object.\n      Dim myGroup As Group \n      myGroup = _\n      CType(mySerializer.Deserialize(reader), Group)\n      reader.ReadEndElement()\n      reader.Close()\n\n   End Sub\n   \n   private Function ReturnSOAPSerializer() As XmlSerializer \n      &#39; Create an instance of the XmlSerializer Class.\n      Dim myMapping As XmlTypeMapping = _\n      (New SoapReflectionImporter().ImportTypeMapping _\n      (GetType(Group)))\n       return New XmlSerializer(myMapping)\n   End Function\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"SoapAttribute#1\">#using &lt;System.dll&gt;\n#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Text;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\nusing namespace System::Xml::Schema;\n\n//using namespace System::Runtime::Remoting::Metadata;\npublic ref class Vehicle\n{\npublic:\n   String^ licenseNumber;\n};\n\n\n[SoapInclude(Vehicle::typeid)]\npublic ref class Group\n{\npublic:\n\n   [SoapAttributeAttribute(Namespace=&quot;http://www.cpandl.com&quot;)]\n   String^ GroupName;\n\n   [SoapAttributeAttribute(DataType=&quot;base64Binary&quot;)]\n   array&lt;Byte&gt;^GroupNumber;\n\n   [SoapAttributeAttribute(DataType=&quot;date&quot;,AttributeName=&quot;CreationDate&quot;)]\n   DateTime Today;\n\n   [SoapElement(DataType=&quot;nonNegativeInteger&quot;,ElementName=&quot;PosInt&quot;)]\n   String^ PostitiveInt;\n   Vehicle^ GroupVehicle;\n};\n\npublic ref class Run\n{\npublic:\n   void SerializeObject( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class that\n      // can generate encoded SOAP messages.\n      XmlSerializer^ mySerializer = ReturnSOAPSerializer();\n      Group^ myGroup = MakeGroup();\n\n      // Writing the file requires a TextWriter.\n      XmlTextWriter^ writer = gcnew XmlTextWriter( filename,Encoding::UTF8 );\n      writer-&gt;Formatting = Formatting::Indented;\n      writer-&gt;WriteStartElement( &quot;wrapper&quot; );\n\n      // Serialize the class, and close the TextWriter.\n      mySerializer-&gt;Serialize( writer, myGroup );\n      writer-&gt;WriteEndElement();\n      writer-&gt;Close();\n   }\n\n\nprivate:\n   Group^ MakeGroup()\n   {\n      // Create an instance of the class that will be serialized.\n      Group^ myGroup = gcnew Group;\n\n      // Set the Object* properties.\n      myGroup-&gt;GroupName = &quot;.NET&quot;;\n      array&lt;Byte&gt;^hexByte = {Convert::ToByte( 100 ),Convert::ToByte( 50 )};\n      myGroup-&gt;GroupNumber = hexByte;\n      DateTime myDate = DateTime(2002,5,2);\n      myGroup-&gt;Today = myDate;\n      myGroup-&gt;PostitiveInt = &quot;10000&quot;;\n      myGroup-&gt;GroupVehicle = gcnew Vehicle;\n      myGroup-&gt;GroupVehicle-&gt;licenseNumber = &quot;1234&quot;;\n      return myGroup;\n   }\n\npublic:\n   void DeserializeObject( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class that\n      // can generate encoded SOAP messages.\n      XmlSerializer^ mySerializer = ReturnSOAPSerializer();\n\n      // Reading the file requires an  XmlTextReader.\n      XmlTextReader^ reader = gcnew XmlTextReader( filename );\n      reader-&gt;ReadStartElement( &quot;wrapper&quot; );\n\n      // Deserialize and cast the Object*.\n      Group^ myGroup;\n      myGroup = safe_cast&lt;Group^&gt;(mySerializer-&gt;Deserialize( reader ));\n      reader-&gt;ReadEndElement();\n      reader-&gt;Close();\n   }\n\nprivate:\n   XmlSerializer^ ReturnSOAPSerializer()\n   {\n      \n      // Create an instance of the XmlSerializer class.\n      XmlTypeMapping^ myMapping = (gcnew SoapReflectionImporter)-&gt;ImportTypeMapping( Group::typeid );\n      return gcnew XmlSerializer( myMapping );\n   }\n};\n\nint main()\n{\n   Run^ test = gcnew Run;\n   test-&gt;SerializeObject( &quot;SoapAtts.xml&quot; );\n   test-&gt;DeserializeObject( &quot;SoapAtts.xml&quot; );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.Serialization.SoapAttributeAttribute.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.Serialization.SoapAttributeAttribute.yml\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.SoapAttributeAttribute\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.SoapAttributeAttribute..ctor\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.SoapAttributeAttribute.AttributeName\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.SoapAttributeAttribute.DataType\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.SoapAttributeAttribute.Namespace\">\r\n<meta name=\"APILocation\" content=\"System.Xml.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"0bfcbbd4-acd5-fd8d-714c-1ac6e2e8f8ab\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies that the  must serialize the class member as an encoded SOAP attribute.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xml.Serialization/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xml.Serialization.SoapAttributeAttribute\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.Serialization.SoapAttributeAttribute.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.Serialization.SoapAttributeAttribute.yml","open_to_public_contributors":true,"api_name":["System.Xml.Serialization.SoapAttributeAttribute","System.Xml.Serialization.SoapAttributeAttribute..ctor","System.Xml.Serialization.SoapAttributeAttribute.AttributeName","System.Xml.Serialization.SoapAttributeAttribute.DataType","System.Xml.Serialization.SoapAttributeAttribute.Namespace"],"api_location":["System.Xml.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xml.Serialization.SoapAttributeAttribute","System::Xml::Serialization::SoapAttributeAttribute","System.Xml.Serialization.SoapAttributeAttribute.#ctor","System::Xml::Serialization::SoapAttributeAttribute::#ctor","System.Xml.Serialization.SoapAttributeAttribute.AttributeName","System::Xml::Serialization::SoapAttributeAttribute::AttributeName","System.Xml.Serialization.SoapAttributeAttribute.DataType","System::Xml::Serialization::SoapAttributeAttribute::DataType","System.Xml.Serialization.SoapAttributeAttribute.Namespace","System::Xml::Serialization::SoapAttributeAttribute::Namespace"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"0bfcbbd4-acd5-fd8d-714c-1ac6e2e8f8ab","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xml.Serialization/SoapAttributeAttribute.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SoapAttributeAttribute class | Microsoft Docs","_op_ogTitle":"SoapAttributeAttribute class","description":"Specifies that the  must serialize the class member as an encoded SOAP attribute.\n","toc_asset_id":"_splitted/System.Xml.Serialization/toc.json","toc_rel":"_splitted/System.Xml.Serialization/toc.json","source_url":"","ms.assetid":"System.Xml.Serialization.SoapAttributeAttribute","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.serialization.soapattributeattribute","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.serialization.soapattributeattribute","fileRelativePath":"System.Xml.Serialization.SoapAttributeAttribute.html"},"themesRelativePathToOutputRoot":"_themes/"}