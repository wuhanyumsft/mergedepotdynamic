{"content":"    \r\n    <h1 id=\"System_Diagnostics_CounterCreationDataCollection\">\r\n      <span class=\"lang-csharp\">CounterCreationDataCollection</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a strongly typed collection of <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> objects.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class CounterCreationDataCollection : System.Collections.CollectionBase</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase\" data-linktype=\"relative-path\">System.Collections.CollectionBase</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">CounterCreationDataCollection</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_Capacity\" data-linktype=\"relative-path\">Capacity</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_Clear\" data-linktype=\"relative-path\">Clear()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_Count\" data-linktype=\"relative-path\">Count</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_GetEnumerator\" data-linktype=\"relative-path\">GetEnumerator()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_InnerList\" data-linktype=\"relative-path\">InnerList</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_List\" data-linktype=\"relative-path\">List</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_OnClear\" data-linktype=\"relative-path\">OnClear()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_OnClearComplete\" data-linktype=\"relative-path\">OnClearComplete()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_OnInsert_System_Int32_System_Object_\" data-linktype=\"relative-path\">OnInsert(Int32,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_OnInsertComplete_System_Int32_System_Object_\" data-linktype=\"relative-path\">OnInsertComplete(Int32,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_OnRemove_System_Int32_System_Object_\" data-linktype=\"relative-path\">OnRemove(Int32,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_OnRemoveComplete_System_Int32_System_Object_\" data-linktype=\"relative-path\">OnRemoveComplete(Int32,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_OnSet_System_Int32_System_Object_System_Object_\" data-linktype=\"relative-path\">OnSet(Int32,Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_OnSetComplete_System_Int32_System_Object_System_Object_\" data-linktype=\"relative-path\">OnSetComplete(Int32,Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_RemoveAt_System_Int32_\" data-linktype=\"relative-path\">RemoveAt(Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_System_Collections_ICollection_CopyTo_System_Array_System_Int32_\" data-linktype=\"relative-path\">ICollection.CopyTo(Array,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_System_Collections_ICollection_IsSynchronized\" data-linktype=\"relative-path\">ICollection.IsSynchronized</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_System_Collections_ICollection_SyncRoot\" data-linktype=\"relative-path\">ICollection.SyncRoot</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_System_Collections_IList_Add_System_Object_\" data-linktype=\"relative-path\">IList.Add(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_System_Collections_IList_Contains_System_Object_\" data-linktype=\"relative-path\">IList.Contains(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_System_Collections_IList_IndexOf_System_Object_\" data-linktype=\"relative-path\">IList.IndexOf(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_System_Collections_IList_Insert_System_Int32_System_Object_\" data-linktype=\"relative-path\">IList.Insert(Int32,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_System_Collections_IList_IsFixedSize\" data-linktype=\"relative-path\">IList.IsFixedSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_System_Collections_IList_IsReadOnly\" data-linktype=\"relative-path\">IList.IsReadOnly</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_System_Collections_IList_Item_System_Int32_\" data-linktype=\"relative-path\">IList.Item(Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_System_Collections_IList_Remove_System_Object_\" data-linktype=\"relative-path\">IList.Remove(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_CounterCreationDataCollection__ctor\" data-linktype=\"self-bookmark\">CounterCreationDataCollection()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a> class, with no associated <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> instances.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_CounterCreationDataCollection__ctor_System_Diagnostics_CounterCreationData___\" data-linktype=\"self-bookmark\">CounterCreationDataCollection(CounterCreationData[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a> class by using the specified array of <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> instances.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_CounterCreationDataCollection__ctor_System_Diagnostics_CounterCreationDataCollection_\" data-linktype=\"self-bookmark\">CounterCreationDataCollection(CounterCreationDataCollection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a> class by using the specified collection of <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> instances.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_CounterCreationDataCollection_Item_System_Int32_\" data-linktype=\"self-bookmark\">Item(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indexes the <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_CounterCreationDataCollection_Add_System_Diagnostics_CounterCreationData_\" data-linktype=\"self-bookmark\">Add(CounterCreationData)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an instance of the <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> class to the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_CounterCreationDataCollection_AddRange_System_Diagnostics_CounterCreationData___\" data-linktype=\"self-bookmark\">AddRange(CounterCreationData[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified array of <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> instances to the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_CounterCreationDataCollection_AddRange_System_Diagnostics_CounterCreationDataCollection_\" data-linktype=\"self-bookmark\">AddRange(CounterCreationDataCollection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified collection of <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> instances to the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_CounterCreationDataCollection_Contains_System_Diagnostics_CounterCreationData_\" data-linktype=\"self-bookmark\">Contains(CounterCreationData)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether a <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> instance exists in the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_CounterCreationDataCollection_CopyTo_System_Diagnostics_CounterCreationData___System_Int32_\" data-linktype=\"self-bookmark\">CopyTo(CounterCreationData[],Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies the elements of the <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> to an array, starting at the specified index of the array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_CounterCreationDataCollection_IndexOf_System_Diagnostics_CounterCreationData_\" data-linktype=\"self-bookmark\">IndexOf(CounterCreationData)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the index of a <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> object in the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_CounterCreationDataCollection_Insert_System_Int32_System_Diagnostics_CounterCreationData_\" data-linktype=\"self-bookmark\">Insert(Int32,CounterCreationData)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Inserts a <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> object into the collection, at the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_CounterCreationDataCollection_OnValidate_System_Object_\" data-linktype=\"self-bookmark\">OnValidate(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Checks the specified object to determine whether it is a valid <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_CounterCreationDataCollection_Remove_System_Diagnostics_CounterCreationData_\" data-linktype=\"self-bookmark\">Remove(CounterCreationData)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes a <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> object from the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_CounterCreationDataCollection__ctor\">\r\n    \r\n            <a id=\"System_Diagnostics_CounterCreationDataCollection__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CounterCreationDataCollection()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a> class, with no associated <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> instances.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CounterCreationDataCollection ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_CounterCreationDataCollection__ctor_System_Diagnostics_CounterCreationData___\">\r\n    \r\n            <a id=\"System_Diagnostics_CounterCreationDataCollection__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CounterCreationDataCollection(CounterCreationData[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a> class by using the specified array of <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> instances.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CounterCreationDataCollection (System.Diagnostics.CounterCreationData[] value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> instances with which to initialize this <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to create a <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a> object by using a <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> array.  </p>\n<pre><code class=\"lang-vb\" name=\"CounterCreationDataCollection_CounterCreationData#1\">         Dim myCategoryName As String\n         Dim numberOfCounters As Integer\n         Console.Write(&quot;Enter the category Name : &quot;)\n         myCategoryName = Console.ReadLine()\n         &#39; Check if the category already exists or not.\n         If Not PerformanceCounterCategory.Exists(myCategoryName) Then\n            Console.Write(&quot;Enter the number of counters : &quot;)\n            numberOfCounters = Integer.Parse(Console.ReadLine())\n            Dim myCounterCreationData(numberOfCounters-1) As CounterCreationData\n\n            Dim i As Integer\n            For i = 0 To numberOfCounters - 1\n               Console.Write(&quot;Enter the counter name for {0} counter : &quot;, i)\n               myCounterCreationData(i) = New CounterCreationData()\n               myCounterCreationData(i).CounterName = Console.ReadLine()\n            Next i\n            Dim myCounterCollection As New CounterCreationDataCollection(myCounterCreationData)\n            &#39; Create the category.\n                PerformanceCounterCategory.Create(myCategoryName, &quot;Sample Category&quot;, _\n                       PerformanceCounterCategoryType.SingleInstance, myCounterCollection)\n\n            Console.WriteLine(&quot;The list of counters in &#39;CounterCollection&#39; are :&quot;)\n\n            For i = 0 To myCounterCollection.Count - 1\n               Console.WriteLine(&quot;Counter {0} is &#39;{1}&#39;&quot;, i, _\n                                             myCounterCollection(i).CounterName)\n            Next i\n         Else\n            Console.WriteLine(&quot;The category already exists&quot;)\n         End If\n</code></pre><pre><code class=\"lang-cs\" name=\"CounterCreationDataCollection_CounterCreationData#1\">            string myCategoryName;\n            int numberOfCounters;\n            Console.Write(&quot;Enter the category Name : &quot;);\n            myCategoryName = Console.ReadLine();\n            // Check if the category already exists or not.\n            if (!PerformanceCounterCategory.Exists(myCategoryName))\n            {\n                Console.Write(&quot;Enter the number of counters : &quot;);\n                numberOfCounters = int.Parse(Console.ReadLine());\n                CounterCreationData[] myCounterCreationData =\n                   new CounterCreationData[numberOfCounters];\n\n                for (int i = 0; i &lt; numberOfCounters; i++)\n                {\n                    Console.Write(&quot;Enter the counter name for {0} counter : &quot;, i);\n                    myCounterCreationData[i] = new CounterCreationData();\n                    myCounterCreationData[i].CounterName = Console.ReadLine();\n                }\n                CounterCreationDataCollection myCounterCollection =\n                   new CounterCreationDataCollection(myCounterCreationData);\n                // Create the category.\n                PerformanceCounterCategory.Create(myCategoryName,\n                   &quot;Sample Category&quot;,\n                PerformanceCounterCategoryType.SingleInstance, myCounterCollection);\n\n                Console.WriteLine(&quot;The list of counters in &#39;CounterCollection&#39; are :&quot;);\n                for (int i = 0; i &lt; myCounterCollection.Count; i++)\n                    Console.WriteLine(&quot;Counter {0} is &#39;{1}&#39;&quot;, i, myCounterCollection[i].CounterName);\n            }\n            else\n            {\n                Console.WriteLine(&quot;The category already exists&quot;);\n            }\n</code></pre><pre><code class=\"lang-cpp\" name=\"CounterCreationDataCollection_CounterCreationData#1\">      String^ myCategoryName;\n      int numberOfCounters;\n      Console::Write( &quot;Enter the category Name : &quot; );\n      myCategoryName = Console::ReadLine();\n      \n      // Check if the category already exists or not.\n      if (  !PerformanceCounterCategory::Exists( myCategoryName ) )\n      {\n         Console::Write( &quot;Enter the number of counters : &quot; );\n         numberOfCounters = Int32::Parse( Console::ReadLine() );\n         array&lt;CounterCreationData^&gt;^myCounterCreationData = gcnew array&lt;CounterCreationData^&gt;(numberOfCounters);\n         for ( int i = 0; i &lt; numberOfCounters; i++ )\n         {\n            Console::Write( &quot;Enter the counter name for {0} counter : &quot;, i );\n            myCounterCreationData[ i ] = gcnew CounterCreationData;\n            myCounterCreationData[ i ]-&gt;CounterName = Console::ReadLine();\n\n         }\n         CounterCreationDataCollection^ myCounterCollection = gcnew CounterCreationDataCollection( myCounterCreationData );\n         \n         // Create the category.\n         PerformanceCounterCategory::Create( myCategoryName, &quot;Sample Category&quot;, myCounterCollection );\n         for ( int i = 0; i &lt; numberOfCounters; i++ )\n         {\n            myCounter = gcnew PerformanceCounter( myCategoryName,myCounterCreationData[ i ]-&gt;CounterName,&quot;&quot;,false );\n\n         }\n         Console::WriteLine( &quot;The list of counters in &#39;CounterCollection&#39; are :&quot; );\n         for ( int i = 0; i &lt; myCounterCollection-&gt;Count; i++ )\n            Console::WriteLine( &quot;Counter {0} is &#39;{1}&#39;&quot;, i, myCounterCollection[ i ]-&gt;CounterName );\n      }\n      else\n      {\n         Console::WriteLine( &quot;The category already exists&quot; );\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_CounterCreationDataCollection__ctor_System_Diagnostics_CounterCreationDataCollection_\">\r\n    \r\n            <a id=\"System_Diagnostics_CounterCreationDataCollection__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CounterCreationDataCollection(CounterCreationDataCollection)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a> class by using the specified collection of <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> instances.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CounterCreationDataCollection (System.Diagnostics.CounterCreationDataCollection value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a> that holds <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> instances with which to initialize this <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to create a <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a> object by using <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> objects from another <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"CounterCreationDataCollection_CounterCreationDataCollection#1\">            string myCategoryName;\n            int numberOfCounters;\n            Console.Write(&quot;Enter the number of counters : &quot;);\n            numberOfCounters = int.Parse(Console.ReadLine());\n            CounterCreationData[] myCounterCreationData =\n               new CounterCreationData[numberOfCounters];\n            for (int i = 0; i &lt; numberOfCounters; i++)\n            {\n                Console.Write(&quot;Enter the counter name for {0} counter : &quot;, i);\n                myCounterCreationData[i] = new CounterCreationData();\n                myCounterCreationData[i].CounterName = Console.ReadLine();\n            }\n            CounterCreationDataCollection myCounterCollection =\n               new CounterCreationDataCollection(myCounterCreationData);\n            Console.Write(&quot;Enter the category Name:&quot;);\n            myCategoryName = Console.ReadLine();\n            // Check if the category already exists or not.\n            if (!PerformanceCounterCategory.Exists(myCategoryName))\n            {\n                CounterCreationDataCollection myNewCounterCollection =\n                   new CounterCreationDataCollection(myCounterCollection);\n                PerformanceCounterCategory.Create(myCategoryName, &quot;Sample Category&quot;,\n                PerformanceCounterCategoryType.SingleInstance, myNewCounterCollection);\n\n\n                Console.WriteLine(&quot;The list of counters in &#39;CounterCollection&#39; are : &quot;);\n                for (int i = 0; i &lt; myNewCounterCollection.Count; i++)\n                    Console.WriteLine(&quot;Counter {0} is &#39;{1}&#39;&quot;, i, myNewCounterCollection[i].CounterName);\n            }\n            else\n            {\n                Console.WriteLine(&quot;The category already exists&quot;);\n            }\n</code></pre><pre><code class=\"lang-cpp\" name=\"CounterCreationDataCollection_CounterCreationDataCollection#1\">      String^ myCategoryName;\n      int numberOfCounters;\n      Console::Write( &quot;Enter the number of counters : &quot; );\n      numberOfCounters = Int32::Parse( Console::ReadLine() );\n      array&lt;CounterCreationData^&gt;^myCounterCreationData = gcnew array&lt;CounterCreationData^&gt;(numberOfCounters);\n      for ( int i = 0; i &lt; numberOfCounters; i++ )\n      {\n         Console::Write( &quot;Enter the counter name for {0} counter : &quot;, i );\n         myCounterCreationData[ i ] = gcnew CounterCreationData;\n         myCounterCreationData[ i ]-&gt;CounterName = Console::ReadLine();\n\n      }\n      CounterCreationDataCollection^ myCounterCollection = gcnew CounterCreationDataCollection( myCounterCreationData );\n      Console::Write( &quot;Enter the category Name:&quot; );\n      myCategoryName = Console::ReadLine();\n      \n      // Check if the category already exists or not.\n      if (  !PerformanceCounterCategory::Exists( myCategoryName ) )\n      {\n         CounterCreationDataCollection^ myNewCounterCollection = gcnew CounterCreationDataCollection( myCounterCollection );\n         PerformanceCounterCategory::Create( myCategoryName, &quot;Sample Category&quot;, myNewCounterCollection );\n         for ( int i = 0; i &lt; numberOfCounters; i++ )\n         {\n            myCounter = gcnew PerformanceCounter( myCategoryName,myCounterCreationData[ i ]-&gt;CounterName,&quot;&quot;,false );\n\n         }\n         Console::WriteLine( &quot;The list of counters in &#39;CounterCollection&#39; are : &quot; );\n         for ( int i = 0; i &lt; myNewCounterCollection-&gt;Count; i++ )\n            Console::WriteLine( &quot;Counter {0} is &#39;{1}&#39;&quot;, i, myNewCounterCollection[ i ]-&gt;CounterName );\n      }\n      else\n      {\n         Console::WriteLine( &quot;The category already exists&quot; );\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"CounterCreationDataCollection_CounterCreationDataCollection#1\">            Dim myCategoryName As String\n            Dim numberOfCounters As Integer\n            Console.Write(&quot;Enter the number of counters : &quot;)\n            numberOfCounters = Integer.Parse(Console.ReadLine())\n            Dim myCounterCreationData(numberOfCounters - 1) As CounterCreationData\n            Dim i As Integer\n            For i = 0 To numberOfCounters - 1\n                Console.Write(&quot;Enter the counter name for {0} counter : &quot;, i)\n                myCounterCreationData(i) = New CounterCreationData()\n                myCounterCreationData(i).CounterName = Console.ReadLine()\n            Next i\n            Dim myCounterCollection As New CounterCreationDataCollection(myCounterCreationData)\n            Console.Write(&quot;Enter the category Name:&quot;)\n            myCategoryName = Console.ReadLine()\n            &#39; Check if the category already exists or not.\n            If Not PerformanceCounterCategory.Exists(myCategoryName) Then\n                Dim myNewCounterCollection As New CounterCreationDataCollection(myCounterCollection)\n                PerformanceCounterCategory.Create(myCategoryName, &quot;Sample Category&quot;, _\n                   PerformanceCounterCategoryType.SingleInstance, myNewCounterCollection)\n\n                Console.WriteLine(&quot;The list of counters in &#39;CounterCollection&#39; are : &quot;)\n\n                For i = 0 To myNewCounterCollection.Count - 1\n                    Console.WriteLine(&quot;Counter {0} is &#39;{1}&#39;&quot;, i, myNewCounterCollection(i).CounterName)\n                Next i\n            Else\n                Console.WriteLine(&quot;The category already exists&quot;)\n            End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_CounterCreationDataCollection_Item_System_Int32_\">\r\n    \r\n            <a id=\"System_Diagnostics_CounterCreationDataCollection_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Indexes the <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Diagnostics.CounterCreationData this[int index] { get; set; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An index into the <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a></div>\r\n                  </div>\r\n                  <p>The collection index, which is used to access individual elements of the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> is less than 0.  </p>\n<p> -or-  </p>\n<p> <code>index</code> is equal to or greater than the number of items in the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_CounterCreationDataCollection_Add_System_Diagnostics_CounterCreationData_\">\r\n    \r\n            <a id=\"System_Diagnostics_CounterCreationDataCollection_Add_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Add(CounterCreationData)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an instance of the <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> class to the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Add (System.Diagnostics.CounterCreationData value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> object to append to the existing collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The index of the new <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> is not a <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the Add method to add a <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> object to a <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"PerformanceCounterType.AverageCounter64#1\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Collections;\nusing namespace System::Collections::Specialized;\nusing namespace System::Diagnostics;\n\n// Output information about the counter sample.\nvoid OutputSample( CounterSample s )\n{\n   Console::WriteLine( &quot;\\r<br>+++++++++++&quot; );\n   Console::WriteLine( &quot;Sample values - \\r<br>&quot; );\n   Console::WriteLine( &quot;   BaseValue        = {0}&quot;, s.BaseValue );\n   Console::WriteLine( &quot;   CounterFrequency = {0}&quot;, s.CounterFrequency );\n   Console::WriteLine( &quot;   CounterTimeStamp = {0}&quot;, s.CounterTimeStamp );\n   Console::WriteLine( &quot;   CounterType      = {0}&quot;, s.CounterType );\n   Console::WriteLine( &quot;   RawValue         = {0}&quot;, s.RawValue );\n   Console::WriteLine( &quot;   SystemFrequency  = {0}&quot;, s.SystemFrequency );\n   Console::WriteLine( &quot;   TimeStamp        = {0}&quot;, s.TimeStamp );\n   Console::WriteLine( &quot;   TimeStamp100nSec = {0}&quot;, s.TimeStamp100nSec );\n   Console::WriteLine( &quot;++++++++++++++++++++++&quot; );\n}\n\n//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++\n//    Description - This counter type shows how many items are processed, on average,\n//        during an operation. Counters of this type display a ratio of the items \n//        processed (such as bytes sent) to the number of operations completed. The  \n//        ratio is calculated by comparing the number of items processed during the \n//        last interval to the number of operations completed during the last interval. \n// Generic type - Average\n//      Formula - (N1 - N0) / (D1 - D0), where the numerator (N) represents the number \n//        of items processed during the last sample interval and the denominator (D) \n//        represents the number of operations completed during the last two sample \n//        intervals. \n//    Average (Nx - N0) / (Dx - D0)  \n//    Example PhysicalDisk\\ Avg. Disk Bytes/Transfer \n//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++\nfloat MyComputeCounterValue( CounterSample s0, CounterSample s1 )\n{\n   float numerator = (float)s1.RawValue - (float)s0.RawValue;\n   float denomenator = (float)s1.BaseValue - (float)s0.BaseValue;\n   float counterValue = numerator / denomenator;\n   return counterValue;\n}\n\nbool SetupCategory()\n{\n   if (  !PerformanceCounterCategory::Exists( &quot;AverageCounter64SampleCategory&quot; ) )\n   {\n      CounterCreationDataCollection^ CCDC = gcnew CounterCreationDataCollection;\n      \n      // Add the counter.\n      CounterCreationData^ averageCount64 = gcnew CounterCreationData;\n      averageCount64-&gt;CounterType = PerformanceCounterType::AverageCount64;\n      averageCount64-&gt;CounterName = &quot;AverageCounter64Sample&quot;;\n      CCDC-&gt;Add( averageCount64 );\n      \n      // Add the base counter.\n      CounterCreationData^ averageCount64Base = gcnew CounterCreationData;\n      averageCount64Base-&gt;CounterType = PerformanceCounterType::AverageBase;\n      averageCount64Base-&gt;CounterName = &quot;AverageCounter64SampleBase&quot;;\n      CCDC-&gt;Add( averageCount64Base );\n      \n      // Create the category.\n      PerformanceCounterCategory::Create( &quot;AverageCounter64SampleCategory&quot;, &quot;Demonstrates usage of the AverageCounter64 performance counter type.&quot;, CCDC );\n      return (true);\n   }\n   else\n   {\n      Console::WriteLine( &quot;Category exists - AverageCounter64SampleCategory&quot; );\n      return (false);\n   }\n}\n\nvoid CreateCounters( PerformanceCounter^% PC, PerformanceCounter^% BPC )\n{\n   \n   // Create the counters.\n   PC = gcnew PerformanceCounter( &quot;AverageCounter64SampleCategory&quot;,&quot;AverageCounter64Sample&quot;,false );\n\n   BPC = gcnew PerformanceCounter( &quot;AverageCounter64SampleCategory&quot;,&quot;AverageCounter64SampleBase&quot;,false );\n   PC-&gt;RawValue = 0;\n   BPC-&gt;RawValue = 0;\n}\nvoid CollectSamples( ArrayList^ samplesList, PerformanceCounter^ PC, PerformanceCounter^ BPC )\n{\n   Random^ r = gcnew Random( DateTime::Now.Millisecond );\n\n   // Loop for the samples.\n   for ( int j = 0; j &lt; 100; j++ )\n   {\n      int value = r-&gt;Next( 1, 10 );\n      Console::Write( &quot;{0} = {1}&quot;, j, value );\n      PC-&gt;IncrementBy( value );\n      BPC-&gt;Increment();\n      if ( (j % 10) == 9 )\n      {\n         OutputSample( PC-&gt;NextSample() );\n         samplesList-&gt;Add( PC-&gt;NextSample() );\n      }\n      else\n            Console::WriteLine();\n      System::Threading::Thread::Sleep( 50 );\n   }\n}\n\nvoid CalculateResults( ArrayList^ samplesList )\n{\n   for ( int i = 0; i &lt; (samplesList-&gt;Count - 1); i++ )\n   {\n      // Output the sample.\n      OutputSample(  *safe_cast&lt;CounterSample^&gt;(samplesList[ i ]) );\n      OutputSample(  *safe_cast&lt;CounterSample^&gt;(samplesList[ i + 1 ]) );\n      \n      // Use .NET to calculate the counter value.\n      Console::WriteLine( &quot;.NET computed counter value = {0}&quot;, CounterSampleCalculator::ComputeCounterValue(  *safe_cast&lt;CounterSample^&gt;(samplesList[ i ]),  *safe_cast&lt;CounterSample^&gt;(samplesList[ i + 1 ]) ) );\n      \n      // Calculate the counter value manually.\n      Console::WriteLine( &quot;My computed counter value = {0}&quot;, MyComputeCounterValue(  *safe_cast&lt;CounterSample^&gt;(samplesList[ i ]),  *safe_cast&lt;CounterSample^&gt;(samplesList[ i + 1 ]) ) );\n   }\n}\n\nint main()\n{\n   ArrayList^ samplesList = gcnew ArrayList;\n   PerformanceCounter^ PC;\n   PerformanceCounter^ BPC;\n   SetupCategory();\n   CreateCounters( PC, BPC );\n   CollectSamples( samplesList, PC, BPC );\n   CalculateResults( samplesList );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"PerformanceCounterType.AverageCounter64#1\">\nusing System;\nusing System.Collections;\nusing System.Collections.Specialized;\nusing System.Diagnostics;\n\npublic class App {\n\n    private static PerformanceCounter avgCounter64Sample;\n    private static PerformanceCounter avgCounter64SampleBase;\n\n    public static void Main()\n    {\n    \n        ArrayList samplesList = new ArrayList();\n\n        // If the category does not exist, create the category and exit.\n        // Performance counters should not be created and immediately used.\n        // There is a latency time to enable the counters, they should be created\n        // prior to executing the application that uses the counters.\n        // Execute this sample a second time to use the category.\n        if (SetupCategory())\n            return;\n        CreateCounters();\n        CollectSamples(samplesList);\n        CalculateResults(samplesList);\n\n    }\n\n    private static bool SetupCategory()\n    {\n        if ( !PerformanceCounterCategory.Exists(&quot;AverageCounter64SampleCategory&quot;) ) \n        {\n\n            CounterCreationDataCollection counterDataCollection = new CounterCreationDataCollection();\n\n            // Add the counter.\n            CounterCreationData averageCount64 = new CounterCreationData();\n            averageCount64.CounterType = PerformanceCounterType.AverageCount64;\n            averageCount64.CounterName = &quot;AverageCounter64Sample&quot;;\n            counterDataCollection.Add(averageCount64);\n\n            // Add the base counter.\n            CounterCreationData averageCount64Base = new CounterCreationData();\n            averageCount64Base.CounterType = PerformanceCounterType.AverageBase;\n            averageCount64Base.CounterName = &quot;AverageCounter64SampleBase&quot;;\n            counterDataCollection.Add(averageCount64Base);\n\n            // Create the category.\n            PerformanceCounterCategory.Create(&quot;AverageCounter64SampleCategory&quot;,\n                &quot;Demonstrates usage of the AverageCounter64 performance counter type.&quot;,\n                PerformanceCounterCategoryType.SingleInstance, counterDataCollection);\n\n            return(true);\n        }\n        else\n        {\n            Console.WriteLine(&quot;Category exists - AverageCounter64SampleCategory&quot;);\n            return(false);\n        }\n    }\n\n    private static void CreateCounters()\n    {\n        // Create the counters.\n\n        avgCounter64Sample = new PerformanceCounter(&quot;AverageCounter64SampleCategory&quot;, \n            &quot;AverageCounter64Sample&quot;, \n            false);\n\n\n        avgCounter64SampleBase = new PerformanceCounter(&quot;AverageCounter64SampleCategory&quot;, \n            &quot;AverageCounter64SampleBase&quot;, \n            false);\n\n        avgCounter64Sample.RawValue=0;\n        avgCounter64SampleBase.RawValue=0;\n    }\n    private static void CollectSamples(ArrayList samplesList)\n    {\n\n        Random r = new Random( DateTime.Now.Millisecond );\n\n        // Loop for the samples.\n        for (int j = 0; j &lt; 100; j++) \n        {\n\n            int value = r.Next(1, 10);\n            Console.Write(j + &quot; = &quot; + value);\n\n            avgCounter64Sample.IncrementBy(value);\n\n            avgCounter64SampleBase.Increment();\n\n            if ((j % 10) == 9) \n            {\n                OutputSample(avgCounter64Sample.NextSample());\n                samplesList.Add( avgCounter64Sample.NextSample() );\n            }\n            else\n                Console.WriteLine();\n\n            System.Threading.Thread.Sleep(50);\n        }\n\n    }\n\n    private static void CalculateResults(ArrayList samplesList)\n    {\n        for(int i = 0; i &lt; (samplesList.Count - 1); i++)\n        {\n            // Output the sample.\n            OutputSample( (CounterSample)samplesList[i] );\n            OutputSample( (CounterSample)samplesList[i+1] );\n\n            // Use .NET to calculate the counter value.\n            Console.WriteLine(&quot;.NET computed counter value = &quot; +\n                CounterSampleCalculator.ComputeCounterValue((CounterSample)samplesList[i],\n                (CounterSample)samplesList[i+1]) );\n\n            // Calculate the counter value manually.\n            Console.WriteLine(&quot;My computed counter value = &quot; + \n                MyComputeCounterValue((CounterSample)samplesList[i],\n                (CounterSample)samplesList[i+1]) );\n\n        }\n    }\n\n    //++++++++//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++\n    //    Description - This counter type shows how many items are processed, on average,\n    //        during an operation. Counters of this type display a ratio of the items \n    //        processed (such as bytes sent) to the number of operations completed. The  \n    //        ratio is calculated by comparing the number of items processed during the \n    //        last interval to the number of operations completed during the last interval. \n    // Generic type - Average\n    //      Formula - (N1 - N0) / (D1 - D0), where the numerator (N) represents the number \n    //        of items processed during the last sample interval and the denominator (D) \n    //        represents the number of operations completed during the last two sample \n    //        intervals. \n    //    Average (Nx - N0) / (Dx - D0)  \n    //    Example PhysicalDisk\\ Avg. Disk Bytes/Transfer \n    //++++++++//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++\n    private static Single MyComputeCounterValue(CounterSample s0, CounterSample s1)\n    {\n        Single numerator = (Single)s1.RawValue - (Single)s0.RawValue;\n        Single denomenator = (Single)s1.BaseValue - (Single)s0.BaseValue;\n        Single counterValue = numerator / denomenator;\n        return(counterValue);\n    }\n\n    // Output information about the counter sample.\n    private static void OutputSample(CounterSample s)\n    {\n        Console.WriteLine(&quot;\\r<br>+++++++++++&quot;);\n        Console.WriteLine(&quot;Sample values - \\r<br>&quot;);\n        Console.WriteLine(&quot;   BaseValue        = &quot; + s.BaseValue);\n        Console.WriteLine(&quot;   CounterFrequency = &quot; + s.CounterFrequency);\n        Console.WriteLine(&quot;   CounterTimeStamp = &quot; + s.CounterTimeStamp);\n        Console.WriteLine(&quot;   CounterType      = &quot; + s.CounterType);\n        Console.WriteLine(&quot;   RawValue         = &quot; + s.RawValue);\n        Console.WriteLine(&quot;   SystemFrequency  = &quot; + s.SystemFrequency);\n        Console.WriteLine(&quot;   TimeStamp        = &quot; + s.TimeStamp);\n        Console.WriteLine(&quot;   TimeStamp100nSec = &quot; + s.TimeStamp100nSec);\n        Console.WriteLine(&quot;++++++++++++++++++++++&quot;);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"PerformanceCounterType.AverageCounter64#1\">Imports System\nImports System.Collections\nImports System.Collections.Specialized\nImports System.Diagnostics\n\n _\n\nPublic Class App\n\n    Private Shared avgCounter64Sample As PerformanceCounter\n    Private Shared avgCounter64SampleBase As PerformanceCounter\n\n\n    Public Shared Sub Main()\n\n        Dim samplesList As New ArrayList()\n        &#39;If the category does not exist, create the category and exit.\n        &#39;Performance counters should not be created and immediately used.\n        &#39;There is a latency time to enable the counters, they should be created\n        &#39;prior to executing the application that uses the counters.\n        &#39;Execute this sample a second time to use the counters.\n        If Not (SetupCategory()) Then\n            CreateCounters()\n            CollectSamples(samplesList)\n            CalculateResults(samplesList)\n        End If\n\n    End Sub &#39;Main\n\n    Private Shared Function SetupCategory() As Boolean\n        If Not PerformanceCounterCategory.Exists(&quot;AverageCounter64SampleCategory&quot;) Then\n\n            Dim counterDataCollection As New CounterCreationDataCollection()\n\n            &#39; Add the counter.\n            Dim averageCount64 As New CounterCreationData()\n            averageCount64.CounterType = PerformanceCounterType.AverageCount64\n            averageCount64.CounterName = &quot;AverageCounter64Sample&quot;\n            counterDataCollection.Add(averageCount64)\n\n            &#39; Add the base counter.\n            Dim averageCount64Base As New CounterCreationData()\n            averageCount64Base.CounterType = PerformanceCounterType.AverageBase\n            averageCount64Base.CounterName = &quot;AverageCounter64SampleBase&quot;\n            counterDataCollection.Add(averageCount64Base)\n\n            &#39; Create the category.\n            PerformanceCounterCategory.Create(&quot;AverageCounter64SampleCategory&quot;, _\n               &quot;Demonstrates usage of the AverageCounter64 performance counter type.&quot;, _\n                      PerformanceCounterCategoryType.SingleInstance, counterDataCollection)\n\n            Return True\n        Else\n            Console.WriteLine(&quot;Category exists - AverageCounter64SampleCategory&quot;)\n            Return False\n        End If\n    End Function &#39;SetupCategory\n\n    Private Shared Sub CreateCounters()\n        &#39; Create the counters.\n\n        avgCounter64Sample = New PerformanceCounter(&quot;AverageCounter64SampleCategory&quot;, &quot;AverageCounter64Sample&quot;, False)\n\n        avgCounter64SampleBase = New PerformanceCounter(&quot;AverageCounter64SampleCategory&quot;, &quot;AverageCounter64SampleBase&quot;, False)\n\n        avgCounter64Sample.RawValue = 0\n        avgCounter64SampleBase.RawValue = 0\n    End Sub &#39;CreateCounters\n\n    Private Shared Sub CollectSamples(ByVal samplesList As ArrayList)\n\n        Dim r As New Random(DateTime.Now.Millisecond)\n\n        &#39; Loop for the samples.\n        Dim j As Integer\n        For j = 0 To 99\n\n            Dim value As Integer = r.Next(1, 10)\n            Console.Write(j.ToString() + &quot; = &quot; + value.ToString())\n\n            avgCounter64Sample.IncrementBy(value)\n\n            avgCounter64SampleBase.Increment()\n\n            If j Mod 10 = 9 Then\n                OutputSample(avgCounter64Sample.NextSample())\n                samplesList.Add(avgCounter64Sample.NextSample())\n            Else\n                Console.WriteLine()\n            End If\n            System.Threading.Thread.Sleep(50)\n        Next j\n    End Sub &#39;CollectSamples\n\n    Private Shared Sub CalculateResults(ByVal samplesList As ArrayList)\n        Dim i As Integer\n        For i = 0 To (samplesList.Count - 1) - 1\n            &#39; Output the sample.\n            OutputSample(CType(samplesList(i), CounterSample))\n            OutputSample(CType(samplesList((i + 1)), CounterSample))\n\n            &#39; Use .NET to calculate the counter value.\n            Console.WriteLine(&quot;.NET computed counter value = &quot; + CounterSampleCalculator.ComputeCounterValue(CType(samplesList(i), CounterSample), CType(samplesList((i + 1)), CounterSample)).ToString())\n\n            &#39; Calculate the counter value manually.\n            Console.WriteLine(&quot;My computed counter value = &quot; + MyComputeCounterValue(CType(samplesList(i), CounterSample), CType(samplesList((i + 1)), CounterSample)).ToString())\n        Next i\n    End Sub &#39;CalculateResults\n\n    &#39;++++++++//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++\n    &#39;\tDescription - This counter type shows how many items are processed, on average,\n    &#39;\t\tduring an operation. Counters of this type display a ratio of the items \n    &#39;\t\tprocessed (such as bytes sent) to the number of operations completed. The  \n    &#39;\t\tratio is calculated by comparing the number of items processed during the \n    &#39;\t\tlast interval to the number of operations completed during the last interval. \n    &#39; Generic type - Average\n    &#39;  \tFormula - (N1 - N0) / (D1 - D0), where the numerator (N) represents the number \n    &#39;\t\tof items processed during the last sample interval and the denominator (D) \n    &#39;\t\trepresents the number of operations completed during the last two sample \n    &#39;\t\tintervals. \n    &#39;\tAverage (Nx - N0) / (Dx - D0)  \n    &#39;\tExample PhysicalDisk\\ Avg. Disk Bytes/Transfer \n    &#39;++++++++//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++\n    Private Shared Function MyComputeCounterValue(ByVal s0 As CounterSample, ByVal s1 As CounterSample) As [Single]\n        Dim numerator As [Single] = CType(s1.RawValue, [Single]) - CType(s0.RawValue, [Single])\n        Dim denomenator As [Single] = CType(s1.BaseValue, [Single]) - CType(s0.BaseValue, [Single])\n        Dim counterValue As [Single] = numerator / denomenator\n        Return counterValue\n    End Function &#39;MyComputeCounterValue\n\n    &#39; Output information about the counter sample.\n    Private Shared Sub OutputSample(ByVal s As CounterSample)\n        Console.WriteLine(ControlChars.Lf + ControlChars.Cr + &quot;+++++++++++&quot;)\n        Console.WriteLine(&quot;Sample values - &quot; + ControlChars.Lf + ControlChars.Cr)\n        Console.WriteLine((&quot;   BaseValue        = &quot; + s.BaseValue.ToString()))\n        Console.WriteLine((&quot;   CounterFrequency = &quot; + s.CounterFrequency.ToString()))\n        Console.WriteLine((&quot;   CounterTimeStamp = &quot; + s.CounterTimeStamp.ToString()))\n        Console.WriteLine((&quot;   CounterType      = &quot; + s.CounterType.ToString()))\n        Console.WriteLine((&quot;   RawValue         = &quot; + s.RawValue.ToString()))\n        Console.WriteLine((&quot;   SystemFrequency  = &quot; + s.SystemFrequency.ToString()))\n        Console.WriteLine((&quot;   TimeStamp        = &quot; + s.TimeStamp.ToString()))\n        Console.WriteLine((&quot;   TimeStamp100nSec = &quot; + s.TimeStamp100nSec.ToString()))\n        Console.WriteLine(&quot;++++++++++++++++++++++&quot;)\n    End Sub &#39;OutputSample\nEnd Class &#39;App\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_CounterCreationDataCollection_AddRange_System_Diagnostics_CounterCreationData___\">\r\n    \r\n            <a id=\"System_Diagnostics_CounterCreationDataCollection_AddRange_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddRange(CounterCreationData[])</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified array of <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> instances to the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddRange (System.Diagnostics.CounterCreationData[] value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> instances to append to the existing collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_CounterCreationDataCollection_AddRange_System_Diagnostics_CounterCreationDataCollection_\">\r\n    \r\n            <a id=\"System_Diagnostics_CounterCreationDataCollection_AddRange_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddRange(CounterCreationDataCollection)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified collection of <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> instances to the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddRange (System.Diagnostics.CounterCreationDataCollection value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A collection of <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> instances to append to the existing collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the AddRange method overload to add <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> objects from one <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a> to another <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"CounterCreationDataCollection_AddRange#2\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Diagnostics;\nint main()\n{\n   PerformanceCounter^ myCounter;\n   try\n   {\n      String^ myCategoryName;\n      int numberOfCounters;\n      Console::Write( &quot;Enter the number of counters : &quot; );\n      numberOfCounters = Int32::Parse( Console::ReadLine() );\n      array&lt;CounterCreationData^&gt;^myCounterCreationData = gcnew array&lt;CounterCreationData^&gt;(numberOfCounters);\n      for ( int i = 0; i &lt; numberOfCounters; i++ )\n      {\n         Console::Write( &quot;Enter the counter name for {0} counter : &quot;, i );\n         myCounterCreationData[ i ] = gcnew CounterCreationData;\n         myCounterCreationData[ i ]-&gt;CounterName = Console::ReadLine();\n      }\n      CounterCreationDataCollection^ myCounterCollection = gcnew CounterCreationDataCollection( myCounterCreationData );\n      Console::Write( &quot;Enter the category Name : &quot; );\n      myCategoryName = Console::ReadLine();\n\n      // Check if the category already exists or not.\n      if (  !PerformanceCounterCategory::Exists( myCategoryName ) )\n      {\n         CounterCreationDataCollection^ myNewCounterCollection = gcnew CounterCreationDataCollection;\n\n         // Add the &#39;CounterCreationDataCollection&#39; to &#39;CounterCreationDataCollection&#39; Object*.\n         myNewCounterCollection-&gt;AddRange( myCounterCollection );\n         PerformanceCounterCategory::Create( myCategoryName, &quot;Sample Category&quot;, myNewCounterCollection );\n         for ( int i = 0; i &lt; numberOfCounters; i++ )\n         {\n            myCounter = gcnew PerformanceCounter( myCategoryName,myCounterCreationData[ i ]-&gt;CounterName,&quot;&quot;,false );\n\n         }\n         Console::WriteLine( &quot;The list of counters in CounterCollection are: &quot; );\n         for ( int i = 0; i &lt; myNewCounterCollection-&gt;Count; i++ )\n            Console::WriteLine( &quot;Counter {0} is &#39;{1}&#39;&quot;, i + 1, myNewCounterCollection[ i ]-&gt;CounterName );\n      }\n      else\n      {\n         Console::WriteLine( &quot;The category already exists&quot; );\n      }\n   }\n   catch ( Exception^ e ) \n   {\n      Console::WriteLine( &quot;Exception: {0}.&quot;, e-&gt;Message );\n   }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"CounterCreationDataCollection_AddRange#2\">using System;\nusing System.Diagnostics;\n\npublic class CounterDataCollectionExample\n{\n    public static void Main()\n    {\n        try\n        {\n\n            string myCategoryName;\n            int numberOfCounters;\n            Console.Write(&quot;Enter the number of counters : &quot;);\n            numberOfCounters = int.Parse(Console.ReadLine());\n            CounterCreationData[] myCounterCreationData =\n               new CounterCreationData[numberOfCounters];\n            for (int i = 0; i &lt; numberOfCounters; i++)\n            {\n                Console.Write(&quot;Enter the counter name for {0} counter : &quot;, i);\n                myCounterCreationData[i] = new CounterCreationData();\n                myCounterCreationData[i].CounterName = Console.ReadLine();\n            }\n            CounterCreationDataCollection myCounterCollection =\n               new CounterCreationDataCollection(myCounterCreationData);\n            Console.Write(&quot;Enter the category Name : &quot;);\n            myCategoryName = Console.ReadLine();\n            // Check if the category already exists or not.\n            if (!PerformanceCounterCategory.Exists(myCategoryName))\n            {\n                CounterCreationDataCollection myNewCounterCollection =\n                   new CounterCreationDataCollection();\n                // Add the &#39;CounterCreationDataCollection&#39; to &#39;CounterCreationDataCollection&#39; object.\n                myNewCounterCollection.AddRange(myCounterCollection);\n\n                PerformanceCounterCategory.Create(myCategoryName, &quot;Sample Category&quot;,\n                PerformanceCounterCategoryType.SingleInstance, myNewCounterCollection);\n\n                Console.WriteLine(&quot;The list of counters in CounterCollection are: &quot;);\n                for (int i = 0; i &lt; myNewCounterCollection.Count; i++)\n                    Console.WriteLine(&quot;Counter {0} is &#39;{1}&#39;&quot;, i + 1, myNewCounterCollection[i].CounterName);\n            }\n            else\n            {\n                Console.WriteLine(&quot;The category already exists&quot;);\n            }\n\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(&quot;Exception: {0}.&quot;, e.Message);\n            return;\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"CounterCreationDataCollection_AddRange#2\">\nImports System\nImports System.Diagnostics\n\nPublic Class CounterDataCollectionExample\n   Private Shared myCounter As PerformanceCounter\n   Public Shared Sub Main()\n      Try\n\n         Dim myCategoryName As String\n         Dim numberOfCounters As Integer\n         Console.Write(&quot;Enter the number of counters : &quot;)\n         numberOfCounters = Integer.Parse(Console.ReadLine())\n         Dim myCounterCreationData(numberOfCounters-1) As CounterCreationData\n         Dim i As Integer\n         For i = 0 To numberOfCounters - 1\n            Console.Write(&quot;Enter the counter name for {0} counter : &quot;, i)\n            myCounterCreationData(i) = New CounterCreationData()\n            myCounterCreationData(i).CounterName = Console.ReadLine()\n         Next i\n         Dim myCounterCollection As New CounterCreationDataCollection(myCounterCreationData)\n         Console.Write(&quot;Enter the category Name : &quot;)\n         myCategoryName = Console.ReadLine()\n         &#39; Check if the category already exists or not.\n         If Not PerformanceCounterCategory.Exists(myCategoryName) Then\n            Dim myNewCounterCollection As New CounterCreationDataCollection()\n            &#39; Add the &#39;CounterCreationDataCollection&#39; to &#39;CounterCreationDataCollection&#39; object.\n            myNewCounterCollection.AddRange(myCounterCollection)\n\n                PerformanceCounterCategory.Create(myCategoryName, &quot;Sample Category&quot;, _\n                       PerformanceCounterCategoryType.SingleInstance, myNewCounterCollection)\n\n            Console.WriteLine(&quot;The list of counters in CounterCollection are: &quot;)\n\n            For i = 0 To myNewCounterCollection.Count - 1\n               Console.WriteLine(&quot;Counter {0} is &#39;{1}&#39;&quot;, i + 1, _\n                                             myNewCounterCollection(i).CounterName)\n            Next i\n         Else\n            Console.WriteLine(&quot;The category already exists&quot;)\n         End If\n\n      Catch e As Exception\n         Console.WriteLine(&quot;Exception: {0}.&quot;, e.Message)\n         Return\n      End Try\n   End Sub &#39;Main\nEnd Class &#39;CounterDataCollectionExample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_CounterCreationDataCollection_Contains_System_Diagnostics_CounterCreationData_\">\r\n    \r\n            <a id=\"System_Diagnostics_CounterCreationDataCollection_Contains_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Contains(CounterCreationData)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether a <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> instance exists in the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Contains (System.Diagnostics.CounterCreationData value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> object to find in the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> object exists in the collection; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the Contains method to find a <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> object in a <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"CounterCreationDataCollection_Contains#1\">      String^ myCategoryName;\n      int numberOfCounters;\n      Console::Write( &quot;Enter the category Name :&quot; );\n      myCategoryName = Console::ReadLine();\n      // Check if the category already exists or not.\n      if (  !PerformanceCounterCategory::Exists( myCategoryName ) )\n      {\n         Console::Write( &quot;Enter the number of counters : &quot; );\n         numberOfCounters = Int32::Parse( Console::ReadLine() );\n         array&lt;CounterCreationData^&gt;^ myCounterCreationData =\n            gcnew array&lt;CounterCreationData^&gt;(numberOfCounters);\n         for ( int i = 0; i &lt; numberOfCounters; i++ )\n         {\n            Console::Write( &quot;Enter the counter name for {0} counter : &quot;, i );\n            myCounterCreationData[ i ] = gcnew CounterCreationData;\n            myCounterCreationData[ i ]-&gt;CounterName = Console::ReadLine();\n         }\n         CounterCreationDataCollection^ myCounterCollection =\n            gcnew CounterCreationDataCollection;\n         // Add the &#39;CounterCreationData[]&#39; to &#39;CounterCollection&#39;.\n         myCounterCollection-&gt;AddRange( myCounterCreationData );\n\n         PerformanceCounterCategory::Create( myCategoryName,\n            &quot;Sample Category&quot;, myCounterCollection );\n\n         for ( int i = 0; i &lt; numberOfCounters; i++ )\n         {\n            myCounter = gcnew PerformanceCounter( myCategoryName,\n               myCounterCreationData[ i ]-&gt;CounterName, &quot;&quot;, false );\n         }\n         if ( myCounterCreationData-&gt;Length &gt; 0 )\n         {\n            if ( myCounterCollection-&gt;Contains( myCounterCreationData[ 0 ] ) )\n            {\n               myCounterCollection-&gt;Remove( myCounterCreationData[ 0 ] );\n               Console::WriteLine( &quot;&#39;{0}&#39; counter is removed from the&quot; +\n                 &quot; CounterCreationDataCollection&quot;, myCounterCreationData[ 0 ]-&gt;CounterName );\n            }\n         }\n         else\n         {\n            Console::WriteLine( &quot;The counters does not exist&quot; );\n         }\n      }\n      else\n      {\n         Console::WriteLine( &quot;The category already exists&quot; );\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"CounterCreationDataCollection_Contains#1\">            string myCategoryName;\n            int numberOfCounters;\n            Console.Write(&quot;Enter the category Name :&quot;);\n            myCategoryName = Console.ReadLine();\n            // Check if the category already exists or not.\n            if (!PerformanceCounterCategory.Exists(myCategoryName))\n            {\n                Console.Write(&quot;Enter the number of counters : &quot;);\n                numberOfCounters = int.Parse(Console.ReadLine());\n                CounterCreationData[] myCounterCreationData =\n                   new CounterCreationData[numberOfCounters];\n                for (int i = 0; i &lt; numberOfCounters; i++)\n                {\n                    Console.Write(&quot;Enter the counter name for {0} counter : &quot;, i);\n                    myCounterCreationData[i] = new CounterCreationData();\n                    myCounterCreationData[i].CounterName = Console.ReadLine();\n                }\n                CounterCreationDataCollection myCounterCollection =\n                   new CounterCreationDataCollection();\n                // Add the &#39;CounterCreationData[]&#39; to &#39;CounterCollection&#39;.\n                myCounterCollection.AddRange(myCounterCreationData);\n\n                PerformanceCounterCategory.Create(myCategoryName,\n                   &quot;Sample Category&quot;,\n                PerformanceCounterCategoryType.SingleInstance, myCounterCollection);\n\n                if (myCounterCreationData.Length &gt; 0)\n                {\n                    if (myCounterCollection.Contains(myCounterCreationData[0]))\n                    {\n                        myCounterCollection.Remove(myCounterCreationData[0]);\n                        Console.WriteLine(&quot;&#39;{0}&#39; counter is removed from the &quot; +\n                           &quot;CounterCreationDataCollection&quot;, myCounterCreationData[0].CounterName);\n                    }\n                }\n                else\n                {\n                    Console.WriteLine(&quot;The counters does not exist&quot;);\n                }\n            }\n            else\n            {\n                Console.WriteLine(&quot;The category already exists&quot;);\n            }\n</code></pre><pre><code class=\"lang-vb\" name=\"CounterCreationDataCollection_Contains#1\">         Dim myCategoryName As String\n         Dim numberOfCounters As Integer\n         Console.Write(&quot;Enter the category Name :&quot;)\n         myCategoryName = Console.ReadLine()\n         &#39; Check if the category already exists or not.\n         If Not PerformanceCounterCategory.Exists(myCategoryName) Then\n            Console.Write(&quot;Enter the number of counters : &quot;)\n            numberOfCounters = Integer.Parse(Console.ReadLine())\n            Dim myCounterCreationData(numberOfCounters-1) As CounterCreationData\n            Dim i As Integer\n            For i = 0 To numberOfCounters - 1\n               Console.Write(&quot;Enter the counter name for {0} counter : &quot;, i)\n               myCounterCreationData(i) = New CounterCreationData()\n               myCounterCreationData(i).CounterName = Console.ReadLine()\n            Next i\n            Dim myCounterCollection As New CounterCreationDataCollection()\n            &#39; Add the &#39;CounterCreationData[]&#39; to &#39;CounterCollection&#39;.\n            myCounterCollection.AddRange(myCounterCreationData)\n\n                PerformanceCounterCategory.Create(myCategoryName, &quot;Sample Category&quot;, _\n                       PerformanceCounterCategoryType.SingleInstance, myCounterCollection)\n\n            &#39; Remove an instance of &#39;CounterCreationData&#39; from &#39;CounterCollection&#39;.\n            If myCounterCreationData.Length &gt; 0 Then\n               If myCounterCollection.Contains(myCounterCreationData(0)) Then\n                  myCounterCollection.Remove(myCounterCreationData(0))\n                  Console.WriteLine(&quot;&#39;{0}&#39; counter is removed from the &quot; + _\n                              &quot;CounterCreationDataCollection&quot;, myCounterCreationData(0).CounterName)\n               End If\n            Else\n               Console.WriteLine(&quot;The counters does not exist&quot;)\n            End If\n         Else\n            Console.WriteLine(&quot;The category already exists&quot;)\n         End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_CounterCreationDataCollection_CopyTo_System_Diagnostics_CounterCreationData___System_Int32_\">\r\n    \r\n            <a id=\"System_Diagnostics_CounterCreationDataCollection_CopyTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyTo(CounterCreationData[],Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Copies the elements of the <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> to an array, starting at the specified index of the array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CopyTo (System.Diagnostics.CounterCreationData[] array, int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> instances to add to the collection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The location at which to add the new instances.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>array</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> is less than 0.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The number of elements in the <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a> is greater than the available space from <code>index</code> to the end of the destination array.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_CounterCreationDataCollection_IndexOf_System_Diagnostics_CounterCreationData_\">\r\n    \r\n            <a id=\"System_Diagnostics_CounterCreationDataCollection_IndexOf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IndexOf(CounterCreationData)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the index of a <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> object in the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int IndexOf (System.Diagnostics.CounterCreationData value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> object to locate in the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The zero-based index of the specified <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a>, if it is found, in the collection; otherwise, -1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example retrieves <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> entries from a <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a> and uses the IndexOf method to display their names and indexes.  </p>\n<pre><code class=\"lang-cpp\" name=\"CounterCreationDataCollection_Insert_IndexOf#1\">      String^ myCategoryName;\n      int numberOfCounters;\n      Console::Write( &quot;Enter the category Name : &quot; );\n      myCategoryName = Console::ReadLine();\n      // Check if the category already exists or not.\n      if (  !PerformanceCounterCategory::Exists( myCategoryName ) )\n      {\n         Console::Write( &quot;Enter the number of counters : &quot; );\n         numberOfCounters = Int32::Parse( Console::ReadLine() );\n         array&lt;CounterCreationData^&gt;^ myCounterCreationData =\n            gcnew array&lt;CounterCreationData^&gt;(numberOfCounters);\n\n         for ( int i = 0; i &lt; numberOfCounters; i++ )\n         {\n            Console::Write( &quot;Enter the counter name for {0} counter &quot;, i );\n            myCounterCreationData[ i ] = gcnew CounterCreationData;\n            myCounterCreationData[ i ]-&gt;CounterName = Console::ReadLine();\n         }\n         CounterCreationDataCollection^ myCounterCollection =\n            gcnew CounterCreationDataCollection( myCounterCreationData );\n         CounterCreationData^ myInsertCounterCreationData = gcnew CounterCreationData(\n            &quot;CounterInsert&quot;,&quot;&quot;,PerformanceCounterType::NumberOfItems32 );\n         // Insert an instance of &#39;CounterCreationData&#39; in the &#39;CounterCreationDataCollection&#39;.\n         myCounterCollection-&gt;Insert( myCounterCollection-&gt;Count - 1,\n            myInsertCounterCreationData );\n         Console::WriteLine( &quot;&#39;{0}&#39; counter is inserted into &#39;CounterCreationDataCollection&#39;&quot;,\n            myInsertCounterCreationData-&gt;CounterName );\n         // Create the category.\n         PerformanceCounterCategory::Create( myCategoryName, &quot;Sample Category&quot;,\n            myCounterCollection );\n\n         for ( int i = 0; i &lt; numberOfCounters; i++ )\n         {\n            myCounter = gcnew PerformanceCounter( myCategoryName,\n               myCounterCreationData[ i ]-&gt;CounterName, &quot;&quot;, false );\n         }\n         Console::WriteLine( &quot;The index of &#39;{0}&#39; counter is {1}&quot;,\n            myInsertCounterCreationData-&gt;CounterName, myCounterCollection-&gt;IndexOf( myInsertCounterCreationData ) );\n      }\n      else\n      {\n         Console::WriteLine( &quot;The category already exists&quot; );\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"CounterCreationDataCollection_Insert_IndexOf#1\">            string myCategoryName;\n            int numberOfCounters;\n            Console.Write(&quot;Enter the category Name : &quot;);\n            myCategoryName = Console.ReadLine();\n            // Check if the category already exists or not.\n            if (!PerformanceCounterCategory.Exists(myCategoryName))\n            {\n                Console.Write(&quot;Enter the number of counters : &quot;);\n                numberOfCounters = int.Parse(Console.ReadLine());\n                CounterCreationData[] myCounterCreationData =\n                   new CounterCreationData[numberOfCounters];\n\n                for (int i = 0; i &lt; numberOfCounters; i++)\n                {\n                    Console.Write(&quot;Enter the counter name for {0} counter &quot;, i);\n                    myCounterCreationData[i] = new CounterCreationData();\n                    myCounterCreationData[i].CounterName = Console.ReadLine();\n                }\n                CounterCreationDataCollection myCounterCollection =\n                   new CounterCreationDataCollection(myCounterCreationData);\n                CounterCreationData myInsertCounterCreationData = new CounterCreationData(\n                   &quot;CounterInsert&quot;, &quot;&quot;, PerformanceCounterType.NumberOfItems32);\n                // Insert an instance of &#39;CounterCreationData&#39; in the &#39;CounterCreationDataCollection&#39;.\n                myCounterCollection.Insert(myCounterCollection.Count - 1,\n                   myInsertCounterCreationData);\n                Console.WriteLine(&quot;&#39;{0}&#39; counter is inserted into &#39;CounterCreationDataCollection&#39;&quot;,\n                   myInsertCounterCreationData.CounterName);\n                // Create the category.\n                PerformanceCounterCategory.Create(myCategoryName, &quot;Sample Category&quot;,\n                PerformanceCounterCategoryType.SingleInstance, myCounterCollection);\n\n                for (int i = 0; i &lt; numberOfCounters; i++)\n                {\n                    myCounter = new PerformanceCounter(myCategoryName,\n                       myCounterCreationData[i].CounterName, &quot;&quot;, false);\n                }\n                Console.WriteLine(&quot;The index of &#39;{0}&#39; counter is {1}&quot;,\n                   myInsertCounterCreationData.CounterName, myCounterCollection.IndexOf(myInsertCounterCreationData));\n            }\n            else\n            {\n                Console.WriteLine(&quot;The category already exists&quot;);\n            }\n</code></pre><pre><code class=\"lang-vb\" name=\"CounterCreationDataCollection_Insert_IndexOf#1\">            Dim myCategoryName As String\n            Dim numberOfCounters As Integer\n            Console.Write(&quot;Enter the category Name : &quot;)\n            myCategoryName = Console.ReadLine()\n            &#39; Check if the category already exists or not.\n            If Not PerformanceCounterCategory.Exists(myCategoryName) Then\n                Console.Write(&quot;Enter the number of counters : &quot;)\n                numberOfCounters = Integer.Parse(Console.ReadLine())\n                Dim myCounterCreationData(numberOfCounters - 1) As CounterCreationData\n\n                Dim i As Integer\n                For i = 0 To numberOfCounters - 1\n                    Console.Write(&quot;Enter the counter name for {0} counter &quot;, i)\n                    myCounterCreationData(i) = New CounterCreationData()\n                    myCounterCreationData(i).CounterName = Console.ReadLine()\n                Next i\n                Dim myCounterCollection As New CounterCreationDataCollection(myCounterCreationData)\n                Dim myInsertCounterCreationData As New CounterCreationData(&quot;CounterInsert&quot;, &quot;&quot;, _\n                                        PerformanceCounterType.NumberOfItems32)\n                &#39; Insert an instance of &#39;CounterCreationData&#39; in the &#39;CounterCreationDataCollection&#39;.\n                myCounterCollection.Insert(myCounterCollection.Count - 1, myInsertCounterCreationData)\n                Console.WriteLine(&quot;&#39;{0}&#39; counter is inserted into &#39;CounterCreationDataCollection&#39;&quot;, _\n                                        myInsertCounterCreationData.CounterName)\n                &#39; Create the category.\n                PerformanceCounterCategory.Create(myCategoryName, &quot;Sample Category&quot;, _\n                   PerformanceCounterCategoryType.SingleInstance, myCounterCollection)\n\n                For i = 0 To numberOfCounters - 1\n                    myCounter = New PerformanceCounter(myCategoryName, _\n                                                     myCounterCreationData(i).CounterName, &quot;&quot;, False)\n                Next i\n                Console.WriteLine(&quot;The index of &#39;{0}&#39; counter is {1}&quot;, _\n                   myInsertCounterCreationData.CounterName, myCounterCollection.IndexOf(myInsertCounterCreationData))\n            Else\n                Console.WriteLine(&quot;The category already exists&quot;)\n            End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_CounterCreationDataCollection_Insert_System_Int32_System_Diagnostics_CounterCreationData_\">\r\n    \r\n            <a id=\"System_Diagnostics_CounterCreationDataCollection_Insert_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Insert(Int32,CounterCreationData)</div>        \r\n          </div>\r\n    \r\n            <p>Inserts a <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> object into the collection, at the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Insert (int index, System.Diagnostics.CounterCreationData value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the location at which the <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> is to be inserted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> to insert into the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> is not a <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> is less than 0.  </p>\n<p> -or-  </p>\n<p> <code>index</code> is greater than the number of items in the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the Insert method to insert a <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> object into a <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"CounterCreationDataCollection_Insert_IndexOf#1\">      String^ myCategoryName;\n      int numberOfCounters;\n      Console::Write( &quot;Enter the category Name : &quot; );\n      myCategoryName = Console::ReadLine();\n      // Check if the category already exists or not.\n      if (  !PerformanceCounterCategory::Exists( myCategoryName ) )\n      {\n         Console::Write( &quot;Enter the number of counters : &quot; );\n         numberOfCounters = Int32::Parse( Console::ReadLine() );\n         array&lt;CounterCreationData^&gt;^ myCounterCreationData =\n            gcnew array&lt;CounterCreationData^&gt;(numberOfCounters);\n\n         for ( int i = 0; i &lt; numberOfCounters; i++ )\n         {\n            Console::Write( &quot;Enter the counter name for {0} counter &quot;, i );\n            myCounterCreationData[ i ] = gcnew CounterCreationData;\n            myCounterCreationData[ i ]-&gt;CounterName = Console::ReadLine();\n         }\n         CounterCreationDataCollection^ myCounterCollection =\n            gcnew CounterCreationDataCollection( myCounterCreationData );\n         CounterCreationData^ myInsertCounterCreationData = gcnew CounterCreationData(\n            &quot;CounterInsert&quot;,&quot;&quot;,PerformanceCounterType::NumberOfItems32 );\n         // Insert an instance of &#39;CounterCreationData&#39; in the &#39;CounterCreationDataCollection&#39;.\n         myCounterCollection-&gt;Insert( myCounterCollection-&gt;Count - 1,\n            myInsertCounterCreationData );\n         Console::WriteLine( &quot;&#39;{0}&#39; counter is inserted into &#39;CounterCreationDataCollection&#39;&quot;,\n            myInsertCounterCreationData-&gt;CounterName );\n         // Create the category.\n         PerformanceCounterCategory::Create( myCategoryName, &quot;Sample Category&quot;,\n            myCounterCollection );\n\n         for ( int i = 0; i &lt; numberOfCounters; i++ )\n         {\n            myCounter = gcnew PerformanceCounter( myCategoryName,\n               myCounterCreationData[ i ]-&gt;CounterName, &quot;&quot;, false );\n         }\n         Console::WriteLine( &quot;The index of &#39;{0}&#39; counter is {1}&quot;,\n            myInsertCounterCreationData-&gt;CounterName, myCounterCollection-&gt;IndexOf( myInsertCounterCreationData ) );\n      }\n      else\n      {\n         Console::WriteLine( &quot;The category already exists&quot; );\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"CounterCreationDataCollection_Insert_IndexOf#1\">            string myCategoryName;\n            int numberOfCounters;\n            Console.Write(&quot;Enter the category Name : &quot;);\n            myCategoryName = Console.ReadLine();\n            // Check if the category already exists or not.\n            if (!PerformanceCounterCategory.Exists(myCategoryName))\n            {\n                Console.Write(&quot;Enter the number of counters : &quot;);\n                numberOfCounters = int.Parse(Console.ReadLine());\n                CounterCreationData[] myCounterCreationData =\n                   new CounterCreationData[numberOfCounters];\n\n                for (int i = 0; i &lt; numberOfCounters; i++)\n                {\n                    Console.Write(&quot;Enter the counter name for {0} counter &quot;, i);\n                    myCounterCreationData[i] = new CounterCreationData();\n                    myCounterCreationData[i].CounterName = Console.ReadLine();\n                }\n                CounterCreationDataCollection myCounterCollection =\n                   new CounterCreationDataCollection(myCounterCreationData);\n                CounterCreationData myInsertCounterCreationData = new CounterCreationData(\n                   &quot;CounterInsert&quot;, &quot;&quot;, PerformanceCounterType.NumberOfItems32);\n                // Insert an instance of &#39;CounterCreationData&#39; in the &#39;CounterCreationDataCollection&#39;.\n                myCounterCollection.Insert(myCounterCollection.Count - 1,\n                   myInsertCounterCreationData);\n                Console.WriteLine(&quot;&#39;{0}&#39; counter is inserted into &#39;CounterCreationDataCollection&#39;&quot;,\n                   myInsertCounterCreationData.CounterName);\n                // Create the category.\n                PerformanceCounterCategory.Create(myCategoryName, &quot;Sample Category&quot;,\n                PerformanceCounterCategoryType.SingleInstance, myCounterCollection);\n\n                for (int i = 0; i &lt; numberOfCounters; i++)\n                {\n                    myCounter = new PerformanceCounter(myCategoryName,\n                       myCounterCreationData[i].CounterName, &quot;&quot;, false);\n                }\n                Console.WriteLine(&quot;The index of &#39;{0}&#39; counter is {1}&quot;,\n                   myInsertCounterCreationData.CounterName, myCounterCollection.IndexOf(myInsertCounterCreationData));\n            }\n            else\n            {\n                Console.WriteLine(&quot;The category already exists&quot;);\n            }\n</code></pre><pre><code class=\"lang-vb\" name=\"CounterCreationDataCollection_Insert_IndexOf#1\">            Dim myCategoryName As String\n            Dim numberOfCounters As Integer\n            Console.Write(&quot;Enter the category Name : &quot;)\n            myCategoryName = Console.ReadLine()\n            &#39; Check if the category already exists or not.\n            If Not PerformanceCounterCategory.Exists(myCategoryName) Then\n                Console.Write(&quot;Enter the number of counters : &quot;)\n                numberOfCounters = Integer.Parse(Console.ReadLine())\n                Dim myCounterCreationData(numberOfCounters - 1) As CounterCreationData\n\n                Dim i As Integer\n                For i = 0 To numberOfCounters - 1\n                    Console.Write(&quot;Enter the counter name for {0} counter &quot;, i)\n                    myCounterCreationData(i) = New CounterCreationData()\n                    myCounterCreationData(i).CounterName = Console.ReadLine()\n                Next i\n                Dim myCounterCollection As New CounterCreationDataCollection(myCounterCreationData)\n                Dim myInsertCounterCreationData As New CounterCreationData(&quot;CounterInsert&quot;, &quot;&quot;, _\n                                        PerformanceCounterType.NumberOfItems32)\n                &#39; Insert an instance of &#39;CounterCreationData&#39; in the &#39;CounterCreationDataCollection&#39;.\n                myCounterCollection.Insert(myCounterCollection.Count - 1, myInsertCounterCreationData)\n                Console.WriteLine(&quot;&#39;{0}&#39; counter is inserted into &#39;CounterCreationDataCollection&#39;&quot;, _\n                                        myInsertCounterCreationData.CounterName)\n                &#39; Create the category.\n                PerformanceCounterCategory.Create(myCategoryName, &quot;Sample Category&quot;, _\n                   PerformanceCounterCategoryType.SingleInstance, myCounterCollection)\n\n                For i = 0 To numberOfCounters - 1\n                    myCounter = New PerformanceCounter(myCategoryName, _\n                                                     myCounterCreationData(i).CounterName, &quot;&quot;, False)\n                Next i\n                Console.WriteLine(&quot;The index of &#39;{0}&#39; counter is {1}&quot;, _\n                   myInsertCounterCreationData.CounterName, myCounterCollection.IndexOf(myInsertCounterCreationData))\n            Else\n                Console.WriteLine(&quot;The category already exists&quot;)\n            End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_CounterCreationDataCollection_OnValidate_System_Object_\">\r\n    \r\n            <a id=\"System_Diagnostics_CounterCreationDataCollection_OnValidate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnValidate(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Checks the specified object to determine whether it is a valid <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnValidate (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object that will be validated.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> is not a <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OnValidate method determines whether the object specified in the <code>value</code> parameter is a <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> instance. If not, it throws an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_CounterCreationDataCollection_Remove_System_Diagnostics_CounterCreationData_\">\r\n    \r\n            <a id=\"System_Diagnostics_CounterCreationDataCollection_Remove_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Remove(CounterCreationData)</div>        \r\n          </div>\r\n    \r\n            <p>Removes a <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> object from the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void Remove (System.Diagnostics.CounterCreationData value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> to remove from the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> is not a <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> object.  </p>\n<p> -or-  </p>\n<p> <code>value</code> does not exist in the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the Remove method to delete a <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> object from the <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"CounterCreationDataCollection_Contains#2\">      String^ myCategoryName;\n      int numberOfCounters;\n      Console::Write( &quot;Enter the category Name :&quot; );\n      myCategoryName = Console::ReadLine();\n      // Check if the category already exists or not.\n      if (  !PerformanceCounterCategory::Exists( myCategoryName ) )\n      {\n         Console::Write( &quot;Enter the number of counters : &quot; );\n         numberOfCounters = Int32::Parse( Console::ReadLine() );\n         array&lt;CounterCreationData^&gt;^ myCounterCreationData =\n            gcnew array&lt;CounterCreationData^&gt;(numberOfCounters);\n         for ( int i = 0; i &lt; numberOfCounters; i++ )\n         {\n            Console::Write( &quot;Enter the counter name for {0} counter : &quot;, i );\n            myCounterCreationData[ i ] = gcnew CounterCreationData;\n            myCounterCreationData[ i ]-&gt;CounterName = Console::ReadLine();\n         }\n         CounterCreationDataCollection^ myCounterCollection =\n            gcnew CounterCreationDataCollection;\n         // Add the &#39;CounterCreationData[]&#39; to &#39;CounterCollection&#39;.\n         myCounterCollection-&gt;AddRange( myCounterCreationData );\n\n         PerformanceCounterCategory::Create( myCategoryName,\n            &quot;Sample Category&quot;, myCounterCollection );\n\n         for ( int i = 0; i &lt; numberOfCounters; i++ )\n         {\n            myCounter = gcnew PerformanceCounter( myCategoryName,\n               myCounterCreationData[ i ]-&gt;CounterName, &quot;&quot;, false );\n         }\n         if ( myCounterCreationData-&gt;Length &gt; 0 )\n         {\n            if ( myCounterCollection-&gt;Contains( myCounterCreationData[ 0 ] ) )\n            {\n               myCounterCollection-&gt;Remove( myCounterCreationData[ 0 ] );\n               Console::WriteLine( &quot;&#39;{0}&#39; counter is removed from the&quot; +\n                 &quot; CounterCreationDataCollection&quot;, myCounterCreationData[ 0 ]-&gt;CounterName );\n            }\n         }\n         else\n         {\n            Console::WriteLine( &quot;The counters does not exist&quot; );\n         }\n      }\n      else\n      {\n         Console::WriteLine( &quot;The category already exists&quot; );\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"CounterCreationDataCollection_Contains#2\">            string myCategoryName;\n            int numberOfCounters;\n            Console.Write(&quot;Enter the category Name :&quot;);\n            myCategoryName = Console.ReadLine();\n            // Check if the category already exists or not.\n            if (!PerformanceCounterCategory.Exists(myCategoryName))\n            {\n                Console.Write(&quot;Enter the number of counters : &quot;);\n                numberOfCounters = int.Parse(Console.ReadLine());\n                CounterCreationData[] myCounterCreationData =\n                   new CounterCreationData[numberOfCounters];\n                for (int i = 0; i &lt; numberOfCounters; i++)\n                {\n                    Console.Write(&quot;Enter the counter name for {0} counter : &quot;, i);\n                    myCounterCreationData[i] = new CounterCreationData();\n                    myCounterCreationData[i].CounterName = Console.ReadLine();\n                }\n                CounterCreationDataCollection myCounterCollection =\n                   new CounterCreationDataCollection();\n                // Add the &#39;CounterCreationData[]&#39; to &#39;CounterCollection&#39;.\n                myCounterCollection.AddRange(myCounterCreationData);\n\n                PerformanceCounterCategory.Create(myCategoryName,\n                   &quot;Sample Category&quot;,\n                PerformanceCounterCategoryType.SingleInstance, myCounterCollection);\n\n                if (myCounterCreationData.Length &gt; 0)\n                {\n                    if (myCounterCollection.Contains(myCounterCreationData[0]))\n                    {\n                        myCounterCollection.Remove(myCounterCreationData[0]);\n                        Console.WriteLine(&quot;&#39;{0}&#39; counter is removed from the &quot; +\n                           &quot;CounterCreationDataCollection&quot;, myCounterCreationData[0].CounterName);\n                    }\n                }\n                else\n                {\n                    Console.WriteLine(&quot;The counters does not exist&quot;);\n                }\n            }\n            else\n            {\n                Console.WriteLine(&quot;The category already exists&quot;);\n            }\n</code></pre><pre><code class=\"lang-vb\" name=\"CounterCreationDataCollection_Contains#2\">         Dim myCategoryName As String\n         Dim numberOfCounters As Integer\n         Console.Write(&quot;Enter the category Name :&quot;)\n         myCategoryName = Console.ReadLine()\n         &#39; Check if the category already exists or not.\n         If Not PerformanceCounterCategory.Exists(myCategoryName) Then\n            Console.Write(&quot;Enter the number of counters : &quot;)\n            numberOfCounters = Integer.Parse(Console.ReadLine())\n            Dim myCounterCreationData(numberOfCounters-1) As CounterCreationData\n            Dim i As Integer\n            For i = 0 To numberOfCounters - 1\n               Console.Write(&quot;Enter the counter name for {0} counter : &quot;, i)\n               myCounterCreationData(i) = New CounterCreationData()\n               myCounterCreationData(i).CounterName = Console.ReadLine()\n            Next i\n            Dim myCounterCollection As New CounterCreationDataCollection()\n            &#39; Add the &#39;CounterCreationData[]&#39; to &#39;CounterCollection&#39;.\n            myCounterCollection.AddRange(myCounterCreationData)\n\n                PerformanceCounterCategory.Create(myCategoryName, &quot;Sample Category&quot;, _\n                       PerformanceCounterCategoryType.SingleInstance, myCounterCollection)\n\n            &#39; Remove an instance of &#39;CounterCreationData&#39; from &#39;CounterCollection&#39;.\n            If myCounterCreationData.Length &gt; 0 Then\n               If myCounterCollection.Contains(myCounterCreationData(0)) Then\n                  myCounterCollection.Remove(myCounterCreationData(0))\n                  Console.WriteLine(&quot;&#39;{0}&#39; counter is removed from the &quot; + _\n                              &quot;CounterCreationDataCollection&quot;, myCounterCreationData(0).CounterName)\n               End If\n            Else\n               Console.WriteLine(&quot;The counters does not exist&quot;)\n            End If\n         Else\n            Console.WriteLine(&quot;The category already exists&quot;)\n         End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Diagnostics.CounterCreationDataCollection.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.CounterCreationDataCollection.yml\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.CounterCreationDataCollection\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.CounterCreationDataCollection..ctor\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.CounterCreationDataCollection.Add\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.CounterCreationDataCollection.AddRange\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.CounterCreationDataCollection.Contains\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.CounterCreationDataCollection.CopyTo\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.CounterCreationDataCollection.IndexOf\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.CounterCreationDataCollection.Insert\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.CounterCreationDataCollection.Item\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.CounterCreationDataCollection.OnValidate\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.CounterCreationDataCollection.Remove\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"b53bc83c-bc3b-52d1-f938-58b236efe346\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a strongly typed collection of  objects.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Diagnostics/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Diagnostics.CounterCreationDataCollection\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Diagnostics.CounterCreationDataCollection.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.CounterCreationDataCollection.yml","open_to_public_contributors":true,"api_name":["System.Diagnostics.CounterCreationDataCollection","System.Diagnostics.CounterCreationDataCollection..ctor","System.Diagnostics.CounterCreationDataCollection.Add","System.Diagnostics.CounterCreationDataCollection.AddRange","System.Diagnostics.CounterCreationDataCollection.Contains","System.Diagnostics.CounterCreationDataCollection.CopyTo","System.Diagnostics.CounterCreationDataCollection.IndexOf","System.Diagnostics.CounterCreationDataCollection.Insert","System.Diagnostics.CounterCreationDataCollection.Item","System.Diagnostics.CounterCreationDataCollection.OnValidate","System.Diagnostics.CounterCreationDataCollection.Remove"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Diagnostics.CounterCreationDataCollection","System::Diagnostics::CounterCreationDataCollection","System.Diagnostics.CounterCreationDataCollection.#ctor","System::Diagnostics::CounterCreationDataCollection::#ctor","System.Diagnostics.CounterCreationDataCollection.Add","System::Diagnostics::CounterCreationDataCollection::Add","System.Diagnostics.CounterCreationDataCollection.AddRange","System::Diagnostics::CounterCreationDataCollection::AddRange","System.Diagnostics.CounterCreationDataCollection.Contains","System::Diagnostics::CounterCreationDataCollection::Contains","System.Diagnostics.CounterCreationDataCollection.CopyTo","System::Diagnostics::CounterCreationDataCollection::CopyTo","System.Diagnostics.CounterCreationDataCollection.IndexOf","System::Diagnostics::CounterCreationDataCollection::IndexOf","System.Diagnostics.CounterCreationDataCollection.Insert","System::Diagnostics::CounterCreationDataCollection::Insert","System.Diagnostics.CounterCreationDataCollection.Item","System::Diagnostics::CounterCreationDataCollection::Item","System.Diagnostics.CounterCreationDataCollection.OnValidate","System::Diagnostics::CounterCreationDataCollection::OnValidate","System.Diagnostics.CounterCreationDataCollection.Remove","System::Diagnostics::CounterCreationDataCollection::Remove"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"b53bc83c-bc3b-52d1-f938-58b236efe346","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Diagnostics/CounterCreationDataCollection.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CounterCreationDataCollection class | Microsoft Docs","_op_ogTitle":"CounterCreationDataCollection class","description":"Provides a strongly typed collection of  objects.\n","toc_asset_id":"_splitted/System.Diagnostics/toc.json","toc_rel":"_splitted/System.Diagnostics/toc.json","source_url":"","ms.assetid":"System.Diagnostics.CounterCreationDataCollection","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.countercreationdatacollection","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.countercreationdatacollection","fileRelativePath":"System.Diagnostics.CounterCreationDataCollection.html"},"themesRelativePathToOutputRoot":"_themes/"}