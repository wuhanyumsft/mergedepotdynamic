{"content":"    \r\n    <h1 id=\"System_Security_Cryptography_RIPEMD160Managed\">\r\n      <span class=\"lang-csharp\">RIPEMD160Managed</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Computes the <a class=\"xref\" href=\"system.security.cryptography.ripemd160\" data-linktype=\"relative-path\">RIPEMD160</a> hash for the input data using the managed library.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class RIPEMD160Managed : System.Security.Cryptography.RIPEMD160</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.hashalgorithm\" data-linktype=\"relative-path\">HashAlgorithm</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.ripemd160\" data-linktype=\"relative-path\">System.Security.Cryptography.RIPEMD160</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">RIPEMD160Managed</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.hashalgorithm#System_Security_Cryptography_HashAlgorithm_CanReuseTransform\" data-linktype=\"relative-path\">CanReuseTransform</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.hashalgorithm#System_Security_Cryptography_HashAlgorithm_CanTransformMultipleBlocks\" data-linktype=\"relative-path\">CanTransformMultipleBlocks</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.hashalgorithm#System_Security_Cryptography_HashAlgorithm_Clear\" data-linktype=\"relative-path\">Clear()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.hashalgorithm#System_Security_Cryptography_HashAlgorithm_ComputeHash_System_Byte___\" data-linktype=\"relative-path\">ComputeHash(Byte[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.hashalgorithm#System_Security_Cryptography_HashAlgorithm_ComputeHash_System_Byte___System_Int32_System_Int32_\" data-linktype=\"relative-path\">ComputeHash(Byte[],Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.hashalgorithm#System_Security_Cryptography_HashAlgorithm_ComputeHash_System_IO_Stream_\" data-linktype=\"relative-path\">ComputeHash(Stream)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.hashalgorithm#System_Security_Cryptography_HashAlgorithm_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.hashalgorithm#System_Security_Cryptography_HashAlgorithm_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.hashalgorithm#System_Security_Cryptography_HashAlgorithm_Hash\" data-linktype=\"relative-path\">Hash</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.hashalgorithm#System_Security_Cryptography_HashAlgorithm_HashSize\" data-linktype=\"relative-path\">HashSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.hashalgorithm#System_Security_Cryptography_HashAlgorithm_HashSizeValue\" data-linktype=\"relative-path\">HashSizeValue</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.hashalgorithm#System_Security_Cryptography_HashAlgorithm_HashValue\" data-linktype=\"relative-path\">HashValue</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.hashalgorithm#System_Security_Cryptography_HashAlgorithm_InputBlockSize\" data-linktype=\"relative-path\">InputBlockSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.hashalgorithm#System_Security_Cryptography_HashAlgorithm_OutputBlockSize\" data-linktype=\"relative-path\">OutputBlockSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.hashalgorithm#System_Security_Cryptography_HashAlgorithm_State\" data-linktype=\"relative-path\">State</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.hashalgorithm#System_Security_Cryptography_HashAlgorithm_TransformBlock_System_Byte___System_Int32_System_Int32_System_Byte___System_Int32_\" data-linktype=\"relative-path\">TransformBlock(Byte[],Int32,Int32,Byte[],Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.hashalgorithm#System_Security_Cryptography_HashAlgorithm_TransformFinalBlock_System_Byte___System_Int32_System_Int32_\" data-linktype=\"relative-path\">TransformFinalBlock(Byte[],Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.ripemd160#System_Security_Cryptography_RIPEMD160_Create\" data-linktype=\"relative-path\">Create()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.ripemd160#System_Security_Cryptography_RIPEMD160_Create_System_String_\" data-linktype=\"relative-path\">Create(String)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>RIPEMD-160 is a 160-bit cryptographic hash function. It is intended for use as a secure replacement for the 128-bit hash functions MD4, MD5, and RIPEMD. RIPEMD was developed in the framework of the EU project RIPE (RACE Integrity Primitives Evaluation, 1988-1992).  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> RIPEMD160Managed has been superseded by the Secure Hash Algorithms SHA-256 and SHA-512 and their derived classes. <a class=\"xref\" href=\"system.security.cryptography.sha256managed\" data-linktype=\"relative-path\">SHA256Managed</a> and <a class=\"xref\" href=\"system.security.cryptography.sha512managed\" data-linktype=\"relative-path\">SHA512Managed</a> offer better security and performance than RIPEMD160Managed. Use RIPEMD160Managed only for compatibility with legacy applications and data.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_RIPEMD160Managed__ctor\" data-linktype=\"self-bookmark\">RIPEMD160Managed()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.ripemd160\" data-linktype=\"relative-path\">RIPEMD160</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_RIPEMD160Managed_HashCore_System_Byte___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">HashCore(Byte[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, routes data written to the object into the <a class=\"xref\" href=\"system.security.cryptography.ripemd160\" data-linktype=\"relative-path\">RIPEMD160</a> hash algorithm for computing the hash.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_RIPEMD160Managed_HashFinal\" data-linktype=\"self-bookmark\">HashFinal()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_RIPEMD160Managed_Initialize\" data-linktype=\"self-bookmark\">Initialize()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes an instance of the <a class=\"xref\" href=\"system.security.cryptography.ripemd160managed\" data-linktype=\"relative-path\">RIPEMD160Managed</a> class using the managed library.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_RIPEMD160Managed__ctor\">\r\n    \r\n            <a id=\"System_Security_Cryptography_RIPEMD160Managed__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RIPEMD160Managed()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.ripemd160\" data-linktype=\"relative-path\">RIPEMD160</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public RIPEMD160Managed ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The policy is not compliant with the FIPS algorithm.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The hash is used as a unique value of fixed size representing a large amount of data. Hashes of two sets of data should match if and only if the corresponding data also matches. Small changes to the data result in large unpredictable changes in the hash.  </p>\n<p> The hash size for the <a class=\"xref\" href=\"system.security.cryptography.ripemd160\" data-linktype=\"relative-path\">RIPEMD160</a> algorithm is 160 bits.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example computes the <a class=\"xref\" href=\"system.security.cryptography.ripemd160managed\" data-linktype=\"relative-path\">RIPEMD160Managed</a> class hash for all files in a directory.  </p>\n<pre><code class=\"lang-cpp\" name=\"RIPEMD160#1\">using namespace System;\nusing namespace System::IO;\nusing namespace System::Security::Cryptography;\n\n// Print the byte array in a readable format.\nvoid PrintByteArray( array&lt;Byte&gt;^array )\n{\n   int i;\n   for ( i = 0; i &lt; array-&gt;Length; i++ )\n   {\n      Console::Write( String::Format( &quot;{0:X2}&quot;, array[ i ] ) );\n      if ( (i % 4) == 3 )\n            Console::Write( &quot; &quot; );\n\n   }\n   Console::WriteLine();\n}\n\nint main()\n{\n   array&lt;String^&gt;^args = Environment::GetCommandLineArgs();\n   if ( args-&gt;Length &lt; 2 )\n   {\n      Console::WriteLine( &quot;Usage: hashdir &lt;directory&gt;&quot; );\n      return 0;\n   }\n\n   try\n   {\n      \n      // Create a DirectoryInfo object representing the specified directory.\n      DirectoryInfo^ dir = gcnew DirectoryInfo( args[ 1 ] );\n      \n      // Get the FileInfo objects for every file in the directory.\n      array&lt;FileInfo^&gt;^files = dir-&gt;GetFiles();\n      \n      // Initialize a RIPE160 hash object.\n      RIPEMD160 ^ myRIPEMD160 = RIPEMD160Managed::Create();\n      array&lt;Byte&gt;^hashValue;\n      \n      // Compute and print the hash values for each file in directory.\n      System::Collections::IEnumerator^ myEnum = files-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         FileInfo^ fInfo = safe_cast&lt;FileInfo^&gt;(myEnum-&gt;Current);\n         \n         // Create a fileStream for the file.\n         FileStream^ fileStream = fInfo-&gt;Open( FileMode::Open );\n         \n         // Compute the hash of the fileStream.\n         hashValue = myRIPEMD160-&gt;ComputeHash( fileStream );\n         \n         // Write the name of the file to the Console.\n         Console::Write( &quot;{0}: &quot;, fInfo-&gt;Name );\n         \n         // Write the hash value to the Console.\n         PrintByteArray( hashValue );\n         \n         // Close the file.\n         fileStream-&gt;Close();\n      }\n      return 0;\n   }\n   catch ( DirectoryNotFoundException^ ) \n   {\n      Console::WriteLine( &quot;Error: The directory specified could not be found.&quot; );\n   }\n   catch ( IOException^ ) \n   {\n      Console::WriteLine( &quot;Error: A file in the directory could not be accessed.&quot; );\n   }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"RIPEMD160#1\">Imports System\nImports System.IO\nImports System.Security.Cryptography\nImports System.Windows.Forms\n\nPublic Class HashDirectory\n\n    Public Shared Sub Main(ByVal args() As String)\n        Dim directory As String\n        If args.Length &lt; 1 Then\n            Dim fdb As New FolderBrowserDialog\n            Dim dr As DialogResult = fdb.ShowDialog()\n            If (dr = DialogResult.OK) Then\n                directory = fdb.SelectedPath\n            Else\n                Console.WriteLine(&quot;No directory selected&quot;)\n                Return\n            End If\n        Else\n            directory = args(0)\n        End If\n        Try\n            &#39; Create a DirectoryInfo object representing the specified directory.\n            Dim dir As New DirectoryInfo(directory)\n            &#39; Get the FileInfo objects for every file in the directory.\n            Dim files As FileInfo() = dir.GetFiles()\n            &#39; Initialize a RIPE160 hash object.\n            Dim myRIPEMD160 As RIPEMD160 = RIPEMD160Managed.Create()\n            Dim hashValue() As Byte\n            &#39; Compute and print the hash values for each file in directory.\n            Dim fInfo As FileInfo\n            For Each fInfo In files\n                &#39; Create a fileStream for the file.\n                Dim fileStream As FileStream = fInfo.Open(FileMode.Open)\n                &#39; Be sure it&#39;s positioned to the beginning of the stream.\n                fileStream.Position = 0\n                &#39; Compute the hash of the fileStream.\n                hashValue = myRIPEMD160.ComputeHash(fileStream)\n                &#39; Write the name of the file to the Console.\n                Console.Write(fInfo.Name + &quot;: &quot;)\n                &#39; Write the hash value to the Console.\n                PrintByteArray(hashValue)\n                &#39; Close the file.\n                fileStream.Close()\n            Next fInfo\n            Return\n        Catch DExc As DirectoryNotFoundException\n            Console.WriteLine(&quot;Error: The directory specified could not be found.&quot;)\n        Catch IOExc As IOException\n            Console.WriteLine(&quot;Error: A file in the directory could not be accessed.&quot;)\n        End Try\n\n    End Sub\n\n    &#39; Print the byte array in a readable format.\n    Public Shared Sub PrintByteArray(ByVal array() As Byte)\n        Dim i As Integer\n        For i = 0 To array.Length - 1\n            Console.Write(String.Format(&quot;{0:X2}&quot;, array(i)))\n            If i Mod 4 = 3 Then\n                Console.Write(&quot; &quot;)\n            End If\n        Next i\n        Console.WriteLine()\n\n    End Sub &#39;PrintByteArray\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"RIPEMD160#1\">using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Windows.Forms;\n\npublic class HashDirectory\n{\n\n    [STAThreadAttribute]\n    public static void Main(String[] args)\n    {\n        string directory = &quot;&quot;;\n        if (args.Length &lt; 1)\n        {\n            FolderBrowserDialog fbd = new FolderBrowserDialog();\n            DialogResult dr = fbd.ShowDialog();\n            if (dr == DialogResult.OK)\n                directory = fbd.SelectedPath;\n            else\n            {\n                Console.WriteLine(&quot;No directory selected.&quot;);\n                return;\n            }\n        }\n        else\n            directory = args[0];\n        try\n        {\n            // Create a DirectoryInfo object representing the specified directory.\n            DirectoryInfo dir = new DirectoryInfo(directory);\n            // Get the FileInfo objects for every file in the directory.\n            FileInfo[] files = dir.GetFiles();\n            // Initialize a RIPE160 hash object.\n            RIPEMD160 myRIPEMD160 = RIPEMD160Managed.Create();\n            byte[] hashValue;\n            // Compute and print the hash values for each file in directory.\n            foreach (FileInfo fInfo in files)\n            {\n                // Create a fileStream for the file.\n                FileStream fileStream = fInfo.Open(FileMode.Open);\n                // Be sure it&#39;s positioned to the beginning of the stream.\n                fileStream.Position = 0;\n                // Compute the hash of the fileStream.\n                hashValue = myRIPEMD160.ComputeHash(fileStream);\n                // Write the name of the file to the Console.\n                Console.Write(fInfo.Name + &quot;: &quot;);\n                // Write the hash value to the Console.\n                PrintByteArray(hashValue);\n                // Close the file.\n                fileStream.Close();\n            }\n            return;\n        }\n        catch (DirectoryNotFoundException)\n        {\n            Console.WriteLine(&quot;Error: The directory specified could not be found.&quot;);\n        }\n        catch (IOException)\n        {\n            Console.WriteLine(&quot;Error: A file in the directory could not be accessed.&quot;);\n        }\n    }\n    // Print the byte array in a readable format.\n    public static void PrintByteArray(byte[] array)\n    {\n        int i;\n        for (i = 0; i &lt; array.Length; i++)\n        {\n            Console.Write(String.Format(&quot;{0:X2}&quot;, array[i]));\n            if ((i % 4) == 3) Console.Write(&quot; &quot;);\n        }\n        Console.WriteLine();\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_RIPEMD160Managed_HashCore_System_Byte___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_RIPEMD160Managed_HashCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HashCore(Byte[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, routes data written to the object into the <a class=\"xref\" href=\"system.security.cryptography.ripemd160\" data-linktype=\"relative-path\">RIPEMD160</a> hash algorithm for computing the hash.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void HashCore (byte[] rgb, int ibStart, int cbSize);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rgb</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The input data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ibStart</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The offset into the byte array from which to begin using data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cbSize</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes in the array to use as data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is not called by application code.  </p>\n<p> This abstract method performs the hash computation. Every write to the cryptographic stream object passes the data through this method. For each block of data, this method updates the state of the hash object so a correct hash value is returned at the end of the data stream.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_RIPEMD160Managed_HashFinal\">\r\n    \r\n            <a id=\"System_Security_Cryptography_RIPEMD160Managed_HashFinal_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HashFinal()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override byte[] HashFinal ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>The computed hash code in a byte array.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is not called by application code. This method finalizes any partial computation and returns the correct hash value of the data stream.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_RIPEMD160Managed_Initialize\">\r\n    \r\n            <a id=\"System_Security_Cryptography_RIPEMD160Managed_Initialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Initialize()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes an instance of the <a class=\"xref\" href=\"system.security.cryptography.ripemd160managed\" data-linktype=\"relative-path\">RIPEMD160Managed</a> class using the managed library.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Initialize ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>RIPEMD-160 is a 160-bit cryptographic hash function. It is intended for use as a secure replacement for the 128-bit hash functions MD4, MD5, and RIPEMD. RIPEMD was developed in the framework of the EU project RIPE (RACE Integrity Primitives Evaluation, 1988-1992).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.RIPEMD160Managed.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.RIPEMD160Managed.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.RIPEMD160Managed\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.RIPEMD160Managed..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.RIPEMD160Managed.HashCore\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.RIPEMD160Managed.HashFinal\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.RIPEMD160Managed.Initialize\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"4e6aa901-8755-7b55-1f25-187273e25b3f\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Security.Cryptography\\RIPEMD160Managed.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Computes the  hash for the input data using the managed library.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Cryptography/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.RIPEMD160Managed\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.RIPEMD160Managed.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.RIPEMD160Managed.yml","open_to_public_contributors":true,"api_name":["System.Security.Cryptography.RIPEMD160Managed","System.Security.Cryptography.RIPEMD160Managed..ctor","System.Security.Cryptography.RIPEMD160Managed.HashCore","System.Security.Cryptography.RIPEMD160Managed.HashFinal","System.Security.Cryptography.RIPEMD160Managed.Initialize"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.RIPEMD160Managed","System::Security::Cryptography::RIPEMD160Managed","System.Security.Cryptography.RIPEMD160Managed.#ctor","System::Security::Cryptography::RIPEMD160Managed::#ctor","System.Security.Cryptography.RIPEMD160Managed.HashCore","System::Security::Cryptography::RIPEMD160Managed::HashCore","System.Security.Cryptography.RIPEMD160Managed.HashFinal","System::Security::Cryptography::RIPEMD160Managed::HashFinal","System.Security.Cryptography.RIPEMD160Managed.Initialize","System::Security::Cryptography::RIPEMD160Managed::Initialize"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"4e6aa901-8755-7b55-1f25-187273e25b3f","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Security.Cryptography\\RIPEMD160Managed.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Cryptography/RIPEMD160Managed.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"RIPEMD160Managed class | Microsoft Docs","_op_ogTitle":"RIPEMD160Managed class","description":"Computes the  hash for the input data using the managed library.\n","toc_asset_id":"_splitted/System.Security.Cryptography/toc.json","toc_rel":"_splitted/System.Security.Cryptography/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.RIPEMD160Managed","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.ripemd160managed","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.ripemd160managed","fileRelativePath":"System.Security.Cryptography.RIPEMD160Managed.html"},"themesRelativePathToOutputRoot":"_themes/"}