{"content":"    \r\n    <h1 id=\"System_Net_IPEndPoint\">\r\n      <span class=\"lang-csharp\">IPEndPoint</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a network endpoint as an IP address and a port number.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class IPEndPoint : System.Net.EndPoint</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.endpoint\" data-linktype=\"relative-path\">System.Net.EndPoint</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">IPEndPoint</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The IPEndPoint class contains the host and local or remote port information needed by an application to connect to a service on a host. By combining the host&#39;s IP address and port number of a service, the IPEndPoint class forms a connection point to a service.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_IPEndPoint__ctor_System_Int64_System_Int32_\" data-linktype=\"self-bookmark\">IPEndPoint(Int64,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a> class with the specified address and port number.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_IPEndPoint__ctor_System_Net_IPAddress_System_Int32_\" data-linktype=\"self-bookmark\">IPEndPoint(IPAddress,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a> class with the specified address and port number.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_IPEndPoint_MaxPort\" data-linktype=\"self-bookmark\">MaxPort</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies the maximum value that can be assigned to the <span class=\"xref\">stem.Net.IPEndPoint.Port*</span> property. The MaxPort value is set to 0x0000FFFF. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_IPEndPoint_MinPort\" data-linktype=\"self-bookmark\">MinPort</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies the minimum value that can be assigned to the <span class=\"xref\">stem.Net.IPEndPoint.Port*</span> property. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_IPEndPoint_Address\" data-linktype=\"self-bookmark\">Address</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the IP address of the endpoint.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_IPEndPoint_AddressFamily\" data-linktype=\"self-bookmark\">AddressFamily</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the Internet Protocol (IP) address family.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_IPEndPoint_Port\" data-linktype=\"self-bookmark\">Port</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the port number of the endpoint.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_IPEndPoint_Create_System_Net_SocketAddress_\" data-linktype=\"self-bookmark\">Create(SocketAddress)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an endpoint from a socket address.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_IPEndPoint_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> is equal to the current <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_IPEndPoint_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a hash value for a <a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_IPEndPoint_Serialize\" data-linktype=\"self-bookmark\">Serialize()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serializes endpoint information into a <a class=\"xref\" href=\"system.net.socketaddress\" data-linktype=\"relative-path\">SocketAddress</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_IPEndPoint_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the IP address and port number of the specified endpoint.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_IPEndPoint__ctor_System_Int64_System_Int32_\">\r\n    \r\n            <a id=\"System_Net_IPEndPoint__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IPEndPoint(Int64,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a> class with the specified address and port number.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public IPEndPoint (long address, int port);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The IP address of the Internet host.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>port</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The port number associated with the <code>address</code>, or 0 to specify any available port. <code>port</code> is in host order.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>port</code> is less than <a class=\"xref\" href=\"system.net.ipendpoint#System_Net_IPEndPoint_MinPort\" data-linktype=\"relative-path\">MinPort</a>.  </p>\n<p> -or-  </p>\n<p> <code>port</code> is greater than <a class=\"xref\" href=\"system.net.ipendpoint#System_Net_IPEndPoint_MaxPort\" data-linktype=\"relative-path\">MaxPort</a>.  </p>\n<p> -or-  </p>\n<p> <code>address</code> is less than 0 or greater than 0x00000000FFFFFFFF.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the specified IP address and port number to create an <a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"IPEndPoint_Properties#4\">      IPAddress^ hostIPAddress1 = (Dns::Resolve( hostString1 ))-&gt;AddressList[ 0 ];\n      Console::WriteLine( hostIPAddress1 );\n      IPEndPoint^ hostIPEndPoint = gcnew IPEndPoint( hostIPAddress1,80 );\n      Console::WriteLine( &quot;<br>IPEndPoint information:{0}&quot;, hostIPEndPoint );\n      Console::WriteLine( &quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;Maximum allowed Port Address :{0}&quot;, IPEndPoint::MaxPort );\n      Console::WriteLine( &quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;Minimum allowed Port Address :{0}&quot;, (int^)IPEndPoint::MinPort );\n      Console::WriteLine( &quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;Address Family :{0}&quot;, hostIPEndPoint-&gt;AddressFamily );\n</code></pre><pre><code class=\"lang-vb\" name=\"IPEndPoint_Properties#4\">            Dim hostIPAddress1 As IPAddress = Dns.Resolve(hostString1).AddressList(0)\n            Dim hostIPEndPoint As New IPEndPoint(hostIPAddress1, 80)\n            Console.WriteLine((ControlChars.Cr + &quot;IPEndPoint information:&quot; + hostIPEndPoint.ToString()))\n            Console.WriteLine((ControlChars.Cr + ControlChars.Tab + &quot;Maximum allowed Port Address :&quot; + IPEndPoint.MaxPort.ToString()))\n            Console.WriteLine((ControlChars.Cr + ControlChars.Tab + &quot;Minimum allowed Port Address :&quot; + IPEndPoint.MinPort.ToString()))\n            Console.WriteLine((ControlChars.Cr + ControlChars.Tab + &quot;Address Family :&quot; + hostIPEndPoint.AddressFamily.ToString()))\n</code></pre><pre><code class=\"lang-cs\" name=\"IPEndPoint_Properties#4\">\n\t\t\n\n\t\t\tIPAddress hostIPAddress1 = (Dns.Resolve(hostString1)).AddressList[0];\n\t\t\tConsole.WriteLine(hostIPAddress1.ToString());\n\t\t\tIPEndPoint hostIPEndPoint = new IPEndPoint(hostIPAddress1,80);\n\t\t\tConsole.WriteLine(&quot;<br>IPEndPoint information:&quot; + hostIPEndPoint.ToString());\n\t\t\tConsole.WriteLine(&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;Maximum allowed Port Address :&quot; + IPEndPoint.MaxPort);\n\t\t\tConsole.WriteLine(&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;Minimum allowed Port Address :&quot; + IPEndPoint.MinPort);\n\t\t\tConsole.WriteLine(&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;Address Family :&quot; + hostIPEndPoint.AddressFamily);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_IPEndPoint__ctor_System_Net_IPAddress_System_Int32_\">\r\n    \r\n            <a id=\"System_Net_IPEndPoint__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IPEndPoint(IPAddress,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a> class with the specified address and port number.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public IPEndPoint (System.Net.IPAddress address, int port);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>port</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The port number associated with the <code>address</code>, or 0 to specify any available port. <code>port</code> is in host order.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>port</code> is less than <a class=\"xref\" href=\"system.net.ipendpoint#System_Net_IPEndPoint_MinPort\" data-linktype=\"relative-path\">MinPort</a>.  </p>\n<p> -or-  </p>\n<p> <code>port</code> is greater than <a class=\"xref\" href=\"system.net.ipendpoint#System_Net_IPEndPoint_MaxPort\" data-linktype=\"relative-path\">MaxPort</a>.  </p>\n<p> -or-  </p>\n<p> <code>address</code> is less than 0 or greater than 0x00000000FFFFFFFF.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"System.Net.IPEndPoint#2\">      // Obtain the IP address from the list of IP addresses associated with the server.\n      System::Collections::IEnumerator^ myEnum = host-&gt;AddressList-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         IPAddress^ address = safe_cast&lt;IPAddress^&gt;(myEnum-&gt;Current);\n         IPEndPoint^ endpoint = gcnew IPEndPoint( address,port );\n         tempSocket = gcnew Socket( endpoint-&gt;AddressFamily,SocketType::Stream,ProtocolType::Tcp );\n         tempSocket-&gt;Connect( endpoint );\n         if ( tempSocket-&gt;Connected )\n         {\n            // Display the endpoint information.\n            displayEndpointInfo( endpoint );\n\n            // Serialize the endpoint to obtain a SocketAddress object.\n            serializedSocketAddress = serializeEndpoint( endpoint );\n            break;\n         }\n         else\n                  continue;\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Net.IPEndPoint#2\">          &#39; Obtain the IP address from the list of IP addresses associated with the server.\n          Dim address As IPAddress\n          For Each address In host.AddressList\n            Dim endpoint As New IPEndPoint(address, port)\n\n\n            tempSocket = New Socket(endpoint.AddressFamily, SocketType.Stream, ProtocolType.Tcp)\n\n            tempSocket.Connect(endpoint)\n\n            If tempSocket.Connected Then\n              &#39; Display the endpoint information.\n              displayEndpointInfo(endpoint)\n              &#39; Serialize the endpoint to obtain a SocketAddress object.\n              serializedSocketAddress = serializeEndpoint(endpoint)\n              Exit For\n\n            End If\n\n          Next address\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Net.IPEndPoint#2\">        // Obtain the IP address from the list of IP addresses associated with the server.\n        foreach(IPAddress address in host.AddressList)\n        {\n          IPEndPoint endpoint = new IPEndPoint(address, port);\n\n            \n          tempSocket = \n            new Socket(endpoint.AddressFamily, SocketType.Stream, ProtocolType.Tcp);\n\n          tempSocket.Connect(endpoint);\n\n          if(tempSocket.Connected)\n          {\n            // Display the endpoint information.\n            displayEndpointInfo(endpoint);\n            // Serialize the endpoint to obtain a SocketAddress object.\n            serializedSocketAddress = serializeEndpoint(endpoint);\n            break;\n          }\n          else\n            continue;\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_IPEndPoint_MaxPort\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MaxPort</div>        \r\n          </div>\r\n    \r\n            <p>Specifies the maximum value that can be assigned to the <span class=\"xref\">stem.Net.IPEndPoint.Port*</span> property. The MaxPort value is set to 0x0000FFFF. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const int MaxPort = 65535;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the MaxPort property to print the maximum value that can be assigned to the <a class=\"xref\" href=\"system.net.ipendpoint#System_Net_IPEndPoint_Port_\" data-linktype=\"relative-path\">Port</a> property.  </p>\n<pre><code class=\"lang-cpp\" name=\"IPEndPoint_Properties#4\">      IPAddress^ hostIPAddress1 = (Dns::Resolve( hostString1 ))-&gt;AddressList[ 0 ];\n      Console::WriteLine( hostIPAddress1 );\n      IPEndPoint^ hostIPEndPoint = gcnew IPEndPoint( hostIPAddress1,80 );\n      Console::WriteLine( &quot;<br>IPEndPoint information:{0}&quot;, hostIPEndPoint );\n      Console::WriteLine( &quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;Maximum allowed Port Address :{0}&quot;, IPEndPoint::MaxPort );\n      Console::WriteLine( &quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;Minimum allowed Port Address :{0}&quot;, (int^)IPEndPoint::MinPort );\n      Console::WriteLine( &quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;Address Family :{0}&quot;, hostIPEndPoint-&gt;AddressFamily );\n</code></pre><pre><code class=\"lang-vb\" name=\"IPEndPoint_Properties#4\">            Dim hostIPAddress1 As IPAddress = Dns.Resolve(hostString1).AddressList(0)\n            Dim hostIPEndPoint As New IPEndPoint(hostIPAddress1, 80)\n            Console.WriteLine((ControlChars.Cr + &quot;IPEndPoint information:&quot; + hostIPEndPoint.ToString()))\n            Console.WriteLine((ControlChars.Cr + ControlChars.Tab + &quot;Maximum allowed Port Address :&quot; + IPEndPoint.MaxPort.ToString()))\n            Console.WriteLine((ControlChars.Cr + ControlChars.Tab + &quot;Minimum allowed Port Address :&quot; + IPEndPoint.MinPort.ToString()))\n            Console.WriteLine((ControlChars.Cr + ControlChars.Tab + &quot;Address Family :&quot; + hostIPEndPoint.AddressFamily.ToString()))\n</code></pre><pre><code class=\"lang-cs\" name=\"IPEndPoint_Properties#4\">\n\t\t\n\n\t\t\tIPAddress hostIPAddress1 = (Dns.Resolve(hostString1)).AddressList[0];\n\t\t\tConsole.WriteLine(hostIPAddress1.ToString());\n\t\t\tIPEndPoint hostIPEndPoint = new IPEndPoint(hostIPAddress1,80);\n\t\t\tConsole.WriteLine(&quot;<br>IPEndPoint information:&quot; + hostIPEndPoint.ToString());\n\t\t\tConsole.WriteLine(&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;Maximum allowed Port Address :&quot; + IPEndPoint.MaxPort);\n\t\t\tConsole.WriteLine(&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;Minimum allowed Port Address :&quot; + IPEndPoint.MinPort);\n\t\t\tConsole.WriteLine(&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;Address Family :&quot; + hostIPEndPoint.AddressFamily);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_IPEndPoint_MinPort\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MinPort</div>        \r\n          </div>\r\n    \r\n            <p>Specifies the minimum value that can be assigned to the <span class=\"xref\">stem.Net.IPEndPoint.Port*</span> property. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const int MinPort = 0;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the MinPort property to print the minimum value that can be assigned to the <a class=\"xref\" href=\"system.net.ipendpoint#System_Net_IPEndPoint_Port_\" data-linktype=\"relative-path\">Port</a> property.  </p>\n<pre><code class=\"lang-cpp\" name=\"IPEndPoint_Properties#4\">      IPAddress^ hostIPAddress1 = (Dns::Resolve( hostString1 ))-&gt;AddressList[ 0 ];\n      Console::WriteLine( hostIPAddress1 );\n      IPEndPoint^ hostIPEndPoint = gcnew IPEndPoint( hostIPAddress1,80 );\n      Console::WriteLine( &quot;<br>IPEndPoint information:{0}&quot;, hostIPEndPoint );\n      Console::WriteLine( &quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;Maximum allowed Port Address :{0}&quot;, IPEndPoint::MaxPort );\n      Console::WriteLine( &quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;Minimum allowed Port Address :{0}&quot;, (int^)IPEndPoint::MinPort );\n      Console::WriteLine( &quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;Address Family :{0}&quot;, hostIPEndPoint-&gt;AddressFamily );\n</code></pre><pre><code class=\"lang-vb\" name=\"IPEndPoint_Properties#4\">            Dim hostIPAddress1 As IPAddress = Dns.Resolve(hostString1).AddressList(0)\n            Dim hostIPEndPoint As New IPEndPoint(hostIPAddress1, 80)\n            Console.WriteLine((ControlChars.Cr + &quot;IPEndPoint information:&quot; + hostIPEndPoint.ToString()))\n            Console.WriteLine((ControlChars.Cr + ControlChars.Tab + &quot;Maximum allowed Port Address :&quot; + IPEndPoint.MaxPort.ToString()))\n            Console.WriteLine((ControlChars.Cr + ControlChars.Tab + &quot;Minimum allowed Port Address :&quot; + IPEndPoint.MinPort.ToString()))\n            Console.WriteLine((ControlChars.Cr + ControlChars.Tab + &quot;Address Family :&quot; + hostIPEndPoint.AddressFamily.ToString()))\n</code></pre><pre><code class=\"lang-cs\" name=\"IPEndPoint_Properties#4\">\n\t\t\n\n\t\t\tIPAddress hostIPAddress1 = (Dns.Resolve(hostString1)).AddressList[0];\n\t\t\tConsole.WriteLine(hostIPAddress1.ToString());\n\t\t\tIPEndPoint hostIPEndPoint = new IPEndPoint(hostIPAddress1,80);\n\t\t\tConsole.WriteLine(&quot;<br>IPEndPoint information:&quot; + hostIPEndPoint.ToString());\n\t\t\tConsole.WriteLine(&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;Maximum allowed Port Address :&quot; + IPEndPoint.MaxPort);\n\t\t\tConsole.WriteLine(&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;Minimum allowed Port Address :&quot; + IPEndPoint.MinPort);\n\t\t\tConsole.WriteLine(&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;Address Family :&quot; + hostIPEndPoint.AddressFamily);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_IPEndPoint_Address\">\r\n    \r\n            <a id=\"System_Net_IPEndPoint_Address_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Address</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the IP address of the endpoint.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.IPAddress Address { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> instance containing the IP address of the endpoint.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example sets the Address property using the <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> specified.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Net.IPEndPoint#3\">void displayEndpointInfo( IPEndPoint^ endpoint )\n{\n   Console::WriteLine( &quot;Endpoint-&gt;Address : {0}&quot;, endpoint-&gt;Address );\n   Console::WriteLine( &quot;Endpoint-&gt;AddressFamily : {0}&quot;, endpoint-&gt;AddressFamily );\n   Console::WriteLine( &quot;Endpoint-&gt;Port : {0}&quot;, endpoint-&gt;Port );\n   Console::WriteLine( &quot;Endpoint.ToString() : {0}&quot;, endpoint );\n   Console::WriteLine( &quot;Press any key to continue.&quot; );\n   Console::ReadLine();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Net.IPEndPoint#3\">      Private Shared Sub displayEndpointInfo(ByVal endpoint As IPEndPoint)\n        Console.WriteLine(&quot;Endpoint Address : &quot; + endpoint.Address.ToString())\n        Console.WriteLine(&quot;Endpoint AddressFamily : &quot; + endpoint.AddressFamily.ToString())\n        Console.WriteLine(&quot;Endpoint Port : &quot; + endpoint.Port.ToString())\n        Console.WriteLine(&quot;Endpoint ToString() : &quot; + endpoint.ToString())\n\n        Console.WriteLine(&quot;Press any key to continue.&quot;)\n        Console.ReadLine()\n      End Sub &#39;displayEndpointInfo\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Net.IPEndPoint#3\">    private static void displayEndpointInfo(IPEndPoint endpoint)\n    {\n      Console.WriteLine(&quot;Endpoint.Address : &quot; + endpoint.Address);\n      Console.WriteLine(&quot;Endpoint.AddressFamily : &quot; + endpoint.AddressFamily);\n      Console.WriteLine(&quot;Endpoint.Port : &quot; + endpoint.Port);\n      Console.WriteLine(&quot;Endpoint.ToString() : &quot; + endpoint.ToString());\n\n      Console.WriteLine(&quot;Press any key to continue.&quot;);\n      Console.ReadLine();\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_IPEndPoint_AddressFamily\">\r\n    \r\n            <a id=\"System_Net_IPEndPoint_AddressFamily_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddressFamily</div>        \r\n          </div>\r\n    \r\n            <p>Gets the Internet Protocol (IP) address family.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Net.Sockets.AddressFamily AddressFamily { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.addressfamily\" data-linktype=\"relative-path\">AddressFamily</a></div>\r\n                  </div>\r\n                  <p>Returns <a class=\"xref\" href=\"system.net.sockets.addressfamily\" data-linktype=\"relative-path\">AddressFamily</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the AddressFamily property to return the <a class=\"xref\" href=\"system.net.sockets.addressfamily\" data-linktype=\"relative-path\">AddressFamily</a> to which the <a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a> belongs. In this case it is the <a class=\"xref\" href=\"system.net.sockets.addressfamily\" data-linktype=\"relative-path\">AddressFamily</a><a class=\"xref\" href=\"system.net.sockets.addressfamily\" data-linktype=\"relative-path\">AddressFamily</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Net.IPEndPoint#3\">void displayEndpointInfo( IPEndPoint^ endpoint )\n{\n   Console::WriteLine( &quot;Endpoint-&gt;Address : {0}&quot;, endpoint-&gt;Address );\n   Console::WriteLine( &quot;Endpoint-&gt;AddressFamily : {0}&quot;, endpoint-&gt;AddressFamily );\n   Console::WriteLine( &quot;Endpoint-&gt;Port : {0}&quot;, endpoint-&gt;Port );\n   Console::WriteLine( &quot;Endpoint.ToString() : {0}&quot;, endpoint );\n   Console::WriteLine( &quot;Press any key to continue.&quot; );\n   Console::ReadLine();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Net.IPEndPoint#3\">      Private Shared Sub displayEndpointInfo(ByVal endpoint As IPEndPoint)\n        Console.WriteLine(&quot;Endpoint Address : &quot; + endpoint.Address.ToString())\n        Console.WriteLine(&quot;Endpoint AddressFamily : &quot; + endpoint.AddressFamily.ToString())\n        Console.WriteLine(&quot;Endpoint Port : &quot; + endpoint.Port.ToString())\n        Console.WriteLine(&quot;Endpoint ToString() : &quot; + endpoint.ToString())\n\n        Console.WriteLine(&quot;Press any key to continue.&quot;)\n        Console.ReadLine()\n      End Sub &#39;displayEndpointInfo\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Net.IPEndPoint#3\">    private static void displayEndpointInfo(IPEndPoint endpoint)\n    {\n      Console.WriteLine(&quot;Endpoint.Address : &quot; + endpoint.Address);\n      Console.WriteLine(&quot;Endpoint.AddressFamily : &quot; + endpoint.AddressFamily);\n      Console.WriteLine(&quot;Endpoint.Port : &quot; + endpoint.Port);\n      Console.WriteLine(&quot;Endpoint.ToString() : &quot; + endpoint.ToString());\n\n      Console.WriteLine(&quot;Press any key to continue.&quot;);\n      Console.ReadLine();\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_IPEndPoint_Port\">\r\n    \r\n            <a id=\"System_Net_IPEndPoint_Port_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Port</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the port number of the endpoint.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Port { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An integer value in the range <a class=\"xref\" href=\"system.net.ipendpoint#System_Net_IPEndPoint_MinPort\" data-linktype=\"relative-path\">MinPort</a> to <a class=\"xref\" href=\"system.net.ipendpoint#System_Net_IPEndPoint_MaxPort\" data-linktype=\"relative-path\">MaxPort</a> indicating the port number of the endpoint.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value that was specified for a set operation is less than <a class=\"xref\" href=\"system.net.ipendpoint#System_Net_IPEndPoint_MinPort\" data-linktype=\"relative-path\">MinPort</a> or greater than <a class=\"xref\" href=\"system.net.ipendpoint#System_Net_IPEndPoint_MaxPort\" data-linktype=\"relative-path\">MaxPort</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the Port property to set TCP port number of the <a class=\"xref\" href=\"system.net.endpoint\" data-linktype=\"relative-path\">EndPoint</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Net.IPEndPoint#3\">void displayEndpointInfo( IPEndPoint^ endpoint )\n{\n   Console::WriteLine( &quot;Endpoint-&gt;Address : {0}&quot;, endpoint-&gt;Address );\n   Console::WriteLine( &quot;Endpoint-&gt;AddressFamily : {0}&quot;, endpoint-&gt;AddressFamily );\n   Console::WriteLine( &quot;Endpoint-&gt;Port : {0}&quot;, endpoint-&gt;Port );\n   Console::WriteLine( &quot;Endpoint.ToString() : {0}&quot;, endpoint );\n   Console::WriteLine( &quot;Press any key to continue.&quot; );\n   Console::ReadLine();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Net.IPEndPoint#3\">      Private Shared Sub displayEndpointInfo(ByVal endpoint As IPEndPoint)\n        Console.WriteLine(&quot;Endpoint Address : &quot; + endpoint.Address.ToString())\n        Console.WriteLine(&quot;Endpoint AddressFamily : &quot; + endpoint.AddressFamily.ToString())\n        Console.WriteLine(&quot;Endpoint Port : &quot; + endpoint.Port.ToString())\n        Console.WriteLine(&quot;Endpoint ToString() : &quot; + endpoint.ToString())\n\n        Console.WriteLine(&quot;Press any key to continue.&quot;)\n        Console.ReadLine()\n      End Sub &#39;displayEndpointInfo\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Net.IPEndPoint#3\">    private static void displayEndpointInfo(IPEndPoint endpoint)\n    {\n      Console.WriteLine(&quot;Endpoint.Address : &quot; + endpoint.Address);\n      Console.WriteLine(&quot;Endpoint.AddressFamily : &quot; + endpoint.AddressFamily);\n      Console.WriteLine(&quot;Endpoint.Port : &quot; + endpoint.Port);\n      Console.WriteLine(&quot;Endpoint.ToString() : &quot; + endpoint.ToString());\n\n      Console.WriteLine(&quot;Press any key to continue.&quot;);\n      Console.ReadLine();\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_IPEndPoint_Create_System_Net_SocketAddress_\">\r\n    \r\n            <a id=\"System_Net_IPEndPoint_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create(SocketAddress)</div>        \r\n          </div>\r\n    \r\n            <p>Creates an endpoint from a socket address.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Net.EndPoint Create (System.Net.SocketAddress socketAddress);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>socketAddress</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.socketaddress\" data-linktype=\"relative-path\">SocketAddress</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.net.socketaddress\" data-linktype=\"relative-path\">SocketAddress</a> to use for the endpoint.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.endpoint\" data-linktype=\"relative-path\">System.Net.EndPoint</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.net.endpoint\" data-linktype=\"relative-path\">EndPoint</a> instance using the specified socket address.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The AddressFamily of <code>socketAddress</code> is not equal to the AddressFamily of the current instance.  </p>\n<p> -or-  </p>\n<p> <code>socketAddress</code>.Size &lt; 8.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the specified <a class=\"xref\" href=\"system.net.socketaddress\" data-linktype=\"relative-path\">SocketAddress</a> to create an <a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Net.IPEndPoint#5\">   // Recreate the connection endpoint from the serialized information.\n   IPEndPoint^ endpoint = gcnew IPEndPoint( (__int64)0,0 );\n   IPEndPoint^ clonedIPEndPoint = dynamic_cast&lt;IPEndPoint^&gt;(endpoint-&gt;Create( socketAddress ));\n   Console::WriteLine( &quot;clonedIPEndPoint: {0}&quot;, clonedIPEndPoint );\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Net.IPEndPoint#5\">        &#39; Recreate the connection endpoint from the serialized information.\n        Dim endpoint As New IPEndPoint(0, 0)\n        Dim clonedIPEndPoint As IPEndPoint = CType(endpoint.Create(socketAddress), IPEndPoint)\n        Console.WriteLine((&quot;clonedIPEndPoint: &quot; + clonedIPEndPoint.ToString()))\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Net.IPEndPoint#5\">      // Recreate the connection endpoint from the serialized information.\n      IPEndPoint endpoint = new IPEndPoint(0,0);\n      IPEndPoint clonedIPEndPoint = (IPEndPoint) endpoint.Create(socketAddress);\n      Console.WriteLine(&quot;clonedIPEndPoint: &quot; + clonedIPEndPoint.ToString());\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_IPEndPoint_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Net_IPEndPoint_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> is equal to the current <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object comparand);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>comparand</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to compare with the current <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> is equal to the current <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_IPEndPoint_GetHashCode\">\r\n    \r\n            <a id=\"System_Net_IPEndPoint_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a hash value for a <a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An integer hash value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GetHashCode method returns a hash code of the IP endpoint instance. This value can be used as a key in hash tables.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_IPEndPoint_Serialize\">\r\n    \r\n            <a id=\"System_Net_IPEndPoint_Serialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Serialize()</div>        \r\n          </div>\r\n    \r\n            <p>Serializes endpoint information into a <a class=\"xref\" href=\"system.net.socketaddress\" data-linktype=\"relative-path\">SocketAddress</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Net.SocketAddress Serialize ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.socketaddress\" data-linktype=\"relative-path\">SocketAddress</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.socketaddress\" data-linktype=\"relative-path\">SocketAddress</a> instance containing the socket address for the endpoint.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the Serialize method to serialize endpoint information into a <a class=\"xref\" href=\"system.net.socketaddress\" data-linktype=\"relative-path\">SocketAddress</a> instance.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Net.IPEndPoint#4\">// The serializeEndpoint function serializes the endpoint and returns the \n// SocketAddress containing the serialized endpoint data.\nSocketAddress^ serializeEndpoint( IPEndPoint^ endpoint )\n{\n   // Serialize IPEndPoint details to a SocketAddress instance.\n   SocketAddress^ socketAddress = endpoint-&gt;Serialize();\n\n   // Display the serialized endpoint information.\n   Console::WriteLine( &quot;Endpoint.Serialize() : {0}&quot;, socketAddress );\n   Console::WriteLine( &quot;Socket-&gt;Family : {0}&quot;, socketAddress-&gt;Family );\n   Console::WriteLine( &quot;Socket-&gt;Size : {0}&quot;, socketAddress-&gt;Size );\n   Console::WriteLine( &quot;Press any key to continue.&quot; );\n   Console::ReadLine();\n   return socketAddress;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Net.IPEndPoint#4\">      &#39; The serializeEndpoint method serializes the endpoint and returns the \n      &#39; SocketAddress containing the serialized endpoint data.\n      Private Shared Function serializeEndpoint(ByVal endpoint As IPEndPoint) As SocketAddress\n\n        &#39; Serialize IPEndPoint details to a SocketAddress instance.\n        Dim socketAddress As SocketAddress = endpoint.Serialize()\n\n        &#39; Display the serialized endpoint information.\n        Console.WriteLine(&quot;Endpoint Serialize() : &quot; + socketAddress.ToString())\n\n        Console.WriteLine(&quot;Socket Family : &quot; + socketAddress.Family.ToString())\n        Console.WriteLine(&quot;Socket Size : &quot; + socketAddress.ToString())\n\n        Console.WriteLine(&quot;Press any key to continue.&quot;)\n        Console.ReadLine()\n\n        Return socketAddress\n      End Function &#39;serializeEndpoint\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Net.IPEndPoint#4\">    // The serializeEndpoint method serializes the endpoint and returns the \n    // SocketAddress containing the serialized endpoint data.\n    private static SocketAddress serializeEndpoint(IPEndPoint endpoint)\n    {\n \n      // Serialize IPEndPoint details to a SocketAddress instance.\n      SocketAddress socketAddress = endpoint.Serialize();\n  \n      // Display the serialized endpoint information.\n      Console.WriteLine(&quot;Endpoint.Serialize() : &quot; + socketAddress.ToString());\n \n      Console.WriteLine(&quot;Socket.Family : &quot; + socketAddress.Family);\n      Console.WriteLine(&quot;Socket.Size : &quot; + socketAddress.Size);\n\n      Console.WriteLine(&quot;Press any key to continue.&quot;);\n      Console.ReadLine();\n\n      return socketAddress;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_IPEndPoint_ToString\">\r\n    \r\n            <a id=\"System_Net_IPEndPoint_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the IP address and port number of the specified endpoint.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string containing the IP address and the port number of the specified endpoint (for example, 192.168.1.2:80).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example returns a string representation of the IP address and port number of the specified <a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Net.IPEndPoint#3\">void displayEndpointInfo( IPEndPoint^ endpoint )\n{\n   Console::WriteLine( &quot;Endpoint-&gt;Address : {0}&quot;, endpoint-&gt;Address );\n   Console::WriteLine( &quot;Endpoint-&gt;AddressFamily : {0}&quot;, endpoint-&gt;AddressFamily );\n   Console::WriteLine( &quot;Endpoint-&gt;Port : {0}&quot;, endpoint-&gt;Port );\n   Console::WriteLine( &quot;Endpoint.ToString() : {0}&quot;, endpoint );\n   Console::WriteLine( &quot;Press any key to continue.&quot; );\n   Console::ReadLine();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Net.IPEndPoint#3\">      Private Shared Sub displayEndpointInfo(ByVal endpoint As IPEndPoint)\n        Console.WriteLine(&quot;Endpoint Address : &quot; + endpoint.Address.ToString())\n        Console.WriteLine(&quot;Endpoint AddressFamily : &quot; + endpoint.AddressFamily.ToString())\n        Console.WriteLine(&quot;Endpoint Port : &quot; + endpoint.Port.ToString())\n        Console.WriteLine(&quot;Endpoint ToString() : &quot; + endpoint.ToString())\n\n        Console.WriteLine(&quot;Press any key to continue.&quot;)\n        Console.ReadLine()\n      End Sub &#39;displayEndpointInfo\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Net.IPEndPoint#3\">    private static void displayEndpointInfo(IPEndPoint endpoint)\n    {\n      Console.WriteLine(&quot;Endpoint.Address : &quot; + endpoint.Address);\n      Console.WriteLine(&quot;Endpoint.AddressFamily : &quot; + endpoint.AddressFamily);\n      Console.WriteLine(&quot;Endpoint.Port : &quot; + endpoint.Port);\n      Console.WriteLine(&quot;Endpoint.ToString() : &quot; + endpoint.ToString());\n\n      Console.WriteLine(&quot;Press any key to continue.&quot;);\n      Console.ReadLine();\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.IPEndPoint.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.IPEndPoint.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.IPEndPoint\">\r\n<meta name=\"APIName\" content=\"System.Net.IPEndPoint..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.IPEndPoint.Address\">\r\n<meta name=\"APIName\" content=\"System.Net.IPEndPoint.AddressFamily\">\r\n<meta name=\"APIName\" content=\"System.Net.IPEndPoint.Create\">\r\n<meta name=\"APIName\" content=\"System.Net.IPEndPoint.Equals\">\r\n<meta name=\"APIName\" content=\"System.Net.IPEndPoint.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Net.IPEndPoint.MaxPort\">\r\n<meta name=\"APIName\" content=\"System.Net.IPEndPoint.MinPort\">\r\n<meta name=\"APIName\" content=\"System.Net.IPEndPoint.Port\">\r\n<meta name=\"APIName\" content=\"System.Net.IPEndPoint.Serialize\">\r\n<meta name=\"APIName\" content=\"System.Net.IPEndPoint.ToString\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"d5b1560b-1645-8f7d-3371-2f9ea45f1a52\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Net\\IPEndPoint.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a network endpoint as an IP address and a port number.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.IPEndPoint\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.IPEndPoint.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.IPEndPoint.yml","open_to_public_contributors":true,"api_name":["System.Net.IPEndPoint","System.Net.IPEndPoint..ctor","System.Net.IPEndPoint.Address","System.Net.IPEndPoint.AddressFamily","System.Net.IPEndPoint.Create","System.Net.IPEndPoint.Equals","System.Net.IPEndPoint.GetHashCode","System.Net.IPEndPoint.MaxPort","System.Net.IPEndPoint.MinPort","System.Net.IPEndPoint.Port","System.Net.IPEndPoint.Serialize","System.Net.IPEndPoint.ToString"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.IPEndPoint","System::Net::IPEndPoint","System.Net.IPEndPoint.#ctor","System::Net::IPEndPoint::#ctor","System.Net.IPEndPoint.Address","System::Net::IPEndPoint::Address","System.Net.IPEndPoint.AddressFamily","System::Net::IPEndPoint::AddressFamily","System.Net.IPEndPoint.Create","System::Net::IPEndPoint::Create","System.Net.IPEndPoint.Equals","System::Net::IPEndPoint::Equals","System.Net.IPEndPoint.GetHashCode","System::Net::IPEndPoint::GetHashCode","System.Net.IPEndPoint.MaxPort","System::Net::IPEndPoint::MaxPort","System.Net.IPEndPoint.MinPort","System::Net::IPEndPoint::MinPort","System.Net.IPEndPoint.Port","System::Net::IPEndPoint::Port","System.Net.IPEndPoint.Serialize","System::Net::IPEndPoint::Serialize","System.Net.IPEndPoint.ToString","System::Net::IPEndPoint::ToString"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"d5b1560b-1645-8f7d-3371-2f9ea45f1a52","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Net\\IPEndPoint.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net/IPEndPoint.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IPEndPoint class | Microsoft Docs","_op_ogTitle":"IPEndPoint class","description":"Represents a network endpoint as an IP address and a port number.\n","toc_asset_id":"_splitted/System.Net/toc.json","toc_rel":"_splitted/System.Net/toc.json","source_url":"","ms.assetid":"System.Net.IPEndPoint","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.ipendpoint","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.ipendpoint","fileRelativePath":"System.Net.IPEndPoint.html"},"themesRelativePathToOutputRoot":"_themes/"}