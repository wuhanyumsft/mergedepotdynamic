{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">NumberFormatInfo</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides culture-specific information for formatting and parsing numeric values.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic sealed class NumberFormatInfo : ICloneable, IFormatProvider</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">NumberFormatInfo</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The NumberFormatInfo class contains culture-specific information that is used when you format and parse numeric values. This information includes the currency symbol, the decimal symbol, the group separator symbol, and the symbols for positive and negative signs.  </p>\n<ul>\n<li><p><a href=\"#Instantiating\" data-linktype=\"self-bookmark\">Instantiating a NumberFormatInfo object</a>  </p>\n<ul>\n<li><p><a href=\"#Instantiating_Current\" data-linktype=\"self-bookmark\">For the current culture</a>  </p>\n</li>\n<li><p><a href=\"#Instantiating_Invariant\" data-linktype=\"self-bookmark\">For the invariant culture</a>  </p>\n</li>\n<li><p><a href=\"#Instantiating_Specific\" data-linktype=\"self-bookmark\">For a specific culture</a>  </p>\n</li>\n<li><p><a href=\"#Instantiating_Neutral\" data-linktype=\"self-bookmark\">For a neutral culture</a>  </p>\n</li>\n</ul>\n</li>\n<li><p><a href=\"#dynamic\" data-linktype=\"self-bookmark\">NumberFormatInfo and dynamic data</a>  </p>\n</li>\n<li><p><a href=\"#formatProvider\" data-linktype=\"self-bookmark\">IFormatProvider, NumberFormatInfo, and numeric formatting</a>  </p>\n</li>\n<li><p><a href=\"#properties\" data-linktype=\"self-bookmark\">Format strings and NumberFormatInfo properties</a>  </p>\n</li>\n<li><p><a href=\"#modifying\" data-linktype=\"self-bookmark\">Modifying NumberFormatInfo properties</a>  </p>\n<ul>\n<li><p><a href=\"#currency\" data-linktype=\"self-bookmark\">Modifying the currency symbol and pattern</a>  </p>\n</li>\n<li><p><a href=\"#id\" data-linktype=\"self-bookmark\">Formatting a national identification number</a>  </p>\n</li>\n</ul>\n</li>\n<li><p><a href=\"#parsing\" data-linktype=\"self-bookmark\">Parsing numeric strings</a>  </p>\n<ul>\n<li><p><a href=\"#ParseUser\" data-linktype=\"self-bookmark\">Parsing user strings</a>  </p>\n</li>\n<li><p><a href=\"#ParseSerial\" data-linktype=\"self-bookmark\">Serializing and deserializing numeric data</a>  </p>\n</li>\n</ul>\n</li>\n</ul>\n<p><a name=\"Instantiating\"></a>   </p>\n<h2 id=\"instantiating-a-numberformatinfo-object\">Instantiating a NumberFormatInfo object</h2>\n<p> You can instantiate a NumberFormatInfo object that represents the formatting conventions of the current culture, the invariant culture, a specific culture, or a neutral culture.  </p>\n<p><a name=\"Instantiating_Current\"></a>   </p>\n<h2 id=\"instantiating-a-numberformatinfo-object-for-the-current-culture\">Instantiating a NumberFormatInfo object for the current culture</h2>\n<p> You can instantiate a NumberFormatInfo object for the current thread culture in any of the following ways. In each case, the returned NumberFormatInfo object is read-only.  </p>\n<ul>\n<li><p>By retrieving a <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the current thread culture from the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> property, and retrieving the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object from its <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_NumberFormat_\" data-linktype=\"relative-path\">NumberFormat</a> property.  </p>\n</li>\n<li><p>By retrieving the NumberFormatInfo object returned by the <code>static</code> (<code>Shared</code> in Visual Basic) <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrentInfo_\" data-linktype=\"relative-path\">CurrentInfo</a> property.  </p>\n</li>\n<li><p>By calling the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_GetInstance_\" data-linktype=\"relative-path\">GetInstance</a> method with a <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the current culture.  </p>\n<p>The following example uses these three ways to create NumberFormatInfo objects that represent the formatting conventions of the current culture. It also retrieves the value of the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_IsReadOnly_\" data-linktype=\"relative-path\">IsReadOnly</a> property to illustrate that each object is read-only.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Globalization.NumberFormatInfo.Class.Instantiate#1\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      NumberFormatInfo current1 = CultureInfo.CurrentCulture.NumberFormat;\n      Console.WriteLine(current1.IsReadOnly);\n      \n      NumberFormatInfo current2 = NumberFormatInfo.CurrentInfo;\n      Console.WriteLine(current2.IsReadOnly);\n      \n      NumberFormatInfo current3 = NumberFormatInfo.GetInstance(CultureInfo.CurrentCulture);\n      Console.WriteLine(current3.IsReadOnly);\n   }\n}\n// The example displays the following output:\n//       True\n//       True\n//       True\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Globalization.NumberFormatInfo.Class.Instantiate#1\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      Dim current1 As NumberFormatInfo = CultureInfo.CurrentCulture.NumberFormat\n      Console.WriteLine(current1.IsReadOnly)\n      \n      Dim current2 As NumberFormatInfo = NumberFormatInfo.CurrentInfo\n      Console.WriteLine(current2.IsReadOnly)\n      \n      Dim current3 As NumberFormatInfo = NumberFormatInfo.GetInstance(CultureInfo.CurrentCulture)\n      Console.WriteLine(current3.IsReadOnly)\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       True\n&#39;       True\n&#39;       True\n</code></pre><p>You can create a writable NumberFormatInfo object that represents the conventions of the current thread culture in any of the following ways:  </p>\n</li>\n<li><p>By retrieving a NumberFormatInfo object in any of the ways illustrated in the previous code example, and calling the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_Clone_\" data-linktype=\"relative-path\">Clone</a> method on the returned NumberFormatInfo object. This creates a copy of the original NumberFormatInfo object, except that its <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_IsReadOnly_\" data-linktype=\"relative-path\">IsReadOnly</a> property is <code>false</code>.  </p>\n</li>\n<li><p>By calling the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CreateSpecificCulture_\" data-linktype=\"relative-path\">CreateSpecificCulture</a> method to create a <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the current culture, and then using its <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_NumberFormat_\" data-linktype=\"relative-path\">NumberFormat</a> property to retrieve the NumberFormatInfo object.  </p>\n<p>The following example illustrates these two ways of instantiating a NumberFormatInfo object, and displays the value of its <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_IsReadOnly_\" data-linktype=\"relative-path\">IsReadOnly</a> property to illustrate that the object is not read-only.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Globalization.NumberFormatInfo.Class.Instantiate#2\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      NumberFormatInfo current1 = NumberFormatInfo.CurrentInfo;\n      current1 = (NumberFormatInfo) current1.Clone();\n      Console.WriteLine(current1.IsReadOnly);\n\n      CultureInfo culture2 = CultureInfo.CreateSpecificCulture(CultureInfo.CurrentCulture.Name);\n      NumberFormatInfo current2 = culture2.NumberFormat;\n      Console.WriteLine(current2.IsReadOnly);\n   }\n}\n// The example displays the following output:\n//       False\n//       False\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Globalization.NumberFormatInfo.Class.Instantiate#2\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      Dim current1 As NumberFormatInfo = NumberFormatInfo.CurrentInfo\n      current1 = CType(current1.Clone(), NumberFormatInfo)\n      Console.WriteLine(current1.IsReadOnly)\n\n      Dim culture2 As CultureInfo = CultureInfo.CreateSpecificCulture(CultureInfo.CurrentCulture.Name)\n      Dim current2 As NumberFormatInfo = culture2.NumberFormat\n      Console.WriteLine(current2.IsReadOnly)\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       False\n&#39;       False\n</code></pre><p>Note that the Windows operating system allows the user to override some of the NumberFormatInfo property values used in numeric formatting and parsing operations through the <strong>Region and Language</strong> item in Control Panel. For example, a user whose culture is English (United States) might choose to display currency values as 1.1 USD instead of the default of $1.1. The NumberFormatInfo objects retrieved in the ways discussed previously all reflect these user overrides. If this is undesirable, you can create a NumberFormatInfo object that does not reflect user overrides (and that is also read/write rather than read-only) by calling the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo__ctor_System_String_System_Boolean_\" data-linktype=\"relative-path\">System.Globalization.CultureInfo.CultureInfo(String,Boolean)</a> constructor and supplying a value of <code>false</code> for the <code>useUserOverride</code> argument. The following example provides an illustration for a system whose current culture is English (United States) and whose currency symbol has been changed from the default of $ to USD.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Globalization.NumberFormatInfo.Class.Instantiate#3\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      CultureInfo culture;\n      NumberFormatInfo nfi;\n      \n      culture = CultureInfo.CurrentCulture;\n      nfi = culture.NumberFormat;\n      Console.WriteLine(&quot;Culture Name:    {0}&quot;, culture.Name);\n      Console.WriteLine(&quot;User Overrides:  {0}&quot;, culture.UseUserOverride);\n      Console.WriteLine(&quot;Currency Symbol: {0}\\n&quot;, culture.NumberFormat.CurrencySymbol);\n            \n      culture = new CultureInfo(CultureInfo.CurrentCulture.Name, false);\n      Console.WriteLine(&quot;Culture Name:    {0}&quot;, culture.Name);\n      Console.WriteLine(&quot;User Overrides:  {0}&quot;, culture.UseUserOverride);\n      Console.WriteLine(&quot;Currency Symbol: {0}&quot;, culture.NumberFormat.CurrencySymbol);\n   }\n}\n// The example displays the following output:\n//       Culture Name:    en-US\n//       User Overrides:  True\n//       Currency Symbol: USD\n//       \n//       Culture Name:    en-US\n//       User Overrides:  False\n//       Currency Symbol: $\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Globalization.NumberFormatInfo.Class.Instantiate#3\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      Dim culture As CultureInfo\n      Dim nfi As NumberFormatInfo\n      \n      culture = CultureInfo.CurrentCulture\n      nfi = culture.NumberFormat\n      Console.WriteLine(&quot;Culture Name:    {0}&quot;, culture.Name)\n      Console.WriteLine(&quot;User Overrides:  {0}&quot;, culture.UseUserOverride)\n      Console.WriteLine(&quot;Currency Symbol: {0}&quot;, culture.NumberFormat.CurrencySymbol)\n      Console.WriteLine()\n            \n      culture = New CultureInfo(CultureInfo.CurrentCulture.Name, False)\n      Console.WriteLine(&quot;Culture Name:    {0}&quot;, culture.Name)\n      Console.WriteLine(&quot;User Overrides:  {0}&quot;, culture.UseUserOverride)\n      Console.WriteLine(&quot;Currency Symbol: {0}&quot;, culture.NumberFormat.CurrencySymbol)\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       Culture Name:    en-US\n&#39;       User Overrides:  True\n&#39;       Currency Symbol: USD\n&#39;       \n&#39;       Culture Name:    en-US\n&#39;       User Overrides:  False\n&#39;       Currency Symbol: $\n</code></pre><p>If the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_UseUserOverride_\" data-linktype=\"relative-path\">UseUserOverride</a> property is set to <code>true</code>, the properties <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_DateTimeFormat_\" data-linktype=\"relative-path\">DateTimeFormat</a>, <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_NumberFormat_\" data-linktype=\"relative-path\">NumberFormat</a>, and <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_TextInfo_\" data-linktype=\"relative-path\">TextInfo</a> are also retrieved from the user settings. If the user settings are incompatible with the culture associated with the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object (for example, if the selected calendar is not one of the calendars listed by the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_OptionalCalendars_\" data-linktype=\"relative-path\">OptionalCalendars</a> property), the results of the methods and the values of the properties are undefined.  </p>\n</li>\n</ul>\n<p><a name=\"Instantiating_Invariant\"></a>   </p>\n<h2 id=\"instantiating-a-numberformatinfo-object-for-the-invariant-culture\">Instantiating a NumberFormatInfo object for the invariant culture</h2>\n<p> The invariant culture represents a culture that is culture-insensitive. It is based on the English language but not on any specific English-speaking country/region. Although the data of specific cultures can be dynamic and can change to reflect new cultural conventions or user preferences, the data of the invariant culture does not change. A NumberFormatInfo object that represents the formatting conventions of the invariant culture can be used for formatting operations in which result strings should not vary by culture.  </p>\n<p> You can instantiate a NumberFormatInfo object that represents the formatting conventions of the invariant culture in the following ways:  </p>\n<ul>\n<li><p>By retrieving the value of the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_InvariantInfo_\" data-linktype=\"relative-path\">InvariantInfo</a> property. The returned  NumberFormatInfo object is read-only.  </p>\n</li>\n<li><p>By retrieving the value of the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_NumberFormat_\" data-linktype=\"relative-path\">NumberFormat</a> property from the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that is returned by the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_InvariantCulture_\" data-linktype=\"relative-path\">InvariantCulture</a> property. The returned NumberFormatInfo object is read-only.  </p>\n</li>\n<li><p>By calling the parameterless <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo__ctor_\" data-linktype=\"relative-path\">NumberFormatInfo</a> class constructor. The returned NumberFormatInfo object is read/write.  </p>\n<p>The following example uses each of these methods to instantiate a NumberFormatInfo object that represents the invariant culture. It then indicates whether the object is read-only,  </p>\n<pre><code class=\"lang-cs\" name=\"System.Globalization.NumberFormatInfo.Class.Instantiate#4\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      NumberFormatInfo nfi;\n      \n      nfi = System.Globalization.NumberFormatInfo.InvariantInfo;\n      Console.WriteLine(nfi.IsReadOnly);               \n      \n      nfi = CultureInfo.InvariantCulture.NumberFormat;\n      Console.WriteLine(nfi.IsReadOnly);               \n      \n      nfi = New NumberFormatInfo();\n      Console.WriteLine(nfi.IsReadOnly);               \n   }\n}\n// The example displays the following output:\n//       True\n//       True\n//       False\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Globalization.NumberFormatInfo.Class.Instantiate#4\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      Dim nfi As NumberFormatInfo\n      \n      nfi = System.Globalization.NumberFormatInfo.InvariantInfo\n      Console.WriteLine(nfi.IsReadOnly)               \n      \n      nfi = CultureInfo.InvariantCulture.NumberFormat\n      Console.WriteLine(nfi.IsReadOnly)               \n      \n      nfi = New NumberFormatInfo()\n      Console.WriteLine(nfi.IsReadOnly)               \n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       True\n&#39;       True\n&#39;       False\n</code></pre></li>\n</ul>\n<p><a name=\"Instantiating_Specific\"></a>   </p>\n<h2 id=\"instantiating-a-numberformatinfo-object-for-a-specific-culture\">Instantiating a NumberFormatInfo object for a specific culture</h2>\n<p> A specific culture represents a language that is spoken in a particular country/region. For example, en-US is a specific culture that represents the English language spoken in the United States, and en-CA is a specific culture that represents the English language spoken in Canada. You can instantiate a NumberFormatInfo object that represents the formatting conventions of a specific culture in the following ways:  </p>\n<ul>\n<li><p>By calling the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_GetCultureInfo_System_String_\" data-linktype=\"relative-path\">System.Globalization.CultureInfo.GetCultureInfo(String)</a> method and retrieving the value of the returned <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object&#39;s <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_NumberFormat_\" data-linktype=\"relative-path\">NumberFormat</a> property. The returned NumberFormatInfo object is read-only.  </p>\n</li>\n<li><p>By passing a <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the culture whose NumberFormatInfo object you want to retrieve to the static <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_GetInstance_\" data-linktype=\"relative-path\">GetInstance</a> method. The returned NumberFormatInfo object is read/write.  </p>\n</li>\n<li><p>By calling the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CreateSpecificCulture_\" data-linktype=\"relative-path\">CreateSpecificCulture</a> method and retrieving the value of the returned <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object&#39;s <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_NumberFormat_\" data-linktype=\"relative-path\">NumberFormat</a> property. The returned NumberFormatInfo object is read/write.  </p>\n</li>\n<li><p>By calling one of the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo__ctor_\" data-linktype=\"relative-path\">CultureInfo</a> class constructors and retrieving the value of the returned <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object&#39;s <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_NumberFormat_\" data-linktype=\"relative-path\">NumberFormat</a> property. The returned NumberFormatInfo object is read/write.  </p>\n<p>The following example uses these four ways to create a NumberFormatInfo object that reflects the formatting conventions of the Indonesian (Indonesia) culture. It also indicates whether each object is read-only.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Globalization.NumberFormatInfo.Class.Instantiate#5\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      CultureInfo culture;\n      NumberFormatInfo nfi;\n      \n      nfi = CultureInfo.GetCultureInfo(&quot;id-ID&quot;).NumberFormat;\n      Console.WriteLine(&quot;Read-only: {0}&quot;, nfi.IsReadOnly);\n      \n      culture = new CultureInfo(&quot;id-ID&quot;);\n      nfi = NumberFormatInfo.GetInstance(culture);\n      Console.WriteLine(&quot;Read-only: {0}&quot;, nfi.IsReadOnly);\n      \n      culture = CultureInfo.CreateSpecificCulture(&quot;id-ID&quot;);\n      nfi = culture.NumberFormat;\n      Console.WriteLine(&quot;Read-only: {0}&quot;, nfi.IsReadOnly);\n      \n      culture = new CultureInfo(&quot;id-ID&quot;);\n      nfi = culture.NumberFormat;\n      Console.WriteLine(&quot;Read-only: {0}&quot;, nfi.IsReadOnly);\n   }\n}\n// The example displays the following output:\n//       Read-only: True\n//       Read-only: False\n//       Read-only: False\n//       Read-only: False\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Globalization.NumberFormatInfo.Class.Instantiate#5\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      Dim culture As CultureInfo\n      Dim nfi As NumberFormatInfo\n      \n      nfi = CultureInfo.GetCultureInfo(&quot;id-ID&quot;).NumberFormat\n      Console.WriteLine(&quot;Read-only: {0}&quot;, nfi.IsReadOnly)\n      \n      culture = New CultureInfo(&quot;id-ID&quot;)\n      nfi = NumberFormatInfo.GetInstance(culture)\n      Console.WriteLine(&quot;Read-only: {0}&quot;, nfi.IsReadOnly)\n      \n      culture = CultureInfo.CreateSpecificCulture(&quot;id-ID&quot;)\n      nfi = culture.NumberFormat\n      Console.WriteLine(&quot;Read-only: {0}&quot;, nfi.IsReadOnly)\n      \n      culture = New CultureInfo(&quot;id-ID&quot;)\n      nfi = culture.NumberFormat\n      Console.WriteLine(&quot;Read-only: {0}&quot;, nfi.IsReadOnly)\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       Read-only: True\n&#39;       Read-only: False\n&#39;       Read-only: False\n&#39;       Read-only: False\n</code></pre></li>\n</ul>\n<p><a name=\"Instantiating_Neutral\"></a>   </p>\n<h2 id=\"instantiating-a-numberformatinfo-object-for-a-neutral-culture\">Instantiating a NumberFormatInfo object for a neutral culture</h2>\n<p> A neutral culture represents a culture or language that is independent of a country/region. It is typically the parent of one or more specific cultures. For example, fr is a neutral culture for the French language and the parent of the fr-FR culture. You create a NumberFormatInfo object that represents the formatting conventions of a neutral culture in the same way that you create a NumberFormatInfo object that represents the formatting conventions of a specific culture.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In the .NET Framework 3.5 and earlier versions, trying to retrieve a NumberFormatInfo object that reflects the formatting conventions of a neutral culture throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a> exception.  </p>\n</div>\n<p> However, because it is independent of a specific country/region, a neutral culture lacks culture-specific formatting information. Rather than populating the NumberFormatInfo object with generic values, the .NET Framework returns a NumberFormatInfo object that reflects the formatting conventions of a specific culture that is a child of the neutral culture. For example, the NumberFormatInfo object for the neutral en culture reflects the formatting conventions of the en-US culture, and the NumberFormatInfo object for the fr culture reflects the formatting conventions of the fr-FR culture.  </p>\n<p> You can use code like the following to determine which specific culture&#39;s formatting conventions each neutral culture represents.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Globalization.NumberFormatInfo.Class.Instantiate#6\">using System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Globalization;\nusing System.Reflection;\n\npublic class Example\n{\n   public static void Main()\n   {\n      // Get all the neutral cultures\n      List&lt;String&gt; names = new List&lt;String&gt;();\n      Array.ForEach(CultureInfo.GetCultures(CultureTypes.NeutralCultures),\n                    culture =&gt; names.Add(culture.Name));\n      names.Sort();\n      foreach (var name in names) {\n         // Ignore the invariant culture.\n         if (name == &quot;&quot;) continue;\n         \n         ListSimilarChildCultures(name);        \n      }\n   }\n\n   private static void ListSimilarChildCultures(string name)\n   { \n      // Create the neutral NumberFormatInfo object.\n      NumberFormatInfo nfi = CultureInfo.GetCultureInfo(name).NumberFormat;\n      // Retrieve all specific cultures of the neutral culture.\n      CultureInfo[] cultures = Array.FindAll(CultureInfo.GetCultures(CultureTypes.SpecificCultures), \n                               culture =&gt; culture.Name.StartsWith(name + &quot;-&quot;, StringComparison.OrdinalIgnoreCase));\n      // Create an array of NumberFormatInfo properties\n      PropertyInfo[] properties = typeof(NumberFormatInfo).GetProperties(BindingFlags.Instance | BindingFlags.Public);\n      bool hasOneMatch = false;\n\n      foreach (var ci in cultures) {\n         bool match = true;     \n         // Get the NumberFormatInfo for a specific culture.\n         NumberFormatInfo specificNfi = ci.NumberFormat;\n         // Compare the property values of the two.\n         foreach (var prop in properties) {\n            // We&#39;re not interested in the value of IsReadOnly.     \n            if (prop.Name == &quot;IsReadOnly&quot;) continue;\n            \n            // For arrays, iterate the individual elements to see if they are the same.\n            if (prop.PropertyType.IsArray) { \n               IList nList = (IList) prop.GetValue(nfi, null);\n               IList sList = (IList) prop.GetValue(specificNfi, null);\n               if (nList.Count != sList.Count) {\n                  match = false;\n                  break;\n               } \n\n               for (int ctr = 0; ctr &lt; nList.Count; ctr++) {\n                  if (! nList[ctr].Equals(sList[ctr])) {\n                     match = false;\n                     break;\n                  }     \n               }\n            }   \n            else if (! prop.GetValue(specificNfi).Equals(prop.GetValue(nfi))) {\n               match = false;\n               break;   \n            }        \n         }\n         if (match) {\n            Console.WriteLine(&quot;NumberFormatInfo object for &#39;{0}&#39; matches &#39;{1}&#39;&quot;, \n                                      name, ci.Name);\n            hasOneMatch = true;\n         }                                       \n      }\n      if (! hasOneMatch)\n         Console.WriteLine(&quot;NumberFormatInfo object for &#39;{0}&#39; --&gt; No Match&quot;, name);            \n\n      Console.WriteLine();\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Globalization.NumberFormatInfo.Class.Instantiate#6\">Imports System\nImports System.Collections\nImports System.Collections.Generic\nImports System.Globalization\nImports System.Reflection\n\nModule Example\n   Public Sub Main()\n      &#39; Get all the neutral cultures\n      Dim names As New List(Of String)\n      Array.ForEach(CultureInfo.GetCultures(CultureTypes.NeutralCultures),\n                    Sub(culture) names.Add(culture.Name))\n      names.Sort()\n      For Each name In names\n         &#39; Ignore the invariant culture.\n         If name = &quot;&quot; Then Continue For\n         \n         ListSimilarChildCultures(name)        \n      Next\n   End Sub\n\n   Private Sub ListSimilarChildCultures(name As String)\n      &#39; Create the neutral NumberFormatInfo object.\n      Dim nfi As NumberFormatInfo = CultureInfo.GetCultureInfo(name).NumberFormat\n      &#39; Retrieve all specific cultures of the neutral culture.\n      Dim cultures() As CultureInfo = Array.FindAll(CultureInfo.GetCultures(CultureTypes.SpecificCultures), \n                               Function(culture) culture.Name.StartsWith(name + &quot;-&quot;, StringComparison.OrdinalIgnoreCase))\n      &#39; Create an array of NumberFormatInfo properties\n      Dim properties() As PropertyInfo = GetType(NumberFormatInfo).GetProperties(BindingFlags.Instance Or BindingFlags.Public)\n      Dim hasOneMatch As Boolean = False\n\n      For Each ci In cultures\n         Dim match As Boolean = True     \n         &#39; Get the NumberFormatInfo for a specific culture.\n         Dim specificNfi As NumberFormatInfo = ci.NumberFormat\n         &#39; Compare the property values of the two.\n         For Each prop In properties\n            &#39; We&#39;re not interested in the value of IsReadOnly.     \n            If prop.Name = &quot;IsReadOnly&quot; Then Continue For\n            \n            &#39; For arrays, iterate the individual elements to see if they are the same.\n            If prop.PropertyType.IsArray Then \n               Dim nList As IList = CType(prop.GetValue(nfi, Nothing), IList)\n               Dim sList As IList = CType(prop.GetValue(specificNfi, Nothing), IList)\n               If nList.Count &lt;&gt; sList.Count Then\n                  match = false\n                  Exit For\n               End If \n\n               For ctr As Integer = 0 To nList.Count - 1\n                  If Not nList(ctr).Equals(sList(ctr)) \n                     match = false\n                     Exit For\n                  End If     \n               Next\n            Else If Not prop.GetValue(specificNfi).Equals(prop.GetValue(nfi))\n               match = false\n               Exit For   \n            End If        \n         Next\n         If match Then\n            Console.WriteLine(&quot;NumberFormatInfo object for &#39;{0}&#39; matches &#39;{1}&#39;&quot;, \n                                      name, ci.Name)\n            hasOneMatch = true\n         End If                                       \n      Next\n      If Not hasOneMatch Then\n         Console.WriteLine(&quot;NumberFormatInfo object for &#39;{0}&#39; --&gt; No Match&quot;, name)            \n      End If\n      \n      Console.WriteLine()\n   End Sub\nEnd Module\n</code></pre><p><a name=\"dynamic\"></a>   </p>\n<h2 id=\"numberformatinfo-and-dynamic-data\">NumberFormatInfo and dynamic data</h2>\n<p> The culture-specific data for formatting numeric values provided by the NumberFormatInfo class is dynamic, just like the cultural data provided by the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> class. You should not make any assumptions about the stability of values for NumberFormatInfo objects that are associated with particular <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> objects. Only the data provided by the invariant culture and its associated NumberFormatInfo object is stable. Other data can change between application sessions, or even within a single session, for the following reasons:  </p>\n<ul>\n<li><p><strong>System updates.</strong> Cultural preferences such as the currency symbol or currency formats change over time. When this happens, Windows Update includes changes to the NumberFormatInfo property value for a particular culture.  </p>\n</li>\n<li><p><strong>Replacement cultures.</strong> The <a class=\"xref\" href=\"system.globalization.cultureandregioninfobuilder\" data-linktype=\"relative-path\">CultureAndRegionInfoBuilder</a> class can be used to replace the data of an existing culture.  </p>\n</li>\n<li><p><strong>Cascading changes to property values.</strong> A number of culture-related properties can change at run time, which, in turn, causes NumberFormatInfo data to change. For example, the current culture can be changed either programmatically or through user action. When this happens, the NumberFormatInfo object returned by the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrentInfo_\" data-linktype=\"relative-path\">CurrentInfo</a> property changes to an object associated with the current culture.  </p>\n</li>\n<li><p><strong>User preferences.</strong> Users of your application might override some of the values associated with the current system culture through the region and language options in Control Panel. For example, users might choose a different currency symbol or a different decimal separator symbol. If the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_UseUserOverride_\" data-linktype=\"relative-path\">UseUserOverride</a> property is set to <code>true</code> (its default value), the properties of the NumberFormatInfo object are also retrieved from the user settings.  </p>\n<p>Starting with the .NET Framework 2.0, all user-overridable properties of a NumberFormatInfo object are initialized when the object is created. There is still a possibility of inconsistency, because neither object creation nor the user override process is atomic, and the relevant values may change during object creation. However, these inconsistencies should be extremely rare.  </p>\n<p>You can control whether user overrides are reflected in NumberFormatInfo objects that represent the same culture as the current thread culture. The following table lists the ways in which a NumberFormatInfo object can be retrieved and indicates whether the resulting object reflects user overrides.  </p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Source of CultureInfo and NumberFormatInfo object</th>\n<th>Reflects user overrides</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>CultureInfo.CurrentCulture.NumberFormat</code> property</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrentInfo_\" data-linktype=\"relative-path\">CurrentInfo</a> property</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CreateSpecificCulture_\" data-linktype=\"relative-path\">CreateSpecificCulture</a> method</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_GetCultureInfo_\" data-linktype=\"relative-path\">GetCultureInfo</a> method</td>\n<td>No</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo__ctor_System_String_\" data-linktype=\"relative-path\">CultureInfo(String)</a> constructor</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo__ctor_System_String_System_Boolean_\" data-linktype=\"relative-path\">System.Globalization.CultureInfo.CultureInfo(String,Boolean)</a> constructor</td>\n<td>Depends on value of <code>useUserOverride</code> parameter</td>\n</tr>\n</tbody>\n</table>\n<p> Unless there is a compelling reason to do otherwise, you should respect user overrides when you use the NumberFormatInfo object in client applications to format and parse user input or to display numeric data. For server applications or unattended applications, you should not respect user overrides. However, if you are using the NumberFormatInfo object either explicitly or implicitly to persist numeric data in string form, you should either use a NumberFormatInfo object that reflects the formatting conventions of the invariant culture, or you should specify a custom numeric format string that you use regardless of culture.  </p>\n<p><a name=\"formatProvider\"></a>   </p>\n<h2 id=\"iformatprovider-numberformatinfo-and-numeric-formatting\">IFormatProvider, NumberFormatInfo, and numeric formatting</h2>\n<p> A NumberFormatInfo object is used implicitly or explicitly in all numeric formatting operations. These include calls to the following methods:  </p>\n<ul>\n<li><p>All numeric formatting methods, such as <a class=\"xref\" href=\"system.int32#System_Int32_ToString_\" data-linktype=\"relative-path\">ToString</a>, <a class=\"xref\" href=\"system.double#System_Double_ToString_\" data-linktype=\"relative-path\">ToString</a>, and <a class=\"xref\" href=\"system.convert#System_Convert_ToString_System_Int32_\" data-linktype=\"relative-path\">System.Convert.ToString(Int32)</a>.  </p>\n</li>\n<li><p>The major composite formatting method, <a class=\"xref\" href=\"system.string#System_String_Format_\" data-linktype=\"relative-path\">Format</a>.  </p>\n</li>\n<li><p>Other composite formatting methods, such as [Console.WriteLine(String, Object&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt; and [StringBuilder.AppendFormat(String, Object&lt;xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt;.  </p>\n<p>All numeric formatting operations make use of an <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation. The <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> interface includes a single method, <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_System_Type_\" data-linktype=\"relative-path\">GetFormat(Type)</a>. This is a callback method that is passed a <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> object that represents the type needed to provide formatting information. The method is responsible for returning either an instance of that type or <code>null</code>, if it cannot provide an instance of the type. The .NET Framework provides two <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementations for formatting numbers:  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> class, which represents a specific culture (or a specific language in a specific country/region). In a numeric formatting operation, the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method returns the NumberFormatInfo object associated with its <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_NumberFormat_\" data-linktype=\"relative-path\">NumberFormat</a> property.  </p>\n</li>\n<li><p>The NumberFormatInfo class, which provides information about the formatting conventions of its associated culture. The <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method returns an instance of itself.  </p>\n<p>If an <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation is not provided to a formatting method explicitly, a <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object returned by the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> property that represents the current thread culture is used.  </p>\n<p>The following example illustrates the relationship between the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> interface and the NumberFormatInfo class in formatting operations by defining a custom <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation. Its <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method displays the type name of the object requested by the formatting operation. If the interface is requesting a NumberFormatInfo object, this method provides the NumberFormatInfo object for the current thread culture. As the output from the example shows, the <a class=\"xref\" href=\"system.decimal#System_Decimal_ToString_System_IFormatProvider_\" data-linktype=\"relative-path\">System.Decimal.ToString(IFormatProvider)</a> method requests a NumberFormatInfo object to provide formatting information, whereas the [String.Format(IFormatProvider, String, Object&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt; method requests NumberFormatInfo and <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> objects as well as an <a class=\"xref\" href=\"system.icustomformatter\" data-linktype=\"relative-path\">ICustomFormatter</a> implementation.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Globalization.NumberFormatInfo.Class#1\">using System;\nusing System.Globalization;\n\npublic class CurrentCultureFormatProvider : IFormatProvider\n{\n   public Object GetFormat(Type formatType) \n   {\n      Console.WriteLine(&quot;Requesting an object of type {0}&quot;, \n                        formatType.Name);\n      if (formatType == typeof(NumberFormatInfo))\n         return NumberFormatInfo.CurrentInfo;\n      else if (formatType == typeof(DateTimeFormatInfo))\n         return DateTimeFormatInfo.CurrentInfo;\n      else\n         return null;\n   }\n}\n\npublic class Example\n{\n   public static void Main()\n   {\n      Decimal amount = 1203.541m;\n      string value = amount.ToString(&quot;C2&quot;, new CurrentCultureFormatProvider());\n      Console.WriteLine(value);\n      Console.WriteLine();\n      string composite = String.Format(new CurrentCultureFormatProvider(), \n                                       &quot;Date: {0}   Amount: {1}   Description: {2}&quot;,\n                                       DateTime.Now, 1264.03m, &quot;Service Charge&quot;);\n      Console.WriteLine(composite);\n      Console.WriteLine();\n   }\n}\n// The example displays output like the following:\n//    Requesting an object of type NumberFormatInfo\n//    $1,203.54\n//    \n//    Requesting an object of type ICustomFormatter\n//    Requesting an object of type DateTimeFormatInfo\n//    Requesting an object of type NumberFormatInfo\n//    Date: 11/15/2012 2:00:01 PM   Amount: 1264.03   Description: Service Charge\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Globalization.NumberFormatInfo.Class#1\">Imports System.Globalization\n\nPublic Class CurrentCultureFormatProvider : Implements IFormatProvider\n   Public Function GetFormat(formatType As Type) As Object _\n                   Implements IFormatProvider.GetFormat\n      Console.WriteLine(&quot;Requesting an object of type {0}&quot;, \n                        formatType.Name)\n      If formatType Is GetType(NumberFormatInfo) Then\n         Return NumberFormatInfo.CurrentInfo\n      Else If formatType Is GetType(DateTimeFormatInfo) Then\n         Return DateTimeFormatInfo.CurrentInfo\n      Else\n         Return Nothing\n      End If\n   End Function\nEnd Class\n\nModule Example\n   Public Sub Main()\n      Dim amount As Decimal = 1203.541d\n      Dim value As String = amount.ToString(&quot;C2&quot;, New CurrentCultureFormatProvider())\n      Console.WriteLine(value)\n      Console.WriteLine()\n      Dim composite As String = String.Format(New CurrentCultureFormatProvider, \n                                              &quot;Date: {0}   Amount: {1}   Description: {2}&quot;,\n                                              Date.Now, 1264.03d, &quot;Service Charge&quot;)\n      Console.WriteLine(composite)\n      Console.WriteLine()\n   End Sub\nEnd Module\n&#39; The example displays output like the following:\n&#39;    Requesting an object of type NumberFormatInfo\n&#39;    $1,203.54\n&#39;    \n&#39;    Requesting an object of type ICustomFormatter\n&#39;    Requesting an object of type DateTimeFormatInfo\n&#39;    Requesting an object of type NumberFormatInfo\n&#39;    Date: 11/15/2012 2:00:01 PM   Amount: 1264.03   Description: Service Charge\n</code></pre><p>If an <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation is not explicitly provided in a numeric formatting method call, the method calls the <code>CultureInfo.CurrentCulture.GetFormat</code> method, which returns the NumberFormatInfo object that corresponds to the current thread culture.  </p>\n</li>\n</ul>\n<p><a name=\"properties\"></a>   </p>\n<h2 id=\"format-strings-and-numberformatinfo-properties\">Format strings and NumberFormatInfo properties</h2>\n<p> Every formatting operation uses either a standard or a custom numeric format string to produce a result string from a number. In some cases, the use of a format string to produce a result string is explicit, as in the following example. This code calls the <a class=\"xref\" href=\"system.decimal#System_Decimal_ToString_System_IFormatProvider_\" data-linktype=\"relative-path\">System.Decimal.ToString(IFormatProvider)</a> method to convert a <a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a> value to a number of different string representations by using the formatting conventions of the en-US culture.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Globalization.NumberFormatInfo.Class#2\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      string[] formatStrings = { &quot;C2&quot;, &quot;E1&quot;, &quot;F&quot;, &quot;G3&quot;, &quot;N&quot;, \n                                 &quot;#,##0.000&quot;, &quot;0,000,000,000.0##&quot; };\n      CultureInfo culture = CultureInfo.CreateSpecificCulture(&quot;en-US&quot;);\n      Decimal[] values = { 1345.6538m, 1921651.16m };\n      \n      foreach (var value in values) {\n         foreach (var formatString in formatStrings) {\n            string resultString = value.ToString(formatString, culture);\n            Console.WriteLine(&quot;{0,-18} --&gt;  {1}&quot;, formatString, resultString);\n         }\n         Console.WriteLine();      \n      }   \n   }\n}\n// The example displays the following output:\n//       C2                 --&gt;  $1,345.65\n//       E1                 --&gt;  1.3E+003\n//       F                  --&gt;  1345.65\n//       G3                 --&gt;  1.35E+03\n//       N                  --&gt;  1,345.65\n//       #,##0.000          --&gt;  1,345.654\n//       0,000,000,000.0##  --&gt;  0,000,001,345.654\n//       \n//       C2                 --&gt;  $1,921,651.16\n//       E1                 --&gt;  1.9E+006\n//       F                  --&gt;  1921651.16\n//       G3                 --&gt;  1.92E+06\n//       N                  --&gt;  1,921,651.16\n//       #,##0.000          --&gt;  1,921,651.160\n//       0,000,000,000.0##  --&gt;  0,001,921,651.16\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Globalization.NumberFormatInfo.Class#2\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      Dim formatStrings() As String = { &quot;C2&quot;, &quot;E1&quot;, &quot;F&quot;, &quot;G3&quot;, &quot;N&quot;, \n                                        &quot;#,##0.000&quot;, &quot;0,000,000,000.0##&quot; }\n      Dim culture As CultureInfo = CultureInfo.CreateSpecificCulture(&quot;en-US&quot;)\n      Dim values() As Decimal = { 1345.6538d, 1921651.16d }\n      \n      For Each value In values\n         For Each formatString In formatStrings\n            Dim resultString As String = value.ToString(formatString, culture)\n            Console.WriteLine(&quot;{0,-18} --&gt;  {1}&quot;, formatString, resultString)\n         Next\n         Console.WriteLine()      \n      Next   \n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       C2                 --&gt;  $1,345.65\n&#39;       E1                 --&gt;  1.3E+003\n&#39;       F                  --&gt;  1345.65\n&#39;       G3                 --&gt;  1.35E+03\n&#39;       N                  --&gt;  1,345.65\n&#39;       #,##0.000          --&gt;  1,345.654\n&#39;       0,000,000,000.0##  --&gt;  0,000,001,345.654\n&#39;       \n&#39;       C2                 --&gt;  $1,921,651.16\n&#39;       E1                 --&gt;  1.9E+006\n&#39;       F                  --&gt;  1921651.16\n&#39;       G3                 --&gt;  1.92E+06\n&#39;       N                  --&gt;  1,921,651.16\n&#39;       #,##0.000          --&gt;  1,921,651.160\n&#39;       0,000,000,000.0##  --&gt;  0,001,921,651.16\n</code></pre><p> In other cases, the use of a format string is implicit. For example, in the following method calls to the default or parameterless <a class=\"xref\" href=\"system.decimal#System_Decimal_ToString\" data-linktype=\"relative-path\">System.Decimal.ToString()</a> method, the value of the <a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a> instance is formatted by using the general (&quot;G&quot;) format specifier and the conventions of the current culture, which in this case is the en-US culture.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Globalization.NumberFormatInfo.Class#3\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      Decimal[] values = { 1345.6538m, 1921651.16m };\n      \n      foreach (var value in values) {\n         string resultString = value.ToString();\n         Console.WriteLine(resultString);\n         Console.WriteLine();      \n      }   \n   }\n}\n// The example displays the following output:\n//       1345.6538\n//       \n//       1921651.16\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Globalization.NumberFormatInfo.Class#3\">Module Example\n   Public Sub Main()\n      Dim values() As Decimal = { 1345.6538d, 1921651.16d }\n      \n      For Each value In values\n         Dim resultString As String = value.ToString()\n         Console.WriteLine(resultString)\n         Console.WriteLine()      \n      Next   \n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       1345.6538\n&#39;       \n&#39;       1921651.16\n</code></pre><p> Each standard numeric format string uses one or more NumberFormatInfo properties to determine the pattern or the symbols used in the result string. Similarly, each custom numeric format specifier except &quot;0&quot; and &quot;#&quot; insert symbols in the result string that are defined by NumberFormatInfo properties. The following table lists the standard and custom numeric format specifiers and their associated NumberFormatInfo properties.  To change the appearance of the result string for a particular culture, see the <a href=\"#modifying\" data-linktype=\"self-bookmark\">Modifying NumberFormatInfo properties</a> section. For details about the use of these format specifiers, see <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a> and <a href=\"../Topic/Custom%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Numeric Format Strings</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Format specifier</th>\n<th>Associated properties</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&quot;C&quot; or &quot;c&quot; (currency format specifier)</td>\n<td><a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrencyDecimalDigits_\" data-linktype=\"relative-path\">CurrencyDecimalDigits</a>, to define the default number of fractional digits.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrencyDecimalSeparator_\" data-linktype=\"relative-path\">CurrencyDecimalSeparator</a>, to define the decimal separator symbol.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrencyGroupSeparator_\" data-linktype=\"relative-path\">CurrencyGroupSeparator</a>, to define the group or thousands separator.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrencyGroupSizes_\" data-linktype=\"relative-path\">CurrencyGroupSizes</a>, to define the sizes of integral groups.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrencyNegativePattern_\" data-linktype=\"relative-path\">CurrencyNegativePattern</a>, to define the pattern of negative currency values.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrencyPositivePattern_\" data-linktype=\"relative-path\">CurrencyPositivePattern</a>, to define the pattern of positive currency values.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrencySymbol_\" data-linktype=\"relative-path\">CurrencySymbol</a>, to define the currency symbol.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NegativeSign_\" data-linktype=\"relative-path\">NegativeSign</a>, to define the negative sign symbol.</td>\n</tr>\n<tr>\n<td>&quot;D&quot; or &quot;d&quot; (decimal format specifier)</td>\n<td><a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NegativeSign_\" data-linktype=\"relative-path\">NegativeSign</a>, to define the negative sign symbol.</td>\n</tr>\n<tr>\n<td>&quot;E&quot; or &quot;e&quot; (exponential or scientific format specifier)</td>\n<td><a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NegativeSign_\" data-linktype=\"relative-path\">NegativeSign</a>, to define the negative sign symbol in the mantissa and exponent.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NumberDecimalSeparator_\" data-linktype=\"relative-path\">NumberDecimalSeparator</a>, to define the decimal separator symbol.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_PositiveSign_\" data-linktype=\"relative-path\">PositiveSign</a>, to define the positive sign symbol in the exponent.</td>\n</tr>\n<tr>\n<td>&quot;F&quot; or &quot;f&quot; (fixed-point format specifier)</td>\n<td><a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NegativeSign_\" data-linktype=\"relative-path\">NegativeSign</a>, to define the negative sign symbol.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NumberDecimalDigits_\" data-linktype=\"relative-path\">NumberDecimalDigits</a>, to define the default number of fractional digits.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NumberDecimalSeparator_\" data-linktype=\"relative-path\">NumberDecimalSeparator</a>, to define the decimal separator symbol.</td>\n</tr>\n<tr>\n<td>&quot;G&quot; or &quot;g&quot; (general format specifier)</td>\n<td><a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NegativeSign_\" data-linktype=\"relative-path\">NegativeSign</a>, to define the negative sign symbol.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NumberDecimalSeparator_\" data-linktype=\"relative-path\">NumberDecimalSeparator</a>, to define the decimal separator symbol.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_PositiveSign_\" data-linktype=\"relative-path\">PositiveSign</a>, to define the positive sign symbol for result strings in exponential format.</td>\n</tr>\n<tr>\n<td>&quot;N&quot; or &quot;n&quot; (number format specifier)</td>\n<td><a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NegativeSign_\" data-linktype=\"relative-path\">NegativeSign</a>, to define the negative sign symbol.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NumberDecimalDigits_\" data-linktype=\"relative-path\">NumberDecimalDigits</a>, to define the default number of fractional digits.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NumberDecimalSeparator_\" data-linktype=\"relative-path\">NumberDecimalSeparator</a>, to define the decimal separator symbol.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NumberGroupSeparator_\" data-linktype=\"relative-path\">NumberGroupSeparator</a>, to define the group separator (thousands) symbol.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NumberGroupSizes_\" data-linktype=\"relative-path\">NumberGroupSizes</a>, to define the number of integral digits in a group.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NumberNegativePattern_\" data-linktype=\"relative-path\">NumberNegativePattern</a>, to define the format of negative values.</td>\n</tr>\n<tr>\n<td>&quot;P&quot; or &quot;p&quot; (percent format specifier)</td>\n<td><a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NegativeSign_\" data-linktype=\"relative-path\">NegativeSign</a>, to define the negative sign symbol.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_PercentDecimalDigits_\" data-linktype=\"relative-path\">PercentDecimalDigits</a>, to define the default number of fractional digits.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_PercentDecimalSeparator_\" data-linktype=\"relative-path\">PercentDecimalSeparator</a>, to define the decimal separator symbol.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_PercentGroupSeparator_\" data-linktype=\"relative-path\">PercentGroupSeparator</a>, to define the group separator symbol.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_PercentGroupSizes_\" data-linktype=\"relative-path\">PercentGroupSizes</a>, to define the number of integral digits in a group.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_PercentNegativePattern_\" data-linktype=\"relative-path\">PercentNegativePattern</a>, to define the placement of the percent symbol and the negative symbol for negative values.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_PercentPositivePattern_\" data-linktype=\"relative-path\">PercentPositivePattern</a>, to define the placement of the percent symbol for positive values.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_PercentSymbol_\" data-linktype=\"relative-path\">PercentSymbol</a>, to define the percent symbol.</td>\n</tr>\n<tr>\n<td>&quot;R&quot; or &quot;r&quot; (round-trip format specifier)</td>\n<td><a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NegativeSign_\" data-linktype=\"relative-path\">NegativeSign</a>, to define the negative sign symbol.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NumberDecimalSeparator_\" data-linktype=\"relative-path\">NumberDecimalSeparator</a>, to define the decimal separator symbol.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_PositiveSign_\" data-linktype=\"relative-path\">PositiveSign</a>, to define the positive sign symbol in an exponent.</td>\n</tr>\n<tr>\n<td>&quot;X&quot; or &quot;x&quot; (hexadecimal format specifier)</td>\n<td>None.</td>\n</tr>\n<tr>\n<td>&quot;.&quot; (decimal point custom format specifier)</td>\n<td><a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NumberDecimalSeparator_\" data-linktype=\"relative-path\">NumberDecimalSeparator</a>, to define the decimal separator symbol.</td>\n</tr>\n<tr>\n<td>&quot;,&quot; (group separator custom format specifier)</td>\n<td><a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NumberGroupSeparator_\" data-linktype=\"relative-path\">NumberGroupSeparator</a>, to define the group (thousands) separator symbol.</td>\n</tr>\n<tr>\n<td>&quot;%&quot; (percentage placeholder custom format specifier)</td>\n<td><a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_PercentSymbol_\" data-linktype=\"relative-path\">PercentSymbol</a>, to define the percent symbol.</td>\n</tr>\n<tr>\n<td>&quot;‰&quot; (per mille placeholder custom format specifier)</td>\n<td><a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_PerMilleSymbol_\" data-linktype=\"relative-path\">PerMilleSymbol</a>, to define the per mille symbol.</td>\n</tr>\n<tr>\n<td>&quot;E&quot; (exponential notation custom format specifier)</td>\n<td><a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NegativeSign_\" data-linktype=\"relative-path\">NegativeSign</a>, to define the negative sign symbol in the mantissa and exponent.<br><br> <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_PositiveSign_\" data-linktype=\"relative-path\">PositiveSign</a>, to define the positive sign symbol in the exponent.</td>\n</tr>\n</tbody>\n</table>\n<p> Note that the NumberFormatInfo class includes a <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NativeDigits_\" data-linktype=\"relative-path\">NativeDigits</a> property that specifies the base 10 digits used by a specific culture. However, the property is not used in formatting operations; only the Basic Latin digits 0 (U+0030) through 9 (U+0039) are used in the result string. In addition, for <a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a> and <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> values of <code>NaN</code>, <code>PositiveInfinity</code>, and <code>NegativeInfinity</code>, the result string consists exclusively of the symbols defined by the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NaNSymbol_\" data-linktype=\"relative-path\">NaNSymbol</a>, <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_PositiveInfinitySymbol_\" data-linktype=\"relative-path\">PositiveInfinitySymbol</a>, and <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NegativeInfinitySymbol_\" data-linktype=\"relative-path\">NegativeInfinitySymbol</a> properties, respectively.  </p>\n<p><a name=\"modifying\"></a>   </p>\n<h2 id=\"modifying-numberformatinfo-properties\">Modifying NumberFormatInfo properties</h2>\n<p> You can modify the properties of a NumberFormatInfo object to customize the result string produced in a numeric formatting operation. To do this:  </p>\n<ol>\n<li><p>Create a read/write copy of a NumberFormatInfo object whose formatting conventions you want to modify. For more information, see the <a href=\"#Instantiating\" data-linktype=\"self-bookmark\">Instantiating a NumberFormatInfo object</a> section.  </p>\n</li>\n<li><p>Modify the property or properties that are used to produce the desired result string. For information about how formatting methods use NumberFormatInfo properties to define result strings, see the <a href=\"#properties\" data-linktype=\"self-bookmark\">Format strings and NumberFormatInfo properties</a> section.  </p>\n</li>\n<li><p>Use the custom NumberFormatInfo object as the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> argument in calls to formatting methods.  </p>\n</li>\n</ol>\n<div class=\"NOTE\"><h5>Note</h5><p> Instead of dynamically modifying a culture&#39;s property values each time an application is started, you can use the <a class=\"xref\" href=\"system.globalization.cultureandregioninfobuilder\" data-linktype=\"relative-path\">CultureAndRegionInfoBuilder</a> class to define either a custom culture (a culture that has a unique name and that supplements existing cultures) or a replacement culture (one that is used instead of a specific culture).  </p>\n</div>\n<p> The following sections provide some examples.  </p>\n<p><a name=\"currency\"></a>   </p>\n<h3 id=\"modifying-the-currency-symbol-and-pattern\">Modifying the currency symbol and pattern</h3>\n<p> The following example modifies a NumberFormatInfo object that that represents the formatting conventions of the en-US culture. It assigns the ISO-4217 currency symbol to the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrencySymbol_\" data-linktype=\"relative-path\">CurrencySymbol</a> property and defines a pattern for currency values that consists of the currency symbol followed by a space and a numeric value.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Globalization.NumberFormatInfo.Customize#1\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      // Retrieve a writable NumberFormatInfo object.\n      CultureInfo enUS = CultureInfo.CreateSpecificCulture(&quot;en-US&quot;);\n      NumberFormatInfo nfi = enUS.NumberFormat;\n\n      // Use the ISO currency symbol instead of the native currency symbol.\n      nfi.CurrencySymbol =  (new RegionInfo(enUS.Name)).ISOCurrencySymbol;\n      // Change the positive currency pattern to &lt;code&gt;&lt;space&gt;&lt;value&gt;.\n      nfi.CurrencyPositivePattern = 2;\n      // Change the negative currency pattern to &lt;code&gt;&lt;space&gt;&lt;sign&gt;&lt;value&gt;.     \n      nfi.CurrencyNegativePattern = 12;\n      \n      // Produce the result strings by calling ToString.\n      Decimal[] values = { 1065.23m, 19.89m, -.03m, -175902.32m };\n      foreach (var value in values)\n         Console.WriteLine(value.ToString(&quot;C&quot;, enUS));\n\n      Console.WriteLine();\n      \n      // Produce the result strings by calling a composite formatting method.\n      foreach (var value in values)\n         Console.WriteLine(String.Format(enUS, &quot;{0:C}&quot;, value));      \n   }\n}\n// The example displays the following output:\n//       USD 1,065.23\n//       USD 19.89\n//       USD -0.03\n//       USD -175,902.32\n//       \n//       USD 1,065.23\n//       USD 19.89\n//       USD -0.03\n//       USD -175,902.32\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Globalization.NumberFormatInfo.Customize#1\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      &#39; Retrieve a writable NumberFormatInfo object.\n      Dim enUS As CultureInfo = CultureInfo.CreateSpecificCulture(&quot;en-US&quot;)\n      Dim nfi As NumberFormatInfo = enUS.NumberFormat\n\n      &#39; Use the ISO currency symbol instead of the native currency symbol.\n      nfi.CurrencySymbol =  (New RegionInfo(enUS.Name)).ISOCurrencySymbol\n      &#39; Change the positive currency pattern to &lt;code&gt;&lt;space&gt;&lt;value&gt;.\n      nfi.CurrencyPositivePattern = 2\n      &#39; Change the negative currency pattern to &lt;code&gt;&lt;space&gt;&lt;sign&gt;&lt;value&gt;.     \n      nfi.CurrencyNegativePattern = 12\n      \n      &#39; Produce the result strings by calling ToString.\n      Dim values() As Decimal = { 1065.23d, 19.89d, -.03d, -175902.32d }\n      For Each value In values\n         Console.WriteLine(value.ToString(&quot;C&quot;, enUS))\n      Next      \n      Console.WriteLine()\n      \n      &#39; Produce the result strings by calling a composite formatting method.\n      For Each value In values\n         Console.WriteLine(String.Format(enUS, &quot;{0:C}&quot;, value))      \n      Next\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       USD 1,065.23\n&#39;       USD 19.89\n&#39;       USD -0.03\n&#39;       USD -175,902.32\n&#39;       \n&#39;       USD 1,065.23\n&#39;       USD 19.89\n&#39;       USD -0.03\n&#39;       USD -175,902.32\n</code></pre><p><a name=\"id\"></a>   </p>\n<h3 id=\"formatting-a-national-identification-number\">Formatting a national identification number</h3>\n<p> Many national identification numbers consist exclusively of digits and so can easily be formatted by modifying the properties of a NumberFormatInfo object. For example, a social security number in the United States consists of 9 digits arranged as follows: <code>XXX-XX-XXXX</code>. The following example assumes that social security numbers are stored as integer values and formats them appropriately.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Globalization.NumberFormatInfo.Customize#2\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      // Instantiate a read-only NumberFormatInfo object.\n      CultureInfo enUS = CultureInfo.CreateSpecificCulture(&quot;en-US&quot;);\n      NumberFormatInfo nfi = enUS.NumberFormat;\n\n      // Modify the relevant properties.\n      nfi.NumberGroupSeparator = &quot;-&quot;;\n      nfi.NumberGroupSizes = new int[] { 3, 2, 4};\n      nfi.NumberDecimalDigits = 0;\n      \n      int[] ids = { 111223333, 999776666 };\n      \n      // Produce the result string by calling ToString.\n      foreach (var id in ids)\n         Console.WriteLine(id.ToString(&quot;N&quot;, enUS));\n\n      Console.WriteLine();\n      \n      // Produce the result string using composite formatting.\n      foreach (var id in ids)\n         Console.WriteLine(String.Format(enUS, &quot;{0:N}&quot;, id));\n   }\n}\n// The example displays the following output:\n//       1112-23-333\n//       9997-76-666\n//       \n//       1112-23-333\n//       9997-76-666\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Globalization.NumberFormatInfo.Customize#2\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      &#39; Instantiate a read-only NumberFormatInfo object.\n      Dim enUS As CultureInfo = CultureInfo.CreateSpecificCulture(&quot;en-US&quot;)\n      Dim nfi As NumberFormatInfo = enUS.NumberFormat\n\n      &#39; Modify the relevant properties.\n      nfi.NumberGroupSeparator = &quot;-&quot;\n      nfi.NumberGroupSizes = { 3, 2, 4}\n      nfi.NumberDecimalDigits = 0\n      \n      Dim ids() As Integer = { 111223333, 999776666 }\n      \n      &#39; Produce the result string by calling ToString.\n      For Each id In ids\n         Console.WriteLine(id.ToString(&quot;N&quot;, enUS))\n      Next \n      Console.WriteLine()\n      \n      &#39; Produce the result string using composite formatting.\n      For Each id In ids\n         Console.WriteLine(String.Format(enUS, &quot;{0:N}&quot;, id))\n      Next\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       1112-23-333\n&#39;       9997-76-666\n&#39;       \n&#39;       1112-23-333\n&#39;       9997-76-666\n</code></pre><p><a name=\"parsing\"></a>   </p>\n<h2 id=\"parsing-numeric-strings\">Parsing numeric strings</h2>\n<p> Parsing involves converting the string representation of a number to a number. Each numeric type in the .NET Framework includes two overloaded parsing methods: <code>Parse</code> and <code>TryParse</code>. The <code>Parse</code> method converts a string to a number and throws an exception if the conversion fails. The <code>TryParse</code> method converts a string to a number, assigns the number to an <code>out</code> argument, and returns a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether the conversion succeeded.  </p>\n<p> The parsing methods implicitly or explicitly use a <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> enumeration value to determine what style elements (such as group separators, a decimal separator, or a currency symbol) can be present in a string if the parsing operation is to succeed. If a <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> value is not provided in the method call, the default is a <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> value that includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> and <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> flags, which specifies that the parsed string can include group symbols, a decimal separator, a negative sign, and white-space characters, or it can be the string representation of a number in exponential notation.  </p>\n<p> The parsing methods also implicitly or explicitly use a NumberFormatInfo object that defines the specific symbols and patterns that can occur in the string to be parsed. If a NumberFormatInfo object is not provided, the default is the NumberFormatInfo for the current thread culture. For more information about parsing, see the individual parsing methods, such as <a class=\"xref\" href=\"system.int16#System_Int16_Parse_System_String_\" data-linktype=\"relative-path\">System.Int16.Parse(String)</a>, <a class=\"xref\" href=\"system.int32#System_Int32_Parse_System_String_System_Globalization_NumberStyles_\" data-linktype=\"relative-path\">System.Int32.Parse(String,NumberStyles)</a>, <a class=\"xref\" href=\"system.int64#System_Int64_Parse_System_String_System_IFormatProvider_\" data-linktype=\"relative-path\">System.Int64.Parse(String,IFormatProvider)</a>, <a class=\"xref\" href=\"system.decimal#System_Decimal_Parse_System_String_System_Globalization_NumberStyles_System_IFormatProvider_\" data-linktype=\"relative-path\">System.Decimal.Parse(String,NumberStyles,IFormatProvider)</a>, <a class=\"xref\" href=\"system.double#System_Double_TryParse_System_String_System_Double__\" data-linktype=\"relative-path\">System.Double.TryParse(String,Double)</a>, and <a class=\"xref\" href=\"system.numerics.biginteger#System_Numerics_BigInteger_TryParse_System_String_System_Globalization_NumberStyles_System_IFormatProvider_System_Numerics_BigInteger__\" data-linktype=\"relative-path\">System.Numerics.BigInteger.TryParse(String,NumberStyles,IFormatProvider,BigInteger)</a>.  </p>\n<p> The following example illustrates the culture-sensitive nature of parsing strings. It tries to parse a string that include thousands separators by using the conventions of the en-US, fr-FR, and invariant cultures. A string that includes the comma as a group separator and the period as a decimal separator fails to parse in the fr-FR culture, and a string with white space as a group separator and a comma as a decimal separator fails to parse in the en-US and invariant cultures.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Globalization.NumberFormatInfo.Class#4\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      String[] values = { &quot;1,034,562.91&quot;, &quot;9 532 978,07&quot; };\n      String[] cultureNames = { &quot;en-US&quot;, &quot;fr-FR&quot;, &quot;&quot; };\n      \n      foreach (var value in values) {\n         foreach (var cultureName in cultureNames) {\n            CultureInfo culture = CultureInfo.CreateSpecificCulture(cultureName);\n            String name = culture.Name == &quot;&quot; ? &quot;Invariant&quot; : culture.Name;\n            try {\n               Decimal amount = Decimal.Parse(value, culture);\n               Console.WriteLine(&quot;&#39;{0}&#39; --&gt; {1} ({2})&quot;, value, amount, name);\n            }\n            catch (FormatException) {\n               Console.WriteLine(&quot;&#39;{0}&#39;: FormatException ({1})&quot;,\n                                 value, name);\n            }   \n         }\n         Console.WriteLine();\n      }\n   }\n}\n// The example displays the following output:\n//       &#39;1,034,562.91&#39; --&gt; 1034562.91 (en-US)\n//       &#39;1,034,562.91&#39;: FormatException (fr-FR)\n//       &#39;1,034,562.91&#39; --&gt; 1034562.91 (Invariant)\n//       \n//       &#39;9 532 978,07&#39;: FormatException (en-US)\n//       &#39;9 532 978,07&#39; --&gt; 9532978.07 (fr-FR)\n//       &#39;9 532 978,07&#39;: FormatException (Invariant)\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Globalization.NumberFormatInfo.Class#4\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      Dim values() As String = { &quot;1,034,562.91&quot;, &quot;9 532 978,07&quot; }\n      Dim cultureNames() As String = { &quot;en-US&quot;, &quot;fr-FR&quot;, &quot;&quot; }\n      \n      For Each value In values\n         For Each cultureName In cultureNames\n            Dim culture As CultureInfo = CultureInfo.CreateSpecificCulture(cultureName)\n            Dim name As String = If(culture.Name = &quot;&quot;, &quot;Invariant&quot;, culture.Name)\n            Try\n               Dim amount As Decimal = Decimal.Parse(value, culture)\n               Console.WriteLine(&quot;&#39;{0}&#39; --&gt; {1} ({2})&quot;, value, amount, name)\n            Catch e As FormatException\n               Console.WriteLine(&quot;&#39;{0}&#39;: FormatException ({1})&quot;,\n                                 value, name)\n            End Try   \n         Next\n         Console.WriteLine()\n      Next\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       &#39;1,034,562.91&#39; --&gt; 1034562.91 (en-US)\n&#39;       &#39;1,034,562.91&#39;: FormatException (fr-FR)\n&#39;       &#39;1,034,562.91&#39; --&gt; 1034562.91 (Invariant)\n&#39;       \n&#39;       &#39;9 532 978,07&#39;: FormatException (en-US)\n&#39;       &#39;9 532 978,07&#39; --&gt; 9532978.07 (fr-FR)\n&#39;       &#39;9 532 978,07&#39;: FormatException (Invariant)\n</code></pre><p> Parsing generally occurs in two contexts:  </p>\n<ul>\n<li><p>As an operation that is designed to convert user input into a numeric value.  </p>\n</li>\n<li><p>As an operation that is designed to round-trip a numeric value; that is, to deserialize a numeric value that was previously serialized as a string.  </p>\n<p>The following sections discuss these two operations in greater detail.  </p>\n</li>\n</ul>\n<p><a name=\"ParseUser\"></a>   </p>\n<h3 id=\"parsing-user-strings\">Parsing user strings</h3>\n<p> When you are parsing numeric strings input by the user, you should always instantiate a NumberFormatInfo object that reflects the user&#39;s cultural settings. For information about how to instantiate a NumberFormatInfo object that reflects user customizations, see the <a href=\"#dynamic\" data-linktype=\"self-bookmark\">NumberFormatInfo and dynamic data</a> section.  </p>\n<p> The following example illustrates the difference between a parsing operation that reflects user cultural settings and one that does not. In this case, the default system culture is en-US, but the user has defined &quot;,&quot; as the decimal symbol and &quot;.&quot; as the group separator in Control Panel, <strong>Region and Language</strong>. Ordinarily, these symbols are reversed in the default en-US culture. When the user enters a string that reflects user settings, and the string is parsed by a NumberFormatInfo object that also reflects user settings (overrides), the parsing operation returns a correct result. However, when the string is parsed by a NumberFormatInfo object that reflects standard en-US cultural settings, it mistakes the comma symbol for a group separator and returns an incorrect result.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Globalization.NumberFormatInfo.Class#5\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      CultureInfo stdCulture = CultureInfo.GetCultureInfo(&quot;en-US&quot;);\n      CultureInfo custCulture = CultureInfo.CreateSpecificCulture(&quot;en-US&quot;); \n            \n      String value = &quot;310,16&quot;;\n      try {\n         Console.WriteLine(&quot;{0} culture reflects user overrides: {1}&quot;, \n                           stdCulture.Name, stdCulture.UseUserOverride);\n         Decimal amount = Decimal.Parse(value, stdCulture);\n         Console.WriteLine(&quot;&#39;{0}&#39; --&gt; {1}&quot;, value, amount.ToString(CultureInfo.InvariantCulture));                                                                                        \n      }\n      catch (FormatException) {\n         Console.WriteLine(&quot;Unable to parse &#39;{0}&#39;&quot;, value);\n      }    \n      Console.WriteLine();\n                                            \n      try {\n         Console.WriteLine(&quot;{0} culture reflects user overrides: {1}&quot;, \n                           custCulture.Name, custCulture.UseUserOverride);\n         Decimal amount = Decimal.Parse(value, custCulture);\n         Console.WriteLine(&quot;&#39;{0}&#39; --&gt; {1}&quot;, value, amount.ToString(CultureInfo.InvariantCulture));                                                                                        \n      }\n      catch (FormatException) {\n         Console.WriteLine(&quot;Unable to parse &#39;{0}&#39;&quot;, value);\n      }   \n   }\n}\n// The example displays the following output:\n//       en-US culture reflects user overrides: False\n//       &#39;310,16&#39; --&gt; 31016\n//       \n//       en-US culture reflects user overrides: True\n//       &#39;310,16&#39; --&gt; 310.16\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Globalization.NumberFormatInfo.Class#5\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      Dim stdCulture As CultureInfo = CultureInfo.GetCultureInfo(&quot;en-US&quot;)\n      Dim custCulture As CultureInfo = CultureInfo.CreateSpecificCulture(&quot;en-US&quot;) \n            \n      Dim value As String = &quot;310,16&quot;\n      Try\n         Console.WriteLine(&quot;{0} culture reflects user overrides: {1}&quot;, \n                           stdCulture.Name, stdCulture.UseUserOverride)\n         Dim amount As Decimal = Decimal.Parse(value, stdCulture)\n         Console.WriteLine(&quot;&#39;{0}&#39; --&gt; {1}&quot;, value, amount.ToString(CultureInfo.InvariantCulture))                                                                                        \n      Catch e As FormatException\n         Console.WriteLine(&quot;Unable to parse &#39;{0}&#39;&quot;, value)\n      End Try   \n      Console.WriteLine()\n                                            \n      Try\n         Console.WriteLine(&quot;{0} culture reflects user overrides: {1}&quot;, \n                           custCulture.Name, custCulture.UseUserOverride)\n         Dim amount As Decimal = Decimal.Parse(value, custCulture)\n         Console.WriteLine(&quot;&#39;{0}&#39; --&gt; {1}&quot;, value, amount.ToString(CultureInfo.InvariantCulture))                                                                                        \n      Catch e As FormatException\n         Console.WriteLine(&quot;Unable to parse &#39;{0}&#39;&quot;, value)\n      End Try   \n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       en-US culture reflects user overrides: False\n&#39;       &#39;310,16&#39; --&gt; 31016\n&#39;       \n&#39;       en-US culture reflects user overrides: True\n&#39;       &#39;310,16&#39; --&gt; 310.16\n</code></pre><p><a name=\"ParseSerial\"></a>   </p>\n<h3 id=\"serializing-and-deserializing-numeric-data\">Serializing and deserializing numeric data</h3>\n<p> When numeric data is serialized in string format and later deserialized and parsed, the strings should be generated and parsed by using the conventions of the invariant culture. The formatting and parsing operations should never reflect the conventions of a specific culture. If culture-specific settings are used, the portability of the data is strictly limited; it can be successfully deserialized only on a thread whose culture-specific settings are identical to those of the thread on which it was serialized. In some cases, this means that the data cannot even be successfully deserialized on the same system on which it was serialized.  </p>\n<p> The following example illustrates what can happen when this principle is violated. Floating-point values in an array are converted to strings when the current thread uses the culture-specific settings of the en-US culture. The data is then parsed by a thread that uses the culture-specific settings of the en-GB culture. In this case, although each parsing operation succeeds, the data does not round-trip successfully and data corruption occurs. In other cases, a parsing operation could fail and a <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a> exception could be thrown.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Globalization.NumberFormatInfo.Class#6\">using System;\nusing System.Collections.Generic;\nusing System.Globalization;\nusing System.IO;\nusing System.Threading;\n\npublic class Example\n{\n   public static void Main()\n   {\n      Thread.CurrentThread.CurrentCulture = CultureInfo.CreateSpecificCulture(&quot;en-US&quot;);\n      PersistData();\n      \n      Thread.CurrentThread.CurrentCulture = CultureInfo.CreateSpecificCulture(&quot;en-GB&quot;);\n      RestoreData();\n   }\n\n   private static void PersistData()\n   {\n      // Define an array of floating-point values.\n      Double[] values = { 160325.972, 8631.16, 1.304e5, 98017554.385, \n                          8.5938287084321676e94 };\n      Console.WriteLine(&quot;Original values: &quot;);\n      foreach (var value in values) \n         Console.WriteLine(value.ToString(&quot;R&quot;, CultureInfo.InvariantCulture));\n         \n      // Serialize an array of doubles to a file \n      StreamWriter sw = new StreamWriter(@&quot;.\\NumericData.bin&quot;);\n      for (int ctr = 0; ctr &lt; values.Length; ctr++) {\n         sw.Write(values[ctr].ToString(&quot;R&quot;));\n         if (ctr &lt; values.Length - 1) sw.Write(&quot;|&quot;);\n      }\n      sw.Close();\n      Console.WriteLine();\n   }\n   \n   private static void RestoreData()\n   {   \n      // Deserialize the data\n      StreamReader sr = new StreamReader(@&quot;.\\NumericData.bin&quot;);\n      String data = sr.ReadToEnd();\n      sr.Close();\n      \n      String[] stringValues = data.Split(&#39;|&#39;);\n      List&lt;Double&gt; newValueList = new List&lt;Double&gt;();\n      \n      foreach (var stringValue in stringValues) {\n         try {\n            newValueList.Add(Double.Parse(stringValue));\n         }\n         catch (FormatException) {\n            newValueList.Add(Double.NaN);\n         }   \n      }                                   \n\n      Console.WriteLine(&quot;Restored values:&quot;);\n      foreach (var newValue in newValueList) \n         Console.WriteLine(newValue.ToString(&quot;R&quot;, NumberFormatInfo.InvariantInfo));\n   }\n}\n// The example displays the following output:\n//       Original values:\n//       160325.972\n//       8631.16\n//       130400\n//       98017554.385\n//       8.5938287084321671E+94\n//       \n//       Restored values:\n//       160325972\n//       863116\n//       130400\n//       98017554385\n//       8.5938287084321666E+110\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Globalization.NumberFormatInfo.Class#6\">Imports System.Collections.Generic\nImports System.Globalization\nImports System.IO\nImports System.Threading\n\nModule Example\n   Public Sub Main()\n      Thread.CurrentThread.CurrentCulture = CultureInfo.CreateSpecificCulture(&quot;en-US&quot;)\n      PersistData()\n      \n      Thread.CurrentThread.CurrentCulture = CultureInfo.CreateSpecificCulture(&quot;en-GB&quot;)\n      RestoreData()\n   End Sub\n   \n   Private Sub PersistData()\n      &#39; Define an array of floating-point values.\n      Dim values() As Double = { 160325.972, 8631.16, 1.304e5, 98017554.385, \n                                 8.5938287084321676e94 }\n      Console.WriteLine(&quot;Original values: &quot;)\n      For Each value In values\n         Console.WriteLine(value.ToString(&quot;R&quot;, CultureInfo.InvariantCulture))\n      Next\n         \n      &#39; Serialize an array of doubles to a file \n      Dim sw As New StreamWriter(&quot;.\\NumericData.bin&quot;)\n      For ctr As Integer = 0 To values.Length - 1\n         sw.Write(values(ctr).ToString(&quot;R&quot;))\n         If ctr &lt; values.Length - 1 Then sw.Write(&quot;|&quot;)\n      Next\n      sw.Close()\n      Console.WriteLine()\n   End Sub\n   \n   Private Sub RestoreData()   \n      &#39; Deserialize the data\n      Dim sr AS New StreamReader(&quot;.\\NumericData.bin&quot;)\n      Dim data As String = sr.ReadToEnd()\n      sr.Close()\n      \n      Dim stringValues() As String = data.Split(&quot;|&quot;c)\n      Dim newValueList As New List(Of Double)\n      \n      For Each stringValue In stringValues\n         Try\n            newValueList.Add(Double.Parse(stringValue))\n         Catch e As FormatException\n            newValueList.Add(Double.NaN)\n         End Try   \n      Next                                   \n\n      Console.WriteLine(&quot;Restored values:&quot;)\n      For Each newValue In newValueList\n         Console.WriteLine(newValue.ToString(&quot;R&quot;, NumberFormatInfo.InvariantInfo))\n      Next\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       Original values:\n&#39;       160325.972\n&#39;       8631.16\n&#39;       130400\n&#39;       98017554.385\n&#39;       8.5938287084321671E+94\n&#39;       \n&#39;       Restored values:\n&#39;       160325972\n&#39;       863116\n&#39;       130400\n&#39;       98017554385\n&#39;       8.5938287084321666E+110\n</code></pre>\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">NumberFormatInfo()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new writable instance of the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> class that is culture-independent (invariant).</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public NumberFormatInfo ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The properties of the new instance can be modified if your application needs user-defined formatting.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_CurrencyDecimalDigits\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CurrencyDecimalDigits</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the number of decimal places to use in currency values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int CurrencyDecimalDigits { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of decimal places to use in currency values. The default for <span class=\"xref\">stem.Globalization.NumberFormatInfo.InvariantInfo*</span> is 2.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to a value that is less than 0 or greater than 99.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The CurrencyDecimalDigits property is used with the &quot;C&quot; standard format string without a precision specifier in numeric formatting operations. It defines the default number of fractional digits that appear after the decimal separator. This value is overridden if a precision specifier is used. For more information, see <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_CurrencyDecimalSeparator\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CurrencyDecimalSeparator</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the string to use as the decimal separator in currency values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string CurrencyDecimalSeparator { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to use as the decimal separator in currency values. The default for <span class=\"xref\">stem.Globalization.NumberFormatInfo.InvariantInfo*</span> is &quot;.&quot;.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to an empty string.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The initial value of this property is derived from the settings in the <strong>Region and Language</strong> item in Control Panel.  </p>\n<p> The CurrencyDecimalSeparator property is used with the &quot;C&quot; standard format string to define the symbol that separates integral from fractional digits. For more information, see <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_CurrencyGroupSeparator\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CurrencyGroupSeparator</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the string that separates groups of digits to the left of the decimal in currency values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string CurrencyGroupSeparator { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string that separates groups of digits to the left of the decimal in currency values. The default for <span class=\"xref\">stem.Globalization.NumberFormatInfo.InvariantInfo*</span> is &quot;,&quot;.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The initial value of this property is derived from the settings in the <strong>Regional and Language</strong> item in Control Panel.  </p>\n<p> The CurrencyGroupSeparator property is used with the &quot;C&quot; standard format string to define the symbol that separates groups of integral digits. For more information, see <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_CurrencyGroupSizes\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CurrencyGroupSizes</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the number of digits in each group to the left of the decimal in currency values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int[] CurrencyGroupSizes { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of digits in each group to the left of the decimal in currency values. The default for <span class=\"xref\">stem.Globalization.NumberFormatInfo.InvariantInfo*</span> is a one-dimensional array with only one element, which is set to 3.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the array contains an entry that is less than 0 or greater than 9.  </p>\n<p> -or-  </p>\n<p> The property is being set and the array contains an entry, other than the last entry, that is set to 0.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The CurrencyGroupSizes property is used with the &quot;C&quot; standard format string to define the number of digits that appear in integral groups. For more information, see <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a>. Every element in the one-dimensional array must be an integer from 1 through 9. The last element can be 0.  </p>\n<p> The first element of the array defines the number of elements in the least significant group of digits immediately to the left of the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrencyDecimalSeparator_\" data-linktype=\"relative-path\">CurrencyDecimalSeparator</a>. Each subsequent element refers to the next significant group of digits to the left of the previous group. If the last element of the array is not 0, the remaining digits are grouped based on the last element of the array. If the last element is 0, the remaining digits are not grouped.  </p>\n<p> For example, if the array contains { 3, 4, 5 }, the digits are grouped similar to &quot;$55,55555,55555,55555,4444,333.00&quot;. If the array contains { 3, 4, 0 }, the digits are grouped similar to &quot;$55555555555555555,4444,333.00&quot;.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_CurrencyNegativePattern\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CurrencyNegativePattern</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the format pattern for negative currency values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int CurrencyNegativePattern { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The format pattern for negative currency values. The default for <span class=\"xref\">stem.Globalization.NumberFormatInfo.InvariantInfo*</span> is 0, which represents &quot;($n)&quot;, where &quot;$&quot; is the <span class=\"xref\">stem.Globalization.NumberFormatInfo.CurrencySymbol*</span> and <code>n</code> is a number.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to a value that is less than 0 or greater than 15.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The CurrencyNegativePattern property is used with the &quot;C&quot; standard format string to define the pattern of negative currency values. For more information, see <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a>. This property has one of the values in the following table. The symbol &quot;$&quot; is the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrencySymbol_\" data-linktype=\"relative-path\">CurrencySymbol</a>, the symbol &quot;-&quot; is the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NegativeSign_\" data-linktype=\"relative-path\">NegativeSign</a>, and <code>n</code> is a number.  </p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Associated pattern</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>($n)</td>\n</tr>\n<tr>\n<td>1</td>\n<td>-$n</td>\n</tr>\n<tr>\n<td>2</td>\n<td>$-n</td>\n</tr>\n<tr>\n<td>3</td>\n<td>$n-</td>\n</tr>\n<tr>\n<td>4</td>\n<td>(n$)</td>\n</tr>\n<tr>\n<td>5</td>\n<td>-n$</td>\n</tr>\n<tr>\n<td>6</td>\n<td>n-$</td>\n</tr>\n<tr>\n<td>7</td>\n<td>n$-</td>\n</tr>\n<tr>\n<td>8</td>\n<td>-n $</td>\n</tr>\n<tr>\n<td>9</td>\n<td>-$ n</td>\n</tr>\n<tr>\n<td>10</td>\n<td>n $-</td>\n</tr>\n<tr>\n<td>11</td>\n<td>$ n-</td>\n</tr>\n<tr>\n<td>12</td>\n<td>$ -n</td>\n</tr>\n<tr>\n<td>13</td>\n<td>n- $</td>\n</tr>\n<tr>\n<td>14</td>\n<td>($ n)</td>\n</tr>\n<tr>\n<td>15</td>\n<td>(n $)</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_CurrencyPositivePattern\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CurrencyPositivePattern</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the format pattern for positive currency values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int CurrencyPositivePattern { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The format pattern for positive currency values. The default for <span class=\"xref\">stem.Globalization.NumberFormatInfo.InvariantInfo*</span> is 0, which represents &quot;$n&quot;, where &quot;$&quot; is the <span class=\"xref\">stem.Globalization.NumberFormatInfo.CurrencySymbol*</span> and <code>n</code> is a number.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to a value that is less than 0 or greater than 3.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The CurrencyPositivePattern property is used with the &quot;C&quot; standard format string to define pattern of positive currency values. For more information, see <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a>. This property has one of the values in the following table. The symbol &quot;$&quot; is the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrencySymbol_\" data-linktype=\"relative-path\">CurrencySymbol</a> and <code>n</code> is a number.  </p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Associated pattern</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>$n</td>\n</tr>\n<tr>\n<td>1</td>\n<td>n$</td>\n</tr>\n<tr>\n<td>2</td>\n<td>$ n</td>\n</tr>\n<tr>\n<td>3</td>\n<td>n $</td>\n</tr>\n</tbody>\n</table>\n<p> Note that the pattern does not support a positive sign.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_CurrencySymbol\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CurrencySymbol</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the string to use as the currency symbol.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string CurrencySymbol { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to use as the currency symbol. The default for <span class=\"xref\">stem.Globalization.NumberFormatInfo.InvariantInfo*</span> is &quot;¤&quot;.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The string assigned to the CurrencySymbol property is included in the result string when a numeric value is formatted with the &quot;C&quot; <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">standard numeric format string</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_CurrentInfo\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CurrentInfo</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a read-only <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> that formats values based on the current culture.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Globalization.NumberFormatInfo CurrentInfo { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A read-only <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> based on the culture of the current thread.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Retrieving a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object from the CurrentInfo property is equivalent to retrieving a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object from the <code>CultureInfo.CurrentCulture.NumberFormat</code> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_DigitSubstitution\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DigitSubstitution</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value that specifies how the graphical user interface displays the shape of a digit.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Globalization.DigitShapes DigitSubstitution { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.digitshapes\" data-linktype=\"relative-path\">DigitShapes</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the enumeration values that specifies the culture-specific digit shape.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The current <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value in a set operation is not a valid <a class=\"xref\" href=\"system.globalization.digitshapes\" data-linktype=\"relative-path\">DigitShapes</a> value.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"IMPORTANT\"><h5>Important</h5><p> The DigitSubstitution property is reserved for future use. Currently, it is not used in either parsing or formatting operations for the current <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_InvariantInfo\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InvariantInfo</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a read-only <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that is culture-independent (invariant).</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Globalization.NumberFormatInfo InvariantInfo { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A read-only  object that is culture-independent (invariant).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object returned by this property does not change, regardless of the current culture. It represents the formatting conventions of the invariant culture, which is a culture associated with the English language but not with any country/region. The invariant culture is used in formatting operations that are culture-independent or that produce result strings suitable for display across multiple cultures.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_IsReadOnly\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsReadOnly</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsReadOnly { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> is read-only; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Attempting to perform an assignment to a property of a read-only <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> causes an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a>.  </p>\n<p> You can call the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_Clone_\" data-linktype=\"relative-path\">Clone</a> method to create a read/write <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object from a read-only object, as the following example illustrates.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Globalization.NumberFormatInfo.IsReadOnly#1\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      NumberFormatInfo nfi = NumberFormatInfo.CurrentInfo;\n      Console.WriteLine(&quot;Read-Only: {0}\\n&quot;, nfi.IsReadOnly);\n\n      NumberFormatInfo nfiw = (NumberFormatInfo) nfi.Clone();\n      Console.WriteLine(&quot;Read-Only: {0}&quot;, nfiw.IsReadOnly);\n   }\n}\n// The example displays the following output:\n//       Read-Only: True\n//       \n//       Read-Only: False\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Globalization.NumberFormatInfo.IsReadOnly#1\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      Dim nfi As NumberFormatInfo = NumberFormatInfo.CurrentInfo\n      Console.WriteLine(&quot;Read-Only: {0}&quot;, nfi.IsReadOnly)\n      Console.WriteLine()\n      Dim nfiw As NumberFormatInfo = CType(nfi.Clone(), NumberFormatInfo)\n      Console.WriteLine(&quot;Read-Only: {0}&quot;, nfiw.IsReadOnly)\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       Read-Only: True\n&#39;       \n&#39;       Read-Only: False\n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_NaNSymbol\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">NaNSymbol</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the string that represents the IEEE NaN (not a number) value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string NaNSymbol { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string that represents the IEEE NaN (not a number) value. The default for <span class=\"xref\">stem.Globalization.NumberFormatInfo.InvariantInfo*</span> is &quot;NaN&quot;.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information on NaN values, see <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> or <a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_NativeDigits\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">NativeDigits</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a string array of native digits equivalent to the Western digits 0 through 9.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string[] NativeDigits { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string array that contains the native equivalent of the Western digits 0 through 9. The default is an array having the elements &quot;0&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;, and &quot;9&quot;.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The current <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>In a set operation, the value is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> In a set operation, an element of the value array is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>In a set operation, the value array does not contain 10 elements.  </p>\n<p> -or-  </p>\n<p> In a set operation, an element of the value array does not contain either a single <a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a> object or a pair of <a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a> objects that comprise a surrogate pair.  </p>\n<p> -or-  </p>\n<p> In a set operation, an element of the value array is not a number digit as defined by the <a href=\"http://go.microsoft.com/fwlink/?linkid=37123\" data-linktype=\"external\">Unicode Standard</a>. That is, the digit in the array element does not have the Unicode <code>Number, Decimal Digit</code> (Nd) General Category value.  </p>\n<p> -or-  </p>\n<p> In a set operation, the numeric value of an element in the value array does not correspond to the element&#39;s position in the array. That is, the element at index 0, which is the first element of the array, does not have a numeric value of 0, or the element at index 1 does not have a numeric value of 1.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"IMPORTANT\"><h5>Important</h5><p> The character set that is specified by the NativeDigits property has no effect on parsing or formatting operations. Only the Basic Latin digits 0 (U+0030) through 9 (U+0039) are used when formatting or parsing numeric values or date and time values.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_NegativeInfinitySymbol\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">NegativeInfinitySymbol</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the string that represents negative infinity.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string NegativeInfinitySymbol { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string that represents negative infinity. The default for <span class=\"xref\">stem.Globalization.NumberFormatInfo.InvariantInfo*</span> is &quot;-Infinity&quot;.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information on negative infinity, see <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> or <a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_NegativeSign\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">NegativeSign</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the string that denotes that the associated number is negative.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string NegativeSign { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string that denotes that the associated number is negative. The default for <span class=\"xref\">stem.Globalization.NumberFormatInfo.InvariantInfo*</span> is &quot;-&quot;.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is used in both formatting and parsing operations. For more information on its use in formatting operations, see the <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a> and <a href=\"../Topic/Custom%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Numeric Format Strings</a> topics.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_NumberDecimalDigits\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">NumberDecimalDigits</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the number of decimal places to use in numeric values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int NumberDecimalDigits { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of decimal places to use in numeric values. The default for <span class=\"xref\">stem.Globalization.NumberFormatInfo.InvariantInfo*</span> is 2.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to a value that is less than 0 or greater than 99.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The NumberDecimalDigits property is used with the &quot;F&quot; and &quot;N&quot; standard format strings without a precision specifier in numeric formatting operations. It defines the default number of fractional digits that appear after the decimal separator. This value is overridden if a precision specifier is used. For more information, see <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_NumberDecimalSeparator\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">NumberDecimalSeparator</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the string to use as the decimal separator in numeric values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string NumberDecimalSeparator { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to use as the decimal separator in numeric values. The default for <span class=\"xref\">stem.Globalization.NumberFormatInfo.InvariantInfo*</span> is &quot;.&quot;.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to an empty string.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The NumberDecimalSeparator property is used with the &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;N&quot;, and &quot;R&quot; standard format strings to define the symbol that separates integral from fractional digits. For more information, see <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a>.  </p>\n<p> The initial value of this property is derived from the settings in the <strong>Region and Language</strong> item in Control Panel.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_NumberGroupSeparator\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">NumberGroupSeparator</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the string that separates groups of digits to the left of the decimal in numeric values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string NumberGroupSeparator { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string that separates groups of digits to the left of the decimal in numeric values. The default for <span class=\"xref\">stem.Globalization.NumberFormatInfo.InvariantInfo*</span> is &quot;,&quot;.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The NumberGroupSeparator property is used with the &quot;N&quot; standard format string to define the symbol that separates groups of integral digits. For more information, see <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a>.  </p>\n<p> The initial value of this property is derived from the settings in the <strong>Region and Language</strong> item in Control Panel.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_NumberGroupSizes\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">NumberGroupSizes</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the number of digits in each group to the left of the decimal in numeric values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int[] NumberGroupSizes { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of digits in each group to the left of the decimal in numeric values. The default for <span class=\"xref\">stem.Globalization.NumberFormatInfo.InvariantInfo*</span> is a one-dimensional array with only one element, which is set to 3.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the array contains an entry that is less than 0 or greater than 9.  </p>\n<p> -or-  </p>\n<p> The property is being set and the array contains an entry, other than the last entry, that is set to 0.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the NumberGroupSizes property affects the result of number values that are formatted by using the &quot;N&quot; . If a custom numeric format string or other standard numeric format strings are used, the value of the NumberGroupSizes property is ignored.  </p>\n<p> Every element in the one-dimensional array must be an integer from 1 through 9. The last element can be 0.  </p>\n<p> The first element of the array defines the number of elements in the least significant group of digits immediately to the left of the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NumberDecimalSeparator_\" data-linktype=\"relative-path\">NumberDecimalSeparator</a>. Each subsequent element refers to the next significant group of digits to the left of the previous group. If the last element of the array is not 0, the remaining digits are grouped based on the last element of the array. If the last element is 0, the remaining digits are not grouped.  </p>\n<p> For example, if the array contains { 3, 4, 5 }, the digits are grouped similar to &quot;55,55555,55555,55555,4444,333.00&quot;. If the array contains { 3, 4, 0 }, the digits are grouped similar to &quot;55555555555555555,4444,333.00&quot;.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_NumberNegativePattern\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">NumberNegativePattern</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the format pattern for negative numeric values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int NumberNegativePattern { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The format pattern for negative numeric values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to a value that is less than 0 or greater than 4.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The NumberNegativePattern property defines the format of negative values formatted with the &quot;N&quot; standard numeric format string. This property has one of the values in the following table. The symbol &quot;-&quot; is the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NegativeSign_\" data-linktype=\"relative-path\">NegativeSign</a> and <code>n</code> is a number.  </p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Associated pattern</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>(n)</td>\n</tr>\n<tr>\n<td>1</td>\n<td>-n</td>\n</tr>\n<tr>\n<td>2</td>\n<td>- n</td>\n</tr>\n<tr>\n<td>3</td>\n<td>n-</td>\n</tr>\n<tr>\n<td>4</td>\n<td>n -</td>\n</tr>\n</tbody>\n</table>\n<p> The default value for the invariant culture returned by the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_InvariantInfo_\" data-linktype=\"relative-path\">InvariantInfo</a> property is 1, which represents &quot;-n&quot;, where <em>n</em> is a number.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_PercentDecimalDigits\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PercentDecimalDigits</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the number of decimal places to use in percent values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int PercentDecimalDigits { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of decimal places to use in percent values. The default for <span class=\"xref\">stem.Globalization.NumberFormatInfo.InvariantInfo*</span> is 2.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to a value that is less than 0 or greater than 99.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The PercentDecimalDigits property is used with the &quot;P&quot; standard format string without a precision specifier in numeric formatting operations. It defines the default number of fractional digits that appear after the decimal separator. This value is overridden if a precision specifier is used. For more information, see <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_PercentDecimalSeparator\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PercentDecimalSeparator</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the string to use as the decimal separator in percent values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string PercentDecimalSeparator { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to use as the decimal separator in percent values. The default for <span class=\"xref\">stem.Globalization.NumberFormatInfo.InvariantInfo*</span> is &quot;.&quot;.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to an empty string.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The PercentDecimalSeparator property is used with the &quot;P&quot; standard format string to define the symbol that separates integral from fractional digits. For more information, see <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_PercentGroupSeparator\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PercentGroupSeparator</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the string that separates groups of digits to the left of the decimal in percent values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string PercentGroupSeparator { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string that separates groups of digits to the left of the decimal in percent values. The default for <span class=\"xref\">stem.Globalization.NumberFormatInfo.InvariantInfo*</span> is &quot;,&quot;.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The PercentGroupSeparator property is used with the &quot;P&quot; standard format string to define the symbol that separates groups of integers. For more information, see <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_PercentGroupSizes\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PercentGroupSizes</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the number of digits in each group to the left of the decimal in percent values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int[] PercentGroupSizes { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of digits in each group to the left of the decimal in percent values. The default for <span class=\"xref\">stem.Globalization.NumberFormatInfo.InvariantInfo*</span> is a one-dimensional array with only one element, which is set to 3.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the array contains an entry that is less than 0 or greater than 9.  </p>\n<p> -or-  </p>\n<p> The property is being set and the array contains an entry, other than the last entry, that is set to 0.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The PercentGroupSizes property is used with the &quot;P&quot; standard format string to define the number of digits that appear in integral groups. For more information, see <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a>. Every element in the one-dimensional array must be an integer from 1 through 9. The last element can be 0.  </p>\n<p> The first element of the array defines the number of elements in the least significant group of digits immediately to the left of the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_PercentDecimalSeparator_\" data-linktype=\"relative-path\">PercentDecimalSeparator</a>. Each subsequent element refers to the next significant group of digits to the left of the previous group. If the last element of the array is not 0, the remaining digits are grouped based on the last element of the array. If the last element is 0, the remaining digits are not grouped.  </p>\n<p> For example, if the array contains { 3, 4, 5 }, the digits are grouped similar to &quot;55,55555,55555,55555,4444,333.00%&quot;. If the array contains { 3, 4, 0 }, the digits are grouped similar to &quot;55555555555555555,4444,333.00%&quot;.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_PercentNegativePattern\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PercentNegativePattern</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the format pattern for negative percent values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int PercentNegativePattern { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The format pattern for negative percent values. The default for <span class=\"xref\">stem.Globalization.NumberFormatInfo.InvariantInfo*</span> is 0, which represents &quot;-n %&quot;, where &quot;%&quot; is the <span class=\"xref\">stem.Globalization.NumberFormatInfo.PercentSymbol*</span> and <code>n</code> is a number.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to a value that is less than 0 or greater than 11.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The PercentNegativePattern property is used with the &quot;P&quot; standard format string to define the pattern of negative percentage values. For more information, see <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a>. This property has one of the values in the following table. The symbol &quot;%&quot; is the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_PercentSymbol_\" data-linktype=\"relative-path\">PercentSymbol</a>, the symbol &quot;-&quot; is the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NegativeSign_\" data-linktype=\"relative-path\">NegativeSign</a>, and <code>n</code> is a number. Values 3-11 were introduced in the .NET Framework 2.0 and cannot be used in earlier versions.  </p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Associated pattern</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>-n %</td>\n</tr>\n<tr>\n<td>1</td>\n<td>-n%</td>\n</tr>\n<tr>\n<td>2</td>\n<td>-%n</td>\n</tr>\n<tr>\n<td>3</td>\n<td>%-n</td>\n</tr>\n<tr>\n<td>4</td>\n<td>%n-</td>\n</tr>\n<tr>\n<td>5</td>\n<td>n-%</td>\n</tr>\n<tr>\n<td>6</td>\n<td>n%-</td>\n</tr>\n<tr>\n<td>7</td>\n<td>-% n</td>\n</tr>\n<tr>\n<td>8</td>\n<td>n %-</td>\n</tr>\n<tr>\n<td>9</td>\n<td>% n-</td>\n</tr>\n<tr>\n<td>10</td>\n<td>% -n</td>\n</tr>\n<tr>\n<td>11</td>\n<td>n- %</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_PercentPositivePattern\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PercentPositivePattern</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the format pattern for positive percent values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int PercentPositivePattern { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The format pattern for positive percent values. The default for <span class=\"xref\">stem.Globalization.NumberFormatInfo.InvariantInfo*</span> is 0, which represents &quot;n %&quot;, where &quot;%&quot; is the <span class=\"xref\">stem.Globalization.NumberFormatInfo.PercentSymbol*</span> and <code>n</code> is a number.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to a value that is less than 0 or greater than 3.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The PercentPositivePattern property is used with the &quot;P&quot; standard format string to define pattern of positive percentage values. For more information, see <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a>. This property has one of the values in the following table. The symbol &quot;%&quot; is the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_PercentSymbol_\" data-linktype=\"relative-path\">PercentSymbol</a> and <code>n</code> is a number.  </p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Associated pattern</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>n %</td>\n</tr>\n<tr>\n<td>1</td>\n<td>n%</td>\n</tr>\n<tr>\n<td>2</td>\n<td>%n</td>\n</tr>\n<tr>\n<td>3</td>\n<td>% n</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_PercentSymbol\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PercentSymbol</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the string to use as the percent symbol.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string PercentSymbol { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to use as the percent symbol. The default for <span class=\"xref\">stem.Globalization.NumberFormatInfo.InvariantInfo*</span> is &quot;%&quot;.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The string assigned to the PercentSymbol property is included in the result string when a numeric value is formatted with the &quot;P&quot;  or with a format string that includes the &quot;%&quot; .</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_PerMilleSymbol\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PerMilleSymbol</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the string to use as the per mille symbol.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string PerMilleSymbol { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to use as the per mille symbol. The default for <span class=\"xref\">stem.Globalization.NumberFormatInfo.InvariantInfo*</span> is &quot;‰&quot;, which is the Unicode character U+2030.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The string assigned to the PerMilleSymbol property is included in the result string when a numeric value is formatted with a format string that includes the &quot;‰&quot; .</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_PositiveInfinitySymbol\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PositiveInfinitySymbol</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the string that represents positive infinity.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string PositiveInfinitySymbol { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string that represents positive infinity. The default for <span class=\"xref\">stem.Globalization.NumberFormatInfo.InvariantInfo*</span> is &quot;Infinity&quot;.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set to <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information on positive infinity, see <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> or <a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_PositiveSign\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PositiveSign</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the string that denotes that the associated number is positive.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string PositiveSign { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string that denotes that the associated number is positive. The default for <span class=\"xref\">stem.Globalization.NumberFormatInfo.InvariantInfo*</span> is &quot;+&quot;.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>In a set operation, the value to be assigned is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is being set and the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is used only for parsing numeric strings, not for formatting.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_Clone\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Clone()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a shallow copy of the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object Clone ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A new object copied from the original <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The clone is writable even if the original <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is read-only. Therefore, the properties of the clone can be modified with user-defined patterns.  </p>\n<p> A shallow copy of an object is a copy of the object only. If the object contains references to other objects, the shallow copy will not create copies of the referred objects. It will refer to the original objects instead. On the other hand, a deep copy of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object. In the case of a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object, a shallow copy is sufficient for copying all instance properties, because all properties that return object references are <code>static</code> (<code>Shared</code> in Visual Basic).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_GetFormat_System_Type_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetFormat(Type)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets an object of the specified type that provides a number formatting service.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object GetFormat (Type formatType);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>formatType</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the required formatting service.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The current <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a>, if <code>formatType</code> is the same as the type of the current <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a>; otherwise, <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>Format(String, IFormatProvider)</code> methods supported by the base data types invoke this method when the current <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> is passed as the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> parameter. This method implements <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_GetInstance_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetInstance(IFormatProvider)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> associated with the specified <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Globalization.NumberFormatInfo GetInstance (IFormatProvider formatProvider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>formatProvider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> used to get the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a>.  </p>\n<p> -or-  </p>\n<p> <code>null</code> to get <span class=\"xref\">stem.Globalization.NumberFormatInfo.CurrentInfo*</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> associated with the specified <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method uses the <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method of <code>formatProvider</code> using <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> as the Type parameter. If <code>formatProvider</code> is <code>null</code> or if <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> returns <code>null</code>, this method returns <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrentInfo_\" data-linktype=\"relative-path\">CurrentInfo</a>.  </p>\n<p> Your application gets a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object for a specific culture using one of the following methods:  </p>\n<ul>\n<li><p>Through the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_NumberFormat_\" data-linktype=\"relative-path\">NumberFormat</a> property.  </p>\n</li>\n<li><p>Through the GetInstance method where <code>provider</code> is a <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a>.  </p>\n<p>A <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object is created only for the invariant culture or for specific cultures, not for neutral cultures. For more information about the invariant culture, specific cultures, and neutral cultures, see the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> class.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Globalization_NumberFormatInfo_ReadOnly_System_Globalization_NumberFormatInfo_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadOnly(NumberFormatInfo)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a read-only <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> wrapper.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Globalization.NumberFormatInfo ReadOnly (System.Globalization.NumberFormatInfo nfi);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>nfi</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> to wrap.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A read-only <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> wrapper around <code>nfi</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>nfi</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This wrapper prevents any modifications to <code>nfi</code>.  </p>\n<p> Attempting to perform an assignment to a property of a read-only <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> causes an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Globalization.NumberFormatInfo.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Globalization.NumberFormatInfo.yml\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo..ctor\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.Clone\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.CurrencyDecimalDigits\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.CurrencyGroupSeparator\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.CurrencyGroupSizes\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.CurrencyNegativePattern\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.CurrencyPositivePattern\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.CurrencySymbol\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.CurrentInfo\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.DigitSubstitution\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.GetFormat\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.GetInstance\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.InvariantInfo\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.IsReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.NaNSymbol\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.NativeDigits\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.NegativeInfinitySymbol\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.NegativeSign\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.NumberDecimalDigits\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.NumberDecimalSeparator\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.NumberGroupSeparator\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.NumberGroupSizes\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.NumberNegativePattern\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.PercentDecimalDigits\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.PercentDecimalSeparator\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.PercentGroupSeparator\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.PercentGroupSizes\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.PercentNegativePattern\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.PercentPositivePattern\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.PercentSymbol\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.PerMilleSymbol\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.PositiveInfinitySymbol\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.PositiveSign\">\r\n<meta name=\"APIName\" content=\"System.Globalization.NumberFormatInfo.ReadOnly\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"98d77288-4f58-a7ab-4d34-aeb5c9ba1744\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides culture-specific information for formatting and parsing numeric values.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Globalization/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Globalization.NumberFormatInfo\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Globalization.NumberFormatInfo.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Globalization.NumberFormatInfo.yml","open_to_public_contributors":true,"api_name":["System.Globalization.NumberFormatInfo","System.Globalization.NumberFormatInfo..ctor","System.Globalization.NumberFormatInfo.Clone","System.Globalization.NumberFormatInfo.CurrencyDecimalDigits","System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator","System.Globalization.NumberFormatInfo.CurrencyGroupSeparator","System.Globalization.NumberFormatInfo.CurrencyGroupSizes","System.Globalization.NumberFormatInfo.CurrencyNegativePattern","System.Globalization.NumberFormatInfo.CurrencyPositivePattern","System.Globalization.NumberFormatInfo.CurrencySymbol","System.Globalization.NumberFormatInfo.CurrentInfo","System.Globalization.NumberFormatInfo.DigitSubstitution","System.Globalization.NumberFormatInfo.GetFormat","System.Globalization.NumberFormatInfo.GetInstance","System.Globalization.NumberFormatInfo.InvariantInfo","System.Globalization.NumberFormatInfo.IsReadOnly","System.Globalization.NumberFormatInfo.NaNSymbol","System.Globalization.NumberFormatInfo.NativeDigits","System.Globalization.NumberFormatInfo.NegativeInfinitySymbol","System.Globalization.NumberFormatInfo.NegativeSign","System.Globalization.NumberFormatInfo.NumberDecimalDigits","System.Globalization.NumberFormatInfo.NumberDecimalSeparator","System.Globalization.NumberFormatInfo.NumberGroupSeparator","System.Globalization.NumberFormatInfo.NumberGroupSizes","System.Globalization.NumberFormatInfo.NumberNegativePattern","System.Globalization.NumberFormatInfo.PercentDecimalDigits","System.Globalization.NumberFormatInfo.PercentDecimalSeparator","System.Globalization.NumberFormatInfo.PercentGroupSeparator","System.Globalization.NumberFormatInfo.PercentGroupSizes","System.Globalization.NumberFormatInfo.PercentNegativePattern","System.Globalization.NumberFormatInfo.PercentPositivePattern","System.Globalization.NumberFormatInfo.PercentSymbol","System.Globalization.NumberFormatInfo.PerMilleSymbol","System.Globalization.NumberFormatInfo.PositiveInfinitySymbol","System.Globalization.NumberFormatInfo.PositiveSign","System.Globalization.NumberFormatInfo.ReadOnly"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Globalization.NumberFormatInfo","System::Globalization::NumberFormatInfo","System.Globalization.NumberFormatInfo.#ctor","System::Globalization::NumberFormatInfo::#ctor","System.Globalization.NumberFormatInfo.Clone","System::Globalization::NumberFormatInfo::Clone","System.Globalization.NumberFormatInfo.CurrencyDecimalDigits","System::Globalization::NumberFormatInfo::CurrencyDecimalDigits","System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator","System::Globalization::NumberFormatInfo::CurrencyDecimalSeparator","System.Globalization.NumberFormatInfo.CurrencyGroupSeparator","System::Globalization::NumberFormatInfo::CurrencyGroupSeparator","System.Globalization.NumberFormatInfo.CurrencyGroupSizes","System::Globalization::NumberFormatInfo::CurrencyGroupSizes","System.Globalization.NumberFormatInfo.CurrencyNegativePattern","System::Globalization::NumberFormatInfo::CurrencyNegativePattern","System.Globalization.NumberFormatInfo.CurrencyPositivePattern","System::Globalization::NumberFormatInfo::CurrencyPositivePattern","System.Globalization.NumberFormatInfo.CurrencySymbol","System::Globalization::NumberFormatInfo::CurrencySymbol","System.Globalization.NumberFormatInfo.CurrentInfo","System::Globalization::NumberFormatInfo::CurrentInfo","System.Globalization.NumberFormatInfo.DigitSubstitution","System::Globalization::NumberFormatInfo::DigitSubstitution","System.Globalization.NumberFormatInfo.GetFormat","System::Globalization::NumberFormatInfo::GetFormat","System.Globalization.NumberFormatInfo.GetInstance","System::Globalization::NumberFormatInfo::GetInstance","System.Globalization.NumberFormatInfo.InvariantInfo","System::Globalization::NumberFormatInfo::InvariantInfo","System.Globalization.NumberFormatInfo.IsReadOnly","System::Globalization::NumberFormatInfo::IsReadOnly","System.Globalization.NumberFormatInfo.NaNSymbol","System::Globalization::NumberFormatInfo::NaNSymbol","System.Globalization.NumberFormatInfo.NativeDigits","System::Globalization::NumberFormatInfo::NativeDigits","System.Globalization.NumberFormatInfo.NegativeInfinitySymbol","System::Globalization::NumberFormatInfo::NegativeInfinitySymbol","System.Globalization.NumberFormatInfo.NegativeSign","System::Globalization::NumberFormatInfo::NegativeSign","System.Globalization.NumberFormatInfo.NumberDecimalDigits","System::Globalization::NumberFormatInfo::NumberDecimalDigits","System.Globalization.NumberFormatInfo.NumberDecimalSeparator","System::Globalization::NumberFormatInfo::NumberDecimalSeparator","System.Globalization.NumberFormatInfo.NumberGroupSeparator","System::Globalization::NumberFormatInfo::NumberGroupSeparator","System.Globalization.NumberFormatInfo.NumberGroupSizes","System::Globalization::NumberFormatInfo::NumberGroupSizes","System.Globalization.NumberFormatInfo.NumberNegativePattern","System::Globalization::NumberFormatInfo::NumberNegativePattern","System.Globalization.NumberFormatInfo.PercentDecimalDigits","System::Globalization::NumberFormatInfo::PercentDecimalDigits","System.Globalization.NumberFormatInfo.PercentDecimalSeparator","System::Globalization::NumberFormatInfo::PercentDecimalSeparator","System.Globalization.NumberFormatInfo.PercentGroupSeparator","System::Globalization::NumberFormatInfo::PercentGroupSeparator","System.Globalization.NumberFormatInfo.PercentGroupSizes","System::Globalization::NumberFormatInfo::PercentGroupSizes","System.Globalization.NumberFormatInfo.PercentNegativePattern","System::Globalization::NumberFormatInfo::PercentNegativePattern","System.Globalization.NumberFormatInfo.PercentPositivePattern","System::Globalization::NumberFormatInfo::PercentPositivePattern","System.Globalization.NumberFormatInfo.PercentSymbol","System::Globalization::NumberFormatInfo::PercentSymbol","System.Globalization.NumberFormatInfo.PerMilleSymbol","System::Globalization::NumberFormatInfo::PerMilleSymbol","System.Globalization.NumberFormatInfo.PositiveInfinitySymbol","System::Globalization::NumberFormatInfo::PositiveInfinitySymbol","System.Globalization.NumberFormatInfo.PositiveSign","System::Globalization::NumberFormatInfo::PositiveSign","System.Globalization.NumberFormatInfo.ReadOnly","System::Globalization::NumberFormatInfo::ReadOnly"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"98d77288-4f58-a7ab-4d34-aeb5c9ba1744","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Globalization/NumberFormatInfo.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"NumberFormatInfo class | Microsoft Docs","_op_ogTitle":"NumberFormatInfo class","description":"Provides culture-specific information for formatting and parsing numeric values.\n","toc_asset_id":"_splitted/System.Globalization/toc.json","toc_rel":"_splitted/System.Globalization/toc.json","source_url":"","ms.assetid":"System.Globalization.NumberFormatInfo","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.globalization.numberformatinfo","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.globalization.numberformatinfo","fileRelativePath":"System.Globalization.NumberFormatInfo.html"},"themesRelativePathToOutputRoot":"_themes/"}