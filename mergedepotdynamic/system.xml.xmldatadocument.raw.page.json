{"content":"    \r\n    <h1 id=\"System_Xml_XmlDataDocument\">\r\n      <span class=\"lang-csharp\">XmlDataDocument</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Allows structured data to be stored, retrieved, and manipulated through a relational <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Obsolete(&quot;XmlDataDocument class will be removed in a future release.&quot;)]\npublic class XmlDataDocument : System.Xml.XmlDocument</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">System.Xml.XmlDocument</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">XmlDataDocument</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_BaseURI\" data-linktype=\"relative-path\">BaseURI</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_CreateAttribute_System_String_\" data-linktype=\"relative-path\">CreateAttribute(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_CreateAttribute_System_String_System_String_\" data-linktype=\"relative-path\">CreateAttribute(String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_CreateAttribute_System_String_System_String_System_String_\" data-linktype=\"relative-path\">CreateAttribute(String,String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_CreateCDataSection_System_String_\" data-linktype=\"relative-path\">CreateCDataSection(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_CreateComment_System_String_\" data-linktype=\"relative-path\">CreateComment(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_CreateDefaultAttribute_System_String_System_String_System_String_\" data-linktype=\"relative-path\">CreateDefaultAttribute(String,String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_CreateDocumentFragment\" data-linktype=\"relative-path\">CreateDocumentFragment()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_CreateDocumentType_System_String_System_String_System_String_System_String_\" data-linktype=\"relative-path\">CreateDocumentType(String,String,String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_CreateElement_System_String_\" data-linktype=\"relative-path\">CreateElement(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_CreateElement_System_String_System_String_\" data-linktype=\"relative-path\">CreateElement(String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_CreateNavigator\" data-linktype=\"relative-path\">CreateNavigator()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_CreateNode_System_String_System_String_System_String_\" data-linktype=\"relative-path\">CreateNode(String,String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_CreateNode_System_Xml_XmlNodeType_System_String_System_String_\" data-linktype=\"relative-path\">CreateNode(XmlNodeType,String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_CreateNode_System_Xml_XmlNodeType_System_String_System_String_System_String_\" data-linktype=\"relative-path\">CreateNode(XmlNodeType,String,String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_CreateProcessingInstruction_System_String_System_String_\" data-linktype=\"relative-path\">CreateProcessingInstruction(String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_CreateSignificantWhitespace_System_String_\" data-linktype=\"relative-path\">CreateSignificantWhitespace(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_CreateTextNode_System_String_\" data-linktype=\"relative-path\">CreateTextNode(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_CreateWhitespace_System_String_\" data-linktype=\"relative-path\">CreateWhitespace(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_CreateXmlDeclaration_System_String_System_String_System_String_\" data-linktype=\"relative-path\">CreateXmlDeclaration(String,String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_DocumentElement\" data-linktype=\"relative-path\">DocumentElement</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_DocumentType\" data-linktype=\"relative-path\">DocumentType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_GetElementsByTagName_System_String_System_String_\" data-linktype=\"relative-path\">GetElementsByTagName(String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_Implementation\" data-linktype=\"relative-path\">Implementation</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_ImportNode_System_Xml_XmlNode_System_Boolean_\" data-linktype=\"relative-path\">ImportNode(XmlNode,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_InnerText\" data-linktype=\"relative-path\">InnerText</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_InnerXml\" data-linktype=\"relative-path\">InnerXml</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_IsReadOnly\" data-linktype=\"relative-path\">IsReadOnly</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_LoadXml_System_String_\" data-linktype=\"relative-path\">LoadXml(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_LocalName\" data-linktype=\"relative-path\">LocalName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_Name\" data-linktype=\"relative-path\">Name</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_NameTable\" data-linktype=\"relative-path\">NameTable</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_NodeChanged\" data-linktype=\"relative-path\">NodeChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_NodeChanging\" data-linktype=\"relative-path\">NodeChanging</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_NodeInserted\" data-linktype=\"relative-path\">NodeInserted</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_NodeInserting\" data-linktype=\"relative-path\">NodeInserting</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_NodeRemoved\" data-linktype=\"relative-path\">NodeRemoved</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_NodeRemoving\" data-linktype=\"relative-path\">NodeRemoving</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_NodeType\" data-linktype=\"relative-path\">NodeType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_OwnerDocument\" data-linktype=\"relative-path\">OwnerDocument</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_ParentNode\" data-linktype=\"relative-path\">ParentNode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_PreserveWhitespace\" data-linktype=\"relative-path\">PreserveWhitespace</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_ReadNode_System_Xml_XmlReader_\" data-linktype=\"relative-path\">ReadNode(XmlReader)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_Save_System_IO_Stream_\" data-linktype=\"relative-path\">Save(Stream)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_Save_System_IO_TextWriter_\" data-linktype=\"relative-path\">Save(TextWriter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_Save_System_String_\" data-linktype=\"relative-path\">Save(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_Save_System_Xml_XmlWriter_\" data-linktype=\"relative-path\">Save(XmlWriter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_SchemaInfo\" data-linktype=\"relative-path\">SchemaInfo</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_Schemas\" data-linktype=\"relative-path\">Schemas</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_Validate_System_Xml_Schema_ValidationEventHandler_\" data-linktype=\"relative-path\">Validate(ValidationEventHandler)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_Validate_System_Xml_Schema_ValidationEventHandler_System_Xml_XmlNode_\" data-linktype=\"relative-path\">Validate(ValidationEventHandler,XmlNode)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_WriteContentTo_System_Xml_XmlWriter_\" data-linktype=\"relative-path\">WriteContentTo(XmlWriter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_WriteTo_System_Xml_XmlWriter_\" data-linktype=\"relative-path\">WriteTo(XmlWriter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_XmlResolver\" data-linktype=\"relative-path\">XmlResolver</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_AppendChild_System_Xml_XmlNode_\" data-linktype=\"relative-path\">AppendChild(XmlNode)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Attributes\" data-linktype=\"relative-path\">Attributes</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_ChildNodes\" data-linktype=\"relative-path\">ChildNodes</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Clone\" data-linktype=\"relative-path\">Clone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_FirstChild\" data-linktype=\"relative-path\">FirstChild</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_GetEnumerator\" data-linktype=\"relative-path\">GetEnumerator()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_GetNamespaceOfPrefix_System_String_\" data-linktype=\"relative-path\">GetNamespaceOfPrefix(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_GetPrefixOfNamespace_System_String_\" data-linktype=\"relative-path\">GetPrefixOfNamespace(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_HasChildNodes\" data-linktype=\"relative-path\">HasChildNodes</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_InsertAfter_System_Xml_XmlNode_System_Xml_XmlNode_\" data-linktype=\"relative-path\">InsertAfter(XmlNode,XmlNode)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_InsertBefore_System_Xml_XmlNode_System_Xml_XmlNode_\" data-linktype=\"relative-path\">InsertBefore(XmlNode,XmlNode)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Item_System_String_\" data-linktype=\"relative-path\">Item(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Item_System_String_System_String_\" data-linktype=\"relative-path\">Item(String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_LastChild\" data-linktype=\"relative-path\">LastChild</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_NamespaceURI\" data-linktype=\"relative-path\">NamespaceURI</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_NextSibling\" data-linktype=\"relative-path\">NextSibling</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Normalize\" data-linktype=\"relative-path\">Normalize()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_OuterXml\" data-linktype=\"relative-path\">OuterXml</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Prefix\" data-linktype=\"relative-path\">Prefix</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_PrependChild_System_Xml_XmlNode_\" data-linktype=\"relative-path\">PrependChild(XmlNode)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_PreviousSibling\" data-linktype=\"relative-path\">PreviousSibling</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_PreviousText\" data-linktype=\"relative-path\">PreviousText</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_RemoveAll\" data-linktype=\"relative-path\">RemoveAll()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_RemoveChild_System_Xml_XmlNode_\" data-linktype=\"relative-path\">RemoveChild(XmlNode)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_ReplaceChild_System_Xml_XmlNode_System_Xml_XmlNode_\" data-linktype=\"relative-path\">ReplaceChild(XmlNode,XmlNode)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_SelectNodes_System_String_\" data-linktype=\"relative-path\">SelectNodes(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_SelectNodes_System_String_System_Xml_XmlNamespaceManager_\" data-linktype=\"relative-path\">SelectNodes(String,XmlNamespaceManager)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_SelectSingleNode_System_String_\" data-linktype=\"relative-path\">SelectSingleNode(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_SelectSingleNode_System_String_System_Xml_XmlNamespaceManager_\" data-linktype=\"relative-path\">SelectSingleNode(String,XmlNamespaceManager)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Supports_System_String_System_String_\" data-linktype=\"relative-path\">Supports(String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_System_Collections_IEnumerable_GetEnumerator\" data-linktype=\"relative-path\">IEnumerable.GetEnumerator()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_System_ICloneable_Clone\" data-linktype=\"relative-path\">ICloneable.Clone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Value\" data-linktype=\"relative-path\">Value</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class extends <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a>. It enables you to load either relational data or XML data and manipulate that data using the World Wide Web Consortium (W3C) Document Object Model (DOM). The DOM presents data as a hierarchy of node objects. Because <code>XmlDataDocument</code> implements the <a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a> interface, it can also be used as the source document for the <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class.  </p>\n<p> <code>XmlDataDocument</code> has a close affiliation with the <code>DataSet</code> class, which provides a relational view of the loaded XML data. Any changes made to the <code>XmlDataDocument</code> are reflected in the <code>DataSet</code> and vice versa.  </p>\n<p> To load a <code>DataSet</code> with XML data, use <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> to build a relational mapping. The XML data can then be loaded using <a class=\"xref\" href=\"system.xml.xmldatadocument#System_Xml_XmlDataDocument_Load_\" data-linktype=\"relative-path\">Load</a> or <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_LoadXml_\" data-linktype=\"relative-path\">LoadXml</a>.  </p>\n<p> To load relational data, specify the <code>DataSet</code> containing the relational data as the parameter in the <a class=\"xref\" href=\"system.xml.xmldatadocument#System_Xml_XmlDataDocument__ctor_\" data-linktype=\"relative-path\">XmlDataDocument</a> constructor.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDataDocument__ctor\" data-linktype=\"self-bookmark\">XmlDataDocument()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.xmldatadocument\" data-linktype=\"relative-path\">XmlDataDocument</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDataDocument__ctor_System_Data_DataSet_\" data-linktype=\"self-bookmark\">XmlDataDocument(DataSet)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.xmldatadocument\" data-linktype=\"relative-path\">XmlDataDocument</a> class with the specified <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDataDocument_DataSet\" data-linktype=\"self-bookmark\">DataSet</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> that provides a relational representation of the data in the <code>XmlDataDocument</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDataDocument_CloneNode_System_Boolean_\" data-linktype=\"self-bookmark\">CloneNode(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a duplicate of the current node.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDataDocument_CreateElement_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">CreateElement(String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an element with the specified <span class=\"xref\">stem.Xml.XmlNode.Prefix*</span>, <span class=\"xref\">stem.Xml.XmlDocument.LocalName*</span> , and <span class=\"xref\">stem.Xml.XmlNode.NamespaceURI*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDataDocument_CreateEntityReference_System_String_\" data-linktype=\"self-bookmark\">CreateEntityReference(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an <a class=\"xref\" href=\"system.xml.xmlentityreference\" data-linktype=\"relative-path\">XmlEntityReference</a> with the specified name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDataDocument_CreateNavigator_System_Xml_XmlNode_\" data-linktype=\"self-bookmark\">CreateNavigator(XmlNode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> object for navigating this document. The <code>XPathNavigator</code> is positioned on the node specified in the <code>node</code> parameter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDataDocument_GetElementById_System_String_\" data-linktype=\"self-bookmark\">GetElementById(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> with the specified ID. This method is not supported by the <a class=\"xref\" href=\"system.xml.xmldatadocument\" data-linktype=\"relative-path\">XmlDataDocument</a> class. Calling this method throws an exception.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDataDocument_GetElementFromRow_System_Data_DataRow_\" data-linktype=\"self-bookmark\">GetElementFromRow(DataRow)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> associated with the specified <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDataDocument_GetElementsByTagName_System_String_\" data-linktype=\"self-bookmark\">GetElementsByTagName(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a> containing a list of all descendant elements that match the specified <span class=\"xref\">stem.Xml.XmlDocument.Name*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDataDocument_GetRowFromElement_System_Xml_XmlElement_\" data-linktype=\"self-bookmark\">GetRowFromElement(XmlElement)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> associated with the specified <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDataDocument_Load_System_IO_Stream_\" data-linktype=\"self-bookmark\">Load(Stream)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Loads the <code>XmlDataDocument</code> from the specified stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDataDocument_Load_System_IO_TextReader_\" data-linktype=\"self-bookmark\">Load(TextReader)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Loads the <code>XmlDataDocument</code> from the specified <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDataDocument_Load_System_String_\" data-linktype=\"self-bookmark\">Load(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Loads the <code>XmlDataDocument</code> using the specified URL.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDataDocument_Load_System_Xml_XmlReader_\" data-linktype=\"self-bookmark\">Load(XmlReader)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Loads the <code>XmlDataDocument</code> from the specified <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDataDocument__ctor\">\r\n    \r\n            <a id=\"System_Xml_XmlDataDocument__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlDataDocument()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.xmldatadocument\" data-linktype=\"relative-path\">XmlDataDocument</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XmlDataDocument ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An empty <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> is created and associated with the <code>XmlDataDocument</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDataDocument__ctor_System_Data_DataSet_\">\r\n    \r\n            <a id=\"System_Xml_XmlDataDocument__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlDataDocument(DataSet)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.xmldatadocument\" data-linktype=\"relative-path\">XmlDataDocument</a> class with the specified <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XmlDataDocument (System.Data.DataSet dataset);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>DataSet</code> to load into <code>XmlDataDocument</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>XmlDataDocument</code> is synchronized with the specified <code>DataSet</code>. Any data in the <code>DataSet</code> is immediately available through the <code>XmlDataDocument</code>. Any changes in the <code>DataSet</code> are propagated in the <code>XmlDataDocument</code>. Any changes made in the <code>XmlDataDocument</code>, provided they match the <code>DataSet</code> schema, are propagated in the <code>DataSet</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example loads a customer table into an <code>XmlDataDocument</code>.  </p>\n<p> The example uses the SQL Server 2000 Northwind database.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic WebData XmlDataDocument.XmlDataDocument1 Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.Transactions.dll&gt;\n#using &lt;System.EnterpriseServices.dll&gt;\n#using &lt;System.dll&gt;\n#using &lt;System.Data.dll&gt;\n\nusing namespace System;\nusing namespace System::Data;\nusing namespace System::Xml;\nusing namespace System::Data::SqlClient;\nint main()\n{\n   DataSet^ dsNorthwind = gcnew DataSet;\n   \n   //Create the connection string.           \n   String^ sConnect;\n   sConnect = &quot;Data Source=localhost;Integrated Security=SSPI;Initial Catalog=Northwind&quot;;\n   \n   //Create a connection object to connect to the northwind db.\n   SqlConnection^ nwconnect = gcnew SqlConnection( sConnect );\n   \n   //Create a command string to select all the customers in the WA region.\n   String^ sCommand = &quot;Select * from Customers where Region=&#39;WA&#39;&quot;;\n   \n   //Create an adapter to load the DataSet.\n   SqlDataAdapter^ myDataAdapter = gcnew SqlDataAdapter( sCommand,nwconnect );\n   \n   //Fill the DataSet with the selected records.\n   myDataAdapter-&gt;Fill( dsNorthwind, &quot;Customers&quot; );\n   \n   //Load the document with the DataSet.\n   XmlDataDocument^ doc = gcnew XmlDataDocument( dsNorthwind );\n   \n   //Display the XmlDataDocument.\n   doc-&gt;Save( Console::Out );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData XmlDataDocument.XmlDataDocument1 Example#1\">using System;\nusing System.Data;\nusing System.Xml;\nusing System.Data.SqlClient;\n\npublic class Sample\n{\n  public static void Main()\n  {\n     DataSet dsNorthwind = new DataSet();\n\n     //Create the connection string.           \n     String sConnect;\n     sConnect=&quot;Data Source=localhost;Integrated Security=SSPI;Initial Catalog=Northwind&quot;;     \n         \n     //Create a connection object to connect to the northwind db.\n     SqlConnection nwconnect = new SqlConnection(sConnect);\n\n     //Create a command string to select all the customers in the WA region.\n     String sCommand = &quot;Select * from Customers where Region=&#39;WA&#39;&quot;;\n\n     //Create an adapter to load the DataSet.\n     SqlDataAdapter myDataAdapter = new SqlDataAdapter(sCommand, nwconnect);\n\n     //Fill the DataSet with the selected records.\n     myDataAdapter.Fill(dsNorthwind,&quot;Customers&quot;);\n\n     //Load the document with the DataSet.\n     XmlDataDocument doc = new XmlDataDocument(dsNorthwind);   \n\n     //Display the XmlDataDocument.\n     doc.Save(Console.Out);\n    \n  }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlDataDocument.XmlDataDocument1 Example#1\">Imports System\nImports System.Xml\nImports System.Data\nImports System.Data.SqlClient\n \n \npublic class Sample\n \n  public shared sub Main()\n   \n    Dim dsNorthwind as DataSet = new DataSet()\n \n    &#39;Create the connection string.\n    Dim sConnect as String           \n    sConnect=&quot;Data Source=localhost;Integrated Security=SSPI;Initial Catalog=Northwind&quot;     \n          \n    &#39;Create a connection object to connect to the northwind db.\n    Dim nwconnect as SqlConnection\n    nwconnect = new SqlConnection(sConnect)\n \n    &#39;Create a command string to select all the customers in the WA region.\n    Dim sCommand as String = &quot;Select * from Customers where Region=&#39;WA&#39;&quot;\n \n    &#39;Create an Adapter to load the DataSet.\n    Dim myDataAdapter as SqlDataAdapter\n    myDataAdapter = new SqlDataAdapter(sCommand, nwconnect)\n \n    &#39;Fill the DataSet with the selected records.\n    myDataAdapter.Fill(dsNorthwind, &quot;Customers&quot;)\n \n    &#39;Load the document with the DataSet.\n    Dim doc as XmlDataDocument = new XmlDataDocument(dsNorthwind)  \n \n    &#39;Display the XmlDataDocument.\n    doc.Save(Console.Out)\n \n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDataDocument_DataSet\">\r\n    \r\n            <a id=\"System_Xml_XmlDataDocument_DataSet_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataSet</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> that provides a relational representation of the data in the <code>XmlDataDocument</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.DataSet DataSet { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a></div>\r\n                  </div>\r\n                  <p>A <code>DataSet</code> that can be used to access the data in the <code>XmlDataDocument</code> using a relational model.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>DataSet</code> enables you to access the data in the <code>XmlDataDocument</code> using a relational model. This means that you can handle the data as tables and views, rows and columns, relations, and so on. Changes made in the <code>DataSet</code> are immediately visible in the <code>XmlDataDocument</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example modifies the price of a book using the <code>DataSet</code> methods.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic WebData XmlDataDocument.DataSet Example#1\">#using &lt;System.dll&gt;\n#using &lt;System.Xml.dll&gt;\n#using &lt;System.Data.dll&gt;\n\nusing namespace System;\nusing namespace System::Data;\nusing namespace System::Xml;\n\nint main()\n{\n   \n   //Create an XmlDataDocument.\n   XmlDataDocument^ doc = gcnew XmlDataDocument;\n   \n   //Load the schema file.\n   doc-&gt;DataSet-&gt;ReadXmlSchema( &quot;store.xsd&quot; );\n   \n   //Load the XML data.\n   doc-&gt;Load( &quot;2books.xml&quot; );\n   \n   //Update the price on the first book using the DataSet methods.\n   DataTable^ books = doc-&gt;DataSet-&gt;Tables[ &quot;book&quot; ];\n   books-&gt;Rows[ 0 ][ &quot;price&quot; ] = &quot;12.95&quot;;\n   Console::WriteLine( &quot;Display the modified XML data...&quot; );\n   doc-&gt;Save( Console::Out );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData XmlDataDocument.DataSet Example#1\">using System;\nusing System.Data;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main()\n  {\n     //Create an XmlDataDocument.\n     XmlDataDocument doc = new XmlDataDocument();\n\n     //Load the schema file.\n     doc.DataSet.ReadXmlSchema(&quot;store.xsd&quot;); \n\n     //Load the XML data.\n     doc.Load(&quot;2books.xml&quot;);\n\n     //Update the price on the first book using the DataSet methods.\n     DataTable books = doc.DataSet.Tables[&quot;book&quot;];\n     books.Rows[0][&quot;price&quot;] = &quot;12.95&quot;;  \n\n     Console.WriteLine(&quot;Display the modified XML data...&quot;);\n     doc.Save(Console.Out);\n  }\n} // End class\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlDataDocument.DataSet Example#1\">imports System\nimports System.Data\nimports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n    &#39;Create an XmlDataDocument.\n    Dim doc as XmlDataDocument = new XmlDataDocument()\n\n    &#39;Load the schema.\n    doc.DataSet.ReadXmlSchema(&quot;store.xsd&quot;) \n \n    &#39;Load the XML data.\n    doc.Load(&quot;2books.xml&quot;)\n\n    &#39;Change the price on the first book using the DataSet methods.\n    Dim books as DataTable = doc.DataSet.Tables.Item(&quot;book&quot;)\n    books.Rows.Item(0).Item(&quot;price&quot;) = &quot;12.95&quot; \n\n    Console.WriteLine(&quot;Display the modified XML data...&quot;)\n    doc.Save(Console.Out)\n\n  end sub\nend class\n</code></pre><p> The example uses the following two files as input.  </p>\n<p> <code>2books.xml</code>  </p>\n<pre><code class=\"lang-xml\" name=\"Classic WebData XmlDataDocument.DataSet Example#2\">\n&lt;!--sample XML fragment--&gt;\n&lt;bookstore&gt;\n  &lt;book genre=&#39;novel&#39; ISBN=&#39;10-861003-324&#39;&gt;\n    &lt;title&gt;The Handmaid&#39;s Tale&lt;/title&gt;\n    &lt;price&gt;19.95&lt;/price&gt;\n  &lt;/book&gt;\n  &lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;\n    &lt;title&gt;Pride And Prejudice&lt;/title&gt;\n    &lt;price&gt;24.95&lt;/price&gt;\n  &lt;/book&gt;\n&lt;/bookstore&gt;\n</code></pre><p> <code>store.xsd</code>  </p>\n<pre><code class=\"lang-xml\" name=\"Classic WebData XmlDataDocument.DataSet Example#3\">\n&lt;xsd:schema xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;\n\n &lt;xsd:element name=&quot;bookstore&quot; type=&quot;bookstoreType&quot;/&gt;\n\n &lt;xsd:complexType name=&quot;bookstoreType&quot;&gt;\n  &lt;xsd:sequence maxOccurs=&quot;unbounded&quot;&gt;\n   &lt;xsd:element name=&quot;book&quot;  type=&quot;bookType&quot;/&gt;\n  &lt;/xsd:sequence&gt;\n &lt;/xsd:complexType&gt;\n\n &lt;xsd:complexType name=&quot;bookType&quot;&gt;\n  &lt;xsd:sequence&gt;\n   &lt;xsd:element name=&quot;title&quot; type=&quot;xsd:string&quot;/&gt;\n   &lt;xsd:element name=&quot;author&quot; type=&quot;authorName&quot;/&gt;\n   &lt;xsd:element name=&quot;price&quot;  type=&quot;xsd:decimal&quot;/&gt;\n  &lt;/xsd:sequence&gt;\n  &lt;xsd:attribute name=&quot;genre&quot; type=&quot;xsd:string&quot;/&gt;\n &lt;/xsd:complexType&gt;\n\n &lt;xsd:complexType name=&quot;authorName&quot;&gt;\n  &lt;xsd:sequence&gt;\n   &lt;xsd:element name=&quot;first-name&quot;  type=&quot;xsd:string&quot;/&gt;\n   &lt;xsd:element name=&quot;last-name&quot; type=&quot;xsd:string&quot;/&gt;\n  &lt;/xsd:sequence&gt;\n &lt;/xsd:complexType&gt;\n\n&lt;/xsd:schema&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDataDocument_CloneNode_System_Boolean_\">\r\n    \r\n            <a id=\"System_Xml_XmlDataDocument_CloneNode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CloneNode(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a duplicate of the current node.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Xml.XmlNode CloneNode (bool deep);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>deep</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to recursively clone the subtree under the specified node; <code>false</code> to clone only the node itself.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a></div>\r\n                  </div>\r\n                  <p>The cloned node.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Cloning the <code>XmlDataDocument</code> also clones the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> schema.  </p>\n<p> If <code>deep</code> is set to <code>false</code>, the cloned <code>DataSet</code> has no data; that is, no rows.  </p>\n<p> If <code>deep</code> is set to <code>true</code>, the cloned <code>DataSet</code> is set with the schema and then populated with the data.  </p>\n<p> See <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_CloneNode_\" data-linktype=\"relative-path\">CloneNode</a> in the <code>XmlNode</code> class to see a table describing how this method behaves with each of the different node types.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example loads a <code>DataSet</code> into an <code>XmlDataDocument</code> and then creates a shallow clone of the <code>XmlDataDocument</code>.  </p>\n<p> The example uses the SQL Server 2000 Northwind database.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic WebData XmlDataDocument.CloneNode Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.Transactions.dll&gt;\n#using &lt;System.EnterpriseServices.dll&gt;\n#using &lt;System.dll&gt;\n#using &lt;System.Data.dll&gt;\n\nusing namespace System;\nusing namespace System::Data;\nusing namespace System::Xml;\nusing namespace System::Data::SqlClient;\nint main()\n{\n   DataSet^ dsNorthwind = gcnew DataSet;\n   \n   //Create the connection string.           \n   String^ sConnect;\n   sConnect = &quot;Data Source=localhost;Integrated Security=SSPI;Initial Catalog=Northwind&quot;;\n   \n   //Create a connection object to connect to the northwind db.\n   SqlConnection^ nwconnect = gcnew SqlConnection( sConnect );\n   \n   //Create a command string to select all the customers in the WA region.\n   String^ sCommand = &quot;Select * from Customers where Region=&#39;WA&#39;&quot;;\n   \n   //Create an adapter to load the DataSet.\n   SqlDataAdapter^ myDataAdapter = gcnew SqlDataAdapter( sCommand,nwconnect );\n   \n   //Fill the DataSet with the selected records.\n   myDataAdapter-&gt;Fill( dsNorthwind, &quot;Customers&quot; );\n   \n   //Load the document with the DataSet.\n   XmlDataDocument^ doc = gcnew XmlDataDocument( dsNorthwind );\n   \n   //Create a shallow clone of the XmlDataDocument. Note that although\n   //none of the child nodes were copied over, the cloned node does\n   //have the schema information.\n   XmlDataDocument^ clone = dynamic_cast&lt;XmlDataDocument^&gt;(doc-&gt;CloneNode( false ));\n   Console::WriteLine( &quot;Child count: {0}&quot;, clone-&gt;ChildNodes-&gt;Count );\n   Console::WriteLine( clone-&gt;DataSet-&gt;GetXmlSchema() );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlDataDocument.CloneNode Example#1\">\nImports System\nImports System.Xml\nImports System.Data\nImports System.Data.SqlClient\n \n \npublic class Sample\n \n  public shared sub Main()\n   \n    Dim dsNorthwind as DataSet = new DataSet()\n \n    &#39;Create the connection string.\n    Dim sConnect as String           \n    sConnect=&quot;Data Source=localhost;Integrated Security=SSPI;Initial Catalog=Northwind&quot;     \n          \n    &#39;Create a connection object to connect to the northwind db.\n    Dim nwconnect as SqlConnection\n    nwconnect = new SqlConnection(sConnect)\n \n    &#39;Create a command string to select all the customers in the WA region.\n    Dim sCommand as String = &quot;Select * from Customers where Region=&#39;WA&#39;&quot;\n \n    &#39;Create an Adapter to load the DataSet.\n    Dim myDataAdapter as SqlDataAdapter\n    myDataAdapter = new SqlDataAdapter(sCommand, nwconnect)\n \n    &#39;Fill the DataSet with the selected records.\n    myDataAdapter.Fill(dsNorthwind, &quot;Customers&quot;)\n \n    &#39;Load the document with the DataSet.\n    Dim doc as XmlDataDocument = new XmlDataDocument(dsNorthwind)  \n \n    &#39;Create a shallow clone of the XmlDataDocument. Note that although\n    &#39;none of the child nodes were copied over, the cloned node does\n    &#39;have the schema information.\n    Dim clone as XmlDataDocument\n    clone = CType (doc.CloneNode(false), XmlDataDocument) \n    Console.WriteLine(&quot;Child count: {0}&quot;, clone.ChildNodes.Count)\n    Console.WriteLine(clone.DataSet.GetXmlSchema())\n \n  end sub\nend class\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData XmlDataDocument.CloneNode Example#1\">\nusing System;\nusing System.Data;\nusing System.Xml;\nusing System.Data.SqlClient;\n\npublic class Sample\n{\n  public static void Main()\n  {\n     DataSet dsNorthwind = new DataSet();\n\n     //Create the connection string.           \n     String sConnect;\n     sConnect=&quot;Data Source=localhost;Integrated Security=SSPI;Initial Catalog=Northwind&quot;;     \n         \n     //Create a connection object to connect to the northwind db.\n     SqlConnection nwconnect = new SqlConnection(sConnect);\n\n     //Create a command string to select all the customers in the WA region.\n     String sCommand = &quot;Select * from Customers where Region=&#39;WA&#39;&quot;;\n\n     //Create an adapter to load the DataSet.\n     SqlDataAdapter myDataAdapter = new SqlDataAdapter(sCommand, nwconnect);\n\n     //Fill the DataSet with the selected records.\n     myDataAdapter.Fill(dsNorthwind,&quot;Customers&quot;);\n\n     //Load the document with the DataSet.\n     XmlDataDocument doc = new XmlDataDocument(dsNorthwind);   \n\n     //Create a shallow clone of the XmlDataDocument. Note that although\n     //none of the child nodes were copied over, the cloned node does\n     //have the schema information.\n     XmlDataDocument clone = (XmlDataDocument) doc.CloneNode(false);\n     Console.WriteLine(&quot;Child count: {0}&quot;, clone.ChildNodes.Count);\n     Console.WriteLine(clone.DataSet.GetXmlSchema());   \n  }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDataDocument_CreateElement_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlDataDocument_CreateElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateElement(String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates an element with the specified <span class=\"xref\">stem.Xml.XmlNode.Prefix*</span>, <span class=\"xref\">stem.Xml.XmlDocument.LocalName*</span> , and <span class=\"xref\">stem.Xml.XmlNode.NamespaceURI*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Xml.XmlElement CreateElement (string prefix, string localName, string namespaceURI);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>prefix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The prefix of the new element. If String.Empty or <code>null</code>, there is no prefix.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the new element.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>namespaceURI</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace Uniform Resource Identifier (URI) of the new element. If String.Empty or <code>null</code>, there is no namespaceURI.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a></div>\r\n                  </div>\r\n                  <p>A new <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>Note to Inheritors</code> If you overload this function, it cannot be used for extensibility. Instead, you can return an element created by the base class, in this case, <code>XmlDataDocument</code>. See the following example.  </p>\n<pre><code>class MyXmlDataDocument : XmlDataDocument {  \n public override XmlElement CreateElement(string prefix, string localName, string nsURI) {  \n   //Ensure we are returning the base class implementation of element.  \n   XmlElement e = base.CreateElement(prefix, localName, nsURI);  \n   //Add additional code here.  \n   return e;    //Return the element created by XmlDataDocument.  \n }      \n}\n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDataDocument_CreateEntityReference_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlDataDocument_CreateEntityReference_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateEntityReference(String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates an <a class=\"xref\" href=\"system.xml.xmlentityreference\" data-linktype=\"relative-path\">XmlEntityReference</a> with the specified name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Xml.XmlEntityReference CreateEntityReference (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the entity reference.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlentityreference\" data-linktype=\"relative-path\">XmlEntityReference</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlentityreference\" data-linktype=\"relative-path\">XmlEntityReference</a> with the specified name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Calling this method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.xml.xmlentityreference\" data-linktype=\"relative-path\">XmlEntityReference</a> nodes cannot be created for <a class=\"xref\" href=\"system.xml.xmldatadocument\" data-linktype=\"relative-path\">XmlDataDocument</a> objects. Calling this method throws an exception.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDataDocument_CreateNavigator_System_Xml_XmlNode_\">\r\n    \r\n            <a id=\"System_Xml_XmlDataDocument_CreateNavigator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateNavigator(XmlNode)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> object for navigating this document. The <code>XPathNavigator</code> is positioned on the node specified in the <code>node</code> parameter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Xml.XPath.XPathNavigator CreateNavigator (System.Xml.XmlNode node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> you want the navigator initially positioned on.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a></div>\r\n                  </div>\r\n                  <p>An <code>XPathNavigator</code> used to navigate the document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>XPathNavigator</code> provides read-only, random access to data. Because it is optimized for XSLT transformations, it provides performance benefits when used as an input mechanism to the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Transform_\" data-linktype=\"relative-path\">Transform</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>To see an XSLT transformation using <code>XmlDataDocument</code> and an <code>XPathNavigator</code>, see the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Transform_\" data-linktype=\"relative-path\">Transform</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDataDocument_GetElementById_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlDataDocument_GetElementById_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetElementById(String)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> with the specified ID. This method is not supported by the <a class=\"xref\" href=\"system.xml.xmldatadocument\" data-linktype=\"relative-path\">XmlDataDocument</a> class. Calling this method throws an exception.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Xml.XmlElement GetElementById (string elemId);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>elemId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The attribute ID to match.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> with the specified ID.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Calling this method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is not supported by the <a class=\"xref\" href=\"system.xml.xmldatadocument\" data-linktype=\"relative-path\">XmlDataDocument</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDataDocument_GetElementFromRow_System_Data_DataRow_\">\r\n    \r\n            <a id=\"System_Xml_XmlDataDocument_GetElementFromRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetElementFromRow(DataRow)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> associated with the specified <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xml.XmlElement GetElementFromRow (System.Data.DataRow r);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>r</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>DataRow</code> whose associated <code>XmlElement</code> you want to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a></div>\r\n                  </div>\r\n                  <p>The <code>XmlElement</code> containing a representation of the specified <code>DataRow</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example loads a <code>DataSet</code> into an <code>XmlDataDocument</code> and then creates an <code>XmlElement</code> representing the first customer record.  </p>\n<p> The example uses the SQL Server 2000 Northwind database.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData XmlDataDocument.GetElementFromRow Example#1\">using System;\nusing System.Data;\nusing System.Xml;\nusing System.Data.SqlClient;\n\npublic class Sample\n{\n  public static void Main()\n  {\n     DataSet dsNorthwind = new DataSet();\n\n     //Create the connection string           \n     String sConnect;\n     sConnect=&quot;Data Source=localhost;Integrated Security=SSPI;Initial Catalog=Northwind&quot;;     \n         \n     //Create a connection object to connect to the northwind db.\n     SqlConnection nwconnect = new SqlConnection(sConnect);\n\n     //Create a command string to select all the customers in the WA region.\n     String sCommand = &quot;Select * from Customers where Region=&#39;WA&#39;&quot;;\n\n     //Create an adapter to load the DataSet.\n     SqlDataAdapter myDataAdapter = new SqlDataAdapter(sCommand, nwconnect);\n\n     //Fill the DataSet with the selected records.\n     myDataAdapter.Fill(dsNorthwind,&quot;Customers&quot;);\n\n     //Load the document with the DataSet.\n     XmlDataDocument doc = new XmlDataDocument(dsNorthwind);   \n\n     //Create an element representing the first customer record.\n     DataRow row = doc.DataSet.Tables[0].Rows[0];\n     XmlElement elem = doc.GetElementFromRow(row);\n     Console.WriteLine(elem.OuterXml);    \n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic WebData XmlDataDocument.GetElementFromRow Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.Transactions.dll&gt;\n#using &lt;System.EnterpriseServices.dll&gt;\n#using &lt;System.dll&gt;\n#using &lt;System.Data.dll&gt;\n\nusing namespace System;\nusing namespace System::Data;\nusing namespace System::Xml;\nusing namespace System::Data::SqlClient;\n\nint main()\n{\n   DataSet^ dsNorthwind = gcnew DataSet;\n   \n   //Create the connection string           \n   String^ sConnect;\n   sConnect = &quot;Data Source=localhost;Integrated Security=SSPI;Initial Catalog=Northwind&quot;;\n   \n   //Create a connection object to connect to the northwind db.\n   SqlConnection^ nwconnect = gcnew SqlConnection( sConnect );\n   \n   //Create a command string to select all the customers in the WA region.\n   String^ sCommand = &quot;Select * from Customers where Region=&#39;WA&#39;&quot;;\n   \n   //Create an adapter to load the DataSet.\n   SqlDataAdapter^ myDataAdapter = gcnew SqlDataAdapter( sCommand,nwconnect );\n   \n   //Fill the DataSet with the selected records.\n   myDataAdapter-&gt;Fill( dsNorthwind, &quot;Customers&quot; );\n   \n   //Load the document with the DataSet.\n   XmlDataDocument^ doc = gcnew XmlDataDocument( dsNorthwind );\n   \n   //Create an element representing the first customer record.\n   DataRow^ row = doc-&gt;DataSet-&gt;Tables[ 0 ]-&gt;Rows[ 0 ];\n   XmlElement^ elem = doc-&gt;GetElementFromRow( row );\n   Console::WriteLine( elem-&gt;OuterXml );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlDataDocument.GetElementFromRow Example#1\">Imports System\nImports System.Xml\nImports System.Data\nImports System.Data.SqlClient\n \n \npublic class Sample\n \n  public shared sub Main()\n   \n    Dim dsNorthwind as DataSet = new DataSet()\n \n    &#39;Create the connection string.\n    Dim sConnect as String           \n    sConnect=&quot;Data Source=localhost;Integrated Security=SSPI;Initial Catalog=Northwind&quot;     \n          \n    &#39;Create a connection object to connect to the northwind db.\n    Dim nwconnect as SqlConnection\n    nwconnect = new SqlConnection(sConnect)\n \n    &#39;Create a command string to select all the customers in the WA region.\n    Dim sCommand as String = &quot;Select * from Customers where Region=&#39;WA&#39;&quot;\n \n    &#39;Create an Adapter to load the DataSet.\n    Dim myDataAdapter as SqlDataAdapter\n    myDataAdapter = new SqlDataAdapter(sCommand, nwconnect)\n \n    &#39;Fill the DataSet with the selected records.\n    myDataAdapter.Fill(dsNorthwind, &quot;Customers&quot;)\n \n    &#39;Load the document with the DataSet.\n    Dim doc as XmlDataDocument = new XmlDataDocument(dsNorthwind)  \n \n    &#39;Create an element representing the first customer record.\n    Dim row as DataRow = doc.DataSet.Tables.Item(0).Rows.Item(0)\n    Dim elem as XmlElement = doc.GetElementFromRow(row)\n    Console.WriteLine(elem.OuterXml)\n \n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDataDocument_GetElementsByTagName_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlDataDocument_GetElementsByTagName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetElementsByTagName(String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a> containing a list of all descendant elements that match the specified <span class=\"xref\">stem.Xml.XmlDocument.Name*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Xml.XmlNodeList GetElementsByTagName (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The qualified name to match. It is matched against the <span class=\"xref\">stem.Xml.XmlDocument.Name*</span> property of the matching node. The special value &quot;*&quot; matches all tags.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a> containing a list of all matching nodes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> It is recommended that you use the <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_SelectNodes_\" data-linktype=\"relative-path\">SelectNodes</a> or <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_SelectSingleNode_\" data-linktype=\"relative-path\">SelectSingleNode</a> method instead of the GetElementsByTagName method.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDataDocument_GetRowFromElement_System_Xml_XmlElement_\">\r\n    \r\n            <a id=\"System_Xml_XmlDataDocument_GetRowFromElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetRowFromElement(XmlElement)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> associated with the specified <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.DataRow GetRowFromElement (System.Xml.XmlElement e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>XmlElement</code> whose associated <code>DataRow</code> you want to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a></div>\r\n                  </div>\r\n                  <p>The <code>DataRow</code> containing a representation of the <code>XmlElement</code>; <code>null</code> if there is no <code>DataRow</code> associated with the <code>XmlElement</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example modifies the price of the first book.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlDataDocument.GetRowFromElement#1\">using System;\nusing System.Data;\nusing System.Xml;\npublic class Sample {\n    public static void Main() {\n        // Create an XmlDataDocument.\n        XmlDataDocument doc = new XmlDataDocument();\n        \n        // Load the schema file.\n        doc.DataSet.ReadXmlSchema(&quot;store.xsd&quot;);\n        \n        // Load the XML data.\n        doc.Load(&quot;2books.xml&quot;);\n        \n        //Change the price on the first book.\n        XmlElement root = doc.DocumentElement;\n        DataRow row = doc.GetRowFromElement((XmlElement)root.FirstChild);\n        row[&quot;price&quot;] = &quot;12.95&quot;;\n        \n        Console.WriteLine(&quot;Display the modified XML data...&quot;);\n        Console.WriteLine(doc.DocumentElement.OuterXml);\n    }\n} // End class\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlDataDocument.GetRowFromElement#1\">#using &lt;System.dll&gt;\n#using &lt;System.Data.dll&gt;\n#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::Data;\nusing namespace System::Xml;\n\nint main()\n{\n   // Create an XmlDataDocument.\n   XmlDataDocument^ doc = gcnew XmlDataDocument;\n\n   // Load the schema file.\n   doc-&gt;DataSet-&gt;ReadXmlSchema( &quot;store.xsd&quot; );\n\n   // Load the XML data.\n   doc-&gt;Load( &quot;2books.xml&quot; );\n\n   //Change the price on the first book.\n   XmlElement^ root = doc-&gt;DocumentElement;\n   DataRow^ row = doc-&gt;GetRowFromElement( safe_cast&lt;XmlElement^&gt;(root-&gt;FirstChild) );\n   row[&quot;price&quot;] = &quot;12.95&quot;;\n   Console::WriteLine( &quot;Display the modified XML data...&quot; );\n   Console::WriteLine( doc-&gt;DocumentElement-&gt;OuterXml );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlDataDocument.GetRowFromElement#1\">Imports System\nImports System.Data\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n      &#39;Create an XmlDataDocument.\n      Dim doc as XmlDataDocument = new XmlDataDocument()\n\n      &#39;Load the schema.\n      doc.DataSet.ReadXmlSchema(&quot;store.xsd&quot;) \n \n      &#39;Load the XML data.\n      doc.Load(&quot;2books.xml&quot;)\n        \n      &#39;Change the price on the first book.\n      Dim book as XmlElement \n      book = CType(doc.DocumentElement.FirstChild, XmlElement)\n      Dim row as DataRow \n      row = doc.GetRowFromElement(book)\n      row.Item(&quot;price&quot;) = &quot;12.95&quot;\n        \n     Console.WriteLine(&quot;Display the modified XML data...&quot;)\n     Console.WriteLine(doc.DocumentElement.OuterXml)\n\n  end sub\nend class\n</code></pre><p> The example uses the following input files:  </p>\n<p> <code>2books.xml</code>  </p>\n<pre><code class=\"lang-xml\" name=\"Classic WebData XmlDataDocument.DataSet Example#2\">\n&lt;!--sample XML fragment--&gt;\n&lt;bookstore&gt;\n  &lt;book genre=&#39;novel&#39; ISBN=&#39;10-861003-324&#39;&gt;\n    &lt;title&gt;The Handmaid&#39;s Tale&lt;/title&gt;\n    &lt;price&gt;19.95&lt;/price&gt;\n  &lt;/book&gt;\n  &lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;\n    &lt;title&gt;Pride And Prejudice&lt;/title&gt;\n    &lt;price&gt;24.95&lt;/price&gt;\n  &lt;/book&gt;\n&lt;/bookstore&gt;\n</code></pre><p> <code>store.xsd</code>  </p>\n<pre><code class=\"lang-xml\" name=\"Classic WebData XmlDataDocument.DataSet Example#3\">\n&lt;xsd:schema xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;\n\n &lt;xsd:element name=&quot;bookstore&quot; type=&quot;bookstoreType&quot;/&gt;\n\n &lt;xsd:complexType name=&quot;bookstoreType&quot;&gt;\n  &lt;xsd:sequence maxOccurs=&quot;unbounded&quot;&gt;\n   &lt;xsd:element name=&quot;book&quot;  type=&quot;bookType&quot;/&gt;\n  &lt;/xsd:sequence&gt;\n &lt;/xsd:complexType&gt;\n\n &lt;xsd:complexType name=&quot;bookType&quot;&gt;\n  &lt;xsd:sequence&gt;\n   &lt;xsd:element name=&quot;title&quot; type=&quot;xsd:string&quot;/&gt;\n   &lt;xsd:element name=&quot;author&quot; type=&quot;authorName&quot;/&gt;\n   &lt;xsd:element name=&quot;price&quot;  type=&quot;xsd:decimal&quot;/&gt;\n  &lt;/xsd:sequence&gt;\n  &lt;xsd:attribute name=&quot;genre&quot; type=&quot;xsd:string&quot;/&gt;\n &lt;/xsd:complexType&gt;\n\n &lt;xsd:complexType name=&quot;authorName&quot;&gt;\n  &lt;xsd:sequence&gt;\n   &lt;xsd:element name=&quot;first-name&quot;  type=&quot;xsd:string&quot;/&gt;\n   &lt;xsd:element name=&quot;last-name&quot; type=&quot;xsd:string&quot;/&gt;\n  &lt;/xsd:sequence&gt;\n &lt;/xsd:complexType&gt;\n\n&lt;/xsd:schema&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDataDocument_Load_System_IO_Stream_\">\r\n    \r\n            <a id=\"System_Xml_XmlDataDocument_Load_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Load(Stream)</div>        \r\n          </div>\r\n    \r\n            <p>Loads the <code>XmlDataDocument</code> from the specified stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Load (System.IO.Stream inStream);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>inStream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The stream containing the XML document to load.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>XmlDataDocument</code> does not support creating entity references. If the data includes entity references, the <code>Load</code> method resolves and expands any entity references.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In order to view the XML data relationally, you must first specify a schema to use for data mapping. This can be done either by calling the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> method or by creating the tables and columns within the <code>DataSet</code> manually. This step must be done before calling <code>Load</code>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDataDocument_Load_System_IO_TextReader_\">\r\n    \r\n            <a id=\"System_Xml_XmlDataDocument_Load_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Load(TextReader)</div>        \r\n          </div>\r\n    \r\n            <p>Loads the <code>XmlDataDocument</code> from the specified <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Load (System.IO.TextReader txtReader);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>txtReader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>TextReader</code> used to feed the XML data into the document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>XmlDataDocument</code> does not support creating entity references. If the data includes entity references, the <code>Load</code> method resolves and expands any entity references.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In order to view the XML data relationally, you must first specify a schema to use for data mapping. This can be done either by calling the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> method or by creating the tables and columns within the <code>DataSet</code> manually. This step must be done before calling <code>Load</code>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDataDocument_Load_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlDataDocument_Load_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Load(String)</div>        \r\n          </div>\r\n    \r\n            <p>Loads the <code>XmlDataDocument</code> using the specified URL.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Load (string filename);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filename</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URL of the file containing the XML document to load.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>XmlDataDocument</code> does not support creating entity references. If the data includes entity references, the <code>Load</code> method resolves and expands any entity references.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In order to view the XML data relationally, you must first specify a schema to use for data mapping. This can be done either by calling the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> method or by creating the tables and columns within the <code>DataSet</code> manually. This step must be done before calling <code>Load</code>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDataDocument_Load_System_Xml_XmlReader_\">\r\n    \r\n            <a id=\"System_Xml_XmlDataDocument_Load_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Load(XmlReader)</div>        \r\n          </div>\r\n    \r\n            <p>Loads the <code>XmlDataDocument</code> from the specified <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Load (System.Xml.XmlReader reader);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>reader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>XmlReader</code> containing the XML document to load.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The XML being loaded contains entity references, and the reader cannot resolve entities.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>XmlDataDocument</code> does not support creating entity references. If the data source contains entity references, you must create an <a class=\"xref\" href=\"system.xml.xmlvalidatingreader\" data-linktype=\"relative-path\">XmlValidatingReader</a> with the <a class=\"xref\" href=\"system.xml.xmlvalidatingreader#System_Xml_XmlValidatingReader_EntityHandling_\" data-linktype=\"relative-path\">EntityHandling</a> property set to EntityHandling.ExpandEntities (this is the default behavior) and pass the <code>XmlValidatingReader</code> to the <code>Load</code> method. If you do not use an <code>XmlValidatingReader</code>, the <code>Load</code> method throws an exception.  </p>\n<p> The <code>Load</code> method always preserves significant white space. The <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_PreserveWhitespace_\" data-linktype=\"relative-path\">PreserveWhitespace</a> property determines whether or not white space is preserved. The default is <code>false</code>, white space is not preserved.  </p>\n<p> If the reader is in the initial state (that is, ReadState=ReadState.Initial), <code>Load</code> consumes the entire contents of the reader and builds the DOM from what it finds.  </p>\n<p> If the reader is already positioned on some node at depth &quot;n&quot;, then this method loads that node and all subsequent siblings up to the end tag that closes depth &quot;n&quot;. This has the following results.  </p>\n<p> If the current node and its following siblings look similar to the following:  </p>\n<pre><code>&lt;!--comment--&gt;&lt;element1&gt;one&lt;/element1&gt;&lt;element2&gt;two&lt;/element2&gt;\n</code></pre><p> <code>Load</code> throws an exception, because a document cannot have two root-level elements. If the current node and its following siblings look similar to the following:  </p>\n<pre><code>&lt;!--comment--&gt;&lt;?process  \n    instruction?&gt;&lt;!--comment--&gt;&lt;/endtag&gt;\n</code></pre><p> <code>Load</code> will succeed; however, you will have an incomplete DOM tree, because there is no root-level element. You have to add a root-level element before you save the document; otherwise, the <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_Save_\" data-linktype=\"relative-path\">Save</a> method throws an exception.  </p>\n<p> If the reader is positioned on a leaf node that is invalid for the root level of a document (for example, a white space or attribute node), the reader continues to read until it is positioned on a node that can be used for the root. The document begins loading at this point.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example modifies the price of a book using the <code>DataSet</code> methods.  </p>\n<pre><code class=\"lang-cpp\" name=\"XmlDataDocument.Load#1\">#using &lt;System.dll&gt;\n#using &lt;System.Data.dll&gt;\n#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::Data;\nusing namespace System::Xml;\nint main()\n{\n   // Create an XmlDataDocument.\n   XmlDataDocument^ doc = gcnew XmlDataDocument;\n\n   // Load the schema file.\n   doc-&gt;DataSet-&gt;ReadXmlSchema( &quot;store.xsd&quot; );\n\n   // Load the XML data.\n   XmlTextReader^ reader = gcnew XmlTextReader( &quot;2books.xml&quot; );\n   reader-&gt;MoveToContent(); // Moves the reader to the root node.\n   doc-&gt;Load( reader );\n\n   // Update the price on the first book using the DataSet methods.\n   DataTable^ books = doc-&gt;DataSet-&gt;Tables[&quot;book&quot;];\n   books-&gt;Rows[0][&quot;price&quot;] = &quot;12.95&quot;;\n   Console::WriteLine( &quot;Display the modified XML data...&quot; );\n   doc-&gt;Save( Console::Out );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"XmlDataDocument.Load#1\">using System;\nusing System.Data;\nusing System.Xml;\npublic class Sample {\n    public static void Main() {\n        // Create an XmlDataDocument.\n        XmlDataDocument doc = new XmlDataDocument();\n        \n        // Load the schema file.\n        doc.DataSet.ReadXmlSchema(&quot;store.xsd&quot;);\n        \n        // Load the XML data.\n        XmlTextReader reader = new XmlTextReader(&quot;2books.xml&quot;);\n        reader.MoveToContent(); // Moves the reader to the root node.\n        doc.Load(reader);\n        \n        // Update the price on the first book using the DataSet methods.\n        DataTable books = doc.DataSet.Tables[&quot;book&quot;];\n        books.Rows[0][&quot;price&quot;] = &quot;12.95&quot;;\n        \n        Console.WriteLine(&quot;Display the modified XML data...&quot;);\n        doc.Save(Console.Out);\n    }\n} // End class\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlDataDocument.Load#1\">Imports System\nImports System.Data\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n      &#39;Create an XmlDataDocument.\n      Dim doc as XmlDataDocument = new XmlDataDocument()\n\n      &#39;Load the schema.\n      doc.DataSet.ReadXmlSchema(&quot;store.xsd&quot;) \n \n      &#39;Load the XML data.\n      Dim reader as XmlTextReader = new XmlTextReader(&quot;2books.xml&quot;)\n      reader.MoveToContent() &#39;Moves the reader to the root node.\n      doc.Load(reader)\n        \n     &#39;Change the price on the first book imports the DataSet methods.\n     Dim books as DataTable = doc.DataSet.Tables.Item(&quot;book&quot;)\n     books.Rows.Item(0).Item(&quot;price&quot;) = &quot;12.95&quot;\n        \n     Console.WriteLine(&quot;Display the modified XML data...&quot;)\n     doc.Save(Console.Out)\n\n  end sub\nend class\n</code></pre><p> The example uses the following two input files.  </p>\n<p> <code>2books.xml</code>  </p>\n<pre><code class=\"lang-xml\" name=\"XmlDataDocument.Load#2\">&lt;!--sample XML fragment--&gt;\n&lt;bookstore&gt;\n  &lt;book genre=&#39;novel&#39; ISBN=&#39;10-861003-324&#39;&gt;\n    &lt;title&gt;The Handmaid&#39;s Tale&lt;/title&gt;\n    &lt;price&gt;19.95&lt;/price&gt;\n  &lt;/book&gt;\n  &lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;\n    &lt;title&gt;Pride And Prejudice&lt;/title&gt;\n    &lt;price&gt;24.95&lt;/price&gt;\n  &lt;/book&gt;\n&lt;/bookstore&gt;\n</code></pre><p> <code>store.xsd</code>  </p>\n<pre><code class=\"lang-xml\" name=\"XmlDataDocument.Load#3\">&lt;xsd:schema xmlns:xsd=&quot;http://www.w3.org/2000/10/XMLSchema&quot;&gt;\n\n &lt;xsd:element name=&quot;bookstore&quot; type=&quot;bookstoreType&quot;/&gt;\n\n &lt;xsd:complexType name=&quot;bookstoreType&quot;&gt;\n  &lt;xsd:sequence maxOccurs=&quot;unbounded&quot;&gt;\n   &lt;xsd:element name=&quot;book&quot;  type=&quot;bookType&quot;/&gt;\n  &lt;/xsd:sequence&gt;\n &lt;/xsd:complexType&gt;\n\n &lt;xsd:complexType name=&quot;bookType&quot;&gt;\n  &lt;xsd:sequence&gt;\n   &lt;xsd:element name=&quot;title&quot; type=&quot;xsd:string&quot;/&gt;\n   &lt;xsd:element name=&quot;author&quot; type=&quot;authorName&quot;/&gt;\n   &lt;xsd:element name=&quot;price&quot;  type=&quot;xsd:decimal&quot;/&gt;\n  &lt;/xsd:sequence&gt;\n  &lt;xsd:attribute name=&quot;genre&quot; type=&quot;xsd:string&quot;/&gt;\n &lt;/xsd:complexType&gt;\n\n &lt;xsd:complexType name=&quot;authorName&quot;&gt;\n  &lt;xsd:sequence&gt;\n   &lt;xsd:element name=&quot;first-name&quot;  type=&quot;xsd:string&quot;/&gt;\n   &lt;xsd:element name=&quot;last-name&quot; type=&quot;xsd:string&quot;/&gt;\n  &lt;/xsd:sequence&gt;\n &lt;/xsd:complexType&gt;\n\n&lt;/xsd:schema&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.XmlDataDocument.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.XmlDataDocument.yml\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDataDocument\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDataDocument..ctor\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDataDocument.CloneNode\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDataDocument.CreateElement\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDataDocument.CreateEntityReference\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDataDocument.CreateNavigator\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDataDocument.DataSet\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDataDocument.GetElementById\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDataDocument.GetElementFromRow\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDataDocument.GetElementsByTagName\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDataDocument.GetRowFromElement\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDataDocument.Load\">\r\n<meta name=\"APILocation\" content=\"System.Data.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"41062dc6-1a53-c365-0729-9b2529169f3e\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Xml\\XmlDataDocument.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Allows structured data to be stored, retrieved, and manipulated through a relational .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xml/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xml.XmlDataDocument\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.XmlDataDocument.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.XmlDataDocument.yml","open_to_public_contributors":true,"api_name":["System.Xml.XmlDataDocument","System.Xml.XmlDataDocument..ctor","System.Xml.XmlDataDocument.CloneNode","System.Xml.XmlDataDocument.CreateElement","System.Xml.XmlDataDocument.CreateEntityReference","System.Xml.XmlDataDocument.CreateNavigator","System.Xml.XmlDataDocument.DataSet","System.Xml.XmlDataDocument.GetElementById","System.Xml.XmlDataDocument.GetElementFromRow","System.Xml.XmlDataDocument.GetElementsByTagName","System.Xml.XmlDataDocument.GetRowFromElement","System.Xml.XmlDataDocument.Load"],"api_location":["System.Data.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xml.XmlDataDocument","System::Xml::XmlDataDocument","System.Xml.XmlDataDocument.#ctor","System::Xml::XmlDataDocument::#ctor","System.Xml.XmlDataDocument.CloneNode","System::Xml::XmlDataDocument::CloneNode","System.Xml.XmlDataDocument.CreateElement","System::Xml::XmlDataDocument::CreateElement","System.Xml.XmlDataDocument.CreateEntityReference","System::Xml::XmlDataDocument::CreateEntityReference","System.Xml.XmlDataDocument.CreateNavigator","System::Xml::XmlDataDocument::CreateNavigator","System.Xml.XmlDataDocument.DataSet","System::Xml::XmlDataDocument::DataSet","System.Xml.XmlDataDocument.GetElementById","System::Xml::XmlDataDocument::GetElementById","System.Xml.XmlDataDocument.GetElementFromRow","System::Xml::XmlDataDocument::GetElementFromRow","System.Xml.XmlDataDocument.GetElementsByTagName","System::Xml::XmlDataDocument::GetElementsByTagName","System.Xml.XmlDataDocument.GetRowFromElement","System::Xml::XmlDataDocument::GetRowFromElement","System.Xml.XmlDataDocument.Load","System::Xml::XmlDataDocument::Load"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"41062dc6-1a53-c365-0729-9b2529169f3e","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Xml\\XmlDataDocument.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xml/XmlDataDocument.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XmlDataDocument class | Microsoft Docs","_op_ogTitle":"XmlDataDocument class","description":"Allows structured data to be stored, retrieved, and manipulated through a relational .\n","toc_asset_id":"_splitted/System.Xml/toc.json","toc_rel":"_splitted/System.Xml/toc.json","source_url":"","ms.assetid":"System.Xml.XmlDataDocument","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.xmldatadocument","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.xmldatadocument","fileRelativePath":"System.Xml.XmlDataDocument.html"},"themesRelativePathToOutputRoot":"_themes/"}