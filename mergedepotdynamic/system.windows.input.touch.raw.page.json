{"content":"    \r\n    <h1 id=\"System_Windows_Input_Touch\">\r\n      <span class=\"lang-csharp\">Touch</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides an application-level service that processes multitouch input from the operating system and raises the <a class=\"xref\" href=\"system.windows.input.touch#System_Windows_Input_Touch_FrameReported\" data-linktype=\"relative-path\">FrameReported</a> event.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static class Touch</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Touch</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The <a class=\"xref\" href=\"system.windows.input.touch#System_Windows_Input_Touch_FrameReported\" data-linktype=\"relative-path\">FrameReported</a> event is included in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-winclient-md.md&quot; -->Windows Presentation Foundation (WPF)<!--END INCLUDE --> to support compatibility with Silverlight. If you do not have to ensure compatibility with Silverlight, use the touch events, such as <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_TouchDown\" data-linktype=\"relative-path\">TouchDown</a> and <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_TouchMove\" data-linktype=\"relative-path\">TouchMove</a>, on <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a>, <a class=\"xref\" href=\"system.windows.uielement3d\" data-linktype=\"relative-path\">UIElement3D</a>, or <a class=\"xref\" href=\"system.windows.contentelement\" data-linktype=\"relative-path\">ContentElement</a>.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.input.touch#System_Windows_Input_Touch_FrameReported\" data-linktype=\"relative-path\">FrameReported</a> event does not use the same event model as other WPF input events, such as <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_TouchDown\" data-linktype=\"relative-path\">TouchDown</a> and <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_TouchMove\" data-linktype=\"relative-path\">TouchMove</a>. Instead of being exposed as an element-specific event that potentially routes through the object tree of a UI, the <a class=\"xref\" href=\"system.windows.input.touch#System_Windows_Input_Touch_FrameReported\" data-linktype=\"relative-path\">FrameReported</a> event is a single event that is handled at the application level. Therefore, you cannot use the <code>sender</code> parameter of the event handler to determine what element is touched.  </p>\n<p> Use the <a class=\"xref\" href=\"system.windows.input.touchframeeventargs\" data-linktype=\"relative-path\">TouchFrameEventArgs</a> to get the <a class=\"xref\" href=\"system.windows.input.touchpoint\" data-linktype=\"relative-path\">TouchPoint</a> values that are relevant to the touch event. From the <a class=\"xref\" href=\"system.windows.input.touchpoint\" data-linktype=\"relative-path\">TouchPoint</a>, you can get the <a class=\"xref\" href=\"system.windows.input.touchpoint#System_Windows_Input_TouchPoint_Position_\" data-linktype=\"relative-path\">Position</a> of the touch and determine whether the <a class=\"xref\" href=\"system.windows.input.touchaction\" data-linktype=\"relative-path\">TouchAction</a> was a <a class=\"xref\" href=\"system.windows.input.touchaction\" data-linktype=\"relative-path\">TouchAction</a>, <a class=\"xref\" href=\"system.windows.input.touchaction\" data-linktype=\"relative-path\">TouchAction</a>, or <a class=\"xref\" href=\"system.windows.input.touchaction\" data-linktype=\"relative-path\">TouchAction</a> action. You can also use the <a class=\"xref\" href=\"system.windows.input.touchpoint\" data-linktype=\"relative-path\">TouchPoint</a> to get the <a class=\"xref\" href=\"system.windows.input.touchdevice\" data-linktype=\"relative-path\">TouchDevice</a>. From the <a class=\"xref\" href=\"system.windows.input.touchdevice\" data-linktype=\"relative-path\">TouchDevice</a>, you can determine the device <a class=\"xref\" href=\"system.windows.input.touchdevice#System_Windows_Input_TouchDevice_Id_\" data-linktype=\"relative-path\">Id</a> and get information about the element that is touched.</p>\n\r\n    \r\n    \r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_Touch_FrameReported\" data-linktype=\"self-bookmark\">FrameReported</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a touch message is sent.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_Touch_FrameReported\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FrameReported</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a touch message is sent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static event System.Windows.Input.TouchFrameEventHandler FrameReported;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A frame is one in a series of multitouch messages or touch points. You can respond to touches by handling the FrameReported event and accessing the details of the <a class=\"xref\" href=\"system.windows.input.touchpoint\" data-linktype=\"relative-path\">TouchPoint</a> from the <a class=\"xref\" href=\"system.windows.input.touchframeeventargs\" data-linktype=\"relative-path\">TouchFrameEventArgs</a> event data.  </p>\n<p> The FrameReported event does not use the same event model as other <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-titlewinclient-md.md&quot; -->WPF<!--END INCLUDE --> input events, such as <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_TouchDown\" data-linktype=\"relative-path\">TouchDown</a> and <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_TouchMove\" data-linktype=\"relative-path\">TouchMove</a>. Instead of being exposed as an element-specific event that potentially routes through the object tree of a UI, the FrameReported event is a single event that is handled at the application level. Therefore, you cannot use the <code>sender</code> parameter of the event handler to determine what element is touched.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example handles the FrameReported event. When a touch presses on the <a class=\"xref\" href=\"system.windows.controls.canvas\" data-linktype=\"relative-path\">Canvas</a>, the <a class=\"xref\" href=\"system.windows.input.touchdevice\" data-linktype=\"relative-path\">TouchDevice</a> is captured to the <a class=\"xref\" href=\"system.windows.controls.canvas\" data-linktype=\"relative-path\">Canvas</a>. When the touch is lifted, the <a class=\"xref\" href=\"system.windows.input.touchdevice\" data-linktype=\"relative-path\">TouchDevice</a> is released. When a touch moves across the <a class=\"xref\" href=\"system.windows.controls.canvas\" data-linktype=\"relative-path\">Canvas</a>, the <a class=\"xref\" href=\"system.windows.input.touchdevice#System_Windows_Input_TouchDevice_Id_\" data-linktype=\"relative-path\">Id</a> is checked. If the move came from the first touch, its location is recorded. If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.  </p>\n<p> This example is part of a larger example that is available in the <a class=\"xref\" href=\"system.windows.input.touch\" data-linktype=\"relative-path\">Touch</a> class overview.  </p>\n<pre><code class=\"lang-vb\" name=\"TouchFrameSample#110\">Class MainWindow\n    &#39; Variables for tracking the position of two points.\n    Private pt1, pt2 As Point\n\n    Public Sub New()\n        InitializeComponent()\n        AddHandler Touch.FrameReported, AddressOf Touch_FrameReported\n    End Sub\n\n    Private Sub Touch_FrameReported(ByVal sender As System.Object, ByVal e As System.Windows.Input.TouchFrameEventArgs)\n        If (canvas1 IsNot Nothing) Then\n            For Each _touchPoint In e.GetTouchPoints(Me.canvas1)\n\n                If _touchPoint.Action = TouchAction.Down Then\n                    &#39; Clear the canvas and capture the touch to it.\n                    canvas1.Children.Clear()\n                    _touchPoint.TouchDevice.Capture(canvas1)\n\n                ElseIf _touchPoint.Action = TouchAction.Move Then\n                    &#39; This is the first (primary) touch point. Just record its position.\n                    If _touchPoint.TouchDevice.Id = e.GetPrimaryTouchPoint(Me.canvas1).TouchDevice.Id Then\n                        pt1.X = _touchPoint.Position.X\n                        pt1.Y = _touchPoint.Position.Y\n\n                        &#39; This is not the first touch point; draw a line from the first point to this one.\n                    ElseIf _touchPoint.TouchDevice.Id &lt;&gt; e.GetPrimaryTouchPoint(Me.canvas1).TouchDevice.Id Then\n                        pt2.X = _touchPoint.Position.X\n                        pt2.Y = _touchPoint.Position.Y\n\n                        Dim _line As New Line()\n                        _line.Stroke = New RadialGradientBrush(Colors.White, Colors.Black)\n                        _line.X1 = pt1.X\n                        _line.X2 = pt2.X\n                        _line.Y1 = pt1.Y\n                        _line.Y2 = pt2.Y\n\n                        _line.StrokeThickness = 2\n                        Me.canvas1.Children.Add(_line)\n                    End If\n\n                ElseIf _touchPoint.Action = TouchAction.Up Then\n                    &#39; If this touch is captured to the canvas, release it.\n                    If (_touchPoint.TouchDevice.Captured Is canvas1) Then\n                        canvas1.ReleaseTouchCapture(_touchPoint.TouchDevice)\n                    End If\n                End If\n            Next\n        End If\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"TouchFrameSample#110\">public partial class MainWindow : Window\n{\n    // Variables for tracking the position of two points.\n    Point pt1, pt2 = new Point();\n    \n    public MainWindow()\n    {\n        InitializeComponent();\n        Touch.FrameReported += new TouchFrameEventHandler(Touch_FrameReported);\n    }\n\n    void Touch_FrameReported(object sender, TouchFrameEventArgs e)\n    {\n        if (this.canvas1 != null)\n        {\n            foreach (TouchPoint _touchPoint in e.GetTouchPoints(this.canvas1))\n            {\n                if (_touchPoint.Action == TouchAction.Down)\n                {\n                    // Clear the canvas and capture the touch to it.\n                    this.canvas1.Children.Clear();\n                    _touchPoint.TouchDevice.Capture(this.canvas1);\n                }\n\n                else if (_touchPoint.Action == TouchAction.Move &amp;&amp; e.GetPrimaryTouchPoint(this.canvas1) != null)\n                {   \n                    // This is the first (primary) touch point. Just record its position.\n                    if (_touchPoint.TouchDevice.Id == e.GetPrimaryTouchPoint(this.canvas1).TouchDevice.Id)\n                    {\n                        pt1.X = _touchPoint.Position.X;\n                        pt1.Y = _touchPoint.Position.Y;\n                    }\n\n                    // This is not the first touch point. Draw a line from the first point to this one.\n                    else if (_touchPoint.TouchDevice.Id != e.GetPrimaryTouchPoint(this.canvas1).TouchDevice.Id)\n                    {\n                        pt2.X = _touchPoint.Position.X;\n                        pt2.Y = _touchPoint.Position.Y;\n\n                        Line _line = new Line();\n                        _line.Stroke = new RadialGradientBrush(Colors.White, Colors.Black);\n                        _line.X1 = pt1.X;\n                        _line.X2 = pt2.X;\n                        _line.Y1 = pt1.Y;\n                        _line.Y2 = pt2.Y;\n                        _line.StrokeThickness = 2;\n                        this.canvas1.Children.Add(_line);\n                    }\n                }\n\n                else if (_touchPoint.Action == TouchAction.Up)\n                {\n                    // If this touch is captured to the canvas, release it.\n                    if (_touchPoint.TouchDevice.Captured == this.canvas1)\n                    {\n                        this.canvas1.ReleaseTouchCapture(_touchPoint.TouchDevice);\n                    }\n                }\n            }                        \n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Input.Touch.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Input.Touch.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.Touch\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.Touch.FrameReported\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.Touch.add_FrameReported\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.Touch.remove_FrameReported\">\r\n<meta name=\"APILocation\" content=\"PresentationCore.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"39eb7cdb-eef2-c461-1f02-c384c3a718a4\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Input\\Touch.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides an application-level service that processes multitouch input from the operating system and raises the  event.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Input/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Input.Touch\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Input.Touch.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Input.Touch.yml","open_to_public_contributors":true,"api_name":["System.Windows.Input.Touch","System.Windows.Input.Touch.FrameReported","System.Windows.Input.Touch.add_FrameReported","System.Windows.Input.Touch.remove_FrameReported"],"api_location":["PresentationCore.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Input.Touch","System::Windows::Input::Touch","System.Windows.Input.Touch.FrameReported","System::Windows::Input::Touch::FrameReported"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"39eb7cdb-eef2-c461-1f02-c384c3a718a4","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Input\\Touch.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Input/Touch.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Touch class | Microsoft Docs","_op_ogTitle":"Touch class","description":"Provides an application-level service that processes multitouch input from the operating system and raises the  event.\n","toc_asset_id":"_splitted/System.Windows.Input/toc.json","toc_rel":"_splitted/System.Windows.Input/toc.json","source_url":"","ms.assetid":"System.Windows.Input.Touch","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.input.touch","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.input.touch","fileRelativePath":"System.Windows.Input.Touch.html"},"themesRelativePathToOutputRoot":"_themes/"}