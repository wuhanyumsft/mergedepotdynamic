{"content":"    \r\n    <h1 id=\"System_Windows_Automation_ScrollPattern_ScrollPatternInformation\">\r\n      <span class=\"lang-csharp\">ScrollPattern+ScrollPatternInformation</span>\r\n        Struct\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides access to the property values of a <a class=\"xref\" href=\"system.windows.automation.scrollpattern\" data-linktype=\"relative-path\">ScrollPattern</a> object using its <span class=\"xref\">stem.Windows.Automation.ScrollPattern.Current*</span> or <span class=\"xref\">stem.Windows.Automation.ScrollPattern.Cached*</span> accessors.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public struct ScrollPattern.ScrollPatternInformation</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">System.ValueType</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ScrollPattern+ScrollPatternInformation</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_ScrollPattern_ScrollPatternInformation_HorizontallyScrollable\" data-linktype=\"self-bookmark\">HorizontallyScrollable</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the UI Automation element can scroll horizontally.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_ScrollPattern_ScrollPatternInformation_HorizontalScrollPercent\" data-linktype=\"self-bookmark\">HorizontalScrollPercent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the current horizontal scroll position.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_ScrollPattern_ScrollPatternInformation_HorizontalViewSize\" data-linktype=\"self-bookmark\">HorizontalViewSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the current horizontal view size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_ScrollPattern_ScrollPatternInformation_VerticallyScrollable\" data-linktype=\"self-bookmark\">VerticallyScrollable</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a value that indicates whether the UI Automation element can scroll vertically.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_ScrollPattern_ScrollPatternInformation_VerticalScrollPercent\" data-linktype=\"self-bookmark\">VerticalScrollPercent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the current vertical scroll position.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_ScrollPattern_ScrollPatternInformation_VerticalViewSize\" data-linktype=\"self-bookmark\">VerticalViewSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the current vertical view size.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_ScrollPattern_ScrollPatternInformation_HorizontallyScrollable\">\r\n    \r\n            <a id=\"System_Windows_Automation_ScrollPattern_ScrollPatternInformation_HorizontallyScrollable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HorizontallyScrollable</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the UI Automation element can scroll horizontally.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool HorizontallyScrollable { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the UI Automation element can scroll horizontally; otherwise <code>false</code>. The default value is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property can be dynamic. For example, the content area of the UI Automation element might not be larger than the current viewable area, meaning HorizontallyScrollable is <code>false</code>. However, resizing the UI Automation element or adding child items can increase the bounds of the content area beyond the viewable area, indicating that HorizontallyScrollable is <code>true</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, a <a class=\"xref\" href=\"system.windows.automation.scrollpattern\" data-linktype=\"relative-path\">ScrollPattern</a>control pattern is obtained from a UI Automation element and is then used to horizontally scroll the element the requested amount.  </p>\n<pre><code class=\"lang-cs\" name=\"UIAScrollPattern_snip#101\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Obtains a ScrollPattern control pattern from an \n/// automation element.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;targetControl&quot;&gt;\n/// The automation element of interest.\n/// &lt;/param&gt;\n/// &lt;returns&gt;\n/// A ScrollPattern object.\n/// &lt;/returns&gt;\n///--------------------------------------------------------------------\nprivate ScrollPattern GetScrollPattern(\n    AutomationElement targetControl)\n{\n    ScrollPattern scrollPattern = null;\n\n    try\n    {\n        scrollPattern =\n            targetControl.GetCurrentPattern(\n            ScrollPattern.Pattern)\n            as ScrollPattern;\n    }\n    // Object doesn&#39;t support the ScrollPattern control pattern\n    catch (InvalidOperationException)\n    {\n        return null;\n    }\n\n    return scrollPattern;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIAScrollPattern_snip#101\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Obtains a ScrollPattern control pattern from an \n&#39;&#39;&#39; automation element.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;targetControl&quot;&gt;\n&#39;&#39;&#39; The automation element of interest.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;returns&gt;\n&#39;&#39;&#39; A ScrollPattern object.\n&#39;&#39;&#39; &lt;/returns&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Function GetScrollPattern( _\nByVal targetControl As AutomationElement) As ScrollPattern\n    Dim scrollPattern As ScrollPattern = Nothing\n\n    Try\n        scrollPattern = DirectCast( _\n        targetControl.GetCurrentPattern(scrollPattern.Pattern), _\n        ScrollPattern)\n    Catch\n        &#39; Object doesn&#39;t support the ScrollPattern control pattern\n        Return Nothing\n    End Try\n\n    Return scrollPattern\n\nEnd Function &#39;GetScrollPattern\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAScrollPattern_snip#107\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Obtains a ScrollPattern control pattern from an automation \n/// element and attempts to horizontally scroll the requested amount.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;targetControl&quot;&gt;\n/// The automation element of interest.\n/// &lt;/param&gt;\n/// &lt;param name=&quot;hScrollAmount&quot;&gt;\n/// The requested horizontal scroll amount.\n/// &lt;/param&gt;\n///--------------------------------------------------------------------\nprivate void ScrollElementHorizontally(\n    AutomationElement targetControl,\n    ScrollAmount hScrollAmount)\n{\n    if (targetControl == null)\n    {\n        throw new ArgumentNullException(\n            &quot;AutomationElement argument cannot be null.&quot;);\n    }\n\n    ScrollPattern scrollPattern = GetScrollPattern(targetControl);\n\n    if (scrollPattern == null)\n    {\n        return;\n    }\n\n    if (!scrollPattern.Current.HorizontallyScrollable)\n    {\n        return;\n    }\n\n    try\n    {\n        scrollPattern.ScrollHorizontal(hScrollAmount);\n    }\n    catch (InvalidOperationException)\n    {\n        // Control not able to scroll in the direction requested;\n        // when scrollable property of that direction is False\n        // TO DO: error handling.\n    }\n    catch (ArgumentException)\n    {\n        // If a control supports SmallIncrement values exclusively \n        // for horizontal or vertical scrolling but a LargeIncrement \n        // value (NaN if not supported) is passed in.\n        // TO DO: error handling.\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIAScrollPattern_snip#107\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Obtains a ScrollPattern control pattern from an automation \n&#39;&#39;&#39; element and attempts to horizontally scroll the requested amount.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;targetControl&quot;&gt;\n&#39;&#39;&#39; The automation element of interest.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;hScrollAmount&quot;&gt;\n&#39;&#39;&#39; The requested horizontal scroll amount.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub ScrollElementHorizontally( _\nByVal targetControl As AutomationElement, _\nByVal hScrollAmount As ScrollAmount)\n    If targetControl Is Nothing Then\n        Throw New ArgumentNullException( _\n        &quot;AutomationElement argument cannot be null.&quot;)\n    End If\n\n    Dim scrollPattern As ScrollPattern = GetScrollPattern(targetControl)\n\n    If scrollPattern Is Nothing Then\n        Return\n    End If\n\n    If Not scrollPattern.Current.HorizontallyScrollable Then\n        Return\n    End If\n\n    Try\n        scrollPattern.ScrollHorizontal(hScrollAmount)\n    Catch exc As InvalidOperationException\n        &#39; Control not able to scroll in the direction requested;\n        &#39; when scrollable property of that direction is False\n        &#39; TO DO: error handling.\n    Catch exc As ArgumentException\n        &#39; If a control supports SmallIncrement values exclusively \n        &#39; for horizontal or vertical scrolling but a LargeIncrement \n        &#39; value (NaN if not supported) is passed in.\n        &#39; TO DO: error handling.\n    End Try\n\nEnd Sub &#39;ScrollElementHorizontally\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_ScrollPattern_ScrollPatternInformation_HorizontalScrollPercent\">\r\n    \r\n            <a id=\"System_Windows_Automation_ScrollPattern_ScrollPatternInformation_HorizontalScrollPercent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HorizontalScrollPercent</div>        \r\n          </div>\r\n    \r\n            <p>Gets the current horizontal scroll position.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public double HorizontalScrollPercent { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>The horizontal scroll position as a percentage of the total content area within the UI Automation element. The default value is 0.0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, a <a class=\"xref\" href=\"system.windows.automation.scrollpattern\" data-linktype=\"relative-path\">ScrollPattern</a> object obtained from a target control is passed into a function that retrieves the current horizontal and vertical scroll percentages of the viewable region within the content area.  </p>\n<pre><code class=\"lang-cs\" name=\"UIAScrollPattern_snip#1045\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Obtains the current scroll positions of the viewable region \n/// within the content area.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;scrollPattern&quot;&gt;\n/// The ScrollPattern control pattern obtained from the \n/// element of interest.\n/// &lt;/param&gt;\n/// &lt;returns&gt;\n/// The horizontal and vertical scroll percentages.\n/// &lt;/returns&gt;\n///--------------------------------------------------------------------\nprivate double[] GetScrollPercentagesFromPattern(\n    ScrollPattern scrollPattern)\n{\n    if (scrollPattern == null)\n    {\n        throw new ArgumentNullException(\n            &quot;ScrollPattern argument cannot be null.&quot;);\n    }\n\n    double[] percentage = new double[2];\n\n    percentage[0] =\n        scrollPattern.Current.HorizontalScrollPercent;\n\n    percentage[1] =\n         scrollPattern.Current.VerticalScrollPercent;\n\n    return percentage;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIAScrollPattern_snip#1045\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Obtains the current scroll positions of the viewable region \n&#39;&#39;&#39; within the content area.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;scrollPattern&quot;&gt;\n&#39;&#39;&#39; The ScrollPattern control pattern obtained from the \n&#39;&#39;&#39; element of interest.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;returns&gt;\n&#39;&#39;&#39; The horizontal and vertical scroll percentages.\n&#39;&#39;&#39; &lt;/returns&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Function GetScrollPercentagesFromPattern( _\nByVal scrollPattern As ScrollPattern) As Double()\n    If scrollPattern Is Nothing Then\n        Throw New ArgumentNullException( _\n        &quot;ScrollPattern argument cannot be null.&quot;)\n    End If\n\n    Dim percentage(1) As Double\n\n    percentage(0) = scrollPattern.Current.HorizontalScrollPercent\n\n    percentage(1) = scrollPattern.Current.VerticalScrollPercent\n\n    Return percentage\n\nEnd Function &#39;GetScrollPercentagesFromPattern\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_ScrollPattern_ScrollPatternInformation_HorizontalViewSize\">\r\n    \r\n            <a id=\"System_Windows_Automation_ScrollPattern_ScrollPatternInformation_HorizontalViewSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HorizontalViewSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets the current horizontal view size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public double HorizontalViewSize { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>The horizontal size of the viewable region as a percentage of the total content area within the UI Automation element. The default value is 100.0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, a <a class=\"xref\" href=\"system.windows.automation.scrollpattern\" data-linktype=\"relative-path\">ScrollPattern</a> object obtained from a target control is passed into a function that retrieves the current vertical and horizontal sizes of the viewable region as percentages of the total content area.  </p>\n<pre><code class=\"lang-cs\" name=\"UIAScrollPattern_snip#1055\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Obtains the current vertical and horizontal sizes of the viewable  \n/// region as percentages of the total content area.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;scrollPattern&quot;&gt;\n/// The ScrollPattern control pattern obtained from the \n/// element of interest.\n/// &lt;/param&gt;\n/// &lt;returns&gt;\n/// The horizontal and vertical view sizes.\n/// &lt;/returns&gt;\n///--------------------------------------------------------------------\nprivate double[] GetViewSizes(ScrollPattern scrollPattern)\n{\n    if (scrollPattern == null)\n    {\n        throw new ArgumentNullException(\n            &quot;ScrollPattern argument cannot be null.&quot;);\n    }\n\n    double[] viewSizes = new double[2];\n\n    viewSizes[0] =\n        scrollPattern.Current.HorizontalViewSize;\n\n    viewSizes[1] =\n         scrollPattern.Current.VerticalViewSize;\n\n    return viewSizes;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIAScrollPattern_snip#1055\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Obtains the current vertical and horizontal sizes of the viewable  \n&#39;&#39;&#39; region as percentages of the total content area.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;scrollPattern&quot;&gt;\n&#39;&#39;&#39; The ScrollPattern control pattern obtained from the \n&#39;&#39;&#39; element of interest.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;returns&gt;\n&#39;&#39;&#39; The horizontal and vertical view sizes.\n&#39;&#39;&#39; &lt;/returns&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Overloads Function GetViewSizes( _\nByVal scrollPattern As ScrollPattern) As Double()\n    If scrollPattern Is Nothing Then\n        Throw New ArgumentNullException( _\n        &quot;ScrollPattern argument cannot be null.&quot;)\n    End If\n\n    Dim viewSizes(1) As Double\n\n    viewSizes(0) = scrollPattern.Current.HorizontalViewSize\n\n    viewSizes(1) = scrollPattern.Current.VerticalViewSize\n\n    Return viewSizes\n\nEnd Function &#39;GetViewSizes    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_ScrollPattern_ScrollPatternInformation_VerticallyScrollable\">\r\n    \r\n            <a id=\"System_Windows_Automation_ScrollPattern_ScrollPatternInformation_VerticallyScrollable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VerticallyScrollable</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a value that indicates whether the UI Automation element can scroll vertically.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool VerticallyScrollable { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the UI Automation element can scroll horizontally; otherwise <code>false</code>. The default value is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property can be dynamic. For example, the content area of the UI Automation element might not be larger than the current viewable area, meaning VerticallyScrollable is <code>false</code>. However, resizing the UI Automation element or adding child items can increase the bounds of the content area beyond the viewable area, indicating that VerticallyScrollable is <code>true</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, a <a class=\"xref\" href=\"system.windows.automation.scrollpattern\" data-linktype=\"relative-path\">ScrollPattern</a>control pattern is obtained from a UI Automation element and is then used to vertically scroll the element the requested amount.  </p>\n<pre><code class=\"lang-cs\" name=\"UIAScrollPattern_snip#101\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Obtains a ScrollPattern control pattern from an \n/// automation element.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;targetControl&quot;&gt;\n/// The automation element of interest.\n/// &lt;/param&gt;\n/// &lt;returns&gt;\n/// A ScrollPattern object.\n/// &lt;/returns&gt;\n///--------------------------------------------------------------------\nprivate ScrollPattern GetScrollPattern(\n    AutomationElement targetControl)\n{\n    ScrollPattern scrollPattern = null;\n\n    try\n    {\n        scrollPattern =\n            targetControl.GetCurrentPattern(\n            ScrollPattern.Pattern)\n            as ScrollPattern;\n    }\n    // Object doesn&#39;t support the ScrollPattern control pattern\n    catch (InvalidOperationException)\n    {\n        return null;\n    }\n\n    return scrollPattern;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIAScrollPattern_snip#101\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Obtains a ScrollPattern control pattern from an \n&#39;&#39;&#39; automation element.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;targetControl&quot;&gt;\n&#39;&#39;&#39; The automation element of interest.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;returns&gt;\n&#39;&#39;&#39; A ScrollPattern object.\n&#39;&#39;&#39; &lt;/returns&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Function GetScrollPattern( _\nByVal targetControl As AutomationElement) As ScrollPattern\n    Dim scrollPattern As ScrollPattern = Nothing\n\n    Try\n        scrollPattern = DirectCast( _\n        targetControl.GetCurrentPattern(scrollPattern.Pattern), _\n        ScrollPattern)\n    Catch\n        &#39; Object doesn&#39;t support the ScrollPattern control pattern\n        Return Nothing\n    End Try\n\n    Return scrollPattern\n\nEnd Function &#39;GetScrollPattern\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAScrollPattern_snip#108\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Obtains a ScrollPattern control pattern from an automation \n/// element and attempts to horizontally scroll the requested amount.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;targetControl&quot;&gt;\n/// The automation element of interest.\n/// &lt;/param&gt;\n/// &lt;param name=&quot;vScrollAmount&quot;&gt;\n/// The requested vertical scroll amount.\n/// &lt;/param&gt;\n///--------------------------------------------------------------------\nprivate void ScrollElementVertically(\n    AutomationElement targetControl,\n    ScrollAmount vScrollAmount)\n{\n    if (targetControl == null)\n    {\n        throw new ArgumentNullException(\n            &quot;AutomationElement argument cannot be null.&quot;);\n    }\n\n    ScrollPattern scrollPattern = GetScrollPattern(targetControl);\n\n    if (scrollPattern == null)\n    {\n        return;\n    }\n    \n    if (!scrollPattern.Current.VerticallyScrollable)\n    {\n        return;\n    }\n\n    try\n    {\n        scrollPattern.ScrollVertical(vScrollAmount);\n    }\n    catch (InvalidOperationException)\n    {\n        // Control not able to scroll in the direction requested;\n        // when scrollable property of that direction is False\n        // TO DO: error handling.\n    }\n    catch (ArgumentException)\n    {\n        // If a control supports SmallIncrement values exclusively \n        // for horizontal or vertical scrolling but a LargeIncrement \n        // value (NaN if not supported) is passed in.\n        // TO DO: error handling.\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIAScrollPattern_snip#108\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Obtains a ScrollPattern control pattern from an automation \n&#39;&#39;&#39; element and attempts to horizontally scroll the requested amount.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;targetControl&quot;&gt;\n&#39;&#39;&#39; The automation element of interest.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;vScrollAmount&quot;&gt;\n&#39;&#39;&#39; The requested vertical scroll amount.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub ScrollElementVertically( _\nByVal targetControl As AutomationElement, _\nByVal vScrollAmount As ScrollAmount)\n    If targetControl Is Nothing Then\n        Throw New ArgumentNullException( _\n        &quot;AutomationElement argument cannot be null.&quot;)\n    End If\n\n    Dim scrollPattern As ScrollPattern = GetScrollPattern(targetControl)\n\n    If scrollPattern Is Nothing Then\n        Return\n    End If\n\n    If Not scrollPattern.Current.VerticallyScrollable Then\n        Return\n    End If\n\n    Try\n        scrollPattern.ScrollVertical(vScrollAmount)\n    Catch exc As InvalidOperationException\n        &#39; Control not able to scroll in the direction requested;\n        &#39; when scrollable property of that direction is False\n        &#39; TO DO: error handling.\n    Catch exc As ArgumentException\n        &#39; If a control supports SmallIncrement values exclusively \n        &#39; for horizontal or vertical scrolling but a LargeIncrement \n        &#39; value (NaN if not supported) is passed in.\n        &#39; TO DO: error handling.\n    End Try\n\nEnd Sub &#39;ScrollElementVertically \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_ScrollPattern_ScrollPatternInformation_VerticalScrollPercent\">\r\n    \r\n            <a id=\"System_Windows_Automation_ScrollPattern_ScrollPatternInformation_VerticalScrollPercent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VerticalScrollPercent</div>        \r\n          </div>\r\n    \r\n            <p>Gets the current vertical scroll position.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public double VerticalScrollPercent { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>The vertical scroll position as a percentage of the total content area within the UI Automation element. The default value is 0.0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, a <a class=\"xref\" href=\"system.windows.automation.scrollpattern\" data-linktype=\"relative-path\">ScrollPattern</a> object obtained from a target control is passed into a function that retrieves the current horizontal and vertical scroll percentages of the viewable region within the content area.  </p>\n<pre><code class=\"lang-cs\" name=\"UIAScrollPattern_snip#1045\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Obtains the current scroll positions of the viewable region \n/// within the content area.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;scrollPattern&quot;&gt;\n/// The ScrollPattern control pattern obtained from the \n/// element of interest.\n/// &lt;/param&gt;\n/// &lt;returns&gt;\n/// The horizontal and vertical scroll percentages.\n/// &lt;/returns&gt;\n///--------------------------------------------------------------------\nprivate double[] GetScrollPercentagesFromPattern(\n    ScrollPattern scrollPattern)\n{\n    if (scrollPattern == null)\n    {\n        throw new ArgumentNullException(\n            &quot;ScrollPattern argument cannot be null.&quot;);\n    }\n\n    double[] percentage = new double[2];\n\n    percentage[0] =\n        scrollPattern.Current.HorizontalScrollPercent;\n\n    percentage[1] =\n         scrollPattern.Current.VerticalScrollPercent;\n\n    return percentage;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIAScrollPattern_snip#1045\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Obtains the current scroll positions of the viewable region \n&#39;&#39;&#39; within the content area.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;scrollPattern&quot;&gt;\n&#39;&#39;&#39; The ScrollPattern control pattern obtained from the \n&#39;&#39;&#39; element of interest.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;returns&gt;\n&#39;&#39;&#39; The horizontal and vertical scroll percentages.\n&#39;&#39;&#39; &lt;/returns&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Function GetScrollPercentagesFromPattern( _\nByVal scrollPattern As ScrollPattern) As Double()\n    If scrollPattern Is Nothing Then\n        Throw New ArgumentNullException( _\n        &quot;ScrollPattern argument cannot be null.&quot;)\n    End If\n\n    Dim percentage(1) As Double\n\n    percentage(0) = scrollPattern.Current.HorizontalScrollPercent\n\n    percentage(1) = scrollPattern.Current.VerticalScrollPercent\n\n    Return percentage\n\nEnd Function &#39;GetScrollPercentagesFromPattern\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_ScrollPattern_ScrollPatternInformation_VerticalViewSize\">\r\n    \r\n            <a id=\"System_Windows_Automation_ScrollPattern_ScrollPatternInformation_VerticalViewSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VerticalViewSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets the current vertical view size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public double VerticalViewSize { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>The vertical size of the viewable region as a percentage of the total content area within the UI Automation element. The default value is 100.0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, a <a class=\"xref\" href=\"system.windows.automation.scrollpattern\" data-linktype=\"relative-path\">ScrollPattern</a> object obtained from a target control is passed into a function that retrieves the current vertical and horizontal sizes of the viewable region as percentages of the total content area.  </p>\n<pre><code class=\"lang-cs\" name=\"UIAScrollPattern_snip#1055\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Obtains the current vertical and horizontal sizes of the viewable  \n/// region as percentages of the total content area.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;scrollPattern&quot;&gt;\n/// The ScrollPattern control pattern obtained from the \n/// element of interest.\n/// &lt;/param&gt;\n/// &lt;returns&gt;\n/// The horizontal and vertical view sizes.\n/// &lt;/returns&gt;\n///--------------------------------------------------------------------\nprivate double[] GetViewSizes(ScrollPattern scrollPattern)\n{\n    if (scrollPattern == null)\n    {\n        throw new ArgumentNullException(\n            &quot;ScrollPattern argument cannot be null.&quot;);\n    }\n\n    double[] viewSizes = new double[2];\n\n    viewSizes[0] =\n        scrollPattern.Current.HorizontalViewSize;\n\n    viewSizes[1] =\n         scrollPattern.Current.VerticalViewSize;\n\n    return viewSizes;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIAScrollPattern_snip#1055\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Obtains the current vertical and horizontal sizes of the viewable  \n&#39;&#39;&#39; region as percentages of the total content area.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;scrollPattern&quot;&gt;\n&#39;&#39;&#39; The ScrollPattern control pattern obtained from the \n&#39;&#39;&#39; element of interest.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;returns&gt;\n&#39;&#39;&#39; The horizontal and vertical view sizes.\n&#39;&#39;&#39; &lt;/returns&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Overloads Function GetViewSizes( _\nByVal scrollPattern As ScrollPattern) As Double()\n    If scrollPattern Is Nothing Then\n        Throw New ArgumentNullException( _\n        &quot;ScrollPattern argument cannot be null.&quot;)\n    End If\n\n    Dim viewSizes(1) As Double\n\n    viewSizes(0) = scrollPattern.Current.HorizontalViewSize\n\n    viewSizes(1) = scrollPattern.Current.VerticalViewSize\n\n    Return viewSizes\n\nEnd Function &#39;GetViewSizes    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Automation.ScrollPattern.ScrollPatternInformation.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Automation.ScrollPattern.ScrollPatternInformation.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.ScrollPattern+ScrollPatternInformation\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.ScrollPattern+ScrollPatternInformation.HorizontallyScrollable\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.ScrollPattern+ScrollPatternInformation.HorizontalScrollPercent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.ScrollPattern+ScrollPatternInformation.HorizontalViewSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.ScrollPattern+ScrollPatternInformation.VerticallyScrollable\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.ScrollPattern+ScrollPatternInformation.VerticalScrollPercent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.ScrollPattern+ScrollPatternInformation.VerticalViewSize\">\r\n<meta name=\"APILocation\" content=\"UIAutomationClient.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"095f869f-ff75-8de7-c66b-06720724bb49\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides access to the property values of a  object using its  or  accessors.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Automation/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Automation.ScrollPattern.ScrollPatternInformation\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Automation.ScrollPattern.ScrollPatternInformation.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Automation.ScrollPattern.ScrollPatternInformation.yml","open_to_public_contributors":true,"api_name":["System.Windows.Automation.ScrollPattern+ScrollPatternInformation","System.Windows.Automation.ScrollPattern+ScrollPatternInformation.HorizontallyScrollable","System.Windows.Automation.ScrollPattern+ScrollPatternInformation.HorizontalScrollPercent","System.Windows.Automation.ScrollPattern+ScrollPatternInformation.HorizontalViewSize","System.Windows.Automation.ScrollPattern+ScrollPatternInformation.VerticallyScrollable","System.Windows.Automation.ScrollPattern+ScrollPatternInformation.VerticalScrollPercent","System.Windows.Automation.ScrollPattern+ScrollPatternInformation.VerticalViewSize"],"api_location":["UIAutomationClient.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Automation.ScrollPattern.ScrollPatternInformation","System::Windows::Automation::ScrollPattern::ScrollPatternInformation","System.Windows.Automation.ScrollPattern.ScrollPatternInformation.HorizontallyScrollable","System::Windows::Automation::ScrollPattern::ScrollPatternInformation::HorizontallyScrollable","System.Windows.Automation.ScrollPattern.ScrollPatternInformation.HorizontalScrollPercent","System::Windows::Automation::ScrollPattern::ScrollPatternInformation::HorizontalScrollPercent","System.Windows.Automation.ScrollPattern.ScrollPatternInformation.HorizontalViewSize","System::Windows::Automation::ScrollPattern::ScrollPatternInformation::HorizontalViewSize","System.Windows.Automation.ScrollPattern.ScrollPatternInformation.VerticallyScrollable","System::Windows::Automation::ScrollPattern::ScrollPatternInformation::VerticallyScrollable","System.Windows.Automation.ScrollPattern.ScrollPatternInformation.VerticalScrollPercent","System::Windows::Automation::ScrollPattern::ScrollPatternInformation::VerticalScrollPercent","System.Windows.Automation.ScrollPattern.ScrollPatternInformation.VerticalViewSize","System::Windows::Automation::ScrollPattern::ScrollPatternInformation::VerticalViewSize"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"095f869f-ff75-8de7-c66b-06720724bb49","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Automation/ScrollPattern+ScrollPatternInformation.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ScrollPattern+ScrollPatternInformation struct | Microsoft Docs","_op_ogTitle":"ScrollPattern+ScrollPatternInformation struct","description":"Provides access to the property values of a  object using its  or  accessors.\n","toc_asset_id":"_splitted/System.Windows.Automation/toc.json","toc_rel":"_splitted/System.Windows.Automation/toc.json","source_url":"","ms.assetid":"System.Windows.Automation.ScrollPattern.ScrollPatternInformation","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.automation.scrollpattern.scrollpatterninformation","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.automation.scrollpattern.scrollpatterninformation","fileRelativePath":"System.Windows.Automation.ScrollPattern.ScrollPatternInformation.html"},"themesRelativePathToOutputRoot":"_themes/"}