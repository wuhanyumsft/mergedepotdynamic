{"content":"    \r\n    <h1 id=\"System_ServiceModel_Channels_BindingElement\">\r\n      <span class=\"lang-csharp\">BindingElement</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>The elements of the bindings that build the channel factories and channel listeners for various types of channels that are used to process outgoing and incoming messages.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class BindingElement</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">BindingElement</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A binding consists of an ordered set of binding elements that inherit from this abstract base class.  The <a class=\"xref\" href=\"system.servicemodel.channels.transportbindingelement\" data-linktype=\"relative-path\">TransportBindingElement</a> class inherits from the BindingElement class.  </p>\n<p> Creating a binding and binding element for your transport is optional if you are just using the channel model. It is possible to do everything you need through the channel factory and listener as long as they are made public.  </p>\n<p> The Windows Communication Foundation (WCF) service model uses a factory pattern where the binding is used to create the channel stack. If you want to use the WCF service model, then using a transport binding element is required. Placing this binding element into a binding is a good practice because it removes the requirement for users to create their own custom binding for your transport. It is best to create both a binding and binding element, and hide the channel factory and listener inside the assembly.  </p>\n<p> On the sending side, a binding is used to build a <a class=\"xref\" href=\"system.servicemodel.channels.ichannelfactory\" data-linktype=\"relative-path\">IChannelFactory</a>, which in turn builds a channel stack and returns a reference to the top channel in the stack. The application can then use this channel to send messages.  </p>\n<p> Similarly, on the receiving side a binding is used to build a <a class=\"xref\" href=\"system.servicemodel.channels.ichannellistener\" data-linktype=\"relative-path\">IChannelListener</a>, which listens for incoming messages. The <a class=\"xref\" href=\"system.servicemodel.channels.ichannellistener\" data-linktype=\"relative-path\">IChannelListener</a> provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel. The application then uses this channel to receive incoming messages.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you are adding message headers that must be encrypted you must return a <a class=\"xref\" href=\"system.servicemodel.security.channelprotectionrequirements\" data-linktype=\"relative-path\">ChannelProtectionRequirements</a> instance with your requirements from the <a class=\"xref\" href=\"system.servicemodel.channels.bindingelement#System_ServiceModel_Channels_BindingElement_GetProperty__1_System_ServiceModel_Channels_BindingContext_\" data-linktype=\"relative-path\">GetProperty&lt;T&gt;(BindingContext)</a> method when asked for <a class=\"xref\" href=\"system.servicemodel.security.channelprotectionrequirements\" data-linktype=\"relative-path\">ChannelProtectionRequirements</a>.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Channels_BindingElement__ctor\" data-linktype=\"self-bookmark\">BindingElement()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.servicemodel.channels.bindingelement\" data-linktype=\"relative-path\">BindingElement</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Channels_BindingElement__ctor_System_ServiceModel_Channels_BindingElement_\" data-linktype=\"self-bookmark\">BindingElement(BindingElement)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.servicemodel.channels.bindingelement\" data-linktype=\"relative-path\">BindingElement</a> class from a specified binding element.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Channels_BindingElement_BuildChannelFactory__1_System_ServiceModel_Channels_BindingContext_\" data-linktype=\"self-bookmark\">BuildChannelFactory&lt;TChannel&gt;(BindingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a channel factory for producing channels of a specified type from the binding context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Channels_BindingElement_BuildChannelListener__1_System_ServiceModel_Channels_BindingContext_\" data-linktype=\"self-bookmark\">BuildChannelListener&lt;TChannel&gt;(BindingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a channel listener to accept channels of a specified type from the binding context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Channels_BindingElement_CanBuildChannelFactory__1_System_ServiceModel_Channels_BindingContext_\" data-linktype=\"self-bookmark\">CanBuildChannelFactory&lt;TChannel&gt;(BindingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Channels_BindingElement_CanBuildChannelListener__1_System_ServiceModel_Channels_BindingContext_\" data-linktype=\"self-bookmark\">CanBuildChannelListener&lt;TChannel&gt;(BindingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value that indicates whether the binding element can build a listener for a specific type of channel.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Channels_BindingElement_Clone\" data-linktype=\"self-bookmark\">Clone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, returns a copy of the binding element object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Channels_BindingElement_GetProperty__1_System_ServiceModel_Channels_BindingContext_\" data-linktype=\"self-bookmark\">GetProperty&lt;T&gt;(BindingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, returns a typed object requested, if present, from the appropriate layer in the binding stack.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Channels_BindingElement__ctor\">\r\n    \r\n            <a id=\"System_ServiceModel_Channels_BindingElement__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BindingElement()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.servicemodel.channels.bindingelement\" data-linktype=\"relative-path\">BindingElement</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected BindingElement ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Channels_BindingElement__ctor_System_ServiceModel_Channels_BindingElement_\">\r\n    \r\n            <a id=\"System_ServiceModel_Channels_BindingElement__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BindingElement(BindingElement)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.servicemodel.channels.bindingelement\" data-linktype=\"relative-path\">BindingElement</a> class from a specified binding element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected BindingElement (System.ServiceModel.Channels.BindingElement elementToBeCloned);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>elementToBeCloned</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.channels.bindingelement\" data-linktype=\"relative-path\">BindingElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.servicemodel.channels.bindingelement\" data-linktype=\"relative-path\">BindingElement</a> to be cloned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Channels_BindingElement_BuildChannelFactory__1_System_ServiceModel_Channels_BindingContext_\">\r\n    \r\n            <a id=\"System_ServiceModel_Channels_BindingElement_BuildChannelFactory_TChannel__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BuildChannelFactory&lt;TChannel&gt;(BindingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a channel factory for producing channels of a specified type from the binding context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.channels.bindingcontext\" data-linktype=\"relative-path\">BindingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.servicemodel.channels.bindingcontext\" data-linktype=\"relative-path\">BindingContext</a> that provides context for the binding element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.channels.ichannelfactory-1\" data-linktype=\"relative-path\">IChannelFactory<tchannel></tchannel></a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.ServiceModel.Channels.IChannelFactory`1</span> of type <code>TChannel</code> initialized from the <code>context</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>context</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"S_UEChannels#16\">            CustomBinding binding = new CustomBinding();\n            HttpTransportBindingElement element = new HttpTransportBindingElement();\n            BindingParameterCollection parameters = new BindingParameterCollection();\n            BindingContext context = new BindingContext(binding, parameters);\n\n            IChannelFactory&lt;IRequestChannel&gt; factory = element.BuildChannelFactory&lt;IRequestChannel&gt;(context);\n            factory.Open();\n            EndpointAddress address = new EndpointAddress(&quot;http://localhost:8000/ChannelApp&quot;);\n            IRequestChannel channel = factory.CreateChannel(address);\n            channel.Open();\n            Message request = Message.CreateMessage(MessageVersion.Default, &quot;hello&quot;);\n            Message reply = channel.Request(request);\n            Console.Out.WriteLine(reply.Headers.Action);\n            reply.Close();\n            channel.Close();\n            factory.Close();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Channels_BindingElement_BuildChannelListener__1_System_ServiceModel_Channels_BindingContext_\">\r\n    \r\n            <a id=\"System_ServiceModel_Channels_BindingElement_BuildChannelListener_TChannel__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BuildChannelListener&lt;TChannel&gt;(BindingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a channel listener to accept channels of a specified type from the binding context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.channels.bindingcontext\" data-linktype=\"relative-path\">BindingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.servicemodel.channels.bindingcontext\" data-linktype=\"relative-path\">BindingContext</a> that provides context for the binding element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.channels.ichannellistener-1\" data-linktype=\"relative-path\">IChannelListener<tchannel></tchannel></a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.ServiceModel.Channels.IChannelListener`1</span> of type <a class=\"xref\" href=\"system.servicemodel.channels.ichannel\" data-linktype=\"relative-path\">IChannel</a> initialized from the <code>context</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>context</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"S_UEChannels#17\">            CustomBinding binding = new CustomBinding();\n            HttpTransportBindingElement element = new HttpTransportBindingElement();\n            BindingParameterCollection parameters = new BindingParameterCollection();\n            Uri baseAddress = new Uri(&quot;http://localhost:8000/ChannelApp&quot;);\n            String relAddress = &quot;http://localhost:8000/ChannelApp/service&quot;;\n            BindingContext context = new BindingContext(binding, parameters, baseAddress, relAddress, ListenUriMode.Explicit);\n\n            IChannelListener&lt;IReplyChannel&gt; listener = element.BuildChannelListener&lt;IReplyChannel&gt;(context);\n            listener.Open();\n            IReplyChannel channel = listener.AcceptChannel();\n            channel.Open();\n            RequestContext request = channel.ReceiveRequest();\n            Message msg = request.RequestMessage;\n            Console.WriteLine(&quot;Message Received&quot;);\n            Console.WriteLine(&quot;Message Action: {0}&quot;, msg.Headers.Action);\n\n            if (msg.Headers.Action == &quot;hello&quot;)\n            {\n                Message reply = Message.CreateMessage(MessageVersion.Default, &quot;wcf&quot;);\n                request.Reply(reply);\n            }\n\n            msg.Close();\n            channel.Close();\n            listener.Close();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Channels_BindingElement_CanBuildChannelFactory__1_System_ServiceModel_Channels_BindingContext_\">\r\n    \r\n            <a id=\"System_ServiceModel_Channels_BindingElement_CanBuildChannelFactory_TChannel__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanBuildChannelFactory&lt;TChannel&gt;(BindingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.channels.bindingcontext\" data-linktype=\"relative-path\">BindingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.servicemodel.channels.bindingcontext\" data-linktype=\"relative-path\">BindingContext</a> that provides context for the binding element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <span class=\"xref\">stem.ServiceModel.Channels.IChannelFactory`1</span> of type <code>TChannel</code> can be built by the binding element; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>context</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method if you want to check that the channel factory for channels of type <code>TChannel</code> can be build for the <code>context</code> provided before attempting to build the factory. Alternatively, build the channel factory by calling &lt;xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A&gt; and catch the exception generated if it cannot be built.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"S_UEChannels#18\">           CustomBinding binding = new CustomBinding();\n           HttpTransportBindingElement element = new HttpTransportBindingElement();\n           BindingParameterCollection parameters = new BindingParameterCollection();\n           BindingContext context = new BindingContext(binding, parameters);\n\n           bool bFlag = element.CanBuildChannelFactory&lt;IRequestChannel&gt;(context);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Channels_BindingElement_CanBuildChannelListener__1_System_ServiceModel_Channels_BindingContext_\">\r\n    \r\n            <a id=\"System_ServiceModel_Channels_BindingElement_CanBuildChannelListener_TChannel__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanBuildChannelListener&lt;TChannel&gt;(BindingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value that indicates whether the binding element can build a listener for a specific type of channel.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.channels.bindingcontext\" data-linktype=\"relative-path\">BindingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.servicemodel.channels.bindingcontext\" data-linktype=\"relative-path\">BindingContext</a> that provides context for the binding element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <span class=\"xref\">stem.ServiceModel.Channels.IChannelListener`1</span> of type <a class=\"xref\" href=\"system.servicemodel.channels.ichannel\" data-linktype=\"relative-path\">IChannel</a> can be built by the binding element; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>context</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method if you want to check that the channel listener for channels of type <code>TChannel</code> can be build for the <code>context</code> provided before attempting to build the listener. Alternatively, build the channel listener by calling &lt;xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A&gt; and catch the exception generated if it cannot be built.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"S_UEChannels#19\">            CustomBinding binding = new CustomBinding();\n            HttpTransportBindingElement element = new HttpTransportBindingElement();\n            BindingParameterCollection parameters = new BindingParameterCollection();\n            Uri baseAddress = new Uri(&quot;http://localhost:8000/ChannelApp&quot;);\n            String relAddress = &quot;http://localhost:8000/ChannelApp/service&quot;;\n            BindingContext context = new BindingContext(binding, parameters, baseAddress, relAddress, ListenUriMode.Explicit);\n\n            bool bFlag = element.CanBuildChannelListener&lt;IReplyChannel&gt;(context);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Channels_BindingElement_Clone\">\r\n    \r\n            <a id=\"System_ServiceModel_Channels_BindingElement_Clone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clone()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, returns a copy of the binding element object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.ServiceModel.Channels.BindingElement Clone ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.channels.bindingelement\" data-linktype=\"relative-path\">BindingElement</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.servicemodel.channels.bindingelement\" data-linktype=\"relative-path\">BindingElement</a> object that is a deep clone of the original.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Implement the Clone method to return a deep clone of your binding element. Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element. If a clone is not returned, the run-time behavior is undefined.  </p>\n<p> A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object. (This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only. If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Channels_BindingElement_GetProperty__1_System_ServiceModel_Channels_BindingContext_\">\r\n    \r\n            <a id=\"System_ServiceModel_Channels_BindingElement_GetProperty_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetProperty&lt;T&gt;(BindingContext)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, returns a typed object requested, if present, from the appropriate layer in the binding stack.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.channels.bindingcontext\" data-linktype=\"relative-path\">BindingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.servicemodel.channels.bindingcontext\" data-linktype=\"relative-path\">BindingContext</a> for the binding element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </div>\r\n                  <p>The typed object <code>T</code> requested if it is present or <code>null</code> if it is not present.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this to retrieve capabilities, requirements and parameters from the binding element stack. If a binding element supports returning the requested object, it returns it. If not, it delegates the call down to the next binding element in the stack. If it gets to the bottom of the stack and no binding element supported the requested object, then the method returns <code>null</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you are adding message headers that must be encrypted you must return a <a class=\"xref\" href=\"system.servicemodel.security.channelprotectionrequirements\" data-linktype=\"relative-path\">ChannelProtectionRequirements</a> instance with your requirements from this method when asked for <a class=\"xref\" href=\"system.servicemodel.security.channelprotectionrequirements\" data-linktype=\"relative-path\">ChannelProtectionRequirements</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"S_UEChannels#20\">            CustomBinding binding = new CustomBinding();\n            HttpTransportBindingElement element = new HttpTransportBindingElement();\n            BindingParameterCollection parameters = new BindingParameterCollection();\n            parameters.Add(new ServiceCredentials());\n            Uri baseAddress = new Uri(&quot;http://localhost:8000/ChannelApp&quot;);\n            String relAddress = &quot;http://localhost:8000/ChannelApp/service&quot;;\n            BindingContext context = new BindingContext(binding, parameters, baseAddress, relAddress, ListenUriMode.Explicit);\n\n            ServiceCredentials serviceCredentials = element.GetProperty&lt;ServiceCredentials&gt;(context);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ServiceModel.Channels.BindingElement.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ServiceModel.Channels.BindingElement.yml\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Channels.BindingElement\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Channels.BindingElement..ctor\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Channels.BindingElement.BuildChannelFactory&lt;TChannel&gt;\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Channels.BindingElement.BuildChannelListener&lt;TChannel&gt;\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory&lt;TChannel&gt;\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Channels.BindingElement.CanBuildChannelListener&lt;TChannel&gt;\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Channels.BindingElement.Clone\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Channels.BindingElement.GetProperty&lt;T&gt;\">\r\n<meta name=\"APILocation\" content=\"System.ServiceModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"0672a748-71b8-846f-2389-080a9caa5eb6\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"The elements of the bindings that build the channel factories and channel listeners for various types of channels that are used to process outgoing and incoming messages.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.ServiceModel.Channels/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ServiceModel.Channels.BindingElement\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ServiceModel.Channels.BindingElement.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ServiceModel.Channels.BindingElement.yml","open_to_public_contributors":true,"api_name":["System.ServiceModel.Channels.BindingElement","System.ServiceModel.Channels.BindingElement..ctor","System.ServiceModel.Channels.BindingElement.BuildChannelFactory<TChannel>","System.ServiceModel.Channels.BindingElement.BuildChannelListener<TChannel>","System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory<TChannel>","System.ServiceModel.Channels.BindingElement.CanBuildChannelListener<TChannel>","System.ServiceModel.Channels.BindingElement.Clone","System.ServiceModel.Channels.BindingElement.GetProperty<T>"],"api_location":["System.ServiceModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ServiceModel.Channels.BindingElement","System::ServiceModel::Channels::BindingElement","System.ServiceModel.Channels.BindingElement.#ctor","System::ServiceModel::Channels::BindingElement::#ctor","System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1","System::ServiceModel::Channels::BindingElement::BuildChannelFactory``1","System.ServiceModel.Channels.BindingElement.BuildChannelListener``1","System::ServiceModel::Channels::BindingElement::BuildChannelListener``1","System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1","System::ServiceModel::Channels::BindingElement::CanBuildChannelFactory``1","System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1","System::ServiceModel::Channels::BindingElement::CanBuildChannelListener``1","System.ServiceModel.Channels.BindingElement.Clone","System::ServiceModel::Channels::BindingElement::Clone","System.ServiceModel.Channels.BindingElement.GetProperty``1","System::ServiceModel::Channels::BindingElement::GetProperty``1"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"0672a748-71b8-846f-2389-080a9caa5eb6","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.ServiceModel.Channels/BindingElement.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"BindingElement class | Microsoft Docs","_op_ogTitle":"BindingElement class","description":"The elements of the bindings that build the channel factories and channel listeners for various types of channels that are used to process outgoing and incoming messages.\n","toc_asset_id":"_splitted/System.ServiceModel.Channels/toc.json","toc_rel":"_splitted/System.ServiceModel.Channels/toc.json","source_url":"","ms.assetid":"System.ServiceModel.Channels.BindingElement","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.servicemodel.channels.bindingelement","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.servicemodel.channels.bindingelement","fileRelativePath":"System.ServiceModel.Channels.BindingElement.html"},"themesRelativePathToOutputRoot":"_themes/"}