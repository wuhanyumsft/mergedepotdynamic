{"content":"    \r\n    <h1 id=\"System_Text_RegularExpressions_GroupCollection\">\r\n      <span class=\"lang-csharp\">GroupCollection</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Returns the set of captured groups in a single match.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class GroupCollection : System.Collections.ICollection</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">GroupCollection</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The GroupCollection class is a zero-based collection class that consists of one or more <a class=\"xref\" href=\"system.text.regularexpressions.group\" data-linktype=\"relative-path\">Group</a> objects that provide information about captured groups in a regular expression match. The collection is immutable (read-only) and has no public constructor. A GroupCollection object is returned by the <a class=\"xref\" href=\"system.text.regularexpressions.match#System_Text_RegularExpressions_Match_Groups_\" data-linktype=\"relative-path\">Groups</a> property.  </p>\n<p> The collection contains one or more <a class=\"xref\" href=\"system.text.regularexpressions.group\" data-linktype=\"relative-path\">System.Text.RegularExpressions.Group</a> objects. If the match is successful, the first element in the collection contains the <a class=\"xref\" href=\"system.text.regularexpressions.group\" data-linktype=\"relative-path\">Group</a> object that corresponds to the entire match. Each subsequent element represents a captured group, if the regular expression includes capturing groups. Matches from numbered (unnamed) capturing groups appear in numeric order before matches from named capturing groups. If the match is unsuccessful, the collection contains a single <a class=\"xref\" href=\"system.text.regularexpressions.group\" data-linktype=\"relative-path\">System.Text.RegularExpressions.Group</a> object whose <a class=\"xref\" href=\"system.text.regularexpressions.group#System_Text_RegularExpressions_Group_Success_\" data-linktype=\"relative-path\">Success</a> property is <code>false</code> and whose <a class=\"xref\" href=\"system.text.regularexpressions.capture#System_Text_RegularExpressions_Capture_Value_\" data-linktype=\"relative-path\">Value</a> property equals <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">System.String.Empty</a>. For more information, see the &quot;Grouping Constructs and Regular Expression Objects&quot; section in the <a href=\"../Topic/Grouping%20Constructs%20in%20Regular%20Expressions.md\" data-linktype=\"relative-path\">Grouping Constructs</a> article.  </p>\n<p> To iterate through the members of the collection, you should use the collection iteration construct provided by your language (such as <code>foreach</code> in C# and <code>For Each</code>â€¦<code>Next</code> in Visual Basic) instead of retrieving the enumerator that is returned by the <a class=\"xref\" href=\"system.text.regularexpressions.groupcollection#System_Text_RegularExpressions_GroupCollection_GetEnumerator_\" data-linktype=\"relative-path\">GetEnumerator</a> method. In addition, you can access individual numbered captured groups from the [Item&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29&gt; property (the indexer in C#), and you can access individual named captured groups from the [Item&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29&gt; property. Note that you can retrieve an array that contains the numbers and names of all capturing groups by calling the <a class=\"xref\" href=\"system.text.regularexpressions.regex#System_Text_RegularExpressions_Regex_GetGroupNumbers_\" data-linktype=\"relative-path\">GetGroupNumbers</a> and <a class=\"xref\" href=\"system.text.regularexpressions.regex#System_Text_RegularExpressions_Regex_GetGroupNames_\" data-linktype=\"relative-path\">GetGroupNames</a> methods, respectively. Both are instance methods and require that you instantiate a <a class=\"xref\" href=\"system.text.regularexpressions.regex\" data-linktype=\"relative-path\">Regex</a> object that represents the regular expression to be matched.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_RegularExpressions_GroupCollection_Count\" data-linktype=\"self-bookmark\">Count</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the number of groups in the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_RegularExpressions_GroupCollection_IsReadOnly\" data-linktype=\"self-bookmark\">IsReadOnly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the collection is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_RegularExpressions_GroupCollection_IsSynchronized\" data-linktype=\"self-bookmark\">IsSynchronized</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether access to the <a class=\"xref\" href=\"system.text.regularexpressions.groupcollection\" data-linktype=\"relative-path\">GroupCollection</a> is synchronized (thread-safe).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_RegularExpressions_GroupCollection_Item_System_Int32_\" data-linktype=\"self-bookmark\">Item(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Enables access to a member of the collection by integer index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_RegularExpressions_GroupCollection_Item_System_String_\" data-linktype=\"self-bookmark\">Item(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Enables access to a member of the collection by string index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_RegularExpressions_GroupCollection_SyncRoot\" data-linktype=\"self-bookmark\">SyncRoot</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an object that can be used to synchronize access to the <a class=\"xref\" href=\"system.text.regularexpressions.groupcollection\" data-linktype=\"relative-path\">GroupCollection</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_RegularExpressions_GroupCollection_CopyTo_System_Array_System_Int32_\" data-linktype=\"self-bookmark\">CopyTo(Array,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies all the elements of the collection to the given array beginning at the given index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_RegularExpressions_GroupCollection_GetEnumerator\" data-linktype=\"self-bookmark\">GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides an enumerator that iterates through the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Text_RegularExpressions_GroupCollection_Count\">\r\n    \r\n            <a id=\"System_Text_RegularExpressions_GroupCollection_Count_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Count</div>        \r\n          </div>\r\n    \r\n            <p>Returns the number of groups in the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Count { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of groups in the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.text.regularexpressions.groupcollection\" data-linktype=\"relative-path\">GroupCollection</a> object always has at least one member. If a match is unsuccessful, the <a class=\"xref\" href=\"system.text.regularexpressions.match#System_Text_RegularExpressions_Match_Groups_\" data-linktype=\"relative-path\">Groups</a> property returns a <a class=\"xref\" href=\"system.text.regularexpressions.groupcollection\" data-linktype=\"relative-path\">GroupCollection</a> object that contains a single member.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_RegularExpressions_GroupCollection_IsReadOnly\">\r\n    \r\n            <a id=\"System_Text_RegularExpressions_GroupCollection_IsReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsReadOnly</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the collection is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsReadOnly { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> in all cases.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_RegularExpressions_GroupCollection_IsSynchronized\">\r\n    \r\n            <a id=\"System_Text_RegularExpressions_GroupCollection_IsSynchronized_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsSynchronized</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether access to the <a class=\"xref\" href=\"system.text.regularexpressions.groupcollection\" data-linktype=\"relative-path\">GroupCollection</a> is synchronized (thread-safe).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsSynchronized { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>false</code> in all cases.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"WARNING\"><h5>Warning</h5><p> This member is not present in the Portable Class Library. If you are developing applications that target the Portable Class Library, use the &lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=fullName&gt; property instead.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_RegularExpressions_GroupCollection_Item_System_Int32_\">\r\n    \r\n            <a id=\"System_Text_RegularExpressions_GroupCollection_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Enables access to a member of the collection by integer index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Text.RegularExpressions.Group this[int groupnum] { get; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>groupnum</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the collection member to be retrieved.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.regularexpressions.group\" data-linktype=\"relative-path\">Group</a></div>\r\n                  </div>\r\n                  <p>The member of the collection specified by <code>groupnum</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Item property is the index (in C#) or the default property (in Visual Basic) of the <a class=\"xref\" href=\"system.text.regularexpressions.groupcollection\" data-linktype=\"relative-path\">GroupCollection</a> class. It allows you to enumerate the members of the collection by using a <code>foreach</code> statement in C# or a <code>For Each</code> statement in Visual Basic.  </p>\n<p> You can also use this property to retrieve individual captured groups by their index number. You can retrieve an array that contains the numbers of all capturing groups in a regular expression by calling the instance <a class=\"xref\" href=\"system.text.regularexpressions.regex#System_Text_RegularExpressions_Regex_GetGroupNumbers_\" data-linktype=\"relative-path\">GetGroupNumbers</a> method. You can also map named capturing groups to their numbers by calling the instance <a class=\"xref\" href=\"system.text.regularexpressions.regex#System_Text_RegularExpressions_Regex_GroupNumberFromName_\" data-linktype=\"relative-path\">GroupNumberFromName</a> method.  </p>\n<p> You can determine the number of items in the collection by retrieving the value of the <a class=\"xref\" href=\"system.text.regularexpressions.groupcollection#System_Text_RegularExpressions_GroupCollection_Count_\" data-linktype=\"relative-path\">Count</a> property. Valid values for the <code>groupnum</code> parameter range from 0 to one less than the number of items in the collection.  </p>\n<p> The <a class=\"xref\" href=\"system.text.regularexpressions.groupcollection\" data-linktype=\"relative-path\">GroupCollection</a> object returned by the <a class=\"xref\" href=\"system.text.regularexpressions.match#System_Text_RegularExpressions_Match_Groups_\" data-linktype=\"relative-path\">Groups</a> property always has at least one member. If the regular expression engine cannot find any matches in a particular input string, the single <a class=\"xref\" href=\"system.text.regularexpressions.group\" data-linktype=\"relative-path\">Group</a> object in the collection has its <a class=\"xref\" href=\"system.text.regularexpressions.group#System_Text_RegularExpressions_Group_Success_\" data-linktype=\"relative-path\">Success</a> property set to <code>false</code> and its <code>Group.Value</code> property set to <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">System.String.Empty</a>.  </p>\n<p> If <code>groupnum</code> is not the index of a member of the collection, or if <code>groupnum</code> is the index of a capturing group that has not been matched in the input string, the method returns a <a class=\"xref\" href=\"system.text.regularexpressions.group\" data-linktype=\"relative-path\">Group</a> object whose <a class=\"xref\" href=\"system.text.regularexpressions.group#System_Text_RegularExpressions_Group_Success_\" data-linktype=\"relative-path\">Success</a> property is <code>false</code> and whose <code>Group.Value</code> property is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">System.String.Empty</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example defines a regular expression that consists of two numbered groups. The first group captures one or more consecutive digits. The second group matches a single character. Because the regular expression engine looks for zero or one occurrence of the first group, it does not always find a match even if the regular expression match is successful. The example then illustrates the result when the Item property is used to retrieve an unmatched group, a matched group, and a group that is not defined in the regular expression. The example defines a regular expression pattern <code>(\\d+)*(\\w)\\2</code>, which is interpreted as shown in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Pattern</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>(\\d+)*</code></td>\n<td>Match one or more occurrence of a decimal digit. This is the first capturing group. Match this pattern either zero or one time.</td>\n</tr>\n<tr>\n<td><code>(\\w)</code></td>\n<td>This is the second capturing group.</td>\n</tr>\n<tr>\n<td><code>\\k</code></td>\n<td>Match the string captured by the second capturing group.</td>\n</tr>\n</tbody>\n</table>\n<pre><code class=\"lang-vb\" name=\"System.Text.RegularExpressions.GroupCollection.Item#2\">Imports System.Text.RegularExpressions\n\nModule Example\n   Public Sub Main()\n      Dim pattern As String = &quot;(\\d+)*(\\w)\\2&quot;\n      Dim input As String = &quot;AA&quot;\n      Dim match As Match = Regex.Match(input, pattern)\n      \n      &#39; Get the first named group.\n      Dim group1 As Group = match.Groups.Item(1)\n      Console.WriteLine(&quot;Group 1 value: {0}&quot;, If(group1.Success, group1.Value, &quot;Empty&quot;))\n      \n      &#39; Get the second named group.\n      Dim group2 As Group = match.Groups.Item(2)\n      Console.WriteLine(&quot;Group 2 value: {0}&quot;, If(group2.Success, group2.Value, &quot;Empty&quot;))\n      \n      &#39; Get a non-existent group.\n      Dim group3 As Group = match.Groups.Item(3)\n      Console.WriteLine(&quot;Group 3 value: {0}&quot;, If(group3.Success, group3.Value, &quot;Empty&quot;))\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       Group 1 value: Empty\n&#39;       Group 2 value: A\n&#39;       Group 3 value: Empty\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Text.RegularExpressions.GroupCollection.Item#2\">using System;\nusing System.Text.RegularExpressions;\n\npublic class Example\n{\n   public static void Main()\n   {\n      string pattern = @&quot;(\\d+)*(\\w)\\2&quot;;\n      string input = &quot;AA&quot;;\n      Match match = Regex.Match(input, pattern);\n      \n      // Get the first named group.\n      Group group1 = match.Groups[1];\n      Console.WriteLine(&quot;Group 1 value: {0}&quot;, group1.Success ? group1.Value : &quot;Empty&quot;);\n      \n      // Get the second named group.\n      Group group2 = match.Groups[2];\n      Console.WriteLine(&quot;Group 2 value: {0}&quot;, group2.Success ? group2.Value : &quot;Empty&quot;);\n      \n      // Get a non-existent group.\n      Group group3 = match.Groups[3];\n      Console.WriteLine(&quot;Group 3 value: {0}&quot;, group3.Success ? group3.Value : &quot;Empty&quot;);\n   }\n}\n// The example displays the following output:\n//       Group 1 value: Empty\n//       Group 2 value: A\n//       Group 3 value: Empty\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_RegularExpressions_GroupCollection_Item_System_String_\">\r\n    \r\n            <a id=\"System_Text_RegularExpressions_GroupCollection_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(String)</div>        \r\n          </div>\r\n    \r\n            <p>Enables access to a member of the collection by string index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Text.RegularExpressions.Group this[string groupname] { get; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>groupname</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of a capturing group.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.regularexpressions.group\" data-linktype=\"relative-path\">Group</a></div>\r\n                  </div>\r\n                  <p>The member of the collection specified by <code>groupname</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>groupName</code> can be either the name of a capturing group that is defined by the <code>(?&lt;</code><em>name</em><code>&gt;)</code> element in a regular expression, or the string representation of the number of a capturing group that is defined by a grouping construct. For more information about groups in regular expressions, see <a href=\"../Topic/Grouping%20Constructs%20in%20Regular%20Expressions.md\" data-linktype=\"relative-path\">Grouping Constructs</a>.  </p>\n<p> You can retrieve the names of all the captured groups in a <a class=\"xref\" href=\"system.text.regularexpressions.regex\" data-linktype=\"relative-path\">Regex</a> object by calling the <a class=\"xref\" href=\"system.text.regularexpressions.regex#System_Text_RegularExpressions_Regex_GetGroupNames_\" data-linktype=\"relative-path\">GetGroupNames</a> method. You can also map the numbers of capturing groups in a regular expression to their names by calling the <a class=\"xref\" href=\"system.text.regularexpressions.regex#System_Text_RegularExpressions_Regex_GroupNameFromNumber_\" data-linktype=\"relative-path\">GroupNameFromNumber</a> method. Individual names from the array can then be passed to the Item property to retrieve the captured string.  </p>\n<p> If <code>groupname</code> is not the name of a capturing group in the collection, or if <code>groupname</code> is the name of a capturing group that has not been matched in the input string, the method returns a <a class=\"xref\" href=\"system.text.regularexpressions.group\" data-linktype=\"relative-path\">Group</a> object whose <a class=\"xref\" href=\"system.text.regularexpressions.group#System_Text_RegularExpressions_Group_Success_\" data-linktype=\"relative-path\">Success</a> property is <code>false</code> and whose <code>Group.Value</code> property is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">System.String.Empty</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example defines a regular expression that consists of two named groups. The first group, <code>numbers</code>, captures one or more consecutive digits. The second group, <code>letter</code>, matches a single character. Because the regular expression engine looks for zero or one occurrence of the pattern defined by the <code>numbers</code> group, the <code>numbers</code> group is not always present even if a match is successful. The example then illustrates the result when the Item property is used to retrieve an unmatched group, a matched group, and a group that is not defined in the regular expression. The example defines a regular expression pattern <code>(?&lt;numbers&gt;\\d+)*(?&lt;letter&gt;\\w)\\k&lt;letter&gt;</code>, which is interpreted as shown in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Pattern</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>(?&lt;numbers&gt;\\d+)*</code></td>\n<td>Match one or more occurrence of a decimal digit. Name this the <code>numbers</code> capturing group. Match this pattern either zero or one time.</td>\n</tr>\n<tr>\n<td><code>(?&lt;letter&gt;\\w)</code></td>\n<td>Match a single word character. Name this the <code>letter</code> capturing group.</td>\n</tr>\n<tr>\n<td><code>\\k&lt;letter&gt;</code></td>\n<td>Match the string captured by the <code>letter</code> capturing group.</td>\n</tr>\n</tbody>\n</table>\n<pre><code class=\"lang-cs\" name=\"System.Text.RegularExpressions.GroupCollection.Item#1\">using System;\nusing System.Text.RegularExpressions;\n\npublic class Example\n{\n   public static void Main()\n   {\n      string pattern = @&quot;(?&lt;numbers&gt;\\d+)*(?&lt;letter&gt;\\w)\\k&lt;letter&gt;&quot;;\n      string input = &quot;AA&quot;;\n      Match match = Regex.Match(input, pattern);\n      \n      // Get the first named group.\n      Group group1 = match.Groups[&quot;numbers&quot;];\n      Console.WriteLine(&quot;Group &#39;numbers&#39; value: {0}&quot;, group1.Success ? group1.Value : &quot;Empty&quot;);\n      \n      // Get the second named group.\n      Group group2 = match.Groups[&quot;letter&quot;];\n      Console.WriteLine(&quot;Group &#39;letter&#39; value: {0}&quot;, group2.Success ? group2.Value : &quot;Empty&quot;);\n      \n      // Get a non-existent group.\n      Group group3 = match.Groups[&quot;none&quot;];\n      Console.WriteLine(&quot;Group &#39;none&#39; value: {0}&quot;, group3.Success ? group3.Value : &quot;Empty&quot;);\n   }\n}\n// The example displays the following output:\n//       Group &#39;numbers&#39; value: Empty\n//       Group &#39;letter&#39; value: A\n//       Group &#39;none&#39; value: Empty\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Text.RegularExpressions.GroupCollection.Item#1\">Imports System.Text.RegularExpressions\n\nModule Example\n   Public Sub Main()\n      Dim pattern As String = &quot;(?&lt;numbers&gt;\\d+)*(?&lt;letter&gt;\\w)\\k&lt;letter&gt;&quot;\n      Dim input As String = &quot;AA&quot;\n      Dim match As Match = Regex.Match(input, pattern)\n      \n      &#39; Get the first named group.\n      Dim group1 As Group = match.Groups.Item(&quot;numbers&quot;)\n      Console.WriteLine(&quot;Group &#39;numbers&#39; value: {0}&quot;, If(group1.Success, group1.Value, &quot;Empty&quot;))\n      \n      &#39; Get the second named group.\n      Dim group2 As Group = match.Groups.Item(&quot;letter&quot;)\n      Console.WriteLine(&quot;Group &#39;letter&#39; value: {0}&quot;, If(group2.Success, group2.Value, &quot;Empty&quot;))\n      \n      &#39; Get a non-existent group.\n      Dim group3 As Group = match.Groups.Item(&quot;none&quot;)\n      Console.WriteLine(&quot;Group &#39;none&#39; value: {0}&quot;, If(group3.Success, group3.Value, &quot;Empty&quot;))\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       Group &#39;numbers&#39; value: Empty\n&#39;       Group &#39;letter&#39; value: A\n&#39;       Group &#39;none&#39; value: Empty\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_RegularExpressions_GroupCollection_SyncRoot\">\r\n    \r\n            <a id=\"System_Text_RegularExpressions_GroupCollection_SyncRoot_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SyncRoot</div>        \r\n          </div>\r\n    \r\n            <p>Gets an object that can be used to synchronize access to the <a class=\"xref\" href=\"system.text.regularexpressions.groupcollection\" data-linktype=\"relative-path\">GroupCollection</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object SyncRoot { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>A copy of the <a class=\"xref\" href=\"system.text.regularexpressions.match\" data-linktype=\"relative-path\">Match</a> object to synchronize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"WARNING\"><h5>Warning</h5><p> This member is not present in the Portable Class Library. If you are developing applications that target the Portable Class Library, use the &lt;xref:System.Text.RegularExpressions.GroupCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=fullName&gt; property instead.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Text_RegularExpressions_GroupCollection_CopyTo_System_Array_System_Int32_\">\r\n    \r\n            <a id=\"System_Text_RegularExpressions_GroupCollection_CopyTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyTo(Array,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Copies all the elements of the collection to the given array beginning at the given index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CopyTo (Array array, int arrayIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array the collection is to be copied into.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arrayIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The position in the destination array where the copying is to begin.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>array</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.indexoutofrangeexception\" data-linktype=\"relative-path\">IndexOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>arrayIndex</code> is outside the bounds of <code>array</code>.  </p>\n<p> -or-  </p>\n<p> <code>arrayIndex</code> plus <span class=\"xref\">stem.Text.RegularExpressions.GroupCollection.Count*</span> is outside the bounds of <code>array</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Because the entire collection is copied into the array starting at the given index, the destination array must be at least as large as the collection.  </p>\n<div class=\"WARNING\"><h5>Warning</h5><p> This member is not present in the Portable Class Library. If you are developing applications that target the Portable Class Library, use the &lt;xref:System.Text.RegularExpressions.GroupCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=fullName&gt; method instead.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example extracts each word from a sentence and captures it in a capturing group, The CopyTo method is then used to copy the elements in each match&#39;s <a class=\"xref\" href=\"system.text.regularexpressions.groupcollection\" data-linktype=\"relative-path\">GroupCollection</a> object to an array that contains the capturing groups from all matches. The individual captured words are then displayed to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Text.RegularExpressions.GroupCollection.CopyTo#1\">using System;\nusing System.Text.RegularExpressions;\n\npublic class Example\n{\n   public static void Main()\n   {\n      string pattern = @&quot;\\b(\\S+?)\\b&quot;;\n      string input = &quot;This sentence is rather short but pointless.&quot;;\n\n      MatchCollection matches = Regex.Matches(input, pattern);\n      object[] words = new object[matches.Count * 2];\n      \n      int index = 0;\n      foreach (Match match in matches)\n      {\n         match.Groups.CopyTo(words, index);\n         index += 2;\n      }\n      \n      // Display captured groups.\n      for (int ctr = 1; ctr &lt;= words.GetUpperBound(0); ctr += 2)\n         Console.WriteLine(words[ctr]);\n   }\n}\n// The example displays the following output:\n//       This\n//       sentence\n//       is\n//       rather\n//       short\n//       but\n//       pointless\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Text.RegularExpressions.GroupCollection.CopyTo#1\">Imports System.Text.RegularExpressions\n\nModule Example\n   Public Sub Main()\n      Dim pattern As String = &quot;\\b(\\S+?)\\b&quot;\n      Dim input As String = &quot;This sentence is rather short but pointless.&quot;\n\n      Dim matches As MatchCollection = Regex.Matches(input, pattern)\n      Dim words(matches.Count * 2 - 1) As Object\n      \n      Dim index As Integer = 0\n      For Each match As Match In matches\n         match.Groups.CopyTo(words, index)\n         index += 2\n      Next\n      &#39; Display captured groups.\n      For ctr As Integer = 1 To words.GetUpperBound(0) Step 2\n         Console.WriteLine(words(ctr))\n      Next\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       This\n&#39;       sentence\n&#39;       is\n&#39;       rather\n&#39;       short\n&#39;       but\n&#39;       pointless\n</code></pre><p> The regular expression is defined as follows:  </p>\n<table>\n<thead>\n<tr>\n<th>Pattern</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>\\b</code></td>\n<td>Match a word boundary.</td>\n</tr>\n<tr>\n<td><code>(\\S+?)</code></td>\n<td>Match one or more non-white space characters. Assign them to the first capturing group.</td>\n</tr>\n<tr>\n<td><code>\\b</code></td>\n<td>Match a word boundary.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_RegularExpressions_GroupCollection_GetEnumerator\">\r\n    \r\n            <a id=\"System_Text_RegularExpressions_GroupCollection_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Provides an enumerator that iterates through the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.IEnumerator GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></div>\r\n                  </div>\r\n                  <p>An enumerator that contains all <a class=\"xref\" href=\"system.text.regularexpressions.group\" data-linktype=\"relative-path\">Group</a> objects in the <a class=\"xref\" href=\"system.text.regularexpressions.groupcollection\" data-linktype=\"relative-path\">GroupCollection</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Instead of calling the GetEnumerator method to retrieve an enumerator that lets you iterate through the <a class=\"xref\" href=\"system.text.regularexpressions.group\" data-linktype=\"relative-path\">Group</a> objects in the collection, you should use the group iteration construct (such as <code>foreach</code> in C# and <code>For Each</code>â€¦<code>Next</code> in Visual Basic) that is provided by your programming language.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Text.RegularExpressions.GroupCollection.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Text.RegularExpressions.GroupCollection.yml\">\r\n<meta name=\"APIName\" content=\"System.Text.RegularExpressions.GroupCollection\">\r\n<meta name=\"APIName\" content=\"System.Text.RegularExpressions.GroupCollection.CopyTo\">\r\n<meta name=\"APIName\" content=\"System.Text.RegularExpressions.GroupCollection.Count\">\r\n<meta name=\"APIName\" content=\"System.Text.RegularExpressions.GroupCollection.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Text.RegularExpressions.GroupCollection.IsReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Text.RegularExpressions.GroupCollection.IsSynchronized\">\r\n<meta name=\"APIName\" content=\"System.Text.RegularExpressions.GroupCollection.Item\">\r\n<meta name=\"APIName\" content=\"System.Text.RegularExpressions.GroupCollection.SyncRoot\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"c466e4ee-fbb3-8fa2-d0c2-e79f89dde6a9\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Returns the set of captured groups in a single match.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Text.RegularExpressions/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Text.RegularExpressions.GroupCollection\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Text.RegularExpressions.GroupCollection.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Text.RegularExpressions.GroupCollection.yml","open_to_public_contributors":true,"api_name":["System.Text.RegularExpressions.GroupCollection","System.Text.RegularExpressions.GroupCollection.CopyTo","System.Text.RegularExpressions.GroupCollection.Count","System.Text.RegularExpressions.GroupCollection.GetEnumerator","System.Text.RegularExpressions.GroupCollection.IsReadOnly","System.Text.RegularExpressions.GroupCollection.IsSynchronized","System.Text.RegularExpressions.GroupCollection.Item","System.Text.RegularExpressions.GroupCollection.SyncRoot"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Text.RegularExpressions.GroupCollection","System::Text::RegularExpressions::GroupCollection","System.Text.RegularExpressions.GroupCollection.CopyTo","System::Text::RegularExpressions::GroupCollection::CopyTo","System.Text.RegularExpressions.GroupCollection.Count","System::Text::RegularExpressions::GroupCollection::Count","System.Text.RegularExpressions.GroupCollection.GetEnumerator","System::Text::RegularExpressions::GroupCollection::GetEnumerator","System.Text.RegularExpressions.GroupCollection.IsReadOnly","System::Text::RegularExpressions::GroupCollection::IsReadOnly","System.Text.RegularExpressions.GroupCollection.IsSynchronized","System::Text::RegularExpressions::GroupCollection::IsSynchronized","System.Text.RegularExpressions.GroupCollection.Item","System::Text::RegularExpressions::GroupCollection::Item","System.Text.RegularExpressions.GroupCollection.SyncRoot","System::Text::RegularExpressions::GroupCollection::SyncRoot"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"c466e4ee-fbb3-8fa2-d0c2-e79f89dde6a9","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Text.RegularExpressions/GroupCollection.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"GroupCollection class | Microsoft Docs","_op_ogTitle":"GroupCollection class","description":"Returns the set of captured groups in a single match.\n","toc_asset_id":"_splitted/System.Text.RegularExpressions/toc.json","toc_rel":"_splitted/System.Text.RegularExpressions/toc.json","source_url":"","ms.assetid":"System.Text.RegularExpressions.GroupCollection","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.text.regularexpressions.groupcollection","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.text.regularexpressions.groupcollection","fileRelativePath":"System.Text.RegularExpressions.GroupCollection.html"},"themesRelativePathToOutputRoot":"_themes/"}