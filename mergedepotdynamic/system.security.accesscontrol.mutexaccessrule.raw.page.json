{"content":"    \r\n    <h1 id=\"System_Security_AccessControl_MutexAccessRule\">\r\n      <span class=\"lang-csharp\">MutexAccessRule</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a set of access rights allowed or denied for a user or group. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class MutexAccessRule : System.Security.AccessControl.AccessRule</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.accesscontrol.authorizationrule\" data-linktype=\"relative-path\">AuthorizationRule</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.accesscontrol.accessrule\" data-linktype=\"relative-path\">System.Security.AccessControl.AccessRule</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">MutexAccessRule</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.accesscontrol.accessrule#System_Security_AccessControl_AccessRule_AccessControlType\" data-linktype=\"relative-path\">AccessControlType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.accesscontrol.authorizationrule#System_Security_AccessControl_AuthorizationRule_AccessMask\" data-linktype=\"relative-path\">AccessMask</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.accesscontrol.authorizationrule#System_Security_AccessControl_AuthorizationRule_IdentityReference\" data-linktype=\"relative-path\">IdentityReference</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.accesscontrol.authorizationrule#System_Security_AccessControl_AuthorizationRule_InheritanceFlags\" data-linktype=\"relative-path\">InheritanceFlags</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.accesscontrol.authorizationrule#System_Security_AccessControl_AuthorizationRule_IsInherited\" data-linktype=\"relative-path\">IsInherited</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.accesscontrol.authorizationrule#System_Security_AccessControl_AuthorizationRule_PropagationFlags\" data-linktype=\"relative-path\">PropagationFlags</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The MutexAccessRule class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system mutexes. For an overview of these classes, and their relationship to the underlying Windows access control structures, see <a class=\"xref\" href=\"system.security.accesscontrol.mutexsecurity\" data-linktype=\"relative-path\">MutexSecurity</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Windows access control security is meaningful only for named system mutexes. If a <a class=\"xref\" href=\"system.threading.mutex\" data-linktype=\"relative-path\">Mutex</a> object represents a local mutex, access control is irrelevant.  </p>\n</div>\n<p> To get a list of the rules currently applied to a named mutex, use the <a class=\"xref\" href=\"system.threading.mutex#System_Threading_Mutex_GetAccessControl_\" data-linktype=\"relative-path\">GetAccessControl</a> method to get a <a class=\"xref\" href=\"system.security.accesscontrol.mutexsecurity\" data-linktype=\"relative-path\">MutexSecurity</a> object, and then use its <a class=\"xref\" href=\"system.security.accesscontrol.commonobjectsecurity#System_Security_AccessControl_CommonObjectSecurity_GetAccessRules_\" data-linktype=\"relative-path\">GetAccessRules</a> method to obtain a collection of MutexAccessRule objects.  </p>\n<p> MutexAccessRule objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL). When you get the set of all access rules for a mutex, the set contains the minimum number of rules currently required to express all the access control entries.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The underlying access control entries change as you apply and remove rules. The information in rules is merged if possible, to maintain the smallest number of access control entries. Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.  </p>\n</div>\n<p> Use MutexAccessRule objects to specify access rights to allow or deny to a user or group. A MutexAccessRule object always represents either allowed access or denied access, never both.  </p>\n<p> To apply a rule to a named system mutex, use the <a class=\"xref\" href=\"system.threading.mutex#System_Threading_Mutex_GetAccessControl_\" data-linktype=\"relative-path\">GetAccessControl</a> method to get the <a class=\"xref\" href=\"system.security.accesscontrol.mutexsecurity\" data-linktype=\"relative-path\">MutexSecurity</a> object. Modify the <a class=\"xref\" href=\"system.security.accesscontrol.mutexsecurity\" data-linktype=\"relative-path\">MutexSecurity</a> object by using its methods to add the rule, and then use the <a class=\"xref\" href=\"system.threading.mutex#System_Threading_Mutex_SetAccessControl_\" data-linktype=\"relative-path\">SetAccessControl</a> method to reattach the security object.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Changes you make to a <a class=\"xref\" href=\"system.security.accesscontrol.mutexsecurity\" data-linktype=\"relative-path\">MutexSecurity</a> object do not affect the access levels of the named mutex until you call the <a class=\"xref\" href=\"system.threading.mutex#System_Threading_Mutex_SetAccessControl_\" data-linktype=\"relative-path\">SetAccessControl</a> method to assign the altered security object to the named mutex.  </p>\n</div>\n<p> MutexAccessRule objects are immutable. Security for a mutex is modified using the methods of the <a class=\"xref\" href=\"system.security.accesscontrol.mutexsecurity\" data-linktype=\"relative-path\">MutexSecurity</a> class to add or remove rules; as you do this, the underlying access control entries are modified.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_AccessControl_MutexAccessRule__ctor_System_Security_Principal_IdentityReference_System_Security_AccessControl_MutexRights_System_Security_AccessControl_AccessControlType_\" data-linktype=\"self-bookmark\">MutexAccessRule(IdentityReference,MutexRights,AccessControlType)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.accesscontrol.mutexaccessrule\" data-linktype=\"relative-path\">MutexAccessRule</a> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_AccessControl_MutexAccessRule__ctor_System_String_System_Security_AccessControl_MutexRights_System_Security_AccessControl_AccessControlType_\" data-linktype=\"self-bookmark\">MutexAccessRule(String,MutexRights,AccessControlType)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.accesscontrol.mutexaccessrule\" data-linktype=\"relative-path\">MutexAccessRule</a> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_AccessControl_MutexAccessRule_MutexRights\" data-linktype=\"self-bookmark\">MutexRights</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the rights allowed or denied by the access rule.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_AccessControl_MutexAccessRule__ctor_System_Security_Principal_IdentityReference_System_Security_AccessControl_MutexRights_System_Security_AccessControl_AccessControlType_\">\r\n    \r\n            <a id=\"System_Security_AccessControl_MutexAccessRule__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MutexAccessRule(IdentityReference,MutexRights,AccessControlType)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.accesscontrol.mutexaccessrule\" data-linktype=\"relative-path\">MutexAccessRule</a> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public MutexAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.MutexRights eventRights, System.Security.AccessControl.AccessControlType type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>identity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.identityreference\" data-linktype=\"relative-path\">IdentityReference</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The user or group the rule applies to. Must be of type <a class=\"xref\" href=\"system.security.principal.securityidentifier\" data-linktype=\"relative-path\">SecurityIdentifier</a> or a type such as <a class=\"xref\" href=\"system.security.principal.ntaccount\" data-linktype=\"relative-path\">NTAccount</a> that can be converted to type <a class=\"xref\" href=\"system.security.principal.securityidentifier\" data-linktype=\"relative-path\">SecurityIdentifier</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventRights</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.accesscontrol.mutexrights\" data-linktype=\"relative-path\">MutexRights</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.security.accesscontrol.mutexrights\" data-linktype=\"relative-path\">MutexRights</a> values specifying the rights allowed or denied.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.accesscontrol.accesscontroltype\" data-linktype=\"relative-path\">AccessControlType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.accesscontrol.accesscontroltype\" data-linktype=\"relative-path\">AccessControlType</a> values specifying whether the rights are allowed or denied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>eventRights</code> specifies an invalid value.  </p>\n<p> -or-  </p>\n<p> <code>type</code> specifies an invalid value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>identity</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>eventRights</code> is zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>identity</code> is neither of type <a class=\"xref\" href=\"system.security.principal.securityidentifier\" data-linktype=\"relative-path\">SecurityIdentifier</a> nor of a type such as <a class=\"xref\" href=\"system.security.principal.ntaccount\" data-linktype=\"relative-path\">NTAccount</a> that can be converted to type <a class=\"xref\" href=\"system.security.principal.securityidentifier\" data-linktype=\"relative-path\">SecurityIdentifier</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To wait on a <a class=\"xref\" href=\"system.threading.mutex\" data-linktype=\"relative-path\">Mutex</a> (by calling the <a class=\"xref\" href=\"system.threading.waithandle#System_Threading_WaitHandle_WaitOne_\" data-linktype=\"relative-path\">WaitOne</a>, <a class=\"xref\" href=\"system.threading.waithandle#System_Threading_WaitHandle_WaitAny_\" data-linktype=\"relative-path\">WaitAny</a> or <a class=\"xref\" href=\"system.threading.waithandle#System_Threading_WaitHandle_WaitAll_\" data-linktype=\"relative-path\">WaitAll</a> method), a user must have <a class=\"xref\" href=\"system.security.accesscontrol.mutexrights\" data-linktype=\"relative-path\">System.Security.AccessControl.MutexRights</a> access. To release the mutex, by calling the <a class=\"xref\" href=\"system.threading.mutex#System_Threading_Mutex_ReleaseMutex_\" data-linktype=\"relative-path\">ReleaseMutex</a> method, the user must have <a class=\"xref\" href=\"system.security.accesscontrol.mutexrights\" data-linktype=\"relative-path\">System.Security.AccessControl.MutexRights</a> access.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_AccessControl_MutexAccessRule__ctor_System_String_System_Security_AccessControl_MutexRights_System_Security_AccessControl_AccessControlType_\">\r\n    \r\n            <a id=\"System_Security_AccessControl_MutexAccessRule__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MutexAccessRule(String,MutexRights,AccessControlType)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.accesscontrol.mutexaccessrule\" data-linktype=\"relative-path\">MutexAccessRule</a> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public MutexAccessRule (string identity, System.Security.AccessControl.MutexRights eventRights, System.Security.AccessControl.AccessControlType type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>identity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the user or group the rule applies to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventRights</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.accesscontrol.mutexrights\" data-linktype=\"relative-path\">MutexRights</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.security.accesscontrol.mutexrights\" data-linktype=\"relative-path\">MutexRights</a> values specifying the rights allowed or denied.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.accesscontrol.accesscontroltype\" data-linktype=\"relative-path\">AccessControlType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.accesscontrol.accesscontroltype\" data-linktype=\"relative-path\">AccessControlType</a> values specifying whether the rights are allowed or denied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>eventRights</code> specifies an invalid value.  </p>\n<p> -or-  </p>\n<p> <code>type</code> specifies an invalid value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>eventRights</code> is zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>identity</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>identity</code> is a zero-length string.  </p>\n<p> -or-  </p>\n<p> <code>identity</code> is longer than 512 characters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To wait on a <a class=\"xref\" href=\"system.threading.mutex\" data-linktype=\"relative-path\">Mutex</a> (by calling the <a class=\"xref\" href=\"system.threading.waithandle#System_Threading_WaitHandle_WaitOne_\" data-linktype=\"relative-path\">WaitOne</a>, <a class=\"xref\" href=\"system.threading.waithandle#System_Threading_WaitHandle_WaitAny_\" data-linktype=\"relative-path\">WaitAny</a> or <a class=\"xref\" href=\"system.threading.waithandle#System_Threading_WaitHandle_WaitAll_\" data-linktype=\"relative-path\">WaitAll</a> method), a user must have <a class=\"xref\" href=\"system.security.accesscontrol.mutexrights\" data-linktype=\"relative-path\">System.Security.AccessControl.MutexRights</a> access. To release the mutex, by calling the <a class=\"xref\" href=\"system.threading.mutex#System_Threading_Mutex_ReleaseMutex_\" data-linktype=\"relative-path\">ReleaseMutex</a> methods, the user must have <a class=\"xref\" href=\"system.security.accesscontrol.mutexrights\" data-linktype=\"relative-path\">System.Security.AccessControl.MutexRights</a> access.  </p>\n<p> This constructor is equivalent to creating an <a class=\"xref\" href=\"system.security.principal.ntaccount\" data-linktype=\"relative-path\">NTAccount</a> object, by passing <code>identity</code> to the <a class=\"xref\" href=\"system.security.principal.ntaccount#System_Security_Principal_NTAccount__ctor_System_String_\" data-linktype=\"relative-path\">System.Security.Principal.NTAccount.NTAccount(String)</a> constructor, and passing the newly created <a class=\"xref\" href=\"system.security.principal.ntaccount\" data-linktype=\"relative-path\">NTAccount</a> object to the <a class=\"xref\" href=\"system.security.accesscontrol.mutexaccessrule#System_Security_AccessControl_MutexAccessRule__ctor_System_Security_Principal_IdentityReference_System_Security_AccessControl_MutexRights_System_Security_AccessControl_AccessControlType_\" data-linktype=\"relative-path\">MutexAccessRule(IdentityReference,MutexRights,AccessControlType)</a> constructor.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this constructor to create <a class=\"xref\" href=\"system.security.accesscontrol.mutexaccessrule\" data-linktype=\"relative-path\">MutexAccessRule</a> objects. The example creates a <a class=\"xref\" href=\"system.security.accesscontrol.mutexsecurity\" data-linktype=\"relative-path\">MutexSecurity</a> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules. The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <a class=\"xref\" href=\"system.security.accesscontrol.accesscontroltype\" data-linktype=\"relative-path\">AccessControlType</a> rule.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This example does not attach the security object to a <a class=\"xref\" href=\"system.threading.mutex\" data-linktype=\"relative-path\">Mutex</a> object. Examples that attach security objects can be found in <a class=\"xref\" href=\"system.threading.mutex#System_Threading_Mutex_GetAccessControl_\" data-linktype=\"relative-path\">GetAccessControl</a> and <a class=\"xref\" href=\"system.threading.mutex#System_Threading_Mutex_SetAccessControl_\" data-linktype=\"relative-path\">SetAccessControl</a>.  </p>\n</div>\n<pre><code class=\"lang-vb\" name=\"System.Security.AccessControl.MutexSecurity.AddAccessRule#1\">Imports System\nImports System.Threading\nImports System.Security.AccessControl\nImports System.Security.Principal\n\nPublic Class Example\n\n    Public Shared Sub Main()\n\n        &#39; Create a string representing the current user.\n        Dim user As String = Environment.UserDomainName _ \n            &amp; &quot;\\&quot; &amp; Environment.UserName\n\n        &#39; Create a security object that grants no access.\n        Dim mSec As New MutexSecurity()\n\n        &#39; Add a rule that grants the current user the \n        &#39; right to enter or release the mutex.\n        Dim rule As New MutexAccessRule(user, _\n            MutexRights.Synchronize _\n            Or MutexRights.Modify, _\n            AccessControlType.Allow)\n        mSec.AddAccessRule(rule)\n\n        &#39; Add a rule that denies the current user the \n        &#39; right to change permissions on the mutex.\n        rule = New MutexAccessRule(user, _\n            MutexRights.ChangePermissions, _\n            AccessControlType.Deny)\n        mSec.AddAccessRule(rule)\n\n        &#39; Display the rules in the security object.\n        ShowSecurity(mSec)\n\n        &#39; Add a rule that allows the current user the \n        &#39; right to read permissions on the mutex. This rule\n        &#39; is merged with the existing Allow rule.\n        rule = New MutexAccessRule(user, _\n            MutexRights.ReadPermissions, _\n            AccessControlType.Allow)\n        mSec.AddAccessRule(rule)\n\n        ShowSecurity(mSec)\n\n    End Sub \n\n    Private Shared Sub ShowSecurity(ByVal security As MutexSecurity)\n        Console.WriteLine(vbCrLf &amp; &quot;Current access rules:&quot; &amp; vbCrLf)\n\n        For Each ar As MutexAccessRule In _\n            security.GetAccessRules(True, True, GetType(NTAccount))\n\n            Console.WriteLine(&quot;        User: {0}&quot;, ar.IdentityReference)\n            Console.WriteLine(&quot;        Type: {0}&quot;, ar.AccessControlType)\n            Console.WriteLine(&quot;      Rights: {0}&quot;, ar.MutexRights)\n            Console.WriteLine()\n        Next\n\n    End Sub\nEnd Class \n\n&#39;This code example produces output similar to following:\n&#39;\n&#39;Current access rules:\n&#39;\n&#39;        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n&#39;        Type: Deny\n&#39;      Rights: ChangePermissions\n&#39;\n&#39;        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n&#39;        Type: Allow\n&#39;      Rights: Modify, Synchronize\n&#39;\n&#39;\n&#39;Current access rules:\n&#39;\n&#39;        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n&#39;        Type: Deny\n&#39;      Rights: ChangePermissions\n&#39;\n&#39;        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n&#39;        Type: Allow\n&#39;      Rights: Modify, ReadPermissions, Synchronize\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.AccessControl.MutexSecurity.AddAccessRule#1\">using System;\nusing System.Threading;\nusing System.Security.AccessControl;\nusing System.Security.Principal;\n\npublic class Example\n{\n    public static void Main()\n    {\n        // Create a string representing the current user.\n        string user = Environment.UserDomainName + &quot;\\\\&quot; + \n            Environment.UserName;\n\n        // Create a security object that grants no access.\n        MutexSecurity mSec = new MutexSecurity();\n\n        // Add a rule that grants the current user the \n        // right to enter or release the mutex.\n        MutexAccessRule rule = new MutexAccessRule(user, \n            MutexRights.Synchronize | MutexRights.Modify, \n            AccessControlType.Allow);\n        mSec.AddAccessRule(rule);\n\n        // Add a rule that denies the current user the \n        // right to change permissions on the mutex.\n        rule = new MutexAccessRule(user, \n            MutexRights.ChangePermissions, \n            AccessControlType.Deny);\n        mSec.AddAccessRule(rule);\n\n        // Display the rules in the security object.\n        ShowSecurity(mSec);\n\n        // Add a rule that allows the current user the \n        // right to read permissions on the mutex. This rule\n        // is merged with the existing Allow rule.\n        rule = new MutexAccessRule(user, \n            MutexRights.ReadPermissions, \n            AccessControlType.Allow);\n        mSec.AddAccessRule(rule);\n\n        ShowSecurity(mSec);\n    }\n\n    private static void ShowSecurity(MutexSecurity security)\n    {\n        Console.WriteLine(&quot;\\r<br>Current access rules:\\r<br>&quot;);\n\n        foreach(MutexAccessRule ar in \n            security.GetAccessRules(true, true, typeof(NTAccount)))\n        {\n            Console.WriteLine(&quot;        User: {0}&quot;, ar.IdentityReference);\n            Console.WriteLine(&quot;        Type: {0}&quot;, ar.AccessControlType);\n            Console.WriteLine(&quot;      Rights: {0}&quot;, ar.MutexRights);\n            Console.WriteLine();\n        }\n    }\n}\n\n/*This code example produces output similar to following:\n\nCurrent access rules:\n\n        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n        Type: Deny\n      Rights: ChangePermissions\n\n        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n        Type: Allow\n      Rights: Modify, Synchronize\n\n\nCurrent access rules:\n\n        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n        Type: Deny\n      Rights: ChangePermissions\n\n        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n        Type: Allow\n      Rights: Modify, ReadPermissions, Synchronize\n */\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_AccessControl_MutexAccessRule_MutexRights\">\r\n    \r\n            <a id=\"System_Security_AccessControl_MutexAccessRule_MutexRights_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MutexRights</div>        \r\n          </div>\r\n    \r\n            <p>Gets the rights allowed or denied by the access rule.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.AccessControl.MutexRights MutexRights { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.accesscontrol.mutexrights\" data-linktype=\"relative-path\">MutexRights</a></div>\r\n                  </div>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.security.accesscontrol.mutexrights\" data-linktype=\"relative-path\">MutexRights</a> values indicating the rights allowed or denied by the access rule.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.security.accesscontrol.mutexaccessrule\" data-linktype=\"relative-path\">MutexAccessRule</a> objects are immutable. You can create a new access rule representing a different user, different rights, or a different <a class=\"xref\" href=\"system.security.accesscontrol.accesscontroltype\" data-linktype=\"relative-path\">AccessControlType</a>, but you cannot modify an existing access rule.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the MutexRights property to display the rights in the set of rules contained in a <a class=\"xref\" href=\"system.security.accesscontrol.mutexsecurity\" data-linktype=\"relative-path\">MutexSecurity</a> object. The example creates a <a class=\"xref\" href=\"system.security.accesscontrol.mutexsecurity\" data-linktype=\"relative-path\">MutexSecurity</a> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules. The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <a class=\"xref\" href=\"system.security.accesscontrol.accesscontroltype\" data-linktype=\"relative-path\">AccessControlType</a> rule.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This example does not attach the security object to a <a class=\"xref\" href=\"system.threading.mutex\" data-linktype=\"relative-path\">Mutex</a> object. Examples that attach security objects can be found in <a class=\"xref\" href=\"system.threading.mutex#System_Threading_Mutex_GetAccessControl_\" data-linktype=\"relative-path\">GetAccessControl</a> and <a class=\"xref\" href=\"system.threading.mutex#System_Threading_Mutex_SetAccessControl_\" data-linktype=\"relative-path\">SetAccessControl</a>.  </p>\n</div>\n<pre><code class=\"lang-vb\" name=\"System.Security.AccessControl.MutexSecurity.AddAccessRule#1\">Imports System\nImports System.Threading\nImports System.Security.AccessControl\nImports System.Security.Principal\n\nPublic Class Example\n\n    Public Shared Sub Main()\n\n        &#39; Create a string representing the current user.\n        Dim user As String = Environment.UserDomainName _ \n            &amp; &quot;\\&quot; &amp; Environment.UserName\n\n        &#39; Create a security object that grants no access.\n        Dim mSec As New MutexSecurity()\n\n        &#39; Add a rule that grants the current user the \n        &#39; right to enter or release the mutex.\n        Dim rule As New MutexAccessRule(user, _\n            MutexRights.Synchronize _\n            Or MutexRights.Modify, _\n            AccessControlType.Allow)\n        mSec.AddAccessRule(rule)\n\n        &#39; Add a rule that denies the current user the \n        &#39; right to change permissions on the mutex.\n        rule = New MutexAccessRule(user, _\n            MutexRights.ChangePermissions, _\n            AccessControlType.Deny)\n        mSec.AddAccessRule(rule)\n\n        &#39; Display the rules in the security object.\n        ShowSecurity(mSec)\n\n        &#39; Add a rule that allows the current user the \n        &#39; right to read permissions on the mutex. This rule\n        &#39; is merged with the existing Allow rule.\n        rule = New MutexAccessRule(user, _\n            MutexRights.ReadPermissions, _\n            AccessControlType.Allow)\n        mSec.AddAccessRule(rule)\n\n        ShowSecurity(mSec)\n\n    End Sub \n\n    Private Shared Sub ShowSecurity(ByVal security As MutexSecurity)\n        Console.WriteLine(vbCrLf &amp; &quot;Current access rules:&quot; &amp; vbCrLf)\n\n        For Each ar As MutexAccessRule In _\n            security.GetAccessRules(True, True, GetType(NTAccount))\n\n            Console.WriteLine(&quot;        User: {0}&quot;, ar.IdentityReference)\n            Console.WriteLine(&quot;        Type: {0}&quot;, ar.AccessControlType)\n            Console.WriteLine(&quot;      Rights: {0}&quot;, ar.MutexRights)\n            Console.WriteLine()\n        Next\n\n    End Sub\nEnd Class \n\n&#39;This code example produces output similar to following:\n&#39;\n&#39;Current access rules:\n&#39;\n&#39;        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n&#39;        Type: Deny\n&#39;      Rights: ChangePermissions\n&#39;\n&#39;        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n&#39;        Type: Allow\n&#39;      Rights: Modify, Synchronize\n&#39;\n&#39;\n&#39;Current access rules:\n&#39;\n&#39;        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n&#39;        Type: Deny\n&#39;      Rights: ChangePermissions\n&#39;\n&#39;        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n&#39;        Type: Allow\n&#39;      Rights: Modify, ReadPermissions, Synchronize\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.AccessControl.MutexSecurity.AddAccessRule#1\">using System;\nusing System.Threading;\nusing System.Security.AccessControl;\nusing System.Security.Principal;\n\npublic class Example\n{\n    public static void Main()\n    {\n        // Create a string representing the current user.\n        string user = Environment.UserDomainName + &quot;\\\\&quot; + \n            Environment.UserName;\n\n        // Create a security object that grants no access.\n        MutexSecurity mSec = new MutexSecurity();\n\n        // Add a rule that grants the current user the \n        // right to enter or release the mutex.\n        MutexAccessRule rule = new MutexAccessRule(user, \n            MutexRights.Synchronize | MutexRights.Modify, \n            AccessControlType.Allow);\n        mSec.AddAccessRule(rule);\n\n        // Add a rule that denies the current user the \n        // right to change permissions on the mutex.\n        rule = new MutexAccessRule(user, \n            MutexRights.ChangePermissions, \n            AccessControlType.Deny);\n        mSec.AddAccessRule(rule);\n\n        // Display the rules in the security object.\n        ShowSecurity(mSec);\n\n        // Add a rule that allows the current user the \n        // right to read permissions on the mutex. This rule\n        // is merged with the existing Allow rule.\n        rule = new MutexAccessRule(user, \n            MutexRights.ReadPermissions, \n            AccessControlType.Allow);\n        mSec.AddAccessRule(rule);\n\n        ShowSecurity(mSec);\n    }\n\n    private static void ShowSecurity(MutexSecurity security)\n    {\n        Console.WriteLine(&quot;\\r<br>Current access rules:\\r<br>&quot;);\n\n        foreach(MutexAccessRule ar in \n            security.GetAccessRules(true, true, typeof(NTAccount)))\n        {\n            Console.WriteLine(&quot;        User: {0}&quot;, ar.IdentityReference);\n            Console.WriteLine(&quot;        Type: {0}&quot;, ar.AccessControlType);\n            Console.WriteLine(&quot;      Rights: {0}&quot;, ar.MutexRights);\n            Console.WriteLine();\n        }\n    }\n}\n\n/*This code example produces output similar to following:\n\nCurrent access rules:\n\n        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n        Type: Deny\n      Rights: ChangePermissions\n\n        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n        Type: Allow\n      Rights: Modify, Synchronize\n\n\nCurrent access rules:\n\n        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n        Type: Deny\n      Rights: ChangePermissions\n\n        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n        Type: Allow\n      Rights: Modify, ReadPermissions, Synchronize\n */\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.AccessControl.MutexAccessRule.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.AccessControl.MutexAccessRule.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.AccessControl.MutexAccessRule\">\r\n<meta name=\"APIName\" content=\"System.Security.AccessControl.MutexAccessRule..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.AccessControl.MutexAccessRule.MutexRights\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"348a84ea-4f30-3b68-4085-5155e020a63c\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a set of access rights allowed or denied for a user or group. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.AccessControl/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.AccessControl.MutexAccessRule\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.AccessControl.MutexAccessRule.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.AccessControl.MutexAccessRule.yml","open_to_public_contributors":true,"api_name":["System.Security.AccessControl.MutexAccessRule","System.Security.AccessControl.MutexAccessRule..ctor","System.Security.AccessControl.MutexAccessRule.MutexRights"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.AccessControl.MutexAccessRule","System::Security::AccessControl::MutexAccessRule","System.Security.AccessControl.MutexAccessRule.#ctor","System::Security::AccessControl::MutexAccessRule::#ctor","System.Security.AccessControl.MutexAccessRule.MutexRights","System::Security::AccessControl::MutexAccessRule::MutexRights"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"348a84ea-4f30-3b68-4085-5155e020a63c","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.AccessControl/MutexAccessRule.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"MutexAccessRule class | Microsoft Docs","_op_ogTitle":"MutexAccessRule class","description":"Represents a set of access rights allowed or denied for a user or group. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Security.AccessControl/toc.json","toc_rel":"_splitted/System.Security.AccessControl/toc.json","source_url":"","ms.assetid":"System.Security.AccessControl.MutexAccessRule","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.accesscontrol.mutexaccessrule","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.accesscontrol.mutexaccessrule","fileRelativePath":"System.Security.AccessControl.MutexAccessRule.html"},"themesRelativePathToOutputRoot":"_themes/"}