{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">BackgroundWorker</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Executes an operation on a separate thread.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.ComponentModel.DefaultEvent(&quot;DoWork&quot;)]\npublic class BackgroundWorker : System.ComponentModel.Component</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">System.ComponentModel.Component</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">BackgroundWorker</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site\" data-linktype=\"relative-path\">Site</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The BackgroundWorker class allows you to run an operation on a separate, dedicated thread. Time-consuming operations like downloads and database transactions can cause your user interface (UI) to seem as though it has stopped responding while they are running. When you want a responsive UI and you are faced with long delays associated with such operations, the BackgroundWorker class provides a convenient solution.  </p>\n<p> To execute a time-consuming operation in the background, create a BackgroundWorker and listen for events that report the progress of your operation and signal when your operation is finished. You can create the BackgroundWorker programmatically or you can drag it onto your form from the <strong>Components</strong> tab of the <strong>Toolbox</strong>. If you create the BackgroundWorker in the Windows Forms Designer, it will appear in the Component Tray, and its properties will be displayed in the Properties window.  </p>\n<p> To set up for a background operation, add an event handler for the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_DoWork\" data-linktype=\"relative-path\">DoWork</a> event. Call your time-consuming operation in this event handler. To start the operation, call <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_RunWorkerAsync_\" data-linktype=\"relative-path\">RunWorkerAsync</a>. To receive notifications of progress updates, handle the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_ProgressChanged\" data-linktype=\"relative-path\">ProgressChanged</a> event. To receive a notification when the operation is completed, handle the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_RunWorkerCompleted\" data-linktype=\"relative-path\">RunWorkerCompleted</a> event.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must be careful not to manipulate any user-interface objects in your <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_DoWork\" data-linktype=\"relative-path\">DoWork</a> event handler. Instead, communicate to the user interface through the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_ProgressChanged\" data-linktype=\"relative-path\">ProgressChanged</a> and <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_RunWorkerCompleted\" data-linktype=\"relative-path\">RunWorkerCompleted</a> events.  </p>\n<p> BackgroundWorker events are not marshaled across <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a> boundaries. Do not use a BackgroundWorker component to perform multithreaded operations in more than one <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a>.  </p>\n</div>\n<p> If your background operation requires a parameter, call <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_RunWorkerAsync_\" data-linktype=\"relative-path\">RunWorkerAsync</a> with your parameter. Inside the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_DoWork\" data-linktype=\"relative-path\">DoWork</a> event handler, you can extract the parameter from the <a class=\"xref\" href=\"system.componentmodel.doworkeventargs#System_ComponentModel_DoWorkEventArgs_Argument_\" data-linktype=\"relative-path\">Argument</a> property.  </p>\n<p> For more information about BackgroundWorker, see <a href=\"../Topic/How%20to:%20Run%20an%20Operation%20in%20the%20Background.md\" data-linktype=\"relative-path\">How to: Run an Operation in the Background</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_BackgroundWorker__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BackgroundWorker()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.componentmodel.backgroundworker\" data-linktype=\"relative-path\">BackgroundWorker</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public BackgroundWorker ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor initializes a <a class=\"xref\" href=\"system.componentmodel.backgroundworker\" data-linktype=\"relative-path\">BackgroundWorker</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_BackgroundWorker_CancellationPending\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CancellationPending</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the application has requested cancellation of a background operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool CancellationPending { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the application has requested cancellation of a background operation; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If CancellationPending is <code>true</code>, then the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method has been called on the <a class=\"xref\" href=\"system.componentmodel.backgroundworker\" data-linktype=\"relative-path\">BackgroundWorker</a>.  </p>\n<p> This property is meant for use by the worker thread, which should periodically check CancellationPending and abort the background operation when it is set to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_BackgroundWorker_IsBusy\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsBusy</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the <a class=\"xref\" href=\"system.componentmodel.backgroundworker\" data-linktype=\"relative-path\">BackgroundWorker</a> is running an asynchronous operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsBusy { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code>, if the <a class=\"xref\" href=\"system.componentmodel.backgroundworker\" data-linktype=\"relative-path\">BackgroundWorker</a> is running an asynchronous operation; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.componentmodel.backgroundworker\" data-linktype=\"relative-path\">BackgroundWorker</a> starts an asynchronous operation when you call <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_RunWorkerAsync_\" data-linktype=\"relative-path\">RunWorkerAsync</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_BackgroundWorker_WorkerReportsProgress\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WorkerReportsProgress</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the <a class=\"xref\" href=\"system.componentmodel.backgroundworker\" data-linktype=\"relative-path\">BackgroundWorker</a> can report progress updates.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool WorkerReportsProgress { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <a class=\"xref\" href=\"system.componentmodel.backgroundworker\" data-linktype=\"relative-path\">BackgroundWorker</a> supports progress updates; otherwise <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Set the WorkerReportsProgress property to <code>true</code> if you want the <a class=\"xref\" href=\"system.componentmodel.backgroundworker\" data-linktype=\"relative-path\">BackgroundWorker</a> to support progress updates. When this property is <code>true</code>, user code can call the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_ReportProgress_\" data-linktype=\"relative-path\">ReportProgress</a> method to raise the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_ProgressChanged\" data-linktype=\"relative-path\">ProgressChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_BackgroundWorker_WorkerSupportsCancellation\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WorkerSupportsCancellation</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the <a class=\"xref\" href=\"system.componentmodel.backgroundworker\" data-linktype=\"relative-path\">BackgroundWorker</a> supports asynchronous cancellation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool WorkerSupportsCancellation { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <a class=\"xref\" href=\"system.componentmodel.backgroundworker\" data-linktype=\"relative-path\">BackgroundWorker</a> supports cancellation; otherwise <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Set the WorkerSupportsCancellation property to <code>true</code> if you want the <a class=\"xref\" href=\"system.componentmodel.backgroundworker\" data-linktype=\"relative-path\">BackgroundWorker</a> to support cancellation. When this property is <code>true</code>, you can call the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method to interrupt a background operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_BackgroundWorker_CancelAsync\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CancelAsync()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Requests cancellation of a pending background operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void CancelAsync ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><span class=\"xref\">stem.ComponentModel.BackgroundWorker.WorkerSupportsCancellation*</span> is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>CancelAsync submits a request to terminate the pending background operation and sets the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_CancellationPending_\" data-linktype=\"relative-path\">CancellationPending</a> property to <code>true</code>.  </p>\n<p> When you call CancelAsync, your worker method has an opportunity to stop its execution and exit. The worker code should periodically check the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_CancellationPending_\" data-linktype=\"relative-path\">CancellationPending</a> property to see if it has been set to <code>true</code>.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Be aware that your code in the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_DoWork\" data-linktype=\"relative-path\">DoWork</a> event handler may finish its work as a cancellation request is being made, and your polling loop may miss <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_CancellationPending_\" data-linktype=\"relative-path\">CancellationPending</a> being set to <code>true</code>. In this case, the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_Cancelled_\" data-linktype=\"relative-path\">Cancelled</a> flag of <a class=\"xref\" href=\"system.componentmodel.runworkercompletedeventargs\" data-linktype=\"relative-path\">System.ComponentModel.RunWorkerCompletedEventArgs</a> in your <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_RunWorkerCompleted\" data-linktype=\"relative-path\">RunWorkerCompleted</a> event handler will not be set to <code>true</code>, even though a cancellation request was made. This situation is called a <em>race condition</em> and is a common concern in multithreaded programming. For more information about multithreading design issues, see <a href=\"../Topic/Managed%20Threading%20Best%20Practices.md\" data-linktype=\"relative-path\">Managed Threading Best Practices</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_BackgroundWorker_OnDoWork_System_ComponentModel_DoWorkEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnDoWork(DoWorkEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_DoWork\" data-linktype=\"relative-path\">DoWork</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnDoWork (System.ComponentModel.DoWorkEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.doworkeventargs\" data-linktype=\"relative-path\">DoWorkEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_BackgroundWorker_OnProgressChanged_System_ComponentModel_ProgressChangedEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnProgressChanged(ProgressChangedEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_ProgressChanged\" data-linktype=\"relative-path\">ProgressChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnProgressChanged (System.ComponentModel.ProgressChangedEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.progresschangedeventargs\" data-linktype=\"relative-path\">ProgressChangedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnProgressChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_BackgroundWorker_OnRunWorkerCompleted_System_ComponentModel_RunWorkerCompletedEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnRunWorkerCompleted(RunWorkerCompletedEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_RunWorkerCompleted\" data-linktype=\"relative-path\">RunWorkerCompleted</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnRunWorkerCompleted (System.ComponentModel.RunWorkerCompletedEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.runworkercompletedeventargs\" data-linktype=\"relative-path\">RunWorkerCompletedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRunWorkerCompleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_BackgroundWorker_ReportProgress_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReportProgress(Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_ProgressChanged\" data-linktype=\"relative-path\">ProgressChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void ReportProgress (int percentProgress);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>percentProgress</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The percentage, from 0 to 100, of the background operation that is complete.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.ComponentModel.BackgroundWorker.WorkerReportsProgress*</span> property is set to <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If you need the background operation to report on its progress, you can call the ReportProgress method to raise the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_ProgressChanged\" data-linktype=\"relative-path\">ProgressChanged</a> event. The <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_WorkerReportsProgress_\" data-linktype=\"relative-path\">WorkerReportsProgress</a> property value must be <code>true</code>, or ReportProgress will throw an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a>.  </p>\n<p> It is up to you to implement a meaningful way of measuring your background operation&#39;s progress as a percentage of the total task completed.  </p>\n<p> The call to the ReportProgress method is asynchronous and returns immediately. The <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_ProgressChanged\" data-linktype=\"relative-path\">ProgressChanged</a> event handler executes on the thread that created the <a class=\"xref\" href=\"system.componentmodel.backgroundworker\" data-linktype=\"relative-path\">BackgroundWorker</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_BackgroundWorker_ReportProgress_System_Int32_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReportProgress(Int32,Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_ProgressChanged\" data-linktype=\"relative-path\">ProgressChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void ReportProgress (int percentProgress, object userState);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>percentProgress</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The percentage, from 0 to 100, of the background operation that is complete.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>userState</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The state object passed to <span class=\"xref\">stem.ComponentModel.BackgroundWorker.RunWorkerAsync*</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.ComponentModel.BackgroundWorker.WorkerReportsProgress*</span> property is set to <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If you need the background operation to report on its progress, you can call the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_ReportProgress_\" data-linktype=\"relative-path\">ReportProgress</a> method to raise the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_ProgressChanged\" data-linktype=\"relative-path\">ProgressChanged</a> event. The <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_WorkerReportsProgress_\" data-linktype=\"relative-path\">WorkerReportsProgress</a> property value must <code>true</code>, or <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_ReportProgress_\" data-linktype=\"relative-path\">ReportProgress</a> will throw an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a>.  </p>\n<p> It is up to you to implement a meaningful way of measuring your background operation&#39;s progress as a percentage of the total task completed.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_BackgroundWorker_RunWorkerAsync\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RunWorkerAsync()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Starts execution of a background operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void RunWorkerAsync ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><span class=\"xref\">stem.ComponentModel.BackgroundWorker.IsBusy*</span> is <code>true</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The RunWorkerAsync method submits a request to start the operation running asynchronously. When the request is serviced, the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_DoWork\" data-linktype=\"relative-path\">DoWork</a> event is raised, which in turn starts execution of your background operation.  </p>\n<p> If the background operation is already running, calling RunWorkerAsync again will raise an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_BackgroundWorker_RunWorkerAsync_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RunWorkerAsync(Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Starts execution of a background operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void RunWorkerAsync (object argument);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>argument</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A parameter for use by the background operation to be executed in the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_DoWork\" data-linktype=\"relative-path\">DoWork</a> event handler.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><span class=\"xref\">stem.ComponentModel.BackgroundWorker.IsBusy*</span> is <code>true</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_RunWorkerAsync_\" data-linktype=\"relative-path\">RunWorkerAsync</a> method submits a request to start the operation running asynchronously. When the request is serviced, the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_DoWork\" data-linktype=\"relative-path\">DoWork</a> event is raised, which in turn starts execution of your background operation.  </p>\n<p> If your operation requires a parameter, you can provide it as the <code>argument</code> parameter to <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_RunWorkerAsync_\" data-linktype=\"relative-path\">RunWorkerAsync</a>.  </p>\n<p> If the background operation is already running, calling <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_RunWorkerAsync_\" data-linktype=\"relative-path\">RunWorkerAsync</a> again will raise an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Events\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_BackgroundWorker_DoWork\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DoWork</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when <span class=\"xref\">stem.ComponentModel.BackgroundWorker.RunWorkerAsync*</span> is called.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.ComponentModel.DoWorkEventHandler DoWork;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised when you call the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_RunWorkerAsync_\" data-linktype=\"relative-path\">RunWorkerAsync</a> method. This is where you start the operation that performs the potentially time-consuming work.  </p>\n<p> Your code in the DoWork event handler should periodically check the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_CancellationPending_\" data-linktype=\"relative-path\">CancellationPending</a> property value and abort the operation if it is <code>true</code>. When this occurs, you can set the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> flag of <a class=\"xref\" href=\"system.componentmodel.doworkeventargs\" data-linktype=\"relative-path\">System.ComponentModel.DoWorkEventArgs</a> to <code>true</code>, and the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_Cancelled_\" data-linktype=\"relative-path\">Cancelled</a> flag of <a class=\"xref\" href=\"system.componentmodel.runworkercompletedeventargs\" data-linktype=\"relative-path\">System.ComponentModel.RunWorkerCompletedEventArgs</a> in your <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_RunWorkerCompleted\" data-linktype=\"relative-path\">RunWorkerCompleted</a> event handler will be set to <code>true</code>.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Be aware that your code in the DoWork event handler may finish its work as a cancellation request is being made, and your polling loop may miss <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_CancellationPending_\" data-linktype=\"relative-path\">CancellationPending</a> being set to <code>true</code>. In this case, the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_Cancelled_\" data-linktype=\"relative-path\">Cancelled</a> flag of <a class=\"xref\" href=\"system.componentmodel.runworkercompletedeventargs\" data-linktype=\"relative-path\">System.ComponentModel.RunWorkerCompletedEventArgs</a> in your <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_RunWorkerCompleted\" data-linktype=\"relative-path\">RunWorkerCompleted</a> event handler will not be set to <code>true</code>, even though a cancellation request was made. This situation is called a <em>race condition</em> and is a common concern in multithreaded programming. For more information about multithreading design issues, see <a href=\"../Topic/Managed%20Threading%20Best%20Practices.md\" data-linktype=\"relative-path\">Managed Threading Best Practices</a>.  </p>\n</div>\n<p> If your operation produces a result, you can assign the result to the <a class=\"xref\" href=\"system.componentmodel.doworkeventargs#System_ComponentModel_DoWorkEventArgs_Result_\" data-linktype=\"relative-path\">Result</a> property. This will be available to the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_RunWorkerCompleted\" data-linktype=\"relative-path\">RunWorkerCompleted</a> event handler in the <a class=\"xref\" href=\"system.componentmodel.runworkercompletedeventargs#System_ComponentModel_RunWorkerCompletedEventArgs_Result_\" data-linktype=\"relative-path\">Result</a> property.  </p>\n<p> If the operation raises an exception that your code does not handle, the <a class=\"xref\" href=\"system.componentmodel.backgroundworker\" data-linktype=\"relative-path\">BackgroundWorker</a> catches the exception and passes it into the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_RunWorkerCompleted\" data-linktype=\"relative-path\">RunWorkerCompleted</a> event handler, where it is exposed as the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_Error_\" data-linktype=\"relative-path\">Error</a> property of <a class=\"xref\" href=\"system.componentmodel.runworkercompletedeventargs\" data-linktype=\"relative-path\">System.ComponentModel.RunWorkerCompletedEventArgs</a>. If you are running under the Visual Studio debugger, the debugger will break at the point in the DoWork event handler where the unhandled exception was raised. If you have more than one <a class=\"xref\" href=\"system.componentmodel.backgroundworker\" data-linktype=\"relative-path\">BackgroundWorker</a>, you should not reference any of them directly, as this would couple your DoWork event handler to a specific instance of <a class=\"xref\" href=\"system.componentmodel.backgroundworker\" data-linktype=\"relative-path\">BackgroundWorker</a>. Instead, you should access your <a class=\"xref\" href=\"system.componentmodel.backgroundworker\" data-linktype=\"relative-path\">BackgroundWorker</a> by casting the <code>sender</code> parameter in your DoWork event handler.  </p>\n<p> You must be careful not to manipulate any user-interface objects in your DoWork event handler. Instead, communicate to the user interface through the <a class=\"xref\" href=\"system.componentmodel.backgroundworker\" data-linktype=\"relative-path\">BackgroundWorker</a> events.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_BackgroundWorker_ProgressChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ProgressChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when <span class=\"xref\">stem.ComponentModel.BackgroundWorker.ReportProgress*</span> is called.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.ComponentModel.ProgressChangedEventHandler ProgressChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised when you call the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_ReportProgress_\" data-linktype=\"relative-path\">ReportProgress</a> method.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_BackgroundWorker_RunWorkerCompleted\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RunWorkerCompleted</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the background operation has completed, has been canceled, or has raised an exception.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.ComponentModel.RunWorkerCompletedEventHandler RunWorkerCompleted;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised when the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_DoWork\" data-linktype=\"relative-path\">DoWork</a> event handler returns.  </p>\n<p> If the operation completes successfully and its result is assigned in the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_DoWork\" data-linktype=\"relative-path\">DoWork</a> event handler, you can access the result through the <a class=\"xref\" href=\"system.componentmodel.runworkercompletedeventargs#System_ComponentModel_RunWorkerCompletedEventArgs_Result_\" data-linktype=\"relative-path\">Result</a> property.  </p>\n<p> The <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_Error_\" data-linktype=\"relative-path\">Error</a> property of <a class=\"xref\" href=\"system.componentmodel.runworkercompletedeventargs\" data-linktype=\"relative-path\">System.ComponentModel.RunWorkerCompletedEventArgs</a> indicates that an exception was thrown by the operation.  </p>\n<p> The <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_Cancelled_\" data-linktype=\"relative-path\">Cancelled</a> property of <a class=\"xref\" href=\"system.componentmodel.runworkercompletedeventargs\" data-linktype=\"relative-path\">System.ComponentModel.RunWorkerCompletedEventArgs</a> indicates whether a cancellation request was processed by the background operation. If your code in the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_DoWork\" data-linktype=\"relative-path\">DoWork</a> event handler detects a cancellation request by checking the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_CancellationPending_\" data-linktype=\"relative-path\">CancellationPending</a> flag and setting the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> flag of <a class=\"xref\" href=\"system.componentmodel.doworkeventargs\" data-linktype=\"relative-path\">System.ComponentModel.DoWorkEventArgs</a> to <code>true</code>, the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_Cancelled_\" data-linktype=\"relative-path\">Cancelled</a> flag of <a class=\"xref\" href=\"system.componentmodel.runworkercompletedeventargs\" data-linktype=\"relative-path\">System.ComponentModel.RunWorkerCompletedEventArgs</a> also will be set to <code>true</code>.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Be aware that your code in the <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_DoWork\" data-linktype=\"relative-path\">DoWork</a> event handler may finish its work as a cancellation request is being made, and your polling loop may miss <a class=\"xref\" href=\"system.componentmodel.backgroundworker#System_ComponentModel_BackgroundWorker_CancellationPending_\" data-linktype=\"relative-path\">CancellationPending</a> being set to <code>true</code>. In this case, the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_Cancelled_\" data-linktype=\"relative-path\">Cancelled</a> flag of <a class=\"xref\" href=\"system.componentmodel.runworkercompletedeventargs\" data-linktype=\"relative-path\">System.ComponentModel.RunWorkerCompletedEventArgs</a> in your RunWorkerCompleted event handler will not be set to <code>true</code>, even though a cancellation request was made. This situation is called a <em>race condition</em> and is a common concern in multithreaded programming. For more information about multithreading design issues, see <a href=\"../Topic/Managed%20Threading%20Best%20Practices.md\" data-linktype=\"relative-path\">Managed Threading Best Practices</a>.  </p>\n</div>\n<p> Your RunWorkerCompleted event handler should always check the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_Error_\" data-linktype=\"relative-path\">Error</a> and <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_Cancelled_\" data-linktype=\"relative-path\">Cancelled</a> properties before accessing the <a class=\"xref\" href=\"system.componentmodel.runworkercompletedeventargs#System_ComponentModel_RunWorkerCompletedEventArgs_Result_\" data-linktype=\"relative-path\">Result</a> property. If an exception was raised or if the operation was canceled, accessing the <a class=\"xref\" href=\"system.componentmodel.runworkercompletedeventargs#System_ComponentModel_RunWorkerCompletedEventArgs_Result_\" data-linktype=\"relative-path\">Result</a> property raises an exception.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ComponentModel.BackgroundWorker.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ComponentModel.BackgroundWorker.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.BackgroundWorker\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.BackgroundWorker..ctor\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.BackgroundWorker.CancelAsync\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.BackgroundWorker.CancellationPending\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.BackgroundWorker.DoWork\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.BackgroundWorker.add_DoWork\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.BackgroundWorker.remove_DoWork\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.BackgroundWorker.IsBusy\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.BackgroundWorker.OnDoWork\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.BackgroundWorker.OnProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.BackgroundWorker.ProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.BackgroundWorker.add_ProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.BackgroundWorker.remove_ProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.BackgroundWorker.ReportProgress\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.BackgroundWorker.RunWorkerAsync\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.BackgroundWorker.RunWorkerCompleted\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.BackgroundWorker.add_RunWorkerCompleted\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.BackgroundWorker.remove_RunWorkerCompleted\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.BackgroundWorker.WorkerReportsProgress\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"a35ae592-803d-109b-4a4b-3c68907bcd6c\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Executes an operation on a separate thread.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.ComponentModel/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.BackgroundWorker\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ComponentModel.BackgroundWorker.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ComponentModel.BackgroundWorker.yml","open_to_public_contributors":true,"api_name":["System.ComponentModel.BackgroundWorker","System.ComponentModel.BackgroundWorker..ctor","System.ComponentModel.BackgroundWorker.CancelAsync","System.ComponentModel.BackgroundWorker.CancellationPending","System.ComponentModel.BackgroundWorker.DoWork","System.ComponentModel.BackgroundWorker.add_DoWork","System.ComponentModel.BackgroundWorker.remove_DoWork","System.ComponentModel.BackgroundWorker.IsBusy","System.ComponentModel.BackgroundWorker.OnDoWork","System.ComponentModel.BackgroundWorker.OnProgressChanged","System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted","System.ComponentModel.BackgroundWorker.ProgressChanged","System.ComponentModel.BackgroundWorker.add_ProgressChanged","System.ComponentModel.BackgroundWorker.remove_ProgressChanged","System.ComponentModel.BackgroundWorker.ReportProgress","System.ComponentModel.BackgroundWorker.RunWorkerAsync","System.ComponentModel.BackgroundWorker.RunWorkerCompleted","System.ComponentModel.BackgroundWorker.add_RunWorkerCompleted","System.ComponentModel.BackgroundWorker.remove_RunWorkerCompleted","System.ComponentModel.BackgroundWorker.WorkerReportsProgress","System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.BackgroundWorker","System::ComponentModel::BackgroundWorker","System.ComponentModel.BackgroundWorker.#ctor","System::ComponentModel::BackgroundWorker::#ctor","System.ComponentModel.BackgroundWorker.CancelAsync","System::ComponentModel::BackgroundWorker::CancelAsync","System.ComponentModel.BackgroundWorker.CancellationPending","System::ComponentModel::BackgroundWorker::CancellationPending","System.ComponentModel.BackgroundWorker.DoWork","System::ComponentModel::BackgroundWorker::DoWork","System.ComponentModel.BackgroundWorker.IsBusy","System::ComponentModel::BackgroundWorker::IsBusy","System.ComponentModel.BackgroundWorker.OnDoWork","System::ComponentModel::BackgroundWorker::OnDoWork","System.ComponentModel.BackgroundWorker.OnProgressChanged","System::ComponentModel::BackgroundWorker::OnProgressChanged","System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted","System::ComponentModel::BackgroundWorker::OnRunWorkerCompleted","System.ComponentModel.BackgroundWorker.ProgressChanged","System::ComponentModel::BackgroundWorker::ProgressChanged","System.ComponentModel.BackgroundWorker.ReportProgress","System::ComponentModel::BackgroundWorker::ReportProgress","System.ComponentModel.BackgroundWorker.RunWorkerAsync","System::ComponentModel::BackgroundWorker::RunWorkerAsync","System.ComponentModel.BackgroundWorker.RunWorkerCompleted","System::ComponentModel::BackgroundWorker::RunWorkerCompleted","System.ComponentModel.BackgroundWorker.WorkerReportsProgress","System::ComponentModel::BackgroundWorker::WorkerReportsProgress","System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation","System::ComponentModel::BackgroundWorker::WorkerSupportsCancellation"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"a35ae592-803d-109b-4a4b-3c68907bcd6c","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.ComponentModel/BackgroundWorker.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"BackgroundWorker class | Microsoft Docs","_op_ogTitle":"BackgroundWorker class","description":"Executes an operation on a separate thread.\n","toc_asset_id":"_splitted/System.ComponentModel/toc.json","toc_rel":"_splitted/System.ComponentModel/toc.json","source_url":"","ms.assetid":"System.ComponentModel.BackgroundWorker","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.componentmodel.backgroundworker","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.componentmodel.backgroundworker","fileRelativePath":"System.ComponentModel.BackgroundWorker.html"},"themesRelativePathToOutputRoot":"_themes/"}