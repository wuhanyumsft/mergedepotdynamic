{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">Storyboard</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>A container timeline that provides object and property targeting information for its child animations.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class Storyboard : System.Windows.Media.Animation.ParallelTimeline</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.animatable\" data-linktype=\"relative-path\">Animatable</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timelinegroup\" data-linktype=\"relative-path\">TimelineGroup</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline\" data-linktype=\"relative-path\">System.Windows.Media.Animation.ParallelTimeline</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">Storyboard</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_ClearValue_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">ClearValue(DependencyProperty)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_ClearValue_System_Windows_DependencyPropertyKey_\" data-linktype=\"relative-path\">ClearValue(DependencyPropertyKey)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_CoerceValue_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">CoerceValue(DependencyProperty)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_DependencyObjectType\" data-linktype=\"relative-path\">DependencyObjectType</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_GetLocalValueEnumerator\" data-linktype=\"relative-path\">GetLocalValueEnumerator()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_GetValue_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">GetValue(DependencyProperty)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_InvalidateProperty_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">InvalidateProperty(DependencyProperty)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_IsSealed\" data-linktype=\"relative-path\">IsSealed</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_ReadLocalValue_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">ReadLocalValue(DependencyProperty)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_SetCurrentValue_System_Windows_DependencyProperty_System_Object_\" data-linktype=\"relative-path\">SetCurrentValue(DependencyProperty,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_SetValue_System_Windows_DependencyProperty_System_Object_\" data-linktype=\"relative-path\">SetValue(DependencyProperty,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_SetValue_System_Windows_DependencyPropertyKey_System_Object_\" data-linktype=\"relative-path\">SetValue(DependencyPropertyKey,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_ShouldSerializeProperty_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">ShouldSerializeProperty(DependencyProperty)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_CanFreeze\" data-linktype=\"relative-path\">CanFreeze</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_Changed\" data-linktype=\"relative-path\">Changed</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_CloneCore_System_Windows_Freezable_\" data-linktype=\"relative-path\">CloneCore(Freezable)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_CloneCurrentValueCore_System_Windows_Freezable_\" data-linktype=\"relative-path\">CloneCurrentValueCore(Freezable)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_CreateInstance\" data-linktype=\"relative-path\">CreateInstance()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_Freeze\" data-linktype=\"relative-path\">Freeze()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_Freeze_System_Windows_Freezable_System_Boolean_\" data-linktype=\"relative-path\">Freeze(Freezable,Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_GetAsFrozen\" data-linktype=\"relative-path\">GetAsFrozen()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_GetCurrentValueAsFrozen\" data-linktype=\"relative-path\">GetCurrentValueAsFrozen()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_IsFrozen\" data-linktype=\"relative-path\">IsFrozen</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_OnChanged\" data-linktype=\"relative-path\">OnChanged()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_OnFreezablePropertyChanged_System_Windows_DependencyObject_System_Windows_DependencyObject_\" data-linktype=\"relative-path\">OnFreezablePropertyChanged(DependencyObject,DependencyObject)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_OnFreezablePropertyChanged_System_Windows_DependencyObject_System_Windows_DependencyObject_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">OnFreezablePropertyChanged(DependencyObject,DependencyObject,DependencyProperty)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_OnPropertyChanged_System_Windows_DependencyPropertyChangedEventArgs_\" data-linktype=\"relative-path\">OnPropertyChanged(DependencyPropertyChangedEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_ReadPreamble\" data-linktype=\"relative-path\">ReadPreamble()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_WritePostscript\" data-linktype=\"relative-path\">WritePostscript()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_WritePreamble\" data-linktype=\"relative-path\">WritePreamble()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_ApplyAnimationClock_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationClock_\" data-linktype=\"relative-path\">ApplyAnimationClock(DependencyProperty,AnimationClock)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_ApplyAnimationClock_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationClock_System_Windows_Media_Animation_HandoffBehavior_\" data-linktype=\"relative-path\">ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_BeginAnimation_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationTimeline_\" data-linktype=\"relative-path\">BeginAnimation(DependencyProperty,AnimationTimeline)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_BeginAnimation_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationTimeline_System_Windows_Media_Animation_HandoffBehavior_\" data-linktype=\"relative-path\">BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_GetAnimationBaseValue_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">GetAnimationBaseValue(DependencyProperty)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_HasAnimatedProperties\" data-linktype=\"relative-path\">HasAnimatedProperties</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_ShouldSerializeStoredWeakReference_System_Windows_DependencyObject_\" data-linktype=\"relative-path\">ShouldSerializeStoredWeakReference(DependencyObject)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline#System_Windows_Media_Animation_ParallelTimeline_CloneCurrentValue\" data-linktype=\"relative-path\">CloneCurrentValue()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline#System_Windows_Media_Animation_ParallelTimeline_GetNaturalDurationCore_System_Windows_Media_Animation_Clock_\" data-linktype=\"relative-path\">GetNaturalDurationCore(Clock)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline#System_Windows_Media_Animation_ParallelTimeline_SlipBehavior\" data-linktype=\"relative-path\">SlipBehavior</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline#System_Windows_Media_Animation_ParallelTimeline_SlipBehaviorProperty\" data-linktype=\"relative-path\">SlipBehaviorProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_AccelerationRatio\" data-linktype=\"relative-path\">AccelerationRatio</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_AccelerationRatioProperty\" data-linktype=\"relative-path\">AccelerationRatioProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_AutoReverse\" data-linktype=\"relative-path\">AutoReverse</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_AutoReverseProperty\" data-linktype=\"relative-path\">AutoReverseProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_BeginTime\" data-linktype=\"relative-path\">BeginTime</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_BeginTimeProperty\" data-linktype=\"relative-path\">BeginTimeProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_Completed\" data-linktype=\"relative-path\">Completed</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CreateClock_System_Boolean_\" data-linktype=\"relative-path\">CreateClock(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentStateInvalidated\" data-linktype=\"relative-path\">CurrentStateInvalidated</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentTimeInvalidated\" data-linktype=\"relative-path\">CurrentTimeInvalidated</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_DecelerationRatio\" data-linktype=\"relative-path\">DecelerationRatio</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_DecelerationRatioProperty\" data-linktype=\"relative-path\">DecelerationRatioProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_DesiredFrameRateProperty\" data-linktype=\"relative-path\">DesiredFrameRateProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_Duration\" data-linktype=\"relative-path\">Duration</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_DurationProperty\" data-linktype=\"relative-path\">DurationProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_FillBehavior\" data-linktype=\"relative-path\">FillBehavior</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_FillBehaviorProperty\" data-linktype=\"relative-path\">FillBehaviorProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_FreezeCore_System_Boolean_\" data-linktype=\"relative-path\">FreezeCore(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_GetAsFrozenCore_System_Windows_Freezable_\" data-linktype=\"relative-path\">GetAsFrozenCore(Freezable)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_GetCurrentValueAsFrozenCore_System_Windows_Freezable_\" data-linktype=\"relative-path\">GetCurrentValueAsFrozenCore(Freezable)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_GetDesiredFrameRate_System_Windows_Media_Animation_Timeline_\" data-linktype=\"relative-path\">GetDesiredFrameRate(Timeline)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_GetNaturalDuration_System_Windows_Media_Animation_Clock_\" data-linktype=\"relative-path\">GetNaturalDuration(Clock)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_Name\" data-linktype=\"relative-path\">Name</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_NameProperty\" data-linktype=\"relative-path\">NameProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_RemoveRequested\" data-linktype=\"relative-path\">RemoveRequested</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_RepeatBehavior\" data-linktype=\"relative-path\">RepeatBehavior</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_RepeatBehaviorProperty\" data-linktype=\"relative-path\">RepeatBehaviorProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_SetDesiredFrameRate_System_Windows_Media_Animation_Timeline_System_Nullable_System_Int32__\" data-linktype=\"relative-path\">SetDesiredFrameRate(Timeline,Nullable&lt;Int32&gt;)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_SpeedRatio\" data-linktype=\"relative-path\">SpeedRatio</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_SpeedRatioProperty\" data-linktype=\"relative-path\">SpeedRatioProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timelinegroup#System_Windows_Media_Animation_TimelineGroup_AddChild_System_Object_\" data-linktype=\"relative-path\">AddChild(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timelinegroup#System_Windows_Media_Animation_TimelineGroup_AddText_System_String_\" data-linktype=\"relative-path\">AddText(String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timelinegroup#System_Windows_Media_Animation_TimelineGroup_AllocateClock\" data-linktype=\"relative-path\">AllocateClock()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timelinegroup#System_Windows_Media_Animation_TimelineGroup_Children\" data-linktype=\"relative-path\">Children</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timelinegroup#System_Windows_Media_Animation_TimelineGroup_ChildrenProperty\" data-linktype=\"relative-path\">ChildrenProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timelinegroup#System_Windows_Media_Animation_TimelineGroup_CreateClock\" data-linktype=\"relative-path\">CreateClock()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timelinegroup#System_Windows_Media_Animation_TimelineGroup_System_Windows_Markup_IAddChild_AddChild_System_Object_\" data-linktype=\"relative-path\">IAddChild.AddChild(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timelinegroup#System_Windows_Media_Animation_TimelineGroup_System_Windows_Markup_IAddChild_AddText_System_String_\" data-linktype=\"relative-path\">IAddChild.AddText(String)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_CheckAccess\" data-linktype=\"relative-path\">CheckAccess()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_Dispatcher\" data-linktype=\"relative-path\">Dispatcher</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_VerifyAccess\" data-linktype=\"relative-path\">VerifyAccess()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<h2 id=\"interactively-controlling-storyboards\">Interactively Controlling Storyboards</h2>\n<p> A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in markup, you specify the <a class=\"xref\" href=\"system.windows.media.animation.beginstoryboard#System_Windows_Media_Animation_BeginStoryboard_Name_\" data-linktype=\"relative-path\">Name</a> property of the <a class=\"xref\" href=\"system.windows.media.animation.beginstoryboard\" data-linktype=\"relative-path\">BeginStoryboard</a> object that creates it; for an example, see <a href=\"../Topic/How%20to:%20Use%20Event%20Triggers%20to%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Use Event Triggers to Control a Storyboard After It Starts</a>. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.  </p>\n<h2 id=\"data-binding-and-animating-timelines\">Data Binding and Animating Timelines</h2>\n<p> Most timeline properties can be data bound or animated; however, because of the way the timing system works, data bound or animated timelines do not behave like other data bound or animated objects. To understand their behavior, it helps to understand what it means to activate a timeline.  </p>\n<p> When a timeline is activated, copies are made of the timeline and its child timelines. These copies are frozen (made read-only) and <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects are created from them. These clocks do the actual work of animating the targeted properties. If a timeline is data bound or animated, a snapshot of its current values is made when its clock is created. Even though the original timeline might continue to change, its clock does not.  </p>\n<p> For a timeline to reflect data binding or animation changes, its clock must be re-created. Clocks are not re-created for you automatically. The following are several ways to apply timeline changes:  </p>\n<ul>\n<li><p>If the timeline is or belongs to a Storyboard, you can make it reflect changes by reapplying its storyboard using a <a class=\"xref\" href=\"system.windows.media.animation.beginstoryboard\" data-linktype=\"relative-path\">BeginStoryboard</a> or the <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method. This has the side effect of also restarting the animation. In code, you can use the <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Seek_\" data-linktype=\"relative-path\">Seek</a> method to advance the storyboard back to its previous position.  </p>\n</li>\n<li><p>If you applied an animation directly to a property using the <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_BeginAnimation_\" data-linktype=\"relative-path\">BeginAnimation</a> method, call the <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_BeginAnimation_\" data-linktype=\"relative-path\">BeginAnimation</a> method again and pass it the animation that has been modified.  </p>\n</li>\n<li><p>If you are working directly at the clock level, create and apply a new set of clocks and use them to replace the previous set of created clocks.  </p>\n<p>For an example of a data bound animation, see <a href=\"http://go.microsoft.com/fwlink/?LinkID=160011\" data-linktype=\"external\">Key Spline Animation Sample</a> .</p>\n</li>\n</ul>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Storyboard()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Storyboard ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Fields\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_TargetNameProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TargetNameProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.TargetName*</span> attached property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty TargetNameProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_TargetProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TargetProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Target*</span> attached property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty TargetProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_TargetPropertyProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TargetPropertyProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.TargetProperty*</span> attached property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty TargetPropertyProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Begin\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Begin()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Applies the animations associated with this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> to their targets and initiates them.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Begin ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Begin_System_Windows_FrameworkContentElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Begin(FrameworkContentElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Applies the animations associated with this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> to their targets and initiates them.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Begin (System.Windows.FrameworkContentElement containingObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkcontentelement\" data-linktype=\"relative-path\">FrameworkContentElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object contained within the same name scope as the targets of this storyboard&#39;s animations. Animations without a <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.TargetName*</span> are applied to <code>containingObject</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the targeted properties are already animated, they are replaced using the <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a> handoff behavior.  </p>\n<p> Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started. To make a storyboard controllable, use the <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> or <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method.  </p>\n<p> Beginning a storyboard triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentStateInvalidated\" data-linktype=\"relative-path\">CurrentStateInvalidated</a> and <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> events.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Begin_System_Windows_FrameworkElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Begin(FrameworkElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Applies the animations associated with this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> to their targets and initiates them.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Begin (System.Windows.FrameworkElement containingObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object contained within the same name scope as the targets of this storyboard&#39;s animations. Animations without a <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.TargetName*</span> are applied to <code>containingObject</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the targeted properties are already animated, they are replaced using the <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a> handoff behavior.  </p>\n<p> Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started. To make a storyboard controllable, use the <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_System_Windows_FrameworkElement_System_Boolean_\" data-linktype=\"relative-path\">Begin(FrameworkElement,Boolean)</a> or <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_System_Windows_FrameworkElement_System_Windows_Media_Animation_HandoffBehavior_System_Boolean_\" data-linktype=\"relative-path\">Begin(FrameworkElement,HandoffBehavior,Boolean)</a> method.  </p>\n<p> Beginning a storyboard triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentStateInvalidated\" data-linktype=\"relative-path\">CurrentStateInvalidated</a> and <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> events.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Begin_System_Windows_FrameworkContentElement_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Begin(FrameworkContentElement,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Applies the animations associated with this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> to their targets and initiates them.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Begin (System.Windows.FrameworkContentElement containingObject, bool isControllable);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkcontentelement\" data-linktype=\"relative-path\">FrameworkContentElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object contained within the same name scope as the targets of this storyboard&#39;s animations. Animations without a <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.TargetName*</span> are applied to <code>containingObject</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>isControllable</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the storyboard should be interactively controllable; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the targeted properties are already animated, they are replaced using the <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a> handoff behavior.  </p>\n<p> To interactively control this storyboard, you must specify the same <code>containingObject</code> when calling the interactive methods that you used to begin the storyboard  </p>\n<p> When this method is called, <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects are created for the storyboard and any timelines it contains. These clocks are stored with <code>containingObject</code>.  </p>\n<p> Beginning a storyboard triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentStateInvalidated\" data-linktype=\"relative-path\">CurrentStateInvalidated</a> and <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> events.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Begin_System_Windows_FrameworkContentElement_System_Windows_Media_Animation_HandoffBehavior_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Begin(FrameworkContentElement,HandoffBehavior)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Applies the animations associated with this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> to their targets and initiates them, using the specified <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkcontentelement\" data-linktype=\"relative-path\">FrameworkContentElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object contained within the same name scope as the targets of this storyboard&#39;s animations. Animations without a <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.TargetName*</span> are applied to <code>containingObject</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>handoffBehavior</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The behavior the new animation should use to interact with any current animations.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When you apply a <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>, <a class=\"xref\" href=\"system.windows.media.animation.animationtimeline\" data-linktype=\"relative-path\">AnimationTimeline</a>, or <a class=\"xref\" href=\"system.windows.media.animation.animationclock\" data-linktype=\"relative-path\">AnimationClock</a> to a property using the <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a> <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a>, any <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.  </p>\n<p> To avoid performance issues when you apply a large number of clocks using <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.  </p>\n<ul>\n<li><p>To remove all clocks from a property, use the <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_ApplyAnimationClock_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationClock_\" data-linktype=\"relative-path\">ApplyAnimationClock(DependencyProperty,AnimationClock)</a> or <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_BeginAnimation_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationTimeline_\" data-linktype=\"relative-path\">BeginAnimation(DependencyProperty,AnimationTimeline)</a> method of the animated object. Specify the property being animated as the first parameter, and <code>null</code> as the second. This removes all animation clocks from the property.  </p>\n</li>\n<li><p>To remove a specific <a class=\"xref\" href=\"system.windows.media.animation.animationclock\" data-linktype=\"relative-path\">AnimationClock</a> from a list of clocks, use the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Controller_\" data-linktype=\"relative-path\">Controller</a> property of the <a class=\"xref\" href=\"system.windows.media.animation.animationclock\" data-linktype=\"relative-path\">AnimationClock</a> to retrieve a <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller\" data-linktype=\"relative-path\">ClockController</a>, then call the <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller#System_Windows_Media_Animation_ClockController_Remove_\" data-linktype=\"relative-path\">Remove</a> method of the <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller\" data-linktype=\"relative-path\">ClockController</a>. This is typically done in the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Completed\" data-linktype=\"relative-path\">Completed</a> event handler for a clock. Note that only root clocks can be controlled by a <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller\" data-linktype=\"relative-path\">ClockController</a>; the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Controller_\" data-linktype=\"relative-path\">Controller</a> property of a child clock returns <code>null</code>. Note also that the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Completed\" data-linktype=\"relative-path\">Completed</a> event is not called if the effective duration of the clock is forever.  In that case, the user must determine when to call <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller#System_Windows_Media_Animation_ClockController_Remove_\" data-linktype=\"relative-path\">Remove</a>.  </p>\n<p>This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.  </p>\n<p>For more information about clock objects, see <a href=\"../Topic/Animation%20and%20Timing%20System%20Overview.md\" data-linktype=\"relative-path\">Animation and Timing System Overview</a>.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Begin_System_Windows_FrameworkElement_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Begin(FrameworkElement,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Applies the animations associated with this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> to their targets and initiates them.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Begin (System.Windows.FrameworkElement containingObject, bool isControllable);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object contained within the same name scope as the targets of this storyboard&#39;s animations. Animations without a <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.TargetName*</span> are applied to <code>containingObject</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>isControllable</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the storyboard should be interactively controllable; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the targeted properties are already animated, they are replaced using the <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a> handoff behavior.  </p>\n<p> To interactively control this storyboard, you must use the same <code>containingObject</code> parameter when calling the interactive methods that you used to begin the storyboard  </p>\n<p> When this method is called, <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects are created for the storyboard and any timelines it contains. These clocks are stored with <code>containingObject</code>.  </p>\n<p> Beginning a storyboard triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentStateInvalidated\" data-linktype=\"relative-path\">CurrentStateInvalidated</a> and <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> events.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Begin_System_Windows_FrameworkElement_System_Windows_FrameworkTemplate_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Begin(FrameworkElement,FrameworkTemplate)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Applies the animations associated with this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> to their targets within the specified template and initiates them.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object to which the specified <code>frameworkTemplate</code> has been applied. Animations without a <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.TargetName*</span> are applied to <code>containingObject</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>frameworkTemplate</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworktemplate\" data-linktype=\"relative-path\">FrameworkTemplate</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The template to animate.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the targeted properties are already animated, they are replaced using the <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a> handoff behavior.  </p>\n<p> When this method is called, <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects are created for the storyboard and any timelines it contains. These clocks are stored with <code>containingObject</code>.  </p>\n<p> Beginning a storyboard triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentStateInvalidated\" data-linktype=\"relative-path\">CurrentStateInvalidated</a> and <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> events.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Begin_System_Windows_FrameworkElement_System_Windows_Media_Animation_HandoffBehavior_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Begin(FrameworkElement,HandoffBehavior)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Applies the animations associated with this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> to their targets and initiates them, using the specified <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object contained within the same name scope as the targets of this storyboard&#39;s animations. Animations without a specified <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.TargetName*</span> are applied to <code>containingObject</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>handoffBehavior</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The behavior the new animation should use to interact with any current animations.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Begin_System_Windows_FrameworkContentElement_System_Windows_Media_Animation_HandoffBehavior_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Begin(FrameworkContentElement,HandoffBehavior,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Applies the animations associated with this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> to their targets and initiates them, using the specified <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkcontentelement\" data-linktype=\"relative-path\">FrameworkContentElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object contained within the same name scope as the targets of this storyboard&#39;s animations. Animations without a specified <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.TargetName*</span> are applied to <code>containingObject</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>handoffBehavior</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The behavior the new animation should use to interact with any current animations.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>isControllable</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Declares whether the animation is controllable (can be paused) once started.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the targeted properties are already animated, they are replaced using the specified handoff behavior.  </p>\n<p> To interactively control this storyboard, you must specify the same <code>containingObject</code> when calling the interactive methods that you used to begin the storyboard  </p>\n<p> When this method is called, <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects are created for the storyboard and any timelines it contains. These clocks are stored with <code>containingObject</code>.  </p>\n<p> Beginning a storyboard triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentStateInvalidated\" data-linktype=\"relative-path\">CurrentStateInvalidated</a> and <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> events.  </p>\n<h2 id=\"using-the-compose-handoffbehavior\">Using the Compose HandoffBehavior</h2>\n<p> When you apply a <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>, <a class=\"xref\" href=\"system.windows.media.animation.animationtimeline\" data-linktype=\"relative-path\">AnimationTimeline</a>, or <a class=\"xref\" href=\"system.windows.media.animation.animationclock\" data-linktype=\"relative-path\">AnimationClock</a> to a property using the <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a> <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a>, any <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.  </p>\n<p> To avoid performance issues when you apply a large number of clocks using <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.  </p>\n<ul>\n<li><p>To remove all clocks from a property, use the <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_ApplyAnimationClock_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationClock_\" data-linktype=\"relative-path\">ApplyAnimationClock(DependencyProperty,AnimationClock)</a> or <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_BeginAnimation_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationTimeline_\" data-linktype=\"relative-path\">BeginAnimation(DependencyProperty,AnimationTimeline)</a> method of the animated object. Specify the property being animated as the first parameter, and <code>null</code> as the second. This removes all animation clocks from the property.  </p>\n</li>\n<li><p>To remove a specific <a class=\"xref\" href=\"system.windows.media.animation.animationclock\" data-linktype=\"relative-path\">AnimationClock</a> from a list of clocks, use the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Controller_\" data-linktype=\"relative-path\">Controller</a> property of the <a class=\"xref\" href=\"system.windows.media.animation.animationclock\" data-linktype=\"relative-path\">AnimationClock</a> to retrieve a <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller\" data-linktype=\"relative-path\">ClockController</a>, then call the <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller#System_Windows_Media_Animation_ClockController_Remove_\" data-linktype=\"relative-path\">Remove</a> method of the <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller\" data-linktype=\"relative-path\">ClockController</a>. This is typically done in the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Completed\" data-linktype=\"relative-path\">Completed</a> event handler for a clock. Note that only root clocks can be controlled by a <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller\" data-linktype=\"relative-path\">ClockController</a>; the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Controller_\" data-linktype=\"relative-path\">Controller</a> property of a child clock returns <code>null</code>. Note also that the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Completed\" data-linktype=\"relative-path\">Completed</a> event is not called if the effective duration of the clock is forever.  In that case, the user must determine when to call <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller#System_Windows_Media_Animation_ClockController_Remove_\" data-linktype=\"relative-path\">Remove</a>.  </p>\n<p>This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.  </p>\n<p>For more information about clock objects, see <a href=\"../Topic/Animation%20and%20Timing%20System%20Overview.md\" data-linktype=\"relative-path\">Animation and Timing System Overview</a>.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Begin_System_Windows_FrameworkElement_System_Windows_FrameworkTemplate_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Begin(FrameworkElement,FrameworkTemplate,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Applies the animations associated with this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> to their targets within the specified template and initiates them.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object to which the specified <code>frameworkTemplate</code> has been applied.  Animations without a <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.TargetName*</span> are applied to <code>containingObject</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>frameworkTemplate</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworktemplate\" data-linktype=\"relative-path\">FrameworkTemplate</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The template to animate.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>isControllable</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the storyboard should be interactively controllable; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the targeted properties are already animated, they are replaced using the <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a> handoff behavior.  </p>\n<p> To interactively control this storyboard, you must specify the same <code>containingObject</code> when calling the interactive methods that you used to begin the storyboard  </p>\n<p> When this method is called, <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects are created for the storyboard and any timelines it contains. These clocks are stored with <code>containingObject</code>.  </p>\n<p> Beginning a storyboard triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentStateInvalidated\" data-linktype=\"relative-path\">CurrentStateInvalidated</a> and <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> events.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Begin_System_Windows_FrameworkElement_System_Windows_FrameworkTemplate_System_Windows_Media_Animation_HandoffBehavior_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Begin(FrameworkElement,FrameworkTemplate,HandoffBehavior)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Applies the animations associated with this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> to their targets within the specified template and initiates them.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object to which the specified <code>frameworkTemplate</code> has been applied. Animations without a <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.TargetName*</span> are applied to <code>containingObject</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>frameworkTemplate</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworktemplate\" data-linktype=\"relative-path\">FrameworkTemplate</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The template to animate.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>handoffBehavior</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The behavior the new animation should use to interact with any current animations.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When this method is called, <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects are created for the storyboard and any timelines it contains. These clocks are stored with <code>containingObject</code>.  </p>\n<p> Beginning a storyboard triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentStateInvalidated\" data-linktype=\"relative-path\">CurrentStateInvalidated</a> and <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> events.  </p>\n<h2 id=\"using-the-compose-handoffbehavior\">Using the Compose HandoffBehavior</h2>\n<p> When you apply a <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>, <a class=\"xref\" href=\"system.windows.media.animation.animationtimeline\" data-linktype=\"relative-path\">AnimationTimeline</a>, or <a class=\"xref\" href=\"system.windows.media.animation.animationclock\" data-linktype=\"relative-path\">AnimationClock</a> to a property using the <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a> <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a>, any <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.  </p>\n<p> To avoid performance issues when you apply a large number of clocks using <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.  </p>\n<ul>\n<li><p>To remove all clocks from a property, use the <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_ApplyAnimationClock_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationClock_\" data-linktype=\"relative-path\">ApplyAnimationClock(DependencyProperty,AnimationClock)</a> or <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_BeginAnimation_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationTimeline_\" data-linktype=\"relative-path\">BeginAnimation(DependencyProperty,AnimationTimeline)</a> method of the animated object. Specify the property being animated as the first parameter, and <code>null</code> as the second. This removes all animation clocks from the property.  </p>\n</li>\n<li><p>To remove a specific <a class=\"xref\" href=\"system.windows.media.animation.animationclock\" data-linktype=\"relative-path\">AnimationClock</a> from a list of clocks, use the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Controller_\" data-linktype=\"relative-path\">Controller</a> property of the <a class=\"xref\" href=\"system.windows.media.animation.animationclock\" data-linktype=\"relative-path\">AnimationClock</a> to retrieve a <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller\" data-linktype=\"relative-path\">ClockController</a>, then call the <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller#System_Windows_Media_Animation_ClockController_Remove_\" data-linktype=\"relative-path\">Remove</a> method of the <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller\" data-linktype=\"relative-path\">ClockController</a>. This is typically done in the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Completed\" data-linktype=\"relative-path\">Completed</a> event handler for a clock. Note that only root clocks can be controlled by a <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller\" data-linktype=\"relative-path\">ClockController</a>; the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Controller_\" data-linktype=\"relative-path\">Controller</a> property of a child clock returns <code>null</code>. Note also that the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Completed\" data-linktype=\"relative-path\">Completed</a> event is not called if the effective duration of the clock is forever.  In that case, the user must determine when to call <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller#System_Windows_Media_Animation_ClockController_Remove_\" data-linktype=\"relative-path\">Remove</a>.  </p>\n<p>This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.  </p>\n<p>For more information about clock objects, see <a href=\"../Topic/Animation%20and%20Timing%20System%20Overview.md\" data-linktype=\"relative-path\">Animation and Timing System Overview</a>.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Begin_System_Windows_FrameworkElement_System_Windows_Media_Animation_HandoffBehavior_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Begin(FrameworkElement,HandoffBehavior,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Applies the animations associated with this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> to their targets and initiates them.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object contained within the same name scope as the targets of this storyboard&#39;s animations. Animations without a specified <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.TargetName*</span> are applied to <code>containingObject</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>handoffBehavior</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The behavior the new animation should use to interact with any current animations.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>isControllable</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Declares whether the animation is controllable (can be paused) once started.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To interactively control this storyboard, you must use the same <code>containingObject</code> parameter when calling the interactive methods that you used to begin the storyboard  </p>\n<p> When this method is called, <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects are created for the storyboard and any timelines it contains. These clocks are stored with <code>containingObject</code>.  </p>\n<p> Beginning a storyboard triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentStateInvalidated\" data-linktype=\"relative-path\">CurrentStateInvalidated</a> and <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> events.  </p>\n<h2 id=\"using-the-compose-handoffbehavior\">Using the Compose HandoffBehavior</h2>\n<p> When you apply a <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>, <a class=\"xref\" href=\"system.windows.media.animation.animationtimeline\" data-linktype=\"relative-path\">AnimationTimeline</a>, or <a class=\"xref\" href=\"system.windows.media.animation.animationclock\" data-linktype=\"relative-path\">AnimationClock</a> to a property using the <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a> <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a>, any <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.  </p>\n<p> To avoid performance issues when you apply a large number of clocks using <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.  </p>\n<ul>\n<li><p>To remove all clocks from a property, use the <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_ApplyAnimationClock_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationClock_\" data-linktype=\"relative-path\">ApplyAnimationClock(DependencyProperty,AnimationClock)</a> or <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_BeginAnimation_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationTimeline_\" data-linktype=\"relative-path\">BeginAnimation(DependencyProperty,AnimationTimeline)</a> method of the animated object. Specify the property being animated as the first parameter, and <code>null</code> as the second. This removes all animation clocks from the property.  </p>\n</li>\n<li><p>To remove a specific <a class=\"xref\" href=\"system.windows.media.animation.animationclock\" data-linktype=\"relative-path\">AnimationClock</a> from a list of clocks, use the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Controller_\" data-linktype=\"relative-path\">Controller</a> property of the <a class=\"xref\" href=\"system.windows.media.animation.animationclock\" data-linktype=\"relative-path\">AnimationClock</a> to retrieve a <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller\" data-linktype=\"relative-path\">ClockController</a>, then call the <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller#System_Windows_Media_Animation_ClockController_Remove_\" data-linktype=\"relative-path\">Remove</a> method of the <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller\" data-linktype=\"relative-path\">ClockController</a>. This is typically done in the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Completed\" data-linktype=\"relative-path\">Completed</a> event handler for a clock. Note that only root clocks can be controlled by a <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller\" data-linktype=\"relative-path\">ClockController</a>; the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Controller_\" data-linktype=\"relative-path\">Controller</a> property of a child clock returns <code>null</code>. Note also that the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Completed\" data-linktype=\"relative-path\">Completed</a> event is not called if the effective duration of the clock is forever.  In that case, the user must determine when to call <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller#System_Windows_Media_Animation_ClockController_Remove_\" data-linktype=\"relative-path\">Remove</a>.  </p>\n<p>This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.  </p>\n<p>For more information about clock objects, see <a href=\"../Topic/Animation%20and%20Timing%20System%20Overview.md\" data-linktype=\"relative-path\">Animation and Timing System Overview</a>.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Begin_System_Windows_FrameworkElement_System_Windows_FrameworkTemplate_System_Windows_Media_Animation_HandoffBehavior_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Begin(FrameworkElement,FrameworkTemplate,HandoffBehavior,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Applies the animations associated with this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> to their targets within the specified template and initiates them.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object to which the specified <code>frameworkTemplate</code> has been applied. Animations without a <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.TargetName*</span> are applied to <code>containingObject</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>frameworkTemplate</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworktemplate\" data-linktype=\"relative-path\">FrameworkTemplate</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The template to animate.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>handoffBehavior</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The behavior the new animation should use to interact with any current animations.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>isControllable</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the storyboard should be interactively controllable; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To interactively control this storyboard, you must specify the same <code>containingObject</code> when calling the interactive methods that you used to begin the storyboard  </p>\n<p> When this method is called, <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects are created for the storyboard and any timelines it contains. These clocks are stored with <code>containingObject</code>.  </p>\n<p> Beginning a storyboard triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentStateInvalidated\" data-linktype=\"relative-path\">CurrentStateInvalidated</a> and <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> events.  </p>\n<h2 id=\"using-the-compose-handoffbehavior\">Using the Compose HandoffBehavior</h2>\n<p> When you apply a <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>, <a class=\"xref\" href=\"system.windows.media.animation.animationtimeline\" data-linktype=\"relative-path\">AnimationTimeline</a>, or <a class=\"xref\" href=\"system.windows.media.animation.animationclock\" data-linktype=\"relative-path\">AnimationClock</a> to a property using the <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a> <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a>, any <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.  </p>\n<p> To avoid performance issues when you apply a large number of clocks using <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.  </p>\n<ul>\n<li><p>To remove all clocks from a property, use the <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_ApplyAnimationClock_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationClock_\" data-linktype=\"relative-path\">ApplyAnimationClock(DependencyProperty,AnimationClock)</a> or <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_BeginAnimation_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationTimeline_\" data-linktype=\"relative-path\">BeginAnimation(DependencyProperty,AnimationTimeline)</a> method of the animated object. Specify the property being animated as the first parameter, and <code>null</code> as the second. This removes all animation clocks from the property.  </p>\n</li>\n<li><p>To remove a specific <a class=\"xref\" href=\"system.windows.media.animation.animationclock\" data-linktype=\"relative-path\">AnimationClock</a> from a list of clocks, use the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Controller_\" data-linktype=\"relative-path\">Controller</a> property of the <a class=\"xref\" href=\"system.windows.media.animation.animationclock\" data-linktype=\"relative-path\">AnimationClock</a> to retrieve a <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller\" data-linktype=\"relative-path\">ClockController</a>, then call the <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller#System_Windows_Media_Animation_ClockController_Remove_\" data-linktype=\"relative-path\">Remove</a> method of the <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller\" data-linktype=\"relative-path\">ClockController</a>. This is typically done in the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Completed\" data-linktype=\"relative-path\">Completed</a> event handler for a clock. Note that only root clocks can be controlled by a <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller\" data-linktype=\"relative-path\">ClockController</a>; the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Controller_\" data-linktype=\"relative-path\">Controller</a> property of a child clock returns <code>null</code>. Note also that the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Completed\" data-linktype=\"relative-path\">Completed</a> event is not called if the effective duration of the clock is forever.  In that case, the user must determine when to call <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller#System_Windows_Media_Animation_ClockController_Remove_\" data-linktype=\"relative-path\">Remove</a>.  </p>\n<p>This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.  </p>\n<p>For more information about clock objects, see <a href=\"../Topic/Animation%20and%20Timing%20System%20Overview.md\" data-linktype=\"relative-path\">Animation and Timing System Overview</a>.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Clone\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Clone()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a modifiable clone of this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>, making deep copies of this object&#39;s values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Media.Animation.Storyboard Clone ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A modifiable clone of the current object. The cloned object&#39;s <span class=\"xref\">stem.Windows.Freezable.IsFrozen*</span> property is <code>false</code> even if the source&#39;s <span class=\"xref\">stem.Windows.Freezable.IsFrozen*</span> property is <code>true.</code></p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is used to produce modifiable copies of frozen <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a> objects (or any <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  </p>\n<p> For more information, see <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_Clone_\" data-linktype=\"relative-path\">Clone</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_CreateInstanceCore\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateInstanceCore()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a new instance of the <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override System.Windows.Freezable CreateInstanceCore ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A new <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is called internally by <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_CreateInstance_\" data-linktype=\"relative-path\">CreateInstance</a> when creating new instances of the <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> class for the various cloning methods (such as <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_Clone_\" data-linktype=\"relative-path\">Clone</a> and <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_CloneCurrentValue_\" data-linktype=\"relative-path\">CloneCurrentValue</a>).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_GetCurrentGlobalSpeed\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetCurrentGlobalSpeed()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the <span class=\"xref\">stem.Windows.Media.Animation.Clock.CurrentGlobalSpeed*</span> of the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public double GetCurrentGlobalSpeed ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The current global speed, or 0 if the clock is stopped.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_GetCurrentGlobalSpeed_System_Windows_FrameworkContentElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetCurrentGlobalSpeed(FrameworkContentElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the <span class=\"xref\">stem.Windows.Media.Animation.Clock.CurrentGlobalSpeed*</span> of the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Nullable&lt;double&gt; GetCurrentGlobalSpeed (System.Windows.FrameworkContentElement containingObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkcontentelement\" data-linktype=\"relative-path\">FrameworkContentElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable</a>&lt;<a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The current global speed, or <code>null</code> if the clock is stopped.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A clock&#39;s <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_CurrentGlobalSpeed_\" data-linktype=\"relative-path\">CurrentGlobalSpeed</a> speed is the rate at which its time is currently progressing, compared to real-world time.  </p>\n<p> To use this method to retrieve information about a storyboard&#39;s clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_GetCurrentGlobalSpeed_System_Windows_FrameworkElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetCurrentGlobalSpeed(FrameworkElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the <span class=\"xref\">stem.Windows.Media.Animation.Clock.CurrentGlobalSpeed*</span> of the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Nullable&lt;double&gt; GetCurrentGlobalSpeed (System.Windows.FrameworkElement containingObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable</a>&lt;<a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The current global speed, or <code>null</code> if the clock is stopped.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A clock&#39;s <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_CurrentGlobalSpeed_\" data-linktype=\"relative-path\">CurrentGlobalSpeed</a> speed is the rate at which its time is currently progressing, compared to real-world time.  </p>\n<p> To use this method to retrieve information about a storyboard&#39;s clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_GetCurrentIteration\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetCurrentIteration()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the <span class=\"xref\">stem.Windows.Media.Animation.Clock.CurrentIteration*</span> of the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int GetCurrentIteration ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>This clock&#39;s current iteration within its current active period, or <code>null</code> if this clock is stopped.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A clock&#39;s first iteration has a value of 1.  </p>\n<p> If this storyboard has a <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_AutoReverse_\" data-linktype=\"relative-path\">AutoReverse</a> setting of <code>true</code>, a full iteration consists of a forward-reverse pair, not just one of these segments.  </p>\n<p> To use this method to retrieve information about a storyboard&#39;s clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_GetCurrentIteration_System_Windows_FrameworkContentElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetCurrentIteration(FrameworkContentElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the <span class=\"xref\">stem.Windows.Media.Animation.Clock.CurrentIteration*</span> of the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Nullable&lt;int&gt; GetCurrentIteration (System.Windows.FrameworkContentElement containingObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkcontentelement\" data-linktype=\"relative-path\">FrameworkContentElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable</a>&lt;<a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>This clock&#39;s current iteration within its current active period, or <code>null</code> if this clock is stopped.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A clock&#39;s first iteration has a value of 1.  </p>\n<p> If this storyboard has a <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_AutoReverse_\" data-linktype=\"relative-path\">AutoReverse</a> setting of <code>true</code>, a full iteration consists of a forward-reverse pair, not just one of these segments.  </p>\n<p> To use this method to retrieve information about a storyboard&#39;s clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_GetCurrentIteration_System_Windows_FrameworkElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetCurrentIteration(FrameworkElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the <span class=\"xref\">stem.Windows.Media.Animation.Clock.CurrentIteration*</span> of the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Nullable&lt;int&gt; GetCurrentIteration (System.Windows.FrameworkElement containingObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable</a>&lt;<a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>This clock&#39;s current iteration within its current active period, or <code>null</code> if this clock is stopped.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A clock&#39;s first iteration has a value of 1.  </p>\n<p> If this clock&#39;s timeline has an <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_AutoReverse_\" data-linktype=\"relative-path\">AutoReverse</a> setting of <code>true</code>, a full iteration consists of a forward-reverse pair, not just one of these segments.  </p>\n<p> Regardless of its current iteration, seeking a clock returns its current iteration to 1. Restarting a clock also returns its current iteration to 1.  </p>\n<p> To use this method to retrieve information about a storyboard&#39;s clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_GetCurrentProgress\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetCurrentProgress()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the <span class=\"xref\">stem.Windows.Media.Animation.Clock.CurrentProgress*</span> of the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public double GetCurrentProgress ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>null</code> if this clock is <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a>, or 0.0 if this clock is active and its <span class=\"xref\">stem.Windows.Media.Animation.Clock.Timeline*</span> has a <span class=\"xref\">stem.Windows.Media.Animation.Timeline.Duration*</span> of <span class=\"xref\">stem.Windows.Duration.Forever*</span>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration. A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To use this method to retrieve information about a storyboard&#39;s clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_GetCurrentProgress_System_Windows_FrameworkContentElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetCurrentProgress(FrameworkContentElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the <span class=\"xref\">stem.Windows.Media.Animation.Clock.CurrentProgress*</span> of the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Nullable&lt;double&gt; GetCurrentProgress (System.Windows.FrameworkContentElement containingObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkcontentelement\" data-linktype=\"relative-path\">FrameworkContentElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable</a>&lt;<a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>null</code> if this clock is <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a>, or 0.0 if this clock is active and its <span class=\"xref\">stem.Windows.Media.Animation.Clock.Timeline*</span> has a <span class=\"xref\">stem.Windows.Media.Animation.Timeline.Duration*</span> of <span class=\"xref\">stem.Windows.Duration.Forever*</span>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration. A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To use this method to retrieve information about a storyboard&#39;s clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_GetCurrentProgress_System_Windows_FrameworkElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetCurrentProgress(FrameworkElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the <span class=\"xref\">stem.Windows.Media.Animation.Clock.CurrentProgress*</span> of the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Nullable&lt;double&gt; GetCurrentProgress (System.Windows.FrameworkElement containingObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable</a>&lt;<a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>null</code> if this clock is <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a>, or 0.0 if this clock is active and its <span class=\"xref\">stem.Windows.Media.Animation.Clock.Timeline*</span> has a <span class=\"xref\">stem.Windows.Media.Animation.Timeline.Duration*</span> of <span class=\"xref\">stem.Windows.Duration.Forever*</span>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration. A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To use this method to retrieve information about a storyboard&#39;s clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_GetCurrentState\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetCurrentState()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the <span class=\"xref\">stem.Windows.Media.Animation.Clock.CurrentState*</span> of the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Media.Animation.ClockState GetCurrentState ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The current state of the clock created for this storyboard: <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a>, <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a>, or <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method does not tell you whether a storyboard is paused. To determine whether a storyboard is paused, use the <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_GetIsPaused_\" data-linktype=\"relative-path\">GetIsPaused</a> method.  </p>\n<p> To use this method to retrieve information about a storyboard&#39;s clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_GetCurrentState_System_Windows_FrameworkContentElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetCurrentState(FrameworkContentElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the <span class=\"xref\">stem.Windows.Media.Animation.Clock.CurrentState*</span> of the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkContentElement containingObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkcontentelement\" data-linktype=\"relative-path\">FrameworkContentElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The current state of the clock created for this storyboard: <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a>, <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a>, or <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method does not tell you whether a storyboard is paused. To determine whether a storyboard is paused, use the <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_GetIsPaused_\" data-linktype=\"relative-path\">GetIsPaused</a> method.  </p>\n<p> To use this method to retrieve information about a storyboard&#39;s clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_GetCurrentState_System_Windows_FrameworkElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetCurrentState(FrameworkElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the <span class=\"xref\">stem.Windows.Media.Animation.Clock.CurrentState*</span> of the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkElement containingObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The current state of the clock created for this storyboard: <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a>, <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a>, or <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method does not tell you whether a storyboard is paused. To determine whether a storyboard is paused, use the <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_GetIsPaused_\" data-linktype=\"relative-path\">GetIsPaused</a> method.  </p>\n<p> To use this method to retrieve information about a storyboard&#39;s clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_GetCurrentTime\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetCurrentTime()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the <span class=\"xref\">stem.Windows.Media.Animation.Clock.CurrentTime*</span> of the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public TimeSpan GetCurrentTime ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>null</code> if this storyboard&#39;s clock is <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a>; otherwise, the current time of the storyboard&#39;s clock.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To use this method to retrieve information about a storyboard&#39;s clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_GetCurrentTime_System_Windows_FrameworkContentElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetCurrentTime(FrameworkContentElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the <span class=\"xref\">stem.Windows.Media.Animation.Clock.CurrentTime*</span> of the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Nullable&lt;TimeSpan&gt; GetCurrentTime (System.Windows.FrameworkContentElement containingObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkcontentelement\" data-linktype=\"relative-path\">FrameworkContentElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable</a>&lt;<a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>null</code> if this storyboard&#39;s clock is <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a>; otherwise, the current time of the storyboard&#39;s clock.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To use this method to retrieve information about a storyboard&#39;s clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_GetCurrentTime_System_Windows_FrameworkElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetCurrentTime(FrameworkElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the <span class=\"xref\">stem.Windows.Media.Animation.Clock.CurrentTime*</span> of the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Nullable&lt;TimeSpan&gt; GetCurrentTime (System.Windows.FrameworkElement containingObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable</a>&lt;<a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>null</code> if this storyboard&#39;s clock is <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a>; otherwise, the current time of the storyboard&#39;s clock.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To use this method to retrieve information about a storyboard&#39;s clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_GetIsPaused\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetIsPaused()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves a value that indicates whether the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> is paused.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool GetIsPaused ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> is paused; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To use this method to retrieve information about a storyboard&#39;s clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_GetIsPaused_System_Windows_FrameworkContentElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetIsPaused(FrameworkContentElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves a value that indicates whether the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> is paused.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool GetIsPaused (System.Windows.FrameworkContentElement containingObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkcontentelement\" data-linktype=\"relative-path\">FrameworkContentElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> is paused; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To use this method to retrieve information about a storyboard&#39;s clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_GetIsPaused_System_Windows_FrameworkElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetIsPaused(FrameworkElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves a value that indicates whether the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> is paused.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool GetIsPaused (System.Windows.FrameworkElement containingObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> is paused; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To use this method to retrieve information about a storyboard&#39;s clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_GetTarget_System_Windows_DependencyObject_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetTarget(DependencyObject)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Target*</span> value of the specified <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.DependencyObject GetTarget (System.Windows.DependencyObject element);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>element</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The timeline from which to retrieve the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.TargetName*</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The dependency object targeted by <code>element</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the &lt;xref:System.Windows.Media.Animation.Storyboard.Target%2A&gt; attached property with animation timelines to indicate the object that they target. For more information about how storyboard targeting works, see &lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;. For more information about how attached properties work, see <a href=\"../Topic/Attached%20Properties%20Overview.md\" data-linktype=\"relative-path\">Attached Properties Overview</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_GetTargetName_System_Windows_DependencyObject_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetTargetName(DependencyObject)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.TargetName*</span> value of the specified <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static string GetTargetName (System.Windows.DependencyObject element);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>element</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The timeline from which to retrieve the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.TargetName*</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the dependency object targeted by <code>element</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method gets the &lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt; attached property on the specified object. For more information about how storyboard targeting works, see &lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;. For more information about how attached properties work, see <a href=\"../Topic/Attached%20Properties%20Overview.md\" data-linktype=\"relative-path\">Attached Properties Overview</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_GetTargetProperty_System_Windows_DependencyObject_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetTargetProperty(DependencyObject)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.TargetProperty*</span> value of the specified <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.PropertyPath GetTargetProperty (System.Windows.DependencyObject element);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>element</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The dependency object from which to get the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.TargetProperty*</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.propertypath\" data-linktype=\"relative-path\">PropertyPath</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The property targeted by <code>element</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method gets the &lt;xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A&gt; attached property on the specified object. For more information about how storyboard targeting works, see &lt;xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A&gt; attached property. For more information about how attached properties work, see <a href=\"../Topic/Attached%20Properties%20Overview.md\" data-linktype=\"relative-path\">Attached Properties Overview</a>.  </p>\n<p> Note that if the &lt;xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A&gt; was set in markup, this method returns an empty <a class=\"xref\" href=\"system.windows.propertypath\" data-linktype=\"relative-path\">PropertyPath</a> because the property reference is resolved and stored internally when it is parsed.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Pause\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Pause()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Pauses the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Pause ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method pauses the storyboard, but has no discernible effect if it is not active or currently paused. As a side effect, all associated children are also paused.  </p>\n<p> A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.  </p>\n<h2 id=\"beginning-a-paused-storyboard\">Beginning a Paused Storyboard</h2>\n<p> When you <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> a storyboard that was paused, it appears to resume and restart. However, that is not what actually happens. The <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method actually replaces the paused <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> with a new unpaused version. Each time the <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method is called, clock objects are created for the storyboard. These clocks are distributed to the properties they animate. So, when the <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method is called again, it does not restart its clocks; it replaces them with new clocks.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Pause_System_Windows_FrameworkContentElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Pause(FrameworkContentElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Pauses the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> of the specified <a class=\"xref\" href=\"system.windows.frameworkcontentelement\" data-linktype=\"relative-path\">FrameworkContentElement</a> associated with this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Pause (System.Windows.FrameworkContentElement containingObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkcontentelement\" data-linktype=\"relative-path\">FrameworkContentElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin*</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method pauses the storyboard, but has no discernible effect if it is not active or currently paused. As a side effect, all associated children are also paused.  </p>\n<p> Seeking a paused storyboard does not resume it. The only way to resume a paused storyboard is to use the <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Resume_\" data-linktype=\"relative-path\">Resume</a> method. Calling the <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.  </p>\n<p> To interactively control this storyboard, you must use the same <code>containingObject</code> parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. Fro an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.  </p>\n<p> Pausing a storyboard&#39;s clock triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> event.  </p>\n<h2 id=\"beginning-a-paused-storyboard\">Beginning a Paused Storyboard</h2>\n<p> When you <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> a storyboard that was paused, it appears to resume and restart. However, that is not what actually happens. The <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method actually replaces itself with an unpaused version. Each time the <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method is called, clock objects are created for the storyboard. These clocks are distributed to the properties they animate. So, when the <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method is called again, it does not restart its clocks; it replaces them with new clocks.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Pause_System_Windows_FrameworkElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Pause(FrameworkElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Pauses the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> of the specified <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> associated with this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Pause (System.Windows.FrameworkElement containingObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method pauses the storyboard, but has no discernible effect if it is not active or currently paused. As a side effect, all associated children are also paused.  </p>\n<p> Seeking a paused storyboard does not resume it. The only way to resume a paused storyboard is to use the <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Resume_\" data-linktype=\"relative-path\">Resume</a> method. Calling the <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.  </p>\n<p> To interactively control this storyboard, you must use the same <code>containingObject</code> parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.  </p>\n<p> Pausing a storyboard&#39;s clock triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> event.  </p>\n<h2 id=\"beginning-a-paused-storyboard\">Beginning a Paused Storyboard</h2>\n<p> When you <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> a storyboard that was paused, it appears to resume and restart. However, that is not what actually happens. The <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method actually replaces itself with an unpaused version. Each time the <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method is called, clock objects are created for the storyboard. These clocks are distributed to the properties they animate. So, when the <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method is called again, it does not restart its clocks; it replaces them with new clocks.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Remove\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Remove()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Removes the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>. Animations that belong to this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> no longer affect the properties they once animated, regardless of their <span class=\"xref\">stem.Windows.Media.Animation.Timeline.FillBehavior*</span> setting.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Remove ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.  </p>\n<p> All interactive actions taken on a <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a>, and therefore also on a <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>, occur on the next tick of the timing engine, which happens shortly before the next render. This means that the <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Remove_\" data-linktype=\"relative-path\">Remove</a> method still affects the animated properties until this time. In other words, the next time the frame is displayed, the storyboard is removed. If you need to disassociate an animation from a property before this time, use the <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_BeginAnimation_\" data-linktype=\"relative-path\">BeginAnimation</a> method with an <code>animation</code> parameter value of <code>null</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Remove_System_Windows_FrameworkContentElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Remove(FrameworkContentElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Removes the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>. Animations that belong to this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> no longer affect the properties they once animated, regardless of their <span class=\"xref\">stem.Windows.Media.Animation.Timeline.FillBehavior*</span> setting.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Remove (System.Windows.FrameworkContentElement containingObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkcontentelement\" data-linktype=\"relative-path\">FrameworkContentElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin*</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To interactively control this storyboard, you must use the same <code>containingObject</code> parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.  </p>\n<p> Removing a storyboard&#39;s clock triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_RemoveRequested\" data-linktype=\"relative-path\">RemoveRequested</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Remove_System_Windows_FrameworkElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Remove(FrameworkElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Removes the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>. Animations that belong to this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> no longer affect the properties they once animated, regardless of their <span class=\"xref\">stem.Windows.Media.Animation.Timeline.FillBehavior*</span> setting.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Remove (System.Windows.FrameworkElement containingObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin*</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To interactively control this storyboard, you must use the same <code>containingObject</code> parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.  </p>\n<p> Removing a storyboard&#39;s clock triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_RemoveRequested\" data-linktype=\"relative-path\">RemoveRequested</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Resume\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Resume()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Resumes the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Resume ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Resume_System_Windows_FrameworkContentElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Resume(FrameworkContentElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Resumes the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Resume (System.Windows.FrameworkContentElement containingObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkcontentelement\" data-linktype=\"relative-path\">FrameworkContentElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin*</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Resuming a storyboard that is not paused has no effect.  </p>\n<p> To interactively control this storyboard, you must use the same <code>containingObject</code> parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.  </p>\n<p> Seeking a paused storyboard does not resume it. The only way to resume a paused storyboard is to use the Resume method. Calling the <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.  </p>\n<p> Resuming a paused a storyboard&#39;s clock triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Resume_System_Windows_FrameworkElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Resume(FrameworkElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Resumes the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Resume (System.Windows.FrameworkElement containingObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin*</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Resuming a storyboard that is not paused has no effect.  </p>\n<p> To interactively control this storyboard, you must use the same <code>containingObject</code> parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.  </p>\n<p> Seeking a paused storyboard does not resume it. The only way to resume a paused storyboard is to use the Resume method. Calling the <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.  </p>\n<p> Resuming a paused a storyboard&#39;s clock triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Seek_System_TimeSpan_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Seek(TimeSpan)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Seeks this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> to the specified position. The <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> performs the requested seek when the next clock tick occurs.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Seek (TimeSpan offset);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>offset</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A positive or negative value that describes the amount by which the timeline should move forward or backward.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Note that seek operations do not take the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_SpeedRatio_\" data-linktype=\"relative-path\">SpeedRatio</a> or <a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline#System_Windows_Media_Animation_ParallelTimeline_SlipBehavior_\" data-linktype=\"relative-path\">SlipBehavior</a> settings into account. The storyboard is treated as though it has a <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_SpeedRatio_\" data-linktype=\"relative-path\">SpeedRatio</a> of 1 and no <a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline#System_Windows_Media_Animation_ParallelTimeline_SlipBehavior_\" data-linktype=\"relative-path\">SlipBehavior</a>.  </p>\n<p> To interactively control this storyboard, you must use the same <code>containingObject</code> parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Seek_System_TimeSpan_System_Windows_Media_Animation_TimeSeekOrigin_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Seek(TimeSpan,TimeSeekOrigin)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Seeks this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> to the specified position. The <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> performs the requested seek when the next clock tick occurs.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>offset</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <code>origin</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>origin</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeseekorigin\" data-linktype=\"relative-path\">TimeSeekOrigin</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The position from which <code>offset</code> is applied.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Note that seek operations do not take the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_SpeedRatio_\" data-linktype=\"relative-path\">SpeedRatio</a> or <a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline#System_Windows_Media_Animation_ParallelTimeline_SlipBehavior_\" data-linktype=\"relative-path\">SlipBehavior</a> settings into account. The storyboard is treated as though it has a <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_SpeedRatio_\" data-linktype=\"relative-path\">SpeedRatio</a> of 1 and no <a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline#System_Windows_Media_Animation_ParallelTimeline_SlipBehavior_\" data-linktype=\"relative-path\">SlipBehavior</a>.  </p>\n<p> To interactively control this storyboard, you must use the same <code>containingObject</code> parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Seek_System_Windows_FrameworkContentElement_System_TimeSpan_System_Windows_Media_Animation_TimeSeekOrigin_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Seek(FrameworkContentElement,TimeSpan,TimeSeekOrigin)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Seeks this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> to the specified position. The <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> performs the requested seek when the next clock tick occurs.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Seek (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkcontentelement\" data-linktype=\"relative-path\">FrameworkContentElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>offset</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <code>origin</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>origin</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeseekorigin\" data-linktype=\"relative-path\">TimeSeekOrigin</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The position from which <code>offset</code> is applied.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Note that seek operations do not take the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_SpeedRatio_\" data-linktype=\"relative-path\">SpeedRatio</a> or <a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline#System_Windows_Media_Animation_ParallelTimeline_SlipBehavior_\" data-linktype=\"relative-path\">SlipBehavior</a> settings into account. The storyboard is treated as though it has a <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_SpeedRatio_\" data-linktype=\"relative-path\">SpeedRatio</a> of 1 and no <a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline#System_Windows_Media_Animation_ParallelTimeline_SlipBehavior_\" data-linktype=\"relative-path\">SlipBehavior</a>.  </p>\n<p> This method changes the storyboard clock&#39;s <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_CurrentState_\" data-linktype=\"relative-path\">CurrentState</a> to <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a>. This method has no effect on the timing tree until the next time a tick is processed. As a side-effect, the appropriate events are also not raised until then.  </p>\n<p> To interactively control this storyboard, you must use the same <code>containingObject</code> parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.  </p>\n<p> Seeking a storyboard triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> and <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentStateInvalidated\" data-linktype=\"relative-path\">CurrentStateInvalidated</a> events.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Seek_System_Windows_FrameworkElement_System_TimeSpan_System_Windows_Media_Animation_TimeSeekOrigin_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Seek(FrameworkElement,TimeSpan,TimeSeekOrigin)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Seeks this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> to the specified position. The <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> performs the requested seek when the next clock tick occurs.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Seek (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin*</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>offset</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <code>origin</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>origin</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeseekorigin\" data-linktype=\"relative-path\">TimeSeekOrigin</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The position from which <code>offset</code> is applied.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Note that seek operations do not take the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_SpeedRatio_\" data-linktype=\"relative-path\">SpeedRatio</a> or <a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline#System_Windows_Media_Animation_ParallelTimeline_SlipBehavior_\" data-linktype=\"relative-path\">SlipBehavior</a> settings into account. The storyboard is treated as though it has a <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_SpeedRatio_\" data-linktype=\"relative-path\">SpeedRatio</a> of 1 and no <a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline#System_Windows_Media_Animation_ParallelTimeline_SlipBehavior_\" data-linktype=\"relative-path\">SlipBehavior</a>.  </p>\n<p> This method changes the storyboard clock&#39;s <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_CurrentState_\" data-linktype=\"relative-path\">CurrentState</a> to <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a>. This method has no effect on the timing tree until the next time a tick is processed. As a side-effect, the appropriate events are also not raised until then.  </p>\n<p> To interactively control this storyboard, you must use the same <code>containingObject</code> parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed if it is made controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.  </p>\n<p> Seeking a storyboard triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> and <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentStateInvalidated\" data-linktype=\"relative-path\">CurrentStateInvalidated</a> events.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_SeekAlignedToLastTick_System_TimeSpan_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SeekAlignedToLastTick(TimeSpan)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Seeks this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> to a new position immediately (synchronously).</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SeekAlignedToLastTick (TimeSpan offset);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>offset</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A positive or negative value that describes the amount by which the timeline should move forward or backward.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p><a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_SeekAlignedToLastTick_\" data-linktype=\"relative-path\">SeekAlignedToLastTick</a> aligns the seeked time of the <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> with the last clock tick. Values are immediately updated to reflect the changes due to <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_SeekAlignedToLastTick_\" data-linktype=\"relative-path\">SeekAlignedToLastTick</a>, even though the screen does not reflect these changes until the screen updates.  </p>\n<p> Note that seek operations do not take the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_SpeedRatio_\" data-linktype=\"relative-path\">SpeedRatio</a> or <a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline#System_Windows_Media_Animation_ParallelTimeline_SlipBehavior_\" data-linktype=\"relative-path\">SlipBehavior</a> settings into account. The storyboard is treated as though it has a <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_SpeedRatio_\" data-linktype=\"relative-path\">SpeedRatio</a> of 1 and no <a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline#System_Windows_Media_Animation_ParallelTimeline_SlipBehavior_\" data-linktype=\"relative-path\">SlipBehavior</a>.  </p>\n<p> To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_SeekAlignedToLastTick_System_TimeSpan_System_Windows_Media_Animation_TimeSeekOrigin_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SeekAlignedToLastTick(TimeSpan,TimeSeekOrigin)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Seeks this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> to a new position immediately (synchronously).</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>offset</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <code>origin</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>origin</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeseekorigin\" data-linktype=\"relative-path\">TimeSeekOrigin</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The position from which <code>offset</code> is applied.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p><a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_SeekAlignedToLastTick_\" data-linktype=\"relative-path\">SeekAlignedToLastTick</a> aligns the seeked time of the <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> with the last clock tick. Values are immediately updated to reflect the changes due to <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_SeekAlignedToLastTick_\" data-linktype=\"relative-path\">SeekAlignedToLastTick</a>, even though the screen does not reflect these changes until the screen updates.  </p>\n<p> Note that seek operations do not take the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_SpeedRatio_\" data-linktype=\"relative-path\">SpeedRatio</a> or <a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline#System_Windows_Media_Animation_ParallelTimeline_SlipBehavior_\" data-linktype=\"relative-path\">SlipBehavior</a> settings into account. The storyboard is treated as though it has a <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_SpeedRatio_\" data-linktype=\"relative-path\">SpeedRatio</a> of 1 and no <a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline#System_Windows_Media_Animation_ParallelTimeline_SlipBehavior_\" data-linktype=\"relative-path\">SlipBehavior</a>.  </p>\n<p> To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_SeekAlignedToLastTick_System_Windows_FrameworkContentElement_System_TimeSpan_System_Windows_Media_Animation_TimeSeekOrigin_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SeekAlignedToLastTick(FrameworkContentElement,TimeSpan,TimeSeekOrigin)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Seeks this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> to a new position immediately (synchronously).</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SeekAlignedToLastTick (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkcontentelement\" data-linktype=\"relative-path\">FrameworkContentElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>offset</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <code>origin</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>origin</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeseekorigin\" data-linktype=\"relative-path\">TimeSeekOrigin</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The position from which <code>offset</code> is applied.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p><a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_SeekAlignedToLastTick_\" data-linktype=\"relative-path\">SeekAlignedToLastTick</a> aligns the seeked time of the <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> with the last clock tick. Values are immediately updated to reflect the changes due to <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_SeekAlignedToLastTick_\" data-linktype=\"relative-path\">SeekAlignedToLastTick</a>, even though the screen does not reflect these changes until the screen updates.  </p>\n<p> Note that seek operations do not take the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_SpeedRatio_\" data-linktype=\"relative-path\">SpeedRatio</a> or <a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline#System_Windows_Media_Animation_ParallelTimeline_SlipBehavior_\" data-linktype=\"relative-path\">SlipBehavior</a> settings into account. The storyboard is treated as though it has a <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_SpeedRatio_\" data-linktype=\"relative-path\">SpeedRatio</a> of 1 and no <a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline#System_Windows_Media_Animation_ParallelTimeline_SlipBehavior_\" data-linktype=\"relative-path\">SlipBehavior</a>.  </p>\n<p> This method changes the storyboard clock&#39;s <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_CurrentState_\" data-linktype=\"relative-path\">CurrentState</a> to  </p>\n<p> <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a>.  </p>\n<p> Seeking a storyboard triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> and <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentStateInvalidated\" data-linktype=\"relative-path\">CurrentStateInvalidated</a> events.  </p>\n<p> To interactively control this storyboard, you must use the same <code>containingObject</code> parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_SeekAlignedToLastTick_System_Windows_FrameworkElement_System_TimeSpan_System_Windows_Media_Animation_TimeSeekOrigin_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SeekAlignedToLastTick(FrameworkElement,TimeSpan,TimeSeekOrigin)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Seeks this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> to a new position immediately (synchronously).</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SeekAlignedToLastTick (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>offset</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <code>origin</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>origin</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeseekorigin\" data-linktype=\"relative-path\">TimeSeekOrigin</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The position from which <code>offset</code> is applied.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p><a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_SeekAlignedToLastTick_\" data-linktype=\"relative-path\">SeekAlignedToLastTick</a> aligns the seeked time of the <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> with the last clock tick. Values are immediately updated to reflect the changes due to <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_SeekAlignedToLastTick_\" data-linktype=\"relative-path\">SeekAlignedToLastTick</a>, even though the screen does not reflect these changes until the screen updates.  </p>\n<p> Note that seek operations do not take the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_SpeedRatio_\" data-linktype=\"relative-path\">SpeedRatio</a> or <a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline#System_Windows_Media_Animation_ParallelTimeline_SlipBehavior_\" data-linktype=\"relative-path\">SlipBehavior</a> settings into account. The storyboard is treated as though it has a <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_SpeedRatio_\" data-linktype=\"relative-path\">SpeedRatio</a> of 1 and no <a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline#System_Windows_Media_Animation_ParallelTimeline_SlipBehavior_\" data-linktype=\"relative-path\">SlipBehavior</a>.  </p>\n<p> This method changes the storyboard clock&#39;s <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_CurrentState_\" data-linktype=\"relative-path\">CurrentState</a> to  </p>\n<p> <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a>.  </p>\n<p> Seeking a storyboard triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> and <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentStateInvalidated\" data-linktype=\"relative-path\">CurrentStateInvalidated</a> events.  </p>\n<p> To interactively control this storyboard, you must use the same <code>containingObject</code> parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_SetSpeedRatio_System_Double_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetSpeedRatio(Double)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets the interactive speed ratio for the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SetSpeedRatio (double speedRatio);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>speedRatio</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A finite value greater than zero that is the new interactive speed ratio of the storyboard. This value is multiplied against the storyboard&#39;s <span class=\"xref\">stem.Windows.Media.Animation.Timeline.SpeedRatio*</span> value to determine the storyboard&#39;s effective speed. This value does not overwrite the storyboard&#39;s <span class=\"xref\">stem.Windows.Media.Animation.Timeline.SpeedRatio*</span> property. For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <span class=\"xref\">stem.Windows.Media.Animation.Timeline.SpeedRatio*</span> of 0.5 gives the storyboard an effective speed of 1.5.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_SetSpeedRatio_System_Windows_FrameworkContentElement_System_Double_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetSpeedRatio(FrameworkContentElement,Double)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets the interactive speed ratio of the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SetSpeedRatio (System.Windows.FrameworkContentElement containingObject, double speedRatio);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkcontentelement\" data-linktype=\"relative-path\">FrameworkContentElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin*</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>speedRatio</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A finite value greater than zero that is the new interactive speed ratio of the storyboard. This value is multiplied against the storyboard&#39;s <span class=\"xref\">stem.Windows.Media.Animation.Timeline.SpeedRatio*</span> value to determine the storyboard&#39;s effective speed. This value does not overwrite the storyboard&#39;s <span class=\"xref\">stem.Windows.Media.Animation.Timeline.SpeedRatio*</span> property. For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <span class=\"xref\">stem.Windows.Media.Animation.Timeline.SpeedRatio*</span> of 0.5 gives the storyboard an effective speed of 1.5.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To interactively control this storyboard, you must use the same <code>containingObject</code> parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.  </p>\n<p> Calling this method triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_SetSpeedRatio_System_Windows_FrameworkElement_System_Double_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetSpeedRatio(FrameworkElement,Double)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets the interactive speed ratio of the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SetSpeedRatio (System.Windows.FrameworkElement containingObject, double speedRatio);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin*</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>speedRatio</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A finite value greater than zero that is the new interactive speed ratio of the storyboard. This value is multiplied against the storyboard&#39;s <span class=\"xref\">stem.Windows.Media.Animation.Timeline.SpeedRatio*</span> value to determine the storyboard&#39;s effective speed. This value does not overwrite the storyboard&#39;s <span class=\"xref\">stem.Windows.Media.Animation.Timeline.SpeedRatio*</span> property. For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <span class=\"xref\">stem.Windows.Media.Animation.Timeline.SpeedRatio*</span> of 0.5 gives the storyboard an effective speed of 1.5.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To interactively control this storyboard, you must use the same <code>containingObject</code> parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.  </p>\n<p> Calling this method triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_SetTarget_System_Windows_DependencyObject_System_Windows_DependencyObject_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetTarget(DependencyObject,DependencyObject)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Makes the specified <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> target the dependency object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void SetTarget (System.Windows.DependencyObject element, System.Windows.DependencyObject value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>element</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> that should target the specified dependency object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The dependency object to target.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method sets the &lt;xref:System.Windows.Media.Animation.Storyboard.Target%2A&gt; attached property on the specified object. For more information about how storyboard targeting works, see &lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;. For more information about how attached properties work, see <a href=\"../Topic/Attached%20Properties%20Overview.md\" data-linktype=\"relative-path\">Attached Properties Overview</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The &lt;xref:System.Windows.Media.Animation.Storyboard.Target%2A&gt; property is not serializable, because it can be set to any <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a>. It is not guaranteed that this object can be correctly referenced from XAML.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_SetTargetName_System_Windows_DependencyObject_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetTargetName(DependencyObject,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Makes the specified <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> target the dependency object with the specified name.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void SetTargetName (System.Windows.DependencyObject element, string name);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>element</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> that should target the specified dependency object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>name</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the dependency object to target.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method sets the &lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt; attached property on the specified object. For more information about how storyboard targeting works, see &lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;. For more information about how attached properties work, see <a href=\"../Topic/Attached%20Properties%20Overview.md\" data-linktype=\"relative-path\">Attached Properties Overview</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_SetTargetProperty_System_Windows_DependencyObject_System_Windows_PropertyPath_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetTargetProperty(DependencyObject,PropertyPath)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Makes the specified <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> target the specified dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void SetTargetProperty (System.Windows.DependencyObject element, System.Windows.PropertyPath path);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>element</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> with which to associate the specified dependency property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>path</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.propertypath\" data-linktype=\"relative-path\">PropertyPath</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A path that describe the dependency property to be animated.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method sets the &lt;xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A&gt; attached property on the specified object. For more information about how storyboard targeting works, see &lt;xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A&gt;. For more information about how attached properties work, see <a href=\"../Topic/Attached%20Properties%20Overview.md\" data-linktype=\"relative-path\">Attached Properties Overview</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_SkipToFill\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SkipToFill()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Advances the current time of this storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> to the end of its active period.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SkipToFill ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_SkipToFill_System_Windows_FrameworkContentElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SkipToFill(FrameworkContentElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Advances the current time of this storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> to the end of its active period.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SkipToFill (System.Windows.FrameworkContentElement containingObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkcontentelement\" data-linktype=\"relative-path\">FrameworkContentElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin*</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method advances the storyboard&#39;s current time to the end of its active period; the storyboard&#39;s behavior at this point is specified by its <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_FillBehavior_\" data-linktype=\"relative-path\">FillBehavior</a> setting. If <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_FillBehavior_\" data-linktype=\"relative-path\">FillBehavior</a> is set to <a class=\"xref\" href=\"system.windows.media.animation.fillbehavior\" data-linktype=\"relative-path\">FillBehavior</a>, the storyboard fills; if the property is set to <a class=\"xref\" href=\"system.windows.media.animation.fillbehavior\" data-linktype=\"relative-path\">FillBehavior</a>, the storyboard stops.  </p>\n<p> Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect. Calling this method on an inactive storyboard has no effect.  </p>\n<p> Advancing a clock to its fill period triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> and <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentStateInvalidated\" data-linktype=\"relative-path\">CurrentStateInvalidated</a> events.  </p>\n<p> To interactively control this storyboard, you must use the same <code>containingObject</code> parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_SkipToFill_System_Windows_FrameworkElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SkipToFill(FrameworkElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Advances the current time of this storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> to the end of its active period.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SkipToFill (System.Windows.FrameworkElement containingObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin*</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method advances the storyboard&#39;s current time to the end of its active period; the storyboard&#39;s behavior at this point is specified by its <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_FillBehavior_\" data-linktype=\"relative-path\">FillBehavior</a> setting. If <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_FillBehavior_\" data-linktype=\"relative-path\">FillBehavior</a> is set to <a class=\"xref\" href=\"system.windows.media.animation.fillbehavior\" data-linktype=\"relative-path\">FillBehavior</a>, the storyboard fills; if the property is set to <a class=\"xref\" href=\"system.windows.media.animation.fillbehavior\" data-linktype=\"relative-path\">FillBehavior</a>, the storyboard stops.  </p>\n<p> Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect. Calling this method on an inactive storyboard has no effect.  </p>\n<p> Advancing a clock to its fill period triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> and <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentStateInvalidated\" data-linktype=\"relative-path\">CurrentStateInvalidated</a> events.  </p>\n<p> To interactively control this storyboard, you must use the same <code>containingObject</code> parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Stop\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Stop()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Stops the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Stop ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Note that stopping a storyboard does not fire the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_Completed\" data-linktype=\"relative-path\">Completed</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Stop_System_Windows_FrameworkContentElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Stop(FrameworkContentElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Stops the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Stop (System.Windows.FrameworkContentElement containingObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkcontentelement\" data-linktype=\"relative-path\">FrameworkContentElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin*</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a> storyboard no longer affects its target properties: properties that were animated revert to their previous values.  </p>\n<p> Stopping a clock triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> and <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentStateInvalidated\" data-linktype=\"relative-path\">CurrentStateInvalidated</a> events, but not the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_Completed\" data-linktype=\"relative-path\">Completed</a> event.  </p>\n<p> To interactively control this storyboard, you must use the same <code>containingObject</code> parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Media_Animation_Storyboard_Stop_System_Windows_FrameworkElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Stop(FrameworkElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Stops the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Stop (System.Windows.FrameworkElement containingObject);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>containingObject</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object specified when the <span class=\"xref\">stem.Windows.Media.Animation.Storyboard.Begin*</span> method was called. This object contains the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects that were created for this storyboard and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a> storyboard no longer affects its target properties: properties that were animated revert to their previous values.  </p>\n<p> Stopping a clock triggers the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> and <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentStateInvalidated\" data-linktype=\"relative-path\">CurrentStateInvalidated</a> events, but not the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_Completed\" data-linktype=\"relative-path\">Completed</a> event.  </p>\n<p> To interactively control this storyboard, you must use the same <code>containingObject</code> parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method and specify <code>true</code> to make it controllable. For an example, see <a href=\"../Topic/How%20to:%20Control%20a%20Storyboard%20After%20It%20Starts.md\" data-linktype=\"relative-path\">How to: Control a Storyboard After It Starts</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Media.Animation.Storyboard.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Media.Animation.Storyboard.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.Begin\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.Clone\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.CreateInstanceCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.GetCurrentIteration\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.GetCurrentProgress\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.GetCurrentState\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.GetCurrentTime\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.GetIsPaused\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.GetTarget\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.GetTargetName\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.GetTargetProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.Pause\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.Remove\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.Resume\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.Seek\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.SetSpeedRatio\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.SetTarget\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.SetTargetName\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.SetTargetProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.SkipToFill\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.Stop\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.TargetNameProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.TargetProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Storyboard.TargetPropertyProperty\">\r\n<meta name=\"APILocation\" content=\"PresentationFramework.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"e7d7fd79-4a53-b519-f708-3ce92cca6750\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"A container timeline that provides object and property targeting information for its child animations.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Media.Animation/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Media.Animation.Storyboard\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Media.Animation.Storyboard.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Media.Animation.Storyboard.yml","open_to_public_contributors":true,"api_name":["System.Windows.Media.Animation.Storyboard","System.Windows.Media.Animation.Storyboard..ctor","System.Windows.Media.Animation.Storyboard.Begin","System.Windows.Media.Animation.Storyboard.Clone","System.Windows.Media.Animation.Storyboard.CreateInstanceCore","System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed","System.Windows.Media.Animation.Storyboard.GetCurrentIteration","System.Windows.Media.Animation.Storyboard.GetCurrentProgress","System.Windows.Media.Animation.Storyboard.GetCurrentState","System.Windows.Media.Animation.Storyboard.GetCurrentTime","System.Windows.Media.Animation.Storyboard.GetIsPaused","System.Windows.Media.Animation.Storyboard.GetTarget","System.Windows.Media.Animation.Storyboard.GetTargetName","System.Windows.Media.Animation.Storyboard.GetTargetProperty","System.Windows.Media.Animation.Storyboard.Pause","System.Windows.Media.Animation.Storyboard.Remove","System.Windows.Media.Animation.Storyboard.Resume","System.Windows.Media.Animation.Storyboard.Seek","System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick","System.Windows.Media.Animation.Storyboard.SetSpeedRatio","System.Windows.Media.Animation.Storyboard.SetTarget","System.Windows.Media.Animation.Storyboard.SetTargetName","System.Windows.Media.Animation.Storyboard.SetTargetProperty","System.Windows.Media.Animation.Storyboard.SkipToFill","System.Windows.Media.Animation.Storyboard.Stop","System.Windows.Media.Animation.Storyboard.TargetNameProperty","System.Windows.Media.Animation.Storyboard.TargetProperty","System.Windows.Media.Animation.Storyboard.TargetPropertyProperty"],"api_location":["PresentationFramework.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Media.Animation.Storyboard","System::Windows::Media::Animation::Storyboard","System.Windows.Media.Animation.Storyboard.#ctor","System::Windows::Media::Animation::Storyboard::#ctor","System.Windows.Media.Animation.Storyboard.Begin","System::Windows::Media::Animation::Storyboard::Begin","System.Windows.Media.Animation.Storyboard.Clone","System::Windows::Media::Animation::Storyboard::Clone","System.Windows.Media.Animation.Storyboard.CreateInstanceCore","System::Windows::Media::Animation::Storyboard::CreateInstanceCore","System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed","System::Windows::Media::Animation::Storyboard::GetCurrentGlobalSpeed","System.Windows.Media.Animation.Storyboard.GetCurrentIteration","System::Windows::Media::Animation::Storyboard::GetCurrentIteration","System.Windows.Media.Animation.Storyboard.GetCurrentProgress","System::Windows::Media::Animation::Storyboard::GetCurrentProgress","System.Windows.Media.Animation.Storyboard.GetCurrentState","System::Windows::Media::Animation::Storyboard::GetCurrentState","System.Windows.Media.Animation.Storyboard.GetCurrentTime","System::Windows::Media::Animation::Storyboard::GetCurrentTime","System.Windows.Media.Animation.Storyboard.GetIsPaused","System::Windows::Media::Animation::Storyboard::GetIsPaused","System.Windows.Media.Animation.Storyboard.GetTarget","System::Windows::Media::Animation::Storyboard::GetTarget","System.Windows.Media.Animation.Storyboard.GetTargetName","System::Windows::Media::Animation::Storyboard::GetTargetName","System.Windows.Media.Animation.Storyboard.GetTargetProperty","System::Windows::Media::Animation::Storyboard::GetTargetProperty","System.Windows.Media.Animation.Storyboard.Pause","System::Windows::Media::Animation::Storyboard::Pause","System.Windows.Media.Animation.Storyboard.Remove","System::Windows::Media::Animation::Storyboard::Remove","System.Windows.Media.Animation.Storyboard.Resume","System::Windows::Media::Animation::Storyboard::Resume","System.Windows.Media.Animation.Storyboard.Seek","System::Windows::Media::Animation::Storyboard::Seek","System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick","System::Windows::Media::Animation::Storyboard::SeekAlignedToLastTick","System.Windows.Media.Animation.Storyboard.SetSpeedRatio","System::Windows::Media::Animation::Storyboard::SetSpeedRatio","System.Windows.Media.Animation.Storyboard.SetTarget","System::Windows::Media::Animation::Storyboard::SetTarget","System.Windows.Media.Animation.Storyboard.SetTargetName","System::Windows::Media::Animation::Storyboard::SetTargetName","System.Windows.Media.Animation.Storyboard.SetTargetProperty","System::Windows::Media::Animation::Storyboard::SetTargetProperty","System.Windows.Media.Animation.Storyboard.SkipToFill","System::Windows::Media::Animation::Storyboard::SkipToFill","System.Windows.Media.Animation.Storyboard.Stop","System::Windows::Media::Animation::Storyboard::Stop","System.Windows.Media.Animation.Storyboard.TargetNameProperty","System::Windows::Media::Animation::Storyboard::TargetNameProperty","System.Windows.Media.Animation.Storyboard.TargetProperty","System::Windows::Media::Animation::Storyboard::TargetProperty","System.Windows.Media.Animation.Storyboard.TargetPropertyProperty","System::Windows::Media::Animation::Storyboard::TargetPropertyProperty"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"e7d7fd79-4a53-b519-f708-3ce92cca6750","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Media.Animation/Storyboard.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Storyboard class | Microsoft Docs","_op_ogTitle":"Storyboard class","description":"A container timeline that provides object and property targeting information for its child animations.\n","toc_asset_id":"_splitted/System.Windows.Media.Animation/toc.json","toc_rel":"_splitted/System.Windows.Media.Animation/toc.json","source_url":"","ms.assetid":"System.Windows.Media.Animation.Storyboard","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.media.animation.storyboard","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.media.animation.storyboard","fileRelativePath":"System.Windows.Media.Animation.Storyboard.html"},"themesRelativePathToOutputRoot":"_themes/"}