{"content":"    \r\n    <h1 id=\"System_Windows_Documents_TextPointer\">\r\n      <span class=\"lang-csharp\">TextPointer</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a position within a <a class=\"xref\" href=\"system.windows.documents.flowdocument\" data-linktype=\"relative-path\">FlowDocument</a> or <a class=\"xref\" href=\"system.windows.controls.textblock\" data-linktype=\"relative-path\">TextBlock</a>.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class TextPointer : System.Windows.Documents.ContentPosition</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.documents.contentposition\" data-linktype=\"relative-path\">System.Windows.Documents.ContentPosition</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">TextPointer</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.documents.contentposition#System_Windows_Documents_ContentPosition_Missing\" data-linktype=\"relative-path\">Missing</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The TextPointer class introduces the following terminology:  </p>\n<ul>\n<li><p>Position - Inherently, a TextPointer always points to a <em>position</em> in content.  Such positions either fall between characters in the content, or between flow content element tags that define structure for the content.  </p>\n</li>\n<li><p>Current Position - Because a TextPointer always indicates a position, and because many of the operations that can be performed through a TextPointer are relative to the position currently pointed to by the TextPointer, it makes sense to simply refer to the position indicated by a TextPointer as the <em>current position</em>.  </p>\n</li>\n<li><p>Insertion Position - An <em>insertion position</em> is a position where new content may be added without breaking any semantic rules for the associated content.  In practice, an insertion position is anywhere in content where a caret may be positioned.  An example of a valid TextPointer position that is not an insertion position is the position between two adjacent <a class=\"xref\" href=\"system.windows.documents.paragraph\" data-linktype=\"relative-path\">Paragraph</a> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).  </p>\n</li>\n<li><p>Symbol - For the purposes of TextPointer operations that involve symbols, any of the following is considered to be a <em>symbol</em>:  </p>\n<ul>\n<li><p>An opening or closing tag for a <a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a> element.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> element contained within an <a class=\"xref\" href=\"system.windows.documents.inlineuicontainer\" data-linktype=\"relative-path\">InlineUIContainer</a> or <a class=\"xref\" href=\"system.windows.documents.blockuicontainer\" data-linktype=\"relative-path\">BlockUIContainer</a>.  Note that such a <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> is always counted as exactly one symbol; any additional content or elements contained by the <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> are not counted as symbols.  </p>\n</li>\n<li><p>Each 16-bit <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-unicode-md.md&quot; -->Unicode<!--END INCLUDE --> character inside of a text <a class=\"xref\" href=\"system.windows.documents.run\" data-linktype=\"relative-path\">Run</a> element.  </p>\n</li>\n</ul>\n</li>\n<li><p>Text Container - A <em>text container</em> is the element that forms the ultimate border for the flow content at hand; the position indicated by a TextPointer always falls within a text container.  Currently, a text container must be either a <a class=\"xref\" href=\"system.windows.documents.flowdocument\" data-linktype=\"relative-path\">FlowDocument</a> or a <a class=\"xref\" href=\"system.windows.controls.textblock\" data-linktype=\"relative-path\">TextBlock</a>.  Generally speaking, operations between TextPointer instances in different text containers are not supported.  </p>\n</li>\n<li><p>Document - The content in a text container is referred to as a <em>document</em>, as in the <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_IsInSameDocument_\" data-linktype=\"relative-path\">IsInSameDocument</a> method and the <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_DocumentStart_\" data-linktype=\"relative-path\">DocumentStart</a> and <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_DocumentEnd_\" data-linktype=\"relative-path\">DocumentEnd</a> properties.  </p>\n<p>The TextPointer class is intended to facilitate traversal and manipulation of content that is represented by <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-winclient-md.md&quot; -->Windows Presentation Foundation (WPF)<!--END INCLUDE --> flow content elements; in general, such elements derive from <a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a>.  Some of the operations that TextPointer facilitates include the following:  </p>\n</li>\n<li><p>Perform an ordinal comparison of the current position with a second specified position.  See the <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_CompareTo_\" data-linktype=\"relative-path\">CompareTo</a> method.  </p>\n</li>\n<li><p>Determine the type of content adjacent to the current position in a specified direction.  See the <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_GetPointerContext_\" data-linktype=\"relative-path\">GetPointerContext</a> method and <a class=\"xref\" href=\"system.windows.documents.textpointercontext\" data-linktype=\"relative-path\">TextPointerContext</a> enumeration.  </p>\n</li>\n<li><p>Get the <a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a> that scopes or is adjacent to the current position.  See <a class=\"xref\" href=\"system.windows.documents.paragraph\" data-linktype=\"relative-path\">Paragraph</a> and the <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_GetAdjacentElement_\" data-linktype=\"relative-path\">GetAdjacentElement</a> method.  </p>\n</li>\n<li><p>Get the text container that scopes the current document.  See the <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_Parent_\" data-linktype=\"relative-path\">Parent</a> property.  </p>\n</li>\n<li><p>Get a specified number of characters preceding or following the current position.  See the <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_GetTextInRun_\" data-linktype=\"relative-path\">GetTextInRun</a> method.  </p>\n</li>\n<li><p>Insert a string of characters at the current position.  See the <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_InsertTextInRun_\" data-linktype=\"relative-path\">InsertTextInRun</a> method.  </p>\n</li>\n<li><p>Find line boundaries in content.  See the <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_GetLineStartPosition_\" data-linktype=\"relative-path\">GetLineStartPosition</a> method and <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_IsAtLineStartPosition_\" data-linktype=\"relative-path\">IsAtLineStartPosition</a> property.  </p>\n</li>\n<li><p>Translate between TextPointer positions and symbol offsets into content.  See the <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_GetOffsetToPosition_\" data-linktype=\"relative-path\">GetOffsetToPosition</a> and <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_GetPositionAtOffset_\" data-linktype=\"relative-path\">GetPositionAtOffset</a> methods.  </p>\n</li>\n<li><p>Perform visual hit testing by translating between a TextPointer position and a <a class=\"xref\" href=\"system.windows.point\" data-linktype=\"relative-path\">Point</a> representing relative coordinates.  </p>\n</li>\n<li><p>Find a nearby insertion position, or check whether the current position is an insertion position.  See the <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_GetInsertionPosition_\" data-linktype=\"relative-path\">GetInsertionPosition</a> and <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_GetNextInsertionPosition_\" data-linktype=\"relative-path\">GetNextInsertionPosition</a> methods and the <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_IsAtInsertionPosition_\" data-linktype=\"relative-path\">IsAtInsertionPosition</a> property.  </p>\n<p>The position and <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_LogicalDirection_\" data-linktype=\"relative-path\">LogicalDirection</a> indicated by a TextPointer object are immutable.  When content is edited or modified, the position indicated by a TextPointer does not change relative to the surrounding text; rather the offset of that position from the beginning of content is adjusted correspondingly to reflect the new relative position in content.  For example, a TextPointer that indicates a position at the beginning of a given paragraph continues to point to the beginning of that paragraph even when content is inserted or deleted before or after the paragraph.  </p>\n<p>The TextPointer class does not provide any public constructors.  An instance of TextPointer is created by using properties or methods of other objects (including other TextPointer objects). The following list provides a few examples of methods and properties that create and return a TextPointer.  This list is not exhaustive:  </p>\n</li>\n<li><p>From a <a class=\"xref\" href=\"system.windows.documents.textrange\" data-linktype=\"relative-path\">TextRange</a>: <a class=\"xref\" href=\"system.windows.documents.textrange#System_Windows_Documents_TextRange_Start_\" data-linktype=\"relative-path\">Start</a> and <a class=\"xref\" href=\"system.windows.documents.textrange#System_Windows_Documents_TextRange_End_\" data-linktype=\"relative-path\">End</a>.  </p>\n</li>\n<li><p>From a <a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a>:  <a class=\"xref\" href=\"system.windows.documents.textelement#System_Windows_Documents_TextElement_ContentStart_\" data-linktype=\"relative-path\">ContentStart</a>, <a class=\"xref\" href=\"system.windows.documents.textelement#System_Windows_Documents_TextElement_ContentEnd_\" data-linktype=\"relative-path\">ContentEnd</a>, <a class=\"xref\" href=\"system.windows.documents.textelement#System_Windows_Documents_TextElement_ElementStart_\" data-linktype=\"relative-path\">ElementStart</a>, and <a class=\"xref\" href=\"system.windows.documents.textelement#System_Windows_Documents_TextElement_ElementEnd_\" data-linktype=\"relative-path\">ElementEnd</a>.  </p>\n</li>\n<li><p>From a <a class=\"xref\" href=\"system.windows.controls.textblock\" data-linktype=\"relative-path\">TextBlock</a> (text container): <a class=\"xref\" href=\"system.windows.controls.textblock#System_Windows_Controls_TextBlock_ContentStart_\" data-linktype=\"relative-path\">ContentStart</a>, <a class=\"xref\" href=\"system.windows.controls.textblock#System_Windows_Controls_TextBlock_ContentEnd_\" data-linktype=\"relative-path\">ContentEnd</a>, and <a class=\"xref\" href=\"system.windows.controls.textblock#System_Windows_Controls_TextBlock_GetPositionFromPoint_\" data-linktype=\"relative-path\">GetPositionFromPoint</a>.  </p>\n</li>\n<li><p>From a <a class=\"xref\" href=\"system.windows.documents.flowdocument\" data-linktype=\"relative-path\">FlowDocument</a> (text container): <a class=\"xref\" href=\"system.windows.documents.flowdocument#System_Windows_Documents_FlowDocument_ContentStart_\" data-linktype=\"relative-path\">ContentStart</a>, and <a class=\"xref\" href=\"system.windows.documents.flowdocument#System_Windows_Documents_FlowDocument_ContentEnd_\" data-linktype=\"relative-path\">ContentEnd</a>  </p>\n</li>\n<li><p>From an existing TextPointer: <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_DocumentStart_\" data-linktype=\"relative-path\">DocumentStart</a>, <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_DocumentEnd_\" data-linktype=\"relative-path\">DocumentEnd</a>, <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_GetNextInsertionPosition_\" data-linktype=\"relative-path\">GetNextInsertionPosition</a>, and <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_GetPositionAtOffset_\" data-linktype=\"relative-path\">GetPositionAtOffset</a>.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_DocumentEnd\" data-linktype=\"self-bookmark\">DocumentEnd</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> at the end of content in the text container associated with the current position.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_DocumentStart\" data-linktype=\"self-bookmark\">DocumentStart</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> at the beginning of content in the text container associated with the current position.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_HasValidLayout\" data-linktype=\"self-bookmark\">HasValidLayout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the text container associated with the current position has a valid (up-to-date) layout.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_IsAtInsertionPosition\" data-linktype=\"self-bookmark\">IsAtInsertionPosition</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the current position is an insertion position.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_IsAtLineStartPosition\" data-linktype=\"self-bookmark\">IsAtLineStartPosition</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the current position is at the beginning of a line.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_LogicalDirection\" data-linktype=\"self-bookmark\">LogicalDirection</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the logical direction associated with the current position which is used to disambiguate content associated with the current position.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_Paragraph\" data-linktype=\"self-bookmark\">Paragraph</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the paragraph that scopes the current position, if any.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_Parent\" data-linktype=\"self-bookmark\">Parent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the logical parent that scopes the current position.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_CompareTo_System_Windows_Documents_TextPointer_\" data-linktype=\"self-bookmark\">CompareTo(TextPointer)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs an ordinal comparison between the positions specified by the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> and a second specified <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_DeleteTextInRun_System_Int32_\" data-linktype=\"self-bookmark\">DeleteTextInRun(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deletes the specified number of characters from the position indicated by the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_GetAdjacentElement_System_Windows_Documents_LogicalDirection_\" data-linktype=\"self-bookmark\">GetAdjacentElement(LogicalDirection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the element, if any, that borders the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> in the specified logical direction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_GetCharacterRect_System_Windows_Documents_LogicalDirection_\" data-linktype=\"self-bookmark\">GetCharacterRect(LogicalDirection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a bounding box (<a class=\"xref\" href=\"system.windows.rect\" data-linktype=\"relative-path\">Rect</a>) for content that borders the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> in the specified logical direction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_GetInsertionPosition_System_Windows_Documents_LogicalDirection_\" data-linktype=\"self-bookmark\">GetInsertionPosition(LogicalDirection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> to the closest insertion position in the specified logical direction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_GetLineStartPosition_System_Int32_\" data-linktype=\"self-bookmark\">GetLineStartPosition(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> to the beginning of a line that is specified relative to the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_GetLineStartPosition_System_Int32_System_Int32__\" data-linktype=\"self-bookmark\">GetLineStartPosition(Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> to the beginning of a line that is specified relative to the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a>, and reports how many lines were skipped.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_GetNextContextPosition_System_Windows_Documents_LogicalDirection_\" data-linktype=\"self-bookmark\">GetNextContextPosition(LogicalDirection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a pointer to the next symbol in the specified logical direction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_GetNextInsertionPosition_System_Windows_Documents_LogicalDirection_\" data-linktype=\"self-bookmark\">GetNextInsertionPosition(LogicalDirection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> to the next insertion position in the specified logical direction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_GetOffsetToPosition_System_Windows_Documents_TextPointer_\" data-linktype=\"self-bookmark\">GetOffsetToPosition(TextPointer)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the count of symbols between the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> and a second specified <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_GetPointerContext_System_Windows_Documents_LogicalDirection_\" data-linktype=\"self-bookmark\">GetPointerContext(LogicalDirection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a category indicator for the content adjacent to the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> in the specified logical direction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_GetPositionAtOffset_System_Int32_\" data-linktype=\"self-bookmark\">GetPositionAtOffset(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> to the position indicated by the specified offset, in symbols, from the beginning of the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_GetPositionAtOffset_System_Int32_System_Windows_Documents_LogicalDirection_\" data-linktype=\"self-bookmark\">GetPositionAtOffset(Int32,LogicalDirection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> to the position indicated by the specified offset, in symbols, from the beginning of the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> and in the specified direction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_GetTextInRun_System_Windows_Documents_LogicalDirection_\" data-linktype=\"self-bookmark\">GetTextInRun(LogicalDirection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a string containing any text adjacent to the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> in the specified logical direction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_GetTextInRun_System_Windows_Documents_LogicalDirection_System_Char___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">GetTextInRun(LogicalDirection,Char[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies the specified maximum number of characters from any adjacent text in the specified direction into a caller-supplied character array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_GetTextRunLength_System_Windows_Documents_LogicalDirection_\" data-linktype=\"self-bookmark\">GetTextRunLength(LogicalDirection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the number of Unicode characters between the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> and the next non-text symbol, in the specified logical direction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_InsertLineBreak\" data-linktype=\"self-bookmark\">InsertLineBreak()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Inserts a line break at the current position.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_InsertParagraphBreak\" data-linktype=\"self-bookmark\">InsertParagraphBreak()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Inserts a paragraph break at the current position.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_InsertTextInRun_System_String_\" data-linktype=\"self-bookmark\">InsertTextInRun(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Inserts the specified text into the text <a class=\"xref\" href=\"system.windows.documents.run\" data-linktype=\"relative-path\">Run</a> at the current position.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_IsInSameDocument_System_Windows_Documents_TextPointer_\" data-linktype=\"self-bookmark\">IsInSameDocument(TextPointer)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the specified position is in the same text container as the current position.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Documents_TextPointer_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This type or member supports the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-winclient-md.md&quot; -->Windows Presentation Foundation (WPF)<!--END INCLUDE --> infrastructure and is not intended to be used directly from your code.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_DocumentEnd\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_DocumentEnd_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DocumentEnd</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> at the end of content in the text container associated with the current position.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Documents.TextPointer DocumentEnd { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> at the end of content in the text container associated with the current position.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_Parent_\" data-linktype=\"relative-path\">Parent</a> for the returned <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> is always a text container (<a class=\"xref\" href=\"system.windows.controls.textblock\" data-linktype=\"relative-path\">TextBlock</a> or <a class=\"xref\" href=\"system.windows.documents.flowdocument\" data-linktype=\"relative-path\">FlowDocument</a>), rather than a <a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_DocumentStart\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_DocumentStart_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DocumentStart</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> at the beginning of content in the text container associated with the current position.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Documents.TextPointer DocumentStart { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> at the beginning of content in the text container associated with the current position.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the position returned by this property as a baseline position from which to work with relative offsets to other positions.  The <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_GetOffsetToPosition_\" data-linktype=\"relative-path\">GetOffsetToPosition</a> and <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_GetPositionAtOffset_\" data-linktype=\"relative-path\">GetPositionAtOffset</a> methods provide a way to translate between positions and position offsets.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_Parent_\" data-linktype=\"relative-path\">Parent</a> for the returned <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> is always a text container (<a class=\"xref\" href=\"system.windows.controls.textblock\" data-linktype=\"relative-path\">TextBlock</a> or <a class=\"xref\" href=\"system.windows.documents.flowdocument\" data-linktype=\"relative-path\">FlowDocument</a>), rather than a <a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_HasValidLayout\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_HasValidLayout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HasValidLayout</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the text container associated with the current position has a valid (up-to-date) layout.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool HasValidLayout { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the layout is current and valid; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When necessary, operations that depend on a valid layout (such as the <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_GetLineStartPosition_\" data-linktype=\"relative-path\">GetLineStartPosition</a> method, <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_GetCharacterRect_\" data-linktype=\"relative-path\">GetCharacterRect</a> method, and <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_IsAtLineStartPosition_\" data-linktype=\"relative-path\">IsAtLineStartPosition</a> property) attempt to automatically regenerate a valid layout before proceeding with the operation.  Regenerating a layout can be a relatively expensive operation.  Use this property to check for a valid layout before performing operations that may regenerate the layout.  For more information, see <a href=\"../Topic/Layout.md\" data-linktype=\"relative-path\">Layout</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_IsAtInsertionPosition\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_IsAtInsertionPosition_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsAtInsertionPosition</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the current position is an insertion position.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsAtInsertionPosition { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current position is an insertion position; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.  In practice, an insertion position is anywhere in content where a caret may be positioned.  An example of a valid <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> position that is not an insertion position is the position between two adjacent <a class=\"xref\" href=\"system.windows.documents.paragraph\" data-linktype=\"relative-path\">Paragraph</a> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_IsAtLineStartPosition\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_IsAtLineStartPosition_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsAtLineStartPosition</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the current position is at the beginning of a line.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsAtLineStartPosition { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current position is at the beginning of a line; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_LogicalDirection_\" data-linktype=\"relative-path\">LogicalDirection</a> property is selected as the relative starting line.  </p>\n<p> The operation performed by this property depends on a valid layout.  When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.  Regenerating a layout can be a relatively expensive operation.  Use the <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_HasValidLayout_\" data-linktype=\"relative-path\">HasValidLayout</a> property to check for a valid layout before performing operations that may regenerate the layout.  For more information, see <a href=\"../Topic/Layout.md\" data-linktype=\"relative-path\">Layout</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_LogicalDirection\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_LogicalDirection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LogicalDirection</div>        \r\n          </div>\r\n    \r\n            <p>Gets the logical direction associated with the current position which is used to disambiguate content associated with the current position.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Documents.LogicalDirection LogicalDirection { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a> value that is associated with the current position.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>As an example of how this property is used, the <a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a> of the <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> returned by a hit test method gives a hit that is between two characters of text. The logical direction specifies which of the two characters was actually hitâ€”the left or the right.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_Paragraph\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_Paragraph_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Paragraph</div>        \r\n          </div>\r\n    \r\n            <p>Gets the paragraph that scopes the current position, if any.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Documents.Paragraph Paragraph { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.paragraph\" data-linktype=\"relative-path\">Paragraph</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.documents.paragraph\" data-linktype=\"relative-path\">Paragraph</a> that scopes the current position, or<code>null</code>if no such paragraph exists.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_Parent\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_Parent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Parent</div>        \r\n          </div>\r\n    \r\n            <p>Gets the logical parent that scopes the current position.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.DependencyObject Parent { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></div>\r\n                  </div>\r\n                  <p>The logical parent that scopes the current position.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_CompareTo_System_Windows_Documents_TextPointer_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_CompareTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CompareTo(TextPointer)</div>        \r\n          </div>\r\n    \r\n            <p>Performs an ordinal comparison between the positions specified by the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> and a second specified <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int CompareTo (System.Windows.Documents.TextPointer position);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>position</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> that specifies a position to compare to the current position.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>â€“1 if the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> precedes <code>position</code>; 0 if the locations are the same; +1 if the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> follows <code>position</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>position</code> specifies a position outside of the text container associated with the current position.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A value of â€“1 indicates that the position specified by the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> precedes the position specified by <code>position</code>.  A value of 0 indicates that the indicated positions are equal.  A value of positive +1 indicates that the position specified by the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> follows the position specified by <code>position</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates a use for this method.  In the example, the CompareTo method is used in conjunction with the <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_GetInsertionPosition_\" data-linktype=\"relative-path\">GetInsertionPosition</a> method to test whether a specified <a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a> is empty.  </p>\n<pre><code class=\"lang-cs\" name=\"TextPointer_Snippets#_TextPointer_GetInsertionPosition\">// Tests to see if the specified TextElement is empty (has no printatble content).\nbool IsElementEmpty(TextElement element)\n{\n    // Find starting and ending insertion positions in the element.\n    // Inward-facing directions are used to make sure that insertion position\n    // will be found correctly in case when the element may contain inline \n    // formatting elements (such as a Span or Run that contains Bold or Italic elements).\n    TextPointer start = element.ContentStart.GetInsertionPosition(LogicalDirection.Forward);\n    TextPointer end = element.ContentEnd.GetInsertionPosition(LogicalDirection.Backward);\n     \n    // The element has no printable content if its first and last insertion positions are equal.\n    return start.CompareTo(end) == 0;\n\n} // End IsEmptyElement method.\n</code></pre><pre><code class=\"lang-vb\" name=\"TextPointer_Snippets#_TextPointer_GetInsertionPosition\">&#39; Tests to see if the specified TextElement is empty (has no printatble content).\nPrivate Function IsElementEmpty(ByVal element As TextElement) As Boolean\n    &#39; Find starting and ending insertion positions in the element.\n    &#39; Inward-facing directions are used to make sure that insertion position\n    &#39; will be found correctly in case when the element may contain inline \n    &#39; formatting elements (such as a Span or Run that contains Bold or Italic elements).\n    Dim start As TextPointer = element.ContentStart.GetInsertionPosition(LogicalDirection.Forward)\n    Dim [end] As TextPointer = element.ContentEnd.GetInsertionPosition(LogicalDirection.Backward)\n\n    &#39; The element has no printable content if its first and last insertion positions are equal.\n    Return start.CompareTo([end]) = 0\n\nEnd Function &#39; End IsEmptyElement method.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_DeleteTextInRun_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_DeleteTextInRun_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeleteTextInRun(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Deletes the specified number of characters from the position indicated by the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int DeleteTextInRun (int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of characters to delete, starting at the current position. Specify a positive value to delete characters that follow the current position; specify a negative value to delete characters that precede the current position.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of characters actually deleted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The method is called at a position where text is not allowed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Specify a positive value to delete characters that follow the current position (as in <a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">System.Windows.Documents.LogicalDirection</a>); specify a negative value to delete characters that precede the current position (as in <a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">System.Windows.Documents.LogicalDirection</a>).  </p>\n<p> The number of characters actually deleted may be less than the number specified by <code>count</code>.  This happens in cases where <code>count</code> specifies more characters than exist to be deleted.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_GetAdjacentElement_System_Windows_Documents_LogicalDirection_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_GetAdjacentElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetAdjacentElement(LogicalDirection)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the element, if any, that borders the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> in the specified logical direction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.DependencyObject GetAdjacentElement (System.Windows.Documents.LogicalDirection direction);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>direction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a> values that specifies the logical direction in which to search for an adjacent element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></div>\r\n                  </div>\r\n                  <p>The adjacent element in the specified <code>direction</code>, or <code>null</code> if no adjacent element exists.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The returned element is typically a <a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a>.  A <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> can be returned when the <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> indicates a position inside a <a class=\"xref\" href=\"system.windows.documents.blockuicontainer\" data-linktype=\"relative-path\">BlockUIContainer</a> element or an <a class=\"xref\" href=\"system.windows.documents.inlineuicontainer\" data-linktype=\"relative-path\">InlineUIContainer</a> element.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_GetCharacterRect_System_Windows_Documents_LogicalDirection_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_GetCharacterRect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCharacterRect(LogicalDirection)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a bounding box (<a class=\"xref\" href=\"system.windows.rect\" data-linktype=\"relative-path\">Rect</a>) for content that borders the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> in the specified logical direction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Rect GetCharacterRect (System.Windows.Documents.LogicalDirection direction);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>direction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a> values that specifies the logical direction in which to find a content bounding box.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.rect\" data-linktype=\"relative-path\">Rect</a></div>\r\n                  </div>\r\n                  <p>A bounding box for content that borders the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> in the specified direction, or <span class=\"xref\">stem.Windows.Rect.Empty*</span> if current, valid layout information is unavailable.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a> edges are not considered content for the purposes of this method.  If the <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> is positioned before a <a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a> edge, the return value is a bounding box for the next non-<a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a> content in the specified direction.  If there is no content in the specified direction, a zero-width <a class=\"xref\" href=\"system.windows.rect\" data-linktype=\"relative-path\">Rect</a> is returned with a height matching the height of any preceding content.  </p>\n<p> The operation performed by this method depends on a valid layout.  When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.  Regenerating a layout can be a relatively expensive operation.  Use the <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_HasValidLayout_\" data-linktype=\"relative-path\">HasValidLayout</a> property to check for a valid layout before performing operations that may regenerate the layout.  For more information, see <a href=\"../Topic/Layout.md\" data-linktype=\"relative-path\">Layout</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_GetInsertionPosition_System_Windows_Documents_LogicalDirection_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_GetInsertionPosition_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetInsertionPosition(LogicalDirection)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> to the closest insertion position in the specified logical direction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Documents.TextPointer GetInsertionPosition (System.Windows.Documents.LogicalDirection direction);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>direction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a> values that specifies the logical direction in which to search for the closest insertion position.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> to the closest insertion position in the specified direction.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.  In practice, an insertion position is anywhere in content where a caret may be positioned.  An example of a valid <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> position that is not an insertion position is the position between two adjacent <a class=\"xref\" href=\"system.windows.documents.paragraph\" data-linktype=\"relative-path\">Paragraph</a> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).  </p>\n<p> If the <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> already points to a valid insertion position, but the closing tag for a non-empty formatting sequence directly follows that position in the given direction, then the <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> returned by this method is adjusted to point to the insertion position just after the close of the formatting sequence.    For example, consider the markup sequence <code>&lt;Bold&gt;``a``&lt;/Bold&gt;``b</code>.  Note that there are two insertion positions between the letters <code>a</code> and <code>b</code>â€”one that precedes the closing <code>Bold</code> tag, and one directly following the closing <code>Bold</code> tag.  If GetInsertionPosition is called on a <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> to the position directly after the letter <code>a</code> and before of the closing <code>Bold</code> tag, and with a <code>direction</code> of <a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a>, the returned <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> is adjusted to point to the position just before the letter <code>b</code>, after the closing <code>Bold</code> tag.  A similar adjustment is made for opening formatting tags when working in the opposite logical direction.  This method is intended to provide a means of disambiguation between insertion positions in similar cases.  </p>\n<p> This method can also be used to be selective about insertion points when a sequence of structural tags is involved. For example, when at a position between closing and opening paragraph tags, the direction parameter can be used to select the closest insertion point at the beginning of the following paragraph (by specifying <a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">System.Windows.Documents.LogicalDirection</a>) or at the end of the preceding paragraph (by specifying <a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">System.Windows.Documents.LogicalDirection</a>).  </p>\n<p> If the pointer is already at insertion position, and there are no adjacent formatting tags in the specified <code>direction</code>, the returned <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> points to the same position as the calling <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a>.  </p>\n<p> It is possible that no valid insertion position exists relative to the position pointed to by a <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a>.  This can happen if the referenced content is structurally incomplete, as in an empty table or list.  In such cases, this method simply returns a <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> to the same position as the <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> from which this method was called.  This method always returns a valid <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example shows how to use the GetInsertionPosition method to check whether a specified <a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a> is empty of printable content.  </p>\n<pre><code class=\"lang-cs\" name=\"TextPointer_Snippets#_TextPointer_GetInsertionPosition\">// Tests to see if the specified TextElement is empty (has no printatble content).\nbool IsElementEmpty(TextElement element)\n{\n    // Find starting and ending insertion positions in the element.\n    // Inward-facing directions are used to make sure that insertion position\n    // will be found correctly in case when the element may contain inline \n    // formatting elements (such as a Span or Run that contains Bold or Italic elements).\n    TextPointer start = element.ContentStart.GetInsertionPosition(LogicalDirection.Forward);\n    TextPointer end = element.ContentEnd.GetInsertionPosition(LogicalDirection.Backward);\n     \n    // The element has no printable content if its first and last insertion positions are equal.\n    return start.CompareTo(end) == 0;\n\n} // End IsEmptyElement method.\n</code></pre><pre><code class=\"lang-vb\" name=\"TextPointer_Snippets#_TextPointer_GetInsertionPosition\">&#39; Tests to see if the specified TextElement is empty (has no printatble content).\nPrivate Function IsElementEmpty(ByVal element As TextElement) As Boolean\n    &#39; Find starting and ending insertion positions in the element.\n    &#39; Inward-facing directions are used to make sure that insertion position\n    &#39; will be found correctly in case when the element may contain inline \n    &#39; formatting elements (such as a Span or Run that contains Bold or Italic elements).\n    Dim start As TextPointer = element.ContentStart.GetInsertionPosition(LogicalDirection.Forward)\n    Dim [end] As TextPointer = element.ContentEnd.GetInsertionPosition(LogicalDirection.Backward)\n\n    &#39; The element has no printable content if its first and last insertion positions are equal.\n    Return start.CompareTo([end]) = 0\n\nEnd Function &#39; End IsEmptyElement method.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_GetLineStartPosition_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_GetLineStartPosition_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetLineStartPosition(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> to the beginning of a line that is specified relative to the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Documents.TextPointer GetLineStartPosition (int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of start-of-line markers to skip when determining the line for which to return the starting position. Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> pointing to the beginning of the specified line (with the <span class=\"xref\">stem.Windows.Documents.TextPointer.LogicalDirection*</span> set to <a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a>), or <code>null</code> if the specified line is out of range or otherwise cannot be located.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> points to an ambiguous position, for example, between two lines, the line in the direction specified by <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_LogicalDirection_\" data-linktype=\"relative-path\">LogicalDirection</a> is selected as the relative starting line.  </p>\n<p> The operation performed by this method depends on a valid layout.  When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.  Regenerating a layout can be a relatively expensive operation.  Use <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_HasValidLayout_\" data-linktype=\"relative-path\">HasValidLayout</a> to check for a valid layout before performing operations that may regenerate the layout.  For more information, see <a href=\"../Topic/Layout.md\" data-linktype=\"relative-path\">Layout</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_GetLineStartPosition_System_Int32_System_Int32__\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_GetLineStartPosition_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetLineStartPosition(Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> to the beginning of a line that is specified relative to the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a>, and reports how many lines were skipped.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Documents.TextPointer GetLineStartPosition (int count, out int actualCount);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of start-of-line markers to skip when determining the line for which to return the starting position. Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>actualCount</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, contains the actual number of start-of-line markers that were skipped when determining the line for which to return the starting position.  This value may be less than <code>count</code> if the beginning or end of content is encountered before the specified number of lines are skipped. This parameter is passed uninitialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> pointing to the beginning of the specified line (with the <span class=\"xref\">stem.Windows.Documents.TextPointer.LogicalDirection*</span> set to <a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a>), or to the beginning of the line closest to the specified line if the specified line is out of range.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_LogicalDirection_\" data-linktype=\"relative-path\">LogicalDirection</a> property is selected as the relative starting line.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_GetNextContextPosition_System_Windows_Documents_LogicalDirection_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_GetNextContextPosition_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetNextContextPosition(LogicalDirection)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a pointer to the next symbol in the specified logical direction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Documents.TextPointer GetNextContextPosition (System.Windows.Documents.LogicalDirection direction);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>direction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a> values that specifies the logical direction in which to search for the next symbol.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> to the next symbol in the requested direction, or <code>null</code> if the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> borders the start or end of content.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Any of the following is considered to be a symbol:  </p>\n<ul>\n<li><p>An opening or closing tag for a <a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a> element.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> element contained in an <a class=\"xref\" href=\"system.windows.documents.inlineuicontainer\" data-linktype=\"relative-path\">InlineUIContainer</a> or <a class=\"xref\" href=\"system.windows.documents.blockuicontainer\" data-linktype=\"relative-path\">BlockUIContainer</a>.  Note that such a <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> is always counted as exactly one symbol; any additional content or elements contained by the <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> are not counted as symbols.  </p>\n</li>\n<li><p>A 16-bit <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-unicode-md.md&quot; -->Unicode<!--END INCLUDE --> character inside of a text <a class=\"xref\" href=\"system.windows.documents.run\" data-linktype=\"relative-path\">Run</a> element.  </p>\n<p>If the next symbol is categorized as <a class=\"xref\" href=\"system.windows.documents.textpointercontext\" data-linktype=\"relative-path\">TextPointerContext</a>, <a class=\"xref\" href=\"system.windows.documents.textpointercontext\" data-linktype=\"relative-path\">TextPointerContext</a>, or <a class=\"xref\" href=\"system.windows.documents.textpointercontext\" data-linktype=\"relative-path\">TextPointerContext</a> (as identified by the <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_GetPointerContext_\" data-linktype=\"relative-path\">GetPointerContext</a> method), then the <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> returned by this method is advanced by exactly one symbol from the current position.  </p>\n<p>If the next symbol is categorized as <a class=\"xref\" href=\"system.windows.documents.textpointercontext\" data-linktype=\"relative-path\">TextPointerContext</a>, then the <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> returned by this method is advanced past the text to the next non-text symbol (that is, the next position where the <a class=\"xref\" href=\"system.windows.documents.textpointercontext\" data-linktype=\"relative-path\">TextPointerContext</a> is not <a class=\"xref\" href=\"system.windows.documents.textpointercontext\" data-linktype=\"relative-path\">TextPointerContext</a>).  The exact symbol count crossed can be calculated in advance by calling the <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_GetTextRunLength_\" data-linktype=\"relative-path\">GetTextRunLength</a> method.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates a use for this method.  The example uses the GetNextContextPosition method in conjunction with the <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_GetPointerContext_\" data-linktype=\"relative-path\">GetPointerContext</a> method to traverse and extract the symbols in a specified <a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a>.  </p>\n<p> While the example can be used to extract a <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-titlexaml-md.md&quot; -->XAML<!--END INCLUDE --> structure for the contents of a given <a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a>, it is intended for illustrative purposes only, and should not be used in production code.  See the <a class=\"xref\" href=\"system.xml\" data-linktype=\"relative-path\">System.Xml</a> namespace for a rich set of types designed for working with and processing XML.  </p>\n<pre><code class=\"lang-cs\" name=\"TextPointer_Snippets#_TextPointer_GetNextContextPosition\">// This method will extract and return a string that contains a representation of \n// the XAML structure of content elements in a given TextElement.        \nstring GetXaml(TextElement element)\n{\n    StringBuilder buffer = new StringBuilder();\n \n    // Position a &quot;navigator&quot; pointer before the opening tag of the element.\n    TextPointer navigator = element.ElementStart;\n\n    while (navigator.CompareTo(element.ElementEnd) &lt; 0)\n    {\n        switch (navigator.GetPointerContext(LogicalDirection.Forward))\n        {\n            case TextPointerContext.ElementStart : \n                // Output opening tag of a TextElement\n                buffer.AppendFormat(&quot;&lt;{0}&gt;&quot;, navigator.GetAdjacentElement(LogicalDirection.Forward).GetType().Name);\n                break;\n            case TextPointerContext.ElementEnd :\n                // Output closing tag of a TextElement\n                buffer.AppendFormat(&quot;&lt;/{0}&gt;&quot;, navigator.GetAdjacentElement(LogicalDirection.Forward).GetType().Name);\n                break;\n            case TextPointerContext.EmbeddedElement :\n                // Output simple tag for embedded element\n                buffer.AppendFormat(&quot;&lt;{0}/&gt;&quot;, navigator.GetAdjacentElement(LogicalDirection.Forward).GetType().Name);\n                break;\n            case TextPointerContext.Text :\n                // Output the text content of this text run\n                buffer.Append(navigator.GetTextInRun(LogicalDirection.Forward));\n                break;\n        }\n \n        // Advance the naviagtor to the next context position.\n        navigator = navigator.GetNextContextPosition(LogicalDirection.Forward);\n    \n    } // End while.\n\n    return buffer.ToString();\n\n} // End GetXaml method.\n</code></pre><pre><code class=\"lang-vb\" name=\"TextPointer_Snippets#_TextPointer_GetNextContextPosition\">&#39; This method will extract and return a string that contains a representation of \n&#39; the XAML structure of content elements in a given TextElement.        \nPrivate Function GetXaml_Renamed(ByVal element As TextElement) As String\n    Dim buffer As New StringBuilder()\n\n    &#39; Position a &quot;navigator&quot; pointer before the opening tag of the element.\n    Dim navigator As TextPointer = element.ElementStart\n\n    Do While navigator.CompareTo(element.ElementEnd) &lt; 0\n        Select Case navigator.GetPointerContext(LogicalDirection.Forward)\n            Case TextPointerContext.ElementStart\n                &#39; Output opening tag of a TextElement\n                buffer.AppendFormat(&quot;&lt;{0}&gt;&quot;, navigator.GetAdjacentElement(LogicalDirection.Forward).GetType().Name)\n            Case TextPointerContext.ElementEnd\n                &#39; Output closing tag of a TextElement\n                buffer.AppendFormat(&quot;&lt;/{0}&gt;&quot;, navigator.GetAdjacentElement(LogicalDirection.Forward).GetType().Name)\n            Case TextPointerContext.EmbeddedElement\n                &#39; Output simple tag for embedded element\n                buffer.AppendFormat(&quot;&lt;{0}/&gt;&quot;, navigator.GetAdjacentElement(LogicalDirection.Forward).GetType().Name)\n            Case TextPointerContext.Text\n                &#39; Output the text content of this text run\n                buffer.Append(navigator.GetTextInRun(LogicalDirection.Forward))\n        End Select\n\n        &#39; Advance the naviagtor to the next context position.\n        navigator = navigator.GetNextContextPosition(LogicalDirection.Forward)\n\n    Loop &#39; End while.\n\n    Return buffer.ToString()\n\nEnd Function &#39; End GetXaml method.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_GetNextInsertionPosition_System_Windows_Documents_LogicalDirection_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_GetNextInsertionPosition_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetNextInsertionPosition(LogicalDirection)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> to the next insertion position in the specified logical direction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Documents.TextPointer GetNextInsertionPosition (System.Windows.Documents.LogicalDirection direction);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>direction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a> values that specifies the logical direction in which to search for the next insertion position.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> that identifies the next insertion position in the requested direction, or <code>null</code> if no next insertion position can be found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An <em>insertion position</em> is a position where new content may be added without breaking any semantic rules for the associated content.  In practice, an insertion position is anywhere in content where a caret may be positioned.  An example of a valid <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> position that is not an insertion position is the position between two adjacent <a class=\"xref\" href=\"system.windows.documents.paragraph\" data-linktype=\"relative-path\">Paragraph</a> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates a use for this method. The example uses the GetNextInsertionPosition method to traverse content element boundaries in order to count the number of <a class=\"xref\" href=\"system.windows.documents.paragraph\" data-linktype=\"relative-path\">Paragraph</a> elements present between two specified <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> instances.  </p>\n<pre><code class=\"lang-cs\" name=\"TextPointer_Snippets#_TextPointer_GetNextInsertionPosition\">// This method returns the number of pagragraphs between two\n// specified TextPointers.\nint GetParagraphCount(TextPointer start, TextPointer end)\n{\n    int paragraphCount = 0;\n \n    while (start != null &amp;&amp; start.CompareTo(end) &lt; 0)\n    {\n        Paragraph paragraph = start.Paragraph;\n \n        if (paragraph != null)\n        {\n            paragraphCount++;\n \n            // Advance start to the end of the current paragraph.\n            start = paragraph.ContentEnd;\n         }\n \n         // Use the GetNextInsertionPosition method to skip over any interceding\n         // content element tags.\n         start = start.GetNextInsertionPosition(LogicalDirection.Forward);\n\n     } // End while.\n \n         return paragraphCount;\n \n}  // End GetParagraphCount.\n</code></pre><pre><code class=\"lang-vb\" name=\"TextPointer_Snippets#_TextPointer_GetNextInsertionPosition\">&#39; This method returns the number of pagragraphs between two\n&#39; specified TextPointers.\nPrivate Function GetParagraphCount(ByVal start As TextPointer, ByVal [end] As TextPointer) As Integer\n    Dim paragraphCount As Integer = 0\n\n    Do While start IsNot Nothing AndAlso start.CompareTo([end]) &lt; 0\n        Dim paragraph As Paragraph = start.Paragraph\n\n        If paragraph IsNot Nothing Then\n            paragraphCount += 1\n\n            &#39; Advance start to the end of the current paragraph.\n            start = paragraph.ContentEnd\n        End If\n\n        &#39; Use the GetNextInsertionPosition method to skip over any interceding\n        &#39; content element tags.\n        start = start.GetNextInsertionPosition(LogicalDirection.Forward)\n\n    Loop &#39; End while.\n\n    Return paragraphCount\n\nEnd Function &#39; End GetParagraphCount.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_GetOffsetToPosition_System_Windows_Documents_TextPointer_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_GetOffsetToPosition_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetOffsetToPosition(TextPointer)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the count of symbols between the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> and a second specified <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int GetOffsetToPosition (System.Windows.Documents.TextPointer position);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>position</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> that specifies a position to find the distance (in symbols) to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The relative number of symbols between the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> and <code>position</code>.  A negative value indicates that the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> follows the position specified by <code>position</code>, 0 indicates that the positions are equal, and a positive value indicates that the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> precedes the position specified by <code>position</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>position</code> specifies a position outside of the text container associated with the current position.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Any of the following is considered to be a symbol:  </p>\n<ul>\n<li><p>An opening or closing tag for a <a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a> element.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> element contained in an <a class=\"xref\" href=\"system.windows.documents.inlineuicontainer\" data-linktype=\"relative-path\">InlineUIContainer</a> or <a class=\"xref\" href=\"system.windows.documents.blockuicontainer\" data-linktype=\"relative-path\">BlockUIContainer</a>.  Note that such a <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> is always counted as exactly one symbol; any additional content or elements contained by the <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> are not counted as symbols.  </p>\n</li>\n<li><p>A 16-bit <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-unicode-md.md&quot; -->Unicode<!--END INCLUDE --> character inside of a text <a class=\"xref\" href=\"system.windows.documents.run\" data-linktype=\"relative-path\">Run</a> element.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates a use for this method. The example uses the GetOffsetToPosition method to find the offsets for two <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> instances, and then uses this information to save and restore the selection in a <a class=\"xref\" href=\"system.windows.controls.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a>.  The example assumes that the contents of the <a class=\"xref\" href=\"system.windows.controls.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a> have not changed between a selection save and a selection restore.  </p>\n<pre><code class=\"lang-cs\" name=\"TextPointer_Snippets#_TextPointer_GetOffsetToPosition\">struct SelectionOffsets { internal int Start; internal int End; }\n \nSelectionOffsets GetSelectionOffsetsRTB(RichTextBox richTextBox)\n{\n    SelectionOffsets selectionOffsets;\n \n    TextPointer contentStart = richTextBox.Document.ContentStart;\n\n    // Find the offset for the starting and ending TextPointers.\n    selectionOffsets.Start = contentStart.GetOffsetToPosition(richTextBox.Selection.Start);\n    selectionOffsets.End = contentStart.GetOffsetToPosition(richTextBox.Selection.End);\n\n    return selectionOffsets;\n}\n\nvoid RestoreSelectionOffsetsRTB(RichTextBox richTextBox, SelectionOffsets selectionOffsets)\n{\n    TextPointer contentStart = richTextBox.Document.ContentStart;\n \n    // Use previously determined offsets to create corresponding TextPointers,\n    // and use these to restore the selection.\n    richTextBox.Selection.Select(\n       contentStart.GetPositionAtOffset(selectionOffsets.Start),\n       contentStart.GetPositionAtOffset(selectionOffsets.End)\n    );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"TextPointer_Snippets#_TextPointer_GetOffsetToPosition\">Private Structure SelectionOffsets\n    Friend Start As Integer\n    Friend [End] As Integer\nEnd Structure\n\nPrivate Function GetSelectionOffsetsRTB(ByVal richTextBox As RichTextBox) As SelectionOffsets\n    Dim selectionOffsets As SelectionOffsets\n\n    Dim contentStart As TextPointer = richTextBox.Document.ContentStart\n\n    &#39; Find the offset for the starting and ending TextPointers.\n    selectionOffsets.Start = contentStart.GetOffsetToPosition(richTextBox.Selection.Start)\n    selectionOffsets.End = contentStart.GetOffsetToPosition(richTextBox.Selection.End)\n\n    Return selectionOffsets\nEnd Function\n\nPrivate Sub RestoreSelectionOffsetsRTB(ByVal richTextBox As RichTextBox, ByVal selectionOffsets As SelectionOffsets)\n    Dim contentStart As TextPointer = richTextBox.Document.ContentStart\n\n    &#39; Use previously determined offsets to create corresponding TextPointers,\n    &#39; and use these to restore the selection.\n    richTextBox.Selection.Select(contentStart.GetPositionAtOffset(selectionOffsets.Start), contentStart.GetPositionAtOffset(selectionOffsets.End))\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_GetPointerContext_System_Windows_Documents_LogicalDirection_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_GetPointerContext_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetPointerContext(LogicalDirection)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a category indicator for the content adjacent to the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> in the specified logical direction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Documents.TextPointerContext GetPointerContext (System.Windows.Documents.LogicalDirection direction);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>direction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a> values that specifies the logical direction in which to determine the category for adjacent content.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.textpointercontext\" data-linktype=\"relative-path\">TextPointerContext</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.documents.textpointercontext\" data-linktype=\"relative-path\">TextPointerContext</a> values that indicates the category for adjacent content in the specified logical direction.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates a use for this method. The example uses the GetPointerContext method to implement an algorithm for calculating the balance of opening and closing element tags between two specified <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> positions.  Each opening element tag is counted as +1, and each closing element tag is counted as â€“1.  </p>\n<pre><code class=\"lang-cs\" name=\"TextPointer_Snippets#_TextPointer_GetOffsetToPosition2\">// Calculate and return the relative balance of opening and closing element tags\n// between two specified TextPointers.\nint GetElementTagBalance(TextPointer start, TextPointer end)\n{\n    int balance = 0;\n \n    while (start != null &amp;&amp; start.CompareTo(end) &lt; 0)\n    {\n        TextPointerContext forwardContext = start.GetPointerContext(LogicalDirection.Forward);\n \n        if (forwardContext == TextPointerContext.ElementStart)     balance++;\n        else if (forwardContext == TextPointerContext.ElementEnd)  balance--;\n             \n        start = start.GetNextContextPosition(LogicalDirection.Forward);\n    \n    } // End while.\n \n    return balance;\n\n} // End GetElementTagBalance\n</code></pre><pre><code class=\"lang-vb\" name=\"TextPointer_Snippets#_TextPointer_GetOffsetToPosition2\">&#39; Calculate and return the relative balance of opening and closing element tags\n&#39; between two specified TextPointers.\nPrivate Function GetElementTagBalance(ByVal start As TextPointer, ByVal [end] As TextPointer) As Integer\n    Dim balance As Integer = 0\n\n    Do While start IsNot Nothing AndAlso start.CompareTo([end]) &lt; 0\n        Dim forwardContext As TextPointerContext = start.GetPointerContext(LogicalDirection.Forward)\n\n        If forwardContext = TextPointerContext.ElementStart Then\n            balance += 1\n        ElseIf forwardContext = TextPointerContext.ElementEnd Then\n            balance -= 1\n        End If\n\n        start = start.GetNextContextPosition(LogicalDirection.Forward)\n\n    Loop &#39; End while.\n\n    Return balance\n\nEnd Function &#39; End GetElementTagBalance\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_GetPositionAtOffset_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_GetPositionAtOffset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetPositionAtOffset(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> to the position indicated by the specified offset, in symbols, from the beginning of the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An offset, in symbols, for which to calculate and return the position.  If the offset is negative, the position is calculated in the logical direction opposite of that indicated by the <span class=\"xref\">stem.Windows.Documents.TextPointer.LogicalDirection*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> to the position indicated by the specified offset, or<code>null</code>if no corresponding position can be found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Any of the following is considered to be a symbol:  </p>\n<ul>\n<li><p>An opening or closing tag for the <a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a> element.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> element contained in an <a class=\"xref\" href=\"system.windows.documents.inlineuicontainer\" data-linktype=\"relative-path\">InlineUIContainer</a> or <a class=\"xref\" href=\"system.windows.documents.blockuicontainer\" data-linktype=\"relative-path\">BlockUIContainer</a>.  Note that such a <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> is always counted as exactly one symbol; any additional content or elements contained by the <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> are not counted as symbols.  </p>\n</li>\n<li><p>A 16-bit <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-unicode-md.md&quot; -->Unicode<!--END INCLUDE --> character inside of a text <a class=\"xref\" href=\"system.windows.documents.run\" data-linktype=\"relative-path\">Run</a> element.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates a use for this method. The example uses the GetPositionAtOffset method to implement a pair of methods, one to calculate the offset to a specified position relative to any hosting paragraph, and the other to return a <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> to a specified offset in a specified paragraph.  </p>\n<pre><code class=\"lang-cs\" name=\"TextPointer_Snippets#_TextPointer_GetPositionAtOffset\">// Returns the offset for the specified position relative to any containing paragraph.\nint GetOffsetRelativeToParagraph(TextPointer position)\n{\n    // Adjust the pointer to the closest forward insertion position, and look for any\n    // containing paragraph.\n    Paragraph paragraph = (position.GetInsertionPosition(LogicalDirection.Forward)).Paragraph;\n\n    // Some positions may be not within any Paragraph; \n    // this method returns an offset of -1 to indicate this condition.\n    return (paragraph == null) ? -1 : paragraph.ContentStart.GetOffsetToPosition(position);\n}\n\n// Returns a TextPointer to a specified offset into a specified paragraph. \nTextPointer GetTextPointerRelativeToParagraph(Paragraph paragraph, int offsetRelativeToParagraph)\n{\n    // Verify that the specified offset falls within the specified paragraph.  If the offset is\n    // past the end of the paragraph, return a pointer to the farthest offset position in the paragraph.\n    // Otherwise, return a TextPointer to the specified offset in the specified paragraph.\n    return (offsetRelativeToParagraph &gt; paragraph.ContentStart.GetOffsetToPosition(paragraph.ContentEnd)) \n        ? paragraph.ContentEnd : paragraph.ContentStart.GetPositionAtOffset(offsetRelativeToParagraph);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"TextPointer_Snippets#_TextPointer_GetPositionAtOffset\">&#39; Returns the offset for the specified position relative to any containing paragraph.\nPrivate Function GetOffsetRelativeToParagraph(ByVal position As TextPointer) As Integer\n    &#39; Adjust the pointer to the closest forward insertion position, and look for any\n    &#39; containing paragraph.\n    Dim paragraph As Paragraph = (position.GetInsertionPosition(LogicalDirection.Forward)).Paragraph\n\n    &#39; Some positions may be not within any Paragraph \n    &#39; this method returns an offset of -1 to indicate this condition.\n    Return If((paragraph Is Nothing), -1, paragraph.ContentStart.GetOffsetToPosition(position))\nEnd Function\n\n&#39; Returns a TextPointer to a specified offset into a specified paragraph. \nPrivate Function GetTextPointerRelativeToParagraph(ByVal paragraph As Paragraph, ByVal offsetRelativeToParagraph As Integer) As TextPointer\n    &#39; Verify that the specified offset falls within the specified paragraph.  If the offset is\n    &#39; past the end of the paragraph, return a pointer to the farthest offset position in the paragraph.\n    &#39; Otherwise, return a TextPointer to the specified offset in the specified paragraph.\n    Return If((offsetRelativeToParagraph &gt; paragraph.ContentStart.GetOffsetToPosition(paragraph.ContentEnd)), paragraph.ContentEnd, paragraph.ContentStart.GetPositionAtOffset(offsetRelativeToParagraph))\nEnd Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_GetPositionAtOffset_System_Int32_System_Windows_Documents_LogicalDirection_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_GetPositionAtOffset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetPositionAtOffset(Int32,LogicalDirection)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> to the position indicated by the specified offset, in symbols, from the beginning of the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> and in the specified direction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset, System.Windows.Documents.LogicalDirection direction);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An offset, in symbols, for which to calculate and return the position.  If the offset is negative, the returned <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> precedes the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a>; otherwise, it follows.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>direction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a> values that specifies the logical direction of the returned <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> to the position indicated by the specified offset, or<code>null</code>if the offset extends past the end of the content.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Any of the following is considered to be a symbol:  </p>\n<ul>\n<li><p>An opening or closing tag for the <a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a> element.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> element contained in an <a class=\"xref\" href=\"system.windows.documents.inlineuicontainer\" data-linktype=\"relative-path\">InlineUIContainer</a> or <a class=\"xref\" href=\"system.windows.documents.blockuicontainer\" data-linktype=\"relative-path\">BlockUIContainer</a>.  Note that such a <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> is always counted as exactly one symbol; any additional content or elements contained by the <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> are not counted as symbols.  </p>\n</li>\n<li><p>A 16-bit <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-unicode-md.md&quot; -->Unicode<!--END INCLUDE --> character inside of a text <a class=\"xref\" href=\"system.windows.documents.run\" data-linktype=\"relative-path\">Run</a> element.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_GetTextInRun_System_Windows_Documents_LogicalDirection_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_GetTextInRun_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetTextInRun(LogicalDirection)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a string containing any text adjacent to the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> in the specified logical direction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string GetTextInRun (System.Windows.Documents.LogicalDirection direction);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>direction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a> values that specifies the logical direction in which to find and return any adjacent text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string containing any adjacent text in the specified logical direction, or <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> if no adjacent text can be found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method returns only uninterrupted runs of text.  Nothing is returned if any symbol type other than <a class=\"xref\" href=\"system.windows.documents.textpointercontext\" data-linktype=\"relative-path\">TextPointerContext</a> is adjacent to the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> in the specified direction.  Similarly, text is returned only up to the next non-text symbol.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates a use for this method. The example uses the GetTextInRun method to implement a simple text extractor.  The method returns a string concatenation of all text between two specified <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> instances.  </p>\n<p> While the example can be used to extract any text between two <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> instances, it is intended for illustrative purposes only, and should not be used in production code.  Use the <a class=\"xref\" href=\"system.windows.documents.textrange#System_Windows_Documents_TextRange_Text_\" data-linktype=\"relative-path\">Text</a> property instead.  </p>\n<pre><code class=\"lang-cs\" name=\"TextPointer_Snippets#_TextPointer_GetTextInRun\">// Returns a string containing the text content between two specified TextPointers.\nstring GetTextBetweenTextPointers(TextPointer start, TextPointer end)\n{\n    StringBuilder buffer = new StringBuilder();\n \n    while (start != null &amp;&amp; start.CompareTo(end) &lt; 0)\n    {\n        if (start.GetPointerContext(LogicalDirection.Forward) == TextPointerContext.Text)\n            buffer.Append(start.GetTextInRun(LogicalDirection.Forward));\n \n        // Note that when the TextPointer points into a text run, this skips over the entire\n        // run, not just the current character in the run.\n        start = start.GetNextContextPosition(LogicalDirection.Forward);\n    }\n    return buffer.ToString();\n\n} // End GetTextBetweenPointers.\n</code></pre><pre><code class=\"lang-vb\" name=\"TextPointer_Snippets#_TextPointer_GetTextInRun\">&#39; Returns a string containing the text content between two specified TextPointers.\nPrivate Function GetTextBetweenTextPointers(ByVal start As TextPointer, ByVal [end] As TextPointer) As String\n    Dim buffer As New StringBuilder()\n\n    Do While start IsNot Nothing AndAlso start.CompareTo([end]) &lt; 0\n        If start.GetPointerContext(LogicalDirection.Forward) = TextPointerContext.Text Then\n            buffer.Append(start.GetTextInRun(LogicalDirection.Forward))\n        End If\n\n        &#39; Note that when the TextPointer points into a text run, this skips over the entire\n        &#39; run, not just the current character in the run.\n        start = start.GetNextContextPosition(LogicalDirection.Forward)\n    Loop\n    Return buffer.ToString()\n\nEnd Function &#39; End GetTextBetweenPointers.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_GetTextInRun_System_Windows_Documents_LogicalDirection_System_Char___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_GetTextInRun_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetTextInRun(LogicalDirection,Char[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Copies the specified maximum number of characters from any adjacent text in the specified direction into a caller-supplied character array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int GetTextInRun (System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int startIndex, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>direction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a> values that specifies the logical direction in which to find and copy any adjacent text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>textBuffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A buffer into which any text is copied.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An index into <code>textBuffer</code> at which to begin writing copied text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum number of characters to copy.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of characters actually copied into <code>textBuffer</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>startIndex</code> is less than 0 or greater than the <span class=\"xref\">stem.Array.Length*</span> property of <code>textBuffer</code>.  </p>\n<p> -or-  </p>\n<p> <code>count</code> is less than 0 or greater than the remaining space in <code>textBuffer</code> (<code>textBuffer</code>.<span class=\"xref\">stem.Array.Length*</span> minus <code>startIndex</code>).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method returns only uninterrupted runs of text.  Nothing is returned if any symbol type other than <a class=\"xref\" href=\"system.windows.documents.textpointercontext\" data-linktype=\"relative-path\">TextPointerContext</a> is adjacent to the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> in the specified direction.  Similarly, text is returned only up to the next non-text symbol.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_GetTextRunLength_System_Windows_Documents_LogicalDirection_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_GetTextRunLength_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetTextRunLength(LogicalDirection)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the number of Unicode characters between the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> and the next non-text symbol, in the specified logical direction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int GetTextRunLength (System.Windows.Documents.LogicalDirection direction);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>direction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.documents.logicaldirection\" data-linktype=\"relative-path\">LogicalDirection</a> values that specifies the logical direction in which to count the number of characters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of Unicode characters between the current <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> and the next non-text symbol.  This number may be 0 if there is no adjacent text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Any of the following is considered to be a symbol:  </p>\n<ul>\n<li><p>An opening or closing tag for the <a class=\"xref\" href=\"system.windows.documents.textelement\" data-linktype=\"relative-path\">TextElement</a> element.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> element contained in an <a class=\"xref\" href=\"system.windows.documents.inlineuicontainer\" data-linktype=\"relative-path\">InlineUIContainer</a> or <a class=\"xref\" href=\"system.windows.documents.blockuicontainer\" data-linktype=\"relative-path\">BlockUIContainer</a>.  Note that such a <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> is always counted as exactly one symbol; any additional content or elements contained by the <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> are not counted as symbols.  </p>\n</li>\n<li><p>A 16-bit <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-unicode-md.md&quot; -->Unicode<!--END INCLUDE --> character inside of a text <a class=\"xref\" href=\"system.windows.documents.run\" data-linktype=\"relative-path\">Run</a> element.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_InsertLineBreak\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_InsertLineBreak_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InsertLineBreak()</div>        \r\n          </div>\r\n    \r\n            <p>Inserts a line break at the current position.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Documents.TextPointer InsertLineBreak ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> positioned immediately after the <a class=\"xref\" href=\"system.windows.documents.linebreak\" data-linktype=\"relative-path\">LineBreak</a> element inserted by this method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_InsertParagraphBreak\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_InsertParagraphBreak_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InsertParagraphBreak()</div>        \r\n          </div>\r\n    \r\n            <p>Inserts a paragraph break at the current position.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Documents.TextPointer InsertParagraphBreak ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> to the beginning (<span class=\"xref\">stem.Windows.Documents.TextElement.ContentStart*</span>) of the new paragraph.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This method is called on a position that cannot be split to accommodate a new paragraph, such as in the scope of a <a class=\"xref\" href=\"system.windows.documents.hyperlink\" data-linktype=\"relative-path\">Hyperlink</a> or <a class=\"xref\" href=\"system.windows.documents.inlineuicontainer\" data-linktype=\"relative-path\">InlineUIContainer</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If this method is called when the current position is inside of an existing <a class=\"xref\" href=\"system.windows.documents.paragraph\" data-linktype=\"relative-path\">Paragraph</a> element, the existing paragraph and any content it contains are split into two paragraphs at the current position.  If this method is called when the current position is not inside of an existing paragraph, a new, empty paragraph is inserted.  If this method is called at a position unsuitable for splitting or inserting a paragraph (for example, if the current position is inside of a <a class=\"xref\" href=\"system.windows.documents.hyperlink\" data-linktype=\"relative-path\">Hyperlink</a> element), an exception is thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_InsertTextInRun_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_InsertTextInRun_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InsertTextInRun(String)</div>        \r\n          </div>\r\n    \r\n            <p>Inserts the specified text into the text <a class=\"xref\" href=\"system.windows.documents.run\" data-linktype=\"relative-path\">Run</a> at the current position.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void InsertTextInRun (string textData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>textData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text to insert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The current position is not within a <a class=\"xref\" href=\"system.windows.documents.run\" data-linktype=\"relative-path\">Run</a> element.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>textData</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> is not scoped by a <a class=\"xref\" href=\"system.windows.documents.run\" data-linktype=\"relative-path\">Run</a> element, a <a class=\"xref\" href=\"system.windows.documents.run\" data-linktype=\"relative-path\">Run</a> is inserted along with the <code>textData</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_IsInSameDocument_System_Windows_Documents_TextPointer_\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_IsInSameDocument_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsInSameDocument(TextPointer)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the specified position is in the same text container as the current position.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsInSameDocument (System.Windows.Documents.TextPointer textPosition);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>textPosition</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> that specifies a position to compare to the current position.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>textPosition</code> indicates a position that is in the same text container as the current position; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>textPosition</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Most operations that involve multiple <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> instances are only valid if the instances in question indicate positions that are in the same text container scope.  For example the <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_CompareTo_\" data-linktype=\"relative-path\">CompareTo</a> and <a class=\"xref\" href=\"system.windows.documents.textpointer#System_Windows_Documents_TextPointer_GetOffsetToPosition_\" data-linktype=\"relative-path\">GetOffsetToPosition</a> methods cannot be used with a <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> to a position outside of the text container associated with the current position.  Use this method to verify that a specified <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> is compatible with the current position for such operations.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates a use for this method.  The example uses the IsInSameDocument method to check whether a specified <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> is positioned between two other specified <a class=\"xref\" href=\"system.windows.documents.textpointer\" data-linktype=\"relative-path\">TextPointer</a> instances in a situation when there is no guarantee that all three positions belong to the same text container.  </p>\n<pre><code class=\"lang-cs\" name=\"TextPointer_Snippets#_TextPointer_IsInSameDocument\">// This method first checks for compatible text container scope, and then checks whether\n// a specified position is between two other specified positions.\nbool IsPositionContainedBetween(TextPointer positionToTest, TextPointer start, TextPointer end)\n{\n    // Note that without this check, an exception will be raised by CompareTo if positionToTest \n    // does not point to a position that is in the same text container used by start and end.\n    //\n    // This test also implicitely indicates whether start and end share a common text container.\n    if (!positionToTest.IsInSameDocument(start) || !positionToTest.IsInSameDocument(end)) \n        return false;\n    \n    return start.CompareTo(positionToTest) &lt;= 0 &amp;&amp; positionToTest.CompareTo(end) &lt;= 0;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"TextPointer_Snippets#_TextPointer_IsInSameDocument\">&#39; This method first checks for compatible text container scope, and then checks whether\n&#39; a specified position is between two other specified positions.\nPrivate Function IsPositionContainedBetween(ByVal positionToTest As TextPointer, ByVal start As TextPointer, ByVal [end] As TextPointer) As Boolean\n    &#39; Note that without this check, an exception will be raised by CompareTo if positionToTest \n    &#39; does not point to a position that is in the same text container used by start and end.\n    &#39;\n    &#39; This test also implicitely indicates whether start and end share a common text container.\n    If (Not positionToTest.IsInSameDocument(start)) OrElse (Not positionToTest.IsInSameDocument([end])) Then\n        Return False\n    End If\n\n    Return start.CompareTo(positionToTest) &lt;= 0 AndAlso positionToTest.CompareTo([end]) &lt;= 0\nEnd Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Documents_TextPointer_ToString\">\r\n    \r\n            <a id=\"System_Windows_Documents_TextPointer_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>This type or member supports the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-winclient-md.md&quot; -->Windows Presentation Foundation (WPF)<!--END INCLUDE --> infrastructure and is not intended to be used directly from your code.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The string that represents the object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Documents.TextPointer.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Documents.TextPointer.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.CompareTo\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.DeleteTextInRun\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.DocumentEnd\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.DocumentStart\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.GetAdjacentElement\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.GetCharacterRect\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.GetInsertionPosition\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.GetLineStartPosition\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.GetNextContextPosition\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.GetNextInsertionPosition\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.GetOffsetToPosition\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.GetPointerContext\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.GetPositionAtOffset\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.GetTextInRun\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.GetTextRunLength\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.HasValidLayout\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.InsertLineBreak\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.InsertParagraphBreak\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.InsertTextInRun\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.IsAtInsertionPosition\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.IsAtLineStartPosition\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.IsInSameDocument\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.LogicalDirection\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.Paragraph\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.Parent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Documents.TextPointer.ToString\">\r\n<meta name=\"APILocation\" content=\"PresentationFramework.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"cd54befb-cef0-d909-5bc7-c8942df0aa98\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\o2y0\\s\\fulldocset\\xml\\System.Windows.Documents\\TextPointer.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a position within a  or .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Documents/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Documents.TextPointer\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Documents.TextPointer.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Documents.TextPointer.yml","open_to_public_contributors":true,"api_name":["System.Windows.Documents.TextPointer","System.Windows.Documents.TextPointer.CompareTo","System.Windows.Documents.TextPointer.DeleteTextInRun","System.Windows.Documents.TextPointer.DocumentEnd","System.Windows.Documents.TextPointer.DocumentStart","System.Windows.Documents.TextPointer.GetAdjacentElement","System.Windows.Documents.TextPointer.GetCharacterRect","System.Windows.Documents.TextPointer.GetInsertionPosition","System.Windows.Documents.TextPointer.GetLineStartPosition","System.Windows.Documents.TextPointer.GetNextContextPosition","System.Windows.Documents.TextPointer.GetNextInsertionPosition","System.Windows.Documents.TextPointer.GetOffsetToPosition","System.Windows.Documents.TextPointer.GetPointerContext","System.Windows.Documents.TextPointer.GetPositionAtOffset","System.Windows.Documents.TextPointer.GetTextInRun","System.Windows.Documents.TextPointer.GetTextRunLength","System.Windows.Documents.TextPointer.HasValidLayout","System.Windows.Documents.TextPointer.InsertLineBreak","System.Windows.Documents.TextPointer.InsertParagraphBreak","System.Windows.Documents.TextPointer.InsertTextInRun","System.Windows.Documents.TextPointer.IsAtInsertionPosition","System.Windows.Documents.TextPointer.IsAtLineStartPosition","System.Windows.Documents.TextPointer.IsInSameDocument","System.Windows.Documents.TextPointer.LogicalDirection","System.Windows.Documents.TextPointer.Paragraph","System.Windows.Documents.TextPointer.Parent","System.Windows.Documents.TextPointer.ToString"],"api_location":["PresentationFramework.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Documents.TextPointer","System::Windows::Documents::TextPointer","System.Windows.Documents.TextPointer.CompareTo","System::Windows::Documents::TextPointer::CompareTo","System.Windows.Documents.TextPointer.DeleteTextInRun","System::Windows::Documents::TextPointer::DeleteTextInRun","System.Windows.Documents.TextPointer.DocumentEnd","System::Windows::Documents::TextPointer::DocumentEnd","System.Windows.Documents.TextPointer.DocumentStart","System::Windows::Documents::TextPointer::DocumentStart","System.Windows.Documents.TextPointer.GetAdjacentElement","System::Windows::Documents::TextPointer::GetAdjacentElement","System.Windows.Documents.TextPointer.GetCharacterRect","System::Windows::Documents::TextPointer::GetCharacterRect","System.Windows.Documents.TextPointer.GetInsertionPosition","System::Windows::Documents::TextPointer::GetInsertionPosition","System.Windows.Documents.TextPointer.GetLineStartPosition","System::Windows::Documents::TextPointer::GetLineStartPosition","System.Windows.Documents.TextPointer.GetNextContextPosition","System::Windows::Documents::TextPointer::GetNextContextPosition","System.Windows.Documents.TextPointer.GetNextInsertionPosition","System::Windows::Documents::TextPointer::GetNextInsertionPosition","System.Windows.Documents.TextPointer.GetOffsetToPosition","System::Windows::Documents::TextPointer::GetOffsetToPosition","System.Windows.Documents.TextPointer.GetPointerContext","System::Windows::Documents::TextPointer::GetPointerContext","System.Windows.Documents.TextPointer.GetPositionAtOffset","System::Windows::Documents::TextPointer::GetPositionAtOffset","System.Windows.Documents.TextPointer.GetTextInRun","System::Windows::Documents::TextPointer::GetTextInRun","System.Windows.Documents.TextPointer.GetTextRunLength","System::Windows::Documents::TextPointer::GetTextRunLength","System.Windows.Documents.TextPointer.HasValidLayout","System::Windows::Documents::TextPointer::HasValidLayout","System.Windows.Documents.TextPointer.InsertLineBreak","System::Windows::Documents::TextPointer::InsertLineBreak","System.Windows.Documents.TextPointer.InsertParagraphBreak","System::Windows::Documents::TextPointer::InsertParagraphBreak","System.Windows.Documents.TextPointer.InsertTextInRun","System::Windows::Documents::TextPointer::InsertTextInRun","System.Windows.Documents.TextPointer.IsAtInsertionPosition","System::Windows::Documents::TextPointer::IsAtInsertionPosition","System.Windows.Documents.TextPointer.IsAtLineStartPosition","System::Windows::Documents::TextPointer::IsAtLineStartPosition","System.Windows.Documents.TextPointer.IsInSameDocument","System::Windows::Documents::TextPointer::IsInSameDocument","System.Windows.Documents.TextPointer.LogicalDirection","System::Windows::Documents::TextPointer::LogicalDirection","System.Windows.Documents.TextPointer.Paragraph","System::Windows::Documents::TextPointer::Paragraph","System.Windows.Documents.TextPointer.Parent","System::Windows::Documents::TextPointer::Parent","System.Windows.Documents.TextPointer.ToString","System::Windows::Documents::TextPointer::ToString"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"cd54befb-cef0-d909-5bc7-c8942df0aa98","original_ecmaxml_local_path":"W:\\o2y0\\s\\fulldocset\\xml\\System.Windows.Documents\\TextPointer.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Documents/TextPointer.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"TextPointer class | Microsoft Docs","_op_ogTitle":"TextPointer class","description":"Represents a position within a  or .\n","toc_asset_id":"_splitted/System.Windows.Documents/toc.json","toc_rel":"_splitted/System.Windows.Documents/toc.json","source_url":"","ms.assetid":"System.Windows.Documents.TextPointer","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.documents.textpointer","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.documents.textpointer","fileRelativePath":"System.Windows.Documents.TextPointer.html"},"themesRelativePathToOutputRoot":"_themes/"}