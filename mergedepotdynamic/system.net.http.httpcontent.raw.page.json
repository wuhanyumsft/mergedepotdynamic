{"content":"    \r\n    <h1 id=\"System_Net_Http_HttpContent\">\r\n      <span class=\"lang-csharp\">HttpContent</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>A base class representing an HTTP entity body and content headers.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class HttpContent : IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">HttpContent</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpContent__ctor\" data-linktype=\"self-bookmark\">HttpContent()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.http.httpcontent\" data-linktype=\"relative-path\">HttpContent</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpContent_Headers\" data-linktype=\"self-bookmark\">Headers</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the HTTP content headers as defined in RFC 2616.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpContent_CopyToAsync_System_IO_Stream_\" data-linktype=\"self-bookmark\">CopyToAsync(Stream)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the <code>stream</code> parameter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpContent_CopyToAsync_System_IO_Stream_System_Net_TransportContext_\" data-linktype=\"self-bookmark\">CopyToAsync(Stream,TransportContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the <code>stream</code> parameter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpContent_CreateContentReadStreamAsync\" data-linktype=\"self-bookmark\">CreateContentReadStreamAsync()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serialize the HTTP content to a memory stream as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpContent_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources and disposes of the managed resources used by the <a class=\"xref\" href=\"system.net.http.httpcontent\" data-linktype=\"relative-path\">HttpContent</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpContent_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.net.http.httpcontent\" data-linktype=\"relative-path\">HttpContent</a> and optionally disposes of the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpContent_LoadIntoBufferAsync\" data-linktype=\"self-bookmark\">LoadIntoBufferAsync()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serialize the HTTP content to a memory buffer as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpContent_LoadIntoBufferAsync_System_Int64_\" data-linktype=\"self-bookmark\">LoadIntoBufferAsync(Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serialize the HTTP content to a memory buffer as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpContent_ReadAsByteArrayAsync\" data-linktype=\"self-bookmark\">ReadAsByteArrayAsync()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serialize the HTTP content to a byte array as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpContent_ReadAsStreamAsync\" data-linktype=\"self-bookmark\">ReadAsStreamAsync()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serialize the HTTP content and return a stream that represents the content as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpContent_ReadAsStringAsync\" data-linktype=\"self-bookmark\">ReadAsStringAsync()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serialize the HTTP content to a string as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpContent_SerializeToStreamAsync_System_IO_Stream_System_Net_TransportContext_\" data-linktype=\"self-bookmark\">SerializeToStreamAsync(Stream,TransportContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serialize the HTTP content to a stream as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpContent_TryComputeLength_System_Int64__\" data-linktype=\"self-bookmark\">TryComputeLength(Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the HTTP content has a valid length in bytes.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpContent__ctor\">\r\n    \r\n            <a id=\"System_Net_Http_HttpContent__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HttpContent()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.http.httpcontent\" data-linktype=\"relative-path\">HttpContent</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected HttpContent ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpContent_Headers\">\r\n    \r\n            <a id=\"System_Net_Http_HttpContent_Headers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Headers</div>        \r\n          </div>\r\n    \r\n            <p>Gets the HTTP content headers as defined in RFC 2616.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.Http.Headers.HttpContentHeaders Headers { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.headers.httpcontentheaders\" data-linktype=\"relative-path\">HttpContentHeaders</a></div>\r\n                  </div>\r\n                  <p>The content headers as defined in RFC 2616.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpContent_CopyToAsync_System_IO_Stream_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpContent_CopyToAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyToAsync(Stream)</div>        \r\n          </div>\r\n    \r\n            <p>Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the <code>stream</code> parameter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream stream);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The target stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after all of the content has been written to the stream object passed as the <code>stream</code> parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpContent_CopyToAsync_System_IO_Stream_System_Net_TransportContext_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpContent_CopyToAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyToAsync(Stream,TransportContext)</div>        \r\n          </div>\r\n    \r\n            <p>Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the <code>stream</code> parameter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream stream, System.Net.TransportContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The target stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.transportcontext\" data-linktype=\"relative-path\">TransportContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Information about the transport (channel binding token, for example). This parameter may be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after all of the content has been written to the stream object passed as the <code>stream</code> parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpContent_CreateContentReadStreamAsync\">\r\n    \r\n            <a id=\"System_Net_Http_HttpContent_CreateContentReadStreamAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateContentReadStreamAsync()</div>        \r\n          </div>\r\n    \r\n            <p>Serialize the HTTP content to a memory stream as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; CreateContentReadStreamAsync ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after all of the content has been written to the memory stream.  </p>\n<p> Once the operation completes, the  <a class=\"xref\" href=\"system.threading.tasks.task-1#System_Threading_Tasks_Task_1_Result_\" data-linktype=\"relative-path\">Result</a> property on the returned task object contains the memory stream that that represents the HTTP content. The returned stream can then be used to read the content using various stream APIs.  </p>\n<p> The CreateContentReadStreamAsync method buffers the content to a memory stream. Derived classes can override this behavior if there is a better way to retrieve the content as stream. For example, a byte array or a string could use a more efficient method way such as wrapping a read-only <a class=\"xref\" href=\"system.io.memorystream\" data-linktype=\"relative-path\">MemoryStream</a> around the bytes or string.)</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpContent_Dispose\">\r\n    \r\n            <a id=\"System_Net_Http_HttpContent_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources and disposes of the managed resources used by the <a class=\"xref\" href=\"system.net.http.httpcontent\" data-linktype=\"relative-path\">HttpContent</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpContent_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpContent_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.net.http.httpcontent\" data-linktype=\"relative-path\">HttpContent</a> and optionally disposes of the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to releases only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by the public <code>Dispose()</code> method and the <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method. <code>Dispose()</code> invokes the protected <code>Dispose(Boolean)</code> method with the <code>disposing</code> parameter set to <code>true</code>. <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes <code>Dispose</code> with <code>disposing</code> set to <code>false</code>.When the <code>disposing</code> parameter is <code>true</code>, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.net.http.httpcontent\" data-linktype=\"relative-path\">HttpContent</a> references. This method invokes the <code>Dispose()</code> method of each referenced object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpContent_LoadIntoBufferAsync\">\r\n    \r\n            <a id=\"System_Net_Http_HttpContent_LoadIntoBufferAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadIntoBufferAsync()</div>        \r\n          </div>\r\n    \r\n            <p>Serialize the HTTP content to a memory buffer as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task LoadIntoBufferAsync ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> object will complete after all of the content has been serialized to the memory buffer.  </p>\n<p> After content is serialized to a memory buffer, calls to one of the  <a class=\"xref\" href=\"system.net.http.httpcontent#System_Net_Http_HttpContent_CopyToAsync_\" data-linktype=\"relative-path\">CopyToAsync</a> methods will copy the content of the memory buffer to the target stream.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpContent_LoadIntoBufferAsync_System_Int64_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpContent_LoadIntoBufferAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadIntoBufferAsync(Int64)</div>        \r\n          </div>\r\n    \r\n            <p>Serialize the HTTP content to a memory buffer as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task LoadIntoBufferAsync (long maxBufferSize);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>maxBufferSize</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum size, in bytes, of the buffer to use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> object will complete after all of the content has been serialized to the memory buffer.  </p>\n<p> After content is serialized to a memory buffer, calls to one of the  <a class=\"xref\" href=\"system.net.http.httpcontent#System_Net_Http_HttpContent_CopyToAsync_\" data-linktype=\"relative-path\">CopyToAsync</a> methods will copy the content of the memory buffer to the target stream.  </p>\n<p> If the content exceeds the value  passed in the <code>maxBufferSize</code> parameter , an exception is thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpContent_ReadAsByteArrayAsync\">\r\n    \r\n            <a id=\"System_Net_Http_HttpContent_ReadAsByteArrayAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadAsByteArrayAsync()</div>        \r\n          </div>\r\n    \r\n            <p>Serialize the HTTP content to a byte array as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;byte[]&gt; ReadAsByteArrayAsync ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after all of the content has been written as a byte array.  </p>\n<p> Once the operation completes, the  <a class=\"xref\" href=\"system.threading.tasks.task-1#System_Threading_Tasks_Task_1_Result_\" data-linktype=\"relative-path\">Result</a> property on the returned task object contains the byte array with the HTTP content.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpContent_ReadAsStreamAsync\">\r\n    \r\n            <a id=\"System_Net_Http_HttpContent_ReadAsStreamAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadAsStreamAsync()</div>        \r\n          </div>\r\n    \r\n            <p>Serialize the HTTP content and return a stream that represents the content as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; ReadAsStreamAsync ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after all of the stream that represents content has been read.  </p>\n<p> Once the operation completes, the  <a class=\"xref\" href=\"system.threading.tasks.task-1#System_Threading_Tasks_Task_1_Result_\" data-linktype=\"relative-path\">Result</a> property on the returned task object contains the stream that that represents the HTTP content. The returned stream can then be used to read the content using various stream APIs.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpContent_ReadAsStringAsync\">\r\n    \r\n            <a id=\"System_Net_Http_HttpContent_ReadAsStringAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadAsStringAsync()</div>        \r\n          </div>\r\n    \r\n            <p>Serialize the HTTP content to a string as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;string&gt; ReadAsStringAsync ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after all of the content has been written as a string.  </p>\n<p> Once the operation completes, the  <a class=\"xref\" href=\"system.threading.tasks.task-1#System_Threading_Tasks_Task_1_Result_\" data-linktype=\"relative-path\">Result</a> property on the returned task object contains the string with the HTTP content.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpContent_SerializeToStreamAsync_System_IO_Stream_System_Net_TransportContext_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpContent_SerializeToStreamAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SerializeToStreamAsync(Stream,TransportContext)</div>        \r\n          </div>\r\n    \r\n            <p>Serialize the HTTP content to a stream as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected abstract System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The target stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.transportcontext\" data-linktype=\"relative-path\">TransportContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Information about the transport (channel binding token, for example). This parameter may be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after all of the content has been serialized to the stream object passed in the <code>stream</code> parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpContent_TryComputeLength_System_Int64__\">\r\n    \r\n            <a id=\"System_Net_Http_HttpContent_TryComputeLength_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TryComputeLength(Int64)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the HTTP content has a valid length in bytes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected abstract bool TryComputeLength (out long length);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>length</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The length in bytes of the HTTP content.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>length</code> is a valid length; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The TryComputeLength method gives a HTTP content the ability to calculate the content length. This is useful for content types which are able to easily calculate the content length. If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return <code>false</code>. If this method returns <code>false</code>, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/417c04fd1daf0cb211ec4909020356fc1fe69260/fulldocset/System.Net.Http.HttpContent.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.Http.HttpContent.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpContent\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpContent..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpContent.CopyToAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpContent.CreateContentReadStreamAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpContent.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpContent.Headers\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpContent.LoadIntoBufferAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpContent.ReadAsByteArrayAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpContent.ReadAsStreamAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpContent.ReadAsStringAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpContent.SerializeToStreamAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpContent.TryComputeLength\">\r\n<meta name=\"APILocation\" content=\"System.Net.Http.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-02-28 06:06 AM\">\r\n<meta name=\"document_id\" content=\"42561b50-bdb6-b29e-2fd8-ad24842ae8a5\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"A base class representing an HTTP entity body and content headers.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net.Http/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.Http.HttpContent\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/417c04fd1daf0cb211ec4909020356fc1fe69260/fulldocset/System.Net.Http.HttpContent.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.Http.HttpContent.yml","open_to_public_contributors":true,"api_name":["System.Net.Http.HttpContent","System.Net.Http.HttpContent..ctor","System.Net.Http.HttpContent.CopyToAsync","System.Net.Http.HttpContent.CreateContentReadStreamAsync","System.Net.Http.HttpContent.Dispose","System.Net.Http.HttpContent.Headers","System.Net.Http.HttpContent.LoadIntoBufferAsync","System.Net.Http.HttpContent.ReadAsByteArrayAsync","System.Net.Http.HttpContent.ReadAsStreamAsync","System.Net.Http.HttpContent.ReadAsStringAsync","System.Net.Http.HttpContent.SerializeToStreamAsync","System.Net.Http.HttpContent.TryComputeLength"],"api_location":["System.Net.Http.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.Http.HttpContent","System::Net::Http::HttpContent","System.Net.Http.HttpContent.#ctor","System::Net::Http::HttpContent::#ctor","System.Net.Http.HttpContent.CopyToAsync","System::Net::Http::HttpContent::CopyToAsync","System.Net.Http.HttpContent.CreateContentReadStreamAsync","System::Net::Http::HttpContent::CreateContentReadStreamAsync","System.Net.Http.HttpContent.Dispose","System::Net::Http::HttpContent::Dispose","System.Net.Http.HttpContent.Headers","System::Net::Http::HttpContent::Headers","System.Net.Http.HttpContent.LoadIntoBufferAsync","System::Net::Http::HttpContent::LoadIntoBufferAsync","System.Net.Http.HttpContent.ReadAsByteArrayAsync","System::Net::Http::HttpContent::ReadAsByteArrayAsync","System.Net.Http.HttpContent.ReadAsStreamAsync","System::Net::Http::HttpContent::ReadAsStreamAsync","System.Net.Http.HttpContent.ReadAsStringAsync","System::Net::Http::HttpContent::ReadAsStringAsync","System.Net.Http.HttpContent.SerializeToStreamAsync","System::Net::Http::HttpContent::SerializeToStreamAsync","System.Net.Http.HttpContent.TryComputeLength","System::Net::Http::HttpContent::TryComputeLength"],"dev_langs":["csharp"],"updated_at":"2017-02-28 06:06 AM","document_id":"42561b50-bdb6-b29e-2fd8-ad24842ae8a5","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net.Http/HttpContent.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"HttpContent class | Microsoft Docs","_op_ogTitle":"HttpContent class","description":"A base class representing an HTTP entity body and content headers.\n","toc_asset_id":"_splitted/System.Net.Http/toc.json","toc_rel":"_splitted/System.Net.Http/toc.json","source_url":"","ms.assetid":"System.Net.Http.HttpContent","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.http.httpcontent","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.http.httpcontent","fileRelativePath":"System.Net.Http.HttpContent.html"},"themesRelativePathToOutputRoot":"_themes/"}