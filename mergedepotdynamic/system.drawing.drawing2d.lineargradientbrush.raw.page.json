{"content":"    \r\n    <h1 id=\"System_Drawing_Drawing2D_LinearGradientBrush\">\r\n      <span class=\"lang-csharp\">LinearGradientBrush</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Encapsulates a <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> with a linear gradient. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class LinearGradientBrush : System.Drawing.Brush</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">System.Drawing.Brush</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">LinearGradientBrush</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.drawing.brush#System_Drawing_Brush_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.drawing.brush#System_Drawing_Brush_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.drawing.brush#System_Drawing_Brush_SetNativeBrush_System_IntPtr_\" data-linktype=\"relative-path\">SetNativeBrush(IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class encapsulates both two-color gradients and custom multicolor gradients.  </p>\n<p> All linear gradients are defined along a line specified either by the width of a rectangle or by two points.  </p>\n<p> By default, a two-color linear gradient is an even horizontal linear blend from the starting color to the ending color along the specified line. Customize the blend pattern using the <a class=\"xref\" href=\"system.drawing.drawing2d.blend\" data-linktype=\"relative-path\">Blend</a> class, the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush#System_Drawing_Drawing2D_LinearGradientBrush_SetSigmaBellShape_\" data-linktype=\"relative-path\">SetSigmaBellShape</a> methods, or the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush#System_Drawing_Drawing2D_LinearGradientBrush_SetBlendTriangularShape_\" data-linktype=\"relative-path\">SetBlendTriangularShape</a> methods. Customize the direction of the gradient by specifying the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientmode\" data-linktype=\"relative-path\">LinearGradientMode</a> enumeration or the angle in the constructor.  </p>\n<p> Use the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush#System_Drawing_Drawing2D_LinearGradientBrush_InterpolationColors_\" data-linktype=\"relative-path\">InterpolationColors</a> property to create a multicolor gradient.  </p>\n<p> The <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush#System_Drawing_Drawing2D_LinearGradientBrush_Transform_\" data-linktype=\"relative-path\">Transform</a> property specifies a local geometric transform applied to the gradient.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush__ctor_System_Drawing_Point_System_Drawing_Point_System_Drawing_Color_System_Drawing_Color_\" data-linktype=\"self-bookmark\">LinearGradientBrush(Point,Point,Color,Color)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> class with the specified points and colors.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush__ctor_System_Drawing_PointF_System_Drawing_PointF_System_Drawing_Color_System_Drawing_Color_\" data-linktype=\"self-bookmark\">LinearGradientBrush(PointF,PointF,Color,Color)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> class with the specified points and colors.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush__ctor_System_Drawing_Rectangle_System_Drawing_Color_System_Drawing_Color_System_Drawing_Drawing2D_LinearGradientMode_\" data-linktype=\"self-bookmark\">LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> class based on a rectangle, starting and ending colors, and orientation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush__ctor_System_Drawing_Rectangle_System_Drawing_Color_System_Drawing_Color_System_Single_\" data-linktype=\"self-bookmark\">LinearGradientBrush(Rectangle,Color,Color,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> class based on a rectangle, starting and ending colors, and an orientation angle.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush__ctor_System_Drawing_RectangleF_System_Drawing_Color_System_Drawing_Color_System_Drawing_Drawing2D_LinearGradientMode_\" data-linktype=\"self-bookmark\">LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> based on a rectangle, starting and ending colors, and an orientation mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush__ctor_System_Drawing_RectangleF_System_Drawing_Color_System_Drawing_Color_System_Single_\" data-linktype=\"self-bookmark\">LinearGradientBrush(RectangleF,Color,Color,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> class based on a rectangle, starting and ending colors, and an orientation angle.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush__ctor_System_Drawing_Rectangle_System_Drawing_Color_System_Drawing_Color_System_Single_System_Boolean_\" data-linktype=\"self-bookmark\">LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> class based on a rectangle, starting and ending colors, and an orientation angle.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush__ctor_System_Drawing_RectangleF_System_Drawing_Color_System_Drawing_Color_System_Single_System_Boolean_\" data-linktype=\"self-bookmark\">LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> class based on a rectangle, starting and ending colors, and an orientation angle.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush_Blend\" data-linktype=\"self-bookmark\">Blend</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a <a class=\"xref\" href=\"system.drawing.drawing2d.blend\" data-linktype=\"relative-path\">Blend</a> that specifies positions and factors that define a custom falloff for the gradient.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush_GammaCorrection\" data-linktype=\"self-bookmark\">GammaCorrection</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether gamma correction is enabled for this <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush_InterpolationColors\" data-linktype=\"self-bookmark\">InterpolationColors</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a <a class=\"xref\" href=\"system.drawing.drawing2d.colorblend\" data-linktype=\"relative-path\">ColorBlend</a> that defines a multicolor linear gradient.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush_LinearColors\" data-linktype=\"self-bookmark\">LinearColors</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the starting and ending colors of the gradient.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush_Rectangle\" data-linktype=\"self-bookmark\">Rectangle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a rectangular region that defines the starting and ending points of the gradient.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush_Transform\" data-linktype=\"self-bookmark\">Transform</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a copy <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> that defines a local geometric transform for this <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush_WrapMode\" data-linktype=\"self-bookmark\">WrapMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a <a class=\"xref\" href=\"system.drawing.drawing2d.wrapmode\" data-linktype=\"relative-path\">WrapMode</a> enumeration that indicates the wrap mode for this <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush_Clone\" data-linktype=\"self-bookmark\">Clone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an exact copy of this <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush_MultiplyTransform_System_Drawing_Drawing2D_Matrix_\" data-linktype=\"self-bookmark\">MultiplyTransform(Matrix)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Multiplies the <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> that represents the local geometric transform of this <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> by the specified <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> by prepending the specified <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush_MultiplyTransform_System_Drawing_Drawing2D_Matrix_System_Drawing_Drawing2D_MatrixOrder_\" data-linktype=\"self-bookmark\">MultiplyTransform(Matrix,MatrixOrder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Multiplies the <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> that represents the local geometric transform of this <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> by the specified <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> in the specified order.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush_ResetTransform\" data-linktype=\"self-bookmark\">ResetTransform()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resets the <span class=\"xref\">stem.Drawing.Drawing2D.LinearGradientBrush.Transform*</span> property to identity.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush_RotateTransform_System_Single_\" data-linktype=\"self-bookmark\">RotateTransform(Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Rotates the local geometric transform by the specified amount. This method prepends the rotation to the transform.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush_RotateTransform_System_Single_System_Drawing_Drawing2D_MatrixOrder_\" data-linktype=\"self-bookmark\">RotateTransform(Single,MatrixOrder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Rotates the local geometric transform by the specified amount in the specified order.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush_ScaleTransform_System_Single_System_Single_\" data-linktype=\"self-bookmark\">ScaleTransform(Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Scales the local geometric transform by the specified amounts. This method prepends the scaling matrix to the transform.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush_ScaleTransform_System_Single_System_Single_System_Drawing_Drawing2D_MatrixOrder_\" data-linktype=\"self-bookmark\">ScaleTransform(Single,Single,MatrixOrder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Scales the local geometric transform by the specified amounts in the specified order.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush_SetBlendTriangularShape_System_Single_\" data-linktype=\"self-bookmark\">SetBlendTriangularShape(Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush_SetBlendTriangularShape_System_Single_System_Single_\" data-linktype=\"self-bookmark\">SetBlendTriangularShape(Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush_SetSigmaBellShape_System_Single_\" data-linktype=\"self-bookmark\">SetSigmaBellShape(Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a gradient falloff based on a bell-shaped curve.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush_SetSigmaBellShape_System_Single_System_Single_\" data-linktype=\"self-bookmark\">SetSigmaBellShape(Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a gradient falloff based on a bell-shaped curve.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush_TranslateTransform_System_Single_System_Single_\" data-linktype=\"self-bookmark\">TranslateTransform(Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Translates the local geometric transform by the specified dimensions. This method prepends the translation to the transform.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_LinearGradientBrush_TranslateTransform_System_Single_System_Single_System_Drawing_Drawing2D_MatrixOrder_\" data-linktype=\"self-bookmark\">TranslateTransform(Single,Single,MatrixOrder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Translates the local geometric transform by the specified dimensions in the specified order.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush__ctor_System_Drawing_Point_System_Drawing_Point_System_Drawing_Color_System_Drawing_Color_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LinearGradientBrush(Point,Point,Color,Color)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> class with the specified points and colors.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public LinearGradientBrush (System.Drawing.Point point1, System.Drawing.Point point2, System.Drawing.Color color1, System.Drawing.Color color2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>point1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure that represents the starting point of the linear gradient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>point2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure that represents the endpoint of the linear gradient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>color1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structure that represents the starting color of the linear gradient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>color2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structure that represents the ending color of the linear gradient.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush__ctor_System_Drawing_PointF_System_Drawing_PointF_System_Drawing_Color_System_Drawing_Color_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LinearGradientBrush(PointF,PointF,Color,Color)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> class with the specified points and colors.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public LinearGradientBrush (System.Drawing.PointF point1, System.Drawing.PointF point2, System.Drawing.Color color1, System.Drawing.Color color2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>point1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure that represents the starting point of the linear gradient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>point2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure that represents the endpoint of the linear gradient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>color1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structure that represents the starting color of the linear gradient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>color2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structure that represents the ending color of the linear gradient.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush__ctor_System_Drawing_Rectangle_System_Drawing_Color_System_Drawing_Color_System_Drawing_Drawing2D_LinearGradientMode_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> class based on a rectangle, starting and ending colors, and orientation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, System.Drawing.Drawing2D.LinearGradientMode linearGradientMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the bounds of the linear gradient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>color1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structure that represents the starting color for the gradient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>color2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structure that represents the ending color for the gradient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>linearGradientMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientmode\" data-linktype=\"relative-path\">LinearGradientMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientmode\" data-linktype=\"relative-path\">LinearGradientMode</a> enumeration element that specifies the orientation of the gradient. The orientation determines the starting and ending points of the gradient. For example, <code>LinearGradientMode.ForwardDiagonal</code> specifies that the starting point is the upper-left corner of the rectangle and the ending point is the lower-right corner of the rectangle.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush__ctor_System_Drawing_Rectangle_System_Drawing_Color_System_Drawing_Color_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LinearGradientBrush(Rectangle,Color,Color,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> class based on a rectangle, starting and ending colors, and an orientation angle.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the bounds of the linear gradient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>color1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structure that represents the starting color for the gradient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>color2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structure that represents the ending color for the gradient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>angle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle, measured in degrees clockwise from the x-axis, of the gradient&#39;s orientation line.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>All points along any line perpendicular to the orientation line are the same color.  </p>\n<p> The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the starting line are the starting color. Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the ending line are the ending color.  </p>\n<p> The angle of the orientation line determines which corners the starting and ending lines pass through. For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush__ctor_System_Drawing_RectangleF_System_Drawing_Color_System_Drawing_Color_System_Drawing_Drawing2D_LinearGradientMode_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> based on a rectangle, starting and ending colors, and an orientation mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, System.Drawing.Drawing2D.LinearGradientMode linearGradientMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the bounds of the linear gradient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>color1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structure that represents the starting color for the gradient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>color2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structure that represents the ending color for the gradient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>linearGradientMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientmode\" data-linktype=\"relative-path\">LinearGradientMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientmode\" data-linktype=\"relative-path\">LinearGradientMode</a> enumeration element that specifies the orientation of the gradient. The orientation determines the starting and ending points of the gradient. For example, <code>LinearGradientMode.ForwardDiagonal</code> specifies that the starting point is the upper-left corner of the rectangle and the ending point is the lower-right corner of the rectangle.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush__ctor_System_Drawing_RectangleF_System_Drawing_Color_System_Drawing_Color_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LinearGradientBrush(RectangleF,Color,Color,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> class based on a rectangle, starting and ending colors, and an orientation angle.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the bounds of the linear gradient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>color1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structure that represents the starting color for the gradient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>color2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structure that represents the ending color for the gradient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>angle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle, measured in degrees clockwise from the x-axis, of the gradient&#39;s orientation line.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>All points along any line perpendicular to the orientation line are the same color.  </p>\n<p> The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the starting line are the starting color. Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the ending line are the ending color.  </p>\n<p> The angle of the orientation line determines which corners the starting and ending lines pass through. For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush__ctor_System_Drawing_Rectangle_System_Drawing_Color_System_Drawing_Color_System_Single_System_Boolean_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> class based on a rectangle, starting and ending colors, and an orientation angle.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle, bool isAngleScaleable);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that specifies the bounds of the linear gradient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>color1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structure that represents the starting color for the gradient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>color2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structure that represents the ending color for the gradient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>angle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle, measured in degrees clockwise from the x-axis, of the gradient&#39;s orientation line.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>isAngleScaleable</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Set to <code>true</code> to specify that the angle is affected by the transform associated with this <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>All points along any line perpendicular to the orientation line are the same color.  </p>\n<p> The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the starting line are the starting color. Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the ending line are the ending color.  </p>\n<p> The angle of the orientation line determines which corners the starting and ending lines pass through. For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush__ctor_System_Drawing_RectangleF_System_Drawing_Color_System_Drawing_Color_System_Single_System_Boolean_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> class based on a rectangle, starting and ending colors, and an orientation angle.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle, bool isAngleScaleable);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the bounds of the linear gradient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>color1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structure that represents the starting color for the gradient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>color2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structure that represents the ending color for the gradient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>angle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle, measured in degrees clockwise from the x-axis, of the gradient&#39;s orientation line.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>isAngleScaleable</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Set to <code>true</code> to specify that the angle is affected by the transform associated with this <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>All points along any line perpendicular to the orientation line are the same color.  </p>\n<p> The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the starting line are the starting color. Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle. All points on the ending line are the ending color.  </p>\n<p> The angle of the orientation line determines which corners the starting and ending lines pass through. For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush_Blend\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush_Blend_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Blend</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a <a class=\"xref\" href=\"system.drawing.drawing2d.blend\" data-linktype=\"relative-path\">Blend</a> that specifies positions and factors that define a custom falloff for the gradient.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.Blend Blend { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.blend\" data-linktype=\"relative-path\">Blend</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.blend\" data-linktype=\"relative-path\">Blend</a> that represents a custom falloff for the gradient.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.blend\" data-linktype=\"relative-path\">Blend</a> contains corresponding arrays of blend factors and positions. The blend factors specify the percentages of the starting color and ending color to use at the corresponding position. The positions are given as a percentage of distance along the gradient line.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush_GammaCorrection\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush_GammaCorrection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GammaCorrection</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether gamma correction is enabled for this <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool GammaCorrection { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>The value is <code>true</code> if gamma correction is enabled for this <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush_InterpolationColors\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush_InterpolationColors_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InterpolationColors</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a <a class=\"xref\" href=\"system.drawing.drawing2d.colorblend\" data-linktype=\"relative-path\">ColorBlend</a> that defines a multicolor linear gradient.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.ColorBlend InterpolationColors { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.colorblend\" data-linktype=\"relative-path\">ColorBlend</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.colorblend\" data-linktype=\"relative-path\">ColorBlend</a> that defines a multicolor linear gradient.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.colorblend\" data-linktype=\"relative-path\">ColorBlend</a> contains corresponding arrays of colors and positions. The positions are values from 0 through 1 that specify the percentage of the distance along the gradient line where the corresponding color is located.  </p>\n<p> Setting this property creates a multicolor gradient with one color at each position along the gradient line. Setting this property nullifies all previous color, position, and falloff settings for this <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush_LinearColors\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush_LinearColors_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LinearColors</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the starting and ending colors of the gradient.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Color[] LinearColors { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a>[]</div>\r\n                  </div>\r\n                  <p>An array of two <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structures that represents the starting and ending colors of the gradient.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush_Rectangle\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush_Rectangle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Rectangle</div>        \r\n          </div>\r\n    \r\n            <p>Gets a rectangular region that defines the starting and ending points of the gradient.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.RectangleF Rectangle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that specifies the starting and ending points of the gradient.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The left side of the rectangle specifies the starting point of the linear gradient, and the right side of the rectangle specifies the endpoint.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush_Transform\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush_Transform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Transform</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a copy <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> that defines a local geometric transform for this <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.Matrix Transform { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </div>\r\n                  <p>A copy of the <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> that defines a geometric transform that applies only to fills drawn with this <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A geometric transform can be used to translate, scale, rotate, or skew the gradient fill. Because the matrix returned and by the Transform property is a copy of the brush&#39;s geometric transform, you should dispose of the matrix when you no longer need it.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush_WrapMode\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush_WrapMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WrapMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a <a class=\"xref\" href=\"system.drawing.drawing2d.wrapmode\" data-linktype=\"relative-path\">WrapMode</a> enumeration that indicates the wrap mode for this <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.WrapMode WrapMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.wrapmode\" data-linktype=\"relative-path\">WrapMode</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.wrapmode\" data-linktype=\"relative-path\">WrapMode</a> that specifies how fills drawn with this <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> are tiled.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush_Clone\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush_Clone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clone()</div>        \r\n          </div>\r\n    \r\n            <p>Creates an exact copy of this <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override object Clone ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> this method creates, cast as an object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a new <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a>.  </p>\n</li>\n<li><p>Draws an ellipse to the screen using this brush.  </p>\n</li>\n<li><p>Clones the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> (<code>clonedLGBrush</code>).  </p>\n</li>\n<li><p>Draws an ellipse to the screen directly below the first ellipse, using the cloned brush.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicLinearGradientBrush#1\">    Public Sub CloneExample(ByVal e As PaintEventArgs)\n\n        &#39; Create a LinearGradientBrush.\n        Dim x As Integer = 20\n        Dim y As Integer = 20\n        Dim h As Integer = 100\n        Dim w As Integer = 200\n        Dim myRect As New Rectangle(x, y, w, h)\n        Dim myLGBrush As New LinearGradientBrush(myRect, Color.Blue, _\n        Color.Aquamarine, 45.0F, True)\n\n        &#39; Draw an ellipse to the screen using the LinearGradientBrush.\n        e.Graphics.FillEllipse(myLGBrush, x, y, w, h)\n\n        &#39; Clone the LinearGradientBrush.\n        Dim clonedLGBrush As LinearGradientBrush = _\n        CType(myLGBrush.Clone(), LinearGradientBrush)\n\n        &#39; Justify the left edge of the gradient with the left edge of the\n        &#39; ellipse.\n        clonedLGBrush.TranslateTransform(-100.0F, 0.0F)\n\n        &#39; Draw a second ellipse to the screen using the cloned HBrush.\n        y = 150\n        e.Graphics.FillEllipse(clonedLGBrush, x, y, w, h)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicLinearGradientBrush#1\">private:\n   void CloneExample( PaintEventArgs^ e )\n   {\n      // Create a LinearGradientBrush.\n      int x = 20,y = 20,h = 100,w = 200;\n      Rectangle myRect = Rectangle(x,y,w,h);\n      LinearGradientBrush^ myLGBrush = gcnew LinearGradientBrush( myRect,Color::Blue,Color::Aquamarine,45.0f,true );\n\n      // Draw an ellipse to the screen using the LinearGradientBrush.\n      e-&gt;Graphics-&gt;FillEllipse( myLGBrush, x, y, w, h );\n\n      // Clone the LinearGradientBrush.\n      LinearGradientBrush^ clonedLGBrush = dynamic_cast&lt;LinearGradientBrush^&gt;(myLGBrush-&gt;Clone());\n\n      // Justify the left edge of the gradient with the\n      // left edge of the ellipse.\n      clonedLGBrush-&gt;TranslateTransform(  -100.0f, 0.0f );\n\n      // Draw a second ellipse to the screen using the cloned HBrush.\n      y = 150;\n      e-&gt;Graphics-&gt;FillEllipse( clonedLGBrush, x, y, w, h );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicLinearGradientBrush#1\">        private void CloneExample(PaintEventArgs e)\n        {\n                     \n            // Create a LinearGradientBrush.\n            int x=20, y=20, h=100, w=200;\n            Rectangle myRect = new Rectangle(x, y, w, h);\n            LinearGradientBrush myLGBrush = new LinearGradientBrush(\n                myRect, Color.Blue, Color.Aquamarine, 45.0f, true);\n        \n            // Draw an ellipse to the screen using the LinearGradientBrush.\n            e.Graphics.FillEllipse(myLGBrush, x, y, w, h);\n                     \n            // Clone the LinearGradientBrush.\n            LinearGradientBrush clonedLGBrush =\n                (LinearGradientBrush)myLGBrush.Clone();\n                     \n            // Justify the left edge of the gradient with the\n            // left edge of the ellipse.\n            clonedLGBrush.TranslateTransform(-100.0f, 0.0f);\n                     \n            // Draw a second ellipse to the screen using the cloned HBrush.\n            y=150;\n            e.Graphics.FillEllipse(clonedLGBrush, x, y, w, h);\n        }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush_MultiplyTransform_System_Drawing_Drawing2D_Matrix_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush_MultiplyTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MultiplyTransform(Matrix)</div>        \r\n          </div>\r\n    \r\n            <p>Multiplies the <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> that represents the local geometric transform of this <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> by the specified <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> by prepending the specified <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> by which to multiply the geometric transform.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush#System_Drawing_Drawing2D_LinearGradientBrush_MultiplyTransform_\" data-linktype=\"relative-path\">MultiplyTransform</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush_MultiplyTransform_System_Drawing_Drawing2D_Matrix_System_Drawing_Drawing2D_MatrixOrder_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush_MultiplyTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MultiplyTransform(Matrix,MatrixOrder)</div>        \r\n          </div>\r\n    \r\n            <p>Multiplies the <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> that represents the local geometric transform of this <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> by the specified <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> in the specified order.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> by which to multiply the geometric transform.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>order</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a> that specifies in which order to multiply the two matrices.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a new <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a>.  </p>\n</li>\n<li><p>Draws an ellipse to the screen using this brush.  </p>\n</li>\n<li><p>Calls the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush#System_Drawing_Drawing2D_LinearGradientBrush_MultiplyTransform_\" data-linktype=\"relative-path\">MultiplyTransform</a> method, to transform the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a>.  </p>\n</li>\n<li><p>Draws an ellipse to the screen directly below the first ellipse, using the transformed brush.  </p>\n<p>Notice that the lower ellipse is stretched in the horizontal direction, and that the gradient is stretched to match the new shape.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicLinearGradientBrush#2\">    Public Sub MultiplyTransformExample(ByVal e As PaintEventArgs)\n\n        &#39; Create a LinearGradientBrush.\n        Dim myRect As New Rectangle(20, 20, 200, 100)\n        Dim myLGBrush As New LinearGradientBrush(myRect, Color.Blue, _\n        Color.Red, 0.0F, True)\n\n        &#39; Draw an ellipse to the screen using the LinearGradientBrush.\n        e.Graphics.FillEllipse(myLGBrush, myRect)\n\n        &#39; Transform the LinearGradientBrush.\n        Dim transformArray As Point() = {New Point(20, 150), _\n        New Point(400, 150), New Point(20, 200)}\n        Dim myMatrix As New Matrix(myRect, transformArray)\n        myLGBrush.MultiplyTransform(myMatrix, MatrixOrder.Prepend)\n\n        &#39; Draw a second ellipse to the screen using the transformed brush.\n        e.Graphics.FillEllipse(myLGBrush, 20, 150, 380, 50)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicLinearGradientBrush#2\">private:\n   void MultiplyTransformExample( PaintEventArgs^ e )\n   {\n      // Create a LinearGradientBrush.\n      Rectangle myRect = Rectangle(20,20,200,100);\n      LinearGradientBrush^ myLGBrush = gcnew LinearGradientBrush( myRect,Color::Blue,Color::Red,0.0f,true );\n\n      // Draw an ellipse to the screen using the LinearGradientBrush.\n      e-&gt;Graphics-&gt;FillEllipse( myLGBrush, myRect );\n\n      // Transform the LinearGradientBrush.\n      array&lt;Point&gt;^ transformArray = {Point(20,150),Point(400,150),Point(20,200)};\n      Matrix^ myMatrix = gcnew Matrix( myRect,transformArray );\n      myLGBrush-&gt;MultiplyTransform( myMatrix, MatrixOrder::Prepend );\n\n      // Draw a second ellipse to the screen using\n      // the transformed brush.\n      e-&gt;Graphics-&gt;FillEllipse( myLGBrush, 20, 150, 380, 50 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicLinearGradientBrush#2\">        private void MultiplyTransformExample(PaintEventArgs e)\n        {\n                     \n            // Create a LinearGradientBrush.\n            Rectangle myRect = new Rectangle(20, 20, 200, 100);\n            LinearGradientBrush myLGBrush = new LinearGradientBrush(\n                myRect, Color.Blue, Color.Red,  0.0f, true);\n                \n            // Draw an ellipse to the screen using the LinearGradientBrush.\n            e.Graphics.FillEllipse(myLGBrush, myRect);\n                     \n            // Transform the LinearGradientBrush.\n            Point[] transformArray = { new Point(20, 150),\n                 new Point(400,150), new Point(20, 200) };\n       \n            Matrix myMatrix = new Matrix(myRect, transformArray);\n            myLGBrush.MultiplyTransform(\n                myMatrix,\n                MatrixOrder.Prepend);\n                     \n            // Draw a second ellipse to the screen using\n            // the transformed brush.\n            e.Graphics.FillEllipse(myLGBrush, 20, 150, 380, 50);\n        }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush_ResetTransform\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush_ResetTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResetTransform()</div>        \r\n          </div>\r\n    \r\n            <p>Resets the <span class=\"xref\">stem.Drawing.Drawing2D.LinearGradientBrush.Transform*</span> property to identity.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ResetTransform ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a new <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a>.  </p>\n</li>\n<li><p>Draws an ellipse to the screen using this brush.  </p>\n</li>\n<li><p>Calls the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush#System_Drawing_Drawing2D_LinearGradientBrush_MultiplyTransform_\" data-linktype=\"relative-path\">MultiplyTransform</a> method to transform the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a>.  </p>\n</li>\n<li><p>Draws an ellipse to the screen directly below the first ellipse, using the transformed brush.  </p>\n</li>\n<li><p>Resets the transform.  </p>\n</li>\n<li><p>Draws a third ellipse to the screen below the first two.  </p>\n<p>Notice that the lowest ellipse is drawn the same size as the first, and that, due to the call to the ResetTransform method, the gradient has been reduced to match.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicLinearGradientBrush#3\">    Public Sub ResetTransformExample(ByVal e As PaintEventArgs)\n\n        &#39; Create a LinearGradientBrush.\n        Dim myRect As New Rectangle(20, 20, 200, 100)\n        Dim myLGBrush As New LinearGradientBrush(myRect, Color.Blue, _\n        Color.Red, 0.0F, True)\n\n        &#39; Draw an ellipse to the screen using the LinearGradientBrush.\n        e.Graphics.FillEllipse(myLGBrush, myRect)\n\n        &#39; Transform the LinearGradientBrush.\n        Dim transformArray As Point() = {New Point(20, 150), _\n        New Point(400, 150), New Point(20, 200)}\n        Dim myMatrix As New Matrix(myRect, transformArray)\n        myLGBrush.MultiplyTransform(myMatrix, MatrixOrder.Prepend)\n\n        &#39; Draw a second ellipse to the screen using the transformed brush.\n        e.Graphics.FillEllipse(myLGBrush, 20, 150, 380, 50)\n\n        &#39; Reset the brush transform.\n        myLGBrush.ResetTransform()\n\n        &#39; Draw a third ellipse to the screen using the reset brush.\n        e.Graphics.FillEllipse(myLGBrush, 20, 250, 200, 100)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicLinearGradientBrush#3\">private:\n   void ResetTransformExample( PaintEventArgs^ e )\n   {\n      // Create a LinearGradientBrush.\n      Rectangle myRect = Rectangle(20,20,200,100);\n      LinearGradientBrush^ myLGBrush = gcnew LinearGradientBrush( myRect,Color::Blue,Color::Red,0.0f,true );\n\n      // Draw an ellipse to the screen using the LinearGradientBrush.\n      e-&gt;Graphics-&gt;FillEllipse( myLGBrush, myRect );\n\n      // Transform the LinearGradientBrush.\n      array&lt;Point&gt;^ transformArray = {Point(20,150),Point(400,150),Point(20,200)};\n      Matrix^ myMatrix = gcnew Matrix( myRect,transformArray );\n      myLGBrush-&gt;MultiplyTransform( myMatrix, MatrixOrder::Prepend );\n\n      // Draw a second ellipse to the screen\n      // using the transformed brush.\n      e-&gt;Graphics-&gt;FillEllipse( myLGBrush, 20, 150, 380, 50 );\n\n      // Reset the brush transform.\n      myLGBrush-&gt;ResetTransform();\n\n      // Draw a third ellipse to the screen using the reset brush.\n      e-&gt;Graphics-&gt;FillEllipse( myLGBrush, 20, 250, 200, 100 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicLinearGradientBrush#3\">        private void ResetTransformExample(PaintEventArgs e)\n        {\n                     \n            // Create a LinearGradientBrush.\n            Rectangle myRect = new Rectangle(20, 20, 200, 100);\n            LinearGradientBrush myLGBrush = new LinearGradientBrush(\n                myRect, Color.Blue, Color.Red,  0.0f, true);\n                     \n            // Draw an ellipse to the screen using the LinearGradientBrush.\n            e.Graphics.FillEllipse(myLGBrush, myRect);\n                     \n            // Transform the LinearGradientBrush.\n            Point[] transformArray = { new Point(20, 150),\n                 new Point(400,150), new Point(20, 200) };\n               \n            Matrix myMatrix = new Matrix(myRect, transformArray);\n            myLGBrush.MultiplyTransform( myMatrix, MatrixOrder.Prepend);\n                     \n            // Draw a second ellipse to the screen\n            // using the transformed brush.\n            e.Graphics.FillEllipse(myLGBrush, 20, 150, 380, 50);\n                     \n            // Reset the brush transform.\n            myLGBrush.ResetTransform();\n                     \n            // Draw a third ellipse to the screen using the reset brush.\n            e.Graphics.FillEllipse(myLGBrush, 20, 250, 200, 100);\n        }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush_RotateTransform_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush_RotateTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RotateTransform(Single)</div>        \r\n          </div>\r\n    \r\n            <p>Rotates the local geometric transform by the specified amount. This method prepends the rotation to the transform.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RotateTransform (float angle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>angle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle of rotation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush#System_Drawing_Drawing2D_LinearGradientBrush_RotateTransform_\" data-linktype=\"relative-path\">RotateTransform</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush_RotateTransform_System_Single_System_Drawing_Drawing2D_MatrixOrder_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush_RotateTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RotateTransform(Single,MatrixOrder)</div>        \r\n          </div>\r\n    \r\n            <p>Rotates the local geometric transform by the specified amount in the specified order.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>angle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle of rotation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>order</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a> that specifies whether to append or prepend the rotation matrix.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code  </p>\n<ul>\n<li><p>Creates a new <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a>.  </p>\n</li>\n<li><p>Draws an ellipse to the screen using this brush.  </p>\n</li>\n<li><p>Rotates the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> 45 degrees by calling the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush#System_Drawing_Drawing2D_LinearGradientBrush_RotateTransform_\" data-linktype=\"relative-path\">RotateTransform</a> method.  </p>\n</li>\n<li><p>Draws an ellipse to the screen directly below the first ellipse, using the rotated brush.  </p>\n<p>Notice that the gradient of the lower ellipse is at a 45 degree angle to the x-axis of the top ellipse. Also notice that a call to the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush#System_Drawing_Drawing2D_LinearGradientBrush_TranslateTransform_\" data-linktype=\"relative-path\">TranslateTransform</a> method is used to justify the left edge of the gradient fill with the left edge of the lower ellipse.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicLinearGradientBrush#4\">    Public Sub RotateTransformExample(ByVal e As PaintEventArgs)\n\n        &#39; Create a LinearGradientBrush.\n        Dim myRect As New Rectangle(20, 20, 200, 100)\n        Dim myLGBrush As New LinearGradientBrush(myRect, Color.Blue, _\n        Color.Red, 0.0F, True)\n\n        &#39; Draw an ellipse to the screen using the LinearGradientBrush.\n        e.Graphics.FillEllipse(myLGBrush, myRect)\n\n        &#39; Rotate the LinearGradientBrush.\n        myLGBrush.RotateTransform(45.0F, MatrixOrder.Prepend)\n\n        &#39; Rejustify the brush to start at the left edge of the ellipse.\n        myLGBrush.TranslateTransform(-100.0F, 0.0F)\n\n        &#39; Draw a second ellipse to the screen using the transformed brush.\n        e.Graphics.FillEllipse(myLGBrush, 20, 150, 200, 100)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicLinearGradientBrush#4\">private:\n   void RotateTransformExample( PaintEventArgs^ e )\n   {\n      // Create a LinearGradientBrush.\n      Rectangle myRect = Rectangle(20,20,200,100);\n      LinearGradientBrush^ myLGBrush = gcnew LinearGradientBrush( myRect,Color::Blue,Color::Red,0.0f,true );\n\n      // Draw an ellipse to the screen using the LinearGradientBrush.\n      e-&gt;Graphics-&gt;FillEllipse( myLGBrush, myRect );\n\n      // Rotate the LinearGradientBrush.\n      myLGBrush-&gt;RotateTransform( 45.0f, MatrixOrder::Prepend );\n\n      // Rejustify the brush to start at the left edge of the ellipse.\n      myLGBrush-&gt;TranslateTransform(  -100.0f, 0.0f );\n\n      // Draw a second ellipse to the screen using\n      // the transformed brush.\n      e-&gt;Graphics-&gt;FillEllipse( myLGBrush, 20, 150, 200, 100 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicLinearGradientBrush#4\">        private void RotateTransformExample(PaintEventArgs e)\n        {\n                     \n            // Create a LinearGradientBrush.\n            Rectangle myRect = new Rectangle(20, 20, 200, 100);\n            LinearGradientBrush myLGBrush = new LinearGradientBrush(\n                myRect, Color.Blue, Color.Red,  0.0f, true);\n                     \n            // Draw an ellipse to the screen using the LinearGradientBrush.\n            e.Graphics.FillEllipse(myLGBrush, myRect);\n                     \n            // Rotate the LinearGradientBrush.\n            myLGBrush.RotateTransform(45.0f, MatrixOrder.Prepend);\n       \n            // Rejustify the brush to start at the left edge of the ellipse.\n            myLGBrush.TranslateTransform(-100.0f, 0.0f);\n                     \n            // Draw a second ellipse to the screen using\n            // the transformed brush.\n            e.Graphics.FillEllipse(myLGBrush, 20, 150, 200, 100);\n        }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush_ScaleTransform_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush_ScaleTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ScaleTransform(Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Scales the local geometric transform by the specified amounts. This method prepends the scaling matrix to the transform.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ScaleTransform (float sx, float sy);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sx</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The amount by which to scale the transform in the x-axis direction.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sy</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The amount by which to scale the transform in the y-axis direction.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush#System_Drawing_Drawing2D_LinearGradientBrush_ScaleTransform_\" data-linktype=\"relative-path\">ScaleTransform</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush_ScaleTransform_System_Single_System_Single_System_Drawing_Drawing2D_MatrixOrder_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush_ScaleTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ScaleTransform(Single,Single,MatrixOrder)</div>        \r\n          </div>\r\n    \r\n            <p>Scales the local geometric transform by the specified amounts in the specified order.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sx</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The amount by which to scale the transform in the x-axis direction.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sy</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The amount by which to scale the transform in the y-axis direction.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>order</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a> that specifies whether to append or prepend the scaling matrix.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a new <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a>.  </p>\n</li>\n<li><p>Draw an ellipse to the screen using this brush.  </p>\n</li>\n<li><p>Scales the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> by a factor of two in the x-axis.  </p>\n</li>\n<li><p>Draws an ellipse to the screen directly below the first ellipse, using the scaled brush.  </p>\n<p>Notice that the gradient of the lower ellipse is stretched by a factor of two. Also notice that a call to the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush#System_Drawing_Drawing2D_LinearGradientBrush_TranslateTransform_\" data-linktype=\"relative-path\">TranslateTransform</a> method is used to justify the left edge of the gradient fill with the left edge of ellipse.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicLinearGradientBrush#5\">    Public Sub ScaleTransformExample(ByVal e As PaintEventArgs)\n\n        &#39; Create a LinearGradientBrush.\n        Dim myRect As New Rectangle(20, 20, 200, 100)\n        Dim myLGBrush As New LinearGradientBrush(myRect, Color.Blue, _\n        Color.Red, 0.0F, True)\n\n        &#39; Draw an ellipse to the screen using the LinearGradientBrush.\n        e.Graphics.FillEllipse(myLGBrush, myRect)\n\n        &#39; Scale the LinearGradientBrush.\n        myLGBrush.ScaleTransform(2.0F, 1.0F, MatrixOrder.Prepend)\n\n        &#39; Rejustify the brush to start at the left edge of the ellipse.\n        myLGBrush.TranslateTransform(-20.0F, 0.0F)\n\n        &#39; Draw a second ellipse to the screen using the transformed brush.\n        e.Graphics.FillEllipse(myLGBrush, 20, 150, 200, 100)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicLinearGradientBrush#5\">private:\n   void ScaleTransformExample( PaintEventArgs^ e )\n   {\n      // Create a LinearGradientBrush.\n      Rectangle myRect = Rectangle(20,20,200,100);\n      LinearGradientBrush^ myLGBrush = gcnew LinearGradientBrush( myRect,Color::Blue,Color::Red,0.0f,true );\n\n      // Draw an ellipse to the screen using the LinearGradientBrush.\n      e-&gt;Graphics-&gt;FillEllipse( myLGBrush, myRect );\n\n      // Scale the LinearGradientBrush.\n      myLGBrush-&gt;ScaleTransform( 2.0f, 1.0f, MatrixOrder::Prepend );\n\n      // Rejustify the brush to start at the left edge of the ellipse.\n      myLGBrush-&gt;TranslateTransform(  -20.0f, 0.0f );\n\n      // Draw a second ellipse to the screen using\n      // the transformed brush.\n      e-&gt;Graphics-&gt;FillEllipse( myLGBrush, 20, 150, 200, 100 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicLinearGradientBrush#5\">        private void ScaleTransformExample(PaintEventArgs e)\n        {\n                     \n            // Create a LinearGradientBrush.\n            Rectangle myRect = new Rectangle(20, 20, 200, 100);\n            LinearGradientBrush myLGBrush = new LinearGradientBrush(\n                myRect, Color.Blue, Color.Red,  0.0f, true);\n                     \n            // Draw an ellipse to the screen using the LinearGradientBrush.\n            e.Graphics.FillEllipse(myLGBrush, myRect);\n                     \n            // Scale the LinearGradientBrush.\n            myLGBrush.ScaleTransform(2.0f, 1.0f, MatrixOrder.Prepend);\n           \n            // Rejustify the brush to start at the left edge of the ellipse.\n            myLGBrush.TranslateTransform(-20.0f, 0.0f);\n                     \n            // Draw a second ellipse to the screen using\n            // the transformed brush.\n            e.Graphics.FillEllipse(myLGBrush, 20, 150, 200, 100);\n        }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush_SetBlendTriangularShape_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush_SetBlendTriangularShape_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetBlendTriangularShape(Single)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetBlendTriangularShape (float focus);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>focus</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method specifies a <code>focus</code>, which is the point where the gradient is composed only of the ending color. The <code>focus</code> parameter represents a location as a proportion of the distance along the gradient line. The gradient falls off to the starting color linearly to either side.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush#System_Drawing_Drawing2D_LinearGradientBrush_SetBlendTriangularShape_\" data-linktype=\"relative-path\">SetBlendTriangularShape</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush_SetBlendTriangularShape_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush_SetBlendTriangularShape_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetBlendTriangularShape(Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetBlendTriangularShape (float focus, float scale);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>focus</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scale</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value from 0 through1 that specifies how fast the colors falloff from the starting color to <code>focus</code> (ending color)</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method specifies a <code>focus</code>, which is the point where the gradient is composed only of the ending color. The <code>focus</code> parameter represents a location as a proportion of the distance along the gradient line. The gradient falls off to the starting color linearly to either side.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a new <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a>.  </p>\n</li>\n<li><p>Uses this brush to draw an ellipse to the screen that has a linear, left-to-right transition of colors.  </p>\n</li>\n<li><p>Transforms the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> into a triangular shape with its peak in the center.  </p>\n</li>\n<li><p>Draws a second ellipse to the screen using the transformed brush.  </p>\n<p>Notice that the gradient of the lower ellipse transitions from blue to red and then back to blue.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicLinearGradientBrush#6\">    Public Sub SetBlendTriangularShapeExample(ByVal e As PaintEventArgs)\n\n        &#39; Create a LinearGradientBrush.\n        Dim myRect As New Rectangle(20, 20, 200, 100)\n        Dim myLGBrush As New LinearGradientBrush(myRect, Color.Blue, _\n        Color.Red, 0.0F, True)\n\n        &#39; Draw an ellipse to the screen using the LinearGradientBrush.\n        e.Graphics.FillEllipse(myLGBrush, myRect)\n\n        &#39; Create a triangular shaped brush with the peak at the center\n\n        &#39; of the drawing area.\n        myLGBrush.SetBlendTriangularShape(0.5F, 1.0F)\n\n        &#39; Use the triangular brush to draw a second ellipse.\n        myRect.Y = 150\n        e.Graphics.FillEllipse(myLGBrush, myRect)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicLinearGradientBrush#6\">private:\n   void SetBlendTriangularShapeExample( PaintEventArgs^ e )\n   {\n      // Create a LinearGradientBrush.\n      Rectangle myRect = Rectangle(20,20,200,100);\n      LinearGradientBrush^ myLGBrush = gcnew LinearGradientBrush( myRect,Color::Blue,Color::Red,0.0f,true );\n\n      // Draw an ellipse to the screen using the LinearGradientBrush.\n      e-&gt;Graphics-&gt;FillEllipse( myLGBrush, myRect );\n\n      // Create a triangular shaped brush with the peak at the center\n      // of the drawing area.\n      myLGBrush-&gt;SetBlendTriangularShape( .5f, 1.0f );\n\n      // Use the triangular brush to draw a second ellipse.\n      myRect.Y = 150;\n      e-&gt;Graphics-&gt;FillEllipse( myLGBrush, myRect );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicLinearGradientBrush#6\">        private void SetBlendTriangularShapeExample(PaintEventArgs e)\n        {\n                     \n            // Create a LinearGradientBrush.\n            Rectangle myRect = new Rectangle(20, 20, 200, 100);\n            LinearGradientBrush myLGBrush = new LinearGradientBrush(\n                myRect, Color.Blue, Color.Red,  0.0f, true);\n                     \n            // Draw an ellipse to the screen using the LinearGradientBrush.\n            e.Graphics.FillEllipse(myLGBrush, myRect);\n                     \n            // Create a triangular shaped brush with the peak at the center\n            // of the drawing area.\n            myLGBrush.SetBlendTriangularShape(.5f, 1.0f);\n                     \n            // Use the triangular brush to draw a second ellipse.\n            myRect.Y = 150;\n            e.Graphics.FillEllipse(myLGBrush, myRect);\n        }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush_SetSigmaBellShape_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush_SetSigmaBellShape_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetSigmaBellShape(Single)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a gradient falloff based on a bell-shaped curve.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetSigmaBellShape (float focus);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>focus</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value from 0 through 1 that specifies the center of the gradient (the point where the starting color and ending color are blended equally).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method specifies a <code>focus</code>, which is the point where the gradient is composed only of the ending color. The <code>focus</code> parameter represents a location as a proportion of the distance along the gradient line. The gradient falls off to the starting color based on a bell curve shape (normal distribution) to either side.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush#System_Drawing_Drawing2D_LinearGradientBrush_SetSigmaBellShape_\" data-linktype=\"relative-path\">SetSigmaBellShape</a><code>.</code></p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush_SetSigmaBellShape_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush_SetSigmaBellShape_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetSigmaBellShape(Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a gradient falloff based on a bell-shaped curve.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetSigmaBellShape (float focus, float scale);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>focus</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scale</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value from 0 through 1 that specifies how fast the colors falloff from the <code>focus</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method specifies a <code>focus</code>, which is the point where the gradient is composed only of the ending color. The <code>focus</code> parameter represents a location as a proportion of the distance along the gradient line. The gradient falls off to the starting color based on a bell curve shape (normal distribution) to either side.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a new <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a>.  </p>\n</li>\n<li><p>Uses this brush to draw an ellipse to the screen that has a linear, left-to-right transition of colors.  </p>\n</li>\n<li><p>Transforms the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> to have a bell shaped curve with its peak in the center.  </p>\n</li>\n<li><p>Draws a second ellipse to the screen using the bell-shaped brush.  </p>\n<p>Notice that the gradient of the lower ellipse transitions from blue to red and then back to blue.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicLinearGradientBrush#7\">    Public Sub SetSigmaBellShapeExample(ByVal e As PaintEventArgs)\n\n        &#39; Create a LinearGradientBrush.\n        Dim myRect As New Rectangle(20, 20, 200, 100)\n        Dim myLGBrush As New LinearGradientBrush(myRect, Color.Blue, _\n        Color.Red, 0.0F, True)\n\n        &#39; Draw an ellipse to the screen using the LinearGradientBrush.\n        e.Graphics.FillEllipse(myLGBrush, myRect)\n\n        &#39; Create a triangular shaped brush with the peak at the center\n        &#39; of the drawing area.\n        myLGBrush.SetSigmaBellShape(0.5F, 1.0F)\n\n        &#39; Use the triangular brush to draw a second ellipse.\n        myRect.Y = 150\n        e.Graphics.FillEllipse(myLGBrush, myRect)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicLinearGradientBrush#7\">private:\n   void SetSigmaBellShapeExample( PaintEventArgs^ e )\n   {\n      // Create a LinearGradientBrush.\n      Rectangle myRect = Rectangle(20,20,200,100);\n      LinearGradientBrush^ myLGBrush = gcnew LinearGradientBrush( myRect,Color::Blue,Color::Red,0.0f,true );\n\n      // Draw an ellipse to the screen using the LinearGradientBrush.\n      e-&gt;Graphics-&gt;FillEllipse( myLGBrush, myRect );\n\n      // Create a bell-shaped brush with the peak at the\n      // center of the drawing area.\n      myLGBrush-&gt;SetSigmaBellShape( .5f, 1.0f );\n\n      // Use the bell- shaped brush to draw a second\n      // ellipse.\n      myRect.Y = 150;\n      e-&gt;Graphics-&gt;FillEllipse( myLGBrush, myRect );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicLinearGradientBrush#7\">        private void SetSigmaBellShapeExample(PaintEventArgs e)\n        {\n                     \n            // Create a LinearGradientBrush.\n            Rectangle myRect = new Rectangle(20, 20, 200, 100);\n            LinearGradientBrush myLGBrush = new LinearGradientBrush(\n                myRect, Color.Blue, Color.Red,  0.0f, true);\n                     \n            // Draw an ellipse to the screen using the LinearGradientBrush.\n            e.Graphics.FillEllipse(myLGBrush, myRect);\n                     \n            // Create a bell-shaped brush with the peak at the\n                     \n            // center of the drawing area.\n            myLGBrush.SetSigmaBellShape(.5f, 1.0f);\n                     \n            // Use the bell- shaped brush to draw a second\n            // ellipse.\n            myRect.Y = 150;\n            e.Graphics.FillEllipse(myLGBrush, myRect);\n        }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush_TranslateTransform_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush_TranslateTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TranslateTransform(Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Translates the local geometric transform by the specified dimensions. This method prepends the translation to the transform.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void TranslateTransform (float dx, float dy);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dx</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the translation in x.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dy</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the translation in y.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see TranslateTransform.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_LinearGradientBrush_TranslateTransform_System_Single_System_Single_System_Drawing_Drawing2D_MatrixOrder_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_LinearGradientBrush_TranslateTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TranslateTransform(Single,Single,MatrixOrder)</div>        \r\n          </div>\r\n    \r\n            <p>Translates the local geometric transform by the specified dimensions in the specified order.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dx</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the translation in x.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dy</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the translation in y.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>order</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The order (prepend or append) in which to apply the translation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a new <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a>.  </p>\n</li>\n<li><p>Uses this brush to draw a rectangle to the screen that has a linear, left-to-right transition of colors.  </p>\n</li>\n<li><p>Rotates the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> by 90 degrees and scales the gradient.  </p>\n</li>\n<li><p>Draws the rectangle, with the rotated and scaled gradient, to the screen.  </p>\n</li>\n<li><p>Translates the rectangle so that it has a linear gradient running from top to bottom.  </p>\n</li>\n<li><p>Draws the translated rectangle to the screen.  </p>\n<p>Notice that there are three rectangles displayed the top one showing the left-to-right gradient, the middle one showing the rotated and scaled gradient, and the bottom one showing the final, translated gradient.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicLinearGradientBrush#8\">    Public Sub TranslateTransformExample(ByVal e As PaintEventArgs)\n\n        &#39; Create a LinearGradientBrush.\n        Dim myRect As New Rectangle(20, 20, 200, 100)\n        Dim myLGBrush As New LinearGradientBrush(myRect, Color.Blue, _\n        Color.Red, 0.0F, True)\n\n        &#39; Draw a rectangle to the screen using the LinearGradientBrush.\n        e.Graphics.FillRectangle(myLGBrush, myRect)\n\n        &#39; Rotate the LinearGradientBrush.\n        myLGBrush.RotateTransform(90.0F)\n\n        &#39; Scale the gradient for the height of the rectangle.\n        myLGBrush.ScaleTransform(0.5F, 1.0F)\n\n        &#39; Draw to the screen, the rotated and scaled gradient.\n        e.Graphics.FillRectangle(myLGBrush, 20, 150, 200, 100)\n\n        &#39; Rejustify the brush to start at the top edge of the rectangle.\n        myLGBrush.TranslateTransform(-20.0F, 0.0F)\n\n        &#39; Draw a third rectangle to the screen using the translated brush.\n        e.Graphics.FillRectangle(myLGBrush, 20, 300, 200, 100)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicLinearGradientBrush#8\">private:\n   void TranslateTransformExample( PaintEventArgs^ e )\n   {\n      // Create a LinearGradientBrush.\n      Rectangle myRect = Rectangle(20,20,200,100);\n      LinearGradientBrush^ myLGBrush = gcnew LinearGradientBrush( myRect,Color::Blue,Color::Red,0.0f,true );\n\n      // Draw a rectangle to the screen using the LinearGradientBrush.\n      e-&gt;Graphics-&gt;FillRectangle( myLGBrush, myRect );\n\n      // Rotate the LinearGradientBrush.\n      myLGBrush-&gt;RotateTransform( 90.0f );\n\n      // Scale the gradient for the height of the rectangle.\n      myLGBrush-&gt;ScaleTransform( 0.5f, 1.0f );\n\n      // Draw to the screen, the rotated and scaled gradient.\n      e-&gt;Graphics-&gt;FillRectangle( myLGBrush, 20, 150, 200, 100 );\n\n      // Rejustify the brush to start at the top edge of the\n      // rectangle.\n      myLGBrush-&gt;TranslateTransform(  -20.0f, 0.0f );\n\n      // Draw a third rectangle to the screen using the translated\n      // brush.\n      e-&gt;Graphics-&gt;FillRectangle( myLGBrush, 20, 300, 200, 100 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicLinearGradientBrush#8\">        private void TranslateTransformExample(PaintEventArgs e)\n        {\n                     \n            // Create a LinearGradientBrush.\n            Rectangle myRect = new Rectangle(20, 20, 200, 100);\n            LinearGradientBrush myLGBrush = new LinearGradientBrush(\n                myRect, Color.Blue, Color.Red,  0.0f, true);\n                     \n            // Draw a rectangle to the screen using the LinearGradientBrush.\n            e.Graphics.FillRectangle(myLGBrush, myRect);\n                     \n            // Rotate the LinearGradientBrush.\n            myLGBrush.RotateTransform(90.0f);\n                     \n            // Scale the gradient for the height of the rectangle.\n            myLGBrush.ScaleTransform(0.5f, 1.0f);\n                     \n            // Draw to the screen, the rotated and scaled gradient.\n            e.Graphics.FillRectangle(myLGBrush, 20, 150, 200, 100);\n                     \n            // Rejustify the brush to start at the top edge of the\n            // rectangle.\n            myLGBrush.TranslateTransform(-20.0f, 0.0f);\n                     \n            // Draw a third rectangle to the screen using the translated\n            // brush.\n            e.Graphics.FillRectangle(myLGBrush, 20, 300, 200, 100);\n        }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Drawing.Drawing2D.LinearGradientBrush.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Drawing.Drawing2D.LinearGradientBrush.yml\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.LinearGradientBrush\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.LinearGradientBrush..ctor\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.LinearGradientBrush.Blend\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.LinearGradientBrush.Clone\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.LinearGradientBrush.LinearColors\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.LinearGradientBrush.Rectangle\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.LinearGradientBrush.Transform\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.LinearGradientBrush.WrapMode\">\r\n<meta name=\"APILocation\" content=\"System.Drawing.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"23c7f8ad-1a26-b311-a5a6-512efe8794d7\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Drawing.Drawing2D\\LinearGradientBrush.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Encapsulates a  with a linear gradient. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Drawing.Drawing2D/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Drawing.Drawing2D.LinearGradientBrush\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Drawing.Drawing2D.LinearGradientBrush.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Drawing.Drawing2D.LinearGradientBrush.yml","open_to_public_contributors":true,"api_name":["System.Drawing.Drawing2D.LinearGradientBrush","System.Drawing.Drawing2D.LinearGradientBrush..ctor","System.Drawing.Drawing2D.LinearGradientBrush.Blend","System.Drawing.Drawing2D.LinearGradientBrush.Clone","System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection","System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors","System.Drawing.Drawing2D.LinearGradientBrush.LinearColors","System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform","System.Drawing.Drawing2D.LinearGradientBrush.Rectangle","System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform","System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform","System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform","System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape","System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape","System.Drawing.Drawing2D.LinearGradientBrush.Transform","System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform","System.Drawing.Drawing2D.LinearGradientBrush.WrapMode"],"api_location":["System.Drawing.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Drawing.Drawing2D.LinearGradientBrush","System::Drawing::Drawing2D::LinearGradientBrush","System.Drawing.Drawing2D.LinearGradientBrush.#ctor","System::Drawing::Drawing2D::LinearGradientBrush::#ctor","System.Drawing.Drawing2D.LinearGradientBrush.Blend","System::Drawing::Drawing2D::LinearGradientBrush::Blend","System.Drawing.Drawing2D.LinearGradientBrush.Clone","System::Drawing::Drawing2D::LinearGradientBrush::Clone","System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection","System::Drawing::Drawing2D::LinearGradientBrush::GammaCorrection","System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors","System::Drawing::Drawing2D::LinearGradientBrush::InterpolationColors","System.Drawing.Drawing2D.LinearGradientBrush.LinearColors","System::Drawing::Drawing2D::LinearGradientBrush::LinearColors","System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform","System::Drawing::Drawing2D::LinearGradientBrush::MultiplyTransform","System.Drawing.Drawing2D.LinearGradientBrush.Rectangle","System::Drawing::Drawing2D::LinearGradientBrush::Rectangle","System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform","System::Drawing::Drawing2D::LinearGradientBrush::ResetTransform","System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform","System::Drawing::Drawing2D::LinearGradientBrush::RotateTransform","System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform","System::Drawing::Drawing2D::LinearGradientBrush::ScaleTransform","System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape","System::Drawing::Drawing2D::LinearGradientBrush::SetBlendTriangularShape","System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape","System::Drawing::Drawing2D::LinearGradientBrush::SetSigmaBellShape","System.Drawing.Drawing2D.LinearGradientBrush.Transform","System::Drawing::Drawing2D::LinearGradientBrush::Transform","System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform","System::Drawing::Drawing2D::LinearGradientBrush::TranslateTransform","System.Drawing.Drawing2D.LinearGradientBrush.WrapMode","System::Drawing::Drawing2D::LinearGradientBrush::WrapMode"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"23c7f8ad-1a26-b311-a5a6-512efe8794d7","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Drawing.Drawing2D\\LinearGradientBrush.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Drawing.Drawing2D/LinearGradientBrush.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"LinearGradientBrush class | Microsoft Docs","_op_ogTitle":"LinearGradientBrush class","description":"Encapsulates a  with a linear gradient. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Drawing.Drawing2D/toc.json","toc_rel":"_splitted/System.Drawing.Drawing2D/toc.json","source_url":"","ms.assetid":"System.Drawing.Drawing2D.LinearGradientBrush","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.drawing.drawing2d.lineargradientbrush","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.drawing.drawing2d.lineargradientbrush","fileRelativePath":"System.Drawing.Drawing2D.LinearGradientBrush.html"},"themesRelativePathToOutputRoot":"_themes/"}