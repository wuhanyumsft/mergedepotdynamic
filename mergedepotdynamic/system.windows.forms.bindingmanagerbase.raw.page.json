{"content":"    \r\n    <h1 id=\"System_Windows_Forms_BindingManagerBase\">\r\n      <span class=\"lang-csharp\">BindingManagerBase</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Manages all <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> objects that are bound to the same data source and data member. This class is abstract.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class BindingManagerBase</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">BindingManagerBase</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The BindingManagerBase enables the synchronization of data-bound controls on a Windows Form that are bound to the same data source. (For more information about simple binding a control to a data source, see the <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> class.) For example, suppose that a form contains two <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> controls that are bound to the same data source but to different columns. The data source might be a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> that contains customer names, while the columns might contain the first and last names. The two controls must be synchronized in order to display the correct first and last names together for the same customer. The <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a>, which inherits from the BindingManagerBase class, accomplishes this synchronization by maintaining a pointer to the current item in the data source. The <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> controls are bound to the current item so they display the information for the same row. When the current item changes, the <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a> notifies all the bound controls so that they can refresh their data. Furthermore, you can set the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Position_\" data-linktype=\"relative-path\">Position</a> property to specify the row in the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> that the controls point to. To determine how many rows exist in the data source, use the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Count_\" data-linktype=\"relative-path\">Count</a> property.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a> is necessary because data sources do not necessarily maintain a current-item pointer. For instance, arrays and <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> objects can be data sources, but they do not have a property that returns the current item. To get the current item, use the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Current_\" data-linktype=\"relative-path\">Current</a> property.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.propertymanager\" data-linktype=\"relative-path\">PropertyManager</a> also inherits from the BindingManagerBase, and it is used to maintain the current property of an object, rather than the property of a current object in a data source. For this reason, trying to set the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Position_\" data-linktype=\"relative-path\">Position</a> or <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Count_\" data-linktype=\"relative-path\">Count</a> property for a <a class=\"xref\" href=\"system.windows.forms.propertymanager\" data-linktype=\"relative-path\">PropertyManager</a> has no effect.  </p>\n<p> To create a BindingManagerBase, use the <a class=\"xref\" href=\"system.windows.forms.bindingcontext\" data-linktype=\"relative-path\">BindingContext</a> class, which returns either a <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a> or a <a class=\"xref\" href=\"system.windows.forms.propertymanager\" data-linktype=\"relative-path\">PropertyManager</a>, depending on the data source being managed.  </p>\n<p> Solutions programmers are encouraged to bind controls directly to a <a class=\"xref\" href=\"system.windows.forms.bindingsource\" data-linktype=\"relative-path\">BindingSource</a> component, which acts as both a data source and data connector to the actual target data source. <a class=\"xref\" href=\"system.windows.forms.bindingsource\" data-linktype=\"relative-path\">BindingSource</a> greatly simplifies both simple and complex data binding, including managing currency between the control and its target.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase__ctor\" data-linktype=\"self-bookmark\">BindingManagerBase()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_onCurrentChangedHandler\" data-linktype=\"self-bookmark\">onCurrentChangedHandler</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies the event handler for the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_CurrentChanged\" data-linktype=\"relative-path\">CurrentChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_onPositionChangedHandler\" data-linktype=\"self-bookmark\">onPositionChangedHandler</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies the event handler for the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_PositionChanged\" data-linktype=\"relative-path\">PositionChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_Bindings\" data-linktype=\"self-bookmark\">Bindings</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of bindings being managed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_Count\" data-linktype=\"self-bookmark\">Count</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, gets the number of rows managed by the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_Current\" data-linktype=\"self-bookmark\">Current</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, gets the current object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_IsBindingSuspended\" data-linktype=\"self-bookmark\">IsBindingSuspended</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether binding is suspended.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_Position\" data-linktype=\"self-bookmark\">Position</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, gets or sets the position in the underlying list that controls bound to this data source point to.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_AddNew\" data-linktype=\"self-bookmark\">AddNew()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, adds a new item to the underlying list.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_CancelCurrentEdit\" data-linktype=\"self-bookmark\">CancelCurrentEdit()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, cancels the current edit.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_EndCurrentEdit\" data-linktype=\"self-bookmark\">EndCurrentEdit()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, ends the current edit.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_GetItemProperties\" data-linktype=\"self-bookmark\">GetItemProperties()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, gets the collection of property descriptors for the binding.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_GetItemProperties_System_Collections_ArrayList_System_Collections_ArrayList_\" data-linktype=\"self-bookmark\">GetItemProperties(ArrayList,ArrayList)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of property descriptors for the binding using the specified <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_GetItemProperties_System_Type_System_Int32_System_Collections_ArrayList_System_Collections_ArrayList_\" data-linktype=\"self-bookmark\">GetItemProperties(Type,Int32,ArrayList,ArrayList)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the list of properties of the items managed by this <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_GetListName_System_Collections_ArrayList_\" data-linktype=\"self-bookmark\">GetListName(ArrayList)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, gets the name of the list supplying the data for the binding.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_OnBindingComplete_System_Windows_Forms_BindingCompleteEventArgs_\" data-linktype=\"self-bookmark\">OnBindingComplete(BindingCompleteEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_BindingComplete\" data-linktype=\"relative-path\">BindingComplete</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_OnCurrentChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnCurrentChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_CurrentChanged\" data-linktype=\"relative-path\">CurrentChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_OnCurrentItemChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnCurrentItemChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_CurrentItemChanged\" data-linktype=\"relative-path\">CurrentItemChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_OnDataError_System_Exception_\" data-linktype=\"self-bookmark\">OnDataError(Exception)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_DataError\" data-linktype=\"relative-path\">DataError</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_PullData\" data-linktype=\"self-bookmark\">PullData()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Pulls data from the data-bound control into the data source, returning no information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_PushData\" data-linktype=\"self-bookmark\">PushData()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Pushes data from the data source into the data-bound control, returning no information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_RemoveAt_System_Int32_\" data-linktype=\"self-bookmark\">RemoveAt(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, deletes the row at the specified index from the underlying list.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_ResumeBinding\" data-linktype=\"self-bookmark\">ResumeBinding()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, resumes data binding.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_SuspendBinding\" data-linktype=\"self-bookmark\">SuspendBinding()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, suspends data binding.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_UpdateIsBinding\" data-linktype=\"self-bookmark\">UpdateIsBinding()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, updates the binding.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_BindingComplete\" data-linktype=\"self-bookmark\">BindingComplete</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs at the completion of a data-binding operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_CurrentChanged\" data-linktype=\"self-bookmark\">CurrentChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the currently bound item changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_CurrentItemChanged\" data-linktype=\"self-bookmark\">CurrentItemChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the state of the currently bound item changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_DataError\" data-linktype=\"self-bookmark\">DataError</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when an <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a> is silently handled by the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_BindingManagerBase_PositionChanged\" data-linktype=\"self-bookmark\">PositionChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs after the value of the <span class=\"xref\">stem.Windows.Forms.BindingManagerBase.Position*</span> property has changed.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase__ctor\">\r\n    \r\n            <a id=\"System_Windows_Forms_BindingManagerBase__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BindingManagerBase()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public BindingManagerBase ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default constructor sets the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Bindings_\" data-linktype=\"relative-path\">Bindings</a> property to <code>null</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_onCurrentChangedHandler\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">onCurrentChangedHandler</div>        \r\n          </div>\r\n    \r\n            <p>Specifies the event handler for the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_CurrentChanged\" data-linktype=\"relative-path\">CurrentChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected EventHandler onCurrentChangedHandler;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_onPositionChangedHandler\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">onPositionChangedHandler</div>        \r\n          </div>\r\n    \r\n            <p>Specifies the event handler for the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_PositionChanged\" data-linktype=\"relative-path\">PositionChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected EventHandler onPositionChangedHandler;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_Bindings\">\r\n    \r\n            <a id=\"System_Windows_Forms_BindingManagerBase_Bindings_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Bindings</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of bindings being managed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.BindingsCollection Bindings { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.bindingscollection\" data-linktype=\"relative-path\">BindingsCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.bindingscollection\" data-linktype=\"relative-path\">BindingsCollection</a> that contains the <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> objects managed by this <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example gets the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> for a specific data source. The example then uses the Bindings property to print information about each control bound to the same data source.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic BindingManagerBase.Bindings Example#1\">   void PrintBoundControls()\n   {\n      BindingManagerBase^ myBindingBase = this-&gt;BindingContext[ ds,&quot;customers&quot; ];\n      System::Collections::IEnumerator^ myEnum = myBindingBase-&gt;Bindings-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         Binding^ b = safe_cast&lt;Binding^&gt;(myEnum-&gt;Current);\n         Console::WriteLine( b-&gt;Control );\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic BindingManagerBase.Bindings Example#1\">private void PrintBoundControls()\n{\n   BindingManagerBase myBindingBase = this.BindingContext[ds, &quot;customers&quot;];\n   foreach(Binding b in myBindingBase.Bindings)\n   {\n      Console.WriteLine(b.Control.ToString());\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic BindingManagerBase.Bindings Example#1\">    Private Sub PrintBoundControls()\n        Dim myBindingBase As BindingManagerBase = Me.BindingContext(ds, &quot;customers&quot;)\n        Dim b As Binding\n        For Each b In  myBindingBase.Bindings\n            Console.WriteLine(b.Control.ToString())\n        Next b\n    End Sub &#39;PrintBoundControls\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_Count\">\r\n    \r\n            <a id=\"System_Windows_Forms_BindingManagerBase_Count_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Count</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, gets the number of rows managed by the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract int Count { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of rows managed by the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the Count property to determine the last item in the list of rows maintained by the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a>. To go to the last item, set the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Position_\" data-linktype=\"relative-path\">Position</a> property to the Count property value minus 1.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows four methods that set the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Position_\" data-linktype=\"relative-path\">Position</a> property. The <code>MoveNext</code> method increments the property by 1. The <code>MovePrevious</code> method decrements the property by 1. The <code>MoveFirst</code> method sets the property to 0. The <code>MoveLast</code> method sets the property to the value of the Count property minus 1.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic BindingManagerBase.Count Example#1\">private void BindingManagerBase_CurrentChanged\n(object sender, EventArgs e)\n{\n   // Print the new value of the current object.\n   Console.Write(&quot;Current Changed: &quot;);\n   Console.WriteLine(((BindingManagerBase)sender).Current);\n}\n\nprivate void MoveNext()\n{\n   // Increment the Position property value by one.\n   myBindingManagerBase.Position += 1;\n}\n\nprivate void MovePrevious()\n{\n   // Decrement the Position property value by one.\n   myBindingManagerBase.Position -= 1;\n}\n\nprivate void MoveFirst()\n{\n   // Go to the first item in the list.\n   myBindingManagerBase.Position = 0;\n}\n\nprivate void MoveLast()\n{\n   // Go to the last row in the list.\n   myBindingManagerBase.Position = \n   myBindingManagerBase.Count - 1;\n}\n   \n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic BindingManagerBase.Count Example#1\">private:\n   void BindingManagerBase_CurrentChanged( Object^ sender, EventArgs^ /*e*/ )\n   {\n      // Print the new value of the current object.\n      Console::Write( &quot;Current Changed: &quot; );\n      Console::WriteLine( ( (BindingManagerBase^)(sender) )-&gt;Current );\n   }\n\n   void MoveNext()\n   {\n      // Increment the Position property value by one.\n      myBindingManagerBase-&gt;Position = myBindingManagerBase-&gt;Position + 1;\n   }\n\n   void MovePrevious()\n   {\n      // Decrement the Position property value by one.\n      myBindingManagerBase-&gt;Position = myBindingManagerBase-&gt;Position - 1;\n   }\n\n   void MoveFirst()\n   {\n      // Go to the first item in the list.\n      myBindingManagerBase-&gt;Position = 0;\n   }\n\n   void MoveLast()\n   {\n      // Go to the last row in the list.\n      myBindingManagerBase-&gt;Position = myBindingManagerBase-&gt;Count - 1;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic BindingManagerBase.Count Example#1\">    Private Sub BindingManagerBase_CurrentChanged(sender As Object, e As EventArgs)\n        &#39; Print the new value of the current object.\n        Console.Write(&quot;Current Changed: &quot;)\n        Console.WriteLine(CType(sender, BindingManagerBase).Current)\n    End Sub &#39;BindingManagerBase_CurrentChanged\n    \n    \n    Private Sub MoveNext()\n        &#39; Increment the Position property value by one.\n        myBindingManagerBase.Position += 1\n    End Sub &#39;MoveNext\n    \n    \n    Private Sub MovePrevious()\n        &#39; Decrement the Position property value by one.\n        myBindingManagerBase.Position -= 1\n    End Sub &#39;MovePrevious\n    \n    \n    Private Sub MoveFirst()\n        &#39; Go to the first item in the list.\n        myBindingManagerBase.Position = 0\n    End Sub &#39;MoveFirst\n    \n    \n    Private Sub MoveLast()\n        &#39; Go to the last row in the list.\n        myBindingManagerBase.Position = myBindingManagerBase.Count - 1\n    End Sub &#39;MoveLast\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_Current\">\r\n    \r\n            <a id=\"System_Windows_Forms_BindingManagerBase_Current_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Current</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, gets the current object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract object Current { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the current object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Current object contains the value of the current item in the data source. To use the value of the current item, you must cast the item to the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the object contained by the <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_DataSource_\" data-linktype=\"relative-path\">DataSource</a>. For example, a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> contains <a class=\"xref\" href=\"system.data.datarowview\" data-linktype=\"relative-path\">DataRowView</a> objects. To determine the type of the current object, use the <a class=\"xref\" href=\"system.object#System_Object_GetType_\" data-linktype=\"relative-path\">GetType</a> and <a class=\"xref\" href=\"system.type#System_Type_ToString_\" data-linktype=\"relative-path\">ToString</a> methods.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When the <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_DataSource_\" data-linktype=\"relative-path\">DataSource</a> is a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, <a class=\"xref\" href=\"system.data.dataviewmanager\" data-linktype=\"relative-path\">DataViewManager</a>, or <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>, you are actually binding to a <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a>. Consequently, each Current object is a <a class=\"xref\" href=\"system.data.datarowview\" data-linktype=\"relative-path\">DataRowView</a> object.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example prints the value of the Current object in a <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> in the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_CurrentChanged\" data-linktype=\"relative-path\">CurrentChanged</a> event. The example assumes the data source is a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> containing a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> named <code>CustName</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic BindingManagerBase.Current Example#1\">    private void Current_Changed(object sender, EventArgs e)\n    {\n        BindingManagerBase bm = (BindingManagerBase) sender;\n        /* Check the type of the Current object. If it is not a \n        DataRowView, exit the method. */\n        if(bm.Current.GetType() != typeof(DataRowView)) return;\n\n        // Otherwise, print the value of the column named &quot;CustName&quot;.\n        DataRowView drv = (DataRowView) bm.Current;\n        Console.Write(&quot;CurrentChanged): &quot;);\n        Console.Write(drv[&quot;CustName&quot;]);\n        Console.WriteLine();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic BindingManagerBase.Current Example#1\">    Private Sub Current_Changed(sender As Object, e As EventArgs)\n        Dim bm As BindingManagerBase = CType(sender, BindingManagerBase)\n        &#39; Check the type of the Current object. If it is not a\n        &#39; DataRowView, exit the method. \n        If bm.Current.GetType() IsNot GetType(DataRowView) Then\n            Return\n        End If \n        &#39; Otherwise, print the value of the column named &quot;CustName&quot;.\n        Dim drv As DataRowView = CType(bm.Current, DataRowView)\n        Console.Write(&quot;CurrentChanged): &quot;)\n        Console.Write(drv(&quot;CustName&quot;))\n        Console.WriteLine()\n    End Sub &#39;Current_Changed\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic BindingManagerBase.Current Example#1\">   void Current_Changed( Object^ sender, EventArgs^ /*e*/ )\n   {\n      BindingManagerBase^ bm = dynamic_cast&lt;BindingManagerBase^&gt;(sender);\n      \n      /* Check the type of the Current object. If it is not a \n              DataRowView, exit the method. */\n      if ( bm-&gt;Current-&gt;GetType() != DataRowView::typeid )\n            return;\n\n      // Otherwise, print the value of the column named &quot;CustName&quot;.\n      DataRowView^ drv = dynamic_cast&lt;DataRowView^&gt;(bm-&gt;Current);\n      Console::Write( &quot;CurrentChanged): &quot; );\n      Console::Write( drv[ &quot;CustName&quot; ] );\n      Console::WriteLine();\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_IsBindingSuspended\">\r\n    \r\n            <a id=\"System_Windows_Forms_BindingManagerBase_IsBindingSuspended_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsBindingSuspended</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether binding is suspended.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsBindingSuspended { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if binding is suspended; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_Position\">\r\n    \r\n            <a id=\"System_Windows_Forms_BindingManagerBase_Position_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Position</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, gets or sets the position in the underlying list that controls bound to this data source point to.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract int Position { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A zero-based index that specifies a position in the underlying list.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the Position property to iterate through the underlying list maintained by the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a>. To go to the first item, set the Position to 0. To go to the end of the list, set the Position to the value of the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Count_\" data-linktype=\"relative-path\">Count</a> property minus 1.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_PositionChanged\" data-linktype=\"relative-path\">PositionChanged</a> event occurs when the Position property value changes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows four methods that set the Position property. The <code>MoveNext</code> method increments the property by 1. The <code>MovePrevious</code> method decrements the property by 1. The <code>MoveFirst</code> method sets the property to 0, and the <code>MoveLast</code> method sets the property to the value of the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Count_\" data-linktype=\"relative-path\">Count</a> property minus 1.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic BindingManagerBase.Count Example#1\">private void BindingManagerBase_CurrentChanged\n(object sender, EventArgs e)\n{\n   // Print the new value of the current object.\n   Console.Write(&quot;Current Changed: &quot;);\n   Console.WriteLine(((BindingManagerBase)sender).Current);\n}\n\nprivate void MoveNext()\n{\n   // Increment the Position property value by one.\n   myBindingManagerBase.Position += 1;\n}\n\nprivate void MovePrevious()\n{\n   // Decrement the Position property value by one.\n   myBindingManagerBase.Position -= 1;\n}\n\nprivate void MoveFirst()\n{\n   // Go to the first item in the list.\n   myBindingManagerBase.Position = 0;\n}\n\nprivate void MoveLast()\n{\n   // Go to the last row in the list.\n   myBindingManagerBase.Position = \n   myBindingManagerBase.Count - 1;\n}\n   \n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic BindingManagerBase.Count Example#1\">private:\n   void BindingManagerBase_CurrentChanged( Object^ sender, EventArgs^ /*e*/ )\n   {\n      // Print the new value of the current object.\n      Console::Write( &quot;Current Changed: &quot; );\n      Console::WriteLine( ( (BindingManagerBase^)(sender) )-&gt;Current );\n   }\n\n   void MoveNext()\n   {\n      // Increment the Position property value by one.\n      myBindingManagerBase-&gt;Position = myBindingManagerBase-&gt;Position + 1;\n   }\n\n   void MovePrevious()\n   {\n      // Decrement the Position property value by one.\n      myBindingManagerBase-&gt;Position = myBindingManagerBase-&gt;Position - 1;\n   }\n\n   void MoveFirst()\n   {\n      // Go to the first item in the list.\n      myBindingManagerBase-&gt;Position = 0;\n   }\n\n   void MoveLast()\n   {\n      // Go to the last row in the list.\n      myBindingManagerBase-&gt;Position = myBindingManagerBase-&gt;Count - 1;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic BindingManagerBase.Count Example#1\">    Private Sub BindingManagerBase_CurrentChanged(sender As Object, e As EventArgs)\n        &#39; Print the new value of the current object.\n        Console.Write(&quot;Current Changed: &quot;)\n        Console.WriteLine(CType(sender, BindingManagerBase).Current)\n    End Sub &#39;BindingManagerBase_CurrentChanged\n    \n    \n    Private Sub MoveNext()\n        &#39; Increment the Position property value by one.\n        myBindingManagerBase.Position += 1\n    End Sub &#39;MoveNext\n    \n    \n    Private Sub MovePrevious()\n        &#39; Decrement the Position property value by one.\n        myBindingManagerBase.Position -= 1\n    End Sub &#39;MovePrevious\n    \n    \n    Private Sub MoveFirst()\n        &#39; Go to the first item in the list.\n        myBindingManagerBase.Position = 0\n    End Sub &#39;MoveFirst\n    \n    \n    Private Sub MoveLast()\n        &#39; Go to the last row in the list.\n        myBindingManagerBase.Position = myBindingManagerBase.Count - 1\n    End Sub &#39;MoveLast\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_AddNew\">\r\n    \r\n            <a id=\"System_Windows_Forms_BindingManagerBase_AddNew_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddNew()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, adds a new item to the underlying list.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void AddNew ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The AddNew method adds a new item to the underlying list by using the default constructor for that item&#39;s type. AddNew is intended primarily to be used by programmers adding complex data-binding support to their custom component.  </p>\n<p> AddNew is commonly implemented using the following pattern that allows application programmers to inject their own code for creating customized items:  </p>\n<ol>\n<li><p>AddNew raises the <a class=\"xref\" href=\"system.windows.forms.bindingsource#System_Windows_Forms_BindingSource_AddingNew\" data-linktype=\"relative-path\">AddingNew</a> event.  </p>\n</li>\n<li><p>The programmer can supply a custom item by handling the <a class=\"xref\" href=\"system.windows.forms.bindingsource#System_Windows_Forms_BindingSource_AddingNew\" data-linktype=\"relative-path\">AddingNew</a> event and setting the <a class=\"xref\" href=\"system.componentmodel.addingneweventargs#System_ComponentModel_AddingNewEventArgs_NewObject_\" data-linktype=\"relative-path\">NewObject</a> property of the <a class=\"xref\" href=\"system.componentmodel.addingneweventargs\" data-linktype=\"relative-path\">AddingNewEventArgs</a> parameter to the new item. Otherwise, the component should create an item using the default constructor.  </p>\n</li>\n<li><p>If the data source does not implement the <a class=\"xref\" href=\"system.componentmodel.ieditableobject\" data-linktype=\"relative-path\">IEditableObject</a> interface, the item is immediately added to the data source and underlying list. If this interface is supported, then the addition is transacted by the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_CancelCurrentEdit_\" data-linktype=\"relative-path\">CancelCurrentEdit</a> and <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_EndCurrentEdit_\" data-linktype=\"relative-path\">EndCurrentEdit</a> methods.</p>\n</li>\n</ol>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_CancelCurrentEdit\">\r\n    \r\n            <a id=\"System_Windows_Forms_BindingManagerBase_CancelCurrentEdit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CancelCurrentEdit()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, cancels the current edit.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void CancelCurrentEdit ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is supported only if the data source implements the <a class=\"xref\" href=\"system.componentmodel.ieditableobject\" data-linktype=\"relative-path\">IEditableObject</a> interface. If the object does not implement the <a class=\"xref\" href=\"system.componentmodel.ieditableobject\" data-linktype=\"relative-path\">IEditableObject</a> interface, changes made to the data will not be discarded.  </p>\n<p> Calling the CancelCurrentEdit method causes the <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_Format\" data-linktype=\"relative-path\">Format</a> event to occur.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates both the CancelCurrentEdit and the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_EndCurrentEdit_\" data-linktype=\"relative-path\">EndCurrentEdit</a> methods. When you call the CancelCurrentEdit methods, changes made to the data are discarded. When you call the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_EndCurrentEdit_\" data-linktype=\"relative-path\">EndCurrentEdit</a> method, the changes are kept.  </p>\n<pre><code class=\"lang-cpp\" name=\"BindingManagerBase.CancelCurrentEdit Example#1\">   private:\n      void CancelEdit()\n      {\n         // Gets the CurrencyManager which is returned when the\n         // data source is a DataView.\n         BindingManagerBase^ myMgr = dynamic_cast&lt;CurrencyManager^&gt;(BindingContext[ myDataView ]);\n\n         // Gets the current row and changes a value. Then cancels the\n         // edit and thereby discards the changes.\n         DataRowView^ tempRowView = dynamic_cast&lt;DataRowView^&gt;(myMgr-&gt;Current);\n         Console::WriteLine( &quot;Original: {0}&quot;, tempRowView[ &quot;myCol&quot; ] );\n         tempRowView[ &quot;myCol&quot; ] = &quot;These changes will be discarded&quot;;\n         Console::WriteLine( &quot;Edit: {0}&quot;, tempRowView[ &quot;myCol&quot; ] );\n         myMgr-&gt;CancelCurrentEdit();\n         Console::WriteLine( &quot;After CanceCurrentlEdit: {0}&quot;, tempRowView[ &quot;myCol&quot; ] );\n      }\n\n      void EndEdit()\n      {\n         // Gets the CurrencyManager which is returned when the\n         // data source is a DataView.\n         BindingManagerBase^ myMgr = dynamic_cast&lt;CurrencyManager^&gt;(BindingContext[ myDataView ]);\n         \n         // Gets the current row and changes a value. Then ends the\n         // edit and thereby keeps the changes.\n         DataRowView^ tempRowView = dynamic_cast&lt;DataRowView^&gt;(myMgr-&gt;Current);\n         Console::WriteLine( &quot;Original: {0}&quot;, tempRowView[ &quot;myCol&quot; ] );\n         tempRowView[ &quot;myCol&quot; ] = &quot;These changes will be kept&quot;;\n         Console::WriteLine( &quot;Edit: {0}&quot;, tempRowView[ &quot;myCol&quot; ] );\n         myMgr-&gt;EndCurrentEdit();\n         Console::WriteLine( &quot;After EndCurrentEdit: {0}&quot;, tempRowView[ &quot;myCol&quot; ] );\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"BindingManagerBase.CancelCurrentEdit Example#1\">    Private Sub CancelEdit()\n        &#39; Gets the CurrencyManager which is returned when the \n        &#39; data source is a DataView.\n        Dim myMgr As BindingManagerBase = _\n        CType(BindingContext(myDataView), CurrencyManager)\n\n        &#39; Gets the current row and changes a value. Then cancels the \n        &#39; edit and thereby discards the changes.\n        Dim tempRowView As DataRowView = _\n        CType(myMgr.Current, DataRowView)\n        Console.WriteLine(&quot;Original: {0}&quot;, tempRowView(&quot;myCol&quot;))\n        tempRowView(&quot;myCol&quot;) = &quot;These changes will be discarded&quot;\n        Console.WriteLine(&quot;Edit: {0}&quot;, tempRowView(&quot;myCol&quot;))\n        myMgr.CancelCurrentEdit()\n        Console.WriteLine(&quot;After CanceCurrentlEdit: {0}&quot;, _\n        tempRowView(&quot;myCol&quot;))\n    End Sub\n\n    Private Sub EndEdit()\n        &#39; Gets the CurrencyManager which is returned when the \n        &#39; data source is a DataView.\n        Dim myMgr As BindingManagerBase = _\n        CType(BindingContext(myDataView), CurrencyManager)\n\n        &#39; Gets the current row and changes a value. Then ends the \n        &#39; edit and thereby keeps the changes.\n        Dim tempRowView As DataRowView = _\n        CType(myMgr.Current, DataRowView)\n        Console.WriteLine(&quot;Original: {0}&quot;, tempRowView(&quot;myCol&quot;))\n        tempRowView(&quot;myCol&quot;) = &quot;These changes will be kept&quot;\n        Console.WriteLine(&quot;Edit: {0}&quot;, tempRowView(&quot;myCol&quot;))\n        myMgr.EndCurrentEdit()\n        Console.WriteLine(&quot;After EndCurrentEdit: {0}&quot;, _\n        tempRowView(&quot;myCol&quot;))\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"BindingManagerBase.CancelCurrentEdit Example#1\">        private void CancelEdit()\n        {\n            // Gets the CurrencyManager which is returned when the \n            // data source is a DataView.\n            BindingManagerBase myMgr = \n                (CurrencyManager) BindingContext[myDataView]; \n\n            // Gets the current row and changes a value. Then cancels the \n            // edit and thereby discards the changes.\n            DataRowView tempRowView = (DataRowView) myMgr.Current;\n            Console.WriteLine(&quot;Original: {0}&quot;, tempRowView[&quot;myCol&quot;]);\n            tempRowView[&quot;myCol&quot;] = &quot;These changes will be discarded&quot;;\n            Console.WriteLine(&quot;Edit: {0}&quot;, tempRowView[&quot;myCol&quot;]);\n            myMgr.CancelCurrentEdit();\n            Console.WriteLine(&quot;After CanceCurrentlEdit: {0}&quot;, \n                tempRowView[&quot;myCol&quot;]);\n        }\n\n        private void EndEdit()\n        {\n            // Gets the CurrencyManager which is returned when the \n            // data source is a DataView.\n            BindingManagerBase myMgr = \n                (CurrencyManager) BindingContext[myDataView];\n\n            // Gets the current row and changes a value. Then ends the \n            // edit and thereby keeps the changes.\n            DataRowView tempRowView = (DataRowView) myMgr.Current;\n            Console.WriteLine(&quot;Original: {0}&quot;, tempRowView[&quot;myCol&quot;]);\n            tempRowView[&quot;myCol&quot;] = &quot;These changes will be kept&quot;;\n            Console.WriteLine(&quot;Edit: {0}&quot;, tempRowView[&quot;myCol&quot;]);\n            myMgr.EndCurrentEdit();\n            Console.WriteLine(&quot;After EndCurrentEdit: {0}&quot;, \n                tempRowView[&quot;myCol&quot;]);\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_EndCurrentEdit\">\r\n    \r\n            <a id=\"System_Windows_Forms_BindingManagerBase_EndCurrentEdit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndCurrentEdit()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, ends the current edit.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void EndCurrentEdit ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is supported only if the data source implements the <a class=\"xref\" href=\"system.componentmodel.ieditableobject\" data-linktype=\"relative-path\">IEditableObject</a> interface. In that case, changes will be saved. If the object does not implement the <a class=\"xref\" href=\"system.componentmodel.ieditableobject\" data-linktype=\"relative-path\">IEditableObject</a> interface, changes made to the data will not be saved.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates both the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_CancelCurrentEdit_\" data-linktype=\"relative-path\">CancelCurrentEdit</a> and the EndCurrentEdit methods. When you call the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_CancelCurrentEdit_\" data-linktype=\"relative-path\">CancelCurrentEdit</a> methods, changes made to the data are discarded. When you call the EndCurrentEdit method, the changes are kept.  </p>\n<pre><code class=\"lang-cpp\" name=\"BindingManagerBase.CancelCurrentEdit Example#1\">   private:\n      void CancelEdit()\n      {\n         // Gets the CurrencyManager which is returned when the\n         // data source is a DataView.\n         BindingManagerBase^ myMgr = dynamic_cast&lt;CurrencyManager^&gt;(BindingContext[ myDataView ]);\n\n         // Gets the current row and changes a value. Then cancels the\n         // edit and thereby discards the changes.\n         DataRowView^ tempRowView = dynamic_cast&lt;DataRowView^&gt;(myMgr-&gt;Current);\n         Console::WriteLine( &quot;Original: {0}&quot;, tempRowView[ &quot;myCol&quot; ] );\n         tempRowView[ &quot;myCol&quot; ] = &quot;These changes will be discarded&quot;;\n         Console::WriteLine( &quot;Edit: {0}&quot;, tempRowView[ &quot;myCol&quot; ] );\n         myMgr-&gt;CancelCurrentEdit();\n         Console::WriteLine( &quot;After CanceCurrentlEdit: {0}&quot;, tempRowView[ &quot;myCol&quot; ] );\n      }\n\n      void EndEdit()\n      {\n         // Gets the CurrencyManager which is returned when the\n         // data source is a DataView.\n         BindingManagerBase^ myMgr = dynamic_cast&lt;CurrencyManager^&gt;(BindingContext[ myDataView ]);\n         \n         // Gets the current row and changes a value. Then ends the\n         // edit and thereby keeps the changes.\n         DataRowView^ tempRowView = dynamic_cast&lt;DataRowView^&gt;(myMgr-&gt;Current);\n         Console::WriteLine( &quot;Original: {0}&quot;, tempRowView[ &quot;myCol&quot; ] );\n         tempRowView[ &quot;myCol&quot; ] = &quot;These changes will be kept&quot;;\n         Console::WriteLine( &quot;Edit: {0}&quot;, tempRowView[ &quot;myCol&quot; ] );\n         myMgr-&gt;EndCurrentEdit();\n         Console::WriteLine( &quot;After EndCurrentEdit: {0}&quot;, tempRowView[ &quot;myCol&quot; ] );\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"BindingManagerBase.CancelCurrentEdit Example#1\">    Private Sub CancelEdit()\n        &#39; Gets the CurrencyManager which is returned when the \n        &#39; data source is a DataView.\n        Dim myMgr As BindingManagerBase = _\n        CType(BindingContext(myDataView), CurrencyManager)\n\n        &#39; Gets the current row and changes a value. Then cancels the \n        &#39; edit and thereby discards the changes.\n        Dim tempRowView As DataRowView = _\n        CType(myMgr.Current, DataRowView)\n        Console.WriteLine(&quot;Original: {0}&quot;, tempRowView(&quot;myCol&quot;))\n        tempRowView(&quot;myCol&quot;) = &quot;These changes will be discarded&quot;\n        Console.WriteLine(&quot;Edit: {0}&quot;, tempRowView(&quot;myCol&quot;))\n        myMgr.CancelCurrentEdit()\n        Console.WriteLine(&quot;After CanceCurrentlEdit: {0}&quot;, _\n        tempRowView(&quot;myCol&quot;))\n    End Sub\n\n    Private Sub EndEdit()\n        &#39; Gets the CurrencyManager which is returned when the \n        &#39; data source is a DataView.\n        Dim myMgr As BindingManagerBase = _\n        CType(BindingContext(myDataView), CurrencyManager)\n\n        &#39; Gets the current row and changes a value. Then ends the \n        &#39; edit and thereby keeps the changes.\n        Dim tempRowView As DataRowView = _\n        CType(myMgr.Current, DataRowView)\n        Console.WriteLine(&quot;Original: {0}&quot;, tempRowView(&quot;myCol&quot;))\n        tempRowView(&quot;myCol&quot;) = &quot;These changes will be kept&quot;\n        Console.WriteLine(&quot;Edit: {0}&quot;, tempRowView(&quot;myCol&quot;))\n        myMgr.EndCurrentEdit()\n        Console.WriteLine(&quot;After EndCurrentEdit: {0}&quot;, _\n        tempRowView(&quot;myCol&quot;))\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"BindingManagerBase.CancelCurrentEdit Example#1\">        private void CancelEdit()\n        {\n            // Gets the CurrencyManager which is returned when the \n            // data source is a DataView.\n            BindingManagerBase myMgr = \n                (CurrencyManager) BindingContext[myDataView]; \n\n            // Gets the current row and changes a value. Then cancels the \n            // edit and thereby discards the changes.\n            DataRowView tempRowView = (DataRowView) myMgr.Current;\n            Console.WriteLine(&quot;Original: {0}&quot;, tempRowView[&quot;myCol&quot;]);\n            tempRowView[&quot;myCol&quot;] = &quot;These changes will be discarded&quot;;\n            Console.WriteLine(&quot;Edit: {0}&quot;, tempRowView[&quot;myCol&quot;]);\n            myMgr.CancelCurrentEdit();\n            Console.WriteLine(&quot;After CanceCurrentlEdit: {0}&quot;, \n                tempRowView[&quot;myCol&quot;]);\n        }\n\n        private void EndEdit()\n        {\n            // Gets the CurrencyManager which is returned when the \n            // data source is a DataView.\n            BindingManagerBase myMgr = \n                (CurrencyManager) BindingContext[myDataView];\n\n            // Gets the current row and changes a value. Then ends the \n            // edit and thereby keeps the changes.\n            DataRowView tempRowView = (DataRowView) myMgr.Current;\n            Console.WriteLine(&quot;Original: {0}&quot;, tempRowView[&quot;myCol&quot;]);\n            tempRowView[&quot;myCol&quot;] = &quot;These changes will be kept&quot;;\n            Console.WriteLine(&quot;Edit: {0}&quot;, tempRowView[&quot;myCol&quot;]);\n            myMgr.EndCurrentEdit();\n            Console.WriteLine(&quot;After EndCurrentEdit: {0}&quot;, \n                tempRowView[&quot;myCol&quot;]);\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_GetItemProperties\">\r\n    \r\n            <a id=\"System_Windows_Forms_BindingManagerBase_GetItemProperties_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetItemProperties()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, gets the collection of property descriptors for the binding.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a> that represents the property descriptors for the binding.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the GetItemProperties method to return a <a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a>. The example prints the <a class=\"xref\" href=\"system.componentmodel.memberdescriptor#System_ComponentModel_MemberDescriptor_Name_\" data-linktype=\"relative-path\">Name</a> and value of the current <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> using the <a class=\"xref\" href=\"system.componentmodel.propertydescriptor#System_ComponentModel_PropertyDescriptor_GetValue_\" data-linktype=\"relative-path\">GetValue</a> method of the <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic BindingManagerBase.GetItemProperties Example#1\">   void ShowGetItemProperties()\n   {\n      \n      // Create a new DataTable and add two columns.\n      DataTable^ dt = gcnew DataTable;\n      dt-&gt;Columns-&gt;Add( &quot;Name&quot;, Type::GetType( &quot;System.String&quot; ) );\n      dt-&gt;Columns-&gt;Add( &quot;ID&quot;, Type::GetType( &quot;System.String&quot; ) );\n      \n      // Add a row to the table.\n      DataRow^ dr = dt-&gt;NewRow();\n      dr[ &quot;Name&quot; ] = &quot;Ann&quot;;\n      dr[ &quot;ID&quot; ] = &quot;AAA&quot;;\n      dt-&gt;Rows-&gt;Add( dr );\n      PropertyDescriptorCollection^ myPropertyDescriptors = this-&gt;BindingContext[ dt ]-&gt;GetItemProperties();\n      PropertyDescriptor^ myPropertyDescriptor = myPropertyDescriptors[ &quot;Name&quot; ];\n      Console::WriteLine( myPropertyDescriptor-&gt;Name );\n      Console::WriteLine( myPropertyDescriptor-&gt;GetValue( dt-&gt;DefaultView[ 0 ] ) );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic BindingManagerBase.GetItemProperties Example#1\">private void ShowGetItemProperties()\n{\n   // Create a new DataTable and add two columns.\n   DataTable dt = new DataTable();\n   dt.Columns.Add(&quot;Name&quot;, Type.GetType(&quot;System.String&quot;));\n   dt.Columns.Add(&quot;ID&quot;, Type.GetType(&quot;System.String&quot;));\n   // Add a row to the table.\n   DataRow dr = dt.NewRow();\n   dr[&quot;Name&quot;] = &quot;Ann&quot;;\n   dr[&quot;ID&quot;] = &quot;AAA&quot;;\n   dt.Rows.Add(dr);\n\n   PropertyDescriptorCollection myPropertyDescriptors = \n   this.BindingContext[dt].GetItemProperties();\n   PropertyDescriptor myPropertyDescriptor = \n   myPropertyDescriptors[&quot;Name&quot;];\n   Console.WriteLine(myPropertyDescriptor.Name);\n   Console.WriteLine(myPropertyDescriptor.GetValue\n   (dt.DefaultView[0]));\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic BindingManagerBase.GetItemProperties Example#1\">   Private Sub ShowGetItemProperties()\n      &#39; Create a new DataTable and add two columns.\n      Dim dt As New DataTable()\n      dt.Columns.Add(&quot;Name&quot;, Type.GetType(&quot;System.String&quot;))\n      dt.Columns.Add(&quot;ID&quot;, Type.GetType(&quot;System.String&quot;))\n      &#39; Add a row to the table.\n      Dim dr As DataRow = dt.NewRow()\n      dr(&quot;Name&quot;) = &quot;Ann&quot;\n      dr(&quot;ID&quot;) = &quot;AAA&quot;\n      dt.Rows.Add(dr)\n        \n      Dim myPropertyDescriptors As PropertyDescriptorCollection = _\n      Me.BindingContext(dt).GetItemProperties()\n      Dim myPropertyDescriptor As PropertyDescriptor = myPropertyDescriptors(&quot;Name&quot;)\n      Console.WriteLine(myPropertyDescriptor.Name)\n      Console.WriteLine(myPropertyDescriptor.GetValue(dt.DefaultView(0)))\n   End Sub &#39;ShowGetItemProperties\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_GetItemProperties_System_Collections_ArrayList_System_Collections_ArrayList_\">\r\n    \r\n            <a id=\"System_Windows_Forms_BindingManagerBase_GetItemProperties_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetItemProperties(ArrayList,ArrayList)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of property descriptors for the binding using the specified <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.Collections.ArrayList dataSources, System.Collections.ArrayList listAccessors);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataSources</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> containing the data sources.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>listAccessors</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> containing the table&#39;s bound properties.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a> that represents the property descriptors for the binding.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used by developers creating data-bound controls.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_GetItemProperties_System_Type_System_Int32_System_Collections_ArrayList_System_Collections_ArrayList_\">\r\n    \r\n            <a id=\"System_Windows_Forms_BindingManagerBase_GetItemProperties_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetItemProperties(Type,Int32,ArrayList,ArrayList)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the list of properties of the items managed by this <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (Type listType, int offset, System.Collections.ArrayList dataSources, System.Collections.ArrayList listAccessors);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>listType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the bound list.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A counter used to recursively call the method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataSources</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> containing the data sources.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>listAccessors</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> containing the table&#39;s bound properties.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a> that represents the property descriptors for the binding.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This overload is used by developers to create data-bound controls.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_GetItemProperties_\" data-linktype=\"relative-path\">GetItemProperties</a> method to return a <a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a> for a <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a>. The example then prints out the <a class=\"xref\" href=\"system.componentmodel.memberdescriptor#System_ComponentModel_MemberDescriptor_Name_\" data-linktype=\"relative-path\">Name</a> and <a class=\"xref\" href=\"system.componentmodel.propertydescriptor#System_ComponentModel_PropertyDescriptor_PropertyType_\" data-linktype=\"relative-path\">PropertyType</a> of each <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a> in the collection.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic BindingManagerBase.GetItemProperties2 Example#1\">   void PrintPropertyDescriptions( BindingManagerBase^ b )\n   {\n      Console::WriteLine( &quot;Printing Property Descriptions&quot; );\n      PropertyDescriptorCollection^ ps = b-&gt;GetItemProperties();\n      for ( int i = 0; i &lt; ps-&gt;Count; i++ )\n      {\n         Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0}&nbsp;&nbsp;&nbsp;&nbsp;{1}&quot;, ps[ i ]-&gt;Name, ps[ i ]-&gt;PropertyType );\n\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic BindingManagerBase.GetItemProperties2 Example#1\">    Private Sub PrintPropertyDescriptions(b As BindingManagerBase)\n        Console.WriteLine(&quot;Printing Property Descriptions&quot;)\n        Dim ps As PropertyDescriptorCollection = b.GetItemProperties()\n        Dim i As Integer\n        For i = 0 To ps.Count - 1\n            Console.WriteLine((ControlChars.Tab &amp; ps(i).Name &amp; ControlChars.Tab &amp; ps(i).PropertyType.ToString))\n        Next i\n    End Sub &#39;PrintPropertyDescriptions\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic BindingManagerBase.GetItemProperties2 Example#1\">private void PrintPropertyDescriptions(BindingManagerBase b)\n{\n   Console.WriteLine(&quot;Printing Property Descriptions&quot;);\n   PropertyDescriptorCollection ps = b.GetItemProperties();\n   for(int i = 0; i &lt; ps.Count; i++)\n   {\n      Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + ps[i].Name + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + ps[i].PropertyType);\n   }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_GetListName_System_Collections_ArrayList_\">\r\n    \r\n            <a id=\"System_Windows_Forms_BindingManagerBase_GetListName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetListName(ArrayList)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, gets the name of the list supplying the data for the binding.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected abstract string GetListName (System.Collections.ArrayList listAccessors);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>listAccessors</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> containing the table&#39;s bound properties.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the list supplying the data for the binding.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_OnBindingComplete_System_Windows_Forms_BindingCompleteEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_BindingManagerBase_OnBindingComplete_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnBindingComplete(BindingCompleteEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_BindingComplete\" data-linktype=\"relative-path\">BindingComplete</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void OnBindingComplete (System.Windows.Forms.BindingCompleteEventArgs args);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.bindingcompleteeventargs\" data-linktype=\"relative-path\">BindingCompleteEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.bindingcompleteeventargs\" data-linktype=\"relative-path\">BindingCompleteEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.  </p>\n<p> The OnBindingComplete method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_OnCurrentChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_BindingManagerBase_OnCurrentChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCurrentChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_CurrentChanged\" data-linktype=\"relative-path\">CurrentChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected abstract void OnCurrentChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.  </p>\n<p> The OnCurrentChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_OnCurrentItemChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_BindingManagerBase_OnCurrentItemChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCurrentItemChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_CurrentItemChanged\" data-linktype=\"relative-path\">CurrentItemChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected abstract void OnCurrentItemChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.  </p>\n<p> The OnCurrentItemChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_OnDataError_System_Exception_\">\r\n    \r\n            <a id=\"System_Windows_Forms_BindingManagerBase_OnDataError_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDataError(Exception)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_DataError\" data-linktype=\"relative-path\">DataError</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void OnDataError (Exception e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a> that caused the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_DataError\" data-linktype=\"relative-path\">DataError</a> event to occur.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.  </p>\n<p> The OnDataError method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_PullData\">\r\n    \r\n            <a id=\"System_Windows_Forms_BindingManagerBase_PullData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PullData()</div>        \r\n          </div>\r\n    \r\n            <p>Pulls data from the data-bound control into the data source, returning no information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void PullData ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The PullData method is a programmatic way to pull information from the data-bound control back into the data source. It is not required for standard operation of a control, since normally a control automatically updates its bound data source when focus leaves it.  </p>\n<p> PullData raises the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_BindingComplete\" data-linktype=\"relative-path\">BindingComplete</a> event and change events on the data source as appropriate.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_PushData\">\r\n    \r\n            <a id=\"System_Windows_Forms_BindingManagerBase_PushData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PushData()</div>        \r\n          </div>\r\n    \r\n            <p>Pushes data from the data source into the data-bound control, returning no information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void PushData ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The PushData method is a programmatic way to push information from the data source into the data-bound control. This method is not required if the data source implements the <a class=\"xref\" href=\"system.componentmodel.ibindinglist\" data-linktype=\"relative-path\">System.ComponentModel.IBindingList</a> interface, because the <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_ListChanged\" data-linktype=\"relative-path\">System.ComponentModel.IBindingList.ListChanged</a> event should automatically cause the control to be updated through its currency manager.  </p>\n<p> If this method is issued when a <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_PullData_\" data-linktype=\"relative-path\">PullData</a> operation is being performed, the PushData method returns immediately with a value of <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_RemoveAt_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_BindingManagerBase_RemoveAt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveAt(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, deletes the row at the specified index from the underlying list.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void RemoveAt (int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the row to delete.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.indexoutofrangeexception\" data-linktype=\"relative-path\">IndexOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>There is no row at the specified <code>index</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RemoveAt method relies on the underlying data source to determine how the method behaves. (See the <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> class for a list of supported data sources.) For classes that implement <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>, <a class=\"xref\" href=\"system.componentmodel.ibindinglist\" data-linktype=\"relative-path\">IBindingList</a>, or <a class=\"xref\" href=\"system.componentmodel.itypedlist\" data-linktype=\"relative-path\">ITypedList</a>, as well as strongly typed classes that implement <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>, the RemoveAt method actually deletes the row in the underlying list instead of removing its contents.  </p>\n<p> If the underlying list implements the <a class=\"xref\" href=\"system.componentmodel.ibindinglist\" data-linktype=\"relative-path\">IBindingList</a> interface, the <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_AllowRemove_\" data-linktype=\"relative-path\">AllowRemove</a> property must return <code>true</code>. If the underlying list implements the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> interface, the <a class=\"xref\" href=\"system.collections.ilist#System_Collections_IList_IsFixedSize_\" data-linktype=\"relative-path\">IsFixedSize</a> property must return <code>false</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"BindingManagerBase_RemoveAt#1\">      void button1_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n      {\n         try\n         {\n            // Get the &#39;BindingManagerBase&#39; Object*.\n            BindingManagerBase^ myBindingManagerBase = BindingContext[ myDataTable ];\n\n            // Remove the selected row from the grid.\n            myBindingManagerBase-&gt;RemoveAt( myBindingManagerBase-&gt;Position );\n         }\n         catch ( Exception^ ex ) \n         {\n            MessageBox::Show( ex-&gt;Source );\n            MessageBox::Show( ex-&gt;Message );\n         }\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"BindingManagerBase_RemoveAt#1\">      Private Sub button1_Click(sender As Object, e As EventArgs)\n         Try\n            &#39; Get the &#39;BindingManagerBase&#39; object.\n            Dim myBindingManagerBase As BindingManagerBase = BindingContext(myDataTable)\n            &#39; Remove the selected row from the grid.\n            myBindingManagerBase.RemoveAt(myBindingManagerBase.Position)\n         Catch ex As Exception\n            MessageBox.Show(ex.Source)\n            MessageBox.Show(ex.Message)\n         End Try\n      End Sub &#39;button1_Click\n      \n</code></pre><pre><code class=\"lang-cs\" name=\"BindingManagerBase_RemoveAt#1\">      private void button1_Click(object sender, System.EventArgs e)\n      {\n         try\n         {\n            // Get the &#39;BindingManagerBase&#39; object.\n            BindingManagerBase myBindingManagerBase=BindingContext[myDataTable];\n            // Remove the selected row from the grid.\n            myBindingManagerBase.RemoveAt(myBindingManagerBase.Position);\n         }\n         catch(Exception ex)\n         {\n            MessageBox.Show(ex.Source);\n            MessageBox.Show(ex.Message);\n         }\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_ResumeBinding\">\r\n    \r\n            <a id=\"System_Windows_Forms_BindingManagerBase_ResumeBinding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResumeBinding()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, resumes data binding.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void ResumeBinding ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_SuspendBinding_\" data-linktype=\"relative-path\">SuspendBinding</a> and ResumeBinding are two methods that allow the temporary suspension and resumption of data binding. You would typically suspend data binding if the user must be allowed to edit data fields before validation occurs. For example, the user might need to change a field to be in accordance with a second field; otherwise, validating the first field would cause the second field to be in error.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-vb\" name=\"BindingManagerBase_Suspend_Resume_Binding#2\">   Private Sub button4_Click(sender As Object, e As EventArgs)\n      Try\n         Dim myBindingManager2 As BindingManagerBase = BindingContext(myDataSet, &quot;Customers&quot;)\n         myBindingManager2.ResumeBinding()\n      Catch ex As Exception\n         MessageBox.Show(ex.Source.ToString())\n         MessageBox.Show(ex.Message.ToString())\n      End Try\n   End Sub &#39;button4_Click\n</code></pre><pre><code class=\"lang-cs\" name=\"BindingManagerBase_Suspend_Resume_Binding#2\">   private void button4_Click(object sender, EventArgs e)\n   {\n      try\n      {\n         BindingManagerBase myBindingManager2=BindingContext [myDataSet, &quot;Customers&quot;];\n         myBindingManager2.ResumeBinding();\n      }\n      catch(Exception ex)\n      {\n         MessageBox.Show(ex.Source);\n         MessageBox.Show(ex.Message);\n      }\n   }\n</code></pre><pre><code class=\"lang-cpp\" name=\"BindingManagerBase_Suspend_Resume_Binding#2\">   void button4_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      try\n      {\n         BindingManagerBase^ myBindingManager2 = BindingContext[ myDataSet, &quot;Customers&quot; ];\n         myBindingManager2-&gt;ResumeBinding();\n      }\n      catch ( Exception^ ex ) \n      {\n         MessageBox::Show( ex-&gt;Source );\n         MessageBox::Show( ex-&gt;Message );\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_SuspendBinding\">\r\n    \r\n            <a id=\"System_Windows_Forms_BindingManagerBase_SuspendBinding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SuspendBinding()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, suspends data binding.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void SuspendBinding ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>SuspendBinding and <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_ResumeBinding_\" data-linktype=\"relative-path\">ResumeBinding</a> are two methods that allow the temporary suspension and resumption of data binding. You would typically suspend data binding if the user must be allowed to edit data fields before validation occurs. For example, the user might need to change a field to be in accordance with a second field; otherwise, validating the first field would cause the second field to be in error.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-vb\" name=\"BindingManagerBase_Suspend_Resume_Binding#2\">   Private Sub button4_Click(sender As Object, e As EventArgs)\n      Try\n         Dim myBindingManager2 As BindingManagerBase = BindingContext(myDataSet, &quot;Customers&quot;)\n         myBindingManager2.ResumeBinding()\n      Catch ex As Exception\n         MessageBox.Show(ex.Source.ToString())\n         MessageBox.Show(ex.Message.ToString())\n      End Try\n   End Sub &#39;button4_Click\n</code></pre><pre><code class=\"lang-cs\" name=\"BindingManagerBase_Suspend_Resume_Binding#2\">   private void button4_Click(object sender, EventArgs e)\n   {\n      try\n      {\n         BindingManagerBase myBindingManager2=BindingContext [myDataSet, &quot;Customers&quot;];\n         myBindingManager2.ResumeBinding();\n      }\n      catch(Exception ex)\n      {\n         MessageBox.Show(ex.Source);\n         MessageBox.Show(ex.Message);\n      }\n   }\n</code></pre><pre><code class=\"lang-cpp\" name=\"BindingManagerBase_Suspend_Resume_Binding#2\">   void button4_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      try\n      {\n         BindingManagerBase^ myBindingManager2 = BindingContext[ myDataSet, &quot;Customers&quot; ];\n         myBindingManager2-&gt;ResumeBinding();\n      }\n      catch ( Exception^ ex ) \n      {\n         MessageBox::Show( ex-&gt;Source );\n         MessageBox::Show( ex-&gt;Message );\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_UpdateIsBinding\">\r\n    \r\n            <a id=\"System_Windows_Forms_BindingManagerBase_UpdateIsBinding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UpdateIsBinding()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, updates the binding.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected abstract void UpdateIsBinding ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The UpdateIsBinding method updates the data binding between the bound control and its data source. For complex data-binding scenarios, it also resets the current position to the beginning of the underlying list.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_BindingComplete\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BindingComplete</div>        \r\n          </div>\r\n    \r\n            <p>Occurs at the completion of a data-binding operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.BindingCompleteEventHandler BindingComplete;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The BindingComplete event occurs after the completion of a data-binding operation, which may include the following:  </p>\n<ul>\n<li><p>Pushing information from the data source into the property of its bound control.  </p>\n</li>\n<li><p>Pulling information from a bound control into its associated data source.  </p>\n<p>Note that this event is raised regardless of the completion status of the binding operation, although this status can be determined by examining the <a class=\"xref\" href=\"system.windows.forms.bindingcompleteeventargs#System_Windows_Forms_BindingCompleteEventArgs_BindingCompleteState_\" data-linktype=\"relative-path\">BindingCompleteState</a> property of the <a class=\"xref\" href=\"system.windows.forms.bindingcompleteeventargs\" data-linktype=\"relative-path\">BindingCompleteEventArgs</a> parameter associated with the event. <a class=\"xref\" href=\"system.windows.forms.bindingcompleteeventargs\" data-linktype=\"relative-path\">BindingCompleteEventArgs</a> may also contain error and exception information. For example, a binding operation that attempts to push a null value from a data source into a <a class=\"xref\" href=\"system.windows.forms.datetimepicker\" data-linktype=\"relative-path\">DateTimePicker</a> control will generate an exception, since a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> cannot be <code>null</code>. In this case, although the binding operation does not successfully complete, the BindingComplete event will be raised, and the event will contain information on the failed binding attempt.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to handle the BindingComplete event and ensure multiple controls bound to the same data source remain synchronized when one of the control values is changed. To run this example, paste the code into a Windows Form and call the <code>InitializeControlsAndData</code> method from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event-handling method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.BindingSourceMultipleControls#11\">    Dim WithEvents bmb As BindingManagerBase\n\n    Private Sub InitializeControlsAndData() \n        &#39; Initialize the controls and set location, size and \n        &#39; other basic properties.\n        Me.dataGridView1 = New DataGridView()\n        \n        Me.textBox1 = New TextBox()\n        Me.textBox2 = New TextBox()\n        Me.dataGridView1.ColumnHeadersHeightSizeMode = _\n            DataGridViewColumnHeadersHeightSizeMode.AutoSize\n        Me.dataGridView1.Dock = DockStyle.Top\n        Me.dataGridView1.Location = New Point(0, 0)\n        Me.dataGridView1.Size = New Size(292, 150)\n        Me.textBox1.Location = New Point(132, 156)\n        Me.textBox1.Size = New Size(100, 20)\n        Me.textBox2.Location = New Point(12, 156)\n        Me.textBox2.Size = New Size(100, 20)\n        Me.ClientSize = New Size(292, 266)\n        Me.Controls.Add(Me.textBox2)\n        Me.Controls.Add(Me.textBox1)\n        Me.Controls.Add(Me.dataGridView1)\n        \n        &#39; Declare the DataSet and add a table and column.\n        Dim set1 As New DataSet()\n        set1.Tables.Add(&quot;Menu&quot;)\n        set1.Tables(0).Columns.Add(&quot;Beverages&quot;)\n        \n        &#39; Add some rows to the table.\n        set1.Tables(0).Rows.Add(&quot;coffee&quot;)\n        set1.Tables(0).Rows.Add(&quot;tea&quot;)\n        set1.Tables(0).Rows.Add(&quot;hot chocolate&quot;)\n        set1.Tables(0).Rows.Add(&quot;milk&quot;)\n        set1.Tables(0).Rows.Add(&quot;orange juice&quot;)\n\n        &#39; Add the control data bindings.\n        dataGridView1.DataSource = set1\n        dataGridView1.DataMember = &quot;Menu&quot;\n        textBox1.DataBindings.Add(&quot;Text&quot;, set1, &quot;Menu.Beverages&quot;, _\n            True, DataSourceUpdateMode.OnPropertyChanged)\n        textBox2.DataBindings.Add(&quot;Text&quot;, set1, &quot;Menu.Beverages&quot;, _\n            True, DataSourceUpdateMode.OnPropertyChanged)\n\n        &#39; Get the BindingManagerBase for this binding.\n        bmb = Me.BindingContext(set1, &quot;Menu&quot;)\n\n    End Sub\n    \n    Private Sub bmb_BindingComplete(ByVal sender As Object, ByVal e As BindingCompleteEventArgs) _\n        Handles bmb.BindingComplete\n\n        &#39; Check if the data source has been updated, and that no error has occured.\n        If e.BindingCompleteContext = BindingCompleteContext.DataSourceUpdate _\n            AndAlso e.Exception Is Nothing Then\n\n            &#39; If not, end the current edit.\n            e.Binding.BindingManagerBase.EndCurrentEdit()\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.BindingSourceMultipleControls#11\">        private void InitializeControlsAndData()\n        {\n            // Initialize the controls and set location, size and \n            // other basic properties.\n            this.dataGridView1 = new DataGridView();\n            \n            this.textBox1 = new TextBox();\n            this.textBox2 = new TextBox();\n            this.dataGridView1.ColumnHeadersHeightSizeMode =\n                DataGridViewColumnHeadersHeightSizeMode.AutoSize;\n            this.dataGridView1.Dock = DockStyle.Top;\n            this.dataGridView1.Location = new Point(0, 0);\n            this.dataGridView1.Size = new Size(292, 150);\n            this.textBox1.Location = new Point(132, 156);\n            this.textBox1.Size = new Size(100, 20);\n            this.textBox2.Location = new Point(12, 156);\n            this.textBox2.Size = new Size(100, 20);\n            this.ClientSize = new Size(292, 266);\n            this.Controls.Add(this.textBox2);\n            this.Controls.Add(this.textBox1);\n            this.Controls.Add(this.dataGridView1);\n\n            // Declare the DataSet and add a table and column.\n            DataSet set1 = new DataSet();\n            set1.Tables.Add(&quot;Menu&quot;);\n            set1.Tables[0].Columns.Add(&quot;Beverages&quot;);\n\n            // Add some rows to the table.\n            set1.Tables[0].Rows.Add(&quot;coffee&quot;);\n            set1.Tables[0].Rows.Add(&quot;tea&quot;);\n            set1.Tables[0].Rows.Add(&quot;hot chocolate&quot;);\n            set1.Tables[0].Rows.Add(&quot;milk&quot;);\n            set1.Tables[0].Rows.Add(&quot;orange juice&quot;);\n\n            \n            // Add the control data bindings.\n            dataGridView1.DataSource = set1;\n            dataGridView1.DataMember = &quot;Menu&quot;;\n            textBox1.DataBindings.Add(&quot;Text&quot;, set1,\n                &quot;Menu.Beverages&quot;, true, DataSourceUpdateMode.OnPropertyChanged);\n            textBox2.DataBindings.Add(&quot;Text&quot;, set1,\n                &quot;Menu.Beverages&quot;, true, DataSourceUpdateMode.OnPropertyChanged);\n\n            BindingManagerBase bmb = this.BindingContext[set1, &quot;Menu&quot;];\n            bmb.BindingComplete += new BindingCompleteEventHandler(bmb_BindingComplete);\n          \n        }\n\n        private void bmb_BindingComplete(object sender, BindingCompleteEventArgs e)\n        {\n            // Check if the data source has been updated, and that no error has occured.\n            if (e.BindingCompleteContext ==\n                BindingCompleteContext.DataSourceUpdate &amp;&amp; e.Exception == null)\n\n                // If not, end the current edit.\n                e.Binding.BindingManagerBase.EndCurrentEdit(); ;\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_CurrentChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CurrentChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the currently bound item changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler CurrentChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CurrentChanged event is raised whenever the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Current_\" data-linktype=\"relative-path\">Current</a> property changes or the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_CurrentItemChanged\" data-linktype=\"relative-path\">CurrentItemChanged</a> event occurs.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example prints the value of the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Current_\" data-linktype=\"relative-path\">Current</a> object in a <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> in the CurrentChanged event. The example assumes the data source is a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> containing a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> named <code>CustName</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic BindingManagerBase.Current Example#1\">    private void Current_Changed(object sender, EventArgs e)\n    {\n        BindingManagerBase bm = (BindingManagerBase) sender;\n        /* Check the type of the Current object. If it is not a \n        DataRowView, exit the method. */\n        if(bm.Current.GetType() != typeof(DataRowView)) return;\n\n        // Otherwise, print the value of the column named &quot;CustName&quot;.\n        DataRowView drv = (DataRowView) bm.Current;\n        Console.Write(&quot;CurrentChanged): &quot;);\n        Console.Write(drv[&quot;CustName&quot;]);\n        Console.WriteLine();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic BindingManagerBase.Current Example#1\">    Private Sub Current_Changed(sender As Object, e As EventArgs)\n        Dim bm As BindingManagerBase = CType(sender, BindingManagerBase)\n        &#39; Check the type of the Current object. If it is not a\n        &#39; DataRowView, exit the method. \n        If bm.Current.GetType() IsNot GetType(DataRowView) Then\n            Return\n        End If \n        &#39; Otherwise, print the value of the column named &quot;CustName&quot;.\n        Dim drv As DataRowView = CType(bm.Current, DataRowView)\n        Console.Write(&quot;CurrentChanged): &quot;)\n        Console.Write(drv(&quot;CustName&quot;))\n        Console.WriteLine()\n    End Sub &#39;Current_Changed\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic BindingManagerBase.Current Example#1\">   void Current_Changed( Object^ sender, EventArgs^ /*e*/ )\n   {\n      BindingManagerBase^ bm = dynamic_cast&lt;BindingManagerBase^&gt;(sender);\n      \n      /* Check the type of the Current object. If it is not a \n              DataRowView, exit the method. */\n      if ( bm-&gt;Current-&gt;GetType() != DataRowView::typeid )\n            return;\n\n      // Otherwise, print the value of the column named &quot;CustName&quot;.\n      DataRowView^ drv = dynamic_cast&lt;DataRowView^&gt;(bm-&gt;Current);\n      Console::Write( &quot;CurrentChanged): &quot; );\n      Console::Write( drv[ &quot;CustName&quot; ] );\n      Console::WriteLine();\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_CurrentItemChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CurrentItemChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the state of the currently bound item changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler CurrentItemChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CurrentItemChanged event occurs whenever there is a change in the state in the currently bound item. This can occur if one of the properties of this item is changed or if the item itself is replaced or moved.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CurrentItemChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of a type that inherits from <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a>, such as a <a class=\"xref\" href=\"system.windows.forms.propertymanager\" data-linktype=\"relative-path\">PropertyManager</a> or <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a>. Then name the instance <code>BindingManagerBase1</code> and ensure that the event handler is associated with the CurrentItemChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#82\">private void BindingManagerBase1_CurrentItemChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the BindingManagerBase.CurrentItemChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#82\">Private Sub BindingManagerBase1_CurrentItemChanged(sender as Object, e as EventArgs) _ \n     Handles BindingManagerBase1.CurrentItemChanged\n\n   MessageBox.Show(&quot;You are in the BindingManagerBase.CurrentItemChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_DataError\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataError</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when an <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a> is silently handled by the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.BindingManagerDataErrorEventHandler DataError;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is informational and reports Common Language Specification (CLS)-compliant exceptions only. To determine what type of exception occurred, handle this event and check the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerdataerroreventargs#System_Windows_Forms_BindingManagerDataErrorEventArgs_Exception_\" data-linktype=\"relative-path\">Exception</a> property of the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerdataerroreventargs\" data-linktype=\"relative-path\">BindingManagerDataErrorEventArgs</a>.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the DataError event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of a type that inherits from <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a>, such as a <a class=\"xref\" href=\"system.windows.forms.propertymanager\" data-linktype=\"relative-path\">PropertyManager</a> or <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a>. Then name the instance <code>BindingManagerBase1</code> and ensure that the event handler is associated with the DataError event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#83\">private void BindingManagerBase1_DataError(Object sender, BindingManagerDataErrorEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Exception&quot;, e.Exception );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;DataError Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#83\">Private Sub BindingManagerBase1_DataError(sender as Object, e as BindingManagerDataErrorEventArgs) _ \n     Handles BindingManagerBase1.DataError\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Exception&quot;, e.Exception)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;DataError Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_BindingManagerBase_PositionChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PositionChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs after the value of the <span class=\"xref\">stem.Windows.Forms.BindingManagerBase.Position*</span> property has changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler PositionChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a>, and then adds it to a collection of <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> objects for a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control. The example then gets the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> for the data source and adds a delegate to the PositionChanged event.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic BindingManagerBase.PositionChanged Example#1\">   void BindControl()\n   {\n      \n      /* Create a Binding object for the TextBox control. \n         The data-bound property for the control is the Text \n         property. */\n      Binding^ myBinding = gcnew Binding( &quot;Text&quot;,ds,&quot;customers.custName&quot; );\n      text1-&gt;DataBindings-&gt;Add( myBinding );\n      \n      // Get the BindingManagerBase for the Customers table. \n      BindingManagerBase^ bmCustomers = this-&gt;BindingContext[ ds,&quot;Customers&quot; ];\n      \n      // Add the delegate for the PositionChanged event.\n      bmCustomers-&gt;PositionChanged += gcnew EventHandler( this, &amp;Form1::Position_Changed );\n   }\n\n\nprivate:\n   void Position_Changed( Object^ sender, EventArgs^ /*e*/ )\n   {\n      \n      // Print the Position property value when it changes.\n      Console::WriteLine( (dynamic_cast&lt;BindingManagerBase^&gt;(sender))-&gt;Position );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic BindingManagerBase.PositionChanged Example#1\">protected void BindControl()\n{\n   /* Create a Binding object for the TextBox control. \n   The data-bound property for the control is the Text \n   property. */\n   Binding myBinding = \n   new Binding(&quot;Text&quot;, ds, &quot;customers.custName&quot;);\n\n   text1.DataBindings.Add(myBinding);\n\n   // Get the BindingManagerBase for the Customers table. \n   BindingManagerBase bmCustomers = \n   this.BindingContext [ds, &quot;Customers&quot;];\n\n   // Add the delegate for the PositionChanged event.\n   bmCustomers.PositionChanged += \n   new EventHandler(Position_Changed);\n}\n\nprivate void Position_Changed(object sender, EventArgs e)\n{\n   // Print the Position property value when it changes.\n   Console.WriteLine(((BindingManagerBase)sender).Position);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic BindingManagerBase.PositionChanged Example#1\">    Protected Sub BindControl()\n        &#39; Create a Binding object for the TextBox control.\n        &#39; The data-bound property for the control is the Text\n        &#39; property. \n        Dim myBinding As New Binding(&quot;Text&quot;, ds, &quot;customers.custName&quot;)\n        \n        text1.DataBindings.Add(myBinding)\n        \n        &#39; Get the BindingManagerBase for the Customers table. \n        Dim bmCustomers As BindingManagerBase = Me.BindingContext(ds, &quot;Customers&quot;)\n        \n        &#39; Add the delegate for the PositionChanged event.\n        AddHandler bmCustomers.PositionChanged, AddressOf Position_Changed\n    End Sub &#39;BindControl\n    \n    \n    Private Sub Position_Changed(sender As Object, e As EventArgs)\n        &#39; Print the Position property value when it changes.\n        Console.WriteLine(CType(sender, BindingManagerBase).Position)\n    End Sub &#39;Position_Changed\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.BindingManagerBase.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.BindingManagerBase.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.AddNew\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.BindingComplete\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.add_BindingComplete\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.remove_BindingComplete\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.Bindings\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.CancelCurrentEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.Count\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.Current\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.CurrentChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.add_CurrentChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.remove_CurrentChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.CurrentItemChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.add_CurrentItemChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.remove_CurrentItemChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.DataError\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.add_DataError\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.remove_DataError\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.EndCurrentEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.GetItemProperties\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.GetListName\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.IsBindingSuspended\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.OnBindingComplete\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.OnCurrentChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.onCurrentChangedHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.OnDataError\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.onPositionChangedHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.Position\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.PositionChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.add_PositionChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.remove_PositionChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.PullData\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.PushData\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.RemoveAt\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.ResumeBinding\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.SuspendBinding\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.BindingManagerBase.UpdateIsBinding\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"90aab6d4-5223-e9bb-bec5-8ff9adaecb9e\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Manages all  objects that are bound to the same data source and data member. This class is abstract.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.BindingManagerBase\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.BindingManagerBase.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.BindingManagerBase.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.BindingManagerBase","System.Windows.Forms.BindingManagerBase..ctor","System.Windows.Forms.BindingManagerBase.AddNew","System.Windows.Forms.BindingManagerBase.BindingComplete","System.Windows.Forms.BindingManagerBase.add_BindingComplete","System.Windows.Forms.BindingManagerBase.remove_BindingComplete","System.Windows.Forms.BindingManagerBase.Bindings","System.Windows.Forms.BindingManagerBase.CancelCurrentEdit","System.Windows.Forms.BindingManagerBase.Count","System.Windows.Forms.BindingManagerBase.Current","System.Windows.Forms.BindingManagerBase.CurrentChanged","System.Windows.Forms.BindingManagerBase.add_CurrentChanged","System.Windows.Forms.BindingManagerBase.remove_CurrentChanged","System.Windows.Forms.BindingManagerBase.CurrentItemChanged","System.Windows.Forms.BindingManagerBase.add_CurrentItemChanged","System.Windows.Forms.BindingManagerBase.remove_CurrentItemChanged","System.Windows.Forms.BindingManagerBase.DataError","System.Windows.Forms.BindingManagerBase.add_DataError","System.Windows.Forms.BindingManagerBase.remove_DataError","System.Windows.Forms.BindingManagerBase.EndCurrentEdit","System.Windows.Forms.BindingManagerBase.GetItemProperties","System.Windows.Forms.BindingManagerBase.GetListName","System.Windows.Forms.BindingManagerBase.IsBindingSuspended","System.Windows.Forms.BindingManagerBase.OnBindingComplete","System.Windows.Forms.BindingManagerBase.OnCurrentChanged","System.Windows.Forms.BindingManagerBase.onCurrentChangedHandler","System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged","System.Windows.Forms.BindingManagerBase.OnDataError","System.Windows.Forms.BindingManagerBase.onPositionChangedHandler","System.Windows.Forms.BindingManagerBase.Position","System.Windows.Forms.BindingManagerBase.PositionChanged","System.Windows.Forms.BindingManagerBase.add_PositionChanged","System.Windows.Forms.BindingManagerBase.remove_PositionChanged","System.Windows.Forms.BindingManagerBase.PullData","System.Windows.Forms.BindingManagerBase.PushData","System.Windows.Forms.BindingManagerBase.RemoveAt","System.Windows.Forms.BindingManagerBase.ResumeBinding","System.Windows.Forms.BindingManagerBase.SuspendBinding","System.Windows.Forms.BindingManagerBase.UpdateIsBinding"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.BindingManagerBase","System::Windows::Forms::BindingManagerBase","System.Windows.Forms.BindingManagerBase.#ctor","System::Windows::Forms::BindingManagerBase::#ctor","System.Windows.Forms.BindingManagerBase.AddNew","System::Windows::Forms::BindingManagerBase::AddNew","System.Windows.Forms.BindingManagerBase.BindingComplete","System::Windows::Forms::BindingManagerBase::BindingComplete","System.Windows.Forms.BindingManagerBase.Bindings","System::Windows::Forms::BindingManagerBase::Bindings","System.Windows.Forms.BindingManagerBase.CancelCurrentEdit","System::Windows::Forms::BindingManagerBase::CancelCurrentEdit","System.Windows.Forms.BindingManagerBase.Count","System::Windows::Forms::BindingManagerBase::Count","System.Windows.Forms.BindingManagerBase.Current","System::Windows::Forms::BindingManagerBase::Current","System.Windows.Forms.BindingManagerBase.CurrentChanged","System::Windows::Forms::BindingManagerBase::CurrentChanged","System.Windows.Forms.BindingManagerBase.CurrentItemChanged","System::Windows::Forms::BindingManagerBase::CurrentItemChanged","System.Windows.Forms.BindingManagerBase.DataError","System::Windows::Forms::BindingManagerBase::DataError","System.Windows.Forms.BindingManagerBase.EndCurrentEdit","System::Windows::Forms::BindingManagerBase::EndCurrentEdit","System.Windows.Forms.BindingManagerBase.GetItemProperties","System::Windows::Forms::BindingManagerBase::GetItemProperties","System.Windows.Forms.BindingManagerBase.GetListName","System::Windows::Forms::BindingManagerBase::GetListName","System.Windows.Forms.BindingManagerBase.IsBindingSuspended","System::Windows::Forms::BindingManagerBase::IsBindingSuspended","System.Windows.Forms.BindingManagerBase.OnBindingComplete","System::Windows::Forms::BindingManagerBase::OnBindingComplete","System.Windows.Forms.BindingManagerBase.OnCurrentChanged","System::Windows::Forms::BindingManagerBase::OnCurrentChanged","System.Windows.Forms.BindingManagerBase.onCurrentChangedHandler","System::Windows::Forms::BindingManagerBase::onCurrentChangedHandler","System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged","System::Windows::Forms::BindingManagerBase::OnCurrentItemChanged","System.Windows.Forms.BindingManagerBase.OnDataError","System::Windows::Forms::BindingManagerBase::OnDataError","System.Windows.Forms.BindingManagerBase.onPositionChangedHandler","System::Windows::Forms::BindingManagerBase::onPositionChangedHandler","System.Windows.Forms.BindingManagerBase.Position","System::Windows::Forms::BindingManagerBase::Position","System.Windows.Forms.BindingManagerBase.PositionChanged","System::Windows::Forms::BindingManagerBase::PositionChanged","System.Windows.Forms.BindingManagerBase.PullData","System::Windows::Forms::BindingManagerBase::PullData","System.Windows.Forms.BindingManagerBase.PushData","System::Windows::Forms::BindingManagerBase::PushData","System.Windows.Forms.BindingManagerBase.RemoveAt","System::Windows::Forms::BindingManagerBase::RemoveAt","System.Windows.Forms.BindingManagerBase.ResumeBinding","System::Windows::Forms::BindingManagerBase::ResumeBinding","System.Windows.Forms.BindingManagerBase.SuspendBinding","System::Windows::Forms::BindingManagerBase::SuspendBinding","System.Windows.Forms.BindingManagerBase.UpdateIsBinding","System::Windows::Forms::BindingManagerBase::UpdateIsBinding"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"90aab6d4-5223-e9bb-bec5-8ff9adaecb9e","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/BindingManagerBase.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"BindingManagerBase class | Microsoft Docs","_op_ogTitle":"BindingManagerBase class","description":"Manages all  objects that are bound to the same data source and data member. This class is abstract.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.BindingManagerBase","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.bindingmanagerbase","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.bindingmanagerbase","fileRelativePath":"System.Windows.Forms.BindingManagerBase.html"},"themesRelativePathToOutputRoot":"_themes/"}