{"content":"    \r\n    <h1 id=\"System_Reflection_Emit_SignatureHelper\">\r\n      <span class=\"lang-csharp\">SignatureHelper</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides methods for building signatures.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]\n[System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._SignatureHelper))]\n[System.Runtime.InteropServices.ComVisible(true)]\npublic sealed class SignatureHelper : System.Runtime.InteropServices._SignatureHelper</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SignatureHelper</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Use the SignatureHelper class to create a signature blob that can be passed to the <a class=\"xref\" href=\"system.reflection.emit.dynamicilinfo#System_Reflection_Emit_DynamicILInfo_SetLocalSignature_\" data-linktype=\"relative-path\">SetLocalSignature</a> method of the <a class=\"xref\" href=\"system.reflection.emit.dynamicilinfo\" data-linktype=\"relative-path\">DynamicILInfo</a> class. A SignatureHelper object can also be passed to the <a class=\"xref\" href=\"system.reflection.emit.ilgenerator#System_Reflection_Emit_ILGenerator_Emit_System_Reflection_Emit_OpCode_System_Reflection_Emit_SignatureHelper_\" data-linktype=\"relative-path\">System.Reflection.Emit.ILGenerator.Emit(OpCode,SignatureHelper)</a> method overload to insert an instruction and a signature token into a Microsoft intermediate language (MSIL) stream. For information on signature blobs and signature metadata, see the ECMA Partition II Metadata documentation.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The ECMA Partition II documentation is available online; see <a href=\"http://go.microsoft.com/fwlink/?LinkID=99212\" data-linktype=\"external\">ECMA C# and Common Language Infrastructure Standards</a> on MSDN and <a href=\"http://go.microsoft.com/fwlink/?LinkID=65552\" data-linktype=\"external\">Standard ECMA-335 - Common Language Infrastructure (CLI)</a> on the Ecma International Web site.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_SignatureHelper_AddArgument_System_Type_\" data-linktype=\"self-bookmark\">AddArgument(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an argument to the signature.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_SignatureHelper_AddArgument_System_Type_System_Boolean_\" data-linktype=\"self-bookmark\">AddArgument(Type,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an argument of the specified type to the signature, specifying whether the argument is pinned.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_SignatureHelper_AddArgument_System_Type_System_Type___System_Type___\" data-linktype=\"self-bookmark\">AddArgument(Type,Type[],Type[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an argument to the signature, with the specified custom modifiers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_SignatureHelper_AddArguments_System_Type___System_Type_____System_Type_____\" data-linktype=\"self-bookmark\">AddArguments(Type[],Type[][],Type[][])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a set of arguments to the signature, with the specified custom modifiers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_SignatureHelper_AddSentinel\" data-linktype=\"self-bookmark\">AddSentinel()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Marks the end of a vararg fixed part. This is only used if the caller is creating a vararg signature call site.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_SignatureHelper_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Checks if this instance is equal to the given object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_SignatureHelper_GetFieldSigHelper_System_Reflection_Module_\" data-linktype=\"self-bookmark\">GetFieldSigHelper(Module)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a signature helper for a field.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_SignatureHelper_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and returns a hash code for this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_SignatureHelper_GetLocalVarSigHelper\" data-linktype=\"self-bookmark\">GetLocalVarSigHelper()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a signature helper for a local variable.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_SignatureHelper_GetLocalVarSigHelper_System_Reflection_Module_\" data-linktype=\"self-bookmark\">GetLocalVarSigHelper(Module)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a signature helper for a local variable.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_SignatureHelper_GetMethodSigHelper_System_Reflection_CallingConventions_System_Type_\" data-linktype=\"self-bookmark\">GetMethodSigHelper(CallingConventions,Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a signature helper for a method given the method&#39;s calling convention and return type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_SignatureHelper_GetMethodSigHelper_System_Runtime_InteropServices_CallingConvention_System_Type_\" data-linktype=\"self-bookmark\">GetMethodSigHelper(CallingConvention,Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a signature helper for a method given the method&#39;s unmanaged calling convention and return type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_SignatureHelper_GetMethodSigHelper_System_Reflection_Module_System_Reflection_CallingConventions_System_Type_\" data-linktype=\"self-bookmark\">GetMethodSigHelper(Module,CallingConventions,Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a signature helper for a method given the method&#39;s module, calling convention, and return type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_SignatureHelper_GetMethodSigHelper_System_Reflection_Module_System_Runtime_InteropServices_CallingConvention_System_Type_\" data-linktype=\"self-bookmark\">GetMethodSigHelper(Module,CallingConvention,Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a signature helper for a method given the method&#39;s module, unmanaged calling convention, and return type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_SignatureHelper_GetMethodSigHelper_System_Reflection_Module_System_Type_System_Type___\" data-linktype=\"self-bookmark\">GetMethodSigHelper(Module,Type,Type[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a signature helper for a method with a standard calling convention, given the method&#39;s module, return type, and argument types.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_SignatureHelper_GetPropertySigHelper_System_Reflection_Module_System_Type_System_Type___\" data-linktype=\"self-bookmark\">GetPropertySigHelper(Module,Type,Type[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a signature helper for a property, given the dynamic module that contains the property, the property type, and the property arguments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_SignatureHelper_GetPropertySigHelper_System_Reflection_Module_System_Type_System_Type___System_Type___System_Type___System_Type_____System_Type_____\" data-linktype=\"self-bookmark\">GetPropertySigHelper(Module,Type,Type[],Type[],Type[],Type[][],Type[][])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a signature helper for a property, given the dynamic module that contains the property, the property type, the property arguments, and custom modifiers for the return type and arguments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_SignatureHelper_GetPropertySigHelper_System_Reflection_Module_System_Reflection_CallingConventions_System_Type_System_Type___System_Type___System_Type___System_Type_____System_Type_____\" data-linktype=\"self-bookmark\">GetPropertySigHelper(Module,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a signature helper for a property, given the dynamic module that contains the property, the calling convention, the property type, the property arguments, and custom modifiers for the return type and arguments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_SignatureHelper_GetSignature\" data-linktype=\"self-bookmark\">GetSignature()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the end token to the signature and marks the signature as finished, so no further tokens can be added.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_SignatureHelper_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a string representing the signature arguments.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_SignatureHelper_System_Runtime_InteropServices__SignatureHelper_GetIDsOfNames_System_Guid__System_IntPtr_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"self-bookmark\">_SignatureHelper.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Maps a set of names to a corresponding set of dispatch identifiers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_SignatureHelper_System_Runtime_InteropServices__SignatureHelper_GetTypeInfo_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"self-bookmark\">_SignatureHelper.GetTypeInfo(UInt32,UInt32,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the type information for an object, which can then be used to get the type information for an interface.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_SignatureHelper_System_Runtime_InteropServices__SignatureHelper_GetTypeInfoCount_System_UInt32__\" data-linktype=\"self-bookmark\">_SignatureHelper.GetTypeInfoCount(UInt32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_SignatureHelper_System_Runtime_InteropServices__SignatureHelper_Invoke_System_UInt32_System_Guid__System_UInt32_System_Int16_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_\" data-linktype=\"self-bookmark\">_SignatureHelper.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides access to properties and methods exposed by an object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_SignatureHelper_AddArgument_System_Type_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_SignatureHelper_AddArgument_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddArgument(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an argument to the signature.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddArgument (Type clsArgument);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>clsArgument</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The signature has already been finished.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>clsArgument</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To add an argument with optional or required custom modifiers, use the [AddArgument(Type,â€‚Type[],â€‚Type&lt;xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29&gt; method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_SignatureHelper_AddArgument_System_Type_System_Boolean_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_SignatureHelper_AddArgument_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddArgument(Type,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an argument of the specified type to the signature, specifying whether the argument is pinned.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddArgument (Type argument, bool pinned);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>argument</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The argument type.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pinned</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if the argument is pinned; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>argument</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To add an argument with optional or required custom modifiers, use the [AddArgument(Type,â€‚Type[],â€‚Type&lt;xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29&gt; method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_SignatureHelper_AddArgument_System_Type_System_Type___System_Type___\">\r\n    \r\n            <a id=\"System_Reflection_Emit_SignatureHelper_AddArgument_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddArgument(Type,Type[],Type[])</div>        \r\n          </div>\r\n    \r\n            <p>Adds an argument to the signature, with the specified custom modifiers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddArgument (Type argument, Type[] requiredCustomModifiers, Type[] optionalCustomModifiers);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>argument</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The argument type.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>requiredCustomModifiers</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of types representing the required custom modifiers for the argument, such as <a class=\"xref\" href=\"system.runtime.compilerservices.isconst\" data-linktype=\"relative-path\">IsConst</a> or <a class=\"xref\" href=\"system.runtime.compilerservices.isboxed\" data-linktype=\"relative-path\">IsBoxed</a>. If the argument has no required custom modifiers, specify <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>optionalCustomModifiers</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of types representing the optional custom modifiers for the argument, such as <a class=\"xref\" href=\"system.runtime.compilerservices.isconst\" data-linktype=\"relative-path\">IsConst</a> or <a class=\"xref\" href=\"system.runtime.compilerservices.isboxed\" data-linktype=\"relative-path\">IsBoxed</a>. If the argument has no optional custom modifiers, specify <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>argument</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> An element of <code>requiredCustomModifiers</code> or <code>optionalCustomModifiers</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The signature has already been finished.  </p>\n<p> -or-  </p>\n<p> One of the specified custom modifiers is an array type.  </p>\n<p> -or-  </p>\n<p> One of the specified custom modifiers is an open generic type. That is, the <span class=\"xref\">stem.Type.ContainsGenericParameters*</span> property is <code>true</code> for the custom modifier.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.runtime.compilerservices\" data-linktype=\"relative-path\">System.Runtime.CompilerServices</a> namespace for classes that represent custom modifiers.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_SignatureHelper_AddArguments_System_Type___System_Type_____System_Type_____\">\r\n    \r\n            <a id=\"System_Reflection_Emit_SignatureHelper_AddArguments_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddArguments(Type[],Type[][],Type[][])</div>        \r\n          </div>\r\n    \r\n            <p>Adds a set of arguments to the signature, with the specified custom modifiers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddArguments (Type[] arguments, Type[][] requiredCustomModifiers, Type[][] optionalCustomModifiers);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>arguments</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The types of the arguments to be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>requiredCustomModifiers</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[][]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding argument, such as <a class=\"xref\" href=\"system.runtime.compilerservices.isconst\" data-linktype=\"relative-path\">IsConst</a> or <a class=\"xref\" href=\"system.runtime.compilerservices.isboxed\" data-linktype=\"relative-path\">IsBoxed</a>. If a particular argument has no required custom modifiers, specify <code>null</code> instead of an array of types. If none of the arguments have required custom modifiers, specify <code>null</code> instead of an array of arrays.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>optionalCustomModifiers</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[][]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding argument, such as <a class=\"xref\" href=\"system.runtime.compilerservices.isconst\" data-linktype=\"relative-path\">IsConst</a> or <a class=\"xref\" href=\"system.runtime.compilerservices.isboxed\" data-linktype=\"relative-path\">IsBoxed</a>. If a particular argument has no optional custom modifiers, specify <code>null</code> instead of an array of types. If none of the arguments have optional custom modifiers, specify <code>null</code> instead of an array of arrays.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>An element of <code>arguments</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> One of the specified custom modifiers is <code>null</code>. (However, <code>null</code> can be specified for the array of custom modifiers for any argument.)</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The signature has already been finished.  </p>\n<p> -or-  </p>\n<p> One of the specified custom modifiers is an array type.  </p>\n<p> -or-  </p>\n<p> One of the specified custom modifiers is an open generic type. That is, the <span class=\"xref\">stem.Type.ContainsGenericParameters*</span> property is <code>true</code> for the custom modifier.  </p>\n<p> -or-  </p>\n<p> The size of <code>requiredCustomModifiers</code> or <code>optionalCustomModifiers</code> does not equal the size of <code>arguments</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The arguments are added to the end of the signature, in order of the elements of <code>arguments</code>.  </p>\n<p> See the <a class=\"xref\" href=\"system.runtime.compilerservices\" data-linktype=\"relative-path\">System.Runtime.CompilerServices</a> namespace for classes that represent custom modifiers.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_SignatureHelper_AddSentinel\">\r\n    \r\n            <a id=\"System_Reflection_Emit_SignatureHelper_AddSentinel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddSentinel()</div>        \r\n          </div>\r\n    \r\n            <p>Marks the end of a vararg fixed part. This is only used if the caller is creating a vararg signature call site.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddSentinel ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_SignatureHelper_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_SignatureHelper_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Checks if this instance is equal to the given object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object with which this instance should be compared.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the given object is a <code>SignatureHelper</code> and represents the same signature; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_SignatureHelper_GetFieldSigHelper_System_Reflection_Module_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_SignatureHelper_GetFieldSigHelper_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetFieldSigHelper(Module)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a signature helper for a field.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Reflection.Emit.SignatureHelper GetFieldSigHelper (System.Reflection.Module mod);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.module\" data-linktype=\"relative-path\">Module</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The dynamic module that contains the field for which the <code>SignatureHelper</code> is requested.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.signaturehelper\" data-linktype=\"relative-path\">SignatureHelper</a></div>\r\n                  </div>\r\n                  <p>The <code>SignatureHelper</code> object for a field.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_SignatureHelper_GetHashCode\">\r\n    \r\n            <a id=\"System_Reflection_Emit_SignatureHelper_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Creates and returns a hash code for this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns the hash code based on the name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The hash code is created from the name of this instance, so the return value is the same as if the <code>GetHashCode</code> method were called on the value of the <code>Name</code> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_SignatureHelper_GetLocalVarSigHelper\">\r\n    \r\n            <a id=\"System_Reflection_Emit_SignatureHelper_GetLocalVarSigHelper_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetLocalVarSigHelper()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a signature helper for a local variable.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.signaturehelper\" data-linktype=\"relative-path\">SignatureHelper</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.reflection.emit.signaturehelper\" data-linktype=\"relative-path\">SignatureHelper</a> for a local variable.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_SignatureHelper_GetLocalVarSigHelper_System_Reflection_Module_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_SignatureHelper_GetLocalVarSigHelper_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetLocalVarSigHelper(Module)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a signature helper for a local variable.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper (System.Reflection.Module mod);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.module\" data-linktype=\"relative-path\">Module</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The dynamic module that contains the local variable for which the <code>SignatureHelper</code> is requested.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.signaturehelper\" data-linktype=\"relative-path\">SignatureHelper</a></div>\r\n                  </div>\r\n                  <p>The <code>SignatureHelper</code> object for a local variable.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_SignatureHelper_GetMethodSigHelper_System_Reflection_CallingConventions_System_Type_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_SignatureHelper_GetMethodSigHelper_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetMethodSigHelper(CallingConventions,Type)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a signature helper for a method given the method&#39;s calling convention and return type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.CallingConventions callingConvention, Type returnType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callingConvention</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.callingconventions\" data-linktype=\"relative-path\">CallingConventions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The calling convention of the method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>returnType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The return type of the method, or <code>null</code> for a void return type (<code>Sub</code> procedure in Visual Basic).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.signaturehelper\" data-linktype=\"relative-path\">SignatureHelper</a></div>\r\n                  </div>\r\n                  <p>The <code>SignatureHelper</code> object for a method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_SignatureHelper_GetMethodSigHelper_System_Runtime_InteropServices_CallingConvention_System_Type_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_SignatureHelper_GetMethodSigHelper_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetMethodSigHelper(CallingConvention,Type)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a signature helper for a method given the method&#39;s unmanaged calling convention and return type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Runtime.InteropServices.CallingConvention unmanagedCallingConvention, Type returnType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>unmanagedCallingConvention</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.callingconvention\" data-linktype=\"relative-path\">CallingConvention</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The unmanaged calling convention of the method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>returnType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The return type of the method, or <code>null</code> for a void return type (<code>Sub</code> procedure in Visual Basic).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.signaturehelper\" data-linktype=\"relative-path\">SignatureHelper</a></div>\r\n                  </div>\r\n                  <p>The <code>SignatureHelper</code> object for a method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>unmanagedCallConv</code> is an unknown unmanaged calling convention.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_SignatureHelper_GetMethodSigHelper_System_Reflection_Module_System_Reflection_CallingConventions_System_Type_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_SignatureHelper_GetMethodSigHelper_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetMethodSigHelper(Module,CallingConventions,Type)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a signature helper for a method given the method&#39;s module, calling convention, and return type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, System.Reflection.CallingConventions callingConvention, Type returnType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.module\" data-linktype=\"relative-path\">Module</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.reflection.emit.modulebuilder\" data-linktype=\"relative-path\">ModuleBuilder</a> that contains the method for which the <code>SignatureHelper</code> is requested.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callingConvention</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.callingconventions\" data-linktype=\"relative-path\">CallingConventions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The calling convention of the method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>returnType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The return type of the method, or <code>null</code> for a void return type (<code>Sub</code> procedure in Visual Basic).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.signaturehelper\" data-linktype=\"relative-path\">SignatureHelper</a></div>\r\n                  </div>\r\n                  <p>The <code>SignatureHelper</code> object for a method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>mod</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>mod</code> is not a <a class=\"xref\" href=\"system.reflection.emit.modulebuilder\" data-linktype=\"relative-path\">ModuleBuilder</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_SignatureHelper_GetMethodSigHelper_System_Reflection_Module_System_Runtime_InteropServices_CallingConvention_System_Type_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_SignatureHelper_GetMethodSigHelper_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetMethodSigHelper(Module,CallingConvention,Type)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a signature helper for a method given the method&#39;s module, unmanaged calling convention, and return type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, System.Runtime.InteropServices.CallingConvention unmanagedCallConv, Type returnType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.module\" data-linktype=\"relative-path\">Module</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.reflection.emit.modulebuilder\" data-linktype=\"relative-path\">ModuleBuilder</a> that contains the method for which the <code>SignatureHelper</code> is requested.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>unmanagedCallConv</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.callingconvention\" data-linktype=\"relative-path\">CallingConvention</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The unmanaged calling convention of the method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>returnType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The return type of the method, or <code>null</code> for a void return type (<code>Sub</code> procedure in Visual Basic).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.signaturehelper\" data-linktype=\"relative-path\">SignatureHelper</a></div>\r\n                  </div>\r\n                  <p>The <code>SignatureHelper</code> object for a method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>mod</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>mod</code> is not a <a class=\"xref\" href=\"system.reflection.emit.modulebuilder\" data-linktype=\"relative-path\">ModuleBuilder</a>.  </p>\n<p> -or-  </p>\n<p> <code>unmanagedCallConv</code> is an unknown unmanaged calling convention.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_SignatureHelper_GetMethodSigHelper_System_Reflection_Module_System_Type_System_Type___\">\r\n    \r\n            <a id=\"System_Reflection_Emit_SignatureHelper_GetMethodSigHelper_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetMethodSigHelper(Module,Type,Type[])</div>        \r\n          </div>\r\n    \r\n            <p>Returns a signature helper for a method with a standard calling convention, given the method&#39;s module, return type, and argument types.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, Type returnType, Type[] parameterTypes);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.module\" data-linktype=\"relative-path\">Module</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.reflection.emit.modulebuilder\" data-linktype=\"relative-path\">ModuleBuilder</a> that contains the method for which the <code>SignatureHelper</code> is requested.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>returnType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The return type of the method, or <code>null</code> for a void return type (<code>Sub</code> procedure in Visual Basic).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameterTypes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The types of the arguments of the method, or <code>null</code> if the method has no arguments.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.signaturehelper\" data-linktype=\"relative-path\">SignatureHelper</a></div>\r\n                  </div>\r\n                  <p>The <code>SignatureHelper</code> object for a method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>mod</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> An element of <code>parameterTypes</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>mod</code> is not a <a class=\"xref\" href=\"system.reflection.emit.modulebuilder\" data-linktype=\"relative-path\">ModuleBuilder</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This overload creates a signature with a standard calling convention.  </p>\n<p> To create a method signature with custom modifiers, use the <a class=\"xref\" href=\"system.reflection.emit.signaturehelper#System_Reflection_Emit_SignatureHelper_GetMethodSigHelper_System_Reflection_Module_System_Reflection_CallingConventions_System_Type_\" data-linktype=\"relative-path\">GetMethodSigHelper(Module,CallingConventions,Type)</a> method overload and then use the [AddArgument(Type,â€‚Type[],â€‚Type&lt;xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29&gt; or [AddArguments(Type[],â€‚Type[][],â€‚Type[]&lt;xref:System.Reflection.Emit.SignatureHelper.AddArguments%28System.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29&gt; method overloads to add arguments with custom modifiers.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_SignatureHelper_GetPropertySigHelper_System_Reflection_Module_System_Type_System_Type___\">\r\n    \r\n            <a id=\"System_Reflection_Emit_SignatureHelper_GetPropertySigHelper_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetPropertySigHelper(Module,Type,Type[])</div>        \r\n          </div>\r\n    \r\n            <p>Returns a signature helper for a property, given the dynamic module that contains the property, the property type, and the property arguments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, Type returnType, Type[] parameterTypes);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.module\" data-linktype=\"relative-path\">Module</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.reflection.emit.modulebuilder\" data-linktype=\"relative-path\">ModuleBuilder</a> that contains the property for which the <a class=\"xref\" href=\"system.reflection.emit.signaturehelper\" data-linktype=\"relative-path\">SignatureHelper</a> is requested.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>returnType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The property type.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameterTypes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The argument types, or <code>null</code> if the property has no arguments.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.signaturehelper\" data-linktype=\"relative-path\">SignatureHelper</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.reflection.emit.signaturehelper\" data-linktype=\"relative-path\">SignatureHelper</a> object for a property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>mod</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> An element of <code>parameterTypes</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>mod</code> is not a <a class=\"xref\" href=\"system.reflection.emit.modulebuilder\" data-linktype=\"relative-path\">ModuleBuilder</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To create a signature helper for a property with optional or required custom modifiers, use the [GetPropertySigHelper(Module,â€‚Type,â€‚Type[],â€‚Type[],â€‚Type[],â€‚Type[][],â€‚Type[]&lt;xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29&gt; method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_SignatureHelper_GetPropertySigHelper_System_Reflection_Module_System_Type_System_Type___System_Type___System_Type___System_Type_____System_Type_____\">\r\n    \r\n            <a id=\"System_Reflection_Emit_SignatureHelper_GetPropertySigHelper_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetPropertySigHelper(Module,Type,Type[],Type[],Type[],Type[][],Type[][])</div>        \r\n          </div>\r\n    \r\n            <p>Returns a signature helper for a property, given the dynamic module that contains the property, the property type, the property arguments, and custom modifiers for the return type and arguments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.module\" data-linktype=\"relative-path\">Module</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.reflection.emit.modulebuilder\" data-linktype=\"relative-path\">ModuleBuilder</a> that contains the property for which the <a class=\"xref\" href=\"system.reflection.emit.signaturehelper\" data-linktype=\"relative-path\">SignatureHelper</a> is requested.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>returnType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The property type.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>requiredReturnTypeCustomModifiers</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of types representing the required custom modifiers for the return type, such as <a class=\"xref\" href=\"system.runtime.compilerservices.isconst\" data-linktype=\"relative-path\">IsConst</a> or <a class=\"xref\" href=\"system.runtime.compilerservices.isboxed\" data-linktype=\"relative-path\">IsBoxed</a>. If the return type has no required custom modifiers, specify <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>optionalReturnTypeCustomModifiers</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of types representing the optional custom modifiers for the return type, such as <a class=\"xref\" href=\"system.runtime.compilerservices.isconst\" data-linktype=\"relative-path\">IsConst</a> or <a class=\"xref\" href=\"system.runtime.compilerservices.isboxed\" data-linktype=\"relative-path\">IsBoxed</a>. If the return type has no optional custom modifiers, specify <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameterTypes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The types of the property&#39;s arguments, or <code>null</code> if the property has no arguments.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>requiredParameterTypeCustomModifiers</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[][]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding argument of the property. If a particular argument has no required custom modifiers, specify <code>null</code> instead of an array of types. If the property has no arguments, or if none of the arguments have required custom modifiers, specify <code>null</code> instead of an array of arrays.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>optionalParameterTypeCustomModifiers</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[][]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding argument of the property. If a particular argument has no optional custom modifiers, specify <code>null</code> instead of an array of types. If the property has no arguments, or if none of the arguments have optional custom modifiers, specify <code>null</code> instead of an array of arrays.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.signaturehelper\" data-linktype=\"relative-path\">SignatureHelper</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.reflection.emit.signaturehelper\" data-linktype=\"relative-path\">SignatureHelper</a> object for a property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>mod</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> An element of <code>parameterTypes</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> One of the specified custom modifiers is <code>null</code>. (However, <code>null</code> can be specified for the array of custom modifiers for any argument.)</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The signature has already been finished.  </p>\n<p> -or-  </p>\n<p> <code>mod</code> is not a <a class=\"xref\" href=\"system.reflection.emit.modulebuilder\" data-linktype=\"relative-path\">ModuleBuilder</a>.  </p>\n<p> -or-  </p>\n<p> One of the specified custom modifiers is an array type.  </p>\n<p> -or-  </p>\n<p> One of the specified custom modifiers is an open generic type. That is, the <span class=\"xref\">stem.Type.ContainsGenericParameters*</span> property is <code>true</code> for the custom modifier.  </p>\n<p> -or-  </p>\n<p> The size of <code>requiredParameterTypeCustomModifiers</code> or <code>optionalParameterTypeCustomModifiers</code> does not equal the size of <code>parameterTypes</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.runtime.compilerservices\" data-linktype=\"relative-path\">System.Runtime.CompilerServices</a> namespace for classes that represent custom modifiers.  </p>\n<p> If a property has no custom modifiers, use the [GetPropertySigHelper(Module,â€‚Type,â€‚Type&lt;xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29&gt; method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_SignatureHelper_GetPropertySigHelper_System_Reflection_Module_System_Reflection_CallingConventions_System_Type_System_Type___System_Type___System_Type___System_Type_____System_Type_____\">\r\n    \r\n            <a id=\"System_Reflection_Emit_SignatureHelper_GetPropertySigHelper_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetPropertySigHelper(Module,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])</div>        \r\n          </div>\r\n    \r\n            <p>Returns a signature helper for a property, given the dynamic module that contains the property, the calling convention, the property type, the property arguments, and custom modifiers for the return type and arguments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.module\" data-linktype=\"relative-path\">Module</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.reflection.emit.modulebuilder\" data-linktype=\"relative-path\">ModuleBuilder</a> that contains the property for which the <a class=\"xref\" href=\"system.reflection.emit.signaturehelper\" data-linktype=\"relative-path\">SignatureHelper</a> is requested.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callingConvention</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.callingconventions\" data-linktype=\"relative-path\">CallingConventions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The calling convention of the property accessors.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>returnType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The property type.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>requiredReturnTypeCustomModifiers</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of types representing the required custom modifiers for the return type, such as <a class=\"xref\" href=\"system.runtime.compilerservices.isconst\" data-linktype=\"relative-path\">IsConst</a> or <a class=\"xref\" href=\"system.runtime.compilerservices.isboxed\" data-linktype=\"relative-path\">IsBoxed</a>. If the return type has no required custom modifiers, specify <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>optionalReturnTypeCustomModifiers</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of types representing the optional custom modifiers for the return type, such as <a class=\"xref\" href=\"system.runtime.compilerservices.isconst\" data-linktype=\"relative-path\">IsConst</a> or <a class=\"xref\" href=\"system.runtime.compilerservices.isboxed\" data-linktype=\"relative-path\">IsBoxed</a>. If the return type has no optional custom modifiers, specify <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameterTypes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The types of the property&#39;s arguments, or <code>null</code> if the property has no arguments.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>requiredParameterTypeCustomModifiers</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[][]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding argument of the property. If a particular argument has no required custom modifiers, specify <code>null</code> instead of an array of types. If the property has no arguments, or if none of the arguments have required custom modifiers, specify <code>null</code> instead of an array of arrays.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>optionalParameterTypeCustomModifiers</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[][]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding argument of the property. If a particular argument has no optional custom modifiers, specify <code>null</code> instead of an array of types. If the property has no arguments, or if none of the arguments have optional custom modifiers, specify <code>null</code> instead of an array of arrays.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.signaturehelper\" data-linktype=\"relative-path\">SignatureHelper</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.reflection.emit.signaturehelper\" data-linktype=\"relative-path\">SignatureHelper</a> object for a property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>mod</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> An element of <code>parameterTypes</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> One of the specified custom modifiers is <code>null</code>. (However, <code>null</code> can be specified for the array of custom modifiers for any argument.)</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The signature has already been finished.  </p>\n<p> -or-  </p>\n<p> <code>mod</code> is not a <a class=\"xref\" href=\"system.reflection.emit.modulebuilder\" data-linktype=\"relative-path\">ModuleBuilder</a>.  </p>\n<p> -or-  </p>\n<p> One of the specified custom modifiers is an array type.  </p>\n<p> -or-  </p>\n<p> One of the specified custom modifiers is an open generic type. That is, the <span class=\"xref\">stem.Type.ContainsGenericParameters*</span> property is <code>true</code> for the custom modifier.  </p>\n<p> -or-  </p>\n<p> The size of <code>requiredParameterTypeCustomModifiers</code> or <code>optionalParameterTypeCustomModifiers</code> does not equal the size of <code>parameterTypes</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the <a class=\"xref\" href=\"system.runtime.compilerservices\" data-linktype=\"relative-path\">System.Runtime.CompilerServices</a> namespace for classes that represent custom modifiers.  </p>\n<p> If a property has no custom modifiers, use the [GetPropertySigHelper(Module,â€‚Type,â€‚Type&lt;xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29&gt; method overload.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method overload is introduced in the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/net-v35-long-md.md&quot; --> .NET Framework 3.5 <!--END INCLUDE --> or later.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_SignatureHelper_GetSignature\">\r\n    \r\n            <a id=\"System_Reflection_Emit_SignatureHelper_GetSignature_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSignature()</div>        \r\n          </div>\r\n    \r\n            <p>Adds the end token to the signature and marks the signature as finished, so no further tokens can be added.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] GetSignature ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>Returns a byte array made up of the full signature.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_SignatureHelper_ToString\">\r\n    \r\n            <a id=\"System_Reflection_Emit_SignatureHelper_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a string representing the signature arguments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns a string representing the arguments of this signature.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_SignatureHelper_System_Runtime_InteropServices__SignatureHelper_GetIDsOfNames_System_Guid__System_IntPtr_System_UInt32_System_UInt32_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_SignatureHelper_System_Runtime_InteropServices__SignatureHelper_GetIDsOfNames_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">_SignatureHelper.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Maps a set of names to a corresponding set of dispatch identifiers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void _SignatureHelper.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>riid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Reserved for future use. Must be IID_NULL.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rgszNames</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Passed-in array of names to be mapped.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cNames</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Count of the names to be mapped.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>lcid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The locale context in which to interpret the names.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rgDispId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Caller-allocated array which receives the IDs corresponding to the names.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Late-bound access using the COM <code>IDispatch</code> interface is not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about <code>IDispatch::GetIDsOfNames</code>, see the MSDN Library.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_SignatureHelper_System_Runtime_InteropServices__SignatureHelper_GetTypeInfo_System_UInt32_System_UInt32_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_SignatureHelper_System_Runtime_InteropServices__SignatureHelper_GetTypeInfo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">_SignatureHelper.GetTypeInfo(UInt32,UInt32,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the type information for an object, which can then be used to get the type information for an interface.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void _SignatureHelper.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>iTInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type information to return.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>lcid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The locale identifier for the type information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ppTInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Receives a pointer to the requested type information object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Late-bound access using the COM <code>IDispatch</code> interface is not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about <code>IDispatch::GetTypeInfo</code>, see the MSDN Library.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_SignatureHelper_System_Runtime_InteropServices__SignatureHelper_GetTypeInfoCount_System_UInt32__\">\r\n    \r\n            <a id=\"System_Reflection_Emit_SignatureHelper_System_Runtime_InteropServices__SignatureHelper_GetTypeInfoCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">_SignatureHelper.GetTypeInfoCount(UInt32)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void _SignatureHelper.GetTypeInfoCount (out uint pcTInfo);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pcTInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Points to a location that receives the number of type information interfaces provided by the object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Late-bound access using the COM <code>IDispatch</code> interface is not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about <code>IDispatch::GetTypeInfoCount</code>, see the MSDN Library.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_SignatureHelper_System_Runtime_InteropServices__SignatureHelper_Invoke_System_UInt32_System_Guid__System_UInt32_System_Int16_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_SignatureHelper_System_Runtime_InteropServices__SignatureHelper_Invoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">_SignatureHelper.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Provides access to properties and methods exposed by an object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void _SignatureHelper.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dispIdMember</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Identifies the member.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>riid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Reserved for future use. Must be IID_NULL.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>lcid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The locale context in which to interpret arguments.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>wFlags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Flags describing the context of the call.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pDispParams</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pVarResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Pointer to the location where the result is to be stored.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pExcepInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Pointer to a structure that contains exception information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>puArgErr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the first argument that has an error.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Late-bound access using the COM <code>IDispatch</code> interface is not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about <code>IDispatch::Invoke</code>, see the MSDN Library.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Reflection.Emit.SignatureHelper.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Reflection.Emit.SignatureHelper.yml\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.SignatureHelper\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.SignatureHelper.AddArgument\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.SignatureHelper.AddArguments\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.SignatureHelper.AddSentinel\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.SignatureHelper.Equals\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.SignatureHelper.GetFieldSigHelper\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.SignatureHelper.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.SignatureHelper.GetMethodSigHelper\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.SignatureHelper.GetPropertySigHelper\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.SignatureHelper.GetSignature\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.SignatureHelper._SignatureHelper.GetIDsOfNames\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.SignatureHelper._SignatureHelper.GetTypeInfo\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.SignatureHelper._SignatureHelper.GetTypeInfoCount\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.SignatureHelper._SignatureHelper.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.SignatureHelper.ToString\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"7ecea294-42bd-e57c-6be4-6ee0f790aa74\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Reflection.Emit\\SignatureHelper.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides methods for building signatures.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Reflection.Emit/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Reflection.Emit.SignatureHelper\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Reflection.Emit.SignatureHelper.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Reflection.Emit.SignatureHelper.yml","open_to_public_contributors":true,"api_name":["System.Reflection.Emit.SignatureHelper","System.Reflection.Emit.SignatureHelper.AddArgument","System.Reflection.Emit.SignatureHelper.AddArguments","System.Reflection.Emit.SignatureHelper.AddSentinel","System.Reflection.Emit.SignatureHelper.Equals","System.Reflection.Emit.SignatureHelper.GetFieldSigHelper","System.Reflection.Emit.SignatureHelper.GetHashCode","System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper","System.Reflection.Emit.SignatureHelper.GetMethodSigHelper","System.Reflection.Emit.SignatureHelper.GetPropertySigHelper","System.Reflection.Emit.SignatureHelper.GetSignature","System.Reflection.Emit.SignatureHelper._SignatureHelper.GetIDsOfNames","System.Reflection.Emit.SignatureHelper._SignatureHelper.GetTypeInfo","System.Reflection.Emit.SignatureHelper._SignatureHelper.GetTypeInfoCount","System.Reflection.Emit.SignatureHelper._SignatureHelper.Invoke","System.Reflection.Emit.SignatureHelper.ToString"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Reflection.Emit.SignatureHelper","System::Reflection::Emit::SignatureHelper","System.Reflection.Emit.SignatureHelper.AddArgument","System::Reflection::Emit::SignatureHelper::AddArgument","System.Reflection.Emit.SignatureHelper.AddArguments","System::Reflection::Emit::SignatureHelper::AddArguments","System.Reflection.Emit.SignatureHelper.AddSentinel","System::Reflection::Emit::SignatureHelper::AddSentinel","System.Reflection.Emit.SignatureHelper.Equals","System::Reflection::Emit::SignatureHelper::Equals","System.Reflection.Emit.SignatureHelper.GetFieldSigHelper","System::Reflection::Emit::SignatureHelper::GetFieldSigHelper","System.Reflection.Emit.SignatureHelper.GetHashCode","System::Reflection::Emit::SignatureHelper::GetHashCode","System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper","System::Reflection::Emit::SignatureHelper::GetLocalVarSigHelper","System.Reflection.Emit.SignatureHelper.GetMethodSigHelper","System::Reflection::Emit::SignatureHelper::GetMethodSigHelper","System.Reflection.Emit.SignatureHelper.GetPropertySigHelper","System::Reflection::Emit::SignatureHelper::GetPropertySigHelper","System.Reflection.Emit.SignatureHelper.GetSignature","System::Reflection::Emit::SignatureHelper::GetSignature","System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetIDsOfNames","System::Reflection::Emit::SignatureHelper::System#Runtime#InteropServices#_SignatureHelper#GetIDsOfNames","System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfo","System::Reflection::Emit::SignatureHelper::System#Runtime#InteropServices#_SignatureHelper#GetTypeInfo","System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfoCount","System::Reflection::Emit::SignatureHelper::System#Runtime#InteropServices#_SignatureHelper#GetTypeInfoCount","System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#Invoke","System::Reflection::Emit::SignatureHelper::System#Runtime#InteropServices#_SignatureHelper#Invoke","System.Reflection.Emit.SignatureHelper.ToString","System::Reflection::Emit::SignatureHelper::ToString"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"7ecea294-42bd-e57c-6be4-6ee0f790aa74","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Reflection.Emit\\SignatureHelper.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Reflection.Emit/SignatureHelper.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SignatureHelper class | Microsoft Docs","_op_ogTitle":"SignatureHelper class","description":"Provides methods for building signatures.\n","toc_asset_id":"_splitted/System.Reflection.Emit/toc.json","toc_rel":"_splitted/System.Reflection.Emit/toc.json","source_url":"","ms.assetid":"System.Reflection.Emit.SignatureHelper","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.reflection.emit.signaturehelper","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.reflection.emit.signaturehelper","fileRelativePath":"System.Reflection.Emit.SignatureHelper.html"},"themesRelativePathToOutputRoot":"_themes/"}