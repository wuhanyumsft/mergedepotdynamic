{"content":"    \r\n    <h1 id=\"System_Reflection_Emit_OpCode\">\r\n      <span class=\"lang-csharp\">OpCode</span>\r\n        Struct\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Describes an intermediate language (IL) instruction.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic struct OpCode</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">System.ValueType</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">OpCode</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_OpCode_FlowControl\" data-linktype=\"self-bookmark\">FlowControl</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The flow control characteristics of the intermediate language (IL) instruction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_OpCode_Name\" data-linktype=\"self-bookmark\">Name</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The name of the intermediate language (IL) instruction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_OpCode_OpCodeType\" data-linktype=\"self-bookmark\">OpCodeType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The type of intermediate language (IL) instruction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_OpCode_OperandType\" data-linktype=\"self-bookmark\">OperandType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The operand type of an intermediate language (IL) instruction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_OpCode_Size\" data-linktype=\"self-bookmark\">Size</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The size of the intermediate language (IL) instruction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_OpCode_StackBehaviourPop\" data-linktype=\"self-bookmark\">StackBehaviourPop</a></div>\r\n          </td>\r\n            <td>\r\n            <p>How the intermediate language (IL) instruction pops the stack.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_OpCode_StackBehaviourPush\" data-linktype=\"self-bookmark\">StackBehaviourPush</a></div>\r\n          </td>\r\n            <td>\r\n            <p>How the intermediate language (IL) instruction pushes operand onto the stack.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_OpCode_Value\" data-linktype=\"self-bookmark\">Value</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the numeric value of the intermediate language (IL) instruction.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_OpCode_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tests whether the given object is equal to this <code>Opcode</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_OpCode_Equals_System_Reflection_Emit_OpCode_\" data-linktype=\"self-bookmark\">Equals(OpCode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the current instance is equal to the specified <a class=\"xref\" href=\"system.reflection.emit.opcode\" data-linktype=\"relative-path\">OpCode</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_OpCode_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the generated hash code for this <code>Opcode</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_OpCode_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns this <code>Opcode</code> as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Operators\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_OpCode_op_Equality_System_Reflection_Emit_OpCode_System_Reflection_Emit_OpCode_\" data-linktype=\"self-bookmark\">op_Equality(OpCode,OpCode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether two <a class=\"xref\" href=\"system.reflection.emit.opcode\" data-linktype=\"relative-path\">OpCode</a> structures are equal.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_OpCode_op_Inequality_System_Reflection_Emit_OpCode_System_Reflection_Emit_OpCode_\" data-linktype=\"self-bookmark\">op_Inequality(OpCode,OpCode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether two <a class=\"xref\" href=\"system.reflection.emit.opcode\" data-linktype=\"relative-path\">OpCode</a> structures are not equal.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_OpCode_FlowControl\">\r\n    \r\n            <a id=\"System_Reflection_Emit_OpCode_FlowControl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FlowControl</div>        \r\n          </div>\r\n    \r\n            <p>The flow control characteristics of the intermediate language (IL) instruction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.Emit.FlowControl FlowControl { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.flowcontrol\" data-linktype=\"relative-path\">FlowControl</a></div>\r\n                  </div>\r\n                  <p>Read-only. The type of flow control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_OpCode_Name\">\r\n    \r\n            <a id=\"System_Reflection_Emit_OpCode_Name_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Name</div>        \r\n          </div>\r\n    \r\n            <p>The name of the intermediate language (IL) instruction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Name { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Read-only. The name of the IL instruction.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.reflection.emit.opcode#System_Reflection_Emit_OpCode_Value_\" data-linktype=\"relative-path\">Value</a> property returns the numeric value of the IL instruction.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_OpCode_OpCodeType\">\r\n    \r\n            <a id=\"System_Reflection_Emit_OpCode_OpCodeType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpCodeType</div>        \r\n          </div>\r\n    \r\n            <p>The type of intermediate language (IL) instruction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.Emit.OpCodeType OpCodeType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.opcodetype\" data-linktype=\"relative-path\">OpCodeType</a></div>\r\n                  </div>\r\n                  <p>Read-only. The type of intermediate language (IL) instruction.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_OpCode_OperandType\">\r\n    \r\n            <a id=\"System_Reflection_Emit_OpCode_OperandType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OperandType</div>        \r\n          </div>\r\n    \r\n            <p>The operand type of an intermediate language (IL) instruction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.Emit.OperandType OperandType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.operandtype\" data-linktype=\"relative-path\">OperandType</a></div>\r\n                  </div>\r\n                  <p>Read-only. The operand type of an IL instruction.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_OpCode_Size\">\r\n    \r\n            <a id=\"System_Reflection_Emit_OpCode_Size_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Size</div>        \r\n          </div>\r\n    \r\n            <p>The size of the intermediate language (IL) instruction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Size { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Read-only. The size of the IL instruction.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_OpCode_StackBehaviourPop\">\r\n    \r\n            <a id=\"System_Reflection_Emit_OpCode_StackBehaviourPop_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StackBehaviourPop</div>        \r\n          </div>\r\n    \r\n            <p>How the intermediate language (IL) instruction pops the stack.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.Emit.StackBehaviour StackBehaviourPop { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.stackbehaviour\" data-linktype=\"relative-path\">StackBehaviour</a></div>\r\n                  </div>\r\n                  <p>Read-only. The way the IL instruction pops the stack.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_OpCode_StackBehaviourPush\">\r\n    \r\n            <a id=\"System_Reflection_Emit_OpCode_StackBehaviourPush_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StackBehaviourPush</div>        \r\n          </div>\r\n    \r\n            <p>How the intermediate language (IL) instruction pushes operand onto the stack.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.Emit.StackBehaviour StackBehaviourPush { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.stackbehaviour\" data-linktype=\"relative-path\">StackBehaviour</a></div>\r\n                  </div>\r\n                  <p>Read-only. The way the IL instruction pushes operand onto the stack.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_OpCode_Value\">\r\n    \r\n            <a id=\"System_Reflection_Emit_OpCode_Value_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Value</div>        \r\n          </div>\r\n    \r\n            <p>Gets the numeric value of the intermediate language (IL) instruction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public short Value { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></div>\r\n                  </div>\r\n                  <p>Read-only. The numeric value of the IL instruction.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.reflection.emit.opcode#System_Reflection_Emit_OpCode_Name_\" data-linktype=\"relative-path\">Name</a> property returns the string name that corresponds to the instruction&#39;s numeric value.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the property values of the <a class=\"xref\" href=\"system.reflection.emit.opcodes#System_Reflection_Emit_OpCodes_Add\" data-linktype=\"relative-path\">System.Reflection.Emit.OpCodes.Add</a> instruction.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Reflection.Emit.OpCode.Value#1\">using System;\nusing System.Reflection;\nusing System.Reflection.Emit;\n\npublic class Example\n{\n   public static void Main()\n   {\n      OpCode op = OpCodes.Add;\n      foreach (var prp in op.GetType().GetProperties())\n         Console.WriteLine(&quot;{0} ({1}): {2}&quot;, prp.Name, \n                           prp.PropertyType.Name, prp.GetValue(op));\n   }\n}\n// The example displays the following output:\n//       OperandType (OperandType): InlineNone\n//       FlowControl (FlowControl): Next\n//       OpCodeType (OpCodeType): Primitive\n//       StackBehaviourPop (StackBehaviour): Pop1_pop1\n//       StackBehaviourPush (StackBehaviour): Push1\n//       Size (Int32): 1\n//       Value (Int16): 88\n//       Name (String): add\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Reflection.Emit.OpCode.Value#1\">Imports System.Reflection\nImports System.Reflection.Emit\n\nModule Example\n   Public Sub Main()\n      Dim op As OpCode = OpCodes.Add\n      For Each prp In op.GetType().GetProperties()\n         Console.WriteLine(&quot;{0} ({1}): {2}&quot;, prp.Name, \n                           prp.PropertyType.Name, prp.GetValue(op))\n      Next\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       OperandType (OperandType): InlineNone\n&#39;       FlowControl (FlowControl): Next\n&#39;       OpCodeType (OpCodeType): Primitive\n&#39;       StackBehaviourPop (StackBehaviour): Pop1_pop1\n&#39;       StackBehaviourPush (StackBehaviour): Push1\n&#39;       Size (Int32): 1\n&#39;       Value (Int16): 88\n&#39;       Name (String): add\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_OpCode_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_OpCode_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Tests whether the given object is equal to this <code>Opcode</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to compare to this object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>obj</code> is an instance of <code>Opcode</code> and is equal to this object; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_OpCode_Equals_System_Reflection_Emit_OpCode_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_OpCode_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(OpCode)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the current instance is equal to the specified <a class=\"xref\" href=\"system.reflection.emit.opcode\" data-linktype=\"relative-path\">OpCode</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Equals (System.Reflection.Emit.OpCode obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.opcode\" data-linktype=\"relative-path\">OpCode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.reflection.emit.opcode\" data-linktype=\"relative-path\">OpCode</a> to compare to the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the value of <code>obj</code> is equal to the value of the current instance; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_OpCode_GetHashCode\">\r\n    \r\n            <a id=\"System_Reflection_Emit_OpCode_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the generated hash code for this <code>Opcode</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns the hash code for this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_OpCode_ToString\">\r\n    \r\n            <a id=\"System_Reflection_Emit_OpCode_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns this <code>Opcode</code> as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the name of this <code>Opcode</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"operators\">\r\n        <h2>Operators\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_OpCode_op_Equality_System_Reflection_Emit_OpCode_System_Reflection_Emit_OpCode_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_OpCode_op_Equality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Equality(OpCode,OpCode)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether two <a class=\"xref\" href=\"system.reflection.emit.opcode\" data-linktype=\"relative-path\">OpCode</a> structures are equal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_Equality (System.Reflection.Emit.OpCode a, System.Reflection.Emit.OpCode b);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>a</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.opcode\" data-linktype=\"relative-path\">OpCode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.reflection.emit.opcode\" data-linktype=\"relative-path\">OpCode</a> to compare to <code>b</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>b</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.opcode\" data-linktype=\"relative-path\">OpCode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.reflection.emit.opcode\" data-linktype=\"relative-path\">OpCode</a> to compare to <code>a</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>a</code> is equal to <code>b</code>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_OpCode_op_Inequality_System_Reflection_Emit_OpCode_System_Reflection_Emit_OpCode_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_OpCode_op_Inequality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Inequality(OpCode,OpCode)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether two <a class=\"xref\" href=\"system.reflection.emit.opcode\" data-linktype=\"relative-path\">OpCode</a> structures are not equal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_Inequality (System.Reflection.Emit.OpCode a, System.Reflection.Emit.OpCode b);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>a</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.opcode\" data-linktype=\"relative-path\">OpCode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.reflection.emit.opcode\" data-linktype=\"relative-path\">OpCode</a> to compare to <code>b</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>b</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.opcode\" data-linktype=\"relative-path\">OpCode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.reflection.emit.opcode\" data-linktype=\"relative-path\">OpCode</a> to compare to <code>a</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>a</code> is not equal to <code>b</code>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Reflection.Emit.OpCode.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Reflection.Emit.OpCode.yml\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.OpCode\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.OpCode.Equals\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.OpCode.FlowControl\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.OpCode.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.OpCode.Name\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.OpCode.op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.OpCode.op_op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.OpCode.op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.OpCode.op_op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.OpCode.OpCodeType\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.OpCode.OperandType\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.OpCode.Size\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.OpCode.StackBehaviourPop\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.OpCode.StackBehaviourPush\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.OpCode.ToString\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.OpCode.Value\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"77b0f915-dee4-0cae-2f9c-cbb0ed491ad5\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Reflection.Emit\\OpCode.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Describes an intermediate language (IL) instruction.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Reflection.Emit/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Reflection.Emit.OpCode\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Reflection.Emit.OpCode.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Reflection.Emit.OpCode.yml","open_to_public_contributors":true,"api_name":["System.Reflection.Emit.OpCode","System.Reflection.Emit.OpCode.Equals","System.Reflection.Emit.OpCode.FlowControl","System.Reflection.Emit.OpCode.GetHashCode","System.Reflection.Emit.OpCode.Name","System.Reflection.Emit.OpCode.op_Equality","System.Reflection.Emit.OpCode.op_op_Equality","System.Reflection.Emit.OpCode.op_Inequality","System.Reflection.Emit.OpCode.op_op_Inequality","System.Reflection.Emit.OpCode.OpCodeType","System.Reflection.Emit.OpCode.OperandType","System.Reflection.Emit.OpCode.Size","System.Reflection.Emit.OpCode.StackBehaviourPop","System.Reflection.Emit.OpCode.StackBehaviourPush","System.Reflection.Emit.OpCode.ToString","System.Reflection.Emit.OpCode.Value"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Reflection.Emit.OpCode","System::Reflection::Emit::OpCode","System.Reflection.Emit.OpCode.Equals","System::Reflection::Emit::OpCode::Equals","System.Reflection.Emit.OpCode.FlowControl","System::Reflection::Emit::OpCode::FlowControl","System.Reflection.Emit.OpCode.GetHashCode","System::Reflection::Emit::OpCode::GetHashCode","System.Reflection.Emit.OpCode.Name","System::Reflection::Emit::OpCode::Name","System.Reflection.Emit.OpCode.op_Equality","System::Reflection::Emit::OpCode::op_Equality","System.Reflection.Emit.OpCode.op_Inequality","System::Reflection::Emit::OpCode::op_Inequality","System.Reflection.Emit.OpCode.OpCodeType","System::Reflection::Emit::OpCode::OpCodeType","System.Reflection.Emit.OpCode.OperandType","System::Reflection::Emit::OpCode::OperandType","System.Reflection.Emit.OpCode.Size","System::Reflection::Emit::OpCode::Size","System.Reflection.Emit.OpCode.StackBehaviourPop","System::Reflection::Emit::OpCode::StackBehaviourPop","System.Reflection.Emit.OpCode.StackBehaviourPush","System::Reflection::Emit::OpCode::StackBehaviourPush","System.Reflection.Emit.OpCode.ToString","System::Reflection::Emit::OpCode::ToString","System.Reflection.Emit.OpCode.Value","System::Reflection::Emit::OpCode::Value"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"77b0f915-dee4-0cae-2f9c-cbb0ed491ad5","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Reflection.Emit\\OpCode.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Reflection.Emit/OpCode.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"OpCode struct | Microsoft Docs","_op_ogTitle":"OpCode struct","description":"Describes an intermediate language (IL) instruction.\n","toc_asset_id":"_splitted/System.Reflection.Emit/toc.json","toc_rel":"_splitted/System.Reflection.Emit/toc.json","source_url":"","ms.assetid":"System.Reflection.Emit.OpCode","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.reflection.emit.opcode","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.reflection.emit.opcode","fileRelativePath":"System.Reflection.Emit.OpCode.html"},"themesRelativePathToOutputRoot":"_themes/"}