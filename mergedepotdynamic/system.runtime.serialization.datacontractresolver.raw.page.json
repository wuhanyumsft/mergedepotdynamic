{"content":"    \r\n    <h1 id=\"System_Runtime_Serialization_DataContractResolver\">\r\n      <span class=\"lang-csharp\">DataContractResolver</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a mechanism for dynamically mapping types to and from <code>xsi:type</code> representations during serialization and deserialization.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class DataContractResolver</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DataContractResolver</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Developers should be careful about what data is being sent over the wire. You can use transport or message security to secure that data. <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/crdefault-md.md&quot; -->For more information, see<!--END INCLUDE --> see <a href=\"../Topic/Security%20in%20WCF.md\" data-linktype=\"relative-path\">Security</a>.  </p>\n<div class=\"WARNING\"><h5>Warning</h5><p> Only use DataContractResolver if you are completely sure of what information is being serialized. Malicious types can cause unexpected behavior.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_DataContractResolver__ctor\" data-linktype=\"self-bookmark\">DataContractResolver()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.runtime.serialization.datacontractresolver\" data-linktype=\"relative-path\">DataContractResolver</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_DataContractResolver_ResolveName_System_String_System_String_System_Type_System_Runtime_Serialization_DataContractResolver_\" data-linktype=\"self-bookmark\">ResolveName(String,String,Type,DataContractResolver)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Override this method to map the specified <code>xsi:type</code> name and namespace to a data contract type during deserialization.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_DataContractResolver_TryResolveType_System_Type_System_Type_System_Runtime_Serialization_DataContractResolver_System_Xml_XmlDictionaryString__System_Xml_XmlDictionaryString__\" data-linktype=\"self-bookmark\">TryResolveType(Type,Type,DataContractResolver,XmlDictionaryString,XmlDictionaryString)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Override this method to map a data contract type to an <code>xsi:type</code> name and namespace during serialization.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_DataContractResolver__ctor\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_DataContractResolver__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataContractResolver()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.runtime.serialization.datacontractresolver\" data-linktype=\"relative-path\">DataContractResolver</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected DataContractResolver ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_DataContractResolver_ResolveName_System_String_System_String_System_Type_System_Runtime_Serialization_DataContractResolver_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_DataContractResolver_ResolveName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResolveName(String,String,Type,DataContractResolver)</div>        \r\n          </div>\r\n    \r\n            <p>Override this method to map the specified <code>xsi:type</code> name and namespace to a data contract type during deserialization.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract Type ResolveName (string typeName, string typeNamespace, Type declaredType, System.Runtime.Serialization.DataContractResolver knownTypeResolver);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>xsi:type</code> name to map.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeNamespace</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>xsi:type</code> namespace to map.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>declaredType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type declared in the data contract.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>knownTypeResolver</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.datacontractresolver\" data-linktype=\"relative-path\">DataContractResolver</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The known type resolver.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>The type the <code>xsi:type</code> name and namespace is mapped to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If you want to use the known type resolution logic inside your implementation, a reference to it is passed in as the <code>knownTypeResolver</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows an implementation of the ResolveName method.  </p>\n<pre><code class=\"lang-cs\" name=\"DataContractResolver#0\">        // Used at deserialization\n        // Allows users to map xsi:type name to any Type \n        public override Type ResolveName(string typeName, string typeNamespace, Type declaredType, DataContractResolver knownTypeResolver)\n        {\n            XmlDictionaryString tName;\n            XmlDictionaryString tNamespace;\n            if (dictionary.TryGetValue(typeName, out tName) &amp;&amp; dictionary.TryGetValue(typeNamespace, out tNamespace))\n            {\n                return this.assembly.GetType(tNamespace.Value + &quot;.&quot; + tName.Value);\n            }\n            else\n            {\n                return null;\n            }\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_DataContractResolver_TryResolveType_System_Type_System_Type_System_Runtime_Serialization_DataContractResolver_System_Xml_XmlDictionaryString__System_Xml_XmlDictionaryString__\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_DataContractResolver_TryResolveType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TryResolveType(Type,Type,DataContractResolver,XmlDictionaryString,XmlDictionaryString)</div>        \r\n          </div>\r\n    \r\n            <p>Override this method to map a data contract type to an <code>xsi:type</code> name and namespace during serialization.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract bool TryResolveType (Type type, Type declaredType, System.Runtime.Serialization.DataContractResolver knownTypeResolver, out System.Xml.XmlDictionaryString typeName, out System.Xml.XmlDictionaryString typeNamespace);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type to map.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>declaredType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type declared in the data contract.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>knownTypeResolver</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.datacontractresolver\" data-linktype=\"relative-path\">DataContractResolver</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The known type resolver.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmldictionarystring\" data-linktype=\"relative-path\">XmlDictionaryString</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The xsi:type name.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeNamespace</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmldictionarystring\" data-linktype=\"relative-path\">XmlDictionaryString</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The xsi:type namespace.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if mapping succeeded; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If you want to use the known type resolution logic inside your implementation, a reference to it is passed in as the <code>knownTypeResolver</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows an implementation of the TryResolveType method.  </p>\n<pre><code class=\"lang-cs\" name=\"DataContractResolver#1\">        // Used at serialization\n        // Maps any Type to a new xsi:type representation\n        public override bool TryResolveType(Type type, Type declaredType, DataContractResolver knownTypeResolver, out XmlDictionaryString typeName, out XmlDictionaryString typeNamespace)\n        {\n            string name = type.Name;\n            string namesp = type.Namespace;\n            typeName = new XmlDictionaryString(XmlDictionary.Empty, name, 0); \n            typeNamespace = new XmlDictionaryString(XmlDictionary.Empty, namesp, 0);\n            if (!dictionary.ContainsKey(type.Name))\n            {\n                dictionary.Add(name, typeName);\n            }\n            if (!dictionary.ContainsKey(type.Namespace))\n            {\n                dictionary.Add(namesp, typeNamespace);\n            }\n            return true;\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Serialization.DataContractResolver.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Serialization.DataContractResolver.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.DataContractResolver\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.DataContractResolver..ctor\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.DataContractResolver.ResolveName\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.DataContractResolver.TryResolveType\">\r\n<meta name=\"APILocation\" content=\"System.Runtime.Serialization.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"5fffc595-03b2-1e96-f190-49ee34687c23\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Runtime.Serialization\\DataContractResolver.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a mechanism for dynamically mapping types to and from xsi:type representations during serialization and deserialization.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Runtime.Serialization/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Serialization.DataContractResolver\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Serialization.DataContractResolver.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Serialization.DataContractResolver.yml","open_to_public_contributors":true,"api_name":["System.Runtime.Serialization.DataContractResolver","System.Runtime.Serialization.DataContractResolver..ctor","System.Runtime.Serialization.DataContractResolver.ResolveName","System.Runtime.Serialization.DataContractResolver.TryResolveType"],"api_location":["System.Runtime.Serialization.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Serialization.DataContractResolver","System::Runtime::Serialization::DataContractResolver","System.Runtime.Serialization.DataContractResolver.#ctor","System::Runtime::Serialization::DataContractResolver::#ctor","System.Runtime.Serialization.DataContractResolver.ResolveName","System::Runtime::Serialization::DataContractResolver::ResolveName","System.Runtime.Serialization.DataContractResolver.TryResolveType","System::Runtime::Serialization::DataContractResolver::TryResolveType"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"5fffc595-03b2-1e96-f190-49ee34687c23","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Runtime.Serialization\\DataContractResolver.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Runtime.Serialization/DataContractResolver.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataContractResolver class | Microsoft Docs","_op_ogTitle":"DataContractResolver class","description":"Provides a mechanism for dynamically mapping types to and from xsi:type representations during serialization and deserialization.\n","toc_asset_id":"_splitted/System.Runtime.Serialization/toc.json","toc_rel":"_splitted/System.Runtime.Serialization/toc.json","source_url":"","ms.assetid":"System.Runtime.Serialization.DataContractResolver","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.serialization.datacontractresolver","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.serialization.datacontractresolver","fileRelativePath":"System.Runtime.Serialization.DataContractResolver.html"},"themesRelativePathToOutputRoot":"_themes/"}