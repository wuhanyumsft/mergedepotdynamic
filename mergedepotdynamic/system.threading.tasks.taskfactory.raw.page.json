{"content":"    \r\n    <h1 id=\"System_Threading_Tasks_TaskFactory\">\r\n      <span class=\"lang-csharp\">TaskFactory</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides support for creating and scheduling <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> objects.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class TaskFactory</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">TaskFactory</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The .NET Framework provides two factories for creating and scheduling tasks:  </p>\n<ul>\n<li><p>The TaskFactory class, which creates <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> and <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> objects. You can call the overloads of this method to create and execute a task that requires non-default arguments.  </p>\n<div class=\"WARNING\"><h5>Warning</h5><p> Starting with the .NET Framework 4.5, the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Run_\" data-linktype=\"relative-path\">Run</a> method provides the easiest way to create a task with default configuration values and start it immediately.  </p>\n</div>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.threading.tasks.taskfactory-1\" data-linktype=\"relative-path\">TaskFactory&lt;TResult&gt;</a> class, which creates <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> objects.  </p>\n<p>The TaskFactory class allows you to do the following:  </p>\n</li>\n<li><p>Create a task and start it immediately by calling the <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_StartNew_\" data-linktype=\"relative-path\">StartNew</a> method.  </p>\n<div class=\"WARNING\"><h5>Warning</h5><p> Starting with the .NET Framework 4.5, the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Run_\" data-linktype=\"relative-path\">Run</a> method provides the easiest way to create a task with default configuration values and start it immediately.  </p>\n</div>\n</li>\n<li><p>Create a task that starts when any one of the tasks in an array has completed by calling the <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_ContinueWhenAny_\" data-linktype=\"relative-path\">ContinueWhenAny</a> method.  </p>\n</li>\n<li><p>Create a task that starts when all the tasks in an array have completed by calling the <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_ContinueWhenAll_\" data-linktype=\"relative-path\">ContinueWhenAll</a> method.  </p>\n<p>The static <a class=\"xref\" href=\"system.threading.tasks.task-1#System_Threading_Tasks_Task_1_Factory_\" data-linktype=\"relative-path\">Factory</a> property returns a default <a class=\"xref\" href=\"system.threading.tasks.taskfactory-1\" data-linktype=\"relative-path\">TaskFactory&lt;TResult&gt;</a> object. You can also call one of the TaskFactory class constructors to configure the <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> objects that  the TaskFactory class creates. The following example configures a new TaskFactory object to create tasks that have a specified cancellation token, task creation options, continuation options, and a customized task scheduler.  </p>\n<pre><code class=\"lang-cs\" name=\"TPL_Factories#1\">using System;\nusing System.Collections.Generic;\nusing System.Threading;\nusing System.Threading.Tasks;\n\nclass Example\n{\n   static CancellationTokenSource cts = new CancellationTokenSource();\n   \n   static TaskFactory factory = new TaskFactory(\n      cts.Token,\n      TaskCreationOptions.PreferFairness,\n      TaskContinuationOptions.ExecuteSynchronously,\n      new CustomScheduler());\n\n   static void Main()\n   {\n      var t2 = factory.StartNew(() =&gt; DoWork());\n      cts.Dispose();\n   }\n\n   static void DoWork() {/*...*/ }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"TPL_Factories#1\">Imports System.Collections.Generic\nImports System.Threading\nImports System.Threading.Tasks\n\nModule Example\n   Public Sub Main()\n      Dim cts As New CancellationTokenSource()\n      Dim factory As New TaskFactory(cts.Token,\n                                     TaskCreationOptions.PreferFairness,\n                                     TaskContinuationOptions.ExecuteSynchronously,\n                                     New CustomScheduler())\n\n      Dim t2 = factory.StartNew(Sub() DoWork())\n      cts.Dispose()\n   End Sub\n\n   Sub DoWork()\n      &#39; ...\n   End Sub\nEnd Module\n</code></pre><p>In most cases, you do not have to instantiate a new TaskFactory instance. Instead, you can use the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Factory_\" data-linktype=\"relative-path\">Factory</a> property, which returns a factory object that uses default values. You can then call its methods to start new tasks or define task continuations. For an illustration, see the example.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory__ctor\" data-linktype=\"self-bookmark\">TaskFactory()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a <a class=\"xref\" href=\"system.threading.tasks.taskfactory\" data-linktype=\"relative-path\">TaskFactory</a> instance with the default configuration.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory__ctor_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">TaskFactory(CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a <a class=\"xref\" href=\"system.threading.tasks.taskfactory\" data-linktype=\"relative-path\">TaskFactory</a> instance with the specified configuration.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory__ctor_System_Threading_Tasks_TaskScheduler_\" data-linktype=\"self-bookmark\">TaskFactory(TaskScheduler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a <a class=\"xref\" href=\"system.threading.tasks.taskfactory\" data-linktype=\"relative-path\">TaskFactory</a> instance with the specified configuration.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory__ctor_System_Threading_Tasks_TaskCreationOptions_System_Threading_Tasks_TaskContinuationOptions_\" data-linktype=\"self-bookmark\">TaskFactory(TaskCreationOptions,TaskContinuationOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a <a class=\"xref\" href=\"system.threading.tasks.taskfactory\" data-linktype=\"relative-path\">TaskFactory</a> instance with the specified configuration.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory__ctor_System_Threading_CancellationToken_System_Threading_Tasks_TaskCreationOptions_System_Threading_Tasks_TaskContinuationOptions_System_Threading_Tasks_TaskScheduler_\" data-linktype=\"self-bookmark\">TaskFactory(CancellationToken,TaskCreationOptions,TaskContinuationOptions,TaskScheduler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a <a class=\"xref\" href=\"system.threading.tasks.taskfactory\" data-linktype=\"relative-path\">TaskFactory</a> instance with the specified configuration.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_CancellationToken\" data-linktype=\"self-bookmark\">CancellationToken</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the default cancellation token for this task factory.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinuationOptions\" data-linktype=\"self-bookmark\">ContinuationOptions</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the default task continuation options for this task factory.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_CreationOptions\" data-linktype=\"self-bookmark\">CreationOptions</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the default task creation options for this task factory.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_Scheduler\" data-linktype=\"self-bookmark\">Scheduler</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the default task scheduler for this task factory.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAll_System_Threading_Tasks_Task___System_Action_System_Threading_Tasks_Task____\" data-linktype=\"self-bookmark\">ContinueWhenAll(Task[],Action&lt;Task[]&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAll_System_Threading_Tasks_Task___System_Action_System_Threading_Tasks_Task____System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">ContinueWhenAll(Task[],Action&lt;Task[]&gt;,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAll_System_Threading_Tasks_Task___System_Action_System_Threading_Tasks_Task____System_Threading_Tasks_TaskContinuationOptions_\" data-linktype=\"self-bookmark\">ContinueWhenAll(Task[],Action&lt;Task[]&gt;,TaskContinuationOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAll_System_Threading_Tasks_Task___System_Action_System_Threading_Tasks_Task____System_Threading_CancellationToken_System_Threading_Tasks_TaskContinuationOptions_System_Threading_Tasks_TaskScheduler_\" data-linktype=\"self-bookmark\">ContinueWhenAll(Task[],Action&lt;Task[]&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAll__1_System_Threading_Tasks_Task___0____System_Action_System_Threading_Tasks_Task___0_____\" data-linktype=\"self-bookmark\">ContinueWhenAll&lt;TAntecedentResult&gt;(Task&lt;TAntecedentResult&gt;[],Action&lt;Task&lt;TAntecedentResult&gt;[]&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAll__1_System_Threading_Tasks_Task___0____System_Action_System_Threading_Tasks_Task___0_____System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">ContinueWhenAll&lt;TAntecedentResult&gt;(Task&lt;TAntecedentResult&gt;[],Action&lt;Task&lt;TAntecedentResult&gt;[]&gt;,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAll__1_System_Threading_Tasks_Task___0____System_Action_System_Threading_Tasks_Task___0_____System_Threading_Tasks_TaskContinuationOptions_\" data-linktype=\"self-bookmark\">ContinueWhenAll&lt;TAntecedentResult&gt;(Task&lt;TAntecedentResult&gt;[],Action&lt;Task&lt;TAntecedentResult&gt;[]&gt;,TaskContinuationOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAll__1_System_Threading_Tasks_Task___0____System_Action_System_Threading_Tasks_Task___0_____System_Threading_CancellationToken_System_Threading_Tasks_TaskContinuationOptions_System_Threading_Tasks_TaskScheduler_\" data-linktype=\"self-bookmark\">ContinueWhenAll&lt;TAntecedentResult&gt;(Task&lt;TAntecedentResult&gt;[],Action&lt;Task&lt;TAntecedentResult&gt;[]&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAll__1_System_Threading_Tasks_Task___System_Func_System_Threading_Tasks_Task_____0__\" data-linktype=\"self-bookmark\">ContinueWhenAll&lt;TResult&gt;(Task[],Func&lt;Task[],TResult&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAll__1_System_Threading_Tasks_Task___System_Func_System_Threading_Tasks_Task_____0__System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">ContinueWhenAll&lt;TResult&gt;(Task[],Func&lt;Task[],TResult&gt;,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAll__1_System_Threading_Tasks_Task___System_Func_System_Threading_Tasks_Task_____0__System_Threading_Tasks_TaskContinuationOptions_\" data-linktype=\"self-bookmark\">ContinueWhenAll&lt;TResult&gt;(Task[],Func&lt;Task[],TResult&gt;,TaskContinuationOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAll__1_System_Threading_Tasks_Task___System_Func_System_Threading_Tasks_Task_____0__System_Threading_CancellationToken_System_Threading_Tasks_TaskContinuationOptions_System_Threading_Tasks_TaskScheduler_\" data-linktype=\"self-bookmark\">ContinueWhenAll&lt;TResult&gt;(Task[],Func&lt;Task[],TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAll__2_System_Threading_Tasks_Task___0____System_Func_System_Threading_Tasks_Task___0______1__\" data-linktype=\"self-bookmark\">ContinueWhenAll&lt;TAntecedentResult,TResult&gt;(Task&lt;TAntecedentResult&gt;[],Func&lt;Task&lt;TAntecedentResult&gt;[],TResult&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAll__2_System_Threading_Tasks_Task___0____System_Func_System_Threading_Tasks_Task___0______1__System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">ContinueWhenAll&lt;TAntecedentResult,TResult&gt;(Task&lt;TAntecedentResult&gt;[],Func&lt;Task&lt;TAntecedentResult&gt;[],TResult&gt;,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAll__2_System_Threading_Tasks_Task___0____System_Func_System_Threading_Tasks_Task___0______1__System_Threading_Tasks_TaskContinuationOptions_\" data-linktype=\"self-bookmark\">ContinueWhenAll&lt;TAntecedentResult,TResult&gt;(Task&lt;TAntecedentResult&gt;[],Func&lt;Task&lt;TAntecedentResult&gt;[],TResult&gt;,TaskContinuationOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAll__2_System_Threading_Tasks_Task___0____System_Func_System_Threading_Tasks_Task___0______1__System_Threading_CancellationToken_System_Threading_Tasks_TaskContinuationOptions_System_Threading_Tasks_TaskScheduler_\" data-linktype=\"self-bookmark\">ContinueWhenAll&lt;TAntecedentResult,TResult&gt;(Task&lt;TAntecedentResult&gt;[],Func&lt;Task&lt;TAntecedentResult&gt;[],TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAny_System_Threading_Tasks_Task___System_Action_System_Threading_Tasks_Task__\" data-linktype=\"self-bookmark\">ContinueWhenAny(Task[],Action&lt;Task&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that will be started upon the completion of any Task in the provided set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAny_System_Threading_Tasks_Task___System_Action_System_Threading_Tasks_Task__System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">ContinueWhenAny(Task[],Action&lt;Task&gt;,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that will be started upon the completion of any Task in the provided set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAny_System_Threading_Tasks_Task___System_Action_System_Threading_Tasks_Task__System_Threading_Tasks_TaskContinuationOptions_\" data-linktype=\"self-bookmark\">ContinueWhenAny(Task[],Action&lt;Task&gt;,TaskContinuationOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that will be started upon the completion of any Task in the provided set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAny_System_Threading_Tasks_Task___System_Action_System_Threading_Tasks_Task__System_Threading_CancellationToken_System_Threading_Tasks_TaskContinuationOptions_System_Threading_Tasks_TaskScheduler_\" data-linktype=\"self-bookmark\">ContinueWhenAny(Task[],Action&lt;Task&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that will be started upon the completion of any Task in the provided set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAny__1_System_Threading_Tasks_Task___0____System_Action_System_Threading_Tasks_Task___0___\" data-linktype=\"self-bookmark\">ContinueWhenAny&lt;TAntecedentResult&gt;(Task&lt;TAntecedentResult&gt;[],Action&lt;Task&lt;TAntecedentResult&gt;&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that will be started upon the completion of any Task in the provided set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAny__1_System_Threading_Tasks_Task___0____System_Action_System_Threading_Tasks_Task___0___System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">ContinueWhenAny&lt;TAntecedentResult&gt;(Task&lt;TAntecedentResult&gt;[],Action&lt;Task&lt;TAntecedentResult&gt;&gt;,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that will be started upon the completion of any Task in the provided set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAny__1_System_Threading_Tasks_Task___0____System_Action_System_Threading_Tasks_Task___0___System_Threading_Tasks_TaskContinuationOptions_\" data-linktype=\"self-bookmark\">ContinueWhenAny&lt;TAntecedentResult&gt;(Task&lt;TAntecedentResult&gt;[],Action&lt;Task&lt;TAntecedentResult&gt;&gt;,TaskContinuationOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that will be started upon the completion of any Task in the provided set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAny__1_System_Threading_Tasks_Task___0____System_Action_System_Threading_Tasks_Task___0___System_Threading_CancellationToken_System_Threading_Tasks_TaskContinuationOptions_System_Threading_Tasks_TaskScheduler_\" data-linktype=\"self-bookmark\">ContinueWhenAny&lt;TAntecedentResult&gt;(Task&lt;TAntecedentResult&gt;[],Action&lt;Task&lt;TAntecedentResult&gt;&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that will be started upon the completion of any Task in the provided set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAny__1_System_Threading_Tasks_Task___System_Func_System_Threading_Tasks_Task___0__\" data-linktype=\"self-bookmark\">ContinueWhenAny&lt;TResult&gt;(Task[],Func&lt;Task,TResult&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that will be started upon the completion of any Task in the provided set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAny__1_System_Threading_Tasks_Task___System_Func_System_Threading_Tasks_Task___0__System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">ContinueWhenAny&lt;TResult&gt;(Task[],Func&lt;Task,TResult&gt;,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that will be started upon the completion of any Task in the provided set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAny__1_System_Threading_Tasks_Task___System_Func_System_Threading_Tasks_Task___0__System_Threading_Tasks_TaskContinuationOptions_\" data-linktype=\"self-bookmark\">ContinueWhenAny&lt;TResult&gt;(Task[],Func&lt;Task,TResult&gt;,TaskContinuationOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that will be started upon the completion of any Task in the provided set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAny__1_System_Threading_Tasks_Task___System_Func_System_Threading_Tasks_Task___0__System_Threading_CancellationToken_System_Threading_Tasks_TaskContinuationOptions_System_Threading_Tasks_TaskScheduler_\" data-linktype=\"self-bookmark\">ContinueWhenAny&lt;TResult&gt;(Task[],Func&lt;Task,TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that will be started upon the completion of any Task in the provided set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAny__2_System_Threading_Tasks_Task___0____System_Func_System_Threading_Tasks_Task___0____1__\" data-linktype=\"self-bookmark\">ContinueWhenAny&lt;TAntecedentResult,TResult&gt;(Task&lt;TAntecedentResult&gt;[],Func&lt;Task&lt;TAntecedentResult&gt;,TResult&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that will be started upon the completion of any Task in the provided set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAny__2_System_Threading_Tasks_Task___0____System_Func_System_Threading_Tasks_Task___0____1__System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">ContinueWhenAny&lt;TAntecedentResult,TResult&gt;(Task&lt;TAntecedentResult&gt;[],Func&lt;Task&lt;TAntecedentResult&gt;,TResult&gt;,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that will be started upon the completion of any Task in the provided set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAny__2_System_Threading_Tasks_Task___0____System_Func_System_Threading_Tasks_Task___0____1__System_Threading_Tasks_TaskContinuationOptions_\" data-linktype=\"self-bookmark\">ContinueWhenAny&lt;TAntecedentResult,TResult&gt;(Task&lt;TAntecedentResult&gt;[],Func&lt;Task&lt;TAntecedentResult&gt;,TResult&gt;,TaskContinuationOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that will be started upon the completion of any Task in the provided set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_ContinueWhenAny__2_System_Threading_Tasks_Task___0____System_Func_System_Threading_Tasks_Task___0____1__System_Threading_CancellationToken_System_Threading_Tasks_TaskContinuationOptions_System_Threading_Tasks_TaskScheduler_\" data-linktype=\"self-bookmark\">ContinueWhenAny&lt;TAntecedentResult,TResult&gt;(Task&lt;TAntecedentResult&gt;[],Func&lt;Task&lt;TAntecedentResult&gt;,TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that will be started upon the completion of any Task in the provided set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_FromAsync_System_IAsyncResult_System_Action_System_IAsyncResult__\" data-linktype=\"self-bookmark\">FromAsync(IAsyncResult,Action&lt;IAsyncResult&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that executes an end method action when a specified <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> completes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_FromAsync_System_Func_System_AsyncCallback_System_Object_System_IAsyncResult__System_Action_System_IAsyncResult__System_Object_\" data-linktype=\"self-bookmark\">FromAsync(Func&lt;AsyncCallback,Object,IAsyncResult&gt;,Action&lt;IAsyncResult&gt;,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_FromAsync_System_IAsyncResult_System_Action_System_IAsyncResult__System_Threading_Tasks_TaskCreationOptions_\" data-linktype=\"self-bookmark\">FromAsync(IAsyncResult,Action&lt;IAsyncResult&gt;,TaskCreationOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that executes an end method action when a specified <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> completes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_FromAsync_System_Func_System_AsyncCallback_System_Object_System_IAsyncResult__System_Action_System_IAsyncResult__System_Object_System_Threading_Tasks_TaskCreationOptions_\" data-linktype=\"self-bookmark\">FromAsync(Func&lt;AsyncCallback,Object,IAsyncResult&gt;,Action&lt;IAsyncResult&gt;,Object,TaskCreationOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_FromAsync_System_IAsyncResult_System_Action_System_IAsyncResult__System_Threading_Tasks_TaskCreationOptions_System_Threading_Tasks_TaskScheduler_\" data-linktype=\"self-bookmark\">FromAsync(IAsyncResult,Action&lt;IAsyncResult&gt;,TaskCreationOptions,TaskScheduler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that executes an end method action when a specified <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> completes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_FromAsync__1_System_Func___0_System_AsyncCallback_System_Object_System_IAsyncResult__System_Action_System_IAsyncResult____0_System_Object_\" data-linktype=\"self-bookmark\">FromAsync&lt;TArg1&gt;(Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;,Action&lt;IAsyncResult&gt;,TArg1,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_FromAsync__1_System_Func___0_System_AsyncCallback_System_Object_System_IAsyncResult__System_Action_System_IAsyncResult____0_System_Object_System_Threading_Tasks_TaskCreationOptions_\" data-linktype=\"self-bookmark\">FromAsync&lt;TArg1&gt;(Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;,Action&lt;IAsyncResult&gt;,TArg1,Object,TaskCreationOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_FromAsync__1_System_IAsyncResult_System_Func_System_IAsyncResult___0__\" data-linktype=\"self-bookmark\">FromAsync&lt;TResult&gt;(IAsyncResult,Func&lt;IAsyncResult,TResult&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that executes an end method function when a specified <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> completes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_FromAsync__1_System_Func_System_AsyncCallback_System_Object_System_IAsyncResult__System_Func_System_IAsyncResult___0__System_Object_\" data-linktype=\"self-bookmark\">FromAsync&lt;TResult&gt;(Func&lt;AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_FromAsync__1_System_IAsyncResult_System_Func_System_IAsyncResult___0__System_Threading_Tasks_TaskCreationOptions_\" data-linktype=\"self-bookmark\">FromAsync&lt;TResult&gt;(IAsyncResult,Func&lt;IAsyncResult,TResult&gt;,TaskCreationOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that executes an end method function when a specified <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> completes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_FromAsync__1_System_Func_System_AsyncCallback_System_Object_System_IAsyncResult__System_Func_System_IAsyncResult___0__System_Object_System_Threading_Tasks_TaskCreationOptions_\" data-linktype=\"self-bookmark\">FromAsync&lt;TResult&gt;(Func&lt;AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,Object,TaskCreationOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_FromAsync__1_System_IAsyncResult_System_Func_System_IAsyncResult___0__System_Threading_Tasks_TaskCreationOptions_System_Threading_Tasks_TaskScheduler_\" data-linktype=\"self-bookmark\">FromAsync&lt;TResult&gt;(IAsyncResult,Func&lt;IAsyncResult,TResult&gt;,TaskCreationOptions,TaskScheduler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that executes an end method function when a specified <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> completes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_FromAsync__2_System_Func___0___1_System_AsyncCallback_System_Object_System_IAsyncResult__System_Action_System_IAsyncResult____0___1_System_Object_\" data-linktype=\"self-bookmark\">FromAsync&lt;TArg1,TArg2&gt;(Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;,Action&lt;IAsyncResult&gt;,TArg1,TArg2,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_FromAsync__2_System_Func___0___1_System_AsyncCallback_System_Object_System_IAsyncResult__System_Action_System_IAsyncResult____0___1_System_Object_System_Threading_Tasks_TaskCreationOptions_\" data-linktype=\"self-bookmark\">FromAsync&lt;TArg1,TArg2&gt;(Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;,Action&lt;IAsyncResult&gt;,TArg1,TArg2,Object,TaskCreationOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_FromAsync__2_System_Func___0_System_AsyncCallback_System_Object_System_IAsyncResult__System_Func_System_IAsyncResult___1____0_System_Object_\" data-linktype=\"self-bookmark\">FromAsync&lt;TArg1,TResult&gt;(Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_FromAsync__2_System_Func___0_System_AsyncCallback_System_Object_System_IAsyncResult__System_Func_System_IAsyncResult___1____0_System_Object_System_Threading_Tasks_TaskCreationOptions_\" data-linktype=\"self-bookmark\">FromAsync&lt;TArg1,TResult&gt;(Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,Object,TaskCreationOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_FromAsync__3_System_Func___0___1___2_System_AsyncCallback_System_Object_System_IAsyncResult__System_Action_System_IAsyncResult____0___1___2_System_Object_\" data-linktype=\"self-bookmark\">FromAsync&lt;TArg1,TArg2,TArg3&gt;(Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;,Action&lt;IAsyncResult&gt;,TArg1,TArg2,TArg3,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_FromAsync__3_System_Func___0___1___2_System_AsyncCallback_System_Object_System_IAsyncResult__System_Action_System_IAsyncResult____0___1___2_System_Object_System_Threading_Tasks_TaskCreationOptions_\" data-linktype=\"self-bookmark\">FromAsync&lt;TArg1,TArg2,TArg3&gt;(Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;,Action&lt;IAsyncResult&gt;,TArg1,TArg2,TArg3,Object,TaskCreationOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_FromAsync__3_System_Func___0___1_System_AsyncCallback_System_Object_System_IAsyncResult__System_Func_System_IAsyncResult___2____0___1_System_Object_\" data-linktype=\"self-bookmark\">FromAsync&lt;TArg1,TArg2,TResult&gt;(Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,TArg2,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_FromAsync__3_System_Func___0___1_System_AsyncCallback_System_Object_System_IAsyncResult__System_Func_System_IAsyncResult___2____0___1_System_Object_System_Threading_Tasks_TaskCreationOptions_\" data-linktype=\"self-bookmark\">FromAsync&lt;TArg1,TArg2,TResult&gt;(Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,TArg2,Object,TaskCreationOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_FromAsync__4_System_Func___0___1___2_System_AsyncCallback_System_Object_System_IAsyncResult__System_Func_System_IAsyncResult___3____0___1___2_System_Object_\" data-linktype=\"self-bookmark\">FromAsync&lt;TArg1,TArg2,TArg3,TResult&gt;(Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,TArg2,TArg3,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_FromAsync__4_System_Func___0___1___2_System_AsyncCallback_System_Object_System_IAsyncResult__System_Func_System_IAsyncResult___3____0___1___2_System_Object_System_Threading_Tasks_TaskCreationOptions_\" data-linktype=\"self-bookmark\">FromAsync&lt;TArg1,TArg2,TArg3,TResult&gt;(Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,TArg2,TArg3,Object,TaskCreationOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_StartNew_System_Action_\" data-linktype=\"self-bookmark\">StartNew(Action)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and starts a task.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_StartNew_System_Action_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">StartNew(Action,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and starts a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_StartNew_System_Action_System_Threading_Tasks_TaskCreationOptions_\" data-linktype=\"self-bookmark\">StartNew(Action,TaskCreationOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and starts a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_StartNew_System_Action_System_Object__System_Object_\" data-linktype=\"self-bookmark\">StartNew(Action&lt;Object&gt;,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and starts a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_StartNew_System_Action_System_Object__System_Object_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">StartNew(Action&lt;Object&gt;,Object,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and starts a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_StartNew_System_Action_System_Object__System_Object_System_Threading_Tasks_TaskCreationOptions_\" data-linktype=\"self-bookmark\">StartNew(Action&lt;Object&gt;,Object,TaskCreationOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and starts a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_StartNew_System_Action_System_Threading_CancellationToken_System_Threading_Tasks_TaskCreationOptions_System_Threading_Tasks_TaskScheduler_\" data-linktype=\"self-bookmark\">StartNew(Action,CancellationToken,TaskCreationOptions,TaskScheduler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and starts a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_StartNew_System_Action_System_Object__System_Object_System_Threading_CancellationToken_System_Threading_Tasks_TaskCreationOptions_System_Threading_Tasks_TaskScheduler_\" data-linktype=\"self-bookmark\">StartNew(Action&lt;Object&gt;,Object,CancellationToken,TaskCreationOptions,TaskScheduler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and starts a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_StartNew__1_System_Func___0__\" data-linktype=\"self-bookmark\">StartNew&lt;TResult&gt;(Func&lt;TResult&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and starts a <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_StartNew__1_System_Func_System_Object___0__System_Object_\" data-linktype=\"self-bookmark\">StartNew&lt;TResult&gt;(Func&lt;Object,TResult&gt;,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and starts a <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_StartNew__1_System_Func___0__System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">StartNew&lt;TResult&gt;(Func&lt;TResult&gt;,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and starts a <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_StartNew__1_System_Func___0__System_Threading_Tasks_TaskCreationOptions_\" data-linktype=\"self-bookmark\">StartNew&lt;TResult&gt;(Func&lt;TResult&gt;,TaskCreationOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and starts a <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_StartNew__1_System_Func_System_Object___0__System_Object_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">StartNew&lt;TResult&gt;(Func&lt;Object,TResult&gt;,Object,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and starts a <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_StartNew__1_System_Func_System_Object___0__System_Object_System_Threading_Tasks_TaskCreationOptions_\" data-linktype=\"self-bookmark\">StartNew&lt;TResult&gt;(Func&lt;Object,TResult&gt;,Object,TaskCreationOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and starts a <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_StartNew__1_System_Func___0__System_Threading_CancellationToken_System_Threading_Tasks_TaskCreationOptions_System_Threading_Tasks_TaskScheduler_\" data-linktype=\"self-bookmark\">StartNew&lt;TResult&gt;(Func&lt;TResult&gt;,CancellationToken,TaskCreationOptions,TaskScheduler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and starts a <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Tasks_TaskFactory_StartNew__1_System_Func_System_Object___0__System_Object_System_Threading_CancellationToken_System_Threading_Tasks_TaskCreationOptions_System_Threading_Tasks_TaskScheduler_\" data-linktype=\"self-bookmark\">StartNew&lt;TResult&gt;(Func&lt;Object,TResult&gt;,Object,CancellationToken,TaskCreationOptions,TaskScheduler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and starts a <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory__ctor\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TaskFactory()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a <a class=\"xref\" href=\"system.threading.tasks.taskfactory\" data-linktype=\"relative-path\">TaskFactory</a> instance with the default configuration.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TaskFactory ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor creates a <a class=\"xref\" href=\"system.threading.tasks.taskfactory\" data-linktype=\"relative-path\">TaskFactory</a> instance with a default configuration. The <a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a> property is initialized to <a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a>, the <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a> property is initialized to <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a>, and the <a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a> property is initialized to the current scheduler (see <a class=\"xref\" href=\"system.threading.tasks.taskscheduler#System_Threading_Tasks_TaskScheduler_Current_\" data-linktype=\"relative-path\">Current</a>).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory__ctor_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TaskFactory(CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a <a class=\"xref\" href=\"system.threading.tasks.taskfactory\" data-linktype=\"relative-path\">TaskFactory</a> instance with the specified configuration.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TaskFactory (System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">stem.Threading.Tasks.TaskFactory.CancellationToken*</span> that will be assigned to tasks created by this <a class=\"xref\" href=\"system.threading.tasks.taskfactory\" data-linktype=\"relative-path\">TaskFactory</a> unless another CancellationToken is explicitly specified while calling the factory methods.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor creates a <a class=\"xref\" href=\"system.threading.tasks.taskfactory\" data-linktype=\"relative-path\">TaskFactory</a> instance with a default configuration. The <a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a> property is initialized to <a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a>, the <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a> property is initialized to <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a>, and the <a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a> property is initialized to the current scheduler (see <a class=\"xref\" href=\"system.threading.tasks.taskscheduler#System_Threading_Tasks_TaskScheduler_Current_\" data-linktype=\"relative-path\">Current</a>).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory__ctor_System_Threading_Tasks_TaskScheduler_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TaskFactory(TaskScheduler)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a <a class=\"xref\" href=\"system.threading.tasks.taskfactory\" data-linktype=\"relative-path\">TaskFactory</a> instance with the specified configuration.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TaskFactory (System.Threading.Tasks.TaskScheduler scheduler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>scheduler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a> to use to schedule any tasks created with this TaskFactory. A null value indicates that the current TaskScheduler should be used.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>With this constructor, the <a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a> property is initialized to <a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a>, the <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a> property is initialized to <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a>, and the <a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a> property is initialized to <code>scheduler</code>, unless it&#39;s null, in which case the property is initialized to the current scheduler (see <a class=\"xref\" href=\"system.threading.tasks.taskscheduler#System_Threading_Tasks_TaskScheduler_Current_\" data-linktype=\"relative-path\">Current</a>).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory__ctor_System_Threading_Tasks_TaskCreationOptions_System_Threading_Tasks_TaskContinuationOptions_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TaskFactory(TaskCreationOptions,TaskContinuationOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a <a class=\"xref\" href=\"system.threading.tasks.taskfactory\" data-linktype=\"relative-path\">TaskFactory</a> instance with the specified configuration.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TaskFactory (System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>creationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The default <a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a> to use when creating tasks with this TaskFactory.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The default <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a> to use when creating continuation tasks with this TaskFactory.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>creationOptions</code> argument specifies an invalid <a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a> value. For more information, see the Remarks for <span class=\"xref\">stem.Threading.Tasks.TaskFactory.FromAsync*</span>.  </p>\n<p> -or-  </p>\n<p> The <code>continuationOptions</code> argument specifies an invalid value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>With this constructor, the <a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a> property is initialized to <code>creationOptions</code>, the <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a> property is initialized to <code>continuationOptions</code>, and the <a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a> property is initialized to the current scheduler (see <a class=\"xref\" href=\"system.threading.tasks.taskscheduler#System_Threading_Tasks_TaskScheduler_Current_\" data-linktype=\"relative-path\">Current</a>).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory__ctor_System_Threading_CancellationToken_System_Threading_Tasks_TaskCreationOptions_System_Threading_Tasks_TaskContinuationOptions_System_Threading_Tasks_TaskScheduler_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TaskFactory(CancellationToken,TaskCreationOptions,TaskContinuationOptions,TaskScheduler)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a <a class=\"xref\" href=\"system.threading.tasks.taskfactory\" data-linktype=\"relative-path\">TaskFactory</a> instance with the specified configuration.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TaskFactory (System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The default <span class=\"xref\">stem.Threading.Tasks.TaskFactory.CancellationToken*</span> that will be assigned to tasks created by this <a class=\"xref\" href=\"system.threading.tasks.taskfactory\" data-linktype=\"relative-path\">TaskFactory</a> unless another CancellationToken is explicitly specified while calling the factory methods.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>creationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The default <a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a> to use when creating tasks with this TaskFactory.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The default <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a> to use when creating continuation tasks with this TaskFactory.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scheduler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The default <a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a> to use to schedule any Tasks created with this TaskFactory. A null value indicates that TaskScheduler.Current should be used.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>creationOptions</code> argument specifies an invalid <a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a> value. For more information, see the Remarks for <span class=\"xref\">stem.Threading.Tasks.TaskFactory.FromAsync*</span>.  </p>\n<p> -or-  </p>\n<p> The <code>continuationOptions</code> argument specifies an invalid value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>With this constructor, the <a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a> property is initialized to <code>creationOptions</code>, the <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a> property is initialized to <code>continuationOptions</code>, and the <a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a> property is initialized to <code>scheduler</code>, unless it&#39;s null, in which case the property is initialized to the current scheduler (see <a class=\"xref\" href=\"system.threading.tasks.taskscheduler#System_Threading_Tasks_TaskScheduler_Current_\" data-linktype=\"relative-path\">Current</a>).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_CancellationToken\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_CancellationToken_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CancellationToken</div>        \r\n          </div>\r\n    \r\n            <p>Gets the default cancellation token for this task factory.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.CancellationToken CancellationToken { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </div>\r\n                  <p>The default task cancellation token for this task factory.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property returns the default <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> that will be assigned to all tasks created by this factory, unless another <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> value is explicitly specified during the call to the factory methods.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinuationOptions\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinuationOptions_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinuationOptions</div>        \r\n          </div>\r\n    \r\n            <p>Gets the default task continuation options for this task factory.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.TaskContinuationOptions ContinuationOptions { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a></div>\r\n                  </div>\r\n                  <p>The default task continuation options for this task factory.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The property value is used to create all continuation tasks, unless other options are explicitly specified during calls to this factory&#39;s methods.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_CreationOptions\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_CreationOptions_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreationOptions</div>        \r\n          </div>\r\n    \r\n            <p>Gets the default task creation options for this task factory.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.TaskCreationOptions CreationOptions { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></div>\r\n                  </div>\r\n                  <p>The default task creation options for this task factory.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The property value is used to create all tasks, unless other options are explicitly specified during calls to this factory&#39;s methods.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_Scheduler\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_Scheduler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Scheduler</div>        \r\n          </div>\r\n    \r\n            <p>Gets the default task scheduler for this task factory.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.TaskScheduler Scheduler { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a></div>\r\n                  </div>\r\n                  <p>The default task scheduler for this task factory.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The property value is used to schedule all tasks, unless another scheduler is explicitly specified during calls to this factory&#39;s methods.  </p>\n<p> If this property value is <code>null</code>, the value of the <a class=\"xref\" href=\"system.threading.tasks.taskscheduler#System_Threading_Tasks_TaskScheduler_Current_\" data-linktype=\"relative-path\">Current</a> property is used.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll_System_Threading_Tasks_Task___System_Action_System_Threading_Tasks_Task____\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAll(Task[],Action&lt;Task[]&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Action&lt;System.Threading.Tasks.Task[]&gt; continuationAction);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationAction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>[]&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate to execute when all tasks in the <code>tasks</code> array have completed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>An element in the <code>tasks</code> array has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>continuationAction</code> argument is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is empty or contains a null value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ContinueWhenAll method executes the <code>continuationAction</code> delegate when all tasks in the <code>tasks</code> array have completed, regardless of their completion status.  </p>\n<p> Exceptions thrown by tasks in the <code>tasks</code> array are not available to the continuation task through structured exception handling. You can determine which exceptions were thrown by examining the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Exception_\" data-linktype=\"relative-path\">Exception</a> property of each task in the <code>tasks</code> array. To use structured exception handling to handle exceptions thrown by tasks in the <code>tasks</code> array, call the [Task.WaitAll(Task&lt;xref:System.Threading.Tasks.Task.WaitAll%28System.Threading.Tasks.Task%5B%5D%29?displayProperty=fullName&gt; method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example launches separate tasks that use a regular expression to count the number of words in a set of text files. The ContinueWhenAll method is used to launch a task that displays the total word count when all the antecedent tasks have completed.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Threading.Tasks.Task.ContinueWhenAll#1\">Imports System.Collections.Generic\nImports System.IO\nImports System.Threading\nImports System.Threading.Tasks\nImports System.Text.RegularExpressions\n\nModule Example\n   Dim totalWords As Integer = 0\n   \n   Public Sub Main()\n      Dim filenames() As String = { &quot;chapter1.txt&quot;, &quot;chapter2.txt&quot;, \n                                    &quot;chapter3.txt&quot;, &quot;chapter4.txt&quot;,\n                                    &quot;chapter5.txt&quot; }\n      Dim pattern As String = &quot;\\b\\w+\\b&quot;\n      Dim tasks As New List(Of Task)()  \n        \n      &#39; Determine the number of words in each file.\n      For Each filename In filenames \n         tasks.Add(Task.Factory.StartNew( Sub(fn)\n                                             If Not File.Exists(filename)\n                                                Throw New FileNotFoundException(&quot;{0} does not exist.&quot;, filename)\n                                             End If\n                                             \n                                             Dim sr As New StreamReader(fn.ToString())\n                                             Dim content As String = sr.ReadToEnd()\n                                             sr.Close()\n                                             Dim words As Integer = Regex.Matches(content, pattern).Count\n                                             Interlocked.Add(totalWords, words) \n                                             Console.WriteLine(&quot;{0,-25} {1,6:N0} words&quot;, fn, words)\n                                          End Sub, filename))\n      Next\n      \n      Dim finalTask As Task = Task.Factory.ContinueWhenAll(tasks.ToArray(), \n                                                           Sub(wordCountTasks As Task() )\n                                                              Dim nSuccessfulTasks As Integer = 0\n                                                              Dim nFailed As Integer = 0\n                                                              Dim nFileNotFound As Integer = 0\n                                                              For Each t In wordCountTasks\n                                                                 If t.Status = TaskStatus.RanToCompletion Then _ \n                                                                    nSuccessfulTasks += 1\n                                                       \n                                                                 If t.Status = TaskStatus.Faulted Then\n                                                                    nFailed += 1  \n                                                                    t.Exception.Handle(Function(e As Exception) \n                                                                                          If TypeOf e Is FileNotFoundException Then\n                                                                                             nFileNotFound += 1\n                                                                                          End If   \n                                                                                          Return True   \n                                                                                       End Function)                       \n                                                                 End If \n                                                              Next   \n                                                              Console.WriteLine()\n                                                              Console.WriteLine(&quot;{0,-25} {1,6} total words&quot;, \n                                                                                String.Format(&quot;{0} files&quot;, nSuccessfulTasks), \n                                                                                totalWords) \n                                                              If nFailed &gt; 0 Then\n                                                                 Console.WriteLine()\n                                                                 Console.WriteLine(&quot;{0} tasks failed for the following reasons:&quot;, nFailed)\n                                                                 Console.WriteLine(&quot;   File not found:    {0}&quot;, nFileNotFound)\n                                                                 If nFailed &lt;&gt; nFileNotFound Then\n                                                                    Console.WriteLine(&quot;   Other:          {0}&quot;, nFailed - nFileNotFound)\n                                                                 End If \n                                                              End If\n                                                           End Sub)\n      finalTask.Wait()                                                                  \n   End Sub\n   \n   Private Sub DisplayResult(wordCountTasks As Task())\n   End Sub\nEnd Module\n&#39; The example displays output like the following:\n&#39;       chapter2.txt               1,585 words\n&#39;       chapter1.txt               4,012 words\n&#39;       chapter5.txt               4,660 words\n&#39;       chapter3.txt               7,481 words\n&#39;       \n&#39;       4 files                    17738 total words\n&#39;       \n&#39;       1 tasks failed for the following reasons:\n&#39;          File not found:    1\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Threading.Tasks.Task.ContinueWhenAll#1\">using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing System.Text.RegularExpressions;\n\npublic class Example\n{\n   public static void Main()\n   {\n      string[] filenames = { &quot;chapter1.txt&quot;, &quot;chapter2.txt&quot;, \n                             &quot;chapter3.txt&quot;, &quot;chapter4.txt&quot;,\n                             &quot;chapter5.txt&quot; };\n      string pattern = @&quot;\\b\\w+\\b&quot;;\n      var tasks = new List&lt;Task&gt;();  \n      int totalWords = 0;\n        \n      // Determine the number of words in each file.\n      foreach (var filename in filenames) \n         tasks.Add( Task.Factory.StartNew( fn =&gt; { if (! File.Exists(fn.ToString()))\n                                                      throw new FileNotFoundException(&quot;{0} does not exist.&quot;, filename);\n\n                                                   StreamReader sr = new StreamReader(fn.ToString());\n                                                   String content = sr.ReadToEnd();\n                                                   sr.Close();\n                                                   int words = Regex.Matches(content, pattern).Count;\n                                                   Interlocked.Add(ref totalWords, words); \n                                                   Console.WriteLine(&quot;{0,-25} {1,6:N0} words&quot;, fn, words); }, \n                                           filename));\n\n      var finalTask = Task.Factory.ContinueWhenAll(tasks.ToArray(), wordCountTasks =&gt; {\n                                                    int nSuccessfulTasks = 0;\n                                                    int nFailed = 0;\n                                                    int nFileNotFound = 0;\n                                                    foreach (var t in wordCountTasks) {\n                                                       if (t.Status == TaskStatus.RanToCompletion) \n                                                          nSuccessfulTasks++;\n                                                       \n                                                       if (t.Status == TaskStatus.Faulted) {\n                                                          nFailed++;  \n                                                          t.Exception.Handle( (e) =&gt; { \n                                                             if (e is FileNotFoundException)\n                                                                nFileNotFound++;\n                                                             return true;   \n                                                          });\n                                                       } \n                                                    }   \n                                                    Console.WriteLine(&quot;<br>{0,-25} {1,6} total words<br>&quot;, \n                                                                      String.Format(&quot;{0} files&quot;, nSuccessfulTasks), \n                                                                      totalWords); \n                                                    if (nFailed &gt; 0) {\n                                                       Console.WriteLine(&quot;{0} tasks failed for the following reasons:&quot;, nFailed);\n                                                       Console.WriteLine(&quot;   File not found:    {0}&quot;, nFileNotFound);\n                                                       if (nFailed != nFileNotFound)\n                                                          Console.WriteLine(&quot;   Other:          {0}&quot;, nFailed - nFileNotFound);\n                                                    } \n                                                    });  \n      finalTask.Wait();                                                                  \n   }\n}\n// The example displays output like the following:\n//       chapter2.txt               1,585 words\n//       chapter1.txt               4,012 words\n//       chapter5.txt               4,660 words\n//       chapter3.txt               7,481 words\n//       \n//       4 files                    17738 total words\n//       \n//       1 tasks failed for the following reasons:\n//          File not found:    1\n</code></pre><p> The call to the continuation task&#39;s <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Wait_\" data-linktype=\"relative-path\">Wait</a> method does not allow it to handle exceptions thrown by the antecedent tasks, so the example examines the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Status_\" data-linktype=\"relative-path\">Status</a> property of each antecedent task to determine whether the task succeeded.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll_System_Threading_Tasks_Task___System_Action_System_Threading_Tasks_Task____System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAll(Task[],Action&lt;Task[]&gt;,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Action&lt;System.Threading.Tasks.Task[]&gt; continuationAction, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationAction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>[]&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate to execute when all tasks in the <code>tasks</code> array have completed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The cancellation token to assign to the new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>An element in the <code>tasks</code> array has been disposed.  </p>\n<p> -or-  </p>\n<p> The <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> that created <code>cancellationToken</code> has already been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>continuationAction</code> argument is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is empty or contains a null value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ContinueWhenAll method executes the <code>continuationAction</code> delegate when all tasks in the <code>tasks</code> array have completed, regardless of their completion status.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a cancellation token, which it passes to separate tasks that use a regular expression to count the number of words in a set of text files. The cancellation token is set if a file cannot be found. The ContinueWhenAll method is used to launch a task that displays the total word count when all the antecedent tasks have completed. If the cancellation token is set, which indicates that one or more tasks have been cancelled, it handles the <a class=\"xref\" href=\"system.aggregateexception\" data-linktype=\"relative-path\">AggregateException</a> exception and displays an error message.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Threading.Tasks.Task.ContinueWhenAll#2\">using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing System.Text.RegularExpressions;\n\npublic class Example\n{\n   public static void Main()\n   {\n      string[] filenames = { &quot;chapter1.txt&quot;, &quot;chapter2.txt&quot;, \n                             &quot;chapter3.txt&quot;, &quot;chapter4.txt&quot;,\n                             &quot;chapter5.txt&quot; };\n      string pattern = @&quot;\\b\\w+\\b&quot;;\n      var tasks = new List&lt;Task&gt;();  \n      CancellationTokenSource source = new CancellationTokenSource();\n      CancellationToken token = source.Token;\n      int totalWords = 0;\n        \n      // Determine the number of words in each file.\n      foreach (var filename in filenames)\n         tasks.Add( Task.Factory.StartNew( fn =&gt; { token.ThrowIfCancellationRequested(); \n\n                                                   if (! File.Exists(fn.ToString())) {\n                                                      source.Cancel();\n                                                      token.ThrowIfCancellationRequested();\n                                                   }\n                                                   \n                                                   StreamReader sr = new StreamReader(fn.ToString());\n                                                   String content = sr.ReadToEnd();\n                                                   sr.Close();\n                                                   int words = Regex.Matches(content, pattern).Count;\n                                                   Interlocked.Add(ref totalWords, words); \n                                                   Console.WriteLine(&quot;{0,-25} {1,6:N0} words&quot;, fn, words); }, \n                                           filename, token));\n\n      var finalTask = Task.Factory.ContinueWhenAll(tasks.ToArray(), wordCountTasks =&gt; {\n                                                    if (! token.IsCancellationRequested) \n                                                       Console.WriteLine(&quot;<br>{0,-25} {1,6} total words<br>&quot;, \n                                                                         String.Format(&quot;{0} files&quot;, wordCountTasks.Length), \n                                                                         totalWords); \n                                                   }, token); \n      try {                                                   \n         finalTask.Wait();\n      }\n      catch (AggregateException ae) {\n         foreach (Exception inner in ae.InnerExceptions)\n            if (inner is TaskCanceledException)\n               Console.WriteLine(&quot;<br>Failure to determine total word count: a task was cancelled.&quot;);\n            else\n               Console.WriteLine(&quot;<br>Failure caused by {0}&quot;, inner.GetType().Name);      \n      }\n      finally {\n         source.Dispose();\n      }\n   }\n}\n// The example displays output like the following:\n//       chapter2.txt               1,585 words\n//       chapter1.txt               4,012 words\n//       \n//       Failure to determine total word count: a task was cancelled.\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Threading.Tasks.Task.ContinueWhenAll#2\">Imports System.Collections.Generic\nImports System.IO\nImports System.Threading\nImports System.Threading.Tasks\nImports System.Text.RegularExpressions\n\nModule Example\n   Public Sub Main()\n      Dim filenames() As String= { &quot;chapter1.txt&quot;, &quot;chapter2.txt&quot;, \n                                   &quot;chapter3.txt&quot;, &quot;chapter4.txt&quot;,\n                                   &quot;chapter5.txt&quot; }\n      Dim pattern As String = &quot;\\b\\w+\\b&quot;\n      Dim tasks As New List(Of Task)()  \n      Dim source As New CancellationTokenSource()\n      Dim token As CancellationToken = source.Token\n      Dim totalWords As Integer = 0\n        \n      &#39; Determine the number of words in each file.\n      For Each filename In filenames\n         tasks.Add( Task.Factory.StartNew( Sub(obj As Object)\n                                              Dim fn As String = CStr(obj)\n                                              token.ThrowIfCancellationRequested() \n                                              If Not File.Exists(fn) Then \n                                                 source.Cancel()\n                                                 token.ThrowIfCancellationRequested()\n                                              End If        \n                                                   \n                                              Dim sr As New StreamReader(fn.ToString())\n                                              Dim content As String = sr.ReadToEnd()\n                                              sr.Close()\n                                              Dim words As Integer = Regex.Matches(content, pattern).Count\n                                              Interlocked.Add(totalWords, words) \n                                              Console.WriteLine(&quot;{0,-25} {1,6:N0} words&quot;, fn, words) \n                                           End Sub, filename, token))\n      Next\n      \n      Dim finalTask As Task = Task.Factory.ContinueWhenAll(tasks.ToArray(), \n                                                           Sub(wordCountTasks As Task())\n                                                              If Not token.IsCancellationRequested Then \n                                                                 Console.WriteLine(&quot;<br>{0,-25} {1,6} total words<br>&quot;, \n                                                                                   String.Format(&quot;{0} files&quot;, wordCountTasks.Length), \n                                                                                   totalWords)\n                                                              End If                      \n                                                           End Sub, token) \n      Try                                                    \n         finalTask.Wait()\n      Catch ae As AggregateException \n         For Each inner In ae.InnerExceptions\n            Console.WriteLine()\n            If TypeOf inner Is TaskCanceledException\n               Console.WriteLine(&quot;Failure to determine total word count: a task was cancelled.&quot;)\n            Else\n               Console.WriteLine(&quot;Failure caused by {0}&quot;, inner.GetType().Name)\n            End If \n         Next           \n      Finally\n         source.Dispose()\n      End Try                                                                     \n   End Sub\nEnd Module\n&#39; The example displays output like the following:\n&#39;       chapter2.txt               1,585 words\n&#39;       chapter1.txt               4,012 words\n&#39;       \n&#39;       Failure to determine total word count: a task was cancelled.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll_System_Threading_Tasks_Task___System_Action_System_Threading_Tasks_Task____System_Threading_Tasks_TaskContinuationOptions_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAll(Task[],Action&lt;Task[]&gt;,TaskContinuationOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Action&lt;System.Threading.Tasks.Task[]&gt; continuationAction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationAction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>[]&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate to execute when all tasks in the <code>tasks</code> array have completed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that control the behavior of the new continuation task. The NotOn* and OnlyOn* members are not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>An element in the <code>tasks</code> array has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>continuationAction</code> argument is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>continuationOptions</code> argument specifies an invalid value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is empty or contains a null value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll_System_Threading_Tasks_Task___System_Action_System_Threading_Tasks_Task____System_Threading_CancellationToken_System_Threading_Tasks_TaskContinuationOptions_System_Threading_Tasks_TaskScheduler_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAll(Task[],Action&lt;Task[]&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Action&lt;System.Threading.Tasks.Task[]&gt; continuationAction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationAction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>[]&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate to execute when all tasks in the <code>tasks</code> array have completed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The cancellation token to assign to the new continuation task.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that control the behavior of the new continuation task.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scheduler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object that is used to schedule the new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>continuationAction</code> argument is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>scheduler</code> argument is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is empty or contains a null value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll__1_System_Threading_Tasks_Task___0____System_Action_System_Threading_Tasks_Task___0_____\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll_TAntecedentResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAll&lt;TAntecedentResult&gt;(Task&lt;TAntecedentResult&gt;[],Action&lt;Task&lt;TAntecedentResult&gt;[]&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]&gt; continuationAction);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationAction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;[]&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate to execute when all tasks in the <code>tasks</code> array have completed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>An element in the <code>tasks</code> array has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>continuationAction</code> argument is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is empty or contains a null value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll__1_System_Threading_Tasks_Task___0____System_Action_System_Threading_Tasks_Task___0_____System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll_TAntecedentResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAll&lt;TAntecedentResult&gt;(Task&lt;TAntecedentResult&gt;[],Action&lt;Task&lt;TAntecedentResult&gt;[]&gt;,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]&gt; continuationAction, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationAction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;[]&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate to execute when all tasks in the <code>tasks</code> array have completed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The cancellation token to assign to the new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>An element in the <code>tasks</code> array has been disposed.  </p>\n<p> -or-  </p>\n<p> The <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> that created <code>cancellationToken</code> has already been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>continuationAction</code> argument is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is empty or contains a null value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll__1_System_Threading_Tasks_Task___0____System_Action_System_Threading_Tasks_Task___0_____System_Threading_Tasks_TaskContinuationOptions_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll_TAntecedentResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAll&lt;TAntecedentResult&gt;(Task&lt;TAntecedentResult&gt;[],Action&lt;Task&lt;TAntecedentResult&gt;[]&gt;,TaskContinuationOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]&gt; continuationAction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationAction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;[]&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate to execute when all tasks in the <code>tasks</code> array have completed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that control the behavior of the new continuation task. The NotOn* and OnlyOn* members are not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>An element in the <code>tasks</code> array has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>continuationAction</code> argument is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>continuationOptions</code> argument specifies an invalid value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is empty or contains a null value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll__1_System_Threading_Tasks_Task___0____System_Action_System_Threading_Tasks_Task___0_____System_Threading_CancellationToken_System_Threading_Tasks_TaskContinuationOptions_System_Threading_Tasks_TaskScheduler_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll_TAntecedentResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAll&lt;TAntecedentResult&gt;(Task&lt;TAntecedentResult&gt;[],Action&lt;Task&lt;TAntecedentResult&gt;[]&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]&gt; continuationAction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationAction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;[]&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate to execute when all tasks in the <code>tasks</code> array have completed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The cancellation token to assign to the new continuation task.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that control the behavior of the new continuation task. The NotOn* and OnlyOn* members are not supported.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scheduler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object that is used to schedule the new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>continuationAction</code> argument is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>scheduler</code> argument is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is empty or contains a null value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll__1_System_Threading_Tasks_Task___System_Func_System_Threading_Tasks_Task_____0__\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAll&lt;TResult&gt;(Task[],Func&lt;Task[],TResult&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TResult&gt; (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationFunction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>[],<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The function delegate to execute asynchronously when all tasks in the <code>tasks</code> array have completed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>An element in the <code>tasks</code> array has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>continuationFunction</code> argument is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is empty or contains a null value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll__1_System_Threading_Tasks_Task___System_Func_System_Threading_Tasks_Task_____0__System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAll&lt;TResult&gt;(Task[],Func&lt;Task[],TResult&gt;,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TResult&gt; (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationFunction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>[],<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The function delegate to execute asynchronously when all tasks in the <code>tasks</code> array have completed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The cancellation token to assign to the new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>An element in the <code>tasks</code> array has been disposed.  </p>\n<p> -or-  </p>\n<p> The <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> that created <code>cancellationToken</code> has already been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>continuationFunction</code> argument is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is empty or contains a null value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll__1_System_Threading_Tasks_Task___System_Func_System_Threading_Tasks_Task_____0__System_Threading_Tasks_TaskContinuationOptions_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAll&lt;TResult&gt;(Task[],Func&lt;Task[],TResult&gt;,TaskContinuationOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TResult&gt; (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationFunction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>[],<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The function delegate to execute asynchronously when all tasks in the <code>tasks</code> array have completed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that control the behavior of the new continuation task. The NotOn* and OnlyOn* members are not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>An element in the <code>tasks</code> array has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>continuationFunction</code> argument is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>continuationOptions</code> argument specifies an invalid value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is empty or contains a null value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll__1_System_Threading_Tasks_Task___System_Func_System_Threading_Tasks_Task_____0__System_Threading_CancellationToken_System_Threading_Tasks_TaskContinuationOptions_System_Threading_Tasks_TaskScheduler_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAll&lt;TResult&gt;(Task[],Func&lt;Task[],TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TResult&gt; (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationFunction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>[],<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The function delegate to execute asynchronously when all tasks in the <code>tasks</code> array have completed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The cancellation token to assign to the new continuation task.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that control the behavior of the new continuation task. The NotOn* and OnlyOn* members are not supported.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scheduler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object that is used to schedule the new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>continuationFunction</code> argument is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>scheduler</code> argument is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is empty or contains a null value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll__2_System_Threading_Tasks_Task___0____System_Func_System_Threading_Tasks_Task___0______1__\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll_TAntecedentResult_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAll&lt;TAntecedentResult,TResult&gt;(Task&lt;TAntecedentResult&gt;[],Func&lt;Task&lt;TAntecedentResult&gt;[],TResult&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult,TResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationFunction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;[],<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The function delegate to execute asynchronously when all tasks in the <code>tasks</code> array have completed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>An element in the <code>tasks</code> array has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>continuationFunction</code> argument is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is empty or contains a null value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll__2_System_Threading_Tasks_Task___0____System_Func_System_Threading_Tasks_Task___0______1__System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll_TAntecedentResult_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAll&lt;TAntecedentResult,TResult&gt;(Task&lt;TAntecedentResult&gt;[],Func&lt;Task&lt;TAntecedentResult&gt;[],TResult&gt;,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult,TResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationFunction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;[],<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The function delegate to execute asynchronously when all tasks in the <code>tasks</code> array have completed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The cancellation token to assign to the new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>An element in the <code>tasks</code> array has been disposed.  </p>\n<p> -or-  </p>\n<p> The <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> that created<code> cancellationToken</code> has already been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>continuationFunction</code> argument is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is empty or contains a null value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll__2_System_Threading_Tasks_Task___0____System_Func_System_Threading_Tasks_Task___0______1__System_Threading_Tasks_TaskContinuationOptions_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll_TAntecedentResult_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAll&lt;TAntecedentResult,TResult&gt;(Task&lt;TAntecedentResult&gt;[],Func&lt;Task&lt;TAntecedentResult&gt;[],TResult&gt;,TaskContinuationOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult,TResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationFunction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;[],<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The function delegate to execute asynchronously when all tasks in the <code>tasks</code> array have completed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that control the behavior of the new continuation task. The NotOn* and OnlyOn* members are not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>An element in the <code>tasks</code> array has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>continuationFunction</code> argument is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>continuationOptions</code> argument specifies an invalid value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is empty or contains a null value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll__2_System_Threading_Tasks_Task___0____System_Func_System_Threading_Tasks_Task___0______1__System_Threading_CancellationToken_System_Threading_Tasks_TaskContinuationOptions_System_Threading_Tasks_TaskScheduler_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAll_TAntecedentResult_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAll&lt;TAntecedentResult,TResult&gt;(Task&lt;TAntecedentResult&gt;[],Func&lt;Task&lt;TAntecedentResult&gt;[],TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation task that starts when a set of specified tasks has completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult,TResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationFunction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;[],<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The function delegate to execute asynchronously when all tasks in the <code>tasks</code> array have completed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The cancellation token to assign to the new continuation task.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that control the behavior of the new continuation task. The NotOn* and OnlyOn* members are not supported.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scheduler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object that is used to schedule the new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>continuationFunction</code> argument is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>scheduler</code> argument is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is empty or contains a null value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>continuationOptions</code> argument specifies an invalid value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>An element in the <code>tasks</code> array has been disposed.  </p>\n<p> -or-  </p>\n<p> The <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> that created <code>cancellationToken</code> has already been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny_System_Threading_Tasks_Task___System_Action_System_Threading_Tasks_Task__\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAny(Task[],Action&lt;Task&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that will be started upon the completion of any Task in the provided set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Action&lt;System.Threading.Tasks.Task&gt; continuationAction);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue when one task completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationAction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate to execute when one task in the <code>tasks</code> array completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The new continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>One of the elements in the <code>tasks</code> array has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>continuationAction</code> argument is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array contains a <code>null</code> value.  </p>\n<p> -or-  </p>\n<p> The <code>tasks</code> array is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use <code>ContinueWhenAny</code> and <code>ContinueWhenAll</code>:  </p>\n<pre><code class=\"lang-vb\" name=\"System.Threading.Tasks.Task#05\">Imports System.Threading\nImports System.Threading.Tasks\n\nModule ContinuationWhenMulti\n    &#39; Demonstrated features:\n    &#39;   Task.Factory\n    &#39;   TaskFactory.ContinueWhenAll()\n    &#39;   TaskFactory.ContinueWhenAny()\n    &#39;   Task.Wait()\n    &#39; Expected results:\n    &#39;   Three tasks are created in parallel. \n    &#39;   Each task for a different period of time prints a number and returns it.\n    &#39;   A ContinueWhenAny() task indicates the first of the three tasks to complete.\n    &#39;   A ContinueWhenAll() task sums up the results of the three tasks and prints out the total.\n    &#39; Documentation:\n    &#39;   http://msdn.microsoft.com/en-us/library/system.threading.tasks.taskfactory_members(VS.100).aspx\n    Sub Main()\n        &#39; Schedule a list of tasks that return integer\n        Dim tasks As Task(Of Integer)() = New Task(Of Integer)() {\n            Task(Of Integer).Factory.StartNew(Function()\n                                                  Thread.Sleep(500)\n                                                  Console.WriteLine(&quot;Task={0}, Thread={1}, x=5&quot;, Task.CurrentId, Thread.CurrentThread.ManagedThreadId)\n                                                  Return 5\n                                              End Function),\n            Task(Of Integer).Factory.StartNew(Function()\n                                                  Thread.Sleep(10)\n                                                  Console.WriteLine(&quot;Task={0}, Thread={1}, x=3&quot;, Task.CurrentId, Thread.CurrentThread.ManagedThreadId)\n                                                  Return 3\n                                              End Function),\n            Task(Of Integer).Factory.StartNew(Function()\n                                                  Thread.Sleep(200)\n                                                  Console.WriteLine(&quot;Task={0}, Thread={1}, x=2&quot;, Task.CurrentId, Thread.CurrentThread.ManagedThreadId)\n                                                  Return 2\n                                              End Function)}\n\n\n        &#39; Schedule a continuation to indicate the result of the first task to complete\n        Task.Factory.ContinueWhenAny(tasks, Sub(winner)\n                                                &#39; You would expect winning result = 3 on multi-core systems, because you expect\n                                                &#39; tasks[1] to finish first.\n                                                Console.WriteLine(&quot;Task={0}, Thread={1} (ContinueWhenAny): Winning result = {2}&quot;, Task.CurrentId, Thread.CurrentThread.ManagedThreadId, winner.Result)\n                                            End Sub)\n\n\n        &#39; Schedule a continuation that sums up the results of all tasks, then wait on it.\n        &#39; The list of antecendent tasks is passed as an argument by the runtime.\n        Task.Factory.ContinueWhenAll(tasks, Sub(antecendents)\n                                                Dim sum As Integer = 0\n                                                For Each task__1 As Task(Of Integer) In antecendents\n                                                    sum += task__1.Result\n                                                Next\n                                                Console.WriteLine(&quot;Task={0}, Thread={1}, (ContinueWhenAll): Total={2} (expected 10)&quot;, Task.CurrentId, Thread.CurrentThread.ManagedThreadId, sum)\n                                            End Sub).Wait()\n    End Sub\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Threading.Tasks.Task#05\">using System;\nusing System.Threading;\nusing System.Threading.Tasks;\n\nclass ContinueWhenMultiDemo\n{\n    // Demonstrated features:\n    // \t\tTask.Factory\n    //\t\tTaskFactory.ContinueWhenAll()\n    //\t\tTaskFactory.ContinueWhenAny()\n    //\t\tTask.Wait()\n    // Expected results:\n    // \t\tThree tasks are created in parallel. \n    //\t\tEach task for a different period of time prints a number and returns it.\n    //      A ContinueWhenAny() task indicates the first of the three tasks to complete.\n    //      A ContinueWhenAll() task sums up the results of the three tasks and prints out the total.\n    // Documentation:\n    //\t\thttp://msdn.microsoft.com/en-us/library/system.threading.tasks.taskfactory_members(VS.100).aspx\n    static void Main()\n    {\n        // Schedule a list of tasks that return integer\n        Task&lt;int&gt;[] tasks = new Task&lt;int&gt;[]\n\t\t\t{\n\t\t\t\tTask&lt;int&gt;.Factory.StartNew(() =&gt; \n\t\t\t\t\t{\n\t\t\t\t\t\tThread.Sleep(500);\n\t\t\t\t\t\tConsole.WriteLine(&quot;Task={0}, Thread={1}, x=5&quot;, Task.CurrentId, Thread.CurrentThread.ManagedThreadId);\n\t\t\t\t\t\treturn 5;\n\t\t\t\t\t}),\n\n\t\t\t\tTask&lt;int&gt;.Factory.StartNew(() =&gt; \n\t\t\t\t\t{\n\t\t\t\t\t\tThread.Sleep(10);\n\t\t\t\t\t\tConsole.WriteLine(&quot;Task={0}, Thread={1}, x=3&quot;, Task.CurrentId, Thread.CurrentThread.ManagedThreadId);\n\t\t\t\t\t\treturn 3;\n\t\t\t\t\t}),\n\n\t\t\t\tTask&lt;int&gt;.Factory.StartNew(() =&gt; \n\t\t\t\t\t{\n\t\t\t\t\t\tThread.Sleep(200);\n\t\t\t\t\t\tConsole.WriteLine(&quot;Task={0}, Thread={1}, x=2&quot;, Task.CurrentId, Thread.CurrentThread.ManagedThreadId);\n\t\t\t\t\t\treturn 2;\n\t\t\t\t\t})\n\t\t\t};\n\n        // Schedule a continuation to indicate the result of the first task to complete\n        Task.Factory.ContinueWhenAny(tasks, winner =&gt;\n        {\n            // You would expect winning result = 3 on multi-core systems, because you expect\n            // tasks[1] to finish first.\n            Console.WriteLine(&quot;Task={0}, Thread={1} (ContinueWhenAny): Winning result = {2}&quot;, Task.CurrentId, Thread.CurrentThread.ManagedThreadId, winner.Result);\n        });\n\n\n        // Schedule a continuation that sums up the results of all tasks, then wait on it.\n        // The list of antecendent tasks is passed as an argument by the runtime.\n        Task.Factory.ContinueWhenAll(tasks,\n            (antecendents) =&gt;\n            {\n                int sum = 0;\n                foreach (Task&lt;int&gt; task in antecendents)\n                {\n                    sum += task.Result;\n                }\n\n                Console.WriteLine(&quot;Task={0}, Thread={1}, (ContinueWhenAll): Total={2} (expected 10)&quot;, Task.CurrentId, Thread.CurrentThread.ManagedThreadId, sum);\n            })\n            .Wait();\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny_System_Threading_Tasks_Task___System_Action_System_Threading_Tasks_Task__System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAny(Task[],Action&lt;Task&gt;,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that will be started upon the completion of any Task in the provided set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Action&lt;System.Threading.Tasks.Task&gt; continuationAction, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue when one task completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationAction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate to execute when one task in the <code>tasks</code> array completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> that will be assigned to the new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The new continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>One of the elements in the <code>tasks</code> array has been disposed.  </p>\n<p> -or-  </p>\n<p> <code>cancellationToken</code> has already been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>continuationAction</code> argument is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>tasks</code> array contains a <code>null</code> value.  </p>\n<p> -or-  </p>\n<p> The <code>tasks</code> array is empty .</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny_System_Threading_Tasks_Task___System_Action_System_Threading_Tasks_Task__System_Threading_Tasks_TaskContinuationOptions_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAny(Task[],Action&lt;Task&gt;,TaskContinuationOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that will be started upon the completion of any Task in the provided set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Action&lt;System.Threading.Tasks.Task&gt; continuationAction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue when one task completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationAction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate to execute when one task in the <code>tasks</code> array completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a> value that controls the behavior of the created continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The new continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when one of the elements in the <code>tasks</code> array has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>continuationAction</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>continuationOptions</code> argument specifies an invalid TaskContinuationOptions value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array contains a null value.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>tasks</code> array is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The NotOn* and OnlyOn* <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a>, which constrain for which <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a> states a continuation will be executed, are illegal with ContinueWhenAny.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny_System_Threading_Tasks_Task___System_Action_System_Threading_Tasks_Task__System_Threading_CancellationToken_System_Threading_Tasks_TaskContinuationOptions_System_Threading_Tasks_TaskScheduler_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAny(Task[],Action&lt;Task&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that will be started upon the completion of any Task in the provided set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Action&lt;System.Threading.Tasks.Task&gt; continuationAction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue when one task completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationAction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate to execute when one task in the <code>tasks</code> array completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> that will be assigned to the new continuation task.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a> value that controls the behavior of the created continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scheduler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a> that is used to schedule the created continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The new continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>continuationAction</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>scheduler</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array contains a null value.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>tasks</code> array is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny__1_System_Threading_Tasks_Task___0____System_Action_System_Threading_Tasks_Task___0___\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny_TAntecedentResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAny&lt;TAntecedentResult&gt;(Task&lt;TAntecedentResult&gt;[],Action&lt;Task&lt;TAntecedentResult&gt;&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that will be started upon the completion of any Task in the provided set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;&gt; continuationAction);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue when one task completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationAction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate to execute when one task in the <code>tasks</code> array completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The new continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when one of the elements in the <code>tasks</code> array has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>continuationAction</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array contains a null value.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>tasks</code> array is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny__1_System_Threading_Tasks_Task___0____System_Action_System_Threading_Tasks_Task___0___System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny_TAntecedentResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAny&lt;TAntecedentResult&gt;(Task&lt;TAntecedentResult&gt;[],Action&lt;Task&lt;TAntecedentResult&gt;&gt;,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that will be started upon the completion of any Task in the provided set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;&gt; continuationAction, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue when one task completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationAction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate to execute when one task in the <code>tasks</code> array completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> that will be assigned to the new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The new continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when one of the elements in the <code>tasks</code> array has been disposed.  </p>\n<p> -or-  </p>\n<p> The provided <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> has already been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>continuationAction</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array contains a null value.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>tasks</code> array is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny__1_System_Threading_Tasks_Task___0____System_Action_System_Threading_Tasks_Task___0___System_Threading_Tasks_TaskContinuationOptions_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny_TAntecedentResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAny&lt;TAntecedentResult&gt;(Task&lt;TAntecedentResult&gt;[],Action&lt;Task&lt;TAntecedentResult&gt;&gt;,TaskContinuationOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that will be started upon the completion of any Task in the provided set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;&gt; continuationAction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue when one task completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationAction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate to execute when one task in the <code>tasks</code> array completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a> value that controls the behavior of the created continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The new continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when one of the elements in the <code>tasks</code> array has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>continuationAction</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>continuationOptions</code> argument specifies an invalid TaskContinuationOptions value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array contains a null value.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>tasks</code> array is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The NotOn* and OnlyOn* <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a>, which constrain for which <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a> states a continuation will be executed, are illegal with ContinueWhenAny.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny__1_System_Threading_Tasks_Task___0____System_Action_System_Threading_Tasks_Task___0___System_Threading_CancellationToken_System_Threading_Tasks_TaskContinuationOptions_System_Threading_Tasks_TaskScheduler_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny_TAntecedentResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAny&lt;TAntecedentResult&gt;(Task&lt;TAntecedentResult&gt;[],Action&lt;Task&lt;TAntecedentResult&gt;&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that will be started upon the completion of any Task in the provided set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;&gt; continuationAction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue when one task completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationAction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate to execute when one task in the <code>tasks</code> array completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> that will be assigned to the new continuation task.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a> value that controls the behavior of the created continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scheduler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a> that is used to schedule the created continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The new continuation <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>continuationAction</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>scheduler</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array contains a null value.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>tasks</code> array is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The NotOn* and OnlyOn* <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a>, which constrain for which <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a> states a continuation will be executed, are illegal with ContinueWhenAny.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny__1_System_Threading_Tasks_Task___System_Func_System_Threading_Tasks_Task___0__\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAny&lt;TResult&gt;(Task[],Func&lt;Task,TResult&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that will be started upon the completion of any Task in the provided set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TResult&gt; (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue when one task completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationFunction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>,<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The function delegate to execute asynchronously when one task in the <code>tasks</code> array completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The new continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when one of the elements in the <code>tasks</code> array has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>continuationFunction</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array contains a null value.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>tasks</code> array is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny__1_System_Threading_Tasks_Task___System_Func_System_Threading_Tasks_Task___0__System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAny&lt;TResult&gt;(Task[],Func&lt;Task,TResult&gt;,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that will be started upon the completion of any Task in the provided set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TResult&gt; (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue when one task completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationFunction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>,<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The function delegate to execute asynchronously when one task in the <code>tasks</code> array completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> that will be assigned to the new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The new continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when one of the elements in the <code>tasks</code> array has been disposed.  </p>\n<p> -or-  </p>\n<p> The provided <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> has already been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>continuationFunction</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array contains a null value.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>tasks</code> array is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny__1_System_Threading_Tasks_Task___System_Func_System_Threading_Tasks_Task___0__System_Threading_Tasks_TaskContinuationOptions_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAny&lt;TResult&gt;(Task[],Func&lt;Task,TResult&gt;,TaskContinuationOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that will be started upon the completion of any Task in the provided set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TResult&gt; (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue when one task completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationFunction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>,<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The function delegate to execute asynchronously when one task in the <code>tasks</code> array completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a> value that controls the behavior of the created continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The new continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when one of the elements in the <code>tasks</code> array has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>continuationFunction</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>continuationOptions</code> argument specifies an invalid TaskContinuationOptions value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array contains a null value.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>tasks</code> array is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The NotOn* and OnlyOn* <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a>, which constrain for which <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a> states a continuation will be executed, are illegal with ContinueWhenAny.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny__1_System_Threading_Tasks_Task___System_Func_System_Threading_Tasks_Task___0__System_Threading_CancellationToken_System_Threading_Tasks_TaskContinuationOptions_System_Threading_Tasks_TaskScheduler_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAny&lt;TResult&gt;(Task[],Func&lt;Task,TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that will be started upon the completion of any Task in the provided set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TResult&gt; (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue when one task completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationFunction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>,<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The function delegate to execute asynchronously when one task in the <code>tasks</code> array completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> that will be assigned to the new continuation task.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a> value that controls the behavior of the created continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scheduler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a> that is used to schedule the created continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The new continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>continuationFunction</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>scheduler</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array contains a null value.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>tasks</code> array is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The NotOn* and OnlyOn* <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a>, which constrain for which <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a> states a continuation will be executed, are illegal with ContinueWhenAny.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny__2_System_Threading_Tasks_Task___0____System_Func_System_Threading_Tasks_Task___0____1__\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny_TAntecedentResult_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAny&lt;TAntecedentResult,TResult&gt;(Task&lt;TAntecedentResult&gt;[],Func&lt;Task&lt;TAntecedentResult&gt;,TResult&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that will be started upon the completion of any Task in the provided set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult,TResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue when one task completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationFunction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;,<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The function delegate to execute asynchronously when one task in the <code>tasks</code> array completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The new continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when one of the elements in the <code>tasks</code> array has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>continuationFunction</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array contains a null value.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>tasks</code> array is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny__2_System_Threading_Tasks_Task___0____System_Func_System_Threading_Tasks_Task___0____1__System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny_TAntecedentResult_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAny&lt;TAntecedentResult,TResult&gt;(Task&lt;TAntecedentResult&gt;[],Func&lt;Task&lt;TAntecedentResult&gt;,TResult&gt;,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that will be started upon the completion of any Task in the provided set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult,TResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue when one task completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationFunction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;,<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The function delegate to execute asynchronously when one task in the <code>tasks</code> array completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> that will be assigned to the new continuation task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The new continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when one of the elements in the <code>tasks</code> array has been disposed.  </p>\n<p> -or-  </p>\n<p> The provided <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> has already been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>continuationFunction</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array contains a null value.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>tasks</code> array is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny__2_System_Threading_Tasks_Task___0____System_Func_System_Threading_Tasks_Task___0____1__System_Threading_Tasks_TaskContinuationOptions_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny_TAntecedentResult_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAny&lt;TAntecedentResult,TResult&gt;(Task&lt;TAntecedentResult&gt;[],Func&lt;Task&lt;TAntecedentResult&gt;,TResult&gt;,TaskContinuationOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that will be started upon the completion of any Task in the provided set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult,TResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue when one task completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationFunction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;,<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The function delegate to execute asynchronously when one task in the <code>tasks</code> array completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a> value that controls the behavior of the created continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The new continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when one of the elements in the <code>tasks</code> array has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>continuationFunction</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>continuationOptions</code> argument specifies an invalid TaskContinuationOptions value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array contains a null value.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>tasks</code> array is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The NotOn* and OnlyOn* <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a>, which constrain for which <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a> states a continuation will be executed, are illegal with ContinueWhenAny.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny__2_System_Threading_Tasks_Task___0____System_Func_System_Threading_Tasks_Task___0____1__System_Threading_CancellationToken_System_Threading_Tasks_TaskContinuationOptions_System_Threading_Tasks_TaskScheduler_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_ContinueWhenAny_TAntecedentResult_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContinueWhenAny&lt;TAntecedentResult,TResult&gt;(Task&lt;TAntecedentResult&gt;[],Func&lt;Task&lt;TAntecedentResult&gt;,TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that will be started upon the completion of any Task in the provided set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult,TResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tasks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of tasks from which to continue when one task completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationFunction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<span class=\"xref\">TAntecedentResult</span>&gt;,<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The function delegate to execute asynchronously when one task in the <code>tasks</code> array completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> that will be assigned to the new continuation task.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>continuationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a> value that controls the behavior of the created continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scheduler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a> that is used to schedule the created continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The new continuation <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>continuationFunction</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>scheduler</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>tasks</code> array contains a null value.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>tasks</code> array is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The NotOn* and OnlyOn* <a class=\"xref\" href=\"system.threading.tasks.taskcontinuationoptions\" data-linktype=\"relative-path\">TaskContinuationOptions</a>, which constrain for which <a class=\"xref\" href=\"system.threading.tasks.taskstatus\" data-linktype=\"relative-path\">TaskStatus</a> states a continuation will be executed, are illegal with ContinueWhenAny.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_FromAsync_System_IAsyncResult_System_Action_System_IAsyncResult__\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_FromAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromAsync(IAsyncResult,Action&lt;IAsyncResult&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that executes an end method action when a specified <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> completes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task FromAsync (IAsyncResult asyncResult, Action&lt;IAsyncResult&gt; endMethod);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The IAsyncResult whose completion should trigger the processing of the <code>endMethod</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate that processes the completed <code>asyncResult</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>asyncResult</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>endMethod</code> argument is null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"TIP\"><h5>Tip</h5><p> The <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_FromAsync_\" data-linktype=\"relative-path\">FromAsync</a> overloads that take an <code>asyncResult</code> parameter are not as efficient as the overloads that take a <code>beginMethod</code> parameter. If performance is an issue, use the overloads that provide the <code>beginMethod</code>/<code>endMethod</code> pattern.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_FromAsync_System_Func_System_AsyncCallback_System_Object_System_IAsyncResult__System_Action_System_IAsyncResult__System_Object_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_FromAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromAsync(Func&lt;AsyncCallback,Object,IAsyncResult&gt;,Action&lt;IAsyncResult&gt;,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task FromAsync (Func&lt;AsyncCallback,object,IAsyncResult&gt; beginMethod, Action&lt;IAsyncResult&gt; endMethod, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>beginMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-3\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>,<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that begins the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that ends the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing data to be used by the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The created <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>beginMethod</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>endMethod</code> argument is null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>beginMethod</code> delegate is started on the thread that <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_FromAsync_\" data-linktype=\"relative-path\">FromAsync</a> is running on.  This method throws any exceptions thrown by the <code>beginMethod</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_FromAsync_System_IAsyncResult_System_Action_System_IAsyncResult__System_Threading_Tasks_TaskCreationOptions_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_FromAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromAsync(IAsyncResult,Action&lt;IAsyncResult&gt;,TaskCreationOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that executes an end method action when a specified <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> completes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task FromAsync (IAsyncResult asyncResult, Action&lt;IAsyncResult&gt; endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The IAsyncResult whose completion should trigger the processing of the <code>endMethod</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate that processes the completed <code>asyncResult</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>creationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The TaskCreationOptions value that controls the behavior of the created <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>asyncResult</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>endMethod</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. For more information, see the Remarks for <span class=\"xref\">stem.Threading.Tasks.TaskFactory.FromAsync*</span></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"TIP\"><h5>Tip</h5><p> The <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_FromAsync_\" data-linktype=\"relative-path\">FromAsync</a> overloads that take an <code>asyncResult</code> parameter are not as efficient as the overloads that take a <code>beginMethod</code> parameter. If performance is an issue, use the overloads that provide the <code>beginMethod</code>/<code>endMethod</code> pattern.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_FromAsync_System_Func_System_AsyncCallback_System_Object_System_IAsyncResult__System_Action_System_IAsyncResult__System_Object_System_Threading_Tasks_TaskCreationOptions_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_FromAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromAsync(Func&lt;AsyncCallback,Object,IAsyncResult&gt;,Action&lt;IAsyncResult&gt;,Object,TaskCreationOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task FromAsync (Func&lt;AsyncCallback,object,IAsyncResult&gt; beginMethod, Action&lt;IAsyncResult&gt; endMethod, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>beginMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-3\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>,<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that begins the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that ends the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing data to be used by the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>creationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The TaskCreationOptions value that controls the behavior of the created <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The created <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>beginMethod</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>endMethod</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>beginMethod</code> delegate is started on the thread that <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_FromAsync_\" data-linktype=\"relative-path\">FromAsync</a> is running on. This method throws any exceptions thrown by the <code>beginMethod</code>. The <a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a> values <a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a>, <a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a> and <a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a> are all mutually exclusive. In the FromAsync methods, either <code>LongRunning</code> or <code>AttachedToParent</code> by themselves will cause an <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a> to be thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_FromAsync_System_IAsyncResult_System_Action_System_IAsyncResult__System_Threading_Tasks_TaskCreationOptions_System_Threading_Tasks_TaskScheduler_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_FromAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromAsync(IAsyncResult,Action&lt;IAsyncResult&gt;,TaskCreationOptions,TaskScheduler)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that executes an end method action when a specified <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> completes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task FromAsync (IAsyncResult asyncResult, Action&lt;IAsyncResult&gt; endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The IAsyncResult whose completion should trigger the processing of the <code>endMethod</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate that processes the completed <code>asyncResult</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>creationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The TaskCreationOptions value that controls the behavior of the created <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scheduler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a> that is used to schedule the task that executes the end method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The created <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>asyncResult</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>endMethod</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>scheduler</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. For more information, see the Remarks for <span class=\"xref\">stem.Threading.Tasks.TaskFactory.FromAsync*</span></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"TIP\"><h5>Tip</h5><p> The <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_FromAsync_\" data-linktype=\"relative-path\">FromAsync</a> overloads that take an <code>asyncResult</code> parameter are not as efficient as the overloads that take a <code>beginMethod</code> parameter. If performance is an issue, use the overloads that provide the <code>beginMethod</code>/<code>endMethod</code> pattern.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_FromAsync__1_System_Func___0_System_AsyncCallback_System_Object_System_IAsyncResult__System_Action_System_IAsyncResult____0_System_Object_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_FromAsync_TArg1__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromAsync&lt;TArg1&gt;(Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;,Action&lt;IAsyncResult&gt;,TArg1,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task FromAsync&lt;TArg1&gt; (Func&lt;TArg1,AsyncCallback,object,IAsyncResult&gt; beginMethod, Action&lt;IAsyncResult&gt; endMethod, TArg1 arg1, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>beginMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-4\" data-linktype=\"relative-path\">Func</a>&lt;<span class=\"xref\">TArg1</span>,<a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>,<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that begins the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that ends the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TArg1</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first argument passed to the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing data to be used by the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The created <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>beginMethod</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>endMethod</code> argument is null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>beginMethod</code> delegate is started on the thread that <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_FromAsync_\" data-linktype=\"relative-path\">FromAsync</a> is running on. This method throws any exceptions thrown by the <code>beginMethod</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_FromAsync__1_System_Func___0_System_AsyncCallback_System_Object_System_IAsyncResult__System_Action_System_IAsyncResult____0_System_Object_System_Threading_Tasks_TaskCreationOptions_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_FromAsync_TArg1__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromAsync&lt;TArg1&gt;(Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;,Action&lt;IAsyncResult&gt;,TArg1,Object,TaskCreationOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task FromAsync&lt;TArg1&gt; (Func&lt;TArg1,AsyncCallback,object,IAsyncResult&gt; beginMethod, Action&lt;IAsyncResult&gt; endMethod, TArg1 arg1, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>beginMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-4\" data-linktype=\"relative-path\">Func</a>&lt;<span class=\"xref\">TArg1</span>,<a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>,<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that begins the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that ends the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TArg1</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first argument passed to the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing data to be used by the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>creationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The TaskCreationOptions value that controls the behavior of the created <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The created <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>beginMethod</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>endMethod</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. For more information, see the Remarks for <span class=\"xref\">stem.Threading.Tasks.TaskFactory.FromAsync*</span></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>beginMethod</code> delegate is started on the thread that <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_FromAsync_\" data-linktype=\"relative-path\">FromAsync</a> is running on. This method throws any exceptions thrown by the <code>beginMethod</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_FromAsync__1_System_IAsyncResult_System_Func_System_IAsyncResult___0__\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_FromAsync_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromAsync&lt;TResult&gt;(IAsyncResult,Func&lt;IAsyncResult,TResult&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that executes an end method function when a specified <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> completes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TResult&gt; (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The IAsyncResult whose completion should trigger the processing of the <code>endMethod</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>,<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The function delegate that processes the completed <code>asyncResult</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>A <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>asyncResult</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>endMethod</code> argument is null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"TIP\"><h5>Tip</h5><p> The <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_FromAsync_\" data-linktype=\"relative-path\">FromAsync</a> overloads that take an <code>asyncResult</code> parameter are not as efficient as the overloads that take a <code>beginMethod</code> parameter. If performance is an issue, use the overloads that provide the <code>beginMethod</code>/<code>endMethod</code> pattern.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_FromAsync__1_System_Func_System_AsyncCallback_System_Object_System_IAsyncResult__System_Func_System_IAsyncResult___0__System_Object_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_FromAsync_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromAsync&lt;TResult&gt;(Func&lt;AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TResult&gt; (Func&lt;AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>beginMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-3\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>,<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that begins the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>,<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that ends the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing data to be used by the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The created <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>beginMethod</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>endMethod</code> argument is null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method throws any exceptions thrown by the <code>beginMethod</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_FromAsync__1_System_IAsyncResult_System_Func_System_IAsyncResult___0__System_Threading_Tasks_TaskCreationOptions_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_FromAsync_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromAsync&lt;TResult&gt;(IAsyncResult,Func&lt;IAsyncResult,TResult&gt;,TaskCreationOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that executes an end method function when a specified <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> completes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TResult&gt; (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The IAsyncResult whose completion should trigger the processing of the <code>endMethod</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>,<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The function delegate that processes the completed <code>asyncResult</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>creationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The TaskCreationOptions value that controls the behavior of the created <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>A <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>asyncResult</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>endMethod</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. For more information, see the Remarks for <span class=\"xref\">stem.Threading.Tasks.TaskFactory.FromAsync*</span></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"TIP\"><h5>Tip</h5><p> The <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_FromAsync_\" data-linktype=\"relative-path\">FromAsync</a> overloads that take an <code>asyncResult</code> parameter are not as efficient as the overloads that take a <code>beginMethod</code> parameter. If performance is an issue, use the overloads that provide the <code>beginMethod</code>/<code>endMethod</code> pattern.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_FromAsync__1_System_Func_System_AsyncCallback_System_Object_System_IAsyncResult__System_Func_System_IAsyncResult___0__System_Object_System_Threading_Tasks_TaskCreationOptions_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_FromAsync_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromAsync&lt;TResult&gt;(Func&lt;AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,Object,TaskCreationOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TResult&gt; (Func&lt;AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>beginMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-3\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>,<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that begins the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>,<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that ends the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing data to be used by the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>creationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The TaskCreationOptions value that controls the behavior of the created <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The created <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>beginMethod</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>endMethod</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. For more information, see the Remarks for <span class=\"xref\">stem.Threading.Tasks.TaskFactory.FromAsync*</span></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method throws any exceptions thrown by the <code>beginMethod</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_FromAsync__1_System_IAsyncResult_System_Func_System_IAsyncResult___0__System_Threading_Tasks_TaskCreationOptions_System_Threading_Tasks_TaskScheduler_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_FromAsync_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromAsync&lt;TResult&gt;(IAsyncResult,Func&lt;IAsyncResult,TResult&gt;,TaskCreationOptions,TaskScheduler)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that executes an end method function when a specified <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> completes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TResult&gt; (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The IAsyncResult whose completion should trigger the processing of the <code>endMethod</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>,<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The function delegate that processes the completed <code>asyncResult</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>creationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The TaskCreationOptions value that controls the behavior of the created <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scheduler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a> that is used to schedule the task that executes the end method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>A <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>asyncResult</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>endMethod</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>scheduler</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. For more information, see the Remarks for <span class=\"xref\">stem.Threading.Tasks.TaskFactory.FromAsync*</span></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"TIP\"><h5>Tip</h5><p> The <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_FromAsync_\" data-linktype=\"relative-path\">FromAsync</a> overloads that take an <code>asyncResult</code> parameter are not as efficient as the overloads that take a <code>beginMethod</code> parameter. If performance is an issue, use the overloads that provide the <code>beginMethod</code>/<code>endMethod</code> pattern.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_FromAsync__2_System_Func___0___1_System_AsyncCallback_System_Object_System_IAsyncResult__System_Action_System_IAsyncResult____0___1_System_Object_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_FromAsync_TArg1_TArg2__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromAsync&lt;TArg1,TArg2&gt;(Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;,Action&lt;IAsyncResult&gt;,TArg1,TArg2,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task FromAsync&lt;TArg1,TArg2&gt; (Func&lt;TArg1,TArg2,AsyncCallback,object,IAsyncResult&gt; beginMethod, Action&lt;IAsyncResult&gt; endMethod, TArg1 arg1, TArg2 arg2, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>beginMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-5\" data-linktype=\"relative-path\">Func</a>&lt;<span class=\"xref\">TArg1</span>,<span class=\"xref\">TArg2</span>,<a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>,<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that begins the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that ends the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TArg1</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first argument passed to the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TArg2</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second argument passed to the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing data to be used by the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The created <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>beginMethod</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>endMethod</code> argument is null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>beginMethod</code> delegate is started on the thread that <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_FromAsync_\" data-linktype=\"relative-path\">FromAsync</a> is running on. This method throws any exceptions thrown by the <code>beginMethod</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_FromAsync__2_System_Func___0___1_System_AsyncCallback_System_Object_System_IAsyncResult__System_Action_System_IAsyncResult____0___1_System_Object_System_Threading_Tasks_TaskCreationOptions_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_FromAsync_TArg1_TArg2__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromAsync&lt;TArg1,TArg2&gt;(Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;,Action&lt;IAsyncResult&gt;,TArg1,TArg2,Object,TaskCreationOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task FromAsync&lt;TArg1,TArg2&gt; (Func&lt;TArg1,TArg2,AsyncCallback,object,IAsyncResult&gt; beginMethod, Action&lt;IAsyncResult&gt; endMethod, TArg1 arg1, TArg2 arg2, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>beginMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-5\" data-linktype=\"relative-path\">Func</a>&lt;<span class=\"xref\">TArg1</span>,<span class=\"xref\">TArg2</span>,<a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>,<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that begins the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that ends the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TArg1</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first argument passed to the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TArg2</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second argument passed to the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing data to be used by the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>creationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The TaskCreationOptions value that controls the behavior of the created <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The created <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>beginMethod</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>endMethod</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. For more information, see the Remarks for <span class=\"xref\">stem.Threading.Tasks.TaskFactory.FromAsync*</span></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>beginMethod</code> delegate is started on the thread that <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_FromAsync_\" data-linktype=\"relative-path\">FromAsync</a> is running on. This method throws any exceptions thrown by the <code>beginMethod</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_FromAsync__2_System_Func___0_System_AsyncCallback_System_Object_System_IAsyncResult__System_Func_System_IAsyncResult___1____0_System_Object_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_FromAsync_TArg1_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromAsync&lt;TArg1,TResult&gt;(Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TResult&gt; (Func&lt;TArg1,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>beginMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-4\" data-linktype=\"relative-path\">Func</a>&lt;<span class=\"xref\">TArg1</span>,<a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>,<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that begins the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>,<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that ends the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TArg1</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first argument passed to the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing data to be used by the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The created <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>beginMethod</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>endMethod</code> argument is null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>beginMethod</code> delegate is started on the thread that <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_FromAsync_\" data-linktype=\"relative-path\">FromAsync</a> is running on. This method throws any exceptions thrown by the <code>beginMethod</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_FromAsync__2_System_Func___0_System_AsyncCallback_System_Object_System_IAsyncResult__System_Func_System_IAsyncResult___1____0_System_Object_System_Threading_Tasks_TaskCreationOptions_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_FromAsync_TArg1_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromAsync&lt;TArg1,TResult&gt;(Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,Object,TaskCreationOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TResult&gt; (Func&lt;TArg1,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>beginMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-4\" data-linktype=\"relative-path\">Func</a>&lt;<span class=\"xref\">TArg1</span>,<a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>,<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that begins the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>,<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that ends the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TArg1</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first argument passed to the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing data to be used by the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>creationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The TaskCreationOptions value that controls the behavior of the created <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The created <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>beginMethod</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>endMethod</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. For more information, see the Remarks for <span class=\"xref\">stem.Threading.Tasks.TaskFactory.FromAsync*</span></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>beginMethod</code> delegate is started on the thread that <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_FromAsync_\" data-linktype=\"relative-path\">FromAsync</a> is running on. This method throws any exceptions thrown by the <code>beginMethod</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_FromAsync__3_System_Func___0___1___2_System_AsyncCallback_System_Object_System_IAsyncResult__System_Action_System_IAsyncResult____0___1___2_System_Object_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_FromAsync_TArg1_TArg2_TArg3__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromAsync&lt;TArg1,TArg2,TArg3&gt;(Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;,Action&lt;IAsyncResult&gt;,TArg1,TArg2,TArg3,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task FromAsync&lt;TArg1,TArg2,TArg3&gt; (Func&lt;TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult&gt; beginMethod, Action&lt;IAsyncResult&gt; endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>beginMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-6\" data-linktype=\"relative-path\">Func</a>&lt;<span class=\"xref\">TArg1</span>,<span class=\"xref\">TArg2</span>,<span class=\"xref\">TArg3</span>,<a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>,<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that begins the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that ends the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TArg1</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first argument passed to the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TArg2</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second argument passed to the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg3</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TArg3</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The third argument passed to the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing data to be used by the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The created <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>beginMethod</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>endMethod</code> argument is null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>beginMethod</code> delegate is started on the thread that <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_FromAsync_\" data-linktype=\"relative-path\">FromAsync</a> is running on. This method throws any exceptions thrown by the <code>beginMethod</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_FromAsync__3_System_Func___0___1___2_System_AsyncCallback_System_Object_System_IAsyncResult__System_Action_System_IAsyncResult____0___1___2_System_Object_System_Threading_Tasks_TaskCreationOptions_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_FromAsync_TArg1_TArg2_TArg3__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromAsync&lt;TArg1,TArg2,TArg3&gt;(Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;,Action&lt;IAsyncResult&gt;,TArg1,TArg2,TArg3,Object,TaskCreationOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task FromAsync&lt;TArg1,TArg2,TArg3&gt; (Func&lt;TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult&gt; beginMethod, Action&lt;IAsyncResult&gt; endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>beginMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-6\" data-linktype=\"relative-path\">Func</a>&lt;<span class=\"xref\">TArg1</span>,<span class=\"xref\">TArg2</span>,<span class=\"xref\">TArg3</span>,<a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>,<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that begins the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that ends the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TArg1</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first argument passed to the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TArg2</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second argument passed to the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg3</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TArg3</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The third argument passed to the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing data to be used by the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>creationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The TaskCreationOptions value that controls the behavior of the created <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The created <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>beginMethod</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>endMethod</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. For more information, see the Remarks for <span class=\"xref\">stem.Threading.Tasks.TaskFactory.FromAsync*</span></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>beginMethod</code> delegate is started on the thread that <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_FromAsync_\" data-linktype=\"relative-path\">FromAsync</a> is running on. This method throws any exceptions thrown by the <code>beginMethod</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_FromAsync__3_System_Func___0___1_System_AsyncCallback_System_Object_System_IAsyncResult__System_Func_System_IAsyncResult___2____0___1_System_Object_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_FromAsync_TArg1_TArg2_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromAsync&lt;TArg1,TArg2,TResult&gt;(Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,TArg2,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2,TResult&gt; (Func&lt;TArg1,TArg2,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>beginMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-5\" data-linktype=\"relative-path\">Func</a>&lt;<span class=\"xref\">TArg1</span>,<span class=\"xref\">TArg2</span>,<a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>,<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that begins the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>,<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that ends the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TArg1</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first argument passed to the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TArg2</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second argument passed to the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing data to be used by the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The created <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>beginMethod</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>endMethod</code> argument is null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>beginMethod</code> delegate is started on the thread that <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_FromAsync_\" data-linktype=\"relative-path\">FromAsync</a> is running on. This method throws any exceptions thrown by the <code>beginMethod</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_FromAsync__3_System_Func___0___1_System_AsyncCallback_System_Object_System_IAsyncResult__System_Func_System_IAsyncResult___2____0___1_System_Object_System_Threading_Tasks_TaskCreationOptions_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_FromAsync_TArg1_TArg2_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromAsync&lt;TArg1,TArg2,TResult&gt;(Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,TArg2,Object,TaskCreationOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2,TResult&gt; (Func&lt;TArg1,TArg2,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>beginMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-5\" data-linktype=\"relative-path\">Func</a>&lt;<span class=\"xref\">TArg1</span>,<span class=\"xref\">TArg2</span>,<a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>,<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that begins the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>,<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that ends the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TArg1</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first argument passed to the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TArg2</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second argument passed to the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing data to be used by the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>creationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The TaskCreationOptions value that controls the behavior of the created <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The created <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>beginMethod</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>endMethod</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. For more information, see the Remarks for <span class=\"xref\">stem.Threading.Tasks.TaskFactory.FromAsync*</span></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>beginMethod</code> delegate is started on the thread that <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_FromAsync_\" data-linktype=\"relative-path\">FromAsync</a> is running on. This method throws any exceptions thrown by the <code>beginMethod</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_FromAsync__4_System_Func___0___1___2_System_AsyncCallback_System_Object_System_IAsyncResult__System_Func_System_IAsyncResult___3____0___1___2_System_Object_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_FromAsync_TArg1_TArg2_TArg3_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromAsync&lt;TArg1,TArg2,TArg3,TResult&gt;(Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,TArg2,TArg3,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2,TArg3,TResult&gt; (Func&lt;TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>beginMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-6\" data-linktype=\"relative-path\">Func</a>&lt;<span class=\"xref\">TArg1</span>,<span class=\"xref\">TArg2</span>,<span class=\"xref\">TArg3</span>,<a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>,<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that begins the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>,<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that ends the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TArg1</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first argument passed to the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TArg2</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second argument passed to the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg3</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TArg3</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The third argument passed to the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing data to be used by the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The created <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>beginMethod</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>endMethod</code> argument is null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>beginMethod</code> delegate is started on the thread that <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_FromAsync_\" data-linktype=\"relative-path\">FromAsync</a> is running on. This method throws any exceptions thrown by the <code>beginMethod</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_FromAsync__4_System_Func___0___1___2_System_AsyncCallback_System_Object_System_IAsyncResult__System_Func_System_IAsyncResult___3____0___1___2_System_Object_System_Threading_Tasks_TaskCreationOptions_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_FromAsync_TArg1_TArg2_TArg3_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromAsync&lt;TArg1,TArg2,TArg3,TResult&gt;(Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,TArg2,TArg3,Object,TaskCreationOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2,TArg3,TResult&gt; (Func&lt;TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>beginMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-6\" data-linktype=\"relative-path\">Func</a>&lt;<span class=\"xref\">TArg1</span>,<span class=\"xref\">TArg2</span>,<span class=\"xref\">TArg3</span>,<a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>,<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that begins the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>,<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that ends the asynchronous operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TArg1</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first argument passed to the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TArg2</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second argument passed to the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg3</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TArg3</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The third argument passed to the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing data to be used by the <code>beginMethod</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>creationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The TaskCreationOptions value that controls the behavior of the created <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The created <span class=\"xref\">stem.Threading.Tasks.Task`1</span> that represents the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>beginMethod</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>endMethod</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. For more information, see the Remarks for <span class=\"xref\">stem.Threading.Tasks.TaskFactory.FromAsync*</span></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>beginMethod</code> delegate is started on the thread that <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_FromAsync_\" data-linktype=\"relative-path\">FromAsync</a> is running on. This method throws any exceptions thrown by the <code>beginMethod</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_StartNew_System_Action_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_StartNew_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StartNew(Action)</div>        \r\n          </div>\r\n    \r\n            <p>Creates and starts a task.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task StartNew (Action action);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>action</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate to execute asynchronously.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The started task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>action</code> argument is null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling StartNew is functionally equivalent to creating a task by using one of its constructors, and then calling the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Start_\" data-linktype=\"relative-path\">Start</a> method to schedule the task for execution.  </p>\n<p> Starting with the .NET Framework 4.5, you can use the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Run_System_Action_\" data-linktype=\"relative-path\">System.Threading.Tasks.Task.Run(Action)</a> method as  a quick way to call StartNew with default parameters. Note, however, that there is a difference in behavior between the two methods regarding : <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Run_System_Action_\" data-linktype=\"relative-path\">System.Threading.Tasks.Task.Run(Action)</a> by default does not allow child tasks started with the <a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">System.Threading.Tasks.TaskCreationOptions</a> option to attach to the current <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> instance, whereas StartNew does. For more information and code examples, see <a href=\"http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx\" data-linktype=\"external\">Task.Run vs Task.Factory.StartNew</a> in the Parallel Programming with .NET blog.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the StartNew method to repeatedly invoke an <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> delegate that generates a random number, interprets it as a Unicode code point, converts it to a UTF16-encoded code unit, and displays information about the resulting character or characters.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Threading.Tasks.TaskFactory.StartNew#1\">using System;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\n\npublic class Example\n{\n   public static void Main()\n   {\n      Random rnd = new Random();\n      List&lt;Task&gt; tasks  = new List&lt;Task&gt;();\n      // Execute the task 10 times.\n      for (int ctr = 1; ctr &lt;= 9; ctr++) {\n         tasks.Add(Task.Factory.StartNew( () =&gt; {\n                                            int utf32 = 0;\n                                            lock(rnd) {\n                                               // Get UTF32 value.\n                                               utf32 = rnd.Next(0, 0xE01F0);\n                                            }\n                                            // Convert it to a UTF16-encoded character.\n                                            string utf16 = Char.ConvertFromUtf32(utf32);\n                                            // Display information about the character.\n                                            Console.WriteLine(&quot;0x{0:X8} --&gt; &#39;{1,2}&#39; ({2})&quot;, \n                                                              utf32, utf16, ShowHex(utf16));\n                                         }));                           \n      }\n      Task.WaitAll(tasks.ToArray()); \n   }\n\n   private static string ShowHex(string value)\n   {\n      string hexString = null;\n      // Handle only non-control characters.\n      if (! Char.IsControl(value, 0)) {\n         foreach (var ch in value)\n            hexString += String.Format(&quot;0x{0} &quot;, Convert.ToUInt16(ch));\n\n      }   \n      return hexString.Trim();\n   }\n}\n// The example displays the following output:\n//       0x00097103 --&gt; &#39;����&#39; (0x55836 0x56579)\n//       0x000A98A1 --&gt; &#39;����&#39; (0x55910 0x56481)\n//       0x00050002 --&gt; &#39;����&#39; (0x55552 0x56322)\n//       0x0000FEF1 --&gt; &#39; ﻱ&#39; (0x65265)\n//       0x0008BC0A --&gt; &#39;����&#39; (0x55791 0x56330)\n//       0x000860EA --&gt; &#39;����&#39; (0x55768 0x56554)\n//       0x0009AC5A --&gt; &#39;����&#39; (0x55851 0x56410)\n//       0x00053320 --&gt; &#39;����&#39; (0x55564 0x57120)\n//       0x000874EF --&gt; &#39;����&#39; (0x55773 0x56559)\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Threading.Tasks.TaskFactory.StartNew#1\">Imports System.Collections.Generic\nImports System.Threading.Tasks\n\nPublic Module Example\n   Public Sub Main()\n      Dim rnd As New Random()\n      Dim tasks As New List(Of Task)\n      &#39; Execute the task 10 times.\n      For ctr As Integer = 1 To 9\n         tasks.Add(Task.Factory.StartNew(Sub()\n                                            Dim utf32 As Integer\n                                            SyncLock(rnd)\n                                               &#39; Get UTF32 value.\n                                               utf32 = rnd.Next(0, &amp;hE01F0)\n                                            End SyncLock\n                                            &#39; Convert it to a UTF16-encoded character.\n                                            Dim utf16 As String = Char.ConvertFromUtf32(utf32)\n                                            &#39; Display information about the character.\n                                            Console.WriteLine(&quot;0x{0:X8} --&gt; &#39;{1,2}&#39; ({2})&quot;, \n                                                              utf32, utf16, ShowHex(utf16))\n                                         End Sub))                           \n      Next\n      Task.WaitAll(tasks.ToArray()) \n   End Sub\n   \n   Private Function ShowHex(value As String) As String\n      Dim hexString As String = Nothing\n      &#39; Handle only non-control characters.\n      If Not Char.IsControl(value, 0) Then\n         For Each ch In value\n            hexString += String.Format(&quot;0x{0} &quot;, Convert.ToUInt16(ch))\n         Next\n      End If   \n      Return hexString.Trim()\n   End Function\nEnd Module\n&#39; The example displays output similar to the following:\n&#39;       0x00097103 --&gt; &#39;����&#39; (0x55836 0x56579)\n&#39;       0x000A98A1 --&gt; &#39;����&#39; (0x55910 0x56481)\n&#39;       0x00050002 --&gt; &#39;����&#39; (0x55552 0x56322)\n&#39;       0x0000FEF1 --&gt; &#39; ﻱ&#39; (0x65265)\n&#39;       0x0008BC0A --&gt; &#39;����&#39; (0x55791 0x56330)\n&#39;       0x000860EA --&gt; &#39;����&#39; (0x55768 0x56554)\n&#39;       0x0009AC5A --&gt; &#39;����&#39; (0x55851 0x56410)\n&#39;       0x00053320 --&gt; &#39;����&#39; (0x55564 0x57120)\n&#39;       0x000874EF --&gt; &#39;����&#39; (0x55773 0x56559)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_StartNew_System_Action_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_StartNew_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StartNew(Action,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Creates and starts a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task StartNew (Action action, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>action</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate to execute asynchronously.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">stem.Threading.Tasks.TaskFactory.CancellationToken*</span> that will be assigned to the new task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The started <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The provided <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> has already been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>action</code> argument is null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling <code>StartNew</code> is functionally equivalent to creating a Task using one of its constructors and then calling <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Start_\" data-linktype=\"relative-path\">Start</a> to schedule it for execution.  </p>\n<p> Starting with the .NET Framework 4.5, you can use the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Run_System_Action_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">System.Threading.Tasks.Task.Run(Action,CancellationToken)</a> method as  a quick way to call StartNew with default parameters. Note, however, that there is a difference in behavior between the two methods regarding : <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Run_System_Action_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">System.Threading.Tasks.Task.Run(Action,CancellationToken)</a> by default does not allow child tasks started with the <a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">System.Threading.Tasks.TaskCreationOptions</a> option to attach to the current <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> instance, whereas StartNew does. For more information and code examples, see <a href=\"http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx\" data-linktype=\"external\">Task.Run vs Task.Factory.StartNew</a> in the Parallel Programming with .NET blog.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls the StartNew method to create a task that iterates the files in the C:\\Windows\\System32 directory. The lambda expression calls the &lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=fullName&gt; method to add information about each  file to a <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> object. Each detached nested task invoked by the &lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=fullName&gt; loop checks the state of the cancellation token and, if cancellation is requested, calls the <a class=\"xref\" href=\"system.threading.cancellationtoken#System_Threading_CancellationToken_ThrowIfCancellationRequested_\" data-linktype=\"relative-path\">ThrowIfCancellationRequested</a> method. The <a class=\"xref\" href=\"system.threading.cancellationtoken#System_Threading_CancellationToken_ThrowIfCancellationRequested_\" data-linktype=\"relative-path\">ThrowIfCancellationRequested</a> method throws an <a class=\"xref\" href=\"system.operationcanceledexception\" data-linktype=\"relative-path\">OperationCanceledException</a> exception that is handled in a <code>catch</code> block when the calling thread calls the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Wait_\" data-linktype=\"relative-path\">Wait</a> method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Threading.Tasks.TaskFactory.StartNew#2\">using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading;\nusing System.Threading.Tasks;\n\npublic class Example\n{\n   public static void Main()\n   {\n      var tokenSource = new CancellationTokenSource();\n      var token = tokenSource.Token;\n      var files = new List&lt;Tuple&lt;string, string, long, DateTime&gt;&gt;();\n\n      var t = Task.Factory.StartNew( () =&gt; { string dir = &quot;C:\\\\Windows\\\\System32\\\\&quot;;\n                                object obj = new Object();\n                                if (Directory.Exists(dir)) {\n                                   Parallel.ForEach(Directory.GetFiles(dir),\n                                   f =&gt; {\n                                           if (token.IsCancellationRequested)\n                                              token.ThrowIfCancellationRequested();\n                                           var fi = new FileInfo(f);\n                                           lock(obj) {\n                                              files.Add(Tuple.Create(fi.Name, fi.DirectoryName, fi.Length, fi.LastWriteTimeUtc));          \n                                           }\n                                      });\n                                 }\n                              }\n                        , token);\n      tokenSource.Cancel();\n      try {\n         t.Wait(); \n         Console.WriteLine(&quot;Retrieved information for {0} files.&quot;, files.Count);\n      }\n      catch (AggregateException e) {\n         Console.WriteLine(&quot;Exception messages:&quot;);\n         foreach (var ie in e.InnerExceptions)\n            Console.WriteLine(&quot;   {0}: {1}&quot;, ie.GetType().Name, ie.Message);\n\n         Console.WriteLine(&quot;<br>Task status: {0}&quot;, t.Status);       \n      }\n      finally {\n         tokenSource.Dispose();\n      }\n   }\n}\n// The example displays the following output:\n//       Exception messages:\n//          TaskCanceledException: A task was canceled.\n//       \n//       Task status: Canceled\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Threading.Tasks.TaskFactory.StartNew#2\">Imports System.Collections.Generic\nImports System.IO\nImports System.Threading\nImports System.Threading.Tasks\n\nModule Example\n   Public Sub Main()\n      Dim tokenSource As New CancellationTokenSource()\n      Dim token As CancellationToken = tokenSource.Token\n      Dim files As New List(Of Tuple(Of String, String, Long, Date))()\n\n      Dim t As Task = Task.Factory.StartNew( Sub()\n                                   Dim dir As String = &quot;C:\\Windows\\System32\\&quot;\n                                   Dim obj As New Object()\n                                   If Directory.Exists(dir)Then\n                                      Parallel.ForEach(Directory.GetFiles(dir), \n                                         Sub(f)\n                                            If token.IsCancellationRequested Then\n                                               token.ThrowIfCancellationRequested()\n                                            End If  \n                                            Dim fi As New FileInfo(f)\n                                            SyncLock(obj)\n                                              files.Add(Tuple.Create(fi.Name, fi.DirectoryName, fi.Length, fi.LastWriteTimeUtc))          \n                                            End SyncLock\n                                         End Sub)\n                                   End If\n                                End Sub, token)\n      tokenSource.Cancel()\n      Try\n         t.Wait() \n         Console.WriteLine(&quot;Retrieved information for {0} files.&quot;, files.Count)\n      Catch e As AggregateException\n         Console.WriteLine(&quot;Exception messages:&quot;)\n         For Each ie As Exception In e.InnerExceptions\n            Console.WriteLine(&quot;   {0}:{1}&quot;, ie.GetType().Name, ie.Message)\n         Next\n         Console.WriteLine()\n         Console.WriteLine(&quot;Task status: {0}&quot;, t.Status)       \n      Finally\n         tokenSource.Dispose()\n      End Try\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       Exception messages:\n&#39;          TaskCanceledException: A task was canceled.\n&#39;       \n&#39;       Task status: Canceled\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_StartNew_System_Action_System_Threading_Tasks_TaskCreationOptions_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_StartNew_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StartNew(Action,TaskCreationOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Creates and starts a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task StartNew (Action action, System.Threading.Tasks.TaskCreationOptions creationOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>action</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate to execute asynchronously.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>creationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A TaskCreationOptions value that controls the behavior of the created <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The started <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>action</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling StartNew is functionally equivalent to creating a Task using one of its constructors and then calling <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Start_\" data-linktype=\"relative-path\">Start</a> to schedule it for execution.  </p>\n<p> Starting with the .NET Framework 4.5, you can use the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Run_\" data-linktype=\"relative-path\">Run</a> method with an <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> object as  a quick way to call <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_StartNew_\" data-linktype=\"relative-path\">StartNew</a> with default parameters. For more information and code examples, see <a href=\"http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx\" data-linktype=\"external\">Task.Run vs Task.Factory.StartNew</a> in the Parallel Programming with .NET blog.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_StartNew_System_Action_System_Object__System_Object_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_StartNew_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StartNew(Action&lt;Object&gt;,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Creates and starts a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task StartNew (Action&lt;object&gt; action, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>action</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate to execute asynchronously.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing data to be used by the <code>action</code> delegate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The started <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>action</code> argument is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling StartNew is functionally equivalent to creating a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> using one of its constructors and then calling the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Start_\" data-linktype=\"relative-path\">Start</a> method to schedule it for execution.  </p>\n<p> Starting with the .NET Framework 4.5, you can use the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Run_\" data-linktype=\"relative-path\">Run</a> method with an <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> object as  a quick way to call <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_StartNew_\" data-linktype=\"relative-path\">StartNew</a> with default parameters. For more information and code examples, see <a href=\"http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx\" data-linktype=\"external\">Task.Run vs Task.Factory.StartNew</a> in the Parallel Programming with .NET blog.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example defines an array of 6-letter words. Each word is then passed to an <a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action&lt;T&gt;</a> delegate, which scrambles the word and displays the original word and its scrambled version.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Threading.Tasks.TaskFactory.StartNew#3\">using System;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\n\npublic class Example\n{\n   public static void Main()\n   {\n      var tasks = new List&lt;Task&gt;();\n      Random rnd = new Random();\n      Object lockObj = new Object();\n      String[] words6 = { &quot;reason&quot;, &quot;editor&quot;, &quot;rioter&quot;, &quot;rental&quot;,\n                          &quot;senior&quot;, &quot;regain&quot;, &quot;ordain&quot;, &quot;rained&quot; };\n\n      foreach (var word6 in words6)\n         tasks.Add(Task.Factory.StartNew( (word) =&gt; { Char[] chars = word.ToString().ToCharArray();\n                                                      double[] order = new double[chars.Length];\n                                                      lock (lockObj) {\n                                                         for (int ctr = 0; ctr &lt; order.Length; ctr++)\n                                                             order[ctr] = rnd.NextDouble();\n                                                      }\n                                                      Array.Sort(order, chars);\n                                                      Console.WriteLine(&quot;{0} --&gt; {1}&quot;, word,\n                                                                        new String(chars));\n                                                    }, word6));\n\n      Task.WaitAll(tasks.ToArray());\n   }\n}\n// The example displays output like the following:\n//    regain --&gt; irnaeg\n//    ordain --&gt; rioadn\n//    reason --&gt; soearn\n//    rained --&gt; rinade\n//    rioter --&gt; itrore\n//    senior --&gt; norise\n//    rental --&gt; atnerl\n//    editor --&gt; oteird\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Threading.Tasks.TaskFactory.StartNew#3\">Imports System.Collections.Generic\nImports System.Threading.Tasks\n\nModule Example\n   Public Sub Main()\n      Dim tasks As New List(Of Task)()\n      Dim rnd As New Random()\n      Dim lockObj As New Object()\n      Dim words6() As String = { &quot;reason&quot;, &quot;editor&quot;, &quot;rioter&quot;, &quot;rental&quot;,\n                                 &quot;senior&quot;, &quot;regain&quot;, &quot;ordain&quot;, &quot;rained&quot; }\n\n      For Each word6 in words6\n         tasks.Add(Task.Factory.StartNew( Sub(word)\n                                              Dim chars() As Char = word.ToString().ToCharArray()\n                                              Dim order(chars.Length - 1) As Double\n                                              SyncLock lockObj\n                                                 For ctr As Integer = 0 To order.Length - 1\n                                                    order(ctr) = rnd.NextDouble()\n                                                 Next\n                                              End SyncLock\n                                              Array.Sort(order, chars)\n                                              Console.WriteLine(&quot;{0} --&gt; {1}&quot;, word,\n                                                                new String(chars))\n                                          End Sub, word6))\n      Next\n      Task.WaitAll(tasks.ToArray())\n   End Sub\nEnd Module\n&#39; The example displays output like the following:\n&#39;       regain --&gt; irnaeg\n&#39;       ordain --&gt; rioadn\n&#39;       reason --&gt; soearn\n&#39;       rained --&gt; rinade\n&#39;       rioter --&gt; itrore\n&#39;       senior --&gt; norise\n&#39;       rental --&gt; atnerl\n&#39;       editor --&gt; oteird\n</code></pre><p> Note that the example initializes a single random number generator, which is protected by a lock. For the need of a lock, see &quot;The System.Random class and thread safety&quot; in the <a class=\"xref\" href=\"system.random\" data-linktype=\"relative-path\">Random</a> class topic.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_StartNew_System_Action_System_Object__System_Object_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_StartNew_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StartNew(Action&lt;Object&gt;,Object,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Creates and starts a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task StartNew (Action&lt;object&gt; action, object state, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>action</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate to execute asynchronously.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing data to be used by the <code>action</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">stem.Threading.Tasks.TaskFactory.CancellationToken*</span> that will be assigned to the new <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The started <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The provided <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> has already been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>action</code> argument is null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling StartNew is functionally equivalent to creating a Task using one of its constructors and then calling <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Start_\" data-linktype=\"relative-path\">Start</a> to schedule it for execution.  </p>\n<p> Starting with the .NET Framework 4.5, you can use the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Run_\" data-linktype=\"relative-path\">Run</a> method with an <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> object as  a quick way to call <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_StartNew_\" data-linktype=\"relative-path\">StartNew</a> with default parameters. For more information and code examples, see <a href=\"http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx\" data-linktype=\"external\">Task.Run vs Task.Factory.StartNew</a> in the Parallel Programming with .NET blog.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example defines an array of 6-letter words. Each word is then passed to an <a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action&lt;T&gt;</a> delegate, which scrambles the word and displays the original word and its scrambled version.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Threading.Tasks.TaskFactory.StartNew#4\">using System;\nusing System.Collections.Generic;\nusing System.Threading;\nusing System.Threading.Tasks;\n\npublic class Example\n{\n   public static void Main()\n   {\n      CancellationTokenSource cts = new CancellationTokenSource();\n      CancellationToken token = cts.Token;\n      var tasks = new List&lt;Task&gt;();\n      Random rnd = new Random();\n      Object lockObj = new Object();\n      String[] words6 = { &quot;reason&quot;, &quot;editor&quot;, &quot;rioter&quot;, &quot;rental&quot;,\n                          &quot;senior&quot;, &quot;regain&quot;, &quot;ordain&quot;, &quot;rained&quot; };\n\n      foreach (var word6 in words6)\n         tasks.Add(Task.Factory.StartNew( (word) =&gt; { Char[] chars = word.ToString().ToCharArray();\n                                                      double[] order = new double[chars.Length];\n                                                      token.ThrowIfCancellationRequested();\n                                                      bool wasZero = false;\n                                                      lock (lockObj) {\n                                                         for (int ctr = 0; ctr &lt; order.Length; ctr++) {\n                                                             order[ctr] = rnd.NextDouble();\n                                                             if (order[ctr] == 0) {\n                                                                if (! wasZero) {\n                                                                   wasZero = true;\n                                                                }\n                                                                else {\n                                                                   cts.Cancel();\n                                                                }\n                                                             }\n                                                         }\n                                                      }\n                                                      token.ThrowIfCancellationRequested();\n                                                      Array.Sort(order, chars);\n                                                      Console.WriteLine(&quot;{0} --&gt; {1}&quot;, word,\n                                                                        new String(chars));\n                                                    }, word6, token));\n\n      try {\n         Task.WaitAll(tasks.ToArray());\n      }\n      catch (AggregateException e) {\n         foreach (var ie in e.InnerExceptions) {\n            if (ie is OperationCanceledException) {\n               Console.WriteLine(&quot;The word scrambling operation has been cancelled.&quot;);\n               break;\n            }\n            else {\n               Console.WriteLine(ie.GetType().Name + &quot;: &quot; + ie.Message);\n            }\n         }\n      }\n      finally {\n         cts.Dispose();\n      }\n   }\n}\n// The example displays output like the following:\n//    regain --&gt; irnaeg\n//    ordain --&gt; rioadn\n//    reason --&gt; soearn\n//    rained --&gt; rinade\n//    rioter --&gt; itrore\n//    senior --&gt; norise\n//    rental --&gt; atnerl\n//    editor --&gt; oteird\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Threading.Tasks.TaskFactory.StartNew#4\">Imports System.Collections.Generic\nImports System.Threading\nImports System.Threading.Tasks\n\nModule Example\n   Public Sub Main()\n      Dim cts As New CancellationTokenSource()\n      Dim token As CancellationToken = cts.Token\n      Dim tasks As New List(Of Task)()\n      Dim rnd As New Random()\n      Dim lockObj As New Object()\n      Dim words6() As String = { &quot;reason&quot;, &quot;editor&quot;, &quot;rioter&quot;, &quot;rental&quot;,\n                                 &quot;senior&quot;, &quot;regain&quot;, &quot;ordain&quot;, &quot;rained&quot; }\n\n      For Each word6 in words6\n         tasks.Add(Task.Factory.StartNew( Sub(word)\n                                              Dim chars() As Char = word.ToString().ToCharArray()\n                                              Dim order(chars.Length - 1) As Double\n                                              Dim wasZero As Boolean = False\n                                              SyncLock lockObj\n                                                 For ctr As Integer = 0 To order.Length - 1\n                                                    order(ctr) = rnd.NextDouble()\n                                                    If order(ctr) = 0 Then\n                                                       If Not wasZero Then\n                                                          wasZero = True\n                                                       Else\n                                                          cts.Cancel()\n                                                       End If\n                                                    End If\n                                                 Next\n                                              End SyncLock\n                                              token.ThrowIfCancellationRequested()\n                                              Array.Sort(order, chars)\n                                              Console.WriteLine(&quot;{0} --&gt; {1}&quot;, word,\n                                                                new String(chars))\n                                          End Sub, word6))\n      Next\n      Try\n         Task.WaitAll(tasks.ToArray())\n      Catch e As AggregateException\n         For Each ie In e.InnerExceptions\n            If TypeOf ie Is OperationCanceledException\n               Console.WriteLine(&quot;The word scrambling operation has been cancelled.&quot;)\n               Exit For\n            Else\n               Console.WriteLine(ie.GetType().Name + &quot;: &quot; + ie.Message)\n            End If\n         Next\n      Finally\n         cts.Dispose()\n      End Try\n   End Sub\nEnd Module\n&#39; The example displays output like the following:\n&#39;       regain --&gt; irnaeg\n&#39;       ordain --&gt; rioadn\n&#39;       reason --&gt; soearn\n&#39;       rained --&gt; rinade\n&#39;       rioter --&gt; itrore\n&#39;       senior --&gt; norise\n&#39;       rental --&gt; atnerl\n&#39;       editor --&gt; oteird\n</code></pre><p> Note that the example initializes a single random number generator, which is protected by a lock. For the need of a lock, see &quot;The System.Random class and thread safety&quot; in the <a class=\"xref\" href=\"system.random\" data-linktype=\"relative-path\">Random</a> class topic. To handle the possibility of corruption of the random number generator, a cancellation token is passed to task. If two random numbers equal zero, the method assumes that the random number generator is corrupted and sets the cancellation token. Before sorting the <code>chars</code> array that contains the six characters in a word, the method calls the <a class=\"xref\" href=\"system.threading.cancellationtoken#System_Threading_CancellationToken_ThrowIfCancellationRequested_\" data-linktype=\"relative-path\">ThrowIfCancellationRequested</a> method to throw an <a class=\"xref\" href=\"system.operationcanceledexception\" data-linktype=\"relative-path\">OperationCanceledException</a> if the token has been canceled.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_StartNew_System_Action_System_Object__System_Object_System_Threading_Tasks_TaskCreationOptions_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_StartNew_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StartNew(Action&lt;Object&gt;,Object,TaskCreationOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Creates and starts a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task StartNew (Action&lt;object&gt; action, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>action</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate to execute asynchronously.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing data to be used by the <code>action</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>creationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A TaskCreationOptions value that controls the behavior of the created <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The started <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>action</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling StartNew is functionally equivalent to creating a Task using one of its constructors and then calling <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Start_\" data-linktype=\"relative-path\">Start</a> to schedule it for execution.  </p>\n<p> Starting with the .NET Framework 4.5, you can use the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Run_\" data-linktype=\"relative-path\">Run</a> method with an <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> object as  a quick way to call <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_StartNew_\" data-linktype=\"relative-path\">StartNew</a> with default parameters. For more information and code examples, see <a href=\"http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx\" data-linktype=\"external\">Task.Run vs Task.Factory.StartNew</a> in the Parallel Programming with .NET blog.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_StartNew_System_Action_System_Threading_CancellationToken_System_Threading_Tasks_TaskCreationOptions_System_Threading_Tasks_TaskScheduler_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_StartNew_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StartNew(Action,CancellationToken,TaskCreationOptions,TaskScheduler)</div>        \r\n          </div>\r\n    \r\n            <p>Creates and starts a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task StartNew (Action action, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>action</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate to execute asynchronously.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">stem.Threading.Tasks.TaskFactory.CancellationToken*</span> that will be assigned to the new <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>creationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A TaskCreationOptions value that controls the behavior of the created <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scheduler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a> that is used to schedule the created <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The started <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The provided <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> has already been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>action</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>scheduler</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. For more information, see the Remarks for <span class=\"xref\">stem.Threading.Tasks.TaskFactory.FromAsync*</span></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling StartNew is functionally equivalent to creating a Task using one of its constructors and then calling <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Start_\" data-linktype=\"relative-path\">Start</a> to schedule it for execution.  </p>\n<p> Starting with the .NET Framework 4.5, you can use the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Run_\" data-linktype=\"relative-path\">Run</a> method with an <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> object as  a quick way to call <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_StartNew_\" data-linktype=\"relative-path\">StartNew</a> with default parameters. For more information and code examples, see <a href=\"http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx\" data-linktype=\"external\">Task.Run vs Task.Factory.StartNew</a> in the Parallel Programming with .NET blog.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_StartNew_System_Action_System_Object__System_Object_System_Threading_CancellationToken_System_Threading_Tasks_TaskCreationOptions_System_Threading_Tasks_TaskScheduler_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_StartNew_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StartNew(Action&lt;Object&gt;,Object,CancellationToken,TaskCreationOptions,TaskScheduler)</div>        \r\n          </div>\r\n    \r\n            <p>Creates and starts a <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task StartNew (Action&lt;object&gt; action, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>action</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action delegate to execute asynchronously.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing data to be used by the <code>action</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">stem.Threading.Tasks.TaskFactory.CancellationToken*</span> that will be assigned to the new task.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>creationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A TaskCreationOptions value that controls the behavior of the created <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scheduler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a> that is used to schedule the created <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The started <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The provided <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> has already been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>action</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>scheduler</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. For more information, see the Remarks for <span class=\"xref\">stem.Threading.Tasks.TaskFactory.FromAsync*</span></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling StartNew is functionally equivalent to creating a Task using one of its constructors and then calling <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Start_\" data-linktype=\"relative-path\">Start</a> to schedule it for execution.  </p>\n<p> Starting with the .NET Framework 4.5, you can use the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Run_\" data-linktype=\"relative-path\">Run</a> method with an <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> object as  a quick way to call <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_StartNew_\" data-linktype=\"relative-path\">StartNew</a> with default parameters. For more information and code examples, see <a href=\"http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx\" data-linktype=\"external\">Task.Run vs Task.Factory.StartNew</a> in the Parallel Programming with .NET blog.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_StartNew__1_System_Func___0__\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_StartNew_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StartNew&lt;TResult&gt;(Func&lt;TResult&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Creates and starts a <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; StartNew&lt;TResult&gt; (Func&lt;TResult&gt; function);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>function</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-1\" data-linktype=\"relative-path\">Func<tresult></tresult></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A function delegate that returns the future result to be available through the <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The started <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>function</code> argument is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling StartNew(TResult) is functionally equivalent to creating a <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> using one of its constructors and then calling <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Start_\" data-linktype=\"relative-path\">Start</a> to schedule it for execution.  </p>\n<p> Starting with the .NET Framework 4.5, you can call the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Run__1_System_Func___0__\" data-linktype=\"relative-path\">System.Threading.Tasks.Task.Run&lt;TResult&gt;(Func&lt;TResult&gt;)</a> method as a quick way to call <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_StartNew_\" data-linktype=\"relative-path\">StartNew</a> with default parameters. Note, however, that there is a difference in behavior between the two methods regarding : <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Run__1_System_Func___0__\" data-linktype=\"relative-path\">System.Threading.Tasks.Task.Run&lt;TResult&gt;(Func&lt;TResult&gt;)</a> by default does not allow child tasks started with the <a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">System.Threading.Tasks.TaskCreationOptions</a> option to attach to the current <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> instance, whereas StartNew(TResult) does. For more information and code examples, see the entry <a href=\"http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx\" data-linktype=\"external\">Task.Run vs. Task.Factory.StartNew</a> in the Parallel Programming with .NET blog.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example is a simple addition app that generates two random numbers and prompts the user to enter their sum. It then indicates whether the answer is correct or, if the user&#39;s response is not a valid number, prompts the user to re-enter a valid number. The StartNew(TResult) is used to create the <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> objects that return the random numbers to add.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Threading.Tasks.Task.Run#5\">using System;\nusing System.Threading.Tasks;\n\npublic class Example\n{\n   public static void Main()\n   {\n      Random rnd = new Random();\n      Task&lt;int&gt;[] tasks = new Task&lt;int&gt;[2];\n      Object obj = new Object();\n      \n      while (true) {\n         for (int ctr = 0; ctr &lt;= 1; ctr++)\n            tasks[ctr] = Task.Factory.StartNew(() =&gt; { int i = 0;\n                                                       lock(obj) {\n                                                          i = rnd.Next(101);\n                                                       }\n                                                       return i; });\n\n         Task.WaitAll(tasks);\n         int n1 = tasks[0].Result;\n         int n2 = tasks[1].Result;\n         int result = n1 + n2;\n         bool validInput = false;\n         while (! validInput) {\n            ShowMessage(n1, n2);\n            string userInput = Console.ReadLine();\n            // Process user input.\n            if (userInput.Trim().ToUpper() == &quot;X&quot;) return;\n            int answer;\n            validInput = Int32.TryParse(userInput, out answer);\n            if (! validInput)\n               Console.WriteLine(&quot;Invalid input. Try again, but enter only numbers. &quot;);\n            else if (answer == result)\n               Console.WriteLine(&quot;Correct!&quot;);\n            else\n               Console.WriteLine(&quot;Incorrect. The correct answer is {0}.&quot;, result);\n         }\n      }\n   }\n\n   private static void ShowMessage(int n1, int n2)\n   {\n      Console.WriteLine(&quot;<br>Enter &#39;x&#39; to exit...&quot;);\n      Console.Write(&quot;{0} + {1} = &quot;, n1, n2);\n   }\n}\n// The example displays the following output:\n//       Enter &#39;x&#39; to exit...\n//       15 + 11 = 26\n//       Correct!\n//\n//       Enter &#39;x&#39; to exit...\n//       75 + 33 = adc\n//       Invalid input. Try again, but enter only numbers.\n//\n//       Enter &#39;x&#39; to exit...\n//       75 + 33 = 108\n//       Correct!\n//\n//       Enter &#39;x&#39; to exit...\n//       67 + 55 = 133\n//       Incorrect. The correct answer is 122.\n//\n//       Enter &#39;x&#39; to exit...\n//       92 + 51 = 133\n//       Incorrect. The correct answer is 143.\n//\n//       Enter &#39;x&#39; to exit...\n//       81 + 65 = x\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Threading.Tasks.Task.Run#5\">   \nImports System.Threading.Tasks\n\nModule AdditionTester\n   Public Sub Main()\n      Dim rnd As New Random()\n      Dim tasks(1) As Task(Of Integer)\n      Dim obj As New Object()\n      \n      Do While True\n         For ctr As Integer = 0 To 1\n            tasks(ctr) = Task.Factory.StartNew(Function()\n                                                  Dim i As Integer\n                                                  SyncLock(obj)\n                                                     i = rnd.Next(101)\n                                                  End SyncLock\n                                                  Return i\n                                               End Function)\n         Next\n         Task.WaitAll(tasks)\n         Dim n1 As Integer = tasks(0).Result\n         Dim n2 As Integer = tasks(1).Result\n         Dim result As Integer = n1 + n2\n         Dim validInput As Boolean = False\n         Do While Not validInput\n            ShowMessage(n1, n2)\n            Dim userInput As String = Console.ReadLine()\n            &#39; Process user input.\n            If userInput.Trim().ToUpper = &quot;X&quot; Then Exit Sub\n            Dim answer As Integer\n            validInput = Int32.TryParse(userInput, answer)\n            If Not validInput Then\n               Console.WriteLine(&quot;Invalid input. Try again, but enter only numbers. &quot;)\n            Else If answer = result Then\n               Console.WriteLine(&quot;Correct!&quot;)\n            Else\n               Console.WriteLine(&quot;Incorrect. The correct answer is {0}.&quot;, result)\n            End If\n         Loop\n      Loop\n   End Sub\n   \n   Private Sub ShowMessage(n1 As Integer, n2 As Integer)\n      Console.WriteLine()\n      Console.WriteLine(&quot;Enter &#39;x&#39; to exit...&quot;)\n      Console.Write(&quot;{0} + {1} = &quot;, n1, n2)\n   End Sub\nEnd Module\n&#39; The example displays output like the following:\n&#39;       Enter &#39;x&#39; to exit...\n&#39;       15 + 11 = 26\n&#39;       Correct!\n&#39;\n&#39;       Enter &#39;x&#39; to exit...\n&#39;       75 + 33 = adc\n&#39;       Invalid input. Try again, but enter only numbers.\n&#39;\n&#39;       Enter &#39;x&#39; to exit...\n&#39;       75 + 33 = 108\n&#39;       Correct!\n&#39;\n&#39;       Enter &#39;x&#39; to exit...\n&#39;       67 + 55 = 133\n&#39;       Incorrect. The correct answer is 122.\n&#39;\n&#39;       Enter &#39;x&#39; to exit...\n&#39;       92 + 51 = 133\n&#39;       Incorrect. The correct answer is 143.\n&#39;\n&#39;       Enter &#39;x&#39; to exit...\n&#39;       81 + 65 = x\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_StartNew__1_System_Func_System_Object___0__System_Object_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_StartNew_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StartNew&lt;TResult&gt;(Func&lt;Object,TResult&gt;,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Creates and starts a <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; StartNew&lt;TResult&gt; (Func&lt;object,TResult&gt; function, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>function</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>,<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A function delegate that returns the future result to be available through the <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing data to be used by the <code>function</code> delegate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The started <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>function</code> argument is null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling StartNew is functionally equivalent to creating a <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> using one of its constructors and then calling <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Start_\" data-linktype=\"relative-path\">Start</a> to schedule it for execution.  </p>\n<p> Starting with the .NET Framework 4.5, you can use the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Run_\" data-linktype=\"relative-path\">Run</a> method with an <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> object as a quick way to call <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_StartNew_\" data-linktype=\"relative-path\">StartNew</a> with default parameters. For more information and code examples, see the entry <a href=\"http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx\" data-linktype=\"external\">Task.Run vs. Task.Factory.StartNew</a> in the Parallel Programming with .NET blog.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_StartNew__1_System_Func___0__System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_StartNew_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StartNew&lt;TResult&gt;(Func&lt;TResult&gt;,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Creates and starts a <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; StartNew&lt;TResult&gt; (Func&lt;TResult&gt; function, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>function</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-1\" data-linktype=\"relative-path\">Func<tresult></tresult></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A function delegate that returns the future result to be available through the <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">stem.Threading.Tasks.TaskFactory.CancellationToken*</span> that will be assigned to the new <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The started <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The provided <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> has already been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>function</code> argument is null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling StartNew(TResult) is functionally equivalent to creating a <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> using one of its constructors and then calling <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Start_\" data-linktype=\"relative-path\">Start</a> to schedule it for execution.  </p>\n<p> Starting with the .NET Framework 4.5, you can use the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Run__1_System_Func___0__System_Threading_CancellationToken_\" data-linktype=\"relative-path\">System.Threading.Tasks.Task.Run&lt;TResult&gt;(Func&lt;TResult&gt;,CancellationToken)</a> method as a quick way to call StartNew(TResult) with default parameters. Note, however, that there is a difference in behavior between the two methods regarding : <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Run__1_System_Func___0__System_Threading_CancellationToken_\" data-linktype=\"relative-path\">System.Threading.Tasks.Task.Run&lt;TResult&gt;(Func&lt;TResult&gt;,CancellationToken)</a> by default does not allow child tasks started with the <a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions#System_Threading_Tasks_TaskCreationOptions_AttachedToParent\" data-linktype=\"relative-path\">System.Threading.Tasks.TaskCreationOptions.AttachedToParent</a> option to attach to the current <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> instance, whereas StartNew(TResult) does. For more information and code examples, see the entry <a href=\"http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx\" data-linktype=\"external\">Task.Run vs. Task.Factory.StartNew</a> in the Parallel Programming with .NET blog.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses two tasks to compute the Fibonacci sequence ending in F100 = F100-1 + F100-2 with seed values F1= 1, F2 = 1 and F1 = 0, F2= 1. Approximately half of the time, a cancellation token is set as the operations execute. The output from the example shows the result if the two tasks complete successfully and if the token is cancelled.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Threading.Tasks.Task.Run#9\">using System;\nusing System.Collections.Generic;\nusing System.Numerics;\nusing System.Threading;\nusing System.Threading.Tasks;\n\npublic class Example\n{\n   public static void Main()\n   {\n      var rnd = new Random();\n      var tasks = new List&lt;Task&lt;BigInteger[]&gt;&gt;();\n      var source = new CancellationTokenSource();\n      var token = source.Token;\n      for (int ctr = 0; ctr &lt;= 1; ctr++) {\n         int start = ctr;\n         tasks.Add(Task.Run( () =&gt; { BigInteger[] sequence = new BigInteger[100];\n                                     sequence[0] = start;\n                                     sequence[1] = 1;\n                                     for (int index = 2; index &lt;= sequence.GetUpperBound(0); index++) {\n                                        token.ThrowIfCancellationRequested();\n                                        sequence[index] = sequence[index - 1] + sequence[index - 2];\n                                     }\n                                     return sequence;\n                                   }, token));\n      }\n      if (rnd.Next(0, 2) == 1)\n         source.Cancel();\n      try {\n         Task.WaitAll(tasks.ToArray());\n         foreach (var t in tasks)\n            Console.WriteLine(&quot;{0}, {1}...{2:N0}&quot;, t.Result[0], t.Result[1],\n                              t.Result[99]);\n      }\n      catch (AggregateException e) {\n         foreach (var ex in e.InnerExceptions)\n            Console.WriteLine(&quot;{0}: {1}&quot;, ex.GetType().Name, ex.Message);\n      }\n   }\n}\n// The example displays either the following output:\n//    0, 1...218,922,995,834,555,169,026\n//    1, 1...354,224,848,179,261,915,075\n// or the following output:\n//    TaskCanceledException: A task was canceled.\n//    TaskCanceledException: A task was canceled.\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Threading.Tasks.Task.Run#9\">Imports System.Collections.Generic\nImports System.Numerics\nImports System.Threading\nImports System.Threading.Tasks\n\nModule Example\n   Public Sub Main()\n      Dim rnd As New Random()\n      Dim tasks As New List(Of Task(Of BigInteger()))\n      Dim source As New CancellationTokenSource\n      Dim token As CancellationToken = source.Token\n      For ctr As Integer = 0 To 1\n         Dim start As Integer = ctr\n         tasks.Add(Task.Run(Function()\n                               Dim sequence(99) As BigInteger\n                               sequence(0) = start\n                               sequence(1) = 1\n                               For index As Integer = 2 To sequence.GetUpperBound(0)\n                                  token.ThrowIfCancellationRequested()\n                                  sequence(index) = sequence(index - 1) + sequence(index - 2)\n                               Next\n                               Return sequence\n                            End Function, token))\n      Next\n      If rnd.Next(0, 2) = 1 Then source.Cancel\n      Try\n         Task.WaitAll(tasks.ToArray())\n         For Each t In tasks\n            Console.WriteLine(&quot;{0}, {1}...{2:N0}&quot;, t.Result(0), t.Result(1),\n                              t.Result(99))\n         Next\n      Catch e As AggregateException\n         For Each ex In e.InnerExceptions\n            Console.WriteLine(&quot;{0}: {1}&quot;, ex.GetType().Name, ex.Message)\n         Next\n      End Try\n   End Sub\nEnd Module\n&#39; The example displays either the following output:\n&#39;    0, 1...218,922,995,834,555,169,026\n&#39;    1, 1...354,224,848,179,261,915,075\n&#39; or the following output:\n&#39;    TaskCanceledException: A task was canceled.\n&#39;    TaskCanceledException: A task was canceled.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_StartNew__1_System_Func___0__System_Threading_Tasks_TaskCreationOptions_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_StartNew_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StartNew&lt;TResult&gt;(Func&lt;TResult&gt;,TaskCreationOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Creates and starts a <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; StartNew&lt;TResult&gt; (Func&lt;TResult&gt; function, System.Threading.Tasks.TaskCreationOptions creationOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>function</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-1\" data-linktype=\"relative-path\">Func<tresult></tresult></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A function delegate that returns the future result to be available through the <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>creationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A TaskCreationOptions value that controls the behavior of the created <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The started <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>function</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. For more information, see the Remarks for <span class=\"xref\">stem.Threading.Tasks.TaskFactory.FromAsync*</span></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling StartNew is functionally equivalent to creating a <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> using one of its constructors and then calling <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Start_\" data-linktype=\"relative-path\">Start</a> to schedule it for execution.  </p>\n<p> Starting with the .NET Framework 4.5, you can use the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Run_\" data-linktype=\"relative-path\">Run</a> method with an <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> object as a quick way to call <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_StartNew_\" data-linktype=\"relative-path\">StartNew</a> with default parameters. For more information and code examples, see the entry <a href=\"http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx\" data-linktype=\"external\">Task.Run vs. Task.Factory.StartNew</a> in the Parallel Programming with .NET blog.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_StartNew__1_System_Func_System_Object___0__System_Object_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_StartNew_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StartNew&lt;TResult&gt;(Func&lt;Object,TResult&gt;,Object,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Creates and starts a <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; StartNew&lt;TResult&gt; (Func&lt;object,TResult&gt; function, object state, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>function</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>,<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A function delegate that returns the future result to be available through the <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing data to be used by the <code>function</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">stem.Threading.Tasks.TaskFactory.CancellationToken*</span> that will be assigned to the new <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The started <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The provided <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> has already been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>function</code> argument is null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling StartNew is functionally equivalent to creating a <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> using one of its constructors and then calling <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Start_\" data-linktype=\"relative-path\">Start</a> to schedule it for execution.  </p>\n<p> Starting with the .NET Framework 4.5, you can use the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Run_\" data-linktype=\"relative-path\">Run</a> method with an <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> object as a quick way to call <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_StartNew_\" data-linktype=\"relative-path\">StartNew</a> with default parameters. For more information and code examples, see the entry <a href=\"http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx\" data-linktype=\"external\">Task.Run vs. Task.Factory.StartNew</a> in the Parallel Programming with .NET blog.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_StartNew__1_System_Func_System_Object___0__System_Object_System_Threading_Tasks_TaskCreationOptions_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_StartNew_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StartNew&lt;TResult&gt;(Func&lt;Object,TResult&gt;,Object,TaskCreationOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Creates and starts a <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; StartNew&lt;TResult&gt; (Func&lt;object,TResult&gt; function, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>function</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>,<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A function delegate that returns the future result to be available through the <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing data to be used by the <code>function</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>creationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A TaskCreationOptions value that controls the behavior of the created <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The started <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>function</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. For more information, see the Remarks for <span class=\"xref\">stem.Threading.Tasks.TaskFactory.FromAsync*</span></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling StartNew is functionally equivalent to creating a <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> using one of its constructors and then calling <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Start_\" data-linktype=\"relative-path\">Start</a> to schedule it for execution.  </p>\n<p> Starting with the .NET Framework 4.5, you can use the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Run_\" data-linktype=\"relative-path\">Run</a> method with an <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> object as a quick way to call <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_StartNew_\" data-linktype=\"relative-path\">StartNew</a> with default parameters. For more information and code examples, see the entry <a href=\"http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx\" data-linktype=\"external\">Task.Run vs. Task.Factory.StartNew</a> in the Parallel Programming with .NET blog.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_StartNew__1_System_Func___0__System_Threading_CancellationToken_System_Threading_Tasks_TaskCreationOptions_System_Threading_Tasks_TaskScheduler_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_StartNew_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StartNew&lt;TResult&gt;(Func&lt;TResult&gt;,CancellationToken,TaskCreationOptions,TaskScheduler)</div>        \r\n          </div>\r\n    \r\n            <p>Creates and starts a <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; StartNew&lt;TResult&gt; (Func&lt;TResult&gt; function, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>function</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-1\" data-linktype=\"relative-path\">Func<tresult></tresult></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A function delegate that returns the future result to be available through the <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">stem.Threading.Tasks.TaskFactory.CancellationToken*</span> that will be assigned to the new task.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>creationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A TaskCreationOptions value that controls the behavior of the created <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scheduler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a> that is used to schedule the created <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The started <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The provided <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> has already been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>function</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>scheduler</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. For more information, see the Remarks for <span class=\"xref\">stem.Threading.Tasks.TaskFactory.FromAsync*</span></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling StartNew is functionally equivalent to creating a <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> using one of its constructors and then calling <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Start_\" data-linktype=\"relative-path\">Start</a> to schedule it for execution.  </p>\n<p> Starting with the .NET Framework 4.5, you can use the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Run_\" data-linktype=\"relative-path\">Run</a> method with an <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> object as a quick way to call <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_StartNew_\" data-linktype=\"relative-path\">StartNew</a> with default parameters. For more information and code examples, see the entry <a href=\"http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx\" data-linktype=\"external\">Task.Run vs. Task.Factory.StartNew</a> in the Parallel Programming with .NET blog.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Tasks_TaskFactory_StartNew__1_System_Func_System_Object___0__System_Object_System_Threading_CancellationToken_System_Threading_Tasks_TaskCreationOptions_System_Threading_Tasks_TaskScheduler_\">\r\n    \r\n            <a id=\"System_Threading_Tasks_TaskFactory_StartNew_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StartNew&lt;TResult&gt;(Func&lt;Object,TResult&gt;,Object,CancellationToken,TaskCreationOptions,TaskScheduler)</div>        \r\n          </div>\r\n    \r\n            <p>Creates and starts a <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;TResult&gt; StartNew&lt;TResult&gt; (Func&lt;object,TResult&gt; function, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>function</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>,<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A function delegate that returns the future result to be available through the <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing data to be used by the <code>function</code> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">stem.Threading.Tasks.TaskFactory.CancellationToken*</span> that will be assigned to the new task.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>creationOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskcreationoptions\" data-linktype=\"relative-path\">TaskCreationOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A TaskCreationOptions value that controls the behavior of the created <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scheduler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a> that is used to schedule the created <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>The started <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The provided <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> has already been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>function</code> argument is null.  </p>\n<p> -or-  </p>\n<p> The exception that is thrown when the <code>scheduler</code> argument is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. The exception that is thrown when the <code>creationOptions</code> argument specifies an invalid TaskCreationOptions value. For more information, see the Remarks for <span class=\"xref\">stem.Threading.Tasks.TaskFactory.FromAsync*</span></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling StartNew is functionally equivalent to creating a <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> using one of its constructors and then calling <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Start_\" data-linktype=\"relative-path\">Start</a> to schedule it for execution.  </p>\n<p> Starting with the .NET Framework 4.5, you can use the <a class=\"xref\" href=\"system.threading.tasks.task#System_Threading_Tasks_Task_Run_\" data-linktype=\"relative-path\">Run</a> method with an <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> object as a quick way to call <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_StartNew_\" data-linktype=\"relative-path\">StartNew</a> with default parameters. For more information and code examples, see the entry <a href=\"http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx\" data-linktype=\"external\">Task.Run vs. Task.Factory.StartNew</a> in the Parallel Programming with .NET blog.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Threading.Tasks.TaskFactory.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Threading.Tasks.TaskFactory.yml\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskFactory\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskFactory..ctor\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskFactory.CancellationToken\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskFactory.ContinuationOptions\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskFactory.ContinueWhenAll\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskFactory.ContinueWhenAll&lt;TAntecedentResult&gt;\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskFactory.ContinueWhenAll&lt;TResult&gt;\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskFactory.ContinueWhenAll&lt;TAntecedentResult,TResult&gt;\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskFactory.ContinueWhenAny\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskFactory.ContinueWhenAny&lt;TAntecedentResult&gt;\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskFactory.ContinueWhenAny&lt;TResult&gt;\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskFactory.ContinueWhenAny&lt;TAntecedentResult,TResult&gt;\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskFactory.CreationOptions\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskFactory.FromAsync\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskFactory.FromAsync&lt;TArg1&gt;\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskFactory.FromAsync&lt;TResult&gt;\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskFactory.FromAsync&lt;TArg1,TArg2&gt;\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskFactory.FromAsync&lt;TArg1,TResult&gt;\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskFactory.FromAsync&lt;TArg1,TArg2,TArg3&gt;\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskFactory.FromAsync&lt;TArg1,TArg2,TResult&gt;\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskFactory.FromAsync&lt;TArg1,TArg2,TArg3,TResult&gt;\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskFactory.Scheduler\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskFactory.StartNew\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskFactory.StartNew&lt;TResult&gt;\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"f5bbe624-7d90-8cbd-00a1-342827a97aff\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides support for creating and scheduling  objects.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Threading.Tasks/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Threading.Tasks.TaskFactory\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Threading.Tasks.TaskFactory.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Threading.Tasks.TaskFactory.yml","open_to_public_contributors":true,"api_name":["System.Threading.Tasks.TaskFactory","System.Threading.Tasks.TaskFactory..ctor","System.Threading.Tasks.TaskFactory.CancellationToken","System.Threading.Tasks.TaskFactory.ContinuationOptions","System.Threading.Tasks.TaskFactory.ContinueWhenAll","System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult>","System.Threading.Tasks.TaskFactory.ContinueWhenAll<TResult>","System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult,TResult>","System.Threading.Tasks.TaskFactory.ContinueWhenAny","System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult>","System.Threading.Tasks.TaskFactory.ContinueWhenAny<TResult>","System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult,TResult>","System.Threading.Tasks.TaskFactory.CreationOptions","System.Threading.Tasks.TaskFactory.FromAsync","System.Threading.Tasks.TaskFactory.FromAsync<TArg1>","System.Threading.Tasks.TaskFactory.FromAsync<TResult>","System.Threading.Tasks.TaskFactory.FromAsync<TArg1,TArg2>","System.Threading.Tasks.TaskFactory.FromAsync<TArg1,TResult>","System.Threading.Tasks.TaskFactory.FromAsync<TArg1,TArg2,TArg3>","System.Threading.Tasks.TaskFactory.FromAsync<TArg1,TArg2,TResult>","System.Threading.Tasks.TaskFactory.FromAsync<TArg1,TArg2,TArg3,TResult>","System.Threading.Tasks.TaskFactory.Scheduler","System.Threading.Tasks.TaskFactory.StartNew","System.Threading.Tasks.TaskFactory.StartNew<TResult>"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Threading.Tasks.TaskFactory","System::Threading::Tasks::TaskFactory","System.Threading.Tasks.TaskFactory.#ctor","System::Threading::Tasks::TaskFactory::#ctor","System.Threading.Tasks.TaskFactory.CancellationToken","System::Threading::Tasks::TaskFactory::CancellationToken","System.Threading.Tasks.TaskFactory.ContinuationOptions","System::Threading::Tasks::TaskFactory::ContinuationOptions","System.Threading.Tasks.TaskFactory.ContinueWhenAll","System::Threading::Tasks::TaskFactory::ContinueWhenAll","System.Threading.Tasks.TaskFactory.ContinueWhenAll``1","System::Threading::Tasks::TaskFactory::ContinueWhenAll``1","System.Threading.Tasks.TaskFactory.ContinueWhenAll``2","System::Threading::Tasks::TaskFactory::ContinueWhenAll``2","System.Threading.Tasks.TaskFactory.ContinueWhenAny","System::Threading::Tasks::TaskFactory::ContinueWhenAny","System.Threading.Tasks.TaskFactory.ContinueWhenAny``1","System::Threading::Tasks::TaskFactory::ContinueWhenAny``1","System.Threading.Tasks.TaskFactory.ContinueWhenAny``2","System::Threading::Tasks::TaskFactory::ContinueWhenAny``2","System.Threading.Tasks.TaskFactory.CreationOptions","System::Threading::Tasks::TaskFactory::CreationOptions","System.Threading.Tasks.TaskFactory.FromAsync","System::Threading::Tasks::TaskFactory::FromAsync","System.Threading.Tasks.TaskFactory.FromAsync``1","System::Threading::Tasks::TaskFactory::FromAsync``1","System.Threading.Tasks.TaskFactory.FromAsync``2","System::Threading::Tasks::TaskFactory::FromAsync``2","System.Threading.Tasks.TaskFactory.FromAsync``3","System::Threading::Tasks::TaskFactory::FromAsync``3","System.Threading.Tasks.TaskFactory.FromAsync``4","System::Threading::Tasks::TaskFactory::FromAsync``4","System.Threading.Tasks.TaskFactory.Scheduler","System::Threading::Tasks::TaskFactory::Scheduler","System.Threading.Tasks.TaskFactory.StartNew","System::Threading::Tasks::TaskFactory::StartNew","System.Threading.Tasks.TaskFactory.StartNew``1","System::Threading::Tasks::TaskFactory::StartNew``1"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"f5bbe624-7d90-8cbd-00a1-342827a97aff","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Threading.Tasks/TaskFactory.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"TaskFactory class | Microsoft Docs","_op_ogTitle":"TaskFactory class","description":"Provides support for creating and scheduling  objects.\n","toc_asset_id":"_splitted/System.Threading.Tasks/toc.json","toc_rel":"_splitted/System.Threading.Tasks/toc.json","source_url":"","ms.assetid":"System.Threading.Tasks.TaskFactory","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.threading.tasks.taskfactory","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.threading.tasks.taskfactory","fileRelativePath":"System.Threading.Tasks.TaskFactory.html"},"themesRelativePathToOutputRoot":"_themes/"}