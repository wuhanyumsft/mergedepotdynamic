{"content":"    \r\n    <h1 id=\"System_Security_RightsManagement_SecureEnvironment\">\r\n      <span class=\"lang-csharp\">SecureEnvironment</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a secure client session for user activation, license binding, and other rights management operations.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]\npublic class SecureEnvironment : IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SecureEnvironment</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>As with other <a class=\"xref\" href=\"system.security.rightsmanagement\" data-linktype=\"relative-path\">System.Security.RightsManagement</a> types, SecureEnvironment is only usable in full trust applications.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_RightsManagement_SecureEnvironment_ApplicationManifest\" data-linktype=\"self-bookmark\">ApplicationManifest</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the ApplicationManifest specified when the <a class=\"xref\" href=\"system.security.rightsmanagement.secureenvironment\" data-linktype=\"relative-path\">SecureEnvironment</a> was created.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_RightsManagement_SecureEnvironment_User\" data-linktype=\"self-bookmark\">User</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the user or user-group specified when the <a class=\"xref\" href=\"system.security.rightsmanagement.secureenvironment\" data-linktype=\"relative-path\">SecureEnvironment</a> was created.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_RightsManagement_SecureEnvironment_Create_System_String_System_Security_RightsManagement_ContentUser_\" data-linktype=\"self-bookmark\">Create(String,ContentUser)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a secure client session for a specified user with a given rights manifest.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_RightsManagement_SecureEnvironment_Create_System_String_System_Security_RightsManagement_AuthenticationType_System_Security_RightsManagement_UserActivationMode_\" data-linktype=\"self-bookmark\">Create(String,AuthenticationType,UserActivationMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a secure client session given an application rights manifest, <a class=\"xref\" href=\"system.security.rightsmanagement.authenticationtype\" data-linktype=\"relative-path\">AuthenticationType</a>, and <a class=\"xref\" href=\"system.security.rightsmanagement.useractivationmode\" data-linktype=\"relative-path\">UserActivationMode</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_RightsManagement_SecureEnvironment_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by the <a class=\"xref\" href=\"system.security.rightsmanagement.secureenvironment\" data-linktype=\"relative-path\">SecureEnvironment</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_RightsManagement_SecureEnvironment_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.security.rightsmanagement.secureenvironment\" data-linktype=\"relative-path\">SecureEnvironment</a> and optionally releases the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_RightsManagement_SecureEnvironment_GetActivatedUsers\" data-linktype=\"self-bookmark\">GetActivatedUsers()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a list of the activated users.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_RightsManagement_SecureEnvironment_IsUserActivated_System_Security_RightsManagement_ContentUser_\" data-linktype=\"self-bookmark\">IsUserActivated(ContentUser)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether a given user has been activated for accessing rights managed content.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_RightsManagement_SecureEnvironment_RemoveActivatedUser_System_Security_RightsManagement_ContentUser_\" data-linktype=\"self-bookmark\">RemoveActivatedUser(ContentUser)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the license activation for a specified user.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_RightsManagement_SecureEnvironment_ApplicationManifest\">\r\n    \r\n            <a id=\"System_Security_RightsManagement_SecureEnvironment_ApplicationManifest_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ApplicationManifest</div>        \r\n          </div>\r\n    \r\n            <p>Gets the ApplicationManifest specified when the <a class=\"xref\" href=\"system.security.rightsmanagement.secureenvironment\" data-linktype=\"relative-path\">SecureEnvironment</a> was created.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ApplicationManifest { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The application manifest specified to the <span class=\"xref\">stem.Security.RightsManagement.SecureEnvironment.Create*</span> method when the <a class=\"xref\" href=\"system.security.rightsmanagement.secureenvironment\" data-linktype=\"relative-path\">SecureEnvironment</a> is created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows use of the ApplicationManifest method.  </p>\n<pre><code class=\"lang-vb\" name=\"RightsManagedPackagePublish#RmPkgPubSecEnv\">Dim applicationManifest As String = &quot;&lt;manifest&gt;&lt;/manifest&gt;&quot;\nIf File.Exists(&quot;rpc.xml&quot;) Then\n\tDim manifestReader As StreamReader = File.OpenText(&quot;rpc.xml&quot;)\n\tapplicationManifest = manifestReader.ReadToEnd()\nEnd If\n\nIf _secureEnv Is Nothing Then\n\tIf SecureEnvironment.IsUserActivated(New ContentUser(_currentUserId, AuthenticationType.Windows)) Then\n\t\t_secureEnv = SecureEnvironment.Create(applicationManifest, New ContentUser(_currentUserId, AuthenticationType.Windows))\n\tElse\n\t\t_secureEnv = SecureEnvironment.Create(applicationManifest, AuthenticationType.Windows, UserActivationMode.Permanent)\n\tEnd If\nEnd If\n</code></pre><pre><code class=\"lang-cs\" name=\"RightsManagedPackagePublish#RmPkgPubSecEnv\">string applicationManifest = &quot;&lt;manifest&gt;&lt;/manifest&gt;&quot;;\nif (File.Exists(&quot;rpc.xml&quot;))\n{\n    StreamReader manifestReader = File.OpenText(&quot;rpc.xml&quot;);\n    applicationManifest = manifestReader.ReadToEnd();\n}\n\nif (_secureEnv == null)\n{\n    if (SecureEnvironment.IsUserActivated(new ContentUser(\n                _currentUserId, AuthenticationType.Windows)))\n    {\n        _secureEnv = SecureEnvironment.Create(\n            applicationManifest, new ContentUser(\n                _currentUserId, AuthenticationType.Windows));\n    }\n    else\n    {\n        _secureEnv = SecureEnvironment.Create(\n            applicationManifest,\n            AuthenticationType.Windows,\n            UserActivationMode.Permanent);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_RightsManagement_SecureEnvironment_User\">\r\n    \r\n            <a id=\"System_Security_RightsManagement_SecureEnvironment_User_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">User</div>        \r\n          </div>\r\n    \r\n            <p>Gets the user or user-group specified when the <a class=\"xref\" href=\"system.security.rightsmanagement.secureenvironment\" data-linktype=\"relative-path\">SecureEnvironment</a> was created.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.RightsManagement.ContentUser User { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.rightsmanagement.contentuser\" data-linktype=\"relative-path\">ContentUser</a></div>\r\n                  </div>\r\n                  <p>The user or user-group specified to the <span class=\"xref\">stem.Security.RightsManagement.SecureEnvironment.Create*</span> method when the <a class=\"xref\" href=\"system.security.rightsmanagement.secureenvironment\" data-linktype=\"relative-path\">SecureEnvironment</a> was created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows use of the User property  </p>\n<pre><code class=\"lang-vb\" name=\"RightsManagedPackageViewer#RmPkgViewSecEnv\">ShowStatus(&quot;   Initiating SecureEnvironment as user: &quot; &amp; vbLf &amp; &quot;       &quot; &amp; currentUserId &amp; &quot; [&quot; &amp; _authentication &amp; &quot;]&quot;)\nIf SecureEnvironment.IsUserActivated(New ContentUser(currentUserId, _authentication)) Then\n\tShowStatus(&quot;   User is already activated.&quot;)\n\t_secureEnv = SecureEnvironment.Create(applicationManifest, New ContentUser(currentUserId, _authentication))\nElse &#39; if user is not yet activated.\n\tShowStatus(&quot;   User is NOT activated,&quot; &amp; vbLf &amp; &quot;       activating now....&quot;)\n\t&#39; If using the current Windows user, no credentials are\n\t&#39; required and we can use UserActivationMode.Permanent.\n\t_secureEnv = SecureEnvironment.Create(applicationManifest, _authentication, UserActivationMode.Permanent)\n\n\t&#39; If not using the current Windows user, use\n\t&#39; UserActivationMode.Temporary to display the Windows\n\t&#39; credentials pop-up window.\n\t&#39;&#39;&#39;_secureEnv = SecureEnvironment.Create(applicationManifest,\n\t&#39;&#39;&#39;     a_authentication, UserActivationMode.Temporary)\nEnd If\nShowStatus(&quot;   Created SecureEnvironment for user:&quot; &amp; vbLf &amp; &quot;       &quot; &amp; _secureEnv.User.Name &amp; &quot; [&quot; &amp; _secureEnv.User.AuthenticationType &amp; &quot;]&quot;)\n</code></pre><pre><code class=\"lang-cs\" name=\"RightsManagedPackageViewer#RmPkgViewSecEnv\">ShowStatus(&quot;   Initiating SecureEnvironment as user: <br>       &quot; +\n    currentUserId + &quot; [&quot; + _authentication + &quot;]&quot;);\nif (SecureEnvironment.IsUserActivated(\n    new ContentUser(currentUserId, _authentication)))\n{\n    ShowStatus(&quot;   User is already activated.&quot;);\n    _secureEnv = SecureEnvironment.Create(applicationManifest,\n                    new ContentUser(currentUserId, _authentication));\n}\nelse // if user is not yet activated.\n{\n    ShowStatus(&quot;   User is NOT activated,<br>       activating now....&quot;);\n    // If using the current Windows user, no credentials are\n    // required and we can use UserActivationMode.Permanent.\n    _secureEnv = SecureEnvironment.Create(applicationManifest,\n                    _authentication, UserActivationMode.Permanent);\n\n    // If not using the current Windows user, use\n    // UserActivationMode.Temporary to display the Windows\n    // credentials pop-up window.\n    ///_secureEnv = SecureEnvironment.Create(applicationManifest,\n    ///     a_authentication, UserActivationMode.Temporary);\n}\nShowStatus(&quot;   Created SecureEnvironment for user:<br>       &quot; +\n    _secureEnv.User.Name +\n    &quot; [&quot; + _secureEnv.User.AuthenticationType + &quot;]&quot;);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_RightsManagement_SecureEnvironment_Create_System_String_System_Security_RightsManagement_ContentUser_\">\r\n    \r\n            <a id=\"System_Security_RightsManagement_SecureEnvironment_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create(String,ContentUser)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a secure client session for a specified user with a given rights manifest.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.RightsManagement.SecureEnvironment Create (string applicationManifest, System.Security.RightsManagement.ContentUser user);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>applicationManifest</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The application rights manifest.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>user</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.rightsmanagement.contentuser\" data-linktype=\"relative-path\">ContentUser</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The user or user-group for granting access to rights managed content.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.rightsmanagement.secureenvironment\" data-linktype=\"relative-path\">SecureEnvironment</a></div>\r\n                  </div>\r\n                  <p>A secure client session for activation, license binding, and other rights management operations.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This Create method is intended for use with users that are already activated, such as provided in the list returned from <a class=\"xref\" href=\"system.security.rightsmanagement.secureenvironment#System_Security_RightsManagement_SecureEnvironment_GetActivatedUsers_\" data-linktype=\"relative-path\">GetActivatedUsers</a>.  Use the alternate <a class=\"xref\" href=\"system.security.rightsmanagement.secureenvironment#System_Security_RightsManagement_SecureEnvironment_Create_\" data-linktype=\"relative-path\">Create</a> method for users that are not yet activated.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use this method to create a secure environment.  </p>\n<pre><code class=\"lang-vb\" name=\"RightsManagedPackagePublish#RmPkgPubSecEnv\">Dim applicationManifest As String = &quot;&lt;manifest&gt;&lt;/manifest&gt;&quot;\nIf File.Exists(&quot;rpc.xml&quot;) Then\n\tDim manifestReader As StreamReader = File.OpenText(&quot;rpc.xml&quot;)\n\tapplicationManifest = manifestReader.ReadToEnd()\nEnd If\n\nIf _secureEnv Is Nothing Then\n\tIf SecureEnvironment.IsUserActivated(New ContentUser(_currentUserId, AuthenticationType.Windows)) Then\n\t\t_secureEnv = SecureEnvironment.Create(applicationManifest, New ContentUser(_currentUserId, AuthenticationType.Windows))\n\tElse\n\t\t_secureEnv = SecureEnvironment.Create(applicationManifest, AuthenticationType.Windows, UserActivationMode.Permanent)\n\tEnd If\nEnd If\n</code></pre><pre><code class=\"lang-cs\" name=\"RightsManagedPackagePublish#RmPkgPubSecEnv\">string applicationManifest = &quot;&lt;manifest&gt;&lt;/manifest&gt;&quot;;\nif (File.Exists(&quot;rpc.xml&quot;))\n{\n    StreamReader manifestReader = File.OpenText(&quot;rpc.xml&quot;);\n    applicationManifest = manifestReader.ReadToEnd();\n}\n\nif (_secureEnv == null)\n{\n    if (SecureEnvironment.IsUserActivated(new ContentUser(\n                _currentUserId, AuthenticationType.Windows)))\n    {\n        _secureEnv = SecureEnvironment.Create(\n            applicationManifest, new ContentUser(\n                _currentUserId, AuthenticationType.Windows));\n    }\n    else\n    {\n        _secureEnv = SecureEnvironment.Create(\n            applicationManifest,\n            AuthenticationType.Windows,\n            UserActivationMode.Permanent);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_RightsManagement_SecureEnvironment_Create_System_String_System_Security_RightsManagement_AuthenticationType_System_Security_RightsManagement_UserActivationMode_\">\r\n    \r\n            <a id=\"System_Security_RightsManagement_SecureEnvironment_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create(String,AuthenticationType,UserActivationMode)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a secure client session given an application rights manifest, <a class=\"xref\" href=\"system.security.rightsmanagement.authenticationtype\" data-linktype=\"relative-path\">AuthenticationType</a>, and <a class=\"xref\" href=\"system.security.rightsmanagement.useractivationmode\" data-linktype=\"relative-path\">UserActivationMode</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.RightsManagement.SecureEnvironment Create (string applicationManifest, System.Security.RightsManagement.AuthenticationType authentication, System.Security.RightsManagement.UserActivationMode userActivationMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>applicationManifest</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The application rights manifest.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>authentication</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.rightsmanagement.authenticationtype\" data-linktype=\"relative-path\">AuthenticationType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method of authentication.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userActivationMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.rightsmanagement.useractivationmode\" data-linktype=\"relative-path\">UserActivationMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the user rights account certificate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.rightsmanagement.secureenvironment\" data-linktype=\"relative-path\">SecureEnvironment</a></div>\r\n                  </div>\r\n                  <p>A secure client session for activation, license binding, and other rights management operations.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This Create method is intended for new users that are not yet activated.  </p>\n<p> Activating a new user includes a roundtrip server transaction to obtain the User Certificate and Client License Certificate.  </p>\n<p> The alternate <a class=\"xref\" href=\"system.security.rightsmanagement.secureenvironment#System_Security_RightsManagement_SecureEnvironment_Create_\" data-linktype=\"relative-path\">Create</a> method can be used if a user is already activated, such as provided in the list returned from <a class=\"xref\" href=\"system.security.rightsmanagement.secureenvironment#System_Security_RightsManagement_SecureEnvironment_GetActivatedUsers_\" data-linktype=\"relative-path\">GetActivatedUsers</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use this method to create a secure environment.  </p>\n<pre><code class=\"lang-vb\" name=\"RightsManagedPackagePublish#RmPkgPubSecEnv\">Dim applicationManifest As String = &quot;&lt;manifest&gt;&lt;/manifest&gt;&quot;\nIf File.Exists(&quot;rpc.xml&quot;) Then\n\tDim manifestReader As StreamReader = File.OpenText(&quot;rpc.xml&quot;)\n\tapplicationManifest = manifestReader.ReadToEnd()\nEnd If\n\nIf _secureEnv Is Nothing Then\n\tIf SecureEnvironment.IsUserActivated(New ContentUser(_currentUserId, AuthenticationType.Windows)) Then\n\t\t_secureEnv = SecureEnvironment.Create(applicationManifest, New ContentUser(_currentUserId, AuthenticationType.Windows))\n\tElse\n\t\t_secureEnv = SecureEnvironment.Create(applicationManifest, AuthenticationType.Windows, UserActivationMode.Permanent)\n\tEnd If\nEnd If\n</code></pre><pre><code class=\"lang-cs\" name=\"RightsManagedPackagePublish#RmPkgPubSecEnv\">string applicationManifest = &quot;&lt;manifest&gt;&lt;/manifest&gt;&quot;;\nif (File.Exists(&quot;rpc.xml&quot;))\n{\n    StreamReader manifestReader = File.OpenText(&quot;rpc.xml&quot;);\n    applicationManifest = manifestReader.ReadToEnd();\n}\n\nif (_secureEnv == null)\n{\n    if (SecureEnvironment.IsUserActivated(new ContentUser(\n                _currentUserId, AuthenticationType.Windows)))\n    {\n        _secureEnv = SecureEnvironment.Create(\n            applicationManifest, new ContentUser(\n                _currentUserId, AuthenticationType.Windows));\n    }\n    else\n    {\n        _secureEnv = SecureEnvironment.Create(\n            applicationManifest,\n            AuthenticationType.Windows,\n            UserActivationMode.Permanent);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_RightsManagement_SecureEnvironment_Dispose\">\r\n    \r\n            <a id=\"System_Security_RightsManagement_SecureEnvironment_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by the <a class=\"xref\" href=\"system.security.rightsmanagement.secureenvironment\" data-linktype=\"relative-path\">SecureEnvironment</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The application should call Dispose when finished with the <a class=\"xref\" href=\"system.security.rightsmanagement.secureenvironment\" data-linktype=\"relative-path\">SecureEnvironment</a>.  After Dispose is called, resources allocated to the <a class=\"xref\" href=\"system.security.rightsmanagement.secureenvironment\" data-linktype=\"relative-path\">SecureEnvironment</a> are reclaimed by the garbage collector.  For more information, see <a href=\"../Topic/Cleaning%20Up%20Unmanaged%20Resources.md\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a> and <a href=\"../Topic/Implementing%20a%20Dispose%20Method.md\" data-linktype=\"relative-path\">Implementing a Dispose Method</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Always call Dispose before the last reference to the <a class=\"xref\" href=\"system.security.rightsmanagement.secureenvironment\" data-linktype=\"relative-path\">SecureEnvironment</a> is released.  If Dispose is not called, resources allocated to the <a class=\"xref\" href=\"system.security.rightsmanagement.secureenvironment\" data-linktype=\"relative-path\">SecureEnvironment</a> will not be freed until the garbage collector calls the instance&#39;s <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_RightsManagement_SecureEnvironment_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Security_RightsManagement_SecureEnvironment_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.security.rightsmanagement.secureenvironment\" data-linktype=\"relative-path\">SecureEnvironment</a> and optionally releases the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by the public <a class=\"xref\" href=\"system.security.rightsmanagement.secureenvironment#System_Security_RightsManagement_SecureEnvironment_Dispose\" data-linktype=\"relative-path\">Dispose()</a> method and the <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method. <a class=\"xref\" href=\"system.security.rightsmanagement.secureenvironment#System_Security_RightsManagement_SecureEnvironment_Dispose\" data-linktype=\"relative-path\">Dispose()</a> invokes the protected Dispose method with the <code>disposing</code> parameter set to <code>true</code>. <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes <code>Dispose</code> with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is <code>true</code>, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.security.rightsmanagement.secureenvironment\" data-linktype=\"relative-path\">SecureEnvironment</a> references. This method invokes the <code>Dispose()</code> method of each referenced object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_RightsManagement_SecureEnvironment_GetActivatedUsers\">\r\n    \r\n            <a id=\"System_Security_RightsManagement_SecureEnvironment_GetActivatedUsers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetActivatedUsers()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a list of the activated users.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentUser&gt; GetActivatedUsers ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"system.security.rightsmanagement.contentuser\" data-linktype=\"relative-path\">ContentUser</a>&gt;</div>\r\n                  </div>\r\n                  <p>A list of the currently activated users.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_RightsManagement_SecureEnvironment_IsUserActivated_System_Security_RightsManagement_ContentUser_\">\r\n    \r\n            <a id=\"System_Security_RightsManagement_SecureEnvironment_IsUserActivated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsUserActivated(ContentUser)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether a given user has been activated for accessing rights managed content.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsUserActivated (System.Security.RightsManagement.ContentUser user);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>user</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.rightsmanagement.contentuser\" data-linktype=\"relative-path\">ContentUser</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The user or user-group for granting access to rights managed content.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the given <code>user</code> has been activated for accessing rights managed content; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows use of the IsUserActivated method to determine if given user has been authorized to access rights managed content.  </p>\n<pre><code class=\"lang-vb\" name=\"RightsManagedPackagePublish#RmPkgPubSecEnv\">Dim applicationManifest As String = &quot;&lt;manifest&gt;&lt;/manifest&gt;&quot;\nIf File.Exists(&quot;rpc.xml&quot;) Then\n\tDim manifestReader As StreamReader = File.OpenText(&quot;rpc.xml&quot;)\n\tapplicationManifest = manifestReader.ReadToEnd()\nEnd If\n\nIf _secureEnv Is Nothing Then\n\tIf SecureEnvironment.IsUserActivated(New ContentUser(_currentUserId, AuthenticationType.Windows)) Then\n\t\t_secureEnv = SecureEnvironment.Create(applicationManifest, New ContentUser(_currentUserId, AuthenticationType.Windows))\n\tElse\n\t\t_secureEnv = SecureEnvironment.Create(applicationManifest, AuthenticationType.Windows, UserActivationMode.Permanent)\n\tEnd If\nEnd If\n</code></pre><pre><code class=\"lang-cs\" name=\"RightsManagedPackagePublish#RmPkgPubSecEnv\">string applicationManifest = &quot;&lt;manifest&gt;&lt;/manifest&gt;&quot;;\nif (File.Exists(&quot;rpc.xml&quot;))\n{\n    StreamReader manifestReader = File.OpenText(&quot;rpc.xml&quot;);\n    applicationManifest = manifestReader.ReadToEnd();\n}\n\nif (_secureEnv == null)\n{\n    if (SecureEnvironment.IsUserActivated(new ContentUser(\n                _currentUserId, AuthenticationType.Windows)))\n    {\n        _secureEnv = SecureEnvironment.Create(\n            applicationManifest, new ContentUser(\n                _currentUserId, AuthenticationType.Windows));\n    }\n    else\n    {\n        _secureEnv = SecureEnvironment.Create(\n            applicationManifest,\n            AuthenticationType.Windows,\n            UserActivationMode.Permanent);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_RightsManagement_SecureEnvironment_RemoveActivatedUser_System_Security_RightsManagement_ContentUser_\">\r\n    \r\n            <a id=\"System_Security_RightsManagement_SecureEnvironment_RemoveActivatedUser_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveActivatedUser(ContentUser)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the license activation for a specified user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RemoveActivatedUser (System.Security.RightsManagement.ContentUser user);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>user</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.rightsmanagement.contentuser\" data-linktype=\"relative-path\">ContentUser</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The user to remove the license activation for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>user</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The given <code>user</code> is not authenticated with either Windows authentication or Passport authentication.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The user authentication must be performed either with Windows authentication or Passport authentication.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.RightsManagement.SecureEnvironment.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.RightsManagement.SecureEnvironment.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.RightsManagement.SecureEnvironment\">\r\n<meta name=\"APIName\" content=\"System.Security.RightsManagement.SecureEnvironment.ApplicationManifest\">\r\n<meta name=\"APIName\" content=\"System.Security.RightsManagement.SecureEnvironment.Create\">\r\n<meta name=\"APIName\" content=\"System.Security.RightsManagement.SecureEnvironment.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers\">\r\n<meta name=\"APIName\" content=\"System.Security.RightsManagement.SecureEnvironment.IsUserActivated\">\r\n<meta name=\"APIName\" content=\"System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser\">\r\n<meta name=\"APIName\" content=\"System.Security.RightsManagement.SecureEnvironment.User\">\r\n<meta name=\"APILocation\" content=\"WindowsBase.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"682d3dd8-2efa-015e-8e08-4b593fb79341\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a secure client session for user activation, license binding, and other rights management operations.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.RightsManagement/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.RightsManagement.SecureEnvironment\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.RightsManagement.SecureEnvironment.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.RightsManagement.SecureEnvironment.yml","open_to_public_contributors":true,"api_name":["System.Security.RightsManagement.SecureEnvironment","System.Security.RightsManagement.SecureEnvironment.ApplicationManifest","System.Security.RightsManagement.SecureEnvironment.Create","System.Security.RightsManagement.SecureEnvironment.Dispose","System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers","System.Security.RightsManagement.SecureEnvironment.IsUserActivated","System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser","System.Security.RightsManagement.SecureEnvironment.User"],"api_location":["WindowsBase.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.RightsManagement.SecureEnvironment","System::Security::RightsManagement::SecureEnvironment","System.Security.RightsManagement.SecureEnvironment.ApplicationManifest","System::Security::RightsManagement::SecureEnvironment::ApplicationManifest","System.Security.RightsManagement.SecureEnvironment.Create","System::Security::RightsManagement::SecureEnvironment::Create","System.Security.RightsManagement.SecureEnvironment.Dispose","System::Security::RightsManagement::SecureEnvironment::Dispose","System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers","System::Security::RightsManagement::SecureEnvironment::GetActivatedUsers","System.Security.RightsManagement.SecureEnvironment.IsUserActivated","System::Security::RightsManagement::SecureEnvironment::IsUserActivated","System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser","System::Security::RightsManagement::SecureEnvironment::RemoveActivatedUser","System.Security.RightsManagement.SecureEnvironment.User","System::Security::RightsManagement::SecureEnvironment::User"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"682d3dd8-2efa-015e-8e08-4b593fb79341","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.RightsManagement/SecureEnvironment.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SecureEnvironment class | Microsoft Docs","_op_ogTitle":"SecureEnvironment class","description":"Represents a secure client session for user activation, license binding, and other rights management operations.\n","toc_asset_id":"_splitted/System.Security.RightsManagement/toc.json","toc_rel":"_splitted/System.Security.RightsManagement/toc.json","source_url":"","ms.assetid":"System.Security.RightsManagement.SecureEnvironment","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.rightsmanagement.secureenvironment","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.rightsmanagement.secureenvironment","fileRelativePath":"System.Security.RightsManagement.SecureEnvironment.html"},"themesRelativePathToOutputRoot":"_themes/"}