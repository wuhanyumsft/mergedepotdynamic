{"content":"    \r\n    <h1 id=\"System_Security_Policy_Evidence\">\r\n      <span class=\"lang-csharp\">Evidence</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines the set of information that constitutes input to security policy decisions. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic sealed class Evidence : System.Collections.ICollection</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Evidence</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Common forms of evidence include signatures and location of origin of code, but can potentially be anything. Objects of any type that are recognized by security policy represent evidence.  </p>\n<p> Security policy is composed of code groups; a particular assembly (the basic unit of code for granting security permissions) is a member of a code group if it satisfies the code group&#39;s membership condition. Evidence is the set of inputs to policy that membership conditions use to determine to which code groups an assembly belongs.  </p>\n<p> The Evidence class is a collection (see <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a>) that holds a set of objects that represent evidence. This class holds two sets that correspond to the source of the evidence: host evidence and assembly evidence.  </p>\n<p> Policy can get evidence from two different sources when evaluating permissions for code.  </p>\n<ul>\n<li><p><code>Host evidence</code> is provided by the host, and can only be provided by hosts that have been granted the <a class=\"xref\" href=\"system.security.permissions.securitypermissionflag\" data-linktype=\"relative-path\">SecurityPermissionFlag</a> permission. Typically, this is evidence of the origin of the code and digital signatures on the assembly. Evidence about origin typically includes <a class=\"xref\" href=\"system.security.policy.url\" data-linktype=\"relative-path\">Url</a>, <a class=\"xref\" href=\"system.security.policy.site\" data-linktype=\"relative-path\">Site</a>, and <a class=\"xref\" href=\"system.security.policy.zone\" data-linktype=\"relative-path\">Zone</a> evidence. Signatures refer to software publisher (AuthentiCode X.509v3 signature) and strong name identities. Both kinds of digital signature-based identity are built into the assembly, but must be validated and passed to policy by the host; when loaded, the security system verifies the signature. The system then creates the appropriate evidence and passes it to policy only if the corresponding signature is valid.  </p>\n</li>\n<li><p><code>Assembly evidence</code> is part of the assembly itself. Developers or administrators can attach custom evidence to the assembly to extend the set of evidence for policy. Assembly evidence can only be added at the time of assembly generation, which occurs before the assembly is signed. The default policy of the security system ignores assembly-provided evidence, but policy can be extended to accept it.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_Evidence__ctor\" data-linktype=\"self-bookmark\">Evidence()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new empty instance of the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_Evidence__ctor_System_Security_Policy_Evidence_\" data-linktype=\"self-bookmark\">Evidence(Evidence)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class from a shallow copy of an existing one.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_Evidence__ctor_System_Object___System_Object___\" data-linktype=\"self-bookmark\">Evidence(Object[],Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class from multiple sets of host and assembly evidence.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_Evidence__ctor_System_Security_Policy_EvidenceBase___System_Security_Policy_EvidenceBase___\" data-linktype=\"self-bookmark\">Evidence(EvidenceBase[],EvidenceBase[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class from multiple sets of host and assembly evidence.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_Evidence_Count\" data-linktype=\"self-bookmark\">Count</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of evidence objects in the evidence set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_Evidence_IsReadOnly\" data-linktype=\"self-bookmark\">IsReadOnly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the evidence set is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_Evidence_IsSynchronized\" data-linktype=\"self-bookmark\">IsSynchronized</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the evidence set is thread-safe.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_Evidence_Locked\" data-linktype=\"self-bookmark\">Locked</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the evidence is locked.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_Evidence_SyncRoot\" data-linktype=\"self-bookmark\">SyncRoot</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the synchronization root.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_Evidence_AddAssembly_System_Object_\" data-linktype=\"self-bookmark\">AddAssembly(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified assembly evidence to the evidence set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_Evidence_AddAssemblyEvidence__1___0_\" data-linktype=\"self-bookmark\">AddAssemblyEvidence&lt;T&gt;(T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an evidence object of the specified type to the assembly-supplied evidence list.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_Evidence_AddHost_System_Object_\" data-linktype=\"self-bookmark\">AddHost(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified evidence supplied by the host to the evidence set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_Evidence_AddHostEvidence__1___0_\" data-linktype=\"self-bookmark\">AddHostEvidence&lt;T&gt;(T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds host evidence of the specified type to the host evidence collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_Evidence_Clear\" data-linktype=\"self-bookmark\">Clear()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the host and assembly evidence from the evidence set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_Evidence_Clone\" data-linktype=\"self-bookmark\">Clone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a duplicate copy of this evidence object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_Evidence_CopyTo_System_Array_System_Int32_\" data-linktype=\"self-bookmark\">CopyTo(Array,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies evidence objects to an <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_Evidence_GetAssemblyEnumerator\" data-linktype=\"self-bookmark\">GetAssemblyEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Enumerates evidence provided by the assembly.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_Evidence_GetAssemblyEvidence__1\" data-linktype=\"self-bookmark\">GetAssemblyEvidence&lt;T&gt;()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets assembly evidence of the specified type from the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_Evidence_GetEnumerator\" data-linktype=\"self-bookmark\">GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Enumerates all evidence in the set, both that provided by the host and that provided by the assembly.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_Evidence_GetHostEnumerator\" data-linktype=\"self-bookmark\">GetHostEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Enumerates evidence supplied by the host.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_Evidence_GetHostEvidence__1\" data-linktype=\"self-bookmark\">GetHostEvidence&lt;T&gt;()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets host evidence of the specified type from the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_Evidence_Merge_System_Security_Policy_Evidence_\" data-linktype=\"self-bookmark\">Merge(Evidence)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Merges the specified evidence set into the current evidence set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_Evidence_RemoveType_System_Type_\" data-linktype=\"self-bookmark\">RemoveType(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the evidence for a given type from the host and assembly enumerations.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_Evidence__ctor\">\r\n    \r\n            <a id=\"System_Security_Policy_Evidence__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Evidence()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new empty instance of the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Evidence ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the Evidence constructor. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Security.Policy.Evidence#15\">            Dim ev1 As New Evidence\n            Console.WriteLine(&quot;Created empty evidence with the default constructor.&quot;)\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Policy.Evidence#15\">         Evidence^ ev1 = gcnew Evidence;\n         Console::WriteLine( &quot;Created empty evidence with the default constructor.&quot; );\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Policy.Evidence#15\">            Evidence ev1 = new Evidence();\n            Console.WriteLine(&quot;Created empty evidence with the default constructor.&quot;);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_Evidence__ctor_System_Security_Policy_Evidence_\">\r\n    \r\n            <a id=\"System_Security_Policy_Evidence__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Evidence(Evidence)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class from a shallow copy of an existing one.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Evidence (System.Security.Policy.Evidence evidence);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>evidence</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> instance from which to create the new instance. This instance is not deep-copied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>evidence</code> parameter is not a valid instance of <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the Evidence constructor. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Security.Policy.Evidence#12\">        Console.WriteLine(ControlChars.Lf &amp; &quot;Make a copy of the current evidence.&quot;)\n        Dim evidenceCopy As New Evidence(myEvidence)\n        Console.WriteLine((&quot;Count of new evidence items = &quot; &amp; evidenceCopy.Count.ToString()))\n        Console.WriteLine((&quot;Does the copy equal the current evidence? &quot; &amp; myEvidence.Equals(evidenceCopy)))\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Policy.Evidence#12\">      Console::WriteLine( &quot;<br>Make a copy of the current evidence.&quot; );\n      Evidence^ evidenceCopy = gcnew Evidence( myEvidence );\n      Console::WriteLine( &quot;Count of new evidence items = {0}&quot;, evidenceCopy-&gt;Count );\n      Console::WriteLine( &quot;Does the copy equal the current evidence? {0}&quot;, myEvidence-&gt;Equals( evidenceCopy ) );\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Policy.Evidence#12\">        Console.WriteLine(&quot;<br>Make a copy of the current evidence.&quot;);\n        Evidence evidenceCopy = new Evidence(myEvidence);\n        Console.WriteLine(&quot;Count of new evidence items = &quot; + evidenceCopy.Count);\n        Console.WriteLine(&quot;Does the copy equal the current evidence? &quot; + myEvidence.Equals(evidenceCopy));\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_Evidence__ctor_System_Object___System_Object___\">\r\n    \r\n            <a id=\"System_Security_Policy_Evidence__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Evidence(Object[],Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class from multiple sets of host and assembly evidence.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Evidence (object[] hostEvidence, object[] assemblyEvidence);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hostEvidence</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The host evidence from which to create the new instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyEvidence</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The assembly evidence from which to create the new instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the Evidence constructor. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Security.Policy.Evidence#3\">            Dim oa1() As [Object]\n            Dim site As New Site(&quot;www.wideworldimporters.com&quot;)\n            Dim oa2 As [Object]() = {url, site}\n            Dim ev3a As New Evidence(oa1, oa2)\n            enum1 = ev3a.GetHostEnumerator()\n            Dim enum2 As IEnumerator = ev3a.GetAssemblyEnumerator()\n            enum2.MoveNext()\n            Dim obj1 As [Object] = enum2.Current\n            enum2.MoveNext()\n            Console.WriteLine((&quot;URL = &quot; &amp; obj1.ToString() &amp; &quot;  Site = &quot; &amp; enum2.Current.ToString()))\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Policy.Evidence#3\">         array&lt;Object^&gt;^oa1 = {};\n         Site^ site = gcnew Site( &quot;www.wideworldimporters.com&quot; );\n         array&lt;Object^&gt;^oa2 = {url,site};\n         Evidence^ ev3a = gcnew Evidence( oa1,oa2 );\n         enum1 = ev3a-&gt;GetHostEnumerator();\n         IEnumerator^ enum2 = ev3a-&gt;GetAssemblyEnumerator();\n         enum2-&gt;MoveNext();\n         Object^ obj1 = enum2-&gt;Current;\n         enum2-&gt;MoveNext();\n         Console::WriteLine( &quot;URL = {0}  Site = {1}&quot;, obj1, enum2-&gt;Current );\n         \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Policy.Evidence#3\">            Object [] oa1 = {};\n            Site site = new Site(&quot;www.wideworldimporters.com&quot;);\n            Object [] oa2 = { url, site };\n            Evidence ev3a = new Evidence(oa1, oa2);\n            enum1 = ev3a.GetHostEnumerator();\n            IEnumerator enum2 = ev3a.GetAssemblyEnumerator();\n            enum2.MoveNext();\n            Object obj1 = enum2.Current;\n            enum2.MoveNext();\n            Console.WriteLine(&quot;URL = &quot; + obj1.ToString() + &quot;  Site = &quot; + enum2.Current.ToString());\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_Evidence__ctor_System_Security_Policy_EvidenceBase___System_Security_Policy_EvidenceBase___\">\r\n    \r\n            <a id=\"System_Security_Policy_Evidence__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Evidence(EvidenceBase[],EvidenceBase[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class from multiple sets of host and assembly evidence.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Evidence (System.Security.Policy.EvidenceBase[] hostEvidence, System.Security.Policy.EvidenceBase[] assemblyEvidence);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hostEvidence</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidencebase\" data-linktype=\"relative-path\">EvidenceBase</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The host evidence from which to create the new instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyEvidence</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidencebase\" data-linktype=\"relative-path\">EvidenceBase</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The assembly evidence from which to create the new instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor creates a new instance of the class by using evidence objects that inherit from the <a class=\"xref\" href=\"system.security.policy.evidencebase\" data-linktype=\"relative-path\">EvidenceBase</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_Evidence_Count\">\r\n    \r\n            <a id=\"System_Security_Policy_Evidence_Count_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Count</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of evidence objects in the evidence set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Count { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of evidence objects in the evidence set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the Count property. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Security.Policy.Evidence#12\">        Console.WriteLine(ControlChars.Lf &amp; &quot;Make a copy of the current evidence.&quot;)\n        Dim evidenceCopy As New Evidence(myEvidence)\n        Console.WriteLine((&quot;Count of new evidence items = &quot; &amp; evidenceCopy.Count.ToString()))\n        Console.WriteLine((&quot;Does the copy equal the current evidence? &quot; &amp; myEvidence.Equals(evidenceCopy)))\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Policy.Evidence#12\">      Console::WriteLine( &quot;<br>Make a copy of the current evidence.&quot; );\n      Evidence^ evidenceCopy = gcnew Evidence( myEvidence );\n      Console::WriteLine( &quot;Count of new evidence items = {0}&quot;, evidenceCopy-&gt;Count );\n      Console::WriteLine( &quot;Does the copy equal the current evidence? {0}&quot;, myEvidence-&gt;Equals( evidenceCopy ) );\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Policy.Evidence#12\">        Console.WriteLine(&quot;<br>Make a copy of the current evidence.&quot;);\n        Evidence evidenceCopy = new Evidence(myEvidence);\n        Console.WriteLine(&quot;Count of new evidence items = &quot; + evidenceCopy.Count);\n        Console.WriteLine(&quot;Does the copy equal the current evidence? &quot; + myEvidence.Equals(evidenceCopy));\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_Evidence_IsReadOnly\">\r\n    \r\n            <a id=\"System_Security_Policy_Evidence_IsReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsReadOnly</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the evidence set is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsReadOnly { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Always <code>false</code>, because read-only evidence sets are not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Application code does not normally use this property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_Evidence_IsSynchronized\">\r\n    \r\n            <a id=\"System_Security_Policy_Evidence_IsSynchronized_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsSynchronized</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the evidence set is thread-safe.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsSynchronized { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Always <code>false</code> because thread-safe evidence sets are not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Application code does not normally use this property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_Evidence_Locked\">\r\n    \r\n            <a id=\"System_Security_Policy_Evidence_Locked_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Locked</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the evidence is locked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Locked { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the evidence is locked; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the Locked property. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Security.Policy.Evidence#7\">        Console.WriteLine((ControlChars.Lf &amp; &quot;The default value for the Locked property = &quot; &amp; myEvidence.Locked.ToString()))\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Policy.Evidence#7\">      Console::WriteLine( &quot;<br>The default value for the Locked property = {0}&quot;, myEvidence-&gt;Locked );\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Policy.Evidence#7\">        Console.WriteLine(&quot;<br>The default value for the Locked property = &quot; + myEvidence.Locked.ToString());\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_Evidence_SyncRoot\">\r\n    \r\n            <a id=\"System_Security_Policy_Evidence_SyncRoot_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SyncRoot</div>        \r\n          </div>\r\n    \r\n            <p>Gets the synchronization root.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object SyncRoot { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>Always <code>this</code> (<code>Me</code> in Visual Basic), because synchronization of evidence sets is not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is not normally used by application code.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_Evidence_AddAssembly_System_Object_\">\r\n    \r\n            <a id=\"System_Security_Policy_Evidence_AddAssembly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddAssembly(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified assembly evidence to the evidence set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddAssembly (object id);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>id</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Any evidence object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>id</code> is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>id</code> is not serializable.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method for evidence derived from the assembly.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method does not perform a check to prevent adding duplicate types of evidence. Many assembly evidence objects can exist at the same time.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the AddAssembly method. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Security.Policy.Evidence#4\">        Console.WriteLine(&quot;Adding assembly evidence.&quot;)\n        myEvidence.AddAssembly(&quot;SN01&quot;)\n        myEvidence.AddAssembly(New Version(&quot;0.0.0.0&quot;))\n        myEvidence.AddAssembly(mSN)\n        Console.WriteLine((&quot;Count of evidence items = &quot; &amp; myEvidence.Count.ToString()))\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Policy.Evidence#4\">      Console::WriteLine( &quot;Adding assembly evidence.&quot; );\n      myEvidence-&gt;AddAssembly( &quot;SN01&quot; );\n      myEvidence-&gt;AddAssembly( gcnew Version( &quot;0.0.0.0&quot; ) );\n      myEvidence-&gt;AddAssembly( mSN );\n      Console::WriteLine( &quot;Count of evidence items = {0}&quot;, myEvidence-&gt;Count );\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Policy.Evidence#4\">        Console.WriteLine(&quot;Adding assembly evidence.&quot;);\n        myEvidence.AddAssembly(&quot;SN01&quot;);\n        myEvidence.AddAssembly(new Version(&quot;0.0.0.0&quot;));\n        myEvidence.AddAssembly(mSN);\n        Console.WriteLine(&quot;Count of evidence items = &quot; + myEvidence.Count.ToString());\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_Evidence_AddAssemblyEvidence__1___0_\">\r\n    \r\n            <a id=\"System_Security_Policy_Evidence_AddAssemblyEvidence_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddAssemblyEvidence&lt;T&gt;(T)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an evidence object of the specified type to the assembly-supplied evidence list.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddAssemblyEvidence&lt;T&gt; (T evidence) where T : System.Security.Policy.EvidenceBase;</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>evidence</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The assembly evidence to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>evidence</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Evidence of type <code>T</code> is already in the list.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>evidence</code> is not serializable.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Legacy evidence, that is, evidence that is not derived from <a class=\"xref\" href=\"system.security.policy.evidencebase\" data-linktype=\"relative-path\">EvidenceBase</a>, cannot be added. Only evidence that is derived from <a class=\"xref\" href=\"system.security.policy.evidencebase\" data-linktype=\"relative-path\">EvidenceBase</a> can be added. This method does not allow you to add evidence if evidence of that type already exists in the assembly list.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_Evidence_AddHost_System_Object_\">\r\n    \r\n            <a id=\"System_Security_Policy_Evidence_AddHost_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddHost(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified evidence supplied by the host to the evidence set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddHost (object id);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>id</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Any evidence object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>id</code> is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>id</code> is not serializable.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method for evidence supplied by the host.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method does not perform a check to prevent adding duplicate types of evidence. Many host evidence objects can exist at the same time.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the AddHost method. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Security.Policy.Evidence#2\">            Dim url As New Url(&quot;http://www.treyresearch.com&quot;)\n            Console.WriteLine((&quot;Adding host evidence &quot; &amp; url.ToString()))\n            ev2a.AddHost(url)\n            Dim ev2b As New Evidence(ev2a)\n            Console.WriteLine(&quot;Copy evidence into new evidence&quot;)\n            Dim enum1 As IEnumerator = ev2b.GetHostEnumerator()\n            enum1.MoveNext()\n            Console.WriteLine(enum1.Current.ToString())\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Policy.Evidence#2\">         Url^ url = gcnew Url( &quot;http://www.treyresearch.com&quot; );\n         Console::WriteLine( &quot;Adding host evidence {0}&quot;, url );\n         ev2a-&gt;AddHost( url );\n         Evidence^ ev2b = gcnew Evidence( ev2a );\n         Console::WriteLine( &quot;Copy evidence into new evidence&quot; );\n         IEnumerator^ enum1 = ev2b-&gt;GetHostEnumerator();\n         enum1-&gt;MoveNext();\n         Console::WriteLine( enum1-&gt;Current );\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Policy.Evidence#2\">            Url url = new Url(&quot;http://www.treyresearch.com&quot;);\n            Console.WriteLine(&quot;Adding host evidence &quot; + url.ToString());\n            ev2a.AddHost(url);\n            Evidence ev2b = new Evidence(ev2a);\n            Console.WriteLine(&quot;Copy evidence into new evidence&quot;);\n            IEnumerator enum1 = ev2b.GetHostEnumerator();\n            enum1.MoveNext();\n            Console.WriteLine(enum1.Current.ToString());\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_Evidence_AddHostEvidence__1___0_\">\r\n    \r\n            <a id=\"System_Security_Policy_Evidence_AddHostEvidence_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddHostEvidence&lt;T&gt;(T)</div>        \r\n          </div>\r\n    \r\n            <p>Adds host evidence of the specified type to the host evidence collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddHostEvidence&lt;T&gt; (T evidence) where T : System.Security.Policy.EvidenceBase;</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>evidence</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The host evidence to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>evidence</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Evidence of type <code>T</code> is already in the list.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Legacy evidence, that is, evidence that is not derived from <a class=\"xref\" href=\"system.security.policy.evidencebase\" data-linktype=\"relative-path\">EvidenceBase</a>, cannot be added. Only evidence that is derived from <a class=\"xref\" href=\"system.security.policy.evidencebase\" data-linktype=\"relative-path\">EvidenceBase</a> can be added. This method does not allow you to add evidence if evidence of that type already exists in the assembly list.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_Evidence_Clear\">\r\n    \r\n            <a id=\"System_Security_Policy_Evidence_Clear_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clear()</div>        \r\n          </div>\r\n    \r\n            <p>Removes the host and assembly evidence from the evidence set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Clear ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Clear removes the evidence in the host and assembly enumerations, setting both to <code>null</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the Clear method. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Security.Policy.Evidence#13\">        Console.WriteLine(ControlChars.Lf &amp; &quot;Clear the current evidence.&quot;)\n        myEvidence.Clear()\n        Console.WriteLine((&quot;Count is now &quot; &amp; myEvidence.Count.ToString()))\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Policy.Evidence#13\">      Console::WriteLine( &quot;<br>Clear the current evidence.&quot; );\n      myEvidence-&gt;Clear();\n      Console::WriteLine( &quot;Count is now {0}&quot;, myEvidence-&gt;Count );\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Policy.Evidence#13\">        Console.WriteLine(&quot;<br>Clear the current evidence.&quot;);\n        myEvidence.Clear();\n        Console.WriteLine(&quot;Count is now &quot; + myEvidence.Count.ToString());\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_Evidence_Clone\">\r\n    \r\n            <a id=\"System_Security_Policy_Evidence_Clone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clone()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a duplicate copy of this evidence object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Policy.Evidence Clone ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></div>\r\n                  </div>\r\n                  <p>A duplicate copy of this evidence object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The duplicate copy is a complete copy that includes all the evidence objects in the collection.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_Evidence_CopyTo_System_Array_System_Int32_\">\r\n    \r\n            <a id=\"System_Security_Policy_Evidence_CopyTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyTo(Array,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Copies evidence objects to an <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CopyTo (Array array, int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The target array to which to copy evidence objects.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based position in the array to which to begin copying evidence objects.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>array</code> is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index </code>is outside the range of the target array<code>.</code></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the CopyTo method. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Security.Policy.Evidence#6\">        Console.WriteLine(ControlChars.Lf &amp; &quot;Copy the evidence to an array using CopyTo, then display the array.&quot;)\n        Dim evidenceArray(myEvidence.Count - 1) As Object\n        myEvidence.CopyTo(evidenceArray, 0)\n        Dim obj As Object\n        For Each obj In evidenceArray\n            Console.WriteLine(obj.ToString())\n        Next obj\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Policy.Evidence#6\">      Console::WriteLine( &quot;<br>Copy the evidence to an array using CopyTo, then display the array.&quot; );\n      array&lt;Object^&gt;^evidenceArray = gcnew array&lt;Object^&gt;(myEvidence-&gt;Count);\n      myEvidence-&gt;CopyTo( evidenceArray, 0 );\n      for each (Object^ obj in evidenceArray)\n      {\n         Console::WriteLine(obj-&gt;ToString());\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Policy.Evidence#6\">        Console.WriteLine(&quot;<br>Copy the evidence to an array using CopyTo, then display the array.&quot;);\n        object[] evidenceArray = new object[myEvidence.Count];\n        myEvidence.CopyTo(evidenceArray, 0);\n        foreach (object obj in evidenceArray)\n        {\n            Console.WriteLine(obj.ToString());\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_Evidence_GetAssemblyEnumerator\">\r\n    \r\n            <a id=\"System_Security_Policy_Evidence_GetAssemblyEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetAssemblyEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Enumerates evidence provided by the assembly.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.IEnumerator GetAssemblyEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></div>\r\n                  </div>\r\n                  <p>An enumerator for evidence added by the <span class=\"xref\">stem.Security.Policy.Evidence.AddAssembly*</span> method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows the use of the GetAssemblyEnumerator method. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Security.Policy.Evidence#3\">            Dim oa1() As [Object]\n            Dim site As New Site(&quot;www.wideworldimporters.com&quot;)\n            Dim oa2 As [Object]() = {url, site}\n            Dim ev3a As New Evidence(oa1, oa2)\n            enum1 = ev3a.GetHostEnumerator()\n            Dim enum2 As IEnumerator = ev3a.GetAssemblyEnumerator()\n            enum2.MoveNext()\n            Dim obj1 As [Object] = enum2.Current\n            enum2.MoveNext()\n            Console.WriteLine((&quot;URL = &quot; &amp; obj1.ToString() &amp; &quot;  Site = &quot; &amp; enum2.Current.ToString()))\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Policy.Evidence#3\">         array&lt;Object^&gt;^oa1 = {};\n         Site^ site = gcnew Site( &quot;www.wideworldimporters.com&quot; );\n         array&lt;Object^&gt;^oa2 = {url,site};\n         Evidence^ ev3a = gcnew Evidence( oa1,oa2 );\n         enum1 = ev3a-&gt;GetHostEnumerator();\n         IEnumerator^ enum2 = ev3a-&gt;GetAssemblyEnumerator();\n         enum2-&gt;MoveNext();\n         Object^ obj1 = enum2-&gt;Current;\n         enum2-&gt;MoveNext();\n         Console::WriteLine( &quot;URL = {0}  Site = {1}&quot;, obj1, enum2-&gt;Current );\n         \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Policy.Evidence#3\">            Object [] oa1 = {};\n            Site site = new Site(&quot;www.wideworldimporters.com&quot;);\n            Object [] oa2 = { url, site };\n            Evidence ev3a = new Evidence(oa1, oa2);\n            enum1 = ev3a.GetHostEnumerator();\n            IEnumerator enum2 = ev3a.GetAssemblyEnumerator();\n            enum2.MoveNext();\n            Object obj1 = enum2.Current;\n            enum2.MoveNext();\n            Console.WriteLine(&quot;URL = &quot; + obj1.ToString() + &quot;  Site = &quot; + enum2.Current.ToString());\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_Evidence_GetAssemblyEvidence__1\">\r\n    \r\n            <a id=\"System_Security_Policy_Evidence_GetAssemblyEvidence_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetAssemblyEvidence&lt;T&gt;()</div>        \r\n          </div>\r\n    \r\n            <p>Gets assembly evidence of the specified type from the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public T GetAssemblyEvidence&lt;T&gt; () where T : System.Security.Policy.EvidenceBase;</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </div>\r\n                  <p>Evidence of type <code>T</code> in the assembly evidence collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method returns only evidence that is derived from the <a class=\"xref\" href=\"system.security.policy.evidencebase\" data-linktype=\"relative-path\">EvidenceBase</a> class. It does not return legacy evidence objects that are derived from other classes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_Evidence_GetEnumerator\">\r\n    \r\n            <a id=\"System_Security_Policy_Evidence_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Enumerates all evidence in the set, both that provided by the host and that provided by the assembly.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.IEnumerator GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></div>\r\n                  </div>\r\n                  <p>An enumerator for evidence added by both the <span class=\"xref\">stem.Security.Policy.Evidence.AddHost*</span> method and the <span class=\"xref\">stem.Security.Policy.Evidence.AddAssembly*</span> method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the GetEnumerator method. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Security.Policy.Evidence#14\">        Dim p As Integer = 0\n        Console.WriteLine(ControlChars.Lf &amp; &quot;Current evidence = &quot;)\n        If myEvidence Is Nothing Then\n            Return 0\n        End If\n        Dim list As IEnumerator = myEvidence.GetEnumerator()\n        Dim obj As Object\n        While list.MoveNext()\n            Console.WriteLine(list.Current.ToString())\n            p = p + 1\n        End While\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Policy.Evidence#14\">      int p = 0;\n      Console::WriteLine( &quot;<br>Current evidence = &quot; );\n      if ( nullptr == myEvidence )\n            return 0;\n\n      IEnumerator^ list = myEvidence-&gt;GetEnumerator();\n      IEnumerator^ myEnum1 = list;\n      while ( myEnum1-&gt;MoveNext() )\n      {\n         Object^ obj = safe_cast&lt;Object^&gt;(myEnum1-&gt;Current);\n         Console::WriteLine( obj );\n         p++;\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Policy.Evidence#14\">        int p = 0;\n        Console.WriteLine(&quot;<br>Current evidence = &quot;);\n        if (null == myEvidence) return 0;\n        IEnumerator list = myEvidence.GetEnumerator();\n        while (list.MoveNext())\n        {\n            Console.WriteLine(list.Current.ToString());\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_Evidence_GetHostEnumerator\">\r\n    \r\n            <a id=\"System_Security_Policy_Evidence_GetHostEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHostEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Enumerates evidence supplied by the host.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.IEnumerator GetHostEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></div>\r\n                  </div>\r\n                  <p>An enumerator for evidence added by the <span class=\"xref\">stem.Security.Policy.Evidence.AddHost*</span> method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows the use of the GetHostEnumerator method. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Security.Policy.Evidence#2\">            Dim url As New Url(&quot;http://www.treyresearch.com&quot;)\n            Console.WriteLine((&quot;Adding host evidence &quot; &amp; url.ToString()))\n            ev2a.AddHost(url)\n            Dim ev2b As New Evidence(ev2a)\n            Console.WriteLine(&quot;Copy evidence into new evidence&quot;)\n            Dim enum1 As IEnumerator = ev2b.GetHostEnumerator()\n            enum1.MoveNext()\n            Console.WriteLine(enum1.Current.ToString())\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Policy.Evidence#2\">         Url^ url = gcnew Url( &quot;http://www.treyresearch.com&quot; );\n         Console::WriteLine( &quot;Adding host evidence {0}&quot;, url );\n         ev2a-&gt;AddHost( url );\n         Evidence^ ev2b = gcnew Evidence( ev2a );\n         Console::WriteLine( &quot;Copy evidence into new evidence&quot; );\n         IEnumerator^ enum1 = ev2b-&gt;GetHostEnumerator();\n         enum1-&gt;MoveNext();\n         Console::WriteLine( enum1-&gt;Current );\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Policy.Evidence#2\">            Url url = new Url(&quot;http://www.treyresearch.com&quot;);\n            Console.WriteLine(&quot;Adding host evidence &quot; + url.ToString());\n            ev2a.AddHost(url);\n            Evidence ev2b = new Evidence(ev2a);\n            Console.WriteLine(&quot;Copy evidence into new evidence&quot;);\n            IEnumerator enum1 = ev2b.GetHostEnumerator();\n            enum1.MoveNext();\n            Console.WriteLine(enum1.Current.ToString());\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_Evidence_GetHostEvidence__1\">\r\n    \r\n            <a id=\"System_Security_Policy_Evidence_GetHostEvidence_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHostEvidence&lt;T&gt;()</div>        \r\n          </div>\r\n    \r\n            <p>Gets host evidence of the specified type from the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public T GetHostEvidence&lt;T&gt; () where T : System.Security.Policy.EvidenceBase;</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </div>\r\n                  <p>Evidence of type <code>T</code> in the host evidence collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method returns only evidence that is derived from the <a class=\"xref\" href=\"system.security.policy.evidencebase\" data-linktype=\"relative-path\">EvidenceBase</a> class. It does not return legacy evidence objects that are derived from other classes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_Evidence_Merge_System_Security_Policy_Evidence_\">\r\n    \r\n            <a id=\"System_Security_Policy_Evidence_Merge_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Merge(Evidence)</div>        \r\n          </div>\r\n    \r\n            <p>Merges the specified evidence set into the current evidence set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Merge (System.Security.Policy.Evidence evidence);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>evidence</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The evidence set to be merged into the current evidence set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>evidence</code> parameter is not a valid instance of <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Security.Policy.Evidence.Locked*</span> is <code>true</code>, the code that calls this method does not have <a class=\"xref\" href=\"system.security.permissions.securitypermissionflag\" data-linktype=\"relative-path\">SecurityPermissionFlag</a>, and the <code>evidence</code> parameter has a host list that is not empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Each evidence object in the specified evidence set is added to the assembly and host sets of the current evidence set, according to the sets from which it came.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method does not perform a check to prevent adding duplicate types of evidence. Many assembly and host evidence objects can exist at the same time.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the Merge method. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Security.Policy.Evidence#10\">        Console.WriteLine(ControlChars.Lf &amp; &quot;Merge new evidence with the current evidence.&quot;)\n        Dim oa1() As [Object]\n        Dim site As New Site(&quot;www.wideworldimporters.com&quot;)\n        Dim oa2 As [Object]() = {url, site}\n        Dim newEvidence As New Evidence(oa1, oa2)\n        myEvidence.Merge(newEvidence)\n\n        Console.WriteLine((&quot;Evidence count = &quot; &amp; PrintEvidence(myEvidence).ToString()))\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Policy.Evidence#10\">      Console::WriteLine( &quot;<br>Merge new evidence with the current evidence.&quot; );\n      array&lt;Object^&gt;^oa1 = {};\n      Site^ site = gcnew Site( &quot;www.wideworldimporters.com&quot; );\n      array&lt;Object^&gt;^oa2 = {url,site};\n      Evidence^ newEvidence = gcnew Evidence( oa1,oa2 );\n      myEvidence-&gt;Merge( newEvidence );\n      Console::WriteLine( &quot;Evidence count = {0}&quot;, PrintEvidence( myEvidence ) );\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Policy.Evidence#10\">        Console.WriteLine(&quot;<br>Merge new evidence with the current evidence.&quot;);\n        Object [] oa1 = {};\n        Site site = new Site(&quot;www.wideworldimporters.com&quot;);\n        Object [] oa2 = { url, site };\n        Evidence newEvidence = new Evidence(oa1, oa2);\n        myEvidence.Merge(newEvidence);\n        Console.WriteLine(&quot;Evidence count = &quot; + PrintEvidence(myEvidence).ToString());\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_Evidence_RemoveType_System_Type_\">\r\n    \r\n            <a id=\"System_Security_Policy_Evidence_RemoveType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveType(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the evidence for a given type from the host and assembly enumerations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RemoveType (Type t);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>t</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the evidence to be removed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>t</code> is null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The results of executing the RemoveType method can be confirmed using the <a class=\"xref\" href=\"system.security.policy.evidence#System_Security_Policy_Evidence_GetAssemblyEnumerator_\" data-linktype=\"relative-path\">GetAssemblyEnumerator</a> method and the <a class=\"xref\" href=\"system.security.policy.evidence#System_Security_Policy_Evidence_GetHostEnumerator_\" data-linktype=\"relative-path\">GetHostEnumerator</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the RemoveType method. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Security.Policy.Evidence#11\">        Console.WriteLine(ControlChars.Lf &amp; &quot;Remove URL evidence.&quot;)\n        myEvidence.RemoveType(url.GetType())\n        Console.WriteLine((&quot;Evidence count is now: &quot; &amp; myEvidence.Count.ToString()))\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Policy.Evidence#11\">      Console::WriteLine( &quot;<br>Remove URL evidence.&quot; );\n      myEvidence-&gt;RemoveType( url-&gt;GetType() );\n      Console::WriteLine( &quot;Evidence count is now: {0}&quot;, myEvidence-&gt;Count );\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Policy.Evidence#11\">        Console.WriteLine(&quot;<br>Remove URL evidence.&quot;);\n        myEvidence.RemoveType(url.GetType());\n        Console.WriteLine(&quot;Evidence count is now: &quot; + myEvidence.Count.ToString());\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Policy.Evidence.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Policy.Evidence.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.AddAssembly\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.AddAssemblyEvidence&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.AddHost\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.AddHostEvidence&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.Clear\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.Clone\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.CopyTo\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.Count\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.GetAssemblyEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.GetAssemblyEvidence&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.GetHostEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.GetHostEvidence&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.IsReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.IsSynchronized\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.Locked\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.Merge\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.RemoveType\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.Evidence.SyncRoot\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"8b2c483e-d039-e7c7-c0be-2644c8e28979\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines the set of information that constitutes input to security policy decisions. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Policy/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Policy.Evidence\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Policy.Evidence.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Policy.Evidence.yml","open_to_public_contributors":true,"api_name":["System.Security.Policy.Evidence","System.Security.Policy.Evidence..ctor","System.Security.Policy.Evidence.AddAssembly","System.Security.Policy.Evidence.AddAssemblyEvidence<T>","System.Security.Policy.Evidence.AddHost","System.Security.Policy.Evidence.AddHostEvidence<T>","System.Security.Policy.Evidence.Clear","System.Security.Policy.Evidence.Clone","System.Security.Policy.Evidence.CopyTo","System.Security.Policy.Evidence.Count","System.Security.Policy.Evidence.GetAssemblyEnumerator","System.Security.Policy.Evidence.GetAssemblyEvidence<T>","System.Security.Policy.Evidence.GetEnumerator","System.Security.Policy.Evidence.GetHostEnumerator","System.Security.Policy.Evidence.GetHostEvidence<T>","System.Security.Policy.Evidence.IsReadOnly","System.Security.Policy.Evidence.IsSynchronized","System.Security.Policy.Evidence.Locked","System.Security.Policy.Evidence.Merge","System.Security.Policy.Evidence.RemoveType","System.Security.Policy.Evidence.SyncRoot"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Policy.Evidence","System::Security::Policy::Evidence","System.Security.Policy.Evidence.#ctor","System::Security::Policy::Evidence::#ctor","System.Security.Policy.Evidence.AddAssembly","System::Security::Policy::Evidence::AddAssembly","System.Security.Policy.Evidence.AddAssemblyEvidence``1","System::Security::Policy::Evidence::AddAssemblyEvidence``1","System.Security.Policy.Evidence.AddHost","System::Security::Policy::Evidence::AddHost","System.Security.Policy.Evidence.AddHostEvidence``1","System::Security::Policy::Evidence::AddHostEvidence``1","System.Security.Policy.Evidence.Clear","System::Security::Policy::Evidence::Clear","System.Security.Policy.Evidence.Clone","System::Security::Policy::Evidence::Clone","System.Security.Policy.Evidence.CopyTo","System::Security::Policy::Evidence::CopyTo","System.Security.Policy.Evidence.Count","System::Security::Policy::Evidence::Count","System.Security.Policy.Evidence.GetAssemblyEnumerator","System::Security::Policy::Evidence::GetAssemblyEnumerator","System.Security.Policy.Evidence.GetAssemblyEvidence``1","System::Security::Policy::Evidence::GetAssemblyEvidence``1","System.Security.Policy.Evidence.GetEnumerator","System::Security::Policy::Evidence::GetEnumerator","System.Security.Policy.Evidence.GetHostEnumerator","System::Security::Policy::Evidence::GetHostEnumerator","System.Security.Policy.Evidence.GetHostEvidence``1","System::Security::Policy::Evidence::GetHostEvidence``1","System.Security.Policy.Evidence.IsReadOnly","System::Security::Policy::Evidence::IsReadOnly","System.Security.Policy.Evidence.IsSynchronized","System::Security::Policy::Evidence::IsSynchronized","System.Security.Policy.Evidence.Locked","System::Security::Policy::Evidence::Locked","System.Security.Policy.Evidence.Merge","System::Security::Policy::Evidence::Merge","System.Security.Policy.Evidence.RemoveType","System::Security::Policy::Evidence::RemoveType","System.Security.Policy.Evidence.SyncRoot","System::Security::Policy::Evidence::SyncRoot"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"8b2c483e-d039-e7c7-c0be-2644c8e28979","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Policy/Evidence.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Evidence class | Microsoft Docs","_op_ogTitle":"Evidence class","description":"Defines the set of information that constitutes input to security policy decisions. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Security.Policy/toc.json","toc_rel":"_splitted/System.Security.Policy/toc.json","source_url":"","ms.assetid":"System.Security.Policy.Evidence","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.policy.evidence","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.policy.evidence","fileRelativePath":"System.Security.Policy.Evidence.html"},"themesRelativePathToOutputRoot":"_themes/"}