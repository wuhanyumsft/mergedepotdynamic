{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ICustomFormatter</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines a method that supports custom formatting of the value of an object.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic interface ICustomFormatter</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The ICustomFormatter interface includes a single method, <a class=\"xref\" href=\"system.icustomformatter#System_ICustomFormatter_Format_\" data-linktype=\"relative-path\">Format</a>. When this interface is implemented by a reference or value type, the <a class=\"xref\" href=\"system.icustomformatter#System_ICustomFormatter_Format_\" data-linktype=\"relative-path\">Format</a> method returns a custom-formatted string representation of an object&#39;s value.  </p>\n<p> Typically, the ICustomFormatter interface is implemented with the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> interface to customize the behavior of two .NET Framework composite string formatting methods that include an <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> parameter. Specifically, the ICustomFormatter interface can provide custom formatting of the value of an object passed to the [String.Format(IFormatProvider, String, Object&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt; and [StringBuilder.AppendFormat(IFormatProvider, String, Object&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt; methods.  </p>\n<p> Providing a custom representation of an object&#39;s value requires that you do the following:  </p>\n<ol>\n<li><p>Define a class that implements the ICustomFormatter interface and its single member, the <a class=\"xref\" href=\"system.icustomformatter#System_ICustomFormatter_Format_\" data-linktype=\"relative-path\">Format</a> method.  </p>\n</li>\n<li><p>Define a class that implements the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> interface and its single member, the <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method. The <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method returns an instance of your ICustomFormatter implementation. Often, a single class implements both ICustomFormatter and <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a>. In that case, the class&#39;s <code>GetFormat</code> implementation just returns an instance of itself.  </p>\n</li>\n<li><p>Pass the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation as the <code>provider</code> argument of the [String.Format(IFormatProvider, String, Object&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt; method or a comparable method.  </p>\n<p>The .NET Framework method will then use your custom formatting instead of its own.</p>\n</li>\n</ol>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ICustomFormatter_Format_System_String_System_Object_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Format(String,Object,IFormatProvider)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the value of a specified object to an equivalent string representation using specified format and culture-specific formatting information.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Format (string format, object arg, IFormatProvider formatProvider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>format</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A format string containing formatting specifications.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>arg</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object to format.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>formatProvider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that supplies format information about the current instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string representation of the value of <code>arg</code>, formatted as specified by <code>format</code> and <code>formatProvider</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Format is a callback method. It is called by a method that supports custom formatting, such as [String.Format(IFormatProvider, String, Object&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt; or [StringBuilder.AppendFormat(IFormatProvider, String, Object&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt;. The implementation is called once for each format item in a <a href=\"../Topic/Composite%20Formatting.md\" data-linktype=\"relative-path\">composite format string</a>. For example, in the following statement, the Format method is called three times.  </p>\n<pre><code class=\"lang-vb\" name=\"System.ICustomFormatter.Class#4\">      Console.WriteLine(String.Format(New BinaryFormatter(), _\n                                      &quot;{0} (binary: {0:B}) (hex: {0:H})&quot;, byteValue))\n</code></pre><pre><code class=\"lang-cs\" name=\"System.ICustomFormatter.Class#4\">      Console.WriteLine(String.Format(new BinaryFormatter(), \n                                      &quot;{0} (binary: {0:B}) (hex: {0:H})&quot;, byteValue));\n</code></pre><p> The <code>arg</code> parameter is the object in the object list whose zero-based position corresponds to the index of a particular format item.  </p>\n<p> The <code>format</code> parameter contains a format string, which is the <code>formatString</code> component of a format item. If the format item has no <code>formatString</code> component, the value of <code>format</code> is <code>null</code>. If <code>format</code> is <code>null</code>, depending on the type of <code>arg</code>, you may be able to use the default format specification of your choice.  </p>\n<p> The <code>formatProvider</code> parameter is the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation that provides formatting for <code>arg</code>. Typically, it is an instance of your <a class=\"xref\" href=\"system.icustomformatter\" data-linktype=\"relative-path\">ICustomFormatter</a> implementation. If <code>formatProvider</code> is <code>null</code>, ignore that parameter.  </p>\n<p> Your implementation of the Format method must include the following functionality so the .NET Framework can provide formatting you do not support. If your format method does not support a format, determine whether the object being formatted implements the <a class=\"xref\" href=\"system.iformattable\" data-linktype=\"relative-path\">IFormattable</a> interface. If it does, invoke the <a class=\"xref\" href=\"system.iformattable#System_IFormattable_ToString_\" data-linktype=\"relative-path\">ToString</a> method of that interface. Otherwise, invoke the default <a class=\"xref\" href=\"system.object#System_Object_ToString_\" data-linktype=\"relative-path\">ToString</a> method of the underlying object. The following code illustrates this pattern.  </p>\n<pre><code class=\"lang-vb\" name=\"System.ICustomFormatter.Class#3\">      If TypeOf arg Is IFormattable Then\n         Return DirectCast(arg, IFormattable).ToString(fmt, CultureInfo.CurrentCulture)\n      ElseIf arg IsNot Nothing Then\n         Return arg.ToString()\n</code></pre><pre><code class=\"lang-cs\" name=\"System.ICustomFormatter.Class#3\">      if (arg is IFormattable) \n         return ((IFormattable)arg).ToString(format, CultureInfo.CurrentCulture);\n      else if (arg != null)\n         return arg.ToString();\n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ICustomFormatter.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ICustomFormatter.yml\">\r\n<meta name=\"APIName\" content=\"System.ICustomFormatter\">\r\n<meta name=\"APIName\" content=\"System.ICustomFormatter.Format\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"ff869945-498e-c497-f8c6-d5d16f34266d\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines a method that supports custom formatting of the value of an object.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ICustomFormatter\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ICustomFormatter.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ICustomFormatter.yml","open_to_public_contributors":true,"api_name":["System.ICustomFormatter","System.ICustomFormatter.Format"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ICustomFormatter","System::ICustomFormatter","System.ICustomFormatter.Format","System::ICustomFormatter::Format"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"ff869945-498e-c497-f8c6-d5d16f34266d","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System/ICustomFormatter.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ICustomFormatter interface | Microsoft Docs","_op_ogTitle":"ICustomFormatter interface","description":"Defines a method that supports custom formatting of the value of an object.\n","toc_asset_id":"_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.ICustomFormatter","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.icustomformatter","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.icustomformatter","fileRelativePath":"System.ICustomFormatter.html"},"themesRelativePathToOutputRoot":"_themes/"}